fifo write: @1699477098947893571 0x7f81e884cbfd 1: _linkToNative
fifo write: @1699477098947909321 0x7f81e884cb6e 143: _linkToInterface
fifo write: @1699477098947922571 0x7f81e884cb3f 47: _linkToSpecial
fifo write: @1699477098947935571 0x7f81e884cb1d 34: _linkToStatic
fifo write: @1699477098947948871 0x7f81e884cad6 71: _linkToVirtual
fifo write: @1699477098947962102 0x7f81e884ca81 85: _invokeBasic
fifo write: @1699477098947974872 0x7f81e884ca80 1: _invokeGeneric
fifo write: @1699477098947987762 0x7f81e8856300 404: vectorizedMismatch
fifo write: @1699477098948000682 0x7f81e8856200 247: mulAdd
fifo write: @1699477098948015222 0x7f81e88560c0 289: squareToLen
fifo write: @1699477098948028012 0x7f81e8855e80 559: multiplyToLen
fifo write: @1699477098948040553 0x7f81e88559e0 1162: ghash_processBlocks
fifo write: @1699477098948053133 0x7f81e88559c0 16: _ghash_poly_addr
fifo write: @1699477098948063343 0x7f81e88559a0 16: _ghash_shuffmask_addr
fifo write: @1699477098948073343 0x7f81e8855980 16: ghash_byte_swap_mask
fifo write: @1699477098948083473 0x7f81e8855960 16: ghash_long_swap_mask
fifo write: @1699477098948093503 0x7f81e8854b00 3654: sha512_implCompressMB
fifo write: @1699477098948104023 0x7f81e8853ce0 3605: sha512_implCompress
fifo write: @1699477098948114214 0x7f81e8853ca0 64: pshuffle_byte_flip_mask_sha512
fifo write: @1699477098948124184 0x7f81e8853920 833: sha256_implCompressMB
fifo write: @1699477098948134284 0x7f81e88535e0 813: sha256_implCompress
fifo write: @1699477098948144334 0x7f81e8853580 96: pshuffle_byte_flip_mask
fifo write: @1699477098948154324 0x7f81e88532c0 607: sha1_implCompressMB
fifo write: @1699477098948164334 0x7f81e8853060 587: sha1_implCompress
fifo write: @1699477098948174284 0x7f81e8853040 16: shuffle_byte_flip_mask
fifo write: @1699477098948184234 0x7f81e8852fc0 16: upper_word_mask
fifo write: @1699477098948194195 0x7f81e88528a0 1734: md5_implCompressMB
fifo write: @1699477098948204335 0x7f81e88521e0 1700: md5_implCompress
fifo write: @1699477098948214325 0x7f81e8850fe0 4593: counterMode_AESCrypt
fifo write: @1699477098948224405 0x7f81e8850fd0 16: counter_shuffle_mask
fifo write: @1699477098948234495 0x7f81e8850800 1993: cipherBlockChaining_decryptAESCrypt
fifo write: @1699477098948244645 0x7f81e88505c0 552: cipherBlockChaining_encryptAESCrypt
fifo write: @1699477098948257915 0x7f81e88504a0 282: aescrypt_decryptBlock
fifo write: @1699477098948267895 0x7f81e8850380 282: aescrypt_encryptBlock
fifo write: @1699477098948278056 0x7f81e8850370 16: key_shuffle_mask
fifo write: @1699477098948288236 0x7f81e8850300 110: arrayof_jint_fill
fifo write: @1699477098948298356 0x7f81e8850260 141: arrayof_jshort_fill
fifo write: @1699477098948308426 0x7f81e88501a0 172: arrayof_jbyte_fill
fifo write: @1699477098948318436 0x7f81e8850120 110: jint_fill
fifo write: @1699477098948328456 0x7f81e8850080 141: jshort_fill
fifo write: @1699477098948338396 0x7f81e884ffc0 172: jbyte_fill
fifo write: @1699477098948348417 0x7f81e884fdbb 489: generic_arraycopy
fifo write: @1699477098948358627 0x7f81e884fd80 58: unsafe_arraycopy
fifo write: @1699477098948368697 0x7f81e884fbe0 402: checkcast_arraycopy_uninit
fifo write: @1699477098948378687 0x7f81e884f960 610: checkcast_arraycopy
fifo write: @1699477098948388617 0x7f81e884f7e0 369: oop_arraycopy_uninit
fifo write: @1699477098948398687 0x7f81e884f680 347: oop_disjoint_arraycopy_uninit
fifo write: @1699477098948408857 0x7f81e884f420 577: oop_arraycopy
fifo write: @1699477098948418827 0x7f81e884f1e0 571: oop_disjoint_arraycopy
fifo write: @1699477098948428928 0x7f81e884f140 134: jlong_arraycopy
fifo write: @1699477098948438978 0x7f81e884f0c0 122: jlong_disjoint_arraycopy
fifo write: @1699477098948448908 0x7f81e884f020 150: jint_arraycopy
fifo write: @1699477098948458988 0x7f81e884ef80 148: jint_disjoint_arraycopy
fifo write: @1699477098948469178 0x7f81e884eec0 182: jshort_arraycopy
fifo write: @1699477098948479428 0x7f81e884ee00 168: jshort_disjoint_arraycopy
fifo write: @1699477098948489478 0x7f81e884ed20 198: jbyte_arraycopy
fifo write: @1699477098948499408 0x7f81e884ec60 187: jbyte_disjoint_arraycopy
fifo write: @1699477098948509369 0x7f81e884ec40 18: _data_cache_writeback_sync
fifo write: @1699477098948519429 0x7f81e884ec20 10: _data_cache_writeback
fifo write: @1699477098948529429 0x7f81e884ebe0 64: iota_indices
fifo write: @1699477098948549499 0x7f81e884eba0 64: vector_long_sign_mask
fifo write: @1699477098948559599 0x7f81e884eb60 64: vector_long_shuffle_mask
fifo write: @1699477098948569719 0x7f81e884eb20 64: vector_short_shuffle_mask
fifo write: @1699477098948580210 0x7f81e884eb00 32: vector_byte_shuffle_mask
fifo write: @1699477098948590260 0x7f81e884eac0 64: vector_int_shuffle_mask
fifo write: @1699477098948600340 0x7f81e884ea80 64: vector_64_bit_mask
fifo write: @1699477098948610380 0x7f81e884ea40 64: vector_32_bit_mask
fifo write: @1699477098948620740 0x7f81e884ea00 64: vector_int_to_short_mask
fifo write: @1699477098948630540 0x7f81e884e9c0 64: vector_int_to_byte_mask
fifo write: @1699477098948641800 0x7f81e884e980 64: vector_byte_perm_mask
fifo write: @1699477098948652250 0x7f81e884e940 64: vector_short_to_byte_mask
fifo write: @1699477098948662541 0x7f81e884e900 64: vector_all_bits_set
fifo write: @1699477098948672731 0x7f81e884e8c0 64: vector_double_sign_flip
fifo write: @1699477098948683191 0x7f81e884e880 64: vector_double_sign_mask
fifo write: @1699477098948693541 0x7f81e884e840 64: vector_float_sign_flip
fifo write: @1699477098948703731 0x7f81e884e800 64: vector_float_sign_mask
fifo write: @1699477098948713881 0x7f81e881f200 226: getCPUIDNameInfo_stub
fifo write: @1699477098948724171 0x7f81e881acf2 2127: libmTan
fifo write: @1699477098948734692 0x7f81e881a67a 1656: libmCos
fifo write: @1699477098948744972 0x7f81e8819fe4 1686: libmSin
fifo write: @1699477098948755202 0x7f81e8818eac 4408: libmPow
fifo write: @1699477098948765432 0x7f81e8818bfd 687: libmLog10
fifo write: @1699477098948775592 0x7f81e8818986 631: libmLog
fifo write: @1699477098948786042 0x7f81e881865e 808: libmExp
fifo write: @1699477098948796532 0x7f81e8818420 574: updateBytesAdler32
fifo write: @1699477098948807252 0x7f81e88181a0 612: updateBytesCRC32C
fifo write: @1699477098948817703 0x7f81e8817f20 633: updateBytesCRC32
fifo write: @1699477098948827943 0x7f81e8817f00 16: double_sign_flip
fifo write: @1699477098948838123 0x7f81e8817ee0 16: double_sign_mask
fifo write: @1699477098948848443 0x7f81e8817ec0 16: float_sign_flip
fifo write: @1699477098948858753 0x7f81e8817ea0 16: float_sign_mask
fifo write: @1699477098948869083 0x7f81e8817e27 90: d2l_fixup
fifo write: @1699477098948879643 0x7f81e8817dd7 80: d2i_fixup
fifo write: @1699477098948890274 0x7f81e8817d94 67: f2l_fixup
fifo write: @1699477098948900464 0x7f81e8817d5c 56: f2i_fixup
fifo write: @1699477098948911364 0x7f81e8817d5b 1: verify_mxcsr
fifo write: @1699477098948921594 0x7f81e8817d53 8: get_previous_sp
fifo write: @1699477098948931784 0x7f81e8817d4c 7: orderaccess_fence
fifo write: @1699477098948942344 0x7f81e8817d2d 31: catch_exception
fifo write: @1699477098948952794 0x7f81e8817c3f 238: call_stub
fifo write: @1699477098948963284 0x7f81e8817c00 63: forward exception
fifo write: @1699477098948973625 0x7f81e8817724 26: detect_virt_stub
fifo write: @1699477098948983955 0x7f81e8817380 932: get_cpu_info_stub
fifo write: @1699477098948994395 0x7f81e8817080 29: flush_icache_stub
fifo write: @1699477098949004565 0x7f81e89b4c40 27: vtable stub
fifo write: @1699477098949015055 0x7f81e89b4c70 27: vtable stub
fifo write: @1699477098949025135 0x7f81e89b4c10 27: vtable stub
fifo write: @1699477098949035545 0x7f81e89b4be0 27: vtable stub
fifo write: @1699477098949045746 0x7f81e89b4b90 27: vtable stub
fifo write: @1699477098949055996 0x7f81e881f580 96: StackOverflowError throw_exception
fifo write: @1699477098949066986 0x7f81e881f880 96: delayed StackOverflowError throw_exception
fifo write: @1699477098949077076 0x7f81e881fb80 97248: Interpreter
fifo write: @1699477098949087716 0x7f81e8837800 432: I2C/C2I adapters
fifo write: @1699477098949098106 0x7f81e8837d00 440: I2C/C2I adapters
fifo write: @1699477098949108236 0x7f81e8838000 432: I2C/C2I adapters
fifo write: @1699477098949118476 0x7f81e8838300 432: I2C/C2I adapters
fifo write: @1699477098949439571 0x7f81e8838600 432: I2C/C2I adapters
fifo write: @1699477098949450161 0x7f81e8838900 440: I2C/C2I adapters
fifo write: @1699477098949460411 0x7f81e8838c00 440: I2C/C2I adapters
fifo write: @1699477098949471191 0x7f81e8838f00 432: I2C/C2I adapters
fifo write: @1699477098949481501 0x7f81e8839200 424: I2C/C2I adapters
fifo write: @1699477098949491781 0x7f81e8839500 424: I2C/C2I adapters
fifo write: @1699477098949502011 0x7f81e8839800 432: I2C/C2I adapters
fifo write: @1699477098949512402 0x7f81e8839b00 432: I2C/C2I adapters
fifo write: @1699477098949522812 0x7f81e8839e00 808: I2C/C2I adapters
fifo write: @1699477098949533082 0x7f81e883a200 752: I2C/C2I adapters
fifo write: @1699477098949543282 0x7f81e883a580 696: I2C/C2I adapters
fifo write: @1699477098949553722 0x7f81e883a900 648: I2C/C2I adapters
fifo write: @1699477098949564352 0x7f81e883ac80 592: I2C/C2I adapters
fifo write: @1699477098949574572 0x7f81e883af80 424: I2C/C2I adapters
fifo write: @1699477098949584562 0x7f81e883b280 432: I2C/C2I adapters
fifo write: @1699477098949594693 0x7f81e883b580 456: I2C/C2I adapters
fifo write: @1699477098949604763 0x7f81e883b880 480: I2C/C2I adapters
fifo write: @1699477098949614773 0x7f81e883bb80 480: I2C/C2I adapters
fifo write: @1699477098949624913 0x7f81e883be80 456: I2C/C2I adapters
fifo write: @1699477098949634873 0x7f81e883c180 440: I2C/C2I adapters
fifo write: @1699477098949645013 0x7f81e883c480 456: I2C/C2I adapters
fifo write: @1699477098949654993 0x7f81e883c780 464: I2C/C2I adapters
fifo write: @1699477098949665004 0x7f81e883ca80 456: I2C/C2I adapters
fifo write: @1699477098949674994 0x7f81e883cd80 448: I2C/C2I adapters
fifo write: @1699477098949685104 0x7f81e883d080 464: I2C/C2I adapters
fifo write: @1699477098949695164 0x7f81e883d380 464: I2C/C2I adapters
fifo write: @1699477098949705154 0x7f81e883d680 440: I2C/C2I adapters
fifo write: @1699477098949715114 0x7f81e883d980 448: I2C/C2I adapters
fifo write: @1699477098949725044 0x7f81e883dc80 448: I2C/C2I adapters
fifo write: @1699477098949735034 0x7f81e883df80 432: I2C/C2I adapters
fifo write: @1699477098949745095 0x7f81e883e280 520: I2C/C2I adapters
fifo write: @1699477098949755145 0x7f81e883e580 592: I2C/C2I adapters
fifo write: @1699477098949765205 0x7f81e883e880 448: I2C/C2I adapters
fifo write: @1699477098949775195 0x7f81e883eb80 544: I2C/C2I adapters
fifo write: @1699477098949785125 0x7f81e883ee80 504: I2C/C2I adapters
fifo write: @1699477098949795205 0x7f81e883f180 488: I2C/C2I adapters
fifo write: @1699477098949805355 0x7f81e883f480 448: I2C/C2I adapters
fifo write: @1699477098949815325 0x7f81e883f780 448: I2C/C2I adapters
fifo write: @1699477098949825406 0x7f81e883fa80 456: I2C/C2I adapters
fifo write: @1699477098949835376 0x7f81e883fd80 464: I2C/C2I adapters
fifo write: @1699477098949845356 0x7f81e8840080 456: I2C/C2I adapters
fifo write: @1699477098949855356 0x7f81e8840380 488: I2C/C2I adapters
fifo write: @1699477098949865386 0x7f81e8840680 424: I2C/C2I adapters
fifo write: @1699477098949875336 0x7f81e8840980 440: I2C/C2I adapters
fifo write: @1699477098949885336 0x7f81e8840c80 448: I2C/C2I adapters
fifo write: @1699477098949895247 0x7f81e8840f80 448: I2C/C2I adapters
fifo write: @1699477098949905267 0x7f81e8841280 1024: Signature Handler Temp Buffer
fifo write: @1699477098949915267 0x7f81e8841700 32768: native signature handlers
fifo write: @1699477098949925527 0x7f81e8849780 440: I2C/C2I adapters
fifo write: @1699477098949935497 0x7f81e8849a80 448: I2C/C2I adapters
fifo write: @1699477098949945397 0x7f81e8849d80 448: I2C/C2I adapters
fifo write: @1699477098949955247 0x7f81e884a080 416: I2C/C2I adapters
fifo write: @1699477098949970387 0x7f81e884a380 416: I2C/C2I adapters
fifo write: @1699477098949980398 0x7f81e884a680 416: I2C/C2I adapters
fifo write: @1699477098949990378 0x7f81e884a980 424: I2C/C2I adapters
fifo write: @1699477098950000318 0x7f81e884ac80 432: I2C/C2I adapters
fifo write: @1699477098950010498 0x7f81e884af80 440: I2C/C2I adapters
fifo write: @1699477098950020608 0x7f81e884b280 432: I2C/C2I adapters
fifo write: @1699477098950030498 0x7f81e884b580 432: I2C/C2I adapters
fifo write: @1699477098950040458 0x7f81e884b880 456: I2C/C2I adapters
fifo write: @1699477098950050569 0x7f81e884bb80 456: I2C/C2I adapters
fifo write: @1699477098950060619 0x7f81e884be80 448: I2C/C2I adapters
fifo write: @1699477098950070869 0x7f81e884c180 456: I2C/C2I adapters
fifo write: @1699477098950080959 0x7f81e884c480 448: I2C/C2I adapters
fifo write: @1699477098950091229 0x7f81e884c780 432: I2C/C2I adapters
fifo write: @1699477098950101419 0x7f81e884db80 96: NullPointerException at call throw_exception
fifo write: @1699477098950111549 0x7f81e884de80 96: IncompatibleClassChangeError throw_exception
fifo write: @1699477098950121719 0x7f81e884e180 96: AbstractMethodError throw_exception
fifo write: @1699477098950131960 0x7f81e884e480 424: I2C/C2I adapters
fifo write: @1699477098950142220 0x7f81e885d480 464: I2C/C2I adapters
fifo write: @1699477098950152280 0x7f81e885d780 464: I2C/C2I adapters
fifo write: @1699477098950162330 0x7f81e885da80 456: I2C/C2I adapters
fifo write: @1699477098950172450 0x7f81e885dd80 520: I2C/C2I adapters
fifo write: @1699477098950182580 0x7f81e885e080 440: I2C/C2I adapters
fifo write: @1699477098950192890 0x7f81e885e380 464: I2C/C2I adapters
fifo write: @1699477098950202920 0x7f81e885e680 536: I2C/C2I adapters
fifo write: @1699477098950213081 0x7f81e885e980 448: I2C/C2I adapters
fifo write: @1699477098950223151 0x7f81e885ec80 440: I2C/C2I adapters
fifo write: @1699477098950233211 0x7f81e885ef80 440: I2C/C2I adapters
fifo write: @1699477098950243441 0x7f81e885f280 456: I2C/C2I adapters
fifo write: @1699477098950253501 0x7f81e885f580 432: I2C/C2I adapters
fifo write: @1699477098950263501 0x7f81e885f880 488: I2C/C2I adapters
fifo write: @1699477098950273621 0x7f81e885fb80 456: I2C/C2I adapters
fifo write: @1699477098950283892 0x7f81e885fe80 448: I2C/C2I adapters
fifo write: @1699477098950294072 0x7f81e8860180 448: I2C/C2I adapters
fifo write: @1699477098950304142 0x7f81e8860480 464: I2C/C2I adapters
fifo write: @1699477098950314392 0x7f81e8860780 456: I2C/C2I adapters
fifo write: @1699477098950324392 0x7f81e8860a80 488: I2C/C2I adapters
fifo write: @1699477098950334532 0x7f81e8860d80 496: I2C/C2I adapters
fifo write: @1699477098950344712 0x7f81e8861080 424: I2C/C2I adapters
fifo write: @1699477098950355382 0x7f81e8861380 440: I2C/C2I adapters
fifo write: @1699477098950365513 0x7f81e8861680 560: I2C/C2I adapters
fifo write: @1699477098950375863 0x7f81e8861980 480: I2C/C2I adapters
fifo write: @1699477098950385943 0x7f81e8861c80 424: I2C/C2I adapters
fifo write: @1699477098950396053 0x7f81e8861f80 432: I2C/C2I adapters
fifo write: @1699477098950406083 0x7f81e8862280 456: I2C/C2I adapters
fifo write: @1699477098950416193 0x7f81e8862580 456: I2C/C2I adapters
fifo write: @1699477098950426263 0x7f81e8862880 456: I2C/C2I adapters
fifo write: @1699477098950436403 0x7f81e8862b80 432: I2C/C2I adapters
fifo write: @1699477098950446584 0x7f81e8862e80 448: I2C/C2I adapters
fifo write: @1699477098950457164 0x7f81e8863180 448: I2C/C2I adapters
fifo write: @1699477098950467164 0x7f81e8863480 448: I2C/C2I adapters
fifo write: @1699477098950477364 0x7f81e8863780 448: I2C/C2I adapters
fifo write: @1699477098950487444 0x7f81e8863a80 432: I2C/C2I adapters
fifo write: @1699477098950497694 0x7f81e8863d80 448: I2C/C2I adapters
fifo write: @1699477098950507864 0x7f81e8864080 456: I2C/C2I adapters
fifo write: @1699477098950518055 0x7f81e8864380 456: I2C/C2I adapters
fifo write: @1699477098950528165 0x7f81e8864680 432: I2C/C2I adapters
fifo write: @1699477098950538305 0x7f81e8864980 10240: InlineCacheBuffer
fifo write: @1699477098950548325 0x7f81e8867200 408: I2C/C2I adapters
fifo write: @1699477098950558335 0x7f81e8867780 424: wrong_method_stub
fifo write: @1699477098950569835 0x7f81e8867a80 424: wrong_method_abstract_stub
fifo write: @1699477098950579905 0x7f81e8867d80 424: ic_miss_stub
fifo write: @1699477098950590095 0x7f81e8868080 424: resolve_opt_virtual_call
fifo write: @1699477098950600216 0x7f81e8868380 424: resolve_virtual_call
fifo write: @1699477098950626086 0x7f81e8868680 424: resolve_static_call
fifo write: @1699477098950636606 0x7f81e8868980 16384: adapters
fifo write: @1699477098950646816 0x7f81e886ca00 416: I2C/C2I adapters
fifo write: @1699477098950657086 0x7f81e886cd00 416: I2C/C2I adapters
fifo write: @1699477098950667566 0x7f81e886d000 424: I2C/C2I adapters
fifo write: @1699477098950677657 0x7f81e886d300 424: I2C/C2I adapters
fifo write: @1699477098950687717 0x7f81e886d600 248: UncommonTrapBlob
fifo write: @1699477098950697787 0x7f81e886d9a0 1288: DeoptimizationBlob
fifo write: @1699477098950707917 0x7f81e886df80 968: SafepointBlob
fifo write: @1699477098950718237 0x7f81e886e400 440: SafepointBlob
fifo write: @1699477098950728397 0x7f81e886e700 376: SafepointBlob
fifo write: @1699477098950738597 0x7f81e886ea00 464: I2C/C2I adapters
fifo write: @1699477098950748738 0x7f81e886ef80 432: I2C/C2I adapters
fifo write: @1699477098950758878 0x7f81e886f280 424: I2C/C2I adapters
fifo write: @1699477098950768918 0x7f81e886f580 456: I2C/C2I adapters
fifo write: @1699477098950778918 0x7f81e886f880 456: I2C/C2I adapters
fifo write: @1699477098950788918 0x7f81e886fb80 456: I2C/C2I adapters
fifo write: @1699477098950798998 0x7f81e886fe80 432: I2C/C2I adapters
fifo write: @1699477098950808968 0x7f81e8870180 440: I2C/C2I adapters
fifo write: @1699477098950818968 0x7f81e8870480 456: I2C/C2I adapters
fifo write: @1699477098950828999 0x7f81e8870780 440: I2C/C2I adapters
fifo write: @1699477098950839269 0x7f81e8870a80 520: I2C/C2I adapters
fifo write: @1699477098950849419 0x7f81e8870d80 464: I2C/C2I adapters
fifo write: @1699477098950859779 0x7f81e8871080 440: I2C/C2I adapters
fifo write: @1699477098950870259 0x7f81e8871380 432: I2C/C2I adapters
fifo write: @1699477098950880349 0x7f81e8871680 432: I2C/C2I adapters
fifo write: @1699477098950890429 0x7f81e8871980 448: I2C/C2I adapters
fifo write: @1699477098950900619 0x7f81e8871c80 448: I2C/C2I adapters
fifo write: @1699477098950910790 0x7f81e8871f80 432: I2C/C2I adapters
fifo write: @1699477098950921010 0x7f81e8872280 424: I2C/C2I adapters
fifo write: @1699477098950931300 0x7f81e8872580 440: I2C/C2I adapters
fifo write: @1699477098950941310 0x7f81e8872880 440: I2C/C2I adapters
fifo write: @1699477098950951320 0x7f81e8872b80 440: I2C/C2I adapters
fifo write: @1699477098950961990 0x7f81e8872e80 480: I2C/C2I adapters
fifo write: @1699477098950972030 0x7f81e8873180 464: I2C/C2I adapters
fifo write: @1699477098950982141 0x7f81e8873480 448: I2C/C2I adapters
fifo write: @1699477098950992171 0x7f81e8873780 448: I2C/C2I adapters
fifo write: @1699477098951002781 0x7f81e8873a80 448: I2C/C2I adapters
fifo write: @1699477098951012781 0x7f81e8873d80 456: I2C/C2I adapters
fifo write: @1699477098951022941 0x7f81e8874080 520: I2C/C2I adapters
fifo write: @1699477098951033091 0x7f81e8874380 456: I2C/C2I adapters
fifo write: @1699477098951043261 0x7f81e8874680 440: I2C/C2I adapters
fifo write: @1699477098951053301 0x7f81e8874980 496: I2C/C2I adapters
fifo write: @1699477098951063252 0x7f81e8874c80 456: I2C/C2I adapters
fifo write: @1699477098951073442 0x7f81e8874f80 480: I2C/C2I adapters
fifo write: @1699477098951083492 0x7f81e8875280 480: I2C/C2I adapters
fifo write: @1699477098951093622 0x7f81e8875580 456: I2C/C2I adapters
fifo write: @1699477098951103662 0x7f81e8875880 464: I2C/C2I adapters
fifo write: @1699477098951113672 0x7f81e8875b80 448: I2C/C2I adapters
fifo write: @1699477098951123862 0x7f81e8875e80 456: I2C/C2I adapters
fifo write: @1699477098951133932 0x7f81e8876180 464: I2C/C2I adapters
fifo write: @1699477098951144033 0x7f81e8876480 456: I2C/C2I adapters
fifo write: @1699477098951154223 0x7f81e8876780 464: I2C/C2I adapters
fifo write: @1699477098951164493 0x7f81e8876a80 464: I2C/C2I adapters
fifo write: @1699477098951174643 0x7f81e8876d80 456: I2C/C2I adapters
fifo write: @1699477098951184743 0x7f81e8877080 464: I2C/C2I adapters
fifo write: @1699477098951194823 0x7f81e8877380 504: I2C/C2I adapters
fifo write: @1699477098966721193 0x7f81e8877680 504: I2C/C2I adapters
fifo write: @1699477098966749544 0x7f81e8877980 488: I2C/C2I adapters
fifo write: @1699477098966762534 0x7f81e8877c80 456: I2C/C2I adapters
fifo write: @1699477098966775064 0x7f81e8877f80 520: I2C/C2I adapters
fifo write: @1699477098966788534 0x7f81e8878280 528: I2C/C2I adapters
fifo write: @1699477098966801614 0x7f81e8878580 504: I2C/C2I adapters
fifo write: @1699477098966814804 0x7f81e8878880 464: I2C/C2I adapters
fifo write: @1699477098966828505 0x7f81e8878b80 448: I2C/C2I adapters
fifo write: @1699477098966841535 0x7f81e8878e80 464: I2C/C2I adapters
fifo write: @1699477098966854825 0x7f81e8879180 440: I2C/C2I adapters
fifo write: @1699477098966867875 0x7f81e8879480 432: I2C/C2I adapters
fifo write: @1699477098966880925 0x7f81e8879780 496: I2C/C2I adapters
fifo write: @1699477098966894115 0x7f81e8879a80 240: jni_fast_GetBooleanField
fifo write: @1699477098966907376 0x7f81e8879d80 240: jni_fast_GetByteField
fifo write: @1699477098966920536 0x7f81e887a080 240: jni_fast_GetCharField
fifo write: @1699477098966933936 0x7f81e887a380 240: jni_fast_GetShortField
fifo write: @1699477098966947246 0x7f81e887a680 240: jni_fast_GetIntField
fifo write: @1699477098966960286 0x7f81e887a980 240: jni_fast_GetLongField
fifo write: @1699477098966973426 0x7f81e887ac80 240: jni_fast_GetFloatField
fifo write: @1699477098966986727 0x7f81e887af80 240: jni_fast_GetDoubleField
fifo write: @1699477098967000157 0x7f81e887b2a0 352: forward_exception Runtime1 stub
fifo write: @1699477098967013387 0x7f81e887b600 64: unwind_exception Runtime1 stub
fifo write: @1699477098967026537 0x7f81e887b900 392: dtrace_object_alloc Runtime1 stub
fifo write: @1699477098967039837 0x7f81e887bc00 128: ExceptionBlob
fifo write: @1699477098967053038 0x7f81e887bf00 576720: C1 temporary CodeBuffer
fifo write: @1699477098967066308 0x7f81e8908ca0 312: throw_range_check_failed Runtime1 stub
fifo write: @1699477098967079418 0x7f81e8908fa0 312: throw_index_exception Runtime1 stub
fifo write: @1699477098967092848 0x7f81e89092a0 304: throw_div0_exception Runtime1 stub
fifo write: @1699477098967106078 0x7f81e89095a0 304: throw_null_pointer_exception Runtime1 stub
fifo write: @1699477098967119218 0x7f81e8909880 512: register_finalizer Runtime1 stub
fifo write: @1699477098967132749 0x7f81e8909b80 496: new_instance Runtime1 stub
fifo write: @1699477098967145929 0x7f81e8909e80 496: fast_new_instance Runtime1 stub
fifo write: @1699477098967159129 0x7f81e890a180 496: fast_new_instance_init_check Runtime1 stub
fifo write: @1699477098967172319 0x7f81e890a480 496: new_type_array Runtime1 stub
fifo write: @1699477098967185489 0x7f81e890a780 496: new_object_array Runtime1 stub
fifo write: @1699477098967198619 0x7f81e890aa80 504: new_multi_array Runtime1 stub
fifo write: @1699477098967211900 0x7f81e890ad80 288: handle_exception_nofpu Runtime1 stub
fifo write: @1699477098967225240 0x7f81e890b080 488: handle_exception Runtime1 stub
fifo write: @1699477098967238440 0x7f81e890b380 144: handle_exception_from_callee Runtime1 stub
fifo write: @1699477098967251740 0x7f81e890b6a0 312: throw_array_store_exception Runtime1 stub
fifo write: @1699477098967264890 0x7f81e890b9a0 312: throw_class_cast_exception Runtime1 stub
fifo write: @1699477098967278060 0x7f81e890bca0 304: throw_incompatible_class_change_error Runtime1 stub
fifo write: @1699477098967291411 0x7f81e890bf80 72: slow_subtype_check Runtime1 stub
fifo write: @1699477098967304631 0x7f81e890c280 480: monitorenter Runtime1 stub
fifo write: @1699477098967317801 0x7f81e890c580 280: monitorenter_nofpu Runtime1 stub
fifo write: @1699477098967330971 0x7f81e890c880 472: monitorexit Runtime1 stub
fifo write: @1699477098967344141 0x7f81e890cb80 280: monitorexit_nofpu Runtime1 stub
fifo write: @1699477098967357341 0x7f81e890ce80 480: deoptimize Runtime1 stub
fifo write: @1699477098967370602 0x7f81e890d180 904: access_field_patching Runtime1 stub
fifo write: @1699477098967383782 0x7f81e890d600 904: load_klass_patching Runtime1 stub
fifo write: @1699477098967396982 0x7f81e890da80 904: load_mirror_patching Runtime1 stub
fifo write: @1699477098967410262 0x7f81e890df00 904: load_appendix_patching Runtime1 stub
fifo write: @1699477098967449053 0x7f81e890e3a0 40: fpu2long_stub Runtime1 stub
fifo write: @1699477098967462463 0x7f81e890e680 480: counter_overflow Runtime1 stub
fifo write: @1699477098967475783 0x7f81e890e980 472: predicate_failed_trap Runtime1 stub
fifo write: @1699477098967489143 0x7f81e890ec80 480: g1_pre_barrier_slow
fifo write: @1699477098967502393 0x7f81e890ef80 512: g1_post_barrier_slow
fifo write: @1699477098967515693 0x7f81e890f280 96: _multianewarray2_Java
fifo write: @1699477098967531814 0x7f81e890f680 592: I2C/C2I adapters
fifo write: @1699477098967552384 0x7f81e890f980 616: I2C/C2I adapters
fifo write: @1699477098967570674 0x7f81e890fc80 96: _new_array_nozero_Java
fifo write: @1699477098967584224 0x7f81e890ff80 456: I2C/C2I adapters
fifo write: @1699477098967597414 0x7f81e8910280 120: _multianewarray5_Java
fifo write: @1699477098967612985 0x7f81e8910800 104: _multianewarray4_Java
fifo write: @1699477098967632555 0x7f81e8910b00 504: I2C/C2I adapters
fifo write: @1699477098967646265 0x7f81e8910e00 544: I2C/C2I adapters
fifo write: @1699477098967659495 0x7f81e8911100 432: I2C/C2I adapters
fifo write: @1699477098976011283 0x7f81e8911400 520: I2C/C2I adapters
fifo write: @1699477098976043193 0x7f81e8911700 96: _multianewarray3_Java
fifo write: @1699477098976056823 0x7f81e8911a00 464: I2C/C2I adapters
fifo write: @1699477098976071084 0x7f81e8911d00 480: I2C/C2I adapters
fifo write: @1699477098976085224 0x7f81e8912000 464: I2C/C2I adapters
fifo write: @1699477098976098624 0x7f81e8912300 480: I2C/C2I adapters
fifo write: @1699477098976112254 0x7f81e8912600 496: I2C/C2I adapters
fifo write: @1699477098976125854 0x7f81e8912900 96: _new_instance_Java
fifo write: @1699477098976139995 0x7f81e8912c00 96: _new_array_Java
fifo write: @1699477098976154725 0x7f81e8912f00 448: I2C/C2I adapters
fifo write: @1699477098976168665 0x7f81e8913480 544: I2C/C2I adapters
fifo write: @1699477098976182065 0x7f81e8913780 488: I2C/C2I adapters
fifo write: @1699477098976196295 0x7f81e8913a80 80: _monitor_notify_Java
fifo write: @1699477098976209735 0x7f81e8913d80 520: I2C/C2I adapters
fifo write: @1699477098976223396 0x7f81e8914080 504: I2C/C2I adapters
fifo write: @1699477098976237186 0x7f81e8914380 80: _complete_monitor_locking_Java
fifo write: @1699477098976251096 0x7f81e8914680 440: I2C/C2I adapters
fifo write: @1699477098976264796 0x7f81e8914c00 432: I2C/C2I adapters
fifo write: @1699477098976278326 0x7f81e8914f00 440: I2C/C2I adapters
fifo write: @1699477098976291836 0x7f81e8915200 440: I2C/C2I adapters
fifo write: @1699477098976305387 0x7f81e8915500 432: I2C/C2I adapters
fifo write: @1699477098976319277 0x7f81e8915800 440: I2C/C2I adapters
fifo write: @1699477098976333067 0x7f81e8915b00 440: I2C/C2I adapters
fifo write: @1699477098976346697 0x7f81e8915e00 440: I2C/C2I adapters
fifo write: @1699477098976360947 0x7f81e8916100 464: I2C/C2I adapters
fifo write: @1699477098976374528 0x7f81e8916400 520: I2C/C2I adapters
fifo write: @1699477098976389628 0x7f81e8916700 96: _multianewarrayN_Java
fifo write: @1699477098976404128 0x7f81e8916a00 440: I2C/C2I adapters
fifo write: @1699477098976417988 0x7f81e8916d80 432: I2C/C2I adapters
fifo write: @1699477098976431708 0x7f81e8917080 448: I2C/C2I adapters
fifo write: @1699477098976445308 0x7f81e8917380 448: I2C/C2I adapters
fifo write: @1699477098976458919 0x7f81e8917680 448: I2C/C2I adapters
fifo write: @1699477098976472659 0x7f81e8917980 448: I2C/C2I adapters
fifo write: @1699477098976486139 0x7f81e8917c80 80: _register_finalizer_Java
fifo write: @1699477098976499909 0x7f81e8917f80 88: _slow_arraycopy_Java
fifo write: @1699477098976513519 0x7f81e8918280 120: _rethrow_Java
fifo write: @1699477098976527240 0x7f81e8918580 80: _monitor_notifyAll_Java
fifo write: @1699477098976556520 0x7f81e8918880 448: I2C/C2I adapters
fifo write: @1699477098976570530 0x7f81e8918b80 440: I2C/C2I adapters
fifo write: @1699477098976584280 0x7f81e8918e80 432: I2C/C2I adapters
fifo write: @1699477098976597900 0x7f81e8919180 480: I2C/C2I adapters
fifo write: @1699477098976611861 0x7f81e8919580 536: I2C/C2I adapters
fifo write: @1699477098976626211 0x7f81e8919880 480: I2C/C2I adapters
fifo write: @1699477098976639781 0x7f81e8919b80 456: I2C/C2I adapters
fifo write: @1699477098976657741 0x7f81e8919e80 440: I2C/C2I adapters
fifo write: @1699477098976671541 0x7f81e891a180 456: I2C/C2I adapters
fifo write: @1699477098976685972 0x7f81e891a480 456: I2C/C2I adapters
fifo write: @1699477098976699582 0x7f81e891a780 456: I2C/C2I adapters
fifo write: @1699477098976713462 0x7f81e891aa80 448: I2C/C2I adapters
fifo write: @1699477098976727132 0x7f81e891ad80 480: I2C/C2I adapters
fifo write: @1699477098976741592 0x7f81e891b080 464: I2C/C2I adapters
fifo write: @1699477098976754992 0x7f81e891b380 488: I2C/C2I adapters
fifo write: @1699477098976768743 0x7f81e891b680 480: I2C/C2I adapters
fifo write: @1699477098976782413 0x7f81e891b980 504: I2C/C2I adapters
fifo write: @1699477098976796313 0x7f81e891bc80 432: I2C/C2I adapters
fifo write: @1699477098976810263 0x7f81e891bf80 440: I2C/C2I adapters
fifo write: @1699477098976823833 0x7f81e891c280 464: I2C/C2I adapters
fifo write: @1699477098976837464 0x7f81e891c580 448: I2C/C2I adapters
fifo write: @1699477098976850864 0x7f81e891c880 440: I2C/C2I adapters
fifo write: @1699477098976864534 0x7f81e891cb80 456: I2C/C2I adapters
fifo write: @1699477098976878144 0x7f81e891ce80 456: I2C/C2I adapters
fifo write: @1699477098976892364 0x7f81e891d180 448: I2C/C2I adapters
fifo write: @1699477098976906344 0x7f81e891d480 616: I2C/C2I adapters
fifo write: @1699477098976919835 0x7f81e891d780 664: I2C/C2I adapters
fifo write: @1699477098976933725 0x7f81e891db00 568: I2C/C2I adapters
fifo write: @1699477098976947445 0x7f81e891de00 464: I2C/C2I adapters
fifo write: @1699477098976961075 0x7f81e891e100 464: I2C/C2I adapters
fifo write: @1699477098976974705 0x7f81e891e400 456: I2C/C2I adapters
fifo write: @1699477098976988305 0x7f81e891e700 464: I2C/C2I adapters
fifo write: @1699477098977002096 0x7f81e891ea00 456: I2C/C2I adapters
fifo write: @1699477098977016106 0x7f81e891ed00 440: I2C/C2I adapters
fifo write: @1699477098977030466 0x7f81e891f000 536: I2C/C2I adapters
fifo write: @1699477098977043966 0x7f81e891f300 440: I2C/C2I adapters
fifo write: @1699477098977057346 0x7f81e891f600 432: I2C/C2I adapters
fifo write: @1699477098977070937 0x7f81e891f900 448: I2C/C2I adapters
fifo write: @1699477098977084477 0x7f81e891fc00 576720: C1 temporary CodeBuffer
fifo write: @1699477098977098017 0x7f81e89ac980 480: I2C/C2I adapters
fifo write: @1699477098977111477 0x7f81e89acc80 448: I2C/C2I adapters
fifo write: @1699477098977125307 0x7f81e89acf80 464: I2C/C2I adapters
fifo write: @1699477098977139117 0x7f81e89ad280 536: I2C/C2I adapters
fifo write: @1699477098977152808 0x7f81e89ad580 432: I2C/C2I adapters
fifo write: @1699477098977166748 0x7f81e89ad880 448: I2C/C2I adapters
fifo write: @1699477098977180138 0x7f81e89adb80 544: I2C/C2I adapters
fifo write: @1699477098977193948 0x7f81e89ade80 456: I2C/C2I adapters
fifo write: @1699477098977207478 0x7f81e89ae180 480: I2C/C2I adapters
fifo write: @1699477098977221798 0x7f81e89ae480 456: I2C/C2I adapters
fifo write: @1699477098977235589 0x7f81e89ae780 440: I2C/C2I adapters
fifo write: @1699477098977249179 0x7f81e89aea80 448: I2C/C2I adapters
fifo write: @1699477098977262689 0x7f81e89aed80 480: I2C/C2I adapters
fifo write: @1699477098977276819 0x7f81e89af080 496: I2C/C2I adapters
fifo write: @1699477098977290369 0x7f81e89af380 456: I2C/C2I adapters
fifo write: @1699477098977304650 0x7f81e89af680 448: I2C/C2I adapters
fifo write: @1699477098977318530 0x7f81e89af980 504: I2C/C2I adapters
fifo write: @1699477098977332140 0x7f81e89afc80 488: I2C/C2I adapters
fifo write: @1699477098977346020 0x7f81e89aff80 456: I2C/C2I adapters
fifo write: @1699477098977359680 0x7f81e89b0280 480: I2C/C2I adapters
fifo write: @1699477098977373310 0x7f81e89b0580 504: I2C/C2I adapters
fifo write: @1699477098977386981 0x7f81e89b0880 480: I2C/C2I adapters
fifo write: @1699477098977400991 0x7f81e89b0b80 464: I2C/C2I adapters
fifo write: @1699477098977414661 0x7f81e89b0e80 480: I2C/C2I adapters
fifo write: @1699477098977428531 0x7f81e89b1180 464: I2C/C2I adapters
fifo write: @1699477098977480622 0x7f81e89b1480 448: I2C/C2I adapters
fifo write: @1699477098977494412 0x7f81e89b1780 504: I2C/C2I adapters
fifo write: @1699477098977508292 0x7f81e89b1a80 464: I2C/C2I adapters
fifo write: @1699477098977522062 0x7f81e89b1d80 456: I2C/C2I adapters
fifo write: @1699477098977535943 0x7f81e89b2080 480: I2C/C2I adapters
fifo write: @1699477098977549423 0x7f81e89b2380 512: I2C/C2I adapters
fifo write: @1699477098977563023 0x7f81e89b2680 440: I2C/C2I adapters
fifo write: @1699477098977577703 0x7f81e89b2980 448: I2C/C2I adapters
fifo write: @1699477098977591423 0x7f81e89b2c80 464: I2C/C2I adapters
fifo write: @1699477098977605353 0x7f81e89b3080 448: I2C/C2I adapters
fifo write: @1699477098977619024 0x7f81e89b3380 440: I2C/C2I adapters
fifo write: @1699477098977632644 0x7f81e89b3680 448: I2C/C2I adapters
fifo write: @1699477098977648464 0x7f81e89b3980 440: I2C/C2I adapters
fifo write: @1699477098977661994 0x7f81e89b3c80 432: I2C/C2I adapters
fifo write: @1699477098977675534 0x7f81e89b3f80 448: I2C/C2I adapters
fifo write: @1699477098977689505 0x7f81e89b4280 448: I2C/C2I adapters
fifo write: @1699477098977703115 0x7f81e89b4580 520: I2C/C2I adapters
fifo write: @1699477098977716905 0x7f81e89b4880 512: I2C/C2I adapters
fifo write: @1699477098977730555 0x7f81e89b5680 480: I2C/C2I adapters
fifo write: @1699477098977744015 0x7f81e89b5980 464: I2C/C2I adapters
fifo write: @1699477098977757715 0x7f81e89b5c80 448: I2C/C2I adapters
fifo write: @1699477098977771376 0x7f81e89b5f80 464: I2C/C2I adapters
fifo write: @1699477098977785426 0x7f81e89b7680 536: I2C/C2I adapters
fifo write: @1699477098977799036 0x7f81e89b7980 448: I2C/C2I adapters
fifo write: @1699477098977812656 0x7f81e89b7c80 448: I2C/C2I adapters
fifo write: @1699477098977826246 0x7f81e89b7f80 456: I2C/C2I adapters
fifo write: @1699477098977840086 0x7f81e89b8280 448: I2C/C2I adapters
fifo write: @1699477098977853677 0x7f81e89b8580 440: I2C/C2I adapters
fifo write: @1699477098977867787 0x7f81e89b8880 448: I2C/C2I adapters
fifo write: @1699477098977881327 0x7f81e89b8b80 440: I2C/C2I adapters
fifo write: @1699477098977894907 0x7f81e89b8e80 464: I2C/C2I adapters
fifo write: @1699477098977908517 0x7f81e89b9180 464: I2C/C2I adapters
fifo write: @1699477098977922138 0x7f81e89b9480 456: I2C/C2I adapters
fifo write: @1699477098977936198 0x7f81e89b9780 464: I2C/C2I adapters
fifo write: @1699477098977949708 0x7f81e89b9a80 456: I2C/C2I adapters
fifo write: @1699477098977963418 0x7f81e89b9d80 464: I2C/C2I adapters
fifo write: @1699477098977976948 0x7f81e89ba080 440: I2C/C2I adapters
fifo write: @1699477098977990938 0x7f81e89ba380 448: I2C/C2I adapters
fifo write: @1699477098978004469 0x7f81e89ba680 456: I2C/C2I adapters
fifo write: @1699477098978018009 0x7f81e89ba980 480: I2C/C2I adapters
fifo write: @1699477098978031329 0x7f81e89bac80 464: I2C/C2I adapters
fifo write: @1699477098978044919 0x7f81e89baf80 480: I2C/C2I adapters
fifo write: @1699477098978058729 0x7f81e89bb280 456: I2C/C2I adapters
fifo write: @1699477098978072229 0x7f81e89c0a00 576720: C1 temporary CodeBuffer
fifo write: @1699477098978089800 0x7f81e9021629 822: sun.security.util.ManifestDigester::findSection(int, sun.security.util.ManifestDigester$Position) -> boolean
fifo write: @1699477098978169211 0x7f81e9021fb9 62: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object) -> Object
fifo write: @1699477098978213511 0x7f81e90223ff 283: java.io.ByteArrayOutputStream::toString(java.nio.charset.Charset) -> String
fifo write: @1699477098978256182 0x7f81e90229d2 875: java.util.ArrayList::grow(int) -> Object[]
fifo write: @1699477098978275132 0x7f81e8fe84fc 31: java.util.zip.ZipUtils::SH(byte[], int) -> int
fifo write: @1699477098978298482 0x7f81e90232b9 54: java.lang.invoke.LambdaForm$MH.0x00007f8160000400::invoke(Object) -> Object
fifo write: @1699477098978359703 0x7f81e9023653 660: sun.security.util.ManifestDigester::findSection(int, sun.security.util.ManifestDigester$Position) -> boolean
fifo write: @1699477098978427524 0x7f81e9023ff8 1317: java.util.ArrayList::add(Object) -> boolean
fifo write: @1699477098978464905 0x7f81e9024d53 940: java.io.ByteArrayOutputStream::ensureCapacity(int) -> void
fifo write: @1699477098978497035 0x7f81e90255be 224: sun.security.util.ManifestDigester$Section::<init>(int, int, int, byte[]) -> void
fifo write: @1699477098978547526 0x7f81e9025a4f 1739: java.io.ByteArrayOutputStream::write(byte[], int, int) -> void
fifo write: @1699477098978581446 0x7f81e902695a 281: sun.security.util.ManifestDigester::isNameAttr(byte[], int) -> boolean
fifo write: @1699477098978631397 0x7f81e9026fb9 268: sun.security.util.ManifestDigester$$Lambda$8.0x00007f8160060128::apply(Object) -> Object
fifo write: @1699477098978643267 0x7f81e89b7380 504: I2C/C2I adapters(0xbbbbbaab)
fifo write: @1699477098978734598 0x7f81e90274fa 1443: sun.security.util.ManifestDigester$Entry::addSection(sun.security.util.ManifestDigester$Section) -> sun.security.util.ManifestDigester$Entry
fifo write: @1699477098978745858 0x7f81e89b7080 448: I2C/C2I adapters(0xabaaa)
fifo write: @1699477098978757448 0x7f81e89b6d80 456: I2C/C2I adapters(0xbabaaa)
fifo write: @1699477098978835509 0x7f81e90283b5 2218: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477098978847039 0x7f81e89b6a80 464: I2C/C2I adapters(0xbbbabeb)
fifo write: @1699477098978873750 0x7f81e14accf4 369: Character::digit(char, int) -> int
fifo write: @1699477098978902440 0x7f81e14ad294 368: CharacterDataLatin1::digit(int, int) -> int
fifo write: @1699477098978927631 0x7f81e14ad7f4 280: Character::digit(int, int) -> int
fifo write: @1699477098978956591 0x7f81e14adcf4 31: Integer::parseInt(String) -> int
fifo write: @1699477098978967981 0x7f81e89b6780 456: I2C/C2I adapters(0xbbbbeb)
fifo write: @1699477098979027682 0x7f81e14ae1db 2987: sun.security.util.ObjectIdentifier::checkOidSize(int) -> void
fifo write: @1699477098979146173 0x7f81e14afd66 7008: Integer::parseInt(String, int) -> int
fifo write: @1699477098979178004 0x7f81e14b33fd 287: sun.security.util.ObjectIdentifier::pack7Oid(int, byte[], int) -> int
fifo write: @1699477098979211064 0x7f81e14b3914 607: sun.security.util.ObjectIdentifier::pack7Oid(byte[], int, int, byte[], int) -> int
fifo write: @1699477098979222274 0x7f81e89b6280 520: I2C/C2I adapters(0xbbbbaaabb)
fifo write: @1699477098979258495 0x7f81e14b40c4 1408: sun.security.util.ObjectIdentifier::pack(byte[], int, int, int, int) -> byte[]
fifo write: @1699477098979286945 0x7f81e14b4d14 114: Class::getName() -> String
fifo write: @1699477098979332906 0x7f81e9029a4c 6: sun.security.util.KnownOIDs::value() -> String
fifo write: @1699477098979361496 0x7f81e9029d0f 40: StringLatin1::canEncode(int) -> boolean
fifo write: @1699477098979405927 0x7f81e902a04c 6: java.security.Provider$Service::getType() -> String
fifo write: @1699477098979437977 0x7f81e14b5194 174: java.security.Provider$ServiceKey::hashCode() -> int
fifo write: @1699477098979480788 0x7f81e902a34c 6: java.security.Provider$Service::getAlgorithm() -> String
fifo write: @1699477098979517188 0x7f81e902a653 124: CharacterDataLatin1::toUpperCaseEx(int) -> int
fifo write: @1699477098979573539 0x7f81e902aa4c 6: java.security.Provider$Service::getAliases() -> java.util.List
fifo write: @1699477098979591409 0x7f81e8a51300 464: I2C/C2I adapters(0xbbabbbe)
fifo write: @1699477098979607679 0x7f81e8a51000 528: I2C/C2I adapters(0xbbbbbabebebe)
fifo write: @1699477098979625150 0x7f81e8a50d00 464: I2C/C2I adapters(0xbbbebba)
fifo write: @1699477098979642270 0x7f81e8a50a00 504: I2C/C2I adapters(0xbaaaabbb)
fifo write: @1699477098979710991 0x7f81e14b5717 1435: sun.security.util.ObjectIdentifier::checkOtherComponent(int, int) -> void
fifo write: @1699477098979783712 0x7f81e14b65a5 4209: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477098979815332 0x7f81e14b8414 209: sun.security.util.DerInputStream::<init>(byte[], int, int, boolean) -> void
fifo write: @1699477098979852512 0x7f81e14b896f 133: sun.security.util.DerValue::data() -> sun.security.util.DerInputStream
fifo write: @1699477098979890413 0x7f81e14b8e6b 285: sun.security.util.DerInputStream::getDerValue() -> sun.security.util.DerValue
fifo write: @1699477098979935314 0x7f81e8fee418 31: String::charAt(int) -> char
fifo write: @1699477098979964624 0x7f81e14b9536 1879: java.net.URI$Parser::scan(int, int, long, long) -> int
fifo write: @1699477098980014675 0x7f81e14ba73c 2743: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477098980041645 0x7f81e14bbb74 5: sun.security.util.DerInputStream::available() -> int
fifo write: @1699477098980122986 0x7f81e14bc182 6134: sun.security.util.DerValue::<init>(byte[], int, int, boolean, boolean) -> void
fifo write: @1699477098980150326 0x7f81e902ad4c 6: Class::getModule() -> Module
fifo write: @1699477098980251478 0x7f81e902b357 440: String::indexOf(int, int) -> int
fifo write: @1699477098980262748 0x7f81e8a50700 520: I2C/C2I adapters(0xbabbbbbba)
fifo write: @1699477098980295428 0x7f81e14bef74 658: java.math.BigInteger::destructiveMulAdd(int[], int, int) -> void
fifo write: @1699477098980346269 0x7f81e8ff0cfd 98: StringLatin1::hashCode(byte[]) -> int
fifo write: @1699477098980361119 0x7f81e14bf794 384: java.util.concurrent.ConcurrentHashMap$Node::<init>(int, Object, Object, java.util.concurrent.ConcurrentHashMap$Node) -> void
fifo write: @1699477098980393149 0x7f81e14bfdb4 415: String::lastIndexOf(int, int) -> int
fifo write: @1699477098980426440 0x7f81e14c0454 759: String::lastIndexOf(int) -> int
fifo write: @1699477098980450120 0x7f81e14c0d14 137: Number::<init>() -> void
fifo write: @1699477098980480621 0x7f81e902b9b3 52: CharacterData::of(int) -> CharacterData
fifo write: @1699477098980506551 0x7f81e902bce4 111: CharacterDataLatin1::digit(int, int) -> int
fifo write: @1699477098980548061 0x7f81e14c1145 221: java.io.ByteArrayOutputStream::write(int) -> void
fifo write: @1699477098980577792 0x7f81e14c16f4 456: Integer::numberOfLeadingZeros(int) -> int
fifo write: @1699477098980613232 0x7f81e14c1d14 220: java.util.HashMap::get(Object) -> Object
fifo write: @1699477098980666053 0x7f81e14c2217 736: java.util.LinkedHashMap::newNode(int, Object, Object, java.util.HashMap$Node) -> java.util.HashMap$Node
fifo write: @1699477098980696763 0x7f81e14c2a54 697: java.math.BigInteger::getInt(int) -> int
fifo write: @1699477098980754004 0x7f81e14c3366 2591: StringLatin1::toLowerCase(String, byte[], java.util.Locale) -> String
fifo write: @1699477098980792555 0x7f81e14c4879 107: sun.security.util.CurveDB::bi(String) -> java.math.BigInteger
fifo write: @1699477098980820095 0x7f81e902c0b3 164: Character::digit(char, int) -> int
fifo write: @1699477098980845445 0x7f81e902c54c 2: java.math.BigInteger::signum() -> int
fifo write: @1699477098980877426 0x7f81e8ff32f8 471: java.lang.invoke.VarHandleGuards::guard_LI_I(java.lang.invoke.VarHandle, Object, int, java.lang.invoke.VarHandle$AccessDescriptor) -> int
fifo write: @1699477098980955197 0x7f81e14c4fce 8121: java.math.BigInteger::<init>(String, int) -> void
fifo write: @1699477098980973667 0x7f81e8ff49f8 939: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477098980992887 0x7f81e902c84c 6: java.lang.invoke.MethodHandle::type() -> java.lang.invoke.MethodType
fifo write: @1699477098981025318 0x7f81e902cb4c 2: java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode() -> int
fifo write: @1699477098981034498 0x7f81e8ff5214 119: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle::get(java.lang.invoke.VarHandle, Object, int) -> int
fifo write: @1699477098981200820 0x7f81e8ff7050 191: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477098981240510 0x7f81e8ff7684 15: jdk.internal.misc.Unsafe::getIntUnaligned(Object, long, boolean) -> int
fifo write: @1699477098981275831 0x7f81e8ff79ac 55: sun.security.provider.SHA2::implCompress(byte[], int) -> void
fifo write: @1699477098981325051 0x7f81e14c8ed7 1476: java.util.Arrays::copyOf(Object[], int, Class) -> Object[]
fifo write: @1699477098981336912 0x7f81e8a50400 496: I2C/C2I adapters(0xaaaaaaab)
fifo write: @1699477098981348042 0x7f81e8a50100 488: I2C/C2I adapters(0xbbbebebebea)
fifo write: @1699477098981358942 0x7f81e8a4fe00 480: I2C/C2I adapters(0xaaaaaaa)
fifo write: @1699477098981369762 0x7f81e8a4fb00 456: I2C/C2I adapters(0xabaaaa)
fifo write: @1699477098981380992 0x7f81e8a4f800 480: I2C/C2I adapters(0xabaaaaa)
fifo write: @1699477098981400472 0x7f81e8a4f500 448: I2C/C2I adapters(0xaaaaa)
fifo write: @1699477098981426693 0x7f81e8a4f200 504: I2C/C2I adapters(0xbbabbbbb)
fifo write: @1699477098981439903 0x7f81e8a4ef00 456: I2C/C2I adapters(0xabebebebea)
fifo write: @1699477098981451803 0x7f81e8a4ec00 448: I2C/C2I adapters(0xbebebebe)
fifo write: @1699477098981467943 0x7f81e8ff8988 115: sun.security.provider.ByteArrayAccess::b2iBig64(byte[], int, int[]) -> void
fifo write: @1699477098981495654 0x7f81e902da30 719: java.math.BigInteger::destructiveMulAdd(int[], int, int) -> void
fifo write: @1699477098981535964 0x7f81e14c9b14 503: java.util.jar.Manifest::getAttributes(String) -> java.util.jar.Attributes
fifo write: @1699477098981556144 0x7f81e8ff9160 167: sun.security.provider.DigestBase::implCompressMultiBlock0(byte[], int, int) -> int
fifo write: @1699477098981575335 0x7f81e14ca15e 1073: java.util.ImmutableCollections$MapN::probe(Object) -> int
fifo write: @1699477098981596265 0x7f81e8ff9630 115: sun.security.provider.DigestBase::implCompressMultiBlock0(byte[], int, int) -> int
fifo write: @1699477098981623225 0x7f81e902e533 1064: Integer::parseInt(String, int) -> int
fifo write: @1699477098981640436 0x7f81e8ff9a94 39: java.nio.Buffer::position(int) -> java.nio.Buffer
fifo write: @1699477098981664266 0x7f81e14cac54 721: java.util.ImmutableCollections$MapN::get(Object) -> Object
fifo write: @1699477098981750067 0x7f81e14cb78f 10925: String::<init>(byte[], int, int, java.nio.charset.Charset) -> void
fifo write: @1699477098981796808 0x7f81e14d0114 322: java.util.jar.Manifest$FastInputStream::peek() -> byte
fifo write: @1699477098981812298 0x7f81e8ffa748 79: ThreadLocal::get() -> Object
fifo write: @1699477098981835498 0x7f81e14d0798 1173: java.io.ByteArrayInputStream::read(byte[], int, int) -> int
fifo write: @1699477098981852228 0x7f81e8ffab9c 59: java.nio.Buffer::limit(int) -> java.nio.Buffer
fifo write: @1699477098981865038 0x7f81e14d1294 342: java.util.jar.Manifest$FastInputStream::fill() -> void
fifo write: @1699477098981893529 0x7f81e8ffaf1c 59: java.nio.ByteBuffer::limit(int) -> java.nio.ByteBuffer
fifo write: @1699477098981942349 0x7f81e8ffb298 47: java.nio.MappedByteBuffer::position(int) -> java.nio.ByteBuffer
fifo write: @1699477098981950910 0x7f81e902f46f 934: java.util.jar.Manifest::getAttributes(String) -> java.util.jar.Attributes
fifo write: @1699477098981983030 0x7f81e8ffb614 39: java.nio.ByteBuffer::position(int) -> java.nio.ByteBuffer
fifo write: @1699477098982014680 0x7f81e9030385 1554: java.util.ImmutableCollections$MapN::probe(Object) -> int
fifo write: @1699477098982080391 0x7f81e8ffbfbc 663: jdk.internal.misc.Unsafe::copyMemory(Object, long, Object, long, long) -> void
fifo write: @1699477098982094591 0x7f81e903151f 3848: String::<init>(byte[], int, int, java.nio.charset.Charset) -> void
fifo write: @1699477098982124742 0x7f81e8ffc8a0 71: java.nio.MappedByteBuffer::limit(int) -> java.nio.ByteBuffer
fifo write: @1699477098982140852 0x7f81e9033453 120: java.util.jar.Manifest$FastInputStream::peek() -> byte
fifo write: @1699477098982188543 0x7f81e8ffcc9c 763: java.nio.HeapByteBuffer::put(java.nio.ByteBuffer) -> java.nio.ByteBuffer
fifo write: @1699477098982238593 0x7f81e90338f4 1659: java.util.ImmutableCollections$MapN::get(Object) -> Object
fifo write: @1699477098982349825 0x7f81e8ffe1cc 891: AbstractStringBuilder::ensureCapacityInternal(int) -> void
fifo write: @1699477098982806621 0x7f81e9000310 11: java.util.zip.ZipFile$Source::zipCoderForPos(int) -> java.util.zip.ZipCoder
fifo write: @1699477098982870191 0x7f81e9000aeb 256: java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash(byte[], int, int) -> int
fifo write: @1699477098982906892 0x7f81e900103c 79: java.util.zip.ZipFile$Source::isMetaName(byte[], int, int) -> boolean
fifo write: @1699477098982945692 0x7f81e9001458 67: java.util.zip.ZipFile$Source::nextEntryPos(int, int, int) -> int
fifo write: @1699477098983038034 0x7f81e9001d27 1144: java.util.zip.ZipFile$Source::checkAndAddEntry(int, int) -> int
fifo write: @1699477098983072564 0x7f81e90029d8 595: sun.nio.ch.NativeThreadSet::add() -> int
fifo write: @1699477098983106374 0x7f81e90031c4 87: sun.nio.ch.NativeThreadSet::remove(int) -> void
fifo write: @1699477098983219896 0x7f81e9034b70 620: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477098983241306 0x7f81e9003738 6651: sun.nio.ch.ChannelInputStream::read(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, boolean) -> int
fifo write: @1699477098983323237 0x7f81e9007669 658: java.util.jar.JarFile::match(byte[], byte[], byte[], byte[]) -> int
fifo write: @1699477098983450459 0x7f81e900821c 7883: sun.nio.ch.ChannelInputStream::read(byte[], int, int) -> int
fifo write: @1699477098983464999 0x7f81e9035570 626: java.util.HashMap::get(Object) -> Object
fifo write: @1699477098983615271 0x7f81e900d0ef 124: StringCoding::hasNegatives(byte[], int, int) -> boolean
fifo write: @1699477098983631641 0x7f81e9035f7c 1005: java.util.LinkedHashMap::newNode(int, Object, Object, java.util.HashMap$Node) -> java.util.HashMap$Node
fifo write: @1699477098983651471 0x7f81e900d543 168: StringCoding::hasNegatives(byte[], int, int) -> boolean
fifo write: @1699477098983681832 0x7f81e900da15 118: StringLatin1::equals(byte[], byte[]) -> boolean
fifo write: @1699477098983772213 0x7f81e900dfe8 6791: sun.nio.ch.FileChannelImpl::read(java.nio.ByteBuffer) -> int
fifo write: @1699477098983813874 0x7f81e9011990 1411: java.util.jar.Manifest$FastInputStream::readLine(byte[], int, int) -> int
fifo write: @1699477098983910845 0x7f81e90127f8 3251: sun.nio.ch.IOUtil::read(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477098983945395 0x7f81e9014b5c 219: java.util.Arrays::copyOfRange(byte[], int, int) -> byte[]
fifo write: @1699477098983975326 0x7f81e9014f64 43: String::checkBoundsOffCount(int, int, int) -> void
fifo write: @1699477098984004286 0x7f81e901533b 156: String::hashCode() -> int
fifo write: @1699477098984047187 0x7f81e9015ad0 563: String::<init>(byte[], int, int, java.nio.charset.Charset) -> void
fifo write: @1699477098984087147 0x7f81e90163e4 1219: java.util.jar.Manifest$FastInputStream::readLine(byte[]) -> int
fifo write: @1699477098984142738 0x7f81e9016fdc 3379: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477098984175348 0x7f81e9018694 39: java.util.jar.Manifest$FastInputStream::peek() -> byte
fifo write: @1699477098984222309 0x7f81e9018a40 51: java.util.HashMap::put(Object, Object) -> Object
fifo write: @1699477098984255169 0x7f81e9018f34 23: String::equals(Object) -> boolean
fifo write: @1699477098984302800 0x7f81e9019318 235: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477098984354021 0x7f81e9019bbc 127: java.util.HashMap::<init>(int, float) -> void
fifo write: @1699477098984398471 0x7f81e901a018 239: java.util.HashMap::get(Object) -> Object
fifo write: @1699477098984431062 0x7f81e901a6f8 51: java.io.ByteArrayOutputStream::<init>(int) -> void
fifo write: @1699477098984472542 0x7f81e901ae27 2240: java.util.HashMap::resize() -> java.util.HashMap$Node[]
fifo write: @1699477098984516913 0x7f81e901bc9c 887: java.util.ImmutableCollections$MapN::probe(Object) -> int
fifo write: @1699477098984568573 0x7f81e901c728 71: java.util.jar.Attributes::<init>(int) -> void
fifo write: @1699477098984623714 0x7f81e901ce08 11: java.util.jar.Attributes::size() -> int
fifo write: @1699477098984712385 0x7f81e901d602 1345: java.util.jar.Manifest$FastInputStream::readLine(byte[], int, int) -> int
fifo write: @1699477098984741756 0x7f81e14d189e 1579: StringLatin1::regionMatchesCI(byte[], int, byte[], int, int) -> boolean
fifo write: @1699477098984763556 0x7f81e901e31b 988: java.util.ImmutableCollections$MapN::get(Object) -> Object
fifo write: @1699477098984794736 0x7f81e901ed7c 15: java.util.LinkedHashMap::afterNodeInsertion(boolean) -> void
fifo write: @1699477098984855207 0x7f81e901f290 31: java.util.LinkedHashMap::newNode(int, Object, Object, java.util.HashMap$Node) -> java.util.HashMap$Node
fifo write: @1699477098984908308 0x7f81e901f72a 501: java.util.jar.Manifest::getAttributes(String) -> java.util.jar.Attributes
fifo write: @1699477098984949298 0x7f81e902007c 219: java.util.jar.Manifest::parseName(byte[], int) -> String
fifo write: @1699477098985022849 0x7f81e9020b74 23: java.util.Objects::checkFromIndexSize(int, int, int) -> int
fifo write: @1699477098985058650 0x7f81e9020ea4 19: java.util.HashMap::hash(Object) -> int
fifo write: @1699477098985137261 0x7f81e9021629 822: sun.security.util.ManifestDigester::findSection(int, sun.security.util.ManifestDigester$Position) -> boolean
fifo write: @1699477098985184211 0x7f81e9021fb9 62: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object) -> Object
fifo write: @1699477098985234742 0x7f81e90223ff 283: java.io.ByteArrayOutputStream::toString(java.nio.charset.Charset) -> String
fifo write: @1699477098985282613 0x7f81e90229d2 875: java.util.ArrayList::grow(int) -> Object[]
fifo write: @1699477098985331233 0x7f81e90232b9 54: java.lang.invoke.LambdaForm$MH.0x00007f8160000400::invoke(Object) -> Object
fifo write: @1699477098985387564 0x7f81e9023653 660: sun.security.util.ManifestDigester::findSection(int, sun.security.util.ManifestDigester$Position) -> boolean
fifo write: @1699477098985456025 0x7f81e9023ff8 1317: java.util.ArrayList::add(Object) -> boolean
fifo write: @1699477098985494985 0x7f81e9024d53 940: java.io.ByteArrayOutputStream::ensureCapacity(int) -> void
fifo write: @1699477098985531536 0x7f81e90255be 224: sun.security.util.ManifestDigester$Section::<init>(int, int, int, byte[]) -> void
fifo write: @1699477098985585486 0x7f81e9025a4f 1739: java.io.ByteArrayOutputStream::write(byte[], int, int) -> void
fifo write: @1699477098985625327 0x7f81e902695a 281: sun.security.util.ManifestDigester::isNameAttr(byte[], int) -> boolean
fifo write: @1699477098985637507 0x7f81e14d2714 239: java.lang.invoke.MemberName::testAllFlags(int) -> boolean
fifo write: @1699477098985675578 0x7f81e9026fb9 268: sun.security.util.ManifestDigester$$Lambda$8.0x00007f8160060128::apply(Object) -> Object
fifo write: @1699477098985764079 0x7f81e90274fa 1443: sun.security.util.ManifestDigester$Entry::addSection(sun.security.util.ManifestDigester$Section) -> sun.security.util.ManifestDigester$Entry
fifo write: @1699477098985842450 0x7f81e90283b5 2218: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477098985879370 0x7f81e9029a4c 6: sun.security.util.KnownOIDs::value() -> String
fifo write: @1699477098985909161 0x7f81e9029d0f 40: StringLatin1::canEncode(int) -> boolean
fifo write: @1699477098985946481 0x7f81e902a04c 6: java.security.Provider$Service::getType() -> String
fifo write: @1699477098985982872 0x7f81e902a34c 6: java.security.Provider$Service::getAlgorithm() -> String
fifo write: @1699477098986015072 0x7f81e902a653 124: CharacterDataLatin1::toUpperCaseEx(int) -> int
fifo write: @1699477098986053493 0x7f81e902aa4c 6: java.security.Provider$Service::getAliases() -> java.util.List
fifo write: @1699477098986085713 0x7f81e902ad4c 6: Class::getModule() -> Module
fifo write: @1699477098986165314 0x7f81e8a4e900 504: I2C/C2I adapters(0xbbaaaabeb)
fifo write: @1699477098986193544 0x7f81e902b357 440: String::indexOf(int, int) -> int
fifo write: @1699477098986230305 0x7f81e902b9b3 52: CharacterData::of(int) -> CharacterData
fifo write: @1699477098986266245 0x7f81e902bce4 111: CharacterDataLatin1::digit(int, int) -> int
fifo write: @1699477098986300926 0x7f81e902c0b3 164: Character::digit(char, int) -> int
fifo write: @1699477098986331456 0x7f81e902c54c 2: java.math.BigInteger::signum() -> int
fifo write: @1699477098986376127 0x7f81e902c84c 6: java.lang.invoke.MethodHandle::type() -> java.lang.invoke.MethodType
fifo write: @1699477098986413367 0x7f81e902cb4c 2: java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode() -> int
fifo write: @1699477098986459978 0x7f81e14d2bf4 147: StringUTF16::putChar(byte[], int, int) -> void
fifo write: @1699477098986784982 0x7f81e902da30 719: java.math.BigInteger::destructiveMulAdd(int[], int, int) -> void
fifo write: @1699477098986849873 0x7f81e902e533 1064: Integer::parseInt(String, int) -> int
fifo write: @1699477098986917404 0x7f81e1400940 32: java.util.zip.ZipUtils::SH(byte[], int) -> int
fifo write: @1699477098986955544 0x7f81e1400e35 549: java.util.zip.ZipCoder$UTF8ZipCoder::checkedHash(byte[], int, int) -> int
fifo write: @1699477098986967914 0x7f81e90369ef 5158: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477098986988695 0x7f81e14015b7 42: java.util.zip.ZipUtils::CENEXT(byte[], int) -> int
fifo write: @1699477098987002435 0x7f81e9039530 127: StringUTF16::putChar(byte[], int, int) -> void
fifo write: @1699477098987016275 0x7f81e1401b3c 218: String::hashCode() -> int
fifo write: @1699477098987043215 0x7f81e1402040 27: String::length() -> int
fifo write: @1699477098987077856 0x7f81e14024c0 103: java.util.zip.ZipUtils::LG(byte[], int) -> long
fifo write: @1699477098987129116 0x7f81e1402d37 42: java.util.zip.ZipUtils::CENNAM(byte[], int) -> int
fifo write: @1699477098987173257 0x7f81e14031fc 545: java.util.zip.ZipFile$Source::zipCoderForPos(int) -> java.util.zip.ZipCoder
fifo write: @1699477098987206467 0x7f81e1403937 42: java.util.zip.ZipUtils::CENHOW(byte[], int) -> int
fifo write: @1699477098987239988 0x7f81e1403db7 42: java.util.zip.ZipUtils::CENFLG(byte[], int) -> int
fifo write: @1699477098987272788 0x7f81e1404237 42: java.util.zip.ZipUtils::CENCOM(byte[], int) -> int
fifo write: @1699477098987307919 0x7f81e1404780 136: java.util.zip.ZipUtils::CENSIG(byte[], int) -> long
fifo write: @1699477098987343559 0x7f81e1404fcd 144: java.util.zip.ZipFile$Source::isMetaName(byte[], int, int) -> boolean
fifo write: @1699477098987404600 0x7f81e1405d4c 3658: java.util.zip.ZipFile$Source::checkAndAddEntry(int, int) -> int
fifo write: @1699477098987435410 0x7f81e1407c4c 102: StringLatin1::charAt(byte[], int) -> char
fifo write: @1699477098987465251 0x7f81e1408234 270: String::charAt(int) -> char
fifo write: @1699477098987507881 0x7f81e14087cc 97: java.util.Objects::requireNonNull(Object) -> Object
fifo write: @1699477098987627093 0x7f81e1409416 37: java.util.concurrent.ConcurrentHashMap::tabAt(java.util.concurrent.ConcurrentHashMap$Node[], int) -> java.util.concurrent.ConcurrentHashMap$Node
fifo write: @1699477098987729834 0x7f81e140a314 147: java.util.Objects::equals(Object, Object) -> boolean
fifo write: @1699477098987781085 0x7f81e140a93c 1019: java.lang.invoke.MethodTypeForm::canonicalize(Class, int) -> Class
fifo write: @1699477098987829625 0x7f81e140b3ec 2252: java.util.concurrent.ConcurrentHashMap::get(Object) -> Object
fifo write: @1699477098987861326 0x7f81e140c37a 211: StringLatin1::indexOfChar(byte[], int, int, int) -> int
fifo write: @1699477098987887376 0x7f81e8a4e600 480: I2C/C2I adapters(0xbbaaaabe)
fifo write: @1699477098987905416 0x7f81e140c8ac 207: java.lang.ref.ReferenceQueue::poll() -> java.lang.ref.Reference
fifo write: @1699477098987939927 0x7f81e140cf20 32: java.lang.invoke.MemberName::isInvocable() -> boolean
fifo write: @1699477098987997738 0x7f81e140da0c 180: String::equals(Object) -> boolean
fifo write: @1699477098988089659 0x7f81e140e654 97: java.nio.Buffer::checkIndex(int) -> int
fifo write: @1699477098988168550 0x7f81e140eebc 585: jdk.internal.misc.ScopedMemoryAccess::getByte(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long) -> byte
fifo write: @1699477098988208770 0x7f81e140f6dc 1704: java.nio.DirectByteBuffer::get(int) -> byte
fifo write: @1699477098988261661 0x7f81e14104f4 303: jdk.internal.misc.ScopedMemoryAccess::getByteInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long) -> byte
fifo write: @1699477098988389643 0x7f81e1411a3c 1783: jdk.internal.jimage.ImageStringsReader::unmaskedHashCode(String, int) -> int
fifo write: @1699477098988419893 0x7f81e1412951 162: StringLatin1::hashCode(byte[]) -> int
fifo write: @1699477098988454864 0x7f81e1412e64 472: java.lang.invoke.MethodType::hashCode() -> int
fifo write: @1699477098988494904 0x7f81e141365c 645: java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements() -> void
fifo write: @1699477098988556575 0x7f81e1413e65 18: jdk.internal.org.objectweb.asm.SymbolTable::get(int) -> jdk.internal.org.objectweb.asm.SymbolTable$Entry
fifo write: @1699477098988630896 0x7f81e141445c 2156: jdk.internal.org.objectweb.asm.ByteVector::putUTF8(String) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477098988679646 0x7f81e14155cc 476: jdk.internal.jimage.ImageLocation::readValue(int, java.nio.ByteBuffer, int, int) -> long
fifo write: @1699477098988730507 0x7f81e141608c 154: AbstractStringBuilder::ensureCapacityInternal(int) -> void
fifo write: @1699477098988770698 0x7f81e141651c 63: jdk.internal.org.objectweb.asm.SymbolTable::hash(int, String) -> int
fifo write: @1699477098988810578 0x7f81e1416a9c 1615: java.util.Arrays::copyOfRange(byte[], int, int) -> byte[]
fifo write: @1699477098988840798 0x7f81e14177d7 4: CharacterDataLatin1::getProperties(int) -> int
fifo write: @1699477098988873359 0x7f81e9039957 1212: StringBuilder::append(char) -> StringBuilder
fifo write: @1699477098988900399 0x7f81e1417c5a 23: CharacterDataLatin1::toLowerCase(int) -> int
fifo write: @1699477098988949300 0x7f81e14d3074 395: java.math.BigInteger::implMulAdd(int[], int[], int, int, int) -> int
fifo write: @1699477098989025191 0x7f81e141858c 1712: java.util.concurrent.ConcurrentHashMap::addCount(long, int) -> void
fifo write: @1699477098989056611 0x7f81e14192c2 236: StringLatin1::equals(byte[], byte[]) -> boolean
fifo write: @1699477098989118542 0x7f81e1419a94 6429: java.util.concurrent.ConcurrentHashMap::putVal(Object, Object, boolean) -> Object
fifo write: @1699477098989141442 0x7f81e14d36f4 127: java.math.BigInteger::mulAdd(int[], int[], int, int, int) -> int
fifo write: @1699477098989165103 0x7f81e141c23c 151: String::indexOf(int, int) -> int
fifo write: @1699477098989209553 0x7f81e141c8b2 295: StringLatin1::indexOf(byte[], int, int) -> int
fifo write: @1699477098989239504 0x7f81e14d3b97 626: java.math.BigInteger::addOne(int[], int, int, int) -> int
fifo write: @1699477098989350475 0x7f81e141dc57 23: CharacterDataLatin1::toUpperCaseEx(int) -> int
fifo write: @1699477098989448806 0x7f81e141e50c 2425: StringLatin1::toUpperCase(String, byte[], java.util.Locale) -> String
fifo write: @1699477098989518047 0x7f81e141fa44 151: String::toUpperCase(java.util.Locale) -> String
fifo write: @1699477098989554418 0x7f81e141ff74 68: java.util.HashMap::hash(Object) -> int
fifo write: @1699477098989638269 0x7f81e1420864 4018: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477098989755920 0x7f81e1422824 16182: sun.security.util.KnownOIDs::register(sun.security.util.KnownOIDs) -> void
fifo write: @1699477098989793561 0x7f81e142877c 122: AbstractStringBuilder::putStringAt(int, String) -> void
fifo write: @1699477098989831721 0x7f81e1428d84 208: AbstractStringBuilder::putStringAt(int, String, int, int) -> void
fifo write: @1699477098989881842 0x7f81e14297d4 95: String::getBytes(byte[], int, int, byte, int) -> void
fifo write: @1699477098989946493 0x7f81e14d466b 6122: java.math.BigInteger::implMulAddCheck(int[], int[], int, int, int) -> void
fifo write: @1699477098989980583 0x7f81e142a0fc 234: AbstractStringBuilder::append(String) -> AbstractStringBuilder
fifo write: @1699477098990035934 0x7f81e142aaec 330: StringLatin1::newString(byte[], int, int) -> String
fifo write: @1699477098990087645 0x7f81e142b558 51: java.util.Arrays::copyOf(byte[], int) -> byte[]
fifo write: @1699477098990116875 0x7f81e14d75f4 375: Character::isWhitespace(char) -> boolean
fifo write: @1699477098990134185 0x7f81e142bb34 408: AbstractStringBuilder::newCapacity(int) -> int
fifo write: @1699477098990145915 0x7f81e14d7b74 283: Character::isWhitespace(int) -> boolean
fifo write: @1699477098990172326 0x7f81e142c214 101: jdk.internal.util.ArraysSupport::newLength(int, int, int) -> int
fifo write: @1699477098990186656 0x7f81e14d8074 1142: sun.security.util.DerValue::isPrintableStringChar(char) -> boolean
fifo write: @1699477098990240197 0x7f81e14d8914 314: CharacterDataLatin1::isWhitespace(int) -> boolean
fifo write: @1699477098990262257 0x7f81e142cc94 164: java.util.HashMap::put(Object, Object) -> Object
fifo write: @1699477098990335038 0x7f81e142d80b 9: AbstractStringBuilder::<init>(int) -> void
fifo write: @1699477098990369628 0x7f81e142dcc4 159: StringBuilder::toString() -> String
fifo write: @1699477098990409999 0x7f81e14d8e74 400: Integer::stringSize(int) -> int
fifo write: @1699477098990432209 0x7f81e142e194 165: jdk.internal.org.objectweb.asm.ByteVector::putShort(int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477098990473840 0x7f81e14d9414 39: StringBuilder::append(int) -> StringBuilder
fifo write: @1699477098990504670 0x7f81e142e98f 1168: jdk.internal.org.objectweb.asm.SymbolTable::put(jdk.internal.org.objectweb.asm.SymbolTable$Entry) -> jdk.internal.org.objectweb.asm.SymbolTable$Entry
fifo write: @1699477098990526810 0x7f81e14d9814 879: Integer::getChars(int, int, byte[]) -> int
fifo write: @1699477098990544240 0x7f81e142f3c7 13: java.lang.invoke.MethodType::parameterType(int) -> Class
fifo write: @1699477098990572911 0x7f81e14da1f4 329: java.util.Arrays::hashCode(byte[]) -> int
fifo write: @1699477098990614071 0x7f81e14da7d9 537: AbstractStringBuilder::append(int) -> AbstractStringBuilder
fifo write: @1699477098990680002 0x7f81e14305c4 2868: java.lang.invoke.MethodType::makeImpl(Class, Class[], boolean) -> java.lang.invoke.MethodType
fifo write: @1699477098990734883 0x7f81e1431a94 1643: java.lang.invoke.MethodType$ConcurrentWeakInternSet::get(Object) -> Object
fifo write: @1699477098990779184 0x7f81e1432824 67: jdk.internal.util.Preconditions::checkIndex(int, int, java.util.function.BiFunction) -> int
fifo write: @1699477098990807194 0x7f81e903a5b8 383: StringLatin1::indexOf(byte[], int, int) -> int
fifo write: @1699477098990880075 0x7f81e1432fdc 6743: java.lang.invoke.VarHandleGuards::guard_LI_I(java.lang.invoke.VarHandle, Object, int, java.lang.invoke.VarHandle$AccessDescriptor) -> int
fifo write: @1699477098990940356 0x7f81e1435b74 1449: java.lang.invoke.VarHandle::checkExactAccessMode(java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477098990988776 0x7f81e143682c 252: java.lang.invoke.VarForm::getMemberName(int) -> java.lang.invoke.MemberName
fifo write: @1699477098990997986 0x7f81e903ab51 346: String::indexOf(int) -> int
fifo write: @1699477098991046877 0x7f81e8a4e300 448: I2C/C2I adapters(0xaabba)
fifo write: @1699477098991065747 0x7f81e143723c 1289: java.lang.invoke.VarHandle::accessModeType(int) -> java.lang.invoke.MethodType
fifo write: @1699477098991145608 0x7f81e143803d 141: java.lang.invoke.VarHandle::getTypesAndInvokers() -> java.lang.invoke.VarHandle$TypesAndInvokers
fifo write: @1699477098991239029 0x7f81e1438854 241: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle::get(java.lang.invoke.VarHandle, Object, int) -> int
fifo write: @1699477098991298880 0x7f81e1438ee4 105: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle::index(byte[], int) -> int
fifo write: @1699477098991358411 0x7f81e1439465 54: jdk.internal.misc.Unsafe::getIntUnaligned(Object, long, boolean) -> int
fifo write: @1699477098991423492 0x7f81e1439ae4 239: jdk.internal.misc.Unsafe::getIntUnaligned(Object, long) -> int
fifo write: @1699477098991511573 0x7f81e143a8fc 1837: Class::getClassLoader() -> ClassLoader
fifo write: @1699477098991557734 0x7f81e143b734 1686: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477098991573064 0x7f81e903b130 543: java.math.BigInteger::implMulAdd(int[], int[], int, int, int) -> int
fifo write: @1699477098991761016 0x7f81e143d31c 24013: sun.security.provider.ByteArrayAccess::b2iBig64(byte[], int, int[]) -> void
fifo write: @1699477098991814517 0x7f81e144542c 523: sun.security.provider.SHA2::implCompress(byte[], int) -> void
fifo write: @1699477098991870948 0x7f81e1445c44 330: sun.security.provider.SHA2::implCompressCheck(byte[], int) -> void
fifo write: @1699477098991896088 0x7f81e8a4e000 496: I2C/C2I adapters(0xbbaabaaa)
fifo write: @1699477098991926588 0x7f81e8a4dd00 480: I2C/C2I adapters(0xbbaabaa)
fifo write: @1699477098991956349 0x7f81e14462fc 67: java.nio.Buffer::position(int) -> java.nio.Buffer
fifo write: @1699477098992036640 0x7f81e1446aec 230: sun.security.provider.DigestBase::implCompressMultiBlock0(byte[], int, int) -> int
fifo write: @1699477098992074770 0x7f81e144713c 67: java.nio.Buffer::limit(int) -> java.nio.Buffer
fifo write: @1699477098992217282 0x7f81e14daf94 31: String::startsWith(String) -> boolean
fifo write: @1699477098992258663 0x7f81e14483fc 84: java.nio.MappedByteBuffer::position(int) -> java.nio.MappedByteBuffer
fifo write: @1699477098992277943 0x7f81e14db374 95: java.util.HashMap$HashIterator::hasNext() -> boolean
fifo write: @1699477098992295983 0x7f81e14488fc 243: ThreadLocal::get() -> Object
fifo write: @1699477098992336834 0x7f81e14db794 31: java.util.HashMap$EntryIterator::next() -> java.util.Map$Entry
fifo write: @1699477098992353474 0x7f81e1448fdc 286: ThreadLocal$ThreadLocalMap::getEntry(ThreadLocal) -> ThreadLocal$ThreadLocalMap$Entry
fifo write: @1699477098992398444 0x7f81e14dbb54 1146: java.util.HashMap$HashIterator::nextNode() -> java.util.HashMap$Node
fifo write: @1699477098992417325 0x7f81e1449714 1032: jdk.internal.misc.Unsafe::checkPrimitivePointer(Object, long) -> void
fifo write: @1699477098992453915 0x7f81e14dc694 167: java.util.HashMap$EntryIterator::next() -> Object
fifo write: @1699477098992472875 0x7f81e144a234 196: jdk.internal.misc.Unsafe::checkPointer(Object, long) -> void
fifo write: @1699477098992501056 0x7f81e903b94c 2: java.util.ArrayList::size() -> int
fifo write: @1699477098992515156 0x7f81e144a7b4 117: java.nio.MappedByteBuffer::position(int) -> java.nio.ByteBuffer
fifo write: @1699477098992557246 0x7f81e144acfc 100: java.util.Objects::checkFromIndexSize(int, int, int) -> int
fifo write: @1699477098992590277 0x7f81e14dca7a 334: java.util.Objects::checkIndex(int, int) -> int
fifo write: @1699477098992602907 0x7f81e144b1bc 67: jdk.internal.util.Preconditions::checkFromIndexSize(int, int, int, java.util.function.BiFunction) -> int
fifo write: @1699477098992653988 0x7f81e14dcfb4 598: java.util.ArrayList::get(int) -> Object
fifo write: @1699477098992690248 0x7f81e144bcfc 84: java.nio.MappedByteBuffer::limit(int) -> java.nio.MappedByteBuffer
fifo write: @1699477098992723749 0x7f81e144c1b4 130: jdk.internal.misc.Unsafe::checkSize(long) -> void
fifo write: @1699477098992748719 0x7f81e14dd78a 935: java.util.Hashtable::get(Object) -> Object
fifo write: @1699477098992806680 0x7f81e14de174 99: java.util.ArrayList::elementData(int) -> Object
fifo write: @1699477098992841690 0x7f81e144ce4c 2873: jdk.internal.misc.Unsafe::copyMemory(Object, long, Object, long, long) -> void
fifo write: @1699477098992868930 0x7f81e14de594 278: java.util.Hashtable$Entry::<init>(int, Object, Object, java.util.Hashtable$Entry) -> void
fifo write: @1699477098992899891 0x7f81e144e53c 2682: jdk.internal.misc.Unsafe::copyMemoryChecks(Object, long, Object, long, long) -> void
fifo write: @1699477098992913801 0x7f81e14deb61 1611: java.util.Hashtable::addEntry(int, Object, Object, int) -> void
fifo write: @1699477098992936781 0x7f81e144f934 130: jdk.internal.misc.Unsafe::checkOffset(Object, long) -> void
fifo write: @1699477098992958842 0x7f81e14df9ad 1440: java.util.Hashtable::put(Object, Object) -> Object
fifo write: @1699477098992978462 0x7f81e144fe34 117: java.nio.MappedByteBuffer::limit(int) -> java.nio.ByteBuffer
fifo write: @1699477098993031973 0x7f81e145094c 1397: sun.nio.ch.ChannelInputStream::read(byte[], int, int) -> int
fifo write: @1699477098993117134 0x7f81e1451e84 2995: sun.nio.ch.FileChannelImpl::read(java.nio.ByteBuffer) -> int
fifo write: @1699477098993144674 0x7f81e14536b4 130: sun.nio.ch.FileChannelImpl::ensureOpen() -> void
fifo write: @1699477098993204125 0x7f81e14e0726 1870: sun.security.util.SignatureFileVerifier::matches(java.security.CodeSigner[], java.security.CodeSigner[], java.security.CodeSigner[]) -> boolean
fifo write: @1699477098993238925 0x7f81e1453ef4 1246: sun.nio.ch.NativeThreadSet::add() -> int
fifo write: @1699477098993338097 0x7f81e1454e8c 1821: sun.nio.ch.IOUtil::read(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477098993378347 0x7f81e1455ecc 1948: sun.nio.ch.Util::getTemporaryDirectBuffer(int) -> java.nio.ByteBuffer
fifo write: @1699477098993399307 0x7f81e14e19b7 3739: sun.security.util.SignatureFileVerifier::updateSigners(java.security.CodeSigner[], java.util.Hashtable, String) -> void
fifo write: @1699477098993416178 0x7f81e1456ebf 1954: sun.nio.ch.Util$BufferCache::get(int) -> java.nio.ByteBuffer
fifo write: @1699477098993473298 0x7f81e1457e54 2608: sun.nio.ch.IOUtil::readIntoNativeBuffer(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477098993555379 0x7f81e145966c 610: java.nio.Buffer$1::acquireScope(java.nio.Buffer, boolean) -> jdk.internal.misc.ScopedMemoryAccess$Scope$Handle
fifo write: @1699477098993738362 0x7f81e1459d89 6: sun.nio.ch.IOUtil::bufferAddress(java.nio.ByteBuffer) -> long
fifo write: @1699477098993827963 0x7f81e145a86c 372: sun.nio.ch.IOUtil::releaseScope(jdk.internal.misc.ScopedMemoryAccess$Scope$Handle) -> void
fifo write: @1699477098993867443 0x7f81e145af32 65: java.nio.MappedByteBuffer::flip() -> java.nio.ByteBuffer
fifo write: @1699477098993901634 0x7f81e145b3f5 32: java.nio.MappedByteBuffer::flip() -> java.nio.MappedByteBuffer
fifo write: @1699477098993942574 0x7f81e145b88c 261: java.nio.HeapByteBuffer::put(java.nio.ByteBuffer) -> java.nio.ByteBuffer
fifo write: @1699477098993962035 0x7f81e903bcfe 7266: java.util.jar.Attributes::putValue(String, String) -> String
fifo write: @1699477098993973665 0x7f81e145be44 175: java.nio.Buffer::checkScope() -> void
fifo write: @1699477098994015935 0x7f81e145c40c 1550: java.nio.ByteBuffer::put(java.nio.ByteBuffer) -> java.nio.ByteBuffer
fifo write: @1699477098994063246 0x7f81e145d304 1389: sun.nio.ch.ChannelInputStream::read(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, boolean) -> int
fifo write: @1699477098994104516 0x7f81e145e16c 2441: java.nio.ByteBuffer::putBuffer(int, java.nio.ByteBuffer, int, int) -> void
fifo write: @1699477098994166067 0x7f81e145f62c 966: jdk.internal.misc.ScopedMemoryAccess::copyMemory(jdk.internal.misc.ScopedMemoryAccess$Scope, jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, Object, long, long) -> void
fifo write: @1699477098994226258 0x7f81e14600bc 664: jdk.internal.misc.ScopedMemoryAccess::copyMemoryInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, Object, long, long) -> void
fifo write: @1699477098994257018 0x7f81e146096d 27: sun.nio.ch.Util::isBufferTooLarge(java.nio.ByteBuffer) -> boolean
fifo write: @1699477098994283449 0x7f81e1460e0c 212: sun.nio.ch.NativeThreadSet::remove(int) -> void
fifo write: @1699477098994319839 0x7f81e1461594 1739: sun.nio.ch.Util::offerFirstTemporaryDirectBuffer(java.nio.ByteBuffer) -> void
fifo write: @1699477098994352860 0x7f81e1462469 37: sun.nio.ch.Util$BufferCache::offerFirst(java.nio.ByteBuffer) -> boolean
fifo write: @1699477098994381910 0x7f81e1462974 309: java.security.DigestOutputStream::write(byte[], int, int) -> void
fifo write: @1699477098994411800 0x7f81e14630e4 273: java.io.OutputStream$1::write(byte[], int, int) -> void
fifo write: @1699477098994436711 0x7f81e146376c 97: java.io.OutputStream$1::ensureOpen() -> void
fifo write: @1699477098994465431 0x7f81e1463d4c 490: java.security.MessageDigest::update(byte[], int, int) -> void
fifo write: @1699477098994493341 0x7f81e146444c 56: java.security.MessageDigest$Delegate::engineUpdate(byte[], int, int) -> void
fifo write: @1699477098994524042 0x7f81e1464b4c 1766: sun.security.provider.DigestBase::engineUpdate(byte[], int, int) -> void
fifo write: @1699477098994551102 0x7f81e146585c 47: sun.security.provider.DigestBase::implCompressMultiBlock(byte[], int, int) -> int
fifo write: @1699477098994591853 0x7f81e1465e8c 576: sun.security.provider.DigestBase::implCompressMultiBlockCheck(byte[], int, int) -> void
fifo write: @1699477098994666764 0x7f81e1466a2c 65: java.nio.MappedByteBuffer::rewind() -> java.nio.ByteBuffer
fifo write: @1699477098994724834 0x7f81e1466eef 32: java.nio.MappedByteBuffer::rewind() -> java.nio.MappedByteBuffer
fifo write: @1699477098994873506 0x7f81e1467af4 1181: java.lang.invoke.MethodType::checkSlotCount(int) -> void
fifo write: @1699477098994962128 0x7f81e146897c 184: String::indexOf(int) -> int
fifo write: @1699477098995031168 0x7f81e1468eb4 1360: AbstractStringBuilder::append(char) -> AbstractStringBuilder
fifo write: @1699477098995156120 0x7f81e1469dbc 577: jdk.internal.misc.ScopedMemoryAccess::getInt(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long) -> int
fifo write: @1699477098995219171 0x7f81e146a5dc 1688: java.nio.DirectIntBufferU::get(int) -> int
fifo write: @1699477098995267161 0x7f81e903ffd7 408: String::startsWith(String, int) -> boolean
fifo write: @1699477098995299902 0x7f81e146b5e4 2263: java.util.concurrent.ConcurrentHashMap$Traverser::advance() -> java.util.concurrent.ConcurrentHashMap$Node
fifo write: @1699477098995318022 0x7f81e90407d0 351: String::startsWith(String) -> boolean
fifo write: @1699477098995422553 0x7f81e146c874 296: jdk.internal.misc.ScopedMemoryAccess::getIntInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long) -> int
fifo write: @1699477098995436664 0x7f81e9040f50 43: java.util.HashMap$HashIterator::hasNext() -> boolean
fifo write: @1699477098995473584 0x7f81e146cebc 657: String::substring(int, int) -> String
fifo write: @1699477098995511945 0x7f81e146d615 233: StringUTF16::compress(char[], int, byte[], int, int) -> int
fifo write: @1699477098995561345 0x7f81e146dd5c 1530: String::checkBoundsBeginEnd(int, int, int) -> void
fifo write: @1699477098995612756 0x7f81e146ea84 97: sun.nio.fs.UnixPath::checkNotNul(String, char) -> void
fifo write: @1699477098995774048 0x7f81e146fe4c 97: java.util.Objects::requireNonNull(Object, String) -> Object
fifo write: @1699477098995819639 0x7f81e1470274 61: jdk.internal.reflect.ClassFileAssembler::emitByte(byte) -> void
fifo write: @1699477098995862619 0x7f81e1470694 115: jdk.internal.reflect.ByteVectorImpl::add(byte) -> void
fifo write: @1699477098995901170 0x7f81e1470b7b 217: StringCoding::hasNegatives(byte[], int, int) -> boolean
fifo write: @1699477098995951390 0x7f81e147115f 32: jdk.internal.misc.Unsafe::putIntUnaligned(Object, long, int, boolean) -> void
fifo write: @1699477098996029641 0x7f81e14718b4 249: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle::set(java.lang.invoke.VarHandle, Object, int, int) -> void
fifo write: @1699477098996082722 0x7f81e1471f84 223: jdk.internal.misc.Unsafe::putIntUnaligned(Object, long, int) -> void
fifo write: @1699477098996227174 0x7f81e14729e4 9941: java.lang.invoke.VarHandleGuards::guard_LII_V(java.lang.invoke.VarHandle, Object, int, int, java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477098996280995 0x7f81e14764ec 973: CharacterData::of(int) -> CharacterData
fifo write: @1699477098996340725 0x7f81e1476e64 497: java.util.ArrayList::add(Object, Object[], int) -> void
fifo write: @1699477098996393496 0x7f81e14775b4 536: java.util.ArrayList::add(Object) -> boolean
fifo write: @1699477098996497147 0x7f81e1478114 126: jdk.internal.org.objectweb.asm.ByteVector::putByte(int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477098996573998 0x7f81e14787e0 3159: StringLatin1::replace(byte[], char, char) -> String
fifo write: @1699477098996635699 0x7f81e1479cfc 1119: jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8(String) -> int
fifo write: @1699477098996962853 0x7f81e147b26e 155: java.util.zip.ZipFile$Source::nextEntryPos(int, int, int) -> int
fifo write: @1699477098997009634 0x7f81e147b86c 97: java.util.zip.InflaterInputStream::ensureOpen() -> void
fifo write: @1699477098997051134 0x7f81e14e3574 95: java.util.HashMap$HashIterator::hasNext() -> boolean
fifo write: @1699477098997074085 0x7f81e147bf1c 2546: java.util.zip.InflaterInputStream::read(byte[], int, int) -> int
fifo write: @1699477098997151636 0x7f81e147d2b4 102: java.util.zip.Inflater::ensureOpen() -> void
fifo write: @1699477098997193446 0x7f81e14e39b7 420: String::toLowerCase(java.util.Locale) -> String
fifo write: @1699477098997221417 0x7f81e147db24 102: java.util.ArrayList$Itr::checkForComodification() -> void
fifo write: @1699477098997273987 0x7f81e147e0bc 366: java.util.ArrayList$Itr::next() -> Object
fifo write: @1699477098997324068 0x7f81e147e8ba 848: java.util.jar.JarFile::match(byte[], byte[], byte[], byte[]) -> int
fifo write: @1699477098997372529 0x7f81e14e4047 266: java.util.Properties::put(Object, Object) -> Object
fifo write: @1699477098997395329 0x7f81e147f432 674: java.util.jar.JarFile::match(byte[], byte[], byte[], byte[]) -> int
fifo write: @1699477098997440720 0x7f81e147fe01 296: StringLatin1::lastIndexOf(byte[], int, int) -> int
fifo write: @1699477098997482900 0x7f81e9041ad3 1012: java.util.HashMap$HashIterator::nextNode() -> java.util.HashMap$Node
fifo write: @1699477098997497300 0x7f81e148056c 3781: java.util.zip.Inflater::inflate(byte[], int, int) -> int
fifo write: @1699477098997559641 0x7f81e90425cc 6: java.security.Provider$Service::getProvider() -> java.security.Provider
fifo write: @1699477098997638282 0x7f81e1482a2e 65: java.util.HashMap::newNode(int, Object, Object, java.util.HashMap$Node) -> java.util.HashMap$Node
fifo write: @1699477098997670082 0x7f81e9042bcc 6: java.security.Provider$UString::toString() -> String
fifo write: @1699477098997685753 0x7f81e14830e4 1530: String::checkBoundsOffCount(int, int, int) -> void
fifo write: @1699477098997764344 0x7f81e9042f10 751: java.util.Hashtable::addEntry(int, Object, Object, int) -> void
fifo write: @1699477098997783924 0x7f81e148425c 1827: java.util.jar.Manifest$FastInputStream::readLine(byte[], int, int) -> int
fifo write: @1699477098997833325 0x7f81e1484fd4 53: java.util.jar.Manifest$FastInputStream::readLine(byte[]) -> int
fifo write: @1699477098997860885 0x7f81e9043831 74: sun.security.util.SignatureFileVerifier::matches(java.security.CodeSigner[], java.security.CodeSigner[], java.security.CodeSigner[]) -> boolean
fifo write: @1699477098997902735 0x7f81e148560c 2279: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477098997933646 0x7f81e9043bc9 838: java.util.Hashtable::get(Object) -> Object
fifo write: @1699477098997960366 0x7f81e14864b4 188: java.util.HashMap::get(Object) -> Object
fifo write: @1699477098998007057 0x7f81e148697c 218: java.util.jar.Manifest$FastInputStream::peek() -> byte
fifo write: @1699477098998022817 0x7f81e14e46a5 4209: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477098998080308 0x7f81e14e6554 1008: java.security.Provider$ServiceKey::<init>(String, String, boolean) -> void
fifo write: @1699477098998121688 0x7f81e14e6fd4 1146: java.util.HashMap$HashIterator::nextNode() -> java.util.HashMap$Node
fifo write: @1699477098998133078 0x7f81e8a4d780 480: I2C/C2I adapters(0xbbbbbab)
fifo write: @1699477098998166079 0x7f81e14876c4 691: java.util.LinkedHashMap::newNode(int, Object, Object, java.util.HashMap$Node) -> java.util.HashMap$Node
fifo write: @1699477098998275220 0x7f81e1488704 11728: String::<init>(byte[], int, int, java.nio.charset.Charset) -> void
fifo write: @1699477098998290930 0x7f81e90447d3 1036: java.util.HashMap$EntryIterator::next() -> Object
fifo write: @1699477098998339181 0x7f81e148d25c 2450: java.util.HashMap::resize() -> java.util.HashMap$Node[]
fifo write: @1699477098998409082 0x7f81e148e468 32: java.util.LinkedHashMap$Entry::<init>(int, Object, Object, java.util.HashMap$Node) -> void
fifo write: @1699477098998463713 0x7f81e148ea88 115: java.util.LinkedHashMap::linkNodeLast(java.util.LinkedHashMap$Entry) -> void
fifo write: @1699477098998517253 0x7f81e148ef8c 899: java.util.ImmutableCollections$MapN::probe(Object) -> int
fifo write: @1699477098998655515 0x7f81e14905b4 497: java.util.ImmutableCollections$MapN::get(Object) -> Object
fifo write: @1699477098998715646 0x7f81e1490c6c 303: java.util.jar.Manifest::getAttributes(String) -> java.util.jar.Attributes
fifo write: @1699477098998756177 0x7f81e14911a4 88: java.util.LinkedHashMap::<init>(int) -> void
fifo write: @1699477098998797067 0x7f81e1491724 220: java.util.jar.Attributes::<init>(int) -> void
fifo write: @1699477098998838378 0x7f81e1491ccc 56: java.util.jar.Attributes::size() -> int
fifo write: @1699477098998922209 0x7f81e14929fc 336: java.util.jar.Manifest::parseName(byte[], int) -> String
fifo write: @1699477098999007740 0x7f81e14e7b14 1097: java.util.zip.ZipFile$Source::isMetaName(byte[], int, int) -> boolean
fifo write: @1699477098999138721 0x7f81e1493f3c 14302: java.util.jar.Attributes::read(java.util.jar.Manifest$FastInputStream, byte[], String, int) -> int
fifo write: @1699477098999189492 0x7f81e149990c 1242: java.io.ByteArrayOutputStream::<init>(int) -> void
fifo write: @1699477098999260213 0x7f81e149a514 1673: java.util.jar.Attributes::putValue(String, String) -> String
fifo write: @1699477098999320884 0x7f81e149b3e4 3405: java.util.HashMap::<init>(int, float) -> void
fifo write: @1699477098999372834 0x7f81e14e85d0 543: ThreadLocal::get() -> Object
fifo write: @1699477098999387315 0x7f81e149cca4 74: java.util.jar.Attributes::put(Object, Object) -> Object
fifo write: @1699477098999421385 0x7f81e9045333 112: java.util.zip.ZipUtils::CENEXT(byte[], int) -> int
fifo write: @1699477098999458276 0x7f81e149d15c 991: java.util.jar.Attributes$Name::of(String) -> java.util.jar.Attributes$Name
fifo write: @1699477098999469056 0x7f81e14e8c54 140: java.util.zip.ZipUtils::get16(byte[], int) -> int
fifo write: @1699477098999507886 0x7f81e904574c 2: Integer::intValue() -> int
fifo write: @1699477098999540257 0x7f81e149de64 10712: String::<init>(byte[], int, int, java.nio.charset.Charset) -> void
fifo write: @1699477098999592137 0x7f81e14a1964 2275: java.util.jar.Manifest$FastInputStream::readLine(byte[], int, int) -> int
fifo write: @1699477098999641828 0x7f81e14a29dc 1827: java.util.jar.Manifest$FastInputStream::readLine(byte[], int, int) -> int
fifo write: @1699477098999694839 0x7f81e14a3b72 906: String::startsWith(String, int) -> boolean
fifo write: @1699477098999711599 0x7f81e14e92af 5367: java.util.zip.ZipFile$Source::checkAndAddEntry(int, int) -> int
fifo write: @1699477098999767420 0x7f81e14a48e5 32: java.util.AbstractList::<init>() -> void
fifo write: @1699477098999775710 0x7f81e9045a33 112: java.util.zip.ZipUtils::CENNAM(byte[], int) -> int
fifo write: @1699477098999821010 0x7f81e9045e33 112: java.util.zip.ZipUtils::CENHOW(byte[], int) -> int
fifo write: @1699477098999830920 0x7f81e14a4f85 270: sun.security.util.ManifestDigester::findSection(int, sun.security.util.ManifestDigester$Position) -> boolean
fifo write: @1699477098999871731 0x7f81e9046233 112: java.util.zip.ZipUtils::CENFLG(byte[], int) -> int
fifo write: @1699477098999897961 0x7f81e14a5844 491: java.util.ArrayList::grow(int) -> Object[]
fifo write: @1699477098999913041 0x7f81e904664c 6: java.net.URL::getProtocol() -> String
fifo write: @1699477098999940432 0x7f81e14a6060 65: java.util.ArrayList::<init>() -> void
fifo write: @1699477098999975932 0x7f81e9046930 155: java.util.zip.ZipUtils::CENSIG(byte[], int) -> long
fifo write: @1699477098999997383 0x7f81e14a65ec 172: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object) -> Object
fifo write: @1699477099000040963 0x7f81e14a6be4 218: java.io.ByteArrayOutputStream::ensureCapacity(int) -> void
fifo write: @1699477099000089934 0x7f81e14a72cc 485: java.io.ByteArrayOutputStream::write(byte[], int, int) -> void
fifo write: @1699477099000153535 0x7f81e14a7b14 4: java.lang.invoke.LambdaForm$MH.0x00007f8160000400::invoke(Object) -> Object
fifo write: @1699477099000214375 0x7f81e14a7f54 115: java.io.ByteArrayOutputStream::toString(java.nio.charset.Charset) -> String
fifo write: @1699477099000261046 0x7f81e14a85f3 144: sun.security.util.ManifestDigester$Entry::<init>() -> void
fifo write: @1699477099000334927 0x7f81e14a8dd5 210: sun.security.util.ManifestDigester::lambda$new$0(String) -> sun.security.util.ManifestDigester$Entry
fifo write: @1699477099000445968 0x7f81e14a9854 61: sun.security.util.ManifestDigester$Entry::addSection(sun.security.util.ManifestDigester$Section) -> sun.security.util.ManifestDigester$Entry
fifo write: @1699477099000564920 0x7f81e14a9f04 4918: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477099000639441 0x7f81e14abfbe 251: sun.security.util.ManifestDigester$$Lambda$8.0x00007f8160060128::apply(Object) -> Object
fifo write: @1699477099000686201 0x7f81e14ac8a9 88: sun.security.util.ManifestDigester::isNameAttr(byte[], int) -> boolean
fifo write: @1699477099000727332 0x7f81e14accf4 369: Character::digit(char, int) -> int
fifo write: @1699477099000742512 0x7f81e14ebf34 345: java.io.RandomAccessFile::seek(long) -> void
fifo write: @1699477099000771363 0x7f81e14ad294 368: CharacterDataLatin1::digit(int, int) -> int
fifo write: @1699477099000807613 0x7f81e14ad7f4 280: Character::digit(int, int) -> int
fifo write: @1699477099000851254 0x7f81e14adcf4 31: Integer::parseInt(String) -> int
fifo write: @1699477099000930745 0x7f81e14ae1db 2987: sun.security.util.ObjectIdentifier::checkOidSize(int) -> void
fifo write: @1699477099001009976 0x7f81e90470cc 6: java.io.File::getPath() -> String
fifo write: @1699477099001069186 0x7f81e14afd66 7008: Integer::parseInt(String, int) -> int
fifo write: @1699477099001113677 0x7f81e14b33fd 287: sun.security.util.ObjectIdentifier::pack7Oid(int, byte[], int) -> int
fifo write: @1699477099001163398 0x7f81e14b3914 607: sun.security.util.ObjectIdentifier::pack7Oid(byte[], int, int, byte[], int) -> int
fifo write: @1699477099001220398 0x7f81e14b40c4 1408: sun.security.util.ObjectIdentifier::pack(byte[], int, int, int, int) -> byte[]
fifo write: @1699477099001262589 0x7f81e14b4d14 114: Class::getName() -> String
fifo write: @1699477099001304179 0x7f81e14b5194 174: java.security.Provider$ServiceKey::hashCode() -> int
fifo write: @1699477099001361350 0x7f81e14b5717 1435: sun.security.util.ObjectIdentifier::checkOtherComponent(int, int) -> void
fifo write: @1699477099001452051 0x7f81e14b65a5 4209: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477099001497062 0x7f81e14b8414 209: sun.security.util.DerInputStream::<init>(byte[], int, int, boolean) -> void
fifo write: @1699477099001551913 0x7f81e14b896f 133: sun.security.util.DerValue::data() -> sun.security.util.DerInputStream
fifo write: @1699477099001608363 0x7f81e14b8e6b 285: sun.security.util.DerInputStream::getDerValue() -> sun.security.util.DerValue
fifo write: @1699477099001672144 0x7f81e14b9536 1879: java.net.URI$Parser::scan(int, int, long, long) -> int
fifo write: @1699477099001689804 0x7f81e14ec494 1079: StringLatin1::indexOf(byte[], int, byte[], int, int) -> int
fifo write: @1699477099001744145 0x7f81e14ba73c 2743: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477099001780296 0x7f81e14bbb74 5: sun.security.util.DerInputStream::available() -> int
fifo write: @1699477099001879907 0x7f81e14bc182 6134: sun.security.util.DerValue::<init>(byte[], int, int, boolean, boolean) -> void
fifo write: @1699477099001925617 0x7f81e14bef74 658: java.math.BigInteger::destructiveMulAdd(int[], int, int) -> void
fifo write: @1699477099002002148 0x7f81e14bf794 384: java.util.concurrent.ConcurrentHashMap$Node::<init>(int, Object, Object, java.util.concurrent.ConcurrentHashMap$Node) -> void
fifo write: @1699477099002038509 0x7f81e14bfdb4 415: String::lastIndexOf(int, int) -> int
fifo write: @1699477099002078729 0x7f81e14c0454 759: String::lastIndexOf(int) -> int
fifo write: @1699477099002098680 0x7f81e14ecfca 621: java.io.RandomAccessFile::readFully(byte[], int, int) -> void
fifo write: @1699477099002108720 0x7f81e14c0d14 137: Number::<init>() -> void
fifo write: @1699477099002150400 0x7f81e14c1145 221: java.io.ByteArrayOutputStream::write(int) -> void
fifo write: @1699477099002165931 0x7f81e14ed705 486: jdk.internal.ref.CleanerImpl::getCleanerImpl(java.lang.ref.Cleaner) -> jdk.internal.ref.CleanerImpl
fifo write: @1699477099002188981 0x7f81e14c16f4 456: Integer::numberOfLeadingZeros(int) -> int
fifo write: @1699477099002213241 0x7f81e14edc74 60: java.lang.ref.Cleaner$1::apply(java.lang.ref.Cleaner) -> jdk.internal.ref.CleanerImpl
fifo write: @1699477099002247172 0x7f81e14c1d14 220: java.util.HashMap::get(Object) -> Object
fifo write: @1699477099002261422 0x7f81e14ee014 418: java.lang.ref.Cleaner$1::apply(Object) -> Object
fifo write: @1699477099002333863 0x7f81e14c2217 736: java.util.LinkedHashMap::newNode(int, Object, Object, java.util.HashMap$Node) -> java.util.HashMap$Node
fifo write: @1699477099002383743 0x7f81e14c2a54 697: java.math.BigInteger::getInt(int) -> int
fifo write: @1699477099002475615 0x7f81e14c3366 2591: StringLatin1::toLowerCase(String, byte[], java.util.Locale) -> String
fifo write: @1699477099002529255 0x7f81e14c4879 107: sun.security.util.CurveDB::bi(String) -> java.math.BigInteger
fifo write: @1699477099002552956 0x7f81e904778f 1960: java.util.Hashtable::put(Object, Object) -> Object
fifo write: @1699477099002622756 0x7f81e14c4fce 8121: java.math.BigInteger::<init>(String, int) -> void
fifo write: @1699477099002668067 0x7f81e14c8ed7 1476: java.util.Arrays::copyOf(Object[], int, Class) -> Object[]
fifo write: @1699477099002710398 0x7f81e14c9b14 503: java.util.jar.Manifest::getAttributes(String) -> java.util.jar.Attributes
fifo write: @1699477099002750038 0x7f81e14ca15e 1073: java.util.ImmutableCollections$MapN::probe(Object) -> int
fifo write: @1699477099002789639 0x7f81e14cac54 721: java.util.ImmutableCollections$MapN::get(Object) -> Object
fifo write: @1699477099002892510 0x7f81e14cb78f 10925: String::<init>(byte[], int, int, java.nio.charset.Charset) -> void
fifo write: @1699477099002927660 0x7f81e14d0114 322: java.util.jar.Manifest$FastInputStream::peek() -> byte
fifo write: @1699477099003095963 0x7f81e14ee5b4 588: String::endsWith(String) -> boolean
fifo write: @1699477099003462717 0x7f81e14eed74 103: String::rangeCheck(char[], int, int) -> Void
fifo write: @1699477099003505718 0x7f81e9048cf5 302: StringLatin1::lastIndexOf(byte[], int, int) -> int
fifo write: @1699477099003543518 0x7f81e90492cc 6: java.net.URL::getHost() -> String
fifo write: @1699477099003584519 0x7f81e14ef1d9 593: String::<init>(char[], int, int, Void) -> void
fifo write: @1699477099003669470 0x7f81e14ef9fa 358: StringUTF16::compress(char[], int, int) -> byte[]
fifo write: @1699477099003763411 0x7f81e14f0101 4453: java.io.BufferedReader::readLine(boolean, boolean[]) -> String
fifo write: @1699477099004763294 0x7f81e904964e 3421: sun.security.util.SignatureFileVerifier::updateSigners(java.security.CodeSigner[], java.util.Hashtable, String) -> void
fifo write: @1699477099005444563 0x7f81e904ba31 490: java.util.zip.ZipFile$Source::isMetaName(byte[], int, int) -> boolean
fifo write: @1699477099006817191 0x7f81e14f2b4f 5352: java.util.zip.ZipFile$Source::checkExtraFields(int, int, int) -> void
fifo write: @1699477099006831241 0x7f81e89b4ca0 27: vtable stub
fifo write: @1699477099007115094 0x7f81e14f51f4 95: java.util.zip.ZipFile$Source::getEntryHash(int) -> int
fifo write: @1699477099008105417 0x7f81e14f5616 37: java.util.concurrent.ConcurrentHashMap::putIfAbsent(Object, Object) -> Object
fifo write: @1699477099008379991 0x7f81e904c2cf 676: java.util.jar.JarFile::match(byte[], byte[], byte[], byte[]) -> int
fifo write: @1699477099013609778 0x7f81e14f59f4 97: java.util.zip.ZipFile$Source::getEntryNext(int) -> int
fifo write: @1699477099013898942 0x7f81e904ccf9 1902: java.util.zip.ZipFile$Source::checkAndAddEntry(int, int) -> int
fifo write: @1699477099013955603 0x7f81e14f5e34 614: java.util.zip.ZipFile::ensureOpen() -> void
fifo write: @1699477099014021424 0x7f81e904e3d0 131: java.util.ArrayList::get(int) -> Object
fifo write: @1699477099014088344 0x7f81e904e7cc 6: java.net.URL::getFile() -> String
fifo write: @1699477099014142785 0x7f81e14f6594 322: java.util.jar.Manifest$FastInputStream::peek() -> byte
fifo write: @1699477099014192676 0x7f81e904ea90 35: sun.nio.fs.UnixPath::checkNotNul(String, char) -> void
fifo write: @1699477099014233296 0x7f81e14f6b94 234: java.util.AbstractSet::<init>() -> void
fifo write: @1699477099014277417 0x7f81e14f7014 432: CharacterDataLatin1::toUpperCase(int) -> int
fifo write: @1699477099014354118 0x7f81e14f7677 1603: java.util.zip.ZipCoder::hash(String) -> int
fifo write: @1699477099014489420 0x7f81e14f855e 846: java.util.zip.ZipFile::getEntry(String) -> java.util.zip.ZipEntry
fifo write: @1699477099014558031 0x7f81e14f90ee 3870: java.util.zip.ZipFile$Source::getEntryPos(String, boolean) -> int
fifo write: @1699477099014586261 0x7f81e14fb394 204: java.util.jar.JarFile::isMultiRelease() -> boolean
fifo write: @1699477099014619141 0x7f81e14fb937 870: jdk.internal.loader.URLClassPath$JarLoader::ensureOpen() -> void
fifo write: @1699477099014661392 0x7f81e14fc1d9 856: java.util.jar.JarFile::getEntry(String) -> java.util.zip.ZipEntry
fifo write: @1699477099014699552 0x7f81e14fca94 467: java.util.jar.JarFile::getJarEntry(String) -> java.util.jar.JarEntry
fifo write: @1699477099014770273 0x7f81e14fd51f 4293: java.util.jar.JarFile::checkForSpecialAttributes() -> void
fifo write: @1699477099014796504 0x7f81e14ff514 241: java.util.HashMap::<init>() -> void
fifo write: @1699477099014823354 0x7f81e14ff974 3: java.nio.DirectLongBufferU::ix(int) -> long
fifo write: @1699477099014875015 0x7f81e14ffdbc 2381: jdk.internal.loader.URLClassPath$JarLoader::getResource(String, boolean) -> jdk.internal.loader.Resource
fifo write: @1699477099014909425 0x7f81e1500f54 660: java.util.zip.ZipFile$ZipFileInflaterInputStream::fill() -> void
fifo write: @1699477099014979586 0x7f81e15019ba 4560: jdk.internal.loader.URLClassPath::getLoader(int) -> jdk.internal.loader.URLClassPath$Loader
fifo write: @1699477099015006696 0x7f81e1503c94 241: java.util.zip.ZipFile::ensureOpenOrZipException() -> void
fifo write: @1699477099015047137 0x7f81e150420a 1381: java.util.zip.ZipFile$ZipFileInputStream::read(byte[], int, int) -> int
fifo write: @1699477099015081847 0x7f81e150516a 851: java.util.zip.ZipFile$Source::readAt(byte[], int, int, long) -> int
fifo write: @1699477099015122348 0x7f81e1505c97 1680: java.util.zip.ZipFile$ZipFileInputStream::initDataOffset() -> long
fifo write: @1699477099015153868 0x7f81e1506bb4 826: java.util.zip.Inflater::setInput(byte[], int, int) -> void
fifo write: @1699477099015476172 0x7f81e904f35a 12377: java.util.jar.Attributes::read(java.util.jar.Manifest$FastInputStream, byte[], String, int) -> int
fifo write: @1699477099015521113 0x7f81e15074d4 866: jdk.internal.misc.Unsafe::allocateUninitializedArray(Class, int) -> Object
fifo write: @1699477099015579354 0x7f81e1507e37 2219: ClassLoader::checkName(String) -> boolean
fifo write: @1699477099015621224 0x7f81e90567b1 318: StringLatin1::lastIndexOf(byte[], int, int) -> int
fifo write: @1699477099015759476 0x7f81e15090f4 95: jdk.internal.jimage.ImageStringsReader::hashCode(String, String, int) -> int
fifo write: @1699477099015799887 0x7f81e1509559 891: jdk.internal.module.ModuleReferenceImpl::hashCode() -> int
fifo write: @1699477099015835007 0x7f81e1509f34 389: java.util.concurrent.ConcurrentHashMap$ValueIterator::next() -> Object
fifo write: @1699477099015865937 0x7f81e150a514 265: java.util.WeakHashMap::hash(Object) -> int
fifo write: @1699477099015900728 0x7f81e150a954 83: java.util.WeakHashMap::maskNull(Object) -> Object
fifo write: @1699477099015944168 0x7f81e150adba 1699: String::regionMatches(boolean, int, String, int, int) -> boolean
fifo write: @1699477099015996749 0x7f81e150c094 51: java.util.WeakHashMap::getTable() -> java.util.WeakHashMap$Entry[]
fifo write: @1699477099016226552 0x7f81e150c4f9 2405: java.util.WeakHashMap::expungeStaleEntries() -> void
fifo write: @1699477099016540726 0x7f81e90579cc 6: java.security.ProtectionDomain::getCodeSource() -> java.security.CodeSource
fifo write: @1699477099016704008 0x7f81e150d8f7 532: java.util.zip.ZipUtils::CENLEN(byte[], int) -> long
fifo write: @1699477099016827000 0x7f81e905804c 6: java.net.URL::getPath() -> String
fifo write: @1699477099017618940 0x7f81e150e296 7730: jdk.internal.loader.URLClassPath$JarLoader::getResource(String, boolean, java.util.Set) -> jdk.internal.loader.Resource
fifo write: @1699477099017943984 0x7f81e1512139 543: String::replace(char, char) -> String
fifo write: @1699477099019495234 0x7f81e905834c 2: java.net.URL::getPort() -> int
fifo write: @1699477099019694516 0x7f81e15128ba 497: String::getBytes(byte[], int, byte) -> void
fifo write: @1699477099019795597 0x7f81e905864c 6: java.net.URL::getRef() -> String
fifo write: @1699477099021464249 0x7f81e1512f94 414: java.lang.ref.PhantomReference::<init>(Object, java.lang.ref.ReferenceQueue) -> void
fifo write: @1699477099021521340 0x7f81e1513594 414: java.lang.ref.WeakReference::<init>(Object, java.lang.ref.ReferenceQueue) -> void
fifo write: @1699477099021755233 0x7f81e1513b94 738: jdk.internal.ref.PhantomCleanable::insert() -> void
fifo write: @1699477099021929925 0x7f81e1514446 2624: jdk.internal.ref.PhantomCleanable::<init>(Object, java.lang.ref.Cleaner) -> void
fifo write: @1699477099022011056 0x7f81e905894c 6: java.security.CodeSource::getLocationNoFragString() -> String
fifo write: @1699477099022044946 0x7f81e9058c53 116: CharacterDataLatin1::toLowerCase(int) -> int
fifo write: @1699477099022108877 0x7f81e1515a1f 1978: jdk.internal.util.jar.JarIndex::get(String) -> java.util.LinkedList
fifo write: @1699477099022397011 0x7f81e1516a45 176: jdk.internal.perf.PerfCounter::get() -> long
fifo write: @1699477099022512022 0x7f81e1516f68 572: jdk.internal.perf.PerfCounter::add(long) -> void
fifo write: @1699477099022586183 0x7f81e15177d7 1091: jdk.internal.misc.ScopedMemoryAccess::getLong(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long) -> long
fifo write: @1699477099022660534 0x7f81e15182bf 2002: java.nio.DirectLongBufferU::get(int) -> long
fifo write: @1699477099022704335 0x7f81e1519394 549: jdk.internal.misc.ScopedMemoryAccess::getLongInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long) -> long
fifo write: @1699477099022740555 0x7f81e905905b 997: StringLatin1::newString(byte[], int, int) -> String
fifo write: @1699477099022869267 0x7f81e1519abf 2050: java.nio.DirectLongBufferU::put(int, long) -> java.nio.LongBuffer
fifo write: @1699477099022913268 0x7f81e151ac14 578: jdk.internal.misc.ScopedMemoryAccess::putLongInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, long) -> void
fifo write: @1699477099022960628 0x7f81e151b357 1158: jdk.internal.misc.ScopedMemoryAccess::putLong(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, long) -> void
fifo write: @1699477099022988979 0x7f81e905994c 6: java.net.URL::getAuthority() -> String
fifo write: @1699477099023016419 0x7f81e9059c4c 6: java.net.URL::getQuery() -> String
fifo write: @1699477099023219522 0x7f81e151bd77 532: java.util.zip.ZipUtils::CENSIZ(byte[], int) -> long
fifo write: @1699477099023632647 0x7f81e151c434 167: ClassLoader::findLoadedClass(String) -> Class
fifo write: @1699477099023719108 0x7f81e151c93a 537: ClassLoader::getClassLoadingLock(String) -> Object
fifo write: @1699477099023760779 0x7f81e151d074 2192: jdk.internal.misc.Unsafe::allocateUninitializedArray0(Class, int) -> Object
fifo write: @1699477099024012942 0x7f81e151e514 102: java.util.Optional::orElse(Object) -> Object
fifo write: @1699477099024041472 0x7f81e151e994 334: jdk.internal.jimage.ImageReader::requireOpen() -> void
fifo write: @1699477099024130963 0x7f81e151eef4 229: jdk.internal.jimage.ImageStringsReader::hashCode(String, String) -> int
fifo write: @1699477099024228575 0x7f81e151f3d4 1556: jdk.internal.loader.BuiltinClassLoader::moduleReaderFor(java.lang.module.ModuleReference) -> java.lang.module.ModuleReader
fifo write: @1699477099024269965 0x7f81e151ffd9 842: jdk.internal.jimage.BasicImageReader::getLocationIndex(String, String) -> int
fifo write: @1699477099024329366 0x7f81e1520974 372: StringConcatHelper::stringOf(Object) -> String
fifo write: @1699477099024519018 0x7f81e1520e94 863: StringConcatHelper::mix(long, String) -> long
fifo write: @1699477099024591339 0x7f81e15218c1 2696: jdk.internal.module.SystemModuleFinders$SystemModuleReader::find(String) -> java.util.Optional
fifo write: @1699477099024671460 0x7f81e1522e7c 1443: jdk.internal.module.SystemModuleFinders$SystemModuleReader::containsImageLocation(String) -> boolean
fifo write: @1699477099024697801 0x7f81e1523af4 313: StringConcatHelper::checkOverflow(long) -> long
fifo write: @1699477099024723671 0x7f81e1523fd4 62: java.util.ArrayDeque::inc(int, int) -> int
fifo write: @1699477099024828762 0x7f81e152439c 490: StringConcatHelper::prepend(long, byte[], String) -> long
fifo write: @1699477099024958154 0x7f81e1524a94 133: java.lang.invoke.MemberName::initResolved(boolean) -> void
fifo write: @1699477099025091376 0x7f81e1524f94 2665: java.lang.invoke.MethodType::equals(Object) -> boolean
fifo write: @1699477099025144976 0x7f81e1526221 2155: java.lang.invoke.MethodType$ConcurrentWeakInternSet::get(Object) -> Object
fifo write: @1699477099025964687 0x7f81e905a9cc 3: java.lang.invoke.MethodTypeForm::parameterSlotCount() -> int
fifo write: @1699477099025976247 0x7f81e8a54b00 440: I2C/C2I adapters(0xb7e7e)
fifo write: @1699477099025987017 0x7f81e8a54800 440: I2C/C2I adapters(0xb66)
fifo write: @1699477099025997637 0x7f81e8a54500 448: I2C/C2I adapters(0xbbe7e7e)
fifo write: @1699477099026008468 0x7f81e8a54200 440: I2C/C2I adapters(0xbbeaa)
fifo write: @1699477099026088269 0x7f81e8a53f00 456: I2C/C2I adapters(0xb7ebaa)
fifo write: @1699477099026098919 0x7f81e8a53c00 456: I2C/C2I adapters(0xbbebaa)
fifo write: @1699477099026594785 0x7f81e905afcc 6: java.security.CodeSource::getLocation() -> java.net.URL
fifo write: @1699477099026663666 0x7f81e15273b7 2133: java.lang.invoke.MethodType::checkPtypes(Class[]) -> int
fifo write: @1699477099026774247 0x7f81e905b2cc 6: java.lang.invoke.MethodTypeForm::erasedType() -> java.lang.invoke.MethodType
fifo write: @1699477099027063271 0x7f81e15287df 7402: sun.invoke.util.VerifyAccess::isTypeVisible(Class, Class) -> boolean
fifo write: @1699477099027246174 0x7f81e905b8cc 6: java.lang.invoke.MethodHandles$Lookup::lookupClass() -> Class
fifo write: @1699477099027498027 0x7f81e152bc14 396: java.lang.invoke.LambdaForm$BasicType::basicType(Class) -> java.lang.invoke.LambdaForm$BasicType
fifo write: @1699477099027556998 0x7f81e152c21a 426: java.lang.invoke.LambdaForm::argument(int, java.lang.invoke.LambdaForm$BasicType) -> java.lang.invoke.LambdaForm$Name
fifo write: @1699477099028293047 0x7f81e905c7cc 3: sun.invoke.util.Wrapper::basicTypeChar() -> char
fifo write: @1699477099028581791 0x7f81e152c9dc 5313: java.lang.invoke.MemberName::getMethodType() -> java.lang.invoke.MethodType
fifo write: @1699477099028699682 0x7f81e152ed94 337: jdk.internal.org.objectweb.asm.ByteVector::put12(int, int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099028730953 0x7f81e152f414 144: java.lang.invoke.LambdaForm$Name::initIndex(int) -> boolean
fifo write: @1699477099029098407 0x7f81e905d6d9 42: Class::getComponentType() -> Class
fifo write: @1699477099029223979 0x7f81e152f854 90: java.lang.reflect.Modifier::isStatic(int) -> boolean
fifo write: @1699477099029313680 0x7f81e152fc94 237: java.lang.invoke.MemberName::isStatic() -> boolean
fifo write: @1699477099029420532 0x7f81e1530114 343: java.lang.invoke.MemberName::isConstructor() -> boolean
fifo write: @1699477099029738546 0x7f81e905d9d0 111: jdk.internal.org.objectweb.asm.SymbolTable::get(int) -> jdk.internal.org.objectweb.asm.SymbolTable$Entry
fifo write: @1699477099029768076 0x7f81e905dd4c 3: java.lang.invoke.LambdaForm$Name::index() -> int
fifo write: @1699477099029812657 0x7f81e15306be 1191: java.util.Arrays::equals(Object[], Object[]) -> boolean
fifo write: @1699477099030028639 0x7f81e1531217 36: jdk.internal.org.objectweb.asm.SymbolTable::addConstantClass(String) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477099030282903 0x7f81e15316a5 1180: jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8Reference(int, String) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477099030654738 0x7f81e15323b4 1208: jdk.internal.org.objectweb.asm.Frame::push(int) -> void
fifo write: @1699477099030698918 0x7f81e1532f14 413: jdk.internal.org.objectweb.asm.ByteVector::put122(int, int, int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099030741419 0x7f81e15335f4 2: java.lang.invoke.MemberName::getReferenceKind() -> byte
fifo write: @1699477099030773369 0x7f81e905e7cc 6: java.lang.invoke.LambdaForm$BasicType::basicTypeClass() -> Class
fifo write: @1699477099031641220 0x7f81e153473d 23695: jdk.internal.org.objectweb.asm.Frame::execute(int, int, jdk.internal.org.objectweb.asm.Symbol, jdk.internal.org.objectweb.asm.SymbolTable) -> void
fifo write: @1699477099031866403 0x7f81e905edb0 91: String::checkBoundsBeginEnd(int, int, int) -> void
fifo write: @1699477099032047525 0x7f81e153ed9c 3295: java.lang.invoke.MemberName::getMethodOrFieldType() -> java.lang.invoke.MethodType
fifo write: @1699477099032091776 0x7f81e15408bd 2096: jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn(int, int) -> void
fifo write: @1699477099032347149 0x7f81e1541b94 541: java.lang.invoke.MethodTypeForm::canonicalize(java.lang.invoke.MethodType, int) -> java.lang.invoke.MethodType
fifo write: @1699477099032442481 0x7f81e15422f4 88: java.lang.invoke.MethodType::parameterSlotCount() -> int
fifo write: @1699477099032503291 0x7f81e15427e7 3277: java.lang.invoke.MethodType$ConcurrentWeakInternSet::add(Object) -> Object
fifo write: @1699477099032553982 0x7f81e905f74c 6: java.lang.invoke.LambdaForm$Name::type() -> java.lang.invoke.LambdaForm$BasicType
fifo write: @1699477099032752015 0x7f81e1543f54 90: java.lang.reflect.Modifier::isProtected(int) -> boolean
fifo write: @1699477099032802295 0x7f81e1544477 2279: Class::getPackageName() -> String
fifo write: @1699477099032881586 0x7f81e15459d7 2802: sun.invoke.util.Wrapper::hashPrim(Class) -> int
fifo write: @1699477099032932257 0x7f81e1547114 369: jdk.internal.org.objectweb.asm.ByteVector::putInt(int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099033043478 0x7f81e1547794 371: java.lang.invoke.LambdaForm$NamedFunction::methodType() -> java.lang.invoke.MethodType
fifo write: @1699477099033094529 0x7f81e1547d94 150: jdk.internal.org.objectweb.asm.ClassReader::readUnsignedShort(int) -> int
fifo write: @1699477099033583845 0x7f81e1548214 224: jdk.internal.jimage.ImageStringsReader::match(int, String, int) -> int
fifo write: @1699477099033654046 0x7f81e15486b4 451: jdk.internal.jimage.BasicImageReader::match(int, String, int) -> int
fifo write: @1699477099033920110 0x7f81e9060676 1190: String::substring(int, int) -> String
fifo write: @1699477099034128972 0x7f81e1548e17 3045: jdk.internal.jimage.ImageLocation::verify(String, String, java.nio.ByteBuffer, int, jdk.internal.jimage.ImageStrings) -> boolean
fifo write: @1699477099034209673 0x7f81e154a8ce 4137: jdk.internal.jimage.ImageStringsReader::stringFromByteBufferMatches(java.nio.ByteBuffer, int, String, int) -> int
fifo write: @1699477099034235054 0x7f81e154c9f4 104: Character::charCount(int) -> int
fifo write: @1699477099034422536 0x7f81e8a53900 464: I2C/C2I adapters(0xbbbbbbe)
fifo write: @1699477099034490747 0x7f81e154ceb7 1573: String::checkIndex(int, int) -> void
fifo write: @1699477099034665369 0x7f81e154df27 5344: jdk.internal.jimage.ImageLocation::verifyName(String, String, int, int, int, int, int, int, jdk.internal.jimage.ImageStrings) -> boolean
fifo write: @1699477099034806871 0x7f81e15508d7 2540: sun.invoke.util.Wrapper::findPrimitiveType(Class) -> sun.invoke.util.Wrapper
fifo write: @1699477099034836191 0x7f81e1551e14 208: jdk.internal.org.objectweb.asm.Frame::pop() -> int
fifo write: @1699477099034935993 0x7f81e1552381 1051: jdk.internal.org.objectweb.asm.SymbolTable::addType(String) -> int
fifo write: @1699477099035730903 0x7f81e1552f14 332: java.util.HashSet::add(Object) -> boolean
fifo write: @1699477099035891325 0x7f81e9061550 558: java.util.HashMap::get(Object) -> Object
fifo write: @1699477099035938906 0x7f81e9061eb5 654: jdk.internal.jimage.ImageStringsReader::unmaskedHashCode(String, int) -> int
fifo write: @1699477099036046027 0x7f81e1553434 664: java.lang.invoke.MemberName::clone() -> java.lang.invoke.MemberName
fifo write: @1699477099036281670 0x7f81e1553af4 229: jdk.internal.org.objectweb.asm.Handler::getExceptionTableLength(jdk.internal.org.objectweb.asm.Handler) -> int
fifo write: @1699477099036319511 0x7f81e90628cc 6: java.lang.invoke.MethodTypeForm::basicType() -> java.lang.invoke.MethodType
fifo write: @1699477099036683485 0x7f81e1553f74 93: java.util.regex.Pattern::has(int) -> boolean
fifo write: @1699477099036752386 0x7f81e15543dd 658: String::codePointAt(int) -> int
fifo write: @1699477099036784537 0x7f81e1554c54 150: Character::isSurrogate(char) -> boolean
fifo write: @1699477099036875868 0x7f81e1555074 448: java.util.regex.Pattern::isSupplementary(int) -> boolean
fifo write: @1699477099036977239 0x7f81e15555d4 47: java.lang.invoke.MemberName::flagsMods(int, int, byte) -> int
fifo write: @1699477099037036880 0x7f81e1555994 170: java.lang.invoke.MemberName::init(Class, String, Object, int) -> void
fifo write: @1699477099037201942 0x7f81e1555e54 90: java.lang.reflect.Modifier::isPublic(int) -> boolean
fifo write: @1699477099037381324 0x7f81e1556294 652: java.lang.invoke.LambdaForm::internArgument(java.lang.invoke.LambdaForm$Name) -> java.lang.invoke.LambdaForm$Name
fifo write: @1699477099037512026 0x7f81e1556b14 316: java.lang.invoke.LambdaForm$Name::<init>(int, java.lang.invoke.LambdaForm$BasicType, java.lang.invoke.LambdaForm$NamedFunction, Object[]) -> void
fifo write: @1699477099037619687 0x7f81e15572bf 4610: sun.invoke.util.Wrapper::forPrimitiveType(Class) -> sun.invoke.util.Wrapper
fifo write: @1699477099037664318 0x7f81e1559674 112: java.lang.invoke.LambdaForm::parameter(int) -> java.lang.invoke.LambdaForm$Name
fifo write: @1699477099037693718 0x7f81e1559a74 95: java.lang.invoke.MemberName::isResolved() -> boolean
fifo write: @1699477099037721889 0x7f81e1559e74 87: Object::equals(Object) -> boolean
fifo write: @1699477099037830710 0x7f81e155a294 314: jdk.internal.org.objectweb.asm.Frame::getLocal(int) -> int
fifo write: @1699477099037896831 0x7f81e155a94e 3152: java.lang.invoke.MethodType::insertParameterTypes(int, Class[]) -> java.lang.invoke.MethodType
fifo write: @1699477099037933361 0x7f81e906454c 2: jdk.internal.org.objectweb.asm.SymbolTable::getMajorVersion() -> int
fifo write: @1699477099037998342 0x7f81e155c2a9 1442: java.lang.invoke.MemberName$Factory::resolve(byte, java.lang.invoke.MemberName, Class, int, boolean) -> java.lang.invoke.MemberName
fifo write: @1699477099038187455 0x7f81e9064e76 1033: jdk.internal.org.objectweb.asm.ByteVector::putUTF8(String) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099038228505 0x7f81e155d094 108: java.lang.invoke.LambdaForm::parameterType(int) -> java.lang.invoke.LambdaForm$BasicType
fifo write: @1699477099038265916 0x7f81e155d474 213: sun.invoke.util.Wrapper::forBasicType(Class) -> sun.invoke.util.Wrapper
fifo write: @1699477099038519199 0x7f81e9065c4c 6: ProcessEnvironment$ExternalData::getBytes() -> byte[]
fifo write: @1699477099038667411 0x7f81e155d8d4 103: java.util.regex.ASCII::isUpper(int) -> boolean
fifo write: @1699477099038706371 0x7f81e155dcf4 323: java.util.regex.ASCII::toLower(int) -> int
fifo write: @1699477099038805443 0x7f81e155e214 392: java.util.regex.Pattern$GroupHead::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099038935134 0x7f81e155e8e7 945: java.util.regex.Pattern$Branch::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099039006345 0x7f81e155f2f0 1344: java.util.regex.Pattern$SliceI::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099039098247 0x7f81e155ff34 621: java.util.regex.Pattern$Begin::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099039265959 0x7f81e156095f 7197: jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes(String) -> int
fifo write: @1699477099039314119 0x7f81e15640de 1057: java.util.regex.Pattern$Pos::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099039345100 0x7f81e9065f4c 6: ProcessEnvironment$ExternalData::toString() -> String
fifo write: @1699477099039376510 0x7f81e1564b94 230: ProcessEnvironment$ExternalData::<init>(String, byte[]) -> void
fifo write: @1699477099039693584 0x7f81e9066475 9805: java.util.jar.Attributes::read(java.util.jar.Manifest$FastInputStream, byte[], String, int) -> int
fifo write: @1699477099039721615 0x7f81e1565094 240: java.util.regex.Matcher::getTextLength() -> int
fifo write: @1699477099039764295 0x7f81e1565559 1230: java.util.regex.Matcher::reset() -> java.util.regex.Matcher
fifo write: @1699477099039791965 0x7f81e15661f4 257: ProcessEnvironment::arrayHash(byte[]) -> int
fifo write: @1699477099039857576 0x7f81e1566714 577: java.util.concurrent.ConcurrentSkipListMap$Iter::advance(java.util.concurrent.ConcurrentSkipListMap$Node) -> void
fifo write: @1699477099039898497 0x7f81e1566e74 95: java.util.concurrent.ConcurrentSkipListMap$Iter::hasNext() -> boolean
fifo write: @1699477099039965698 0x7f81e1567294 324: ProcessEnvironment$Variable::<init>(String, byte[]) -> void
fifo write: @1699477099040012128 0x7f81e1567834 1052: java.util.Properties::getProperty(String) -> String
fifo write: @1699477099040097439 0x7f81e15682ab 3297: java.nio.charset.Charset::defaultCharset() -> java.nio.charset.Charset
fifo write: @1699477099040138020 0x7f81e1569c19 412: org.apache.logging.log4j.util.PropertiesUtil$Environment$$Lambda$26.0x00007f8160012670::accept(Object) -> void
fifo write: @1699477099040174620 0x7f81e156a234 286: java.util.concurrent.ConcurrentSkipListMap$KeyIterator::next() -> Object
fifo write: @1699477099040222831 0x7f81e156a794 183: ProcessEnvironment$ExternalData::hashCode() -> int
fifo write: @1699477099040416424 0x7f81e156acbc 2743: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477099040449104 0x7f81e156c0f4 442: ProcessEnvironment::arrayEquals(byte[], byte[]) -> boolean
fifo write: @1699477099040521755 0x7f81e156c845 2295: org.apache.logging.log4j.util.PropertiesUtil$Environment::lambda$null$2(String, boolean, java.util.List, org.apache.logging.log4j.util.PropertySource) -> void
fifo write: @1699477099040583216 0x7f81e156d894 120: java.util.HashMap::containsKey(Object) -> boolean
fifo write: @1699477099040598146 0x7f81e89b4cd0 168: itable stub
fifo write: @1699477099040609476 0x7f81e89b4de0 168: itable stub
fifo write: @1699477099040662927 0x7f81e156dd59 1183: java.util.regex.Matcher::search(int) -> boolean
fifo write: @1699477099040739828 0x7f81e156e994 762: System::checkKey(String) -> void
fifo write: @1699477099040786288 0x7f81e156f243 741: java.util.regex.Pattern$Start::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099040930250 0x7f81e156fb79 1546: System::getProperty(String) -> String
fifo write: @1699477099040968361 0x7f81e15708b4 571: String::encode(java.nio.charset.Charset, byte, byte[]) -> byte[]
fifo write: @1699477099041112653 0x7f81e157108f 755: ProcessEnvironment$Variable::valueOfQueryOnly(String) -> ProcessEnvironment$Variable
fifo write: @1699477099041179133 0x7f81e15719d4 1000: String::encodeUTF8(byte, byte[], boolean) -> byte[]
fifo write: @1699477099041204474 0x7f81e1572534 255: String::getBytes() -> byte[]
fifo write: @1699477099041249544 0x7f81e1572a37 1200: ProcessEnvironment$Variable::valueOfQueryOnly(Object) -> ProcessEnvironment$Variable
fifo write: @1699477099041461297 0x7f81e906b9be 589: java.util.Arrays::copyOf(byte[], int) -> byte[]
fifo write: @1699477099041595799 0x7f81e1573514 102: jdk.internal.ref.CleanerImpl$PhantomCleanableRef::<init>(Object, java.lang.ref.Cleaner, Runnable) -> void
fifo write: @1699477099041649019 0x7f81e15739e6 1116: java.lang.ref.Cleaner::register(Object, Runnable) -> java.lang.ref.Cleaner$Cleanable
fifo write: @1699477099041681060 0x7f81e1574414 699: java.util.zip.Inflater::needsInput() -> boolean
fifo write: @1699477099041727820 0x7f81e1574c94 51: java.util.WeakHashMap::getTable() -> java.util.WeakHashMap$Entry[]
fifo write: @1699477099041875692 0x7f81e15750c3 450: jdk.internal.jimage.BasicImageReader::verifyLocation(String, String) -> boolean
fifo write: @1699477099041962983 0x7f81e1575714 263: java.util.ArrayList$Itr::<init>(java.util.ArrayList) -> void
fifo write: @1699477099041996494 0x7f81e1575c6b 360: java.util.ArrayList::iterator() -> java.util.Iterator
fifo write: @1699477099042026214 0x7f81e1576174 90: java.lang.invoke.LambdaForm::forceInterpretation() -> boolean
fifo write: @1699477099042337678 0x7f81e906bfd5 110: java.nio.DirectByteBuffer::get(int) -> byte
fifo write: @1699477099042423009 0x7f81e906c44c 6: sun.nio.fs.UnixFileSystem::provider() -> java.nio.file.spi.FileSystemProvider
fifo write: @1699477099042448890 0x7f81e906c74c 3: sun.nio.fs.UnixFileSystem::needToResolveAgainstDefaultDirectory() -> boolean
fifo write: @1699477099042639172 0x7f81e1576574 283: Character::isJavaIdentifierPart(int) -> boolean
fifo write: @1699477099042676923 0x7f81e1576a94 311: CharacterDataLatin1::isJavaIdentifierPart(int) -> boolean
fifo write: @1699477099042722413 0x7f81e906ca4c 6: java.util.concurrent.ConcurrentHashMap$MapEntry::getValue() -> Object
fifo write: @1699477099042756994 0x7f81e906cd4c 6: java.util.concurrent.ConcurrentHashMap$MapEntry::getKey() -> Object
fifo write: @1699477099042828275 0x7f81e1577014 240: java.util.Collections$UnmodifiableCollection$1::next() -> Object
fifo write: @1699477099042865645 0x7f81e1577494 92: java.util.HashMap$KeyIterator::next() -> Object
fifo write: @1699477099042908276 0x7f81e1577894 243: java.util.Collections$UnmodifiableCollection$1::hasNext() -> boolean
fifo write: @1699477099043023527 0x7f81e1577d34 1052: ProcessEnvironment$ExternalData::equals(Object) -> boolean
fifo write: @1699477099043080978 0x7f81e15785b4 1552: ProcessEnvironment$Variable::equals(Object) -> boolean
fifo write: @1699477099043136579 0x7f81e15790f4 90: java.util.ArrayList::isEmpty() -> boolean
fifo write: @1699477099043201849 0x7f81e1579579 1039: org.apache.logging.log4j.util.SystemPropertiesPropertySource::getProperty(String) -> String
fifo write: @1699477099043294591 0x7f81e1579ff4 313: java.lang.invoke.DirectMethodHandle::constructorMethod(Object) -> Object
fifo write: @1699477099045734212 0x7f81e157a4f4 353: java.lang.invoke.DirectMethodHandle::allocateInstance(Object) -> Object
fifo write: @1699477099045786263 0x7f81e157aa14 136: java.util.concurrent.ConcurrentHashMap::containsKey(Object) -> boolean
fifo write: @1699477099045821813 0x7f81e157ae54 27: java.lang.invoke.VarHandle::acquireFence() -> void
fifo write: @1699477099045893494 0x7f81e157b557 1323: System::getenv() -> java.util.Map
fifo write: @1699477099045951555 0x7f81e157c13c 1551: org.apache.logging.log4j.util.EnvironmentPropertySource::containsProperty(String) -> boolean
fifo write: @1699477099046024136 0x7f81e157cf7c 1192: org.apache.logging.log4j.util.SystemPropertiesPropertySource::containsProperty(String) -> boolean
fifo write: @1699477099046069707 0x7f81e157db14 243: java.util.Collections$UnmodifiableMap::containsKey(Object) -> boolean
fifo write: @1699477099046113227 0x7f81e157df94 557: org.apache.logging.log4j.util.PropertiesPropertySource::containsProperty(String) -> boolean
fifo write: @1699477099046159998 0x7f81e157e614 240: org.apache.logging.log4j.util.PropertiesPropertySource::getProperty(String) -> String
fifo write: @1699477099046191738 0x7f81e157ea94 137: java.io.InputStream::<init>() -> void
fifo write: @1699477099046304680 0x7f81e157f0bf 5856: org.apache.logging.log4j.util.PropertySource$Util::tokenize(CharSequence) -> java.util.List
fifo write: @1699477099046361350 0x7f81e1581bf7 1619: ProcessEnvironment$StringEnvironment::containsKey(Object) -> boolean
fifo write: @1699477099046430061 0x7f81e1582914 111: java.lang.invoke.MethodHandles$Lookup::lookupClassOrNull() -> Class
fifo write: @1699477099046490672 0x7f81e1582d94 332: java.util.Collections$SetFromMap::remove(Object) -> boolean
fifo write: @1699477099046634554 0x7f81e158333c 2672: java.util.WeakHashMap::remove(Object) -> Object
fifo write: @1699477099046754485 0x7f81e15848df 4906: sun.invoke.util.VerifyAccess::isSamePackage(Class, Class) -> boolean
fifo write: @1699477099046809806 0x7f81e906de4c 6: jdk.internal.loader.BuiltinClassLoader$LoadedModule::loader() -> jdk.internal.loader.BuiltinClassLoader
fifo write: @1699477099046823816 0x7f81e8a56900 560: I2C/C2I adapters(0xbbbaaaabbbb)
fifo write: @1699477099046945578 0x7f81e1586c34 605: java.util.zip.ZipFile$ZipFileInputStream::close() -> void
fifo write: @1699477099048032582 0x7f81e906e157 1516: StringBuilder::append(String) -> StringBuilder
fifo write: @1699477099048062642 0x7f81e1587534 617: java.util.jar.JarFile::maybeInstantiateVerifier() -> void
fifo write: @1699477099048274645 0x7f81e906f14c 6: NamedPackage::module() -> Module
fifo write: @1699477099049311628 0x7f81e1587c54 142: java.util.regex.Pattern::inRange(int, int, int) -> boolean
fifo write: @1699477099049341549 0x7f81e1588074 286: java.util.regex.Pattern::lambda$Range$10(int, int, int) -> boolean
fifo write: @1699477099049372419 0x7f81e1588594 386: java.util.regex.Pattern$$Lambda$19.0x800000029::is(int) -> boolean
fifo write: @1699477099049398149 0x7f81e906f74c 3: java.util.zip.ZipEntry::getSize() -> long
fifo write: @1699477099049817295 0x7f81e1588b34 559: java.lang.invoke.LambdaForm::uncustomize() -> java.lang.invoke.LambdaForm
fifo write: @1699477099049951087 0x7f81e1589214 230: jdk.internal.org.objectweb.asm.SymbolTable::hash(int, String, String, String) -> int
fifo write: @1699477099050057648 0x7f81e1589794 178: java.lang.ref.SoftReference::get() -> Object
fifo write: @1699477099050110769 0x7f81e1589c17 346: jdk.internal.org.objectweb.asm.ByteVector::<init>() -> void
fifo write: @1699477099050304171 0x7f81e158a29e 1821: jdk.internal.org.objectweb.asm.SymbolTable::addConstantMemberReference(int, String, String, String) -> jdk.internal.org.objectweb.asm.SymbolTable$Entry
fifo write: @1699477099050516364 0x7f81e158b594 239: jdk.internal.loader.URLClassPath$JarLoader::findResource(String, boolean) -> java.net.URL
fifo write: @1699477099052604641 0x7f81e158ba94 299: java.util.zip.ZipFile::getMetaInfVersions() -> int[]
fifo write: @1699477099052652752 0x7f81e158c094 401: java.util.zip.ZipFile$1::getMetaInfVersions(java.util.jar.JarFile) -> int[]
fifo write: @1699477099053007616 0x7f81e158c774 280: Character::toUpperCase(int) -> int
fifo write: @1699477099053104187 0x7f81e158cdc1 3046: java.util.jar.JarFile::getVersionedEntry(String, java.util.jar.JarEntry) -> java.util.jar.JarEntry
fifo write: @1699477099053137768 0x7f81e158e774 381: Character::toUpperCase(char) -> char
fifo write: @1699477099053187258 0x7f81e158ed34 571: java.util.regex.Pattern$BmpCharPredicate::lambda$union$2(java.util.regex.Pattern$CharPredicate, int) -> boolean
fifo write: @1699477099053228309 0x7f81e158f374 326: String::valueOf(Object) -> String
fifo write: @1699477099053270759 0x7f81e158f8b4 921: java.util.regex.Pattern$BmpCharPredicate$$Lambda$20.0x80000002b::is(int) -> boolean
fifo write: @1699477099054766699 0x7f81e159019f 2274: sun.net.www.ParseUtil::firstEncodeIndex(String) -> int
fifo write: @1699477099054812359 0x7f81e1591534 313: java.util.LinkedHashMap::get(Object) -> Object
fifo write: @1699477099055502248 0x7f81e1591b19 466: jdk.internal.org.objectweb.asm.ByteVector::putByteArray(byte[], int, int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099055656810 0x7f81e15921f4 159: ClassLoader::findBootstrapClassOrNull(String) -> Class
fifo write: @1699477099055698691 0x7f81e15926b4 285: System$2::findBootstrapClassOrNull(String) -> Class
fifo write: @1699477099055997455 0x7f81e1592bf4 91: java.lang.invoke.MethodType::erase() -> java.lang.invoke.MethodType
fifo write: @1699477099056293519 0x7f81e1593034 666: java.lang.invoke.MemberName::getName() -> String
fifo write: @1699477099056370460 0x7f81e1593879 1050: sun.invoke.util.BytecodeDescriptor::unparseSig(Class, StringBuilder) -> void
fifo write: @1699477099056417540 0x7f81e15942f4 177: jdk.internal.org.objectweb.asm.SymbolTable::hash(int, String, String) -> int
fifo write: @1699477099056465591 0x7f81e159479f 88: jdk.internal.org.objectweb.asm.SymbolTable$Entry::<init>(int, int, String, String, int) -> void
fifo write: @1699477099056630553 0x7f81e90704d0 75: java.lang.invoke.MethodType::parameterType(int) -> Class
fifo write: @1699477099056941837 0x7f81e1594c79 1149: java.lang.invoke.MethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> void
fifo write: @1699477099057105119 0x7f81e15957b9 1772: java.lang.invoke.LambdaForm::prepare() -> void
fifo write: @1699477099057184390 0x7f81e1596814 175: jdk.internal.loader.BuiltinClassLoader::loadClassOrNull(String) -> Class
fifo write: @1699477099057290621 0x7f81e1596c94 175: ClassLoader::loadClass(String) -> Class
fifo write: @1699477099057378983 0x7f81e1597197 1311: jdk.internal.loader.BuiltinClassLoader::findLoadedModule(String) -> jdk.internal.loader.BuiltinClassLoader$LoadedModule
fifo write: @1699477099057463434 0x7f81e1597d94 464: jdk.internal.loader.BuiltinClassLoader::loadClass(String, boolean) -> Class
fifo write: @1699477099057528154 0x7f81e15983b4 398: jdk.internal.loader.ClassLoaders$BootClassLoader::loadClassOrNull(String, boolean) -> Class
fifo write: @1699477099057653346 0x7f81e15989b4 833: java.util.ArrayDeque::pollFirst() -> Object
fifo write: @1699477099057795938 0x7f81e159939f 4945: jdk.internal.loader.BuiltinClassLoader::loadClassOrNull(String, boolean) -> Class
fifo write: @1699477099058823531 0x7f81e159b914 95: jdk.internal.perf.PerfCounter::addElapsedTimeFrom(long) -> void
fifo write: @1699477099058837981 0x7f81e8a56600 448: I2C/C2I adapters(0xbbeba)
fifo write: @1699477099059681842 0x7f81e9070814 39: java.util.Objects::requireNonNull(Object, String) -> Object
fifo write: @1699477099059739393 0x7f81e159bd14 634: StringConcatHelper::newArray(long) -> byte[]
fifo write: @1699477099059889935 0x7f81e159c3cb 692: jdk.internal.access.SharedSecrets::javaUtilJarAccess() -> jdk.internal.access.JavaUtilJarAccess
fifo write: @1699477099059950216 0x7f81e159cbd4 31: StringConcatHelper::initialCoder() -> long
fifo write: @1699477099060019377 0x7f81e9070b4c 6: jdk.internal.loader.URLClassPath$Loader::getBaseURL() -> java.net.URL
fifo write: @1699477099060316860 0x7f81e159cfc2 570: jdk.internal.loader.URLClassPath::getResource(String, boolean) -> jdk.internal.loader.Resource
fifo write: @1699477099060409282 0x7f81e159d7da 2305: StringConcatHelper::newString(byte[], long) -> String
fifo write: @1699477099060501593 0x7f81e159ea94 285: java.io.FilterInputStream::<init>(java.io.InputStream) -> void
fifo write: @1699477099060618494 0x7f81e159f117 5105: StringConcatHelper::simpleConcat(Object, Object) -> String
fifo write: @1699477099060931408 0x7f81e15a17bf 5166: String::concat(String) -> String
fifo write: @1699477099061113131 0x7f81e9070e4c 6: java.util.jar.Manifest::getMainAttributes() -> java.util.jar.Attributes
fifo write: @1699477099061325803 0x7f81e907114c 3: java.util.zip.ZipEntry::getCrc() -> long
fifo write: @1699477099061408225 0x7f81e15a3d65 540: jdk.internal.loader.Resource::cachedInputStream() -> java.io.InputStream
fifo write: @1699477099061666768 0x7f81e15a45dc 2695: java.security.CodeSource::getCertificates() -> java.security.cert.Certificate[]
fifo write: @1699477099061866820 0x7f81e15a5914 31: System$2::newStringUTF8NoRepl(byte[], int, int) -> String
fifo write: @1699477099061903061 0x7f81e15a5d14 199: java.util.zip.ZipCoder$UTF8ZipCoder::toString(byte[], int, int) -> String
fifo write: @1699477099061938891 0x7f81e9071452 309: AbstractStringBuilder::putStringAt(int, String) -> void
fifo write: @1699477099062260986 0x7f81e15a6280 3619: String::newStringUTF8NoRepl(byte[], int, int) -> String
fifo write: @1699477099062564919 0x7f81e15a7dd7 1117: String::equalsIgnoreCase(String) -> boolean
fifo write: @1699477099063001825 0x7f81e15a89a1 2774: ClassLoader::loadClass(String, boolean) -> Class
fifo write: @1699477099063056736 0x7f81e15aa20a 1173: java.util.zip.ZipFile$Source::readFullyAt(byte[], int, int, long) -> int
fifo write: @1699477099063158707 0x7f81e9071acc 2: sun.nio.fs.NativeBuffer::size() -> int
fifo write: @1699477099063202568 0x7f81e9071dcc 6: sun.nio.fs.NativeBuffer::owner() -> Object
fifo write: @1699477099063387590 0x7f81e90720cc 6: java.lang.invoke.MethodHandles$Lookup::previousLookupClass() -> Class
fifo write: @1699477099063430811 0x7f81e15aaf14 31: StringBuilder::<init>(int) -> void
fifo write: @1699477099063682254 0x7f81e8a56300 480: I2C/C2I adapters(0xbbaabbb)
fifo write: @1699477099063897867 0x7f81e15ab2bd 1420: java.lang.invoke.MethodTypeForm::canonicalizeAll(Class[], int) -> Class[]
fifo write: @1699477099063955037 0x7f81e15abe14 121: jdk.internal.org.objectweb.asm.Frame::pop(int) -> void
fifo write: @1699477099064087729 0x7f81e90726cc 3: jdk.internal.org.objectweb.asm.MethodWriter::hasAsmInstructions() -> boolean
fifo write: @1699477099064215301 0x7f81e15ac274 324: jdk.internal.org.objectweb.asm.Handler::getExceptionTableSize(jdk.internal.org.objectweb.asm.Handler) -> int
fifo write: @1699477099064490234 0x7f81e15ac97c 5257: sun.invoke.util.VerifyType::isNullConversion(Class, Class, boolean) -> boolean
fifo write: @1699477099064653866 0x7f81e15aef0d 746: jdk.internal.org.objectweb.asm.AnnotationWriter::putAnnotations(jdk.internal.org.objectweb.asm.SymbolTable, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099064671167 0x7f81e8a56000 480: I2C/C2I adapters(0xbbbbaab)
fifo write: @1699477099065088802 0x7f81e15afa8e 6616: jdk.internal.org.objectweb.asm.Frame::getAbstractTypeFromDescriptor(jdk.internal.org.objectweb.asm.SymbolTable, String, int) -> int
fifo write: @1699477099065123323 0x7f81e15b2a37 273: String::<init>(char[], int, int) -> void
fifo write: @1699477099065177263 0x7f81e15b2f74 188: java.util.TreeMap::parentOf(java.util.TreeMap$Entry) -> java.util.TreeMap$Entry
fifo write: @1699477099065217614 0x7f81e15b3394 313: java.io.BufferedInputStream::getBufIfOpen() -> byte[]
fifo write: @1699477099065254684 0x7f81e15b3854 101: StringLatin1::getChar(byte[], int) -> char
fifo write: @1699477099065436727 0x7f81e15b3c8d 808: java.io.BufferedInputStream::read() -> int
fifo write: @1699477099065564078 0x7f81e15b4594 781: StringLatin1::compareTo(byte[], byte[], int, int) -> int
fifo write: @1699477099065615489 0x7f81e15b4df9 93: StringLatin1::compareTo(byte[], byte[]) -> int
fifo write: @1699477099065662709 0x7f81e15b5274 844: String::compareTo(String) -> int
fifo write: @1699477099065702370 0x7f81e15b5c14 324: String::compareTo(Object) -> int
fifo write: @1699477099065783261 0x7f81e15b60d4 117: java.util.TreeMap::setColor(java.util.TreeMap$Entry, boolean) -> void
fifo write: @1699477099065835602 0x7f81e15b64f4 188: java.util.TreeMap::leftOf(java.util.TreeMap$Entry) -> java.util.TreeMap$Entry
fifo write: @1699477099066113845 0x7f81e15b6976 1036: java.io.DataInputStream::readFully(byte[], int, int) -> void
fifo write: @1699477099066204146 0x7f81e15b74de 1867: java.io.BufferedInputStream::read(byte[], int, int) -> int
fifo write: @1699477099066358688 0x7f81e15b8697 7781: java.io.DataInputStream::readUTF(java.io.DataInput) -> String
fifo write: @1699477099066404249 0x7f81e15bbf94 23: java.io.DataInputStream::readUTF() -> String
fifo write: @1699477099066443420 0x7f81e15bc334 630: java.io.DataInputStream::readUnsignedShort() -> int
fifo write: @1699477099066484090 0x7f81e15bca34 599: java.io.DataInputStream::readBoolean() -> boolean
fifo write: @1699477099066542281 0x7f81e15bd1ca 1983: java.io.BufferedInputStream::read1(byte[], int, int) -> int
fifo write: @1699477099066579561 0x7f81e15be2b4 414: java.io.DataInputStream::readUnsignedByte() -> int
fifo write: @1699477099066628302 0x7f81e90732cc 44: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::setKey(String) -> void
fifo write: @1699477099066676883 0x7f81e907364c 44: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::setName(String) -> void
fifo write: @1699477099066726253 0x7f81e15be854 147: java.util.TreeMap::colorOf(java.util.TreeMap$Entry) -> boolean
fifo write: @1699477099066773894 0x7f81e90739cc 44: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::setClassName(String) -> void
fifo write: @1699477099066815534 0x7f81e9073d4c 5: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::setDefer(boolean) -> void
fifo write: @1699477099066863575 0x7f81e907404c 44: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::setCategory(String) -> void
fifo write: @1699477099066905316 0x7f81e90743cc 5: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::setPrintable(boolean) -> void
fifo write: @1699477099066995017 0x7f81e15bec94 279: java.util.TreeMap$Entry::<init>(Object, Object, java.util.TreeMap$Entry) -> void
fifo write: @1699477099067045407 0x7f81e15bf214 240: java.util.jar.Attributes::get(Object) -> Object
fifo write: @1699477099067104208 0x7f81e15bf694 576: java.util.jar.Attributes::getValue(java.util.jar.Attributes$Name) -> String
fifo write: @1699477099067190159 0x7f81e15bfd74 1066: java.security.AccessController::doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) -> Object
fifo write: @1699477099067231310 0x7f81e90746cc 6: java.util.zip.ZipEntry::getName() -> String
fifo write: @1699477099067781897 0x7f81e15c0b54 625: String::toLowerCase() -> String
fifo write: @1699477099068135181 0x7f81e9075151 78: java.util.zip.ZipFile::ensureOpen() -> void
fifo write: @1699477099068406055 0x7f81e15c1314 31: java.lang.ref.Reference::clear() -> void
fifo write: @1699477099068726979 0x7f81e15c16b4 893: jdk.internal.ref.PhantomCleanable::remove() -> boolean
fifo write: @1699477099068902671 0x7f81e15c1f94 240: jdk.internal.ref.CleanerImpl$PhantomCleanableRef::performCleanup() -> void
fifo write: @1699477099069047783 0x7f81e15c2439 450: jdk.internal.ref.PhantomCleanable::clean() -> void
fifo write: @1699477099069360677 0x7f81e15c2f17 14005: java.net.URL::<init>(java.net.URL, String, java.net.URLStreamHandler) -> void
fifo write: @1699477099069410418 0x7f81e15ca297 199: java.net.URL::isBuiltinStreamHandler(String) -> boolean
fifo write: @1699477099069639351 0x7f81e15ca7ff 2579: sun.net.util.IPAddressUtil::checkHostString(String) -> String
fifo write: @1699477099069729362 0x7f81e15cbe57 2614: sun.net.util.IPAddressUtil::scan(String, long, long, char[]) -> int
fifo write: @1699477099069840173 0x7f81e15cd657 3884: java.net.URL::isBuiltinStreamHandler(java.net.URLStreamHandler) -> boolean
fifo write: @1699477099069897194 0x7f81e9075838 843: StringUTF16::compress(char[], int, byte[], int, int) -> int
fifo write: @1699477099070207578 0x7f81e15cf394 47: java.util.ArrayDeque::add(Object) -> boolean
fifo write: @1699477099070356120 0x7f81e15cf7d4 1006: java.util.ArrayDeque::addLast(Object) -> void
fifo write: @1699477099070392970 0x7f81e15d0174 95: Module::isNamed() -> boolean
fifo write: @1699477099071536815 0x7f81e15d0594 340: java.util.Collections$SetFromMap::add(Object) -> boolean
fifo write: @1699477099071734987 0x7f81e15d0b3a 782: java.util.jar.JavaUtilJarAccessImpl::entryFor(java.util.jar.JarFile, String) -> java.util.jar.JarEntry
fifo write: @1699477099071795728 0x7f81e15d141a 445: java.util.jar.JarFile::entryFor(String) -> java.util.jar.JarEntry
fifo write: @1699477099071841479 0x7f81e15d1a94 31: java.util.jar.JarEntry::<init>(String) -> void
fifo write: @1699477099071901399 0x7f81e15d1e14 341: java.util.jar.JarFile$JarFileEntry::<init>(java.util.jar.JarFile, String) -> void
fifo write: @1699477099071991360 0x7f81e15d247f 3785: java.util.WeakHashMap::put(Object, Object) -> Object
fifo write: @1699477099072037541 0x7f81e15d3ff7 532: java.util.zip.ZipUtils::CENCRC(byte[], int) -> long
fifo write: @1699477099072083132 0x7f81e15d4677 532: java.util.zip.ZipUtils::CENTIM(byte[], int) -> long
fifo write: @1699477099072122712 0x7f81e15d4cd4 95: java.util.zip.ZipUtils::CH(byte[], int) -> int
fifo write: @1699477099072184553 0x7f81e15d50d4 1196: java.util.zip.ZipEntry::<init>(String) -> void
fifo write: @1699477099072226413 0x7f81e15d5c74 189: java.util.zip.ZipUtils::CENVEM_FA(byte[], int) -> int
fifo write: @1699477099072272514 0x7f81e15d6114 47: java.util.ArrayDeque::poll() -> Object
fifo write: @1699477099072706680 0x7f81e15d6514 242: java.util.zip.ZipCoder$UTF8ZipCoder::hasTrailingSlash(byte[], int) -> boolean
fifo write: @1699477099072777381 0x7f81e90764b3 604: java.util.zip.ZipCoder::hash(String) -> int
fifo write: @1699477099073095395 0x7f81e9076ed0 43: jdk.internal.loader.URLClassPath$JarLoader::ensureOpen() -> void
fifo write: @1699477099073242597 0x7f81e15d6ab7 2420: java.util.zip.ZipFile$ZipFileInputStream::<init>(java.util.zip.ZipFile, byte[], int) -> void
fifo write: @1699477099073358178 0x7f81e15d7df7 532: java.util.zip.ZipUtils::CENOFF(byte[], int) -> long
fifo write: @1699477099073526950 0x7f81e15d8494 176: java.util.zip.ZipFile$ZipFileInflaterInputStream::<init>(java.util.zip.ZipFile, java.util.zip.ZipFile$ZipFileInputStream, java.util.zip.ZipFile$CleanableResource, int) -> void
fifo write: @1699477099073740953 0x7f81e15d8c2f 8585: java.util.concurrent.ConcurrentHashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477099073815564 0x7f81e90771de 1255: StringLatin1::replace(byte[], char, char) -> String
fifo write: @1699477099073879435 0x7f81e15dcdb4 973: java.util.zip.ZipFile$CleanableResource::getInflater() -> java.util.zip.Inflater
fifo write: @1699477099073996986 0x7f81e15dd8e7 4022: java.util.zip.ZipFile::getInputStream(java.util.zip.ZipEntry) -> java.io.InputStream
fifo write: @1699477099074097398 0x7f81e15dfc94 230: java.util.zip.ZipFile$InflaterCleanupAction::<init>(java.util.zip.Inflater, java.util.zip.ZipFile$CleanableResource) -> void
fifo write: @1699477099074203269 0x7f81e15e01dc 778: java.util.zip.ZipFile$ZipFileInflaterInputStream::<init>(java.util.zip.ZipFile, java.util.zip.ZipFile$ZipFileInputStream, java.util.zip.ZipFile$CleanableResource, java.util.zip.Inflater, int) -> void
fifo write: @1699477099074279870 0x7f81e15e0b7d 1895: java.util.zip.InflaterInputStream::<init>(java.io.InputStream, java.util.zip.Inflater, int) -> void
fifo write: @1699477099074344181 0x7f81e15e1914 289: java.net.URL::getDefaultPort() -> int
fifo write: @1699477099074391221 0x7f81e15e1e39 441: java.util.zip.InflaterInputStream::close() -> void
fifo write: @1699477099074465082 0x7f81e15e2519 1789: java.util.zip.ZipFile$ZipFileInflaterInputStream::close() -> void
fifo write: @1699477099074509763 0x7f81e15e3614 117: java.util.zip.ZipFile$InflaterCleanupAction::run() -> void
fifo write: @1699477099074611274 0x7f81e15e3ad4 756: java.util.zip.ZipFile$CleanableResource::releaseInflater(java.util.zip.Inflater) -> void
fifo write: @1699477099074659065 0x7f81e15e443c 519: java.util.zip.Inflater::reset() -> void
fifo write: @1699477099074850357 0x7f81e15e4ddf 3336: java.net.URLStreamHandler::setURL(java.net.URL, String, String, int, String, String, String, String, String) -> void
fifo write: @1699477099075343494 0x7f81e9078620 7883: java.util.jar.Attributes::read(java.util.jar.Manifest$FastInputStream, byte[], String, int) -> int
fifo write: @1699477099076264356 0x7f81e907d266 1542: jdk.internal.loader.URLClassPath::getLoader(int) -> jdk.internal.loader.URLClassPath$Loader
fifo write: @1699477099076561069 0x7f81e15e67f4 237: java.util.zip.ZipUtils::CENATX_PERMS(byte[], int) -> int
fifo write: @1699477099076645570 0x7f81e907e0d7 1504: AbstractStringBuilder::append(String) -> AbstractStringBuilder
fifo write: @1699477099076699331 0x7f81e15e6d17 221: sun.net.www.protocol.jar.Handler::checkNestedProtocol(String) -> String
fifo write: @1699477099077469341 0x7f81e907f098 2467: java.util.zip.ZipFile$Source::getEntryPos(String, boolean) -> int
fifo write: @1699477099077767135 0x7f81e15e7214 329: java.net.URL::toString() -> String
fifo write: @1699477099077858086 0x7f81e15e7714 232: java.net.URL::toExternalForm() -> String
fifo write: @1699477099078190410 0x7f81e15e7bba 464: String::indexOf(String, int) -> int
fifo write: @1699477099078246901 0x7f81e15e82f7 1198: String::indexOf(byte[], byte, int, String, int) -> int
fifo write: @1699477099078740447 0x7f81e15e91ec 5301: java.net.URLStreamHandler::toExternalForm(java.net.URL) -> String
fifo write: @1699477099078872179 0x7f81e15ebb94 272: ClassNotFoundException::<init>(String) -> void
fifo write: @1699477099079065512 0x7f81e15ec0c5 273: Throwable::fillInStackTrace() -> Throwable
fifo write: @1699477099080263057 0x7f81e15ec694 226: sun.net.www.ParseUtil::encodePath(String, boolean) -> String
fifo write: @1699477099080362468 0x7f81e9081154 2594: java.util.jar.JarFile::checkForSpecialAttributes() -> void
fifo write: @1699477099080965966 0x7f81e15ecd24 2606: sun.net.www.protocol.jar.Handler::parseURL(java.net.URL, String, int, int) -> void
fifo write: @1699477099081339361 0x7f81e15ee6e7 9347: java.util.zip.ZipFile::getZipEntry(String, int) -> java.util.zip.ZipEntry
fifo write: @1699477099081557424 0x7f81e15f2c07 6640: sun.net.www.protocol.jar.Handler::parseContextSpec(java.net.URL, String) -> String
fifo write: @1699477099081623405 0x7f81e15f5f3f 2539: sun.net.www.protocol.jar.Handler::indexOfBangSlash(String) -> int
fifo write: @1699477099081694836 0x7f81e15f7414 655: jdk.internal.loader.URLClassPath$JarLoader$2::<init>(jdk.internal.loader.URLClassPath$JarLoader, String, java.net.URL, java.util.jar.JarEntry) -> void
fifo write: @1699477099081791147 0x7f81e15f7c46 3284: sun.net.www.protocol.jar.Handler::canonicalizeString(String, int) -> String
fifo write: @1699477099082402285 0x7f81e15f98ff 4815: java.util.jar.JarFile::getManifestFromReference() -> java.util.jar.Manifest
fifo write: @1699477099082488376 0x7f81e15fbe4c 3637: sun.net.util.URLUtil::urlNoFragString(java.net.URL) -> String
fifo write: @1699477099082524886 0x7f81e15fdb94 137: jdk.internal.loader.Resource::<init>() -> void
fifo write: @1699477099082573477 0x7f81e15fdf74 67: jdk.internal.loader.URLClassPath$JarLoader$2::getCodeSourceURL() -> java.net.URL
fifo write: @1699477099082620478 0x7f81e15fe314 31: java.util.jar.JarFile::getManifest() -> java.util.jar.Manifest
fifo write: @1699477099082733639 0x7f81e15fe88f 4949: java.net.URLStreamHandler::setURL(java.net.URL, String, String, int, String, String) -> void
fifo write: @1699477099082803470 0x7f81e16010cd 878: java.util.jar.JarFile::getInputStream(java.util.zip.ZipEntry) -> java.io.InputStream
fifo write: @1699477099082855721 0x7f81e1601b94 340: java.net.URLClassLoader$1::<init>(java.net.URLClassLoader, String) -> void
fifo write: @1699477099082912801 0x7f81e160212a 1295: java.net.URLClassLoader::findClass(String) -> Class
fifo write: @1699477099082985662 0x7f81e1602cd9 513: ClassLoader::postDefineClass(Class, java.security.ProtectionDomain) -> void
fifo write: @1699477099083043803 0x7f81e1603466 1098: ClassLoader::getNamedPackage(String, Module) -> NamedPackage
fifo write: @1699477099083668971 0x7f81e160405c 4113: java.net.URLClassLoader::getAndVerifyPackage(String, java.util.jar.Manifest, java.net.URL) -> Package
fifo write: @1699477099083722522 0x7f81e16060d4 1409: java.security.SecureClassLoader$CodeSourceKey::equals(Object) -> boolean
fifo write: @1699477099083821403 0x7f81e1606dde 2594: java.security.CodeSource::matchCerts(java.security.CodeSource, boolean) -> boolean
fifo write: @1699477099083903394 0x7f81e1608574 27: java.util.jar.JarFile$JarFileEntry::getRealName() -> String
fifo write: @1699477099084036976 0x7f81e1608954 1344: java.security.AccessController::checkContext(java.security.AccessControlContext, Class) -> java.security.AccessControlContext
fifo write: @1699477099084084956 0x7f81e1609516 37: java.net.URL::<init>(java.net.URL, String) -> void
fifo write: @1699477099084186218 0x7f81e16099cb 2221: jdk.internal.loader.URLClassPath$JarLoader::checkResource(String, boolean, java.util.jar.JarEntry) -> jdk.internal.loader.Resource
fifo write: @1699477099087212947 0x7f81e908294c 6: java.util.TreeMap$Entry::getValue() -> Object
fifo write: @1699477099087863705 0x7f81e9082c4c 6: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::getClassName() -> String
fifo write: @1699477099087937946 0x7f81e9082f4c 6: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::getName() -> String
fifo write: @1699477099088719926 0x7f81e160ad9e 1869: ClassLoader::compareCerts(java.security.cert.Certificate[], java.security.cert.Certificate[]) -> boolean
fifo write: @1699477099088982200 0x7f81e160bfc1 3545: ClassLoader::definePackage(String, Module) -> Package
fifo write: @1699477099091243329 0x7f81e160dab7 2050: java.net.URL::set(String, String, int, String, String, String, String, String) -> void
fifo write: @1699477099091756146 0x7f81e908331f 6095: java.util.zip.ZipFile::getEntry(String) -> java.util.zip.ZipEntry
fifo write: @1699477099092493885 0x7f81e9087228 560: java.util.concurrent.ConcurrentHashMap::get(Object) -> Object
fifo write: @1699477099145767732 0x7f81e89b4e98 168: itable stub
fifo write: @1699477099146906157 0x7f81e160ee34 608: Throwable::<init>(String, Throwable) -> void
fifo write: @1699477099148312955 0x7f81e160f614 47: java.net.URLClassLoader$1::run() -> Object
fifo write: @1699477099148343995 0x7f81e160fa10 174: Thread::interrupted() -> boolean
fifo write: @1699477099148653409 0x7f81e160fed7 1159: ClassLoader::addClass(Class) -> void
fifo write: @1699477099149352758 0x7f81e1610d9f 5010: java.net.URLClassLoader$1::run() -> Class
fifo write: @1699477099149429349 0x7f81e161357c 4718: jdk.internal.loader.Resource::getBytes() -> byte[]
fifo write: @1699477099149479950 0x7f81e1615d54 1629: jdk.internal.loader.Resource::getByteBuffer() -> java.nio.ByteBuffer
fifo write: @1699477099149524461 0x7f81e1616a7c 1270: jdk.internal.loader.URLClassPath$JarLoader$2::getBytes() -> byte[]
fifo write: @1699477099149556621 0x7f81e1617614 137: java.util.zip.CRC32::<init>() -> void
fifo write: @1699477099149591861 0x7f81e16179f4 228: jdk.internal.loader.URLClassPath$JarLoader$2::getContentLength() -> int
fifo write: @1699477099149626632 0x7f81e1617e99 152: java.util.zip.Checksum::update(byte[]) -> void
fifo write: @1699477099149749273 0x7f81e1618357 906: java.util.zip.CRC32::update(byte[], int, int) -> void
fifo write: @1699477099149794434 0x7f81e1618c94 224: java.util.jar.JavaUtilJarAccessImpl::ensureInitialization(java.util.jar.JarFile) -> void
fifo write: @1699477099149936766 0x7f81e161919f 1411: jdk.internal.loader.URLClassPath$JarLoader$2::getManifest() -> java.util.jar.Manifest
fifo write: @1699477099149974376 0x7f81e1619faa 1185: java.util.jar.JarFile::ensureInitialization() -> void
fifo write: @1699477099150007827 0x7f81e161aa74 103: java.util.zip.CRC32::updateBytes(int, byte[], int, int) -> int
fifo write: @1699477099150038527 0x7f81e161ae74 2: java.util.zip.CRC32::getValue() -> long
fifo write: @1699477099150098868 0x7f81e161b214 240: jdk.internal.loader.URLClassPath$JarLoader$2::getCodeSigners() -> java.security.CodeSigner[]
fifo write: @1699477099150132808 0x7f81e161b6b4 1155: java.util.zip.CRC32::updateBytesCheck(byte[], int, int) -> void
fifo write: @1699477099150302021 0x7f81e161c1d9 1140: java.security.CodeSource::<init>(java.net.URL, java.security.CodeSigner[]) -> void
fifo write: @1699477099150346011 0x7f81e161cbf9 1264: java.util.jar.JarFile$JarFileEntry::getCodeSigners() -> java.security.CodeSigner[]
fifo write: @1699477099150490263 0x7f81e161d794 119: java.security.SecureClassLoader::defineClass(String, byte[], int, int, java.security.CodeSource) -> Class
fifo write: @1699477099150588314 0x7f81e161dc5a 1467: java.security.SecureClassLoader::getProtectionDomain(java.security.CodeSource) -> java.security.ProtectionDomain
fifo write: @1699477099150632945 0x7f81e161e794 340: java.security.SecureClassLoader$1::<init>(java.security.SecureClassLoader, java.security.CodeSource) -> void
fifo write: @1699477099150669175 0x7f81e161ec94 185: java.security.SecureClassLoader$CodeSourceKey::<init>(java.security.CodeSource) -> void
fifo write: @1699477099150680145 0x7f81e8a55d00 440: I2C/C2I adapters(0xbeabb)
fifo write: @1699477099150772517 0x7f81e161f114 245: java.security.SecureClassLoader$CodeSourceKey::hashCode() -> int
fifo write: @1699477099150815587 0x7f81e161f6b4 671: ClassLoader::defineClassSourceLocation(java.security.ProtectionDomain) -> String
fifo write: @1699477099150902178 0x7f81e161fedc 1005: ClassLoader::defineClass(String, byte[], int, int, java.security.ProtectionDomain) -> Class
fifo write: @1699477099151124481 0x7f81e1620a17 2009: java.lang.invoke.MemberName::getInvocationType() -> java.lang.invoke.MethodType
fifo write: @1699477099151369604 0x7f81e1621bdf 4291: ClassLoader::preDefineClass(String, java.security.ProtectionDomain) -> java.security.ProtectionDomain
fifo write: @1699477099151488786 0x7f81e1623f87 3238: ClassLoader::checkCerts(String, java.security.CodeSource) -> void
fifo write: @1699477099151583337 0x7f81e1625a14 481: java.util.ImmutableCollections$List12::get(int) -> Object
fifo write: @1699477099151800420 0x7f81e162629f 6831: java.net.URLClassLoader::isSealed(String, java.util.jar.Manifest) -> boolean
fifo write: @1699477099151901661 0x7f81e16294dc 3489: sun.invoke.util.VerifyAccess::isClassAccessible(Class, Class, Class, int) -> boolean
fifo write: @1699477099152247276 0x7f81e162b121 3284: java.lang.invoke.InvokerBytecodeGenerator::emitImplicitConversion(java.lang.invoke.LambdaForm$BasicType, Class, Object) -> void
fifo write: @1699477099155270595 0x7f81e162cbeb 485: java.lang.invoke.MemberName::<init>(Class, String, java.lang.invoke.MethodType, byte) -> void
fifo write: @1699477099155773101 0x7f81e90890cc 6: java.lang.reflect.Method::getName() -> String
fifo write: @1699477099155904773 0x7f81e90897cc 6: java.lang.reflect.Method::getReturnType() -> Class
fifo write: @1699477099155943913 0x7f81e9089acc 6: java.lang.reflect.Method::getSharedParameterTypes() -> Class[]
fifo write: @1699477099155981914 0x7f81e9089dcc 6: java.lang.reflect.Method::getDeclaringClass() -> Class
fifo write: @1699477099156023324 0x7f81e162d319 641: java.util.Arrays::hashCode(Object[]) -> int
fifo write: @1699477099156059225 0x7f81e162da74 95: java.util.LinkedHashMap$LinkedHashIterator::hasNext() -> boolean
fifo write: @1699477099156089745 0x7f81e162de94 79: PublicMethods$Key::hashCode() -> int
fifo write: @1699477099156140646 0x7f81e162e334 809: java.util.LinkedHashMap$LinkedHashIterator::nextNode() -> java.util.LinkedHashMap$Entry
fifo write: @1699477099156416009 0x7f81e162ec14 188: StringBuilder::append(String) -> AbstractStringBuilder
fifo write: @1699477099156773484 0x7f81e162f0b9 549: StringBuilder::append(Object) -> StringBuilder
fifo write: @1699477099157025297 0x7f81e162f794 39: StringBuilder::append(CharSequence) -> StringBuilder
fifo write: @1699477099157062158 0x7f81e162fb94 31: String::subSequence(int, int) -> CharSequence
fifo write: @1699477099157221060 0x7f81e1630037 2205: AbstractStringBuilder::append(CharSequence) -> AbstractStringBuilder
fifo write: @1699477099158028810 0x7f81e1630ffc 1529: java.lang.invoke.MemberName$Factory::resolveOrFail(byte, java.lang.invoke.MemberName, Class, int, Class) -> java.lang.invoke.MemberName
fifo write: @1699477099158340264 0x7f81e1631d14 137: jdk.internal.org.objectweb.asm.Label::<init>() -> void
fifo write: @1699477099160582523 0x7f81e1632114 511: jdk.internal.org.objectweb.asm.ByteVector::enlarge(int) -> void
fifo write: @1699477099162056552 0x7f81e908a922 12414: java.util.jar.JarFile::getEntry(String) -> java.util.zip.ZipEntry
fifo write: @1699477099162095973 0x7f81e909134c 6: java.lang.invoke.DirectMethodHandle::internalMemberName() -> java.lang.invoke.MemberName
fifo write: @1699477099162359896 0x7f81e8a55a00 440: I2C/C2I adapters(0xbabebe)
fifo write: @1699477099163461500 0x7f81e1632794 172: java.lang.invoke.MethodType::toMethodDescriptorString() -> String
fifo write: @1699477099164075978 0x7f81e1632cd4 673: java.lang.invoke.MemberName::getType() -> Object
fifo write: @1699477099164136879 0x7f81e1633474 91: java.lang.invoke.MethodType::basicType() -> java.lang.invoke.MethodType
fifo write: @1699477099165294094 0x7f81e8a55700 520: I2C/C2I adapters(0xbbabaabaa)
fifo write: @1699477099165307524 0x7f81e8a55400 504: I2C/C2I adapters(0xbbaaabaa)
fifo write: @1699477099165320274 0x7f81e8a55100 448: I2C/C2I adapters(0xba7eaa)
fifo write: @1699477099165333075 0x7f81e8a54e00 448: I2C/C2I adapters(0xba6aa)
fifo write: @1699477099165749930 0x7f81e8a53600 504: I2C/C2I adapters(0xabbbbbbb)
fifo write: @1699477099165763100 0x7f81e8a53300 520: I2C/C2I adapters(0xbbbbbabba)
fifo write: @1699477099167516953 0x7f81e90916ae 733: StringLatin1::indexOf(byte[], int, byte[], int, int) -> int
fifo write: @1699477099168543186 0x7f81e16338b4 569: jdk.internal.org.objectweb.asm.AnnotationWriter::computeAnnotationsSize(jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter) -> int
fifo write: @1699477099168599967 0x7f81e1634099 559: jdk.internal.org.objectweb.asm.Attribute::computeAttributesSize(jdk.internal.org.objectweb.asm.SymbolTable, int, int) -> int
fifo write: @1699477099168635927 0x7f81e1634814 488: java.util.Arrays::equals(byte[], byte[]) -> boolean
fifo write: @1699477099168707378 0x7f81e1634f22 951: jdk.internal.org.objectweb.asm.Attribute::putAttributes(jdk.internal.org.objectweb.asm.SymbolTable, int, int, jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099169424107 0x7f81e1635a74 2: java.lang.invoke.MemberName::getModifiers() -> int
fifo write: @1699477099169523349 0x7f81e1635e14 299: sun.invoke.util.BytecodeDescriptor::unparse(Class) -> String
fifo write: @1699477099169551229 0x7f81e90924d0 35: java.lang.invoke.MethodType::parameterCount() -> int
fifo write: @1699477099169699301 0x7f81e8a53000 560: I2C/C2I adapters(0xbbbbbbaaabb)
fifo write: @1699477099169709961 0x7f81e8a52d00 592: I2C/C2I adapters(0xbbbbbbaaabbb)
fifo write: @1699477099169720491 0x7f81e8a52a00 480: I2C/C2I adapters(0xbbbbbaa)
fifo write: @1699477099169730741 0x7f81e8a52700 520: I2C/C2I adapters(0xbbbbbaabb)
fifo write: @1699477099170852085 0x7f81e8a52400 480: I2C/C2I adapters(0xbbbbaaa)
fifo write: @1699477099170862926 0x7f81e8a52100 584: I2C/C2I adapters(0xbababbbbbaaa)
fifo write: @1699477099171025818 0x7f81e1636334 354: java.util.concurrent.ConcurrentSkipListSet::iterator() -> java.util.Iterator
fifo write: @1699477099171113809 0x7f81e1636894 314: java.util.concurrent.ConcurrentSkipListMap::baseHead() -> java.util.concurrent.ConcurrentSkipListMap$Node
fifo write: @1699477099171162689 0x7f81e1636db7 707: java.util.concurrent.ConcurrentSkipListMap::navigableKeySet() -> java.util.NavigableSet
fifo write: @1699477099171215860 0x7f81e16375b4 607: java.util.concurrent.ConcurrentSkipListMap$Iter::<init>(java.util.concurrent.ConcurrentSkipListMap) -> void
fifo write: @1699477099171271081 0x7f81e1637d34 799: java.util.concurrent.ConcurrentSkipListMap$KeyIterator::<init>(java.util.concurrent.ConcurrentSkipListMap) -> void
fifo write: @1699477099171332031 0x7f81e163865a 2783: java.util.concurrent.ConcurrentSkipListMap$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477099172180632 0x7f81e1639a54 721: java.util.ImmutableCollections$MapN::get(Object) -> Object
fifo write: @1699477099172583787 0x7f81e163a214 59: jdk.internal.org.objectweb.asm.SymbolTable$Entry::<init>(int, int, String, String, String, long, int) -> void
fifo write: @1699477099172636748 0x7f81e163a61d 126: jdk.internal.org.objectweb.asm.SymbolTable::addConstantMethodref(String, String, String, boolean) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477099172741019 0x7f81e163aad4 1092: jdk.internal.org.objectweb.asm.Label::resolve(byte[], int) -> boolean
fifo write: @1699477099172854321 0x7f81e163b7c9 1447: jdk.internal.org.objectweb.asm.SymbolTable::addConstantNameAndType(String, String) -> int
fifo write: @1699477099172900021 0x7f81e163c794 232: java.lang.reflect.ReflectAccess::getExecutableSharedParameterTypes(java.lang.reflect.Executable) -> Class[]
fifo write: @1699477099172944942 0x7f81e163cc14 419: jdk.internal.reflect.ReflectionFactory::getExecutableSharedParameterTypes(java.lang.reflect.Executable) -> Class[]
fifo write: @1699477099173002913 0x7f81e163d29d 1615: jdk.internal.org.objectweb.asm.MethodWriter::visitMethodInsn(int, String, String, String, boolean) -> void
fifo write: @1699477099173793423 0x7f81e163e3ff 2695: java.lang.invoke.TypeConvertingMethodAdapter::descriptorToName(String) -> String
fifo write: @1699477099174585933 0x7f81e163fa54 103: java.lang.invoke.MethodHandleNatives::refKindIsField(byte) -> boolean
fifo write: @1699477099174851927 0x7f81e16401bc 6383: Class::descriptorString() -> String
fifo write: @1699477099174888807 0x7f81e16433d9 784: jdk.internal.org.objectweb.asm.MethodWriter::visitInsn(int) -> void
fifo write: @1699477099175157331 0x7f81e1643fe4 7155: java.lang.invoke.MemberName::checkForTypeAlias(Class) -> void
fifo write: @1699477099175572796 0x7f81e89b4f50 27: vtable stub
fifo write: @1699477099176088493 0x7f81e1647234 881: java.util.HashMap$HashIterator::<init>(java.util.HashMap) -> void
fifo write: @1699477099176323266 0x7f81e1647b14 299: jdk.internal.org.objectweb.asm.ByteVector::put11(int, int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099176408277 0x7f81e16481b7 1868: jdk.internal.org.objectweb.asm.MethodVisitor::<init>(int, jdk.internal.org.objectweb.asm.MethodVisitor) -> void
fifo write: @1699477099176626290 0x7f81e1649381 5398: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477099176829922 0x7f81e164b8f4 2084: jdk.internal.org.objectweb.asm.Frame::merge(jdk.internal.org.objectweb.asm.SymbolTable, int, int[], int) -> boolean
fifo write: @1699477099176948104 0x7f81e164ca14 388: sun.reflect.generics.parser.SignatureParser::advance() -> void
fifo write: @1699477099176981874 0x7f81e90927cc 2: java.lang.reflect.Method::getModifiers() -> int
fifo write: @1699477099177074435 0x7f81e164d0f7 1515: sun.reflect.generics.parser.SignatureParser::current() -> char
fifo write: @1699477099177185777 0x7f81e164de94 185: jdk.internal.org.objectweb.asm.Frame::<init>(jdk.internal.org.objectweb.asm.Label) -> void
fifo write: @1699477099177254558 0x7f81e164e354 1380: jdk.internal.org.objectweb.asm.SymbolTable::addTypeInternal(jdk.internal.org.objectweb.asm.SymbolTable$Entry) -> int
fifo write: @1699477099177372459 0x7f81e164ee74 155: jdk.internal.org.objectweb.asm.Label::getCanonicalInstance() -> jdk.internal.org.objectweb.asm.Label
fifo write: @1699477099177415230 0x7f81e164f2f4 98: jdk.internal.org.objectweb.asm.MethodWriter::visitAbstractType(int, int) -> void
fifo write: @1699477099177517591 0x7f81e164f7cf 1574: jdk.internal.org.objectweb.asm.Frame::push(jdk.internal.org.objectweb.asm.SymbolTable, String) -> void
fifo write: @1699477099177605522 0x7f81e16507de 3370: jdk.internal.org.objectweb.asm.MethodWriter::visitLabel(jdk.internal.org.objectweb.asm.Label) -> void
fifo write: @1699477099177631693 0x7f81e9092af3 156: String::<init>(byte[], byte) -> void
fifo write: @1699477099177677213 0x7f81e16520d9 763: jdk.internal.org.objectweb.asm.MethodWriter::visitTypeInsn(int, String) -> void
fifo write: @1699477099177761634 0x7f81e1652bc7 1594: jdk.internal.org.objectweb.asm.Frame::pop(String) -> void
fifo write: @1699477099178186290 0x7f81e1653a94 278: java.util.LinkedHashMap::afterNodeInsertion(boolean) -> void
fifo write: @1699477099178468513 0x7f81e1653f94 167: java.util.HashMap$EntryIterator::next() -> Object
fifo write: @1699477099178674246 0x7f81e16543f9 1128: sun.reflect.generics.parser.SignatureParser::skipIdentifier() -> void
fifo write: @1699477099178759697 0x7f81e1654eb4 497: jdk.internal.reflect.ClassFileAssembler::emitShort(short) -> void
fifo write: @1699477099178819198 0x7f81e1655594 321: jdk.internal.reflect.ClassFileAssembler::cpi() -> short
fifo write: @1699477099178981810 0x7f81e1655a74 3: java.nio.HeapByteBuffer::byteOffset(long) -> long
fifo write: @1699477099179011850 0x7f81e1655e14 241: java.nio.Buffer::nextGetIndex(int) -> int
fifo write: @1699477099179193823 0x7f81e16562f4 2: jdk.internal.reflect.ByteVectorImpl::getLength() -> int
fifo write: @1699477099179299224 0x7f81e165671c 1340: jdk.internal.reflect.ClassFileAssembler::emitConstantPoolUTF8(String) -> void
fifo write: @1699477099179349995 0x7f81e16574ff 2028: jdk.internal.reflect.UTF8::utf8Length(String) -> int
fifo write: @1699477099179451566 0x7f81e165873f 2829: jdk.internal.reflect.UTF8::encode(String) -> byte[]
fifo write: @1699477099179574918 0x7f81e165a339 680: jdk.internal.misc.ScopedMemoryAccess::getShortUnalignedInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, boolean) -> short
fifo write: @1699477099179609388 0x7f81e165aa94 353: jdk.internal.misc.Unsafe::getShortUnaligned(Object, long, boolean) -> short
fifo write: @1699477099179661779 0x7f81e165b337 699: jdk.internal.misc.Unsafe::getShortUnaligned(Object, long) -> short
fifo write: @1699477099179688779 0x7f81e165ba74 254: jdk.internal.misc.Unsafe::convEndian(boolean, short) -> short
fifo write: @1699477099179738070 0x7f81e165bf5f 1246: jdk.internal.misc.ScopedMemoryAccess::getShortUnaligned(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, boolean) -> short
fifo write: @1699477099179797951 0x7f81e90936cc 6: jdk.internal.loader.AbstractClassLoaderValue$Sub::parent() -> jdk.internal.loader.AbstractClassLoaderValue
fifo write: @1699477099179836951 0x7f81e165cb3f 2080: java.nio.HeapByteBuffer::getShort() -> short
fifo write: @1699477099179869771 0x7f81e165dcb4 772: Class::reflectionData() -> Class$ReflectionData
fifo write: @1699477099179928962 0x7f81e165e517 36: jdk.internal.reflect.ConstantPool::getUTF8At(int) -> String
fifo write: @1699477099180025003 0x7f81e9093e4c 6: Class::getAnnotationType() -> sun.reflect.annotation.AnnotationType
fifo write: @1699477099180051284 0x7f81e165e8f4 2: java.nio.HeapByteBuffer::ix(int) -> int
fifo write: @1699477099180480739 0x7f81e165ef94 92: java.util.LinkedHashMap$LinkedValueIterator::next() -> Object
fifo write: @1699477099181053797 0x7f81e9094150 151: sun.reflect.generics.parser.SignatureParser::current() -> char
fifo write: @1699477099181855137 0x7f81e165f394 137: java.lang.reflect.AccessibleObject::<init>() -> void
fifo write: @1699477099181884447 0x7f81e165f794 234: java.lang.reflect.Executable::<init>() -> void
fifo write: @1699477099181895668 0x7f81e8a51e00 448: I2C/C2I adapters(0xbbeabea)
fifo write: @1699477099181967319 0x7f81e8a51b00 520: I2C/C2I adapters(0xbbaaabbba)
fifo write: @1699477099181978119 0x7f81e8a51600 480: I2C/C2I adapters(0xbababeaa)
fifo write: @1699477099182384224 0x7f81e165fc14 31: java.io.DataInputStream::readShort() -> short
fifo write: @1699477099182418814 0x7f81e1660019 88: java.io.DataInputStream::readFully(byte[]) -> void
fifo write: @1699477099182666828 0x7f81e89b4f80 27: vtable stub
fifo write: @1699477099182846680 0x7f81e1660445 258: java.io.ByteArrayInputStream::read() -> int
fifo write: @1699477099182881790 0x7f81e1660a34 519: java.io.DataInputStream::readByte() -> byte
fifo write: @1699477099183153254 0x7f81e1661099 288: java.util.zip.Checksum::update(byte[]) -> void
fifo write: @1699477099183263515 0x7f81e166159a 643: sun.util.calendar.ZoneInfoFile$Checksum::update(int) -> void
fifo write: @1699477099183366207 0x7f81e90946cc 726: java.io.BufferedInputStream::read() -> int
fifo write: @1699477099183377227 0x7f81e89c0700 584: I2C/C2I adapters(0xbbabbaaaaaab)
fifo write: @1699477099183715561 0x7f81e89c0400 480: I2C/C2I adapters(0xbaaaaba)
fifo write: @1699477099184209257 0x7f81e1661c54 144: sun.util.locale.LocaleUtils::isUpper(char) -> boolean
fifo write: @1699477099184603453 0x7f81e16620d6 785: java.lang.reflect.Constructor::newInstanceWithCaller(Object[], boolean, Class) -> Object
fifo write: @1699477099184704414 0x7f81e89b4fb0 27: vtable stub
fifo write: @1699477099184907737 0x7f81e9094e4c 6: java.lang.reflect.Constructor::getDeclaringClass() -> Class
fifo write: @1699477099185655906 0x7f81e1662a9f 3050: java.util.StringTokenizer::skipDelimiters(int) -> int
fifo write: @1699477099185849239 0x7f81e1664494 137: java.util.StringTokenizer::hasMoreTokens() -> boolean
fifo write: @1699477099185952800 0x7f81e1664ae3 5207: java.util.StringTokenizer::scanToken(int) -> int
fifo write: @1699477099185988760 0x7f81e1667559 630: java.util.StringTokenizer::nextToken() -> String
fifo write: @1699477099186055091 0x7f81e89c0100 496: I2C/C2I adapters(0xbaaaaaaa)
fifo write: @1699477099186150743 0x7f81e89bfe00 488: I2C/C2I adapters(0xbbbbbbbe)
fifo write: @1699477099186509447 0x7f81e909514c 3: sun.util.locale.StringTokenIterator::isDone() -> boolean
fifo write: @1699477099186638469 0x7f81e1667d94 372: java.lang.ref.Reference::<init>(Object) -> void
fifo write: @1699477099186674069 0x7f81e1668374 376: sun.util.locale.LocaleUtils::toLower(char) -> char
fifo write: @1699477099186826651 0x7f81e909574c 6: sun.util.locale.BaseLocale::getVariant() -> String
fifo write: @1699477099186898392 0x7f81e9095a4c 6: sun.util.locale.BaseLocale::getRegion() -> String
fifo write: @1699477099186935763 0x7f81e9095d4c 6: sun.util.locale.StringTokenIterator::current() -> String
fifo write: @1699477099186998754 0x7f81e909604c 6: sun.util.locale.BaseLocale::getScript() -> String
fifo write: @1699477099187311598 0x7f81e1668b74 258: sun.util.locale.LocaleUtils::isAlpha(char) -> boolean
fifo write: @1699477099187338408 0x7f81e909634c 2: sun.util.locale.StringTokenIterator::currentEnd() -> int
fifo write: @1699477099187375098 0x7f81e16690b4 484: java.lang.ref.SoftReference::<init>(Object) -> void
fifo write: @1699477099187402919 0x7f81e909664c 2: sun.util.locale.BaseLocale$Key::hashCode() -> int
fifo write: @1699477099187429379 0x7f81e1669754 144: sun.util.locale.LocaleUtils::isLower(char) -> boolean
fifo write: @1699477099187529540 0x7f81e1669b74 90: sun.util.locale.ParseStatus::isError() -> boolean
fifo write: @1699477099187645702 0x7f81e1669fb9 445: sun.util.locale.BaseLocale::hashCode() -> int
fifo write: @1699477099187885335 0x7f81e166a83f 4255: sun.util.locale.LocaleUtils::toLowerString(String) -> String
fifo write: @1699477099188138108 0x7f81e9096951 1007: StringBuilder::toString() -> String
fifo write: @1699477099188210219 0x7f81e166c914 401: sun.util.locale.StringTokenIterator::hasNext() -> boolean
fifo write: @1699477099188304390 0x7f81e166cfdc 786: sun.util.locale.StringTokenIterator::next() -> String
fifo write: @1699477099188439152 0x7f81e166da39 813: sun.util.locale.InternalLocaleBuilder::clearExtensions() -> sun.util.locale.InternalLocaleBuilder
fifo write: @1699477099188556304 0x7f81e166e27f 2091: sun.util.locale.LocaleUtils::isAlphaString(String) -> boolean
fifo write: @1699477099188600894 0x7f81e166f4d9 1288: sun.util.locale.LocaleObjectCache::cleanStaleEntries() -> void
fifo write: @1699477099188636825 0x7f81e1670074 379: sun.util.locale.LocaleUtils::isEmpty(java.util.Map) -> boolean
fifo write: @1699477099188809877 0x7f81e167079f 4965: sun.util.locale.StringTokenIterator::nextDelimiter(int) -> int
fifo write: @1699477099188855157 0x7f81e1673014 432: java.lang.ref.SoftReference::<init>(Object, java.lang.ref.ReferenceQueue) -> void
fifo write: @1699477099188885418 0x7f81e90972cc 6: sun.util.locale.LanguageTag::getLanguage() -> String
fifo write: @1699477099188914748 0x7f81e90975cc 6: sun.util.locale.LanguageTag::getScript() -> String
fifo write: @1699477099188943829 0x7f81e90978cc 6: sun.util.locale.LanguageTag::getPrivateuse() -> String
fifo write: @1699477099188972669 0x7f81e9097bcc 6: sun.util.locale.LanguageTag::getRegion() -> String
fifo write: @1699477099189029810 0x7f81e1673705 1234: sun.util.locale.BaseLocale$Key::<init>(String, String, String, String, boolean) -> void
fifo write: @1699477099189097751 0x7f81e16744c7 4617: sun.util.locale.LocaleObjectCache::get(Object) -> Object
fifo write: @1699477099189174232 0x7f81e167653f 4255: sun.util.locale.LocaleUtils::toUpperString(String) -> String
fifo write: @1699477099189198652 0x7f81e9097ed0 47: String::isEmpty() -> boolean
fifo write: @1699477099189287223 0x7f81e1678614 461: sun.util.locale.BaseLocale$Key::normalize(sun.util.locale.BaseLocale$Key) -> sun.util.locale.BaseLocale$Key
fifo write: @1699477099189476235 0x7f81e1678db7 2411: sun.util.locale.BaseLocale::getInstance(String, String, String, String) -> sun.util.locale.BaseLocale
fifo write: @1699477099189697838 0x7f81e167a319 1027: sun.util.locale.BaseLocale::<init>(String, String, String, String, boolean) -> void
fifo write: @1699477099189780619 0x7f81e167af14 230: java.util.Locale::<init>(sun.util.locale.BaseLocale, sun.util.locale.LocaleExtensions) -> void
fifo write: @1699477099189887271 0x7f81e167b414 581: sun.util.locale.BaseLocale$Key::getBaseLocale() -> sun.util.locale.BaseLocale
fifo write: @1699477099189940021 0x7f81e167bab4 398: sun.util.locale.InternalLocaleBuilder::<init>() -> void
fifo write: @1699477099190026233 0x7f81e167c157 1817: java.util.Locale::getInstance(sun.util.locale.BaseLocale, sun.util.locale.LocaleExtensions) -> java.util.Locale
fifo write: @1699477099190066933 0x7f81e167ce74 34: sun.util.locale.ParseStatus::reset() -> void
fifo write: @1699477099190107654 0x7f81e167d214 286: sun.util.locale.ParseStatus::<init>() -> void
fifo write: @1699477099190239385 0x7f81e167d759 793: sun.util.locale.StringTokenIterator::setStart(int) -> sun.util.locale.StringTokenIterator
fifo write: @1699477099190302706 0x7f81e167e194 1526: java.util.Locale::forLanguageTag(String) -> java.util.Locale
fifo write: @1699477099190372627 0x7f81e167f022 1775: sun.util.locale.StringTokenIterator::<init>(String, String) -> void
fifo write: @1699477099190453258 0x7f81e1680354 1197: sun.util.locale.LanguageTag::<init>() -> void
fifo write: @1699477099190668041 0x7f81e1680eff 8074: sun.util.locale.BaseLocale$Key::hashCode(sun.util.locale.BaseLocale) -> int
fifo write: @1699477099190764062 0x7f81e1684e37 4307: sun.util.locale.LanguageTag::parse(String, sun.util.locale.ParseStatus) -> sun.util.locale.LanguageTag
fifo write: @1699477099190819333 0x7f81e16870f4 1531: sun.util.locale.BaseLocale::convertOldISOCodes(String) -> String
fifo write: @1699477099190891564 0x7f81e1687e77 1300: sun.util.locale.LanguageTag::parseLanguage(sun.util.locale.StringTokenIterator, sun.util.locale.ParseStatus) -> boolean
fifo write: @1699477099190962525 0x7f81e1688c7f 2175: sun.util.locale.LanguageTag::isExtlang(String) -> boolean
fifo write: @1699477099191027996 0x7f81e1689eff 2175: sun.util.locale.LanguageTag::isScript(String) -> boolean
fifo write: @1699477099191061796 0x7f81e168b119 104: String::<init>(char[]) -> void
fifo write: @1699477099191112897 0x7f81e168b534 295: sun.util.locale.InternalLocaleBuilder::clear() -> sun.util.locale.InternalLocaleBuilder
fifo write: @1699477099191159677 0x7f81e168bb34 460: sun.util.locale.LanguageTag::getExtlangs() -> java.util.List
fifo write: @1699477099191206398 0x7f81e168c134 460: sun.util.locale.LanguageTag::getVariants() -> java.util.List
fifo write: @1699477099191251438 0x7f81e168c734 460: sun.util.locale.LanguageTag::getExtensions() -> java.util.List
fifo write: @1699477099191296409 0x7f81e168ccf4 379: sun.util.locale.LocaleUtils::isEmpty(java.util.List) -> boolean
fifo write: @1699477099191341360 0x7f81e168d274 379: sun.util.locale.LocaleUtils::isEmpty(java.util.Set) -> boolean
fifo write: @1699477099191397100 0x7f81e168d814 31: sun.util.locale.BaseLocale$Cache::normalizeKey(sun.util.locale.BaseLocale$Key) -> sun.util.locale.BaseLocale$Key
fifo write: @1699477099191448581 0x7f81e168dc14 432: sun.util.locale.BaseLocale$Cache::normalizeKey(Object) -> Object
fifo write: @1699477099191507242 0x7f81e168e1b4 715: sun.util.locale.BaseLocale$Cache::createObject(sun.util.locale.BaseLocale$Key) -> sun.util.locale.BaseLocale
fifo write: @1699477099191563362 0x7f81e168e9d4 1069: sun.util.locale.BaseLocale$Cache::createObject(Object) -> Object
fifo write: @1699477099191790815 0x7f81e168f4df 6320: sun.util.locale.LocaleUtils::toTitleString(String) -> String
fifo write: @1699477099191888907 0x7f81e169249f 4155: sun.util.locale.LanguageTag::isRegion(String) -> boolean
fifo write: @1699477099191962988 0x7f81e1694477 1220: sun.util.locale.LanguageTag::parseScript(sun.util.locale.StringTokenIterator, sun.util.locale.ParseStatus) -> boolean
fifo write: @1699477099192007338 0x7f81e1695194 47: java.util.Locale$Cache::createObject(Object) -> Object
fifo write: @1699477099192060729 0x7f81e16955f7 1831: java.util.Locale$Cache::createObject(Object) -> java.util.Locale
fifo write: @1699477099192071719 0x7f81e89b4fe0 168: itable stub
fifo write: @1699477099192133550 0x7f81e1696423 1682: sun.util.locale.LanguageTag::parseVariants(sun.util.locale.StringTokenIterator, sun.util.locale.ParseStatus) -> boolean
fifo write: @1699477099192396323 0x7f81e169768f 10106: sun.util.locale.InternalLocaleBuilder::setExtensions(java.util.List, String) -> sun.util.locale.InternalLocaleBuilder
fifo write: @1699477099192444414 0x7f81e169bc99 1801: sun.util.locale.InternalLocaleBuilder::getLocaleExtensions() -> sun.util.locale.LocaleExtensions
fifo write: @1699477099192507765 0x7f81e169cc69 2439: sun.util.locale.LanguageTag::parseExtlangs(sun.util.locale.StringTokenIterator, sun.util.locale.ParseStatus) -> boolean
fifo write: @1699477099192616386 0x7f81e169e2e1 6637: sun.util.locale.InternalLocaleBuilder::setLanguageTag(sun.util.locale.LanguageTag) -> sun.util.locale.InternalLocaleBuilder
fifo write: @1699477099192698697 0x7f81e16a1097 3725: sun.util.locale.InternalLocaleBuilder::getBaseLocale() -> sun.util.locale.BaseLocale
fifo write: @1699477099192788198 0x7f81e16a2f34 700: sun.util.locale.LanguageTag::parseRegion(sun.util.locale.StringTokenIterator, sun.util.locale.ParseStatus) -> boolean
fifo write: @1699477099193240254 0x7f81e16a3961 3537: sun.util.locale.LanguageTag::parsePrivateuse(sun.util.locale.StringTokenIterator, sun.util.locale.ParseStatus) -> boolean
fifo write: @1699477099193555438 0x7f81e16a5969 5690: sun.util.locale.LanguageTag::parseExtensions(sun.util.locale.StringTokenIterator, sun.util.locale.ParseStatus) -> boolean
fifo write: @1699477099193714830 0x7f81e90984f5 446: java.util.concurrent.ConcurrentHashMap::addCount(long, int) -> void
fifo write: @1699477099193793511 0x7f81e16a85f4 95: java.util.Locale::hasExtensions() -> boolean
fifo write: @1699477099193908973 0x7f81e16a8a34 1039: sun.util.locale.BaseLocale::equals(Object) -> boolean
fifo write: @1699477099193949853 0x7f81e16a93f4 1619: java.util.Locale::equals(Object) -> boolean
fifo write: @1699477099193988284 0x7f81e16aa0b4 381: java.util.Locale::stripExtensions() -> java.util.Locale
fifo write: @1699477099194264857 0x7f81e9098dcc 2: java.lang.invoke.InfoFromMemberName::getReferenceKind() -> int
fifo write: @1699477099194463820 0x7f81e16aa708 1713: Class::getReflectionFactory() -> jdk.internal.reflect.ReflectionFactory
fifo write: @1699477099195822807 0x7f81e9099183 6066: java.io.DataInputStream::readUTF(java.io.DataInput) -> String
fifo write: @1699477099196235963 0x7f81e909c7d0 67: java.util.zip.ZipFile$Source::getEntryHash(int) -> int
fifo write: @1699477099196699099 0x7f81e909cb50 79: java.util.zip.ZipFile$Source::getEntryNext(int) -> int
fifo write: @1699477099196755449 0x7f81e16ab85e 1161: ClassLoader::getDefinedPackage(String) -> Package
fifo write: @1699477099196918772 0x7f81e16ac294 137: java.util.zip.CRC32::<init>() -> void
fifo write: @1699477099197198005 0x7f81e16ac6dc 1502: jdk.internal.loader.URLClassPath$JarLoader$2::getBytes() -> byte[]
fifo write: @1699477099197409548 0x7f81e16ad646 7766: java.net.URLClassLoader::defineClass(String, jdk.internal.loader.Resource) -> Class
fifo write: @1699477099197651751 0x7f81e16b10f4 98: java.util.zip.ZipFile$Source::getEntryPos(int) -> int
fifo write: @1699477099197993645 0x7f81e8b73800 504: I2C/C2I adapters(0xbbbbaabb)
fifo write: @1699477099198961548 0x7f81e16b15dc 2103: java.util.jar.Manifest::getTrustedAttributes(String) -> java.util.jar.Attributes
fifo write: @1699477099199035939 0x7f81e8b73500 504: I2C/C2I adapters(0xbbbbabab)
fifo write: @1699477099199663717 0x7f81e16b2754 90: java.lang.reflect.Modifier::isFinal(int) -> boolean
fifo write: @1699477099199963781 0x7f81e909cf61 4697: java.util.concurrent.ConcurrentHashMap::putVal(Object, Object, boolean) -> Object
fifo write: @1699477099200415707 0x7f81e16b2b94 240: jdk.internal.reflect.DelegatingConstructorAccessorImpl::newInstance(Object[]) -> Object
fifo write: @1699477099200509478 0x7f81e16b3014 271: java.lang.reflect.Constructor::newInstance(Object[]) -> Object
fifo write: @1699477099200644940 0x7f81e8b73200 480: I2C/C2I adapters(0xbaabbaa)
fifo write: @1699477099200890913 0x7f81e16b3594 71: java.util.HashMap$EntryIterator::<init>(java.util.HashMap) -> void
fifo write: @1699477099200929873 0x7f81e16b39ef 246: java.util.HashMap$EntrySet::iterator() -> java.util.Iterator
fifo write: @1699477099200971474 0x7f81e16b3f37 759: java.util.HashMap::entrySet() -> java.util.Set
fifo write: @1699477099201190137 0x7f81e909fc5e 459: AbstractStringBuilder::<init>(int) -> void
fifo write: @1699477099201825725 0x7f81e90a014c 6: org.apache.logging.log4j.core.config.plugins.processor.PluginEntry::getKey() -> String
fifo write: @1699477099201864585 0x7f81e90a044c 6: java.lang.reflect.Constructor::getSharedParameterTypes() -> Class[]
fifo write: @1699477099201901646 0x7f81e90a0750 99: sun.reflect.generics.parser.SignatureParser::advance() -> void
fifo write: @1699477099201940366 0x7f81e90a0b4c 6: org.apache.logging.log4j.core.config.plugins.util.PluginType::getPluginClass() -> Class
fifo write: @1699477099202105439 0x7f81e90a0e98 2483: java.util.zip.ZipFile$Source::getEntryPos(String, boolean) -> int
fifo write: @1699477099202401022 0x7f81e16b49f4 326: java.util.Objects::toString(Object, String) -> String
fifo write: @1699477099202777457 0x7f81e16b4fdc 2711: jdk.internal.reflect.NativeConstructorAccessorImpl::newInstance(Object[]) -> Object
fifo write: @1699477099202870418 0x7f81e16b66f9 1229: java.lang.invoke.MethodHandles$Lookup::isClassAccessible(Class) -> boolean
fifo write: @1699477099203153212 0x7f81e90a2f53 124: CharacterDataLatin1::toUpperCase(int) -> int
fifo write: @1699477099203206093 0x7f81e16b72ba 1333: java.util.regex.Matcher::<init>(java.util.regex.Pattern, CharSequence) -> void
fifo write: @1699477099203276444 0x7f81e16b7ef9 1334: java.util.ArrayList::grow(int) -> Object[]
fifo write: @1699477099203497647 0x7f81e16b8b63 1320: java.util.regex.Pattern$BmpCharPropertyGreedy::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099204149545 0x7f81e16b9774 95: jdk.internal.loader.BuiltinClassLoader::hasClassPath() -> boolean
fifo write: @1699477099204523680 0x7f81e90a37ac 4600: java.util.concurrent.ConcurrentHashMap::transfer(java.util.concurrent.ConcurrentHashMap$Node[], java.util.concurrent.ConcurrentHashMap$Node[]) -> void
fifo write: @1699477099204607571 0x7f81e16b9d0c 3068: org.apache.logging.log4j.util.EnvironmentPropertySource::getNormalForm(Iterable) -> CharSequence
fifo write: @1699477099204674652 0x7f81e16bb60c 3396: org.apache.logging.log4j.util.PropertySource$Util::joinAsCamelCase(Iterable) -> CharSequence
fifo write: @1699477099204729942 0x7f81e90a63cc 2: org.apache.logging.log4j.Level::intLevel() -> int
fifo write: @1699477099205050357 0x7f81e90a66d2 377: String::lastIndexOf(int) -> int
fifo write: @1699477099205908158 0x7f81e16bcef9 1226: AbstractStringBuilder::<init>(String) -> void
fifo write: @1699477099205974708 0x7f81e16bda99 545: java.security.AccessController::executePrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, Class) -> Object
fifo write: @1699477099206052809 0x7f81e16be177 1372: jdk.internal.module.Resources::toPackageName(String) -> String
fifo write: @1699477099206210572 0x7f81e90a6fdd 68: StringBuilder::<init>() -> void
fifo write: @1699477099206267852 0x7f81e16beefc 1351: java.net.URI$Parser::at(int, int, char) -> boolean
fifo write: @1699477099206451675 0x7f81e16bfd27 4349: jdk.internal.loader.BuiltinClassLoader::findMiscResource(String) -> java.util.List
fifo write: @1699477099206688828 0x7f81e89b5098 27: vtable stub
fifo write: @1699477099206806089 0x7f81e90a734c 6: java.util.concurrent.CopyOnWriteArrayList::getArray() -> Object[]
fifo write: @1699477099207772882 0x7f81e90a764c 2: java.lang.reflect.Constructor::getModifiers() -> int
fifo write: @1699477099207925634 0x7f81e90a794c 3: java.lang.module.ModuleDescriptor::isAutomatic() -> boolean
fifo write: @1699477099208830235 0x7f81e16c1994 266: java.lang.invoke.MethodHandles$Lookup::<init>(Class, Class, int) -> void
fifo write: @1699477099208980417 0x7f81e16c1f34 615: java.lang.invoke.MethodTypeForm::cachedLambdaForm(int) -> java.lang.invoke.LambdaForm
fifo write: @1699477099209022518 0x7f81e16c2614 343: java.lang.invoke.MemberName::isCallerSensitive() -> boolean
fifo write: @1699477099209408333 0x7f81e16c2ced 3914: java.lang.invoke.MethodHandles$Lookup::checkAccess(byte, Class, java.lang.invoke.MemberName) -> void
fifo write: @1699477099209441443 0x7f81e16c4b94 158: java.lang.invoke.LambdaForm$BasicType::basicTypeSlots() -> int
fifo write: @1699477099209467624 0x7f81e16c4ff4 2: sun.invoke.util.Wrapper::stackSlots() -> int
fifo write: @1699477099209479154 0x7f81e8b72f00 456: I2C/C2I adapters(0xbebbbb)
fifo write: @1699477099209641326 0x7f81e8b72c00 464: I2C/C2I adapters(0xbbebbbb)
fifo write: @1699477099209846208 0x7f81e16c53d4 893: java.lang.invoke.LambdaForm$NamedFunction::returnType() -> java.lang.invoke.LambdaForm$BasicType
fifo write: @1699477099209990210 0x7f81e16c5d94 416: java.lang.invoke.LambdaForm$Name::useCount(java.lang.invoke.LambdaForm$Name) -> int
fifo write: @1699477099210100212 0x7f81e16c6427 1186: java.lang.invoke.LambdaForm$Name::<init>(java.lang.invoke.LambdaForm$NamedFunction, Object[]) -> void
fifo write: @1699477099210137962 0x7f81e16c70b9 387: java.lang.invoke.MethodHandles$Lookup::checkSymbolicClass(Class) -> void
fifo write: @1699477099210184123 0x7f81e16c7694 344: java.lang.invoke.InvokerBytecodeGenerator::emitLoadInsn(java.lang.invoke.LambdaForm$BasicType, int) -> void
fifo write: @1699477099210219323 0x7f81e16c7c94 196: jdk.internal.org.objectweb.asm.Type::<init>(int, String, int, int) -> void
fifo write: @1699477099210272364 0x7f81e16c811d 46: jdk.internal.org.objectweb.asm.SymbolTable::addConstantFieldref(String, String, String) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477099210391376 0x7f81e16c8666 3412: java.lang.invoke.InvokerBytecodeGenerator::emitPushArgument(Class, Object) -> void
fifo write: @1699477099210450526 0x7f81e16c9fd7 2145: java.lang.invoke.InvokerBytecodeGenerator::loadInsnOpcode(java.lang.invoke.LambdaForm$BasicType) -> int
fifo write: @1699477099210543537 0x7f81e16cb2e6 2587: jdk.internal.org.objectweb.asm.MethodWriter::visitFieldInsn(int, String, String, String) -> void
fifo write: @1699477099211404739 0x7f81e16cca14 39: jdk.internal.org.objectweb.asm.MethodVisitor::<init>(int) -> void
fifo write: @1699477099211498750 0x7f81e16cce89 582: jdk.internal.org.objectweb.asm.ClassWriter::visitMethod(int, String, String, String, String[]) -> jdk.internal.org.objectweb.asm.MethodVisitor
fifo write: @1699477099211554491 0x7f81e16cd934 351: jdk.internal.org.objectweb.asm.MethodWriter::visitMaxs(int, int) -> void
fifo write: @1699477099211765403 0x7f81e16cdfd9 886: jdk.internal.org.objectweb.asm.Handler::putExceptionTable(jdk.internal.org.objectweb.asm.Handler, jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099211919175 0x7f81e16cec14 3068: jdk.internal.org.objectweb.asm.MethodWriter::<init>(jdk.internal.org.objectweb.asm.SymbolTable, int, String, String, String, String[], int) -> void
fifo write: @1699477099211957356 0x7f81e16d0474 90: jdk.internal.org.objectweb.asm.MethodWriter::hasFrames() -> boolean
fifo write: @1699477099212018687 0x7f81e16d0954 1575: jdk.internal.org.objectweb.asm.Type::getDescriptor() -> String
fifo write: @1699477099212047507 0x7f81e16d1874 63: java.util.ImmutableCollections$ListN::size() -> int
fifo write: @1699477099212080767 0x7f81e16d1bf4 96: java.util.ImmutableCollections$ListN::get(int) -> Object
fifo write: @1699477099212110308 0x7f81e16d1ff4 95: java.lang.invoke.LambdaForm$Name::isParam() -> boolean
fifo write: @1699477099212139708 0x7f81e16d2414 343: java.lang.invoke.MemberName::isMethod() -> boolean
fifo write: @1699477099212173809 0x7f81e16d29b4 1123: jdk.internal.org.objectweb.asm.Frame::setLocal(int, int) -> void
fifo write: @1699477099212223079 0x7f81e16d3479 968: java.lang.invoke.InvokerBytecodeGenerator::getInternalName(Class) -> String
fifo write: @1699477099212336821 0x7f81e16d409c 3519: jdk.internal.org.objectweb.asm.MethodWriter::computeMethodInfoSize() -> int
fifo write: @1699477099212373651 0x7f81e16d6454 1486: jdk.internal.org.objectweb.asm.MethodWriter::endCurrentBasicBlockWithNoSuccessor() -> void
fifo write: @1699477099212860477 0x7f81e16d721c 5147: java.lang.invoke.MemberName::getFieldType() -> Class
fifo write: @1699477099213572567 0x7f81e16d982d 3594: jdk.internal.org.objectweb.asm.Type::getTypeInternal(String, int, int) -> jdk.internal.org.objectweb.asm.Type
fifo write: @1699477099215002345 0x7f81e16db295 941: java.util.TreeMap::addEntry(Object, Object, java.util.TreeMap$Entry, boolean) -> void
fifo write: @1699477099215110696 0x7f81e16dbcd4 2583: java.lang.invoke.LambdaForm$BasicType::basicType(char) -> java.lang.invoke.LambdaForm$BasicType
fifo write: @1699477099215248898 0x7f81e16dd04d 2836: java.lang.invoke.LambdaForm$Name::replaceNames(java.lang.invoke.LambdaForm$Name[], java.lang.invoke.LambdaForm$Name[], int, int) -> java.lang.invoke.LambdaForm$Name
fifo write: @1699477099215531672 0x7f81e16dea44 9191: jdk.internal.org.objectweb.asm.MethodWriter::putMethodInfo(jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099215674704 0x7f81e16e42ff 4684: jdk.internal.org.objectweb.asm.Type::getReturnTypeOffset(String) -> int
fifo write: @1699477099215878246 0x7f81e16e6a99 9742: java.util.TreeMap::fixAfterInsertion(java.util.TreeMap$Entry) -> void
fifo write: @1699477099215897117 0x7f81e8b70e80 504: I2C/C2I adapters(0xbbabbbaa)
fifo write: @1699477099216057169 0x7f81e16eb0bf 3605: java.lang.invoke.DirectMethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, java.lang.invoke.MemberName, boolean) -> void
fifo write: @1699477099216314862 0x7f81e16ed08f 10993: java.lang.invoke.MethodHandles$Lookup::checkSecurityManager(Class, java.lang.invoke.MemberName) -> void
fifo write: @1699477099216575325 0x7f81e90ad29f 6135: java.util.zip.ZipFile::getEntry(String) -> java.util.zip.ZipEntry
fifo write: @1699477099216893969 0x7f81e90b10be 729: jdk.internal.jimage.ImageLocation::readValue(int, java.nio.ByteBuffer, int, int) -> long
fifo write: @1699477099216943490 0x7f81e90b19d7 1204: AbstractStringBuilder::append(char) -> AbstractStringBuilder
fifo write: @1699477099218755703 0x7f81e8b70b80 520: I2C/C2I adapters(0xbbbbbaaba)
fifo write: @1699477099218999577 0x7f81e90b26d2 4296: jdk.internal.util.jar.JarIndex::get(String) -> java.util.LinkedList
fifo write: @1699477099220022620 0x7f81e8b70700 504: I2C/C2I adapters(0xbbbbbbaa)
fifo write: @1699477099220036340 0x7f81e8b72900 520: I2C/C2I adapters(0xbbbbbbbaa)
fifo write: @1699477099220386345 0x7f81e8b72600 520: I2C/C2I adapters(0xbabbaabbb)
fifo write: @1699477099221242245 0x7f81e90b554c 6: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit::systemProperty() -> String
fifo write: @1699477099221325187 0x7f81e16f1bde 930: java.util.ArrayList::indexOfRange(Object, int, int) -> int
fifo write: @1699477099221554389 0x7f81e16f2594 591: java.security.AccessController::doPrivileged(java.security.PrivilegedAction) -> Object
fifo write: @1699477099221607010 0x7f81e16f2c99 34: java.util.ArrayList::indexOf(Object) -> int
fifo write: @1699477099221674201 0x7f81e16f3099 293: java.util.ArrayList::contains(Object) -> boolean
fifo write: @1699477099221724272 0x7f81e16f35f4 125: java.util.Arrays::copyOf(Object[], int) -> Object[]
fifo write: @1699477099221808103 0x7f81e16f3a14 83: com.sun.org.apache.xerces.internal.xni.QName::clear() -> void
fifo write: @1699477099221850673 0x7f81e16f3e94 335: com.sun.org.apache.xerces.internal.xni.QName::<init>() -> void
fifo write: @1699477099221966865 0x7f81e16f4497 199: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap::getOldName(String) -> String
fifo write: @1699477099222052566 0x7f81e90b584c 3: com.sun.org.apache.xerces.internal.util.Status::isExceptional() -> boolean
fifo write: @1699477099222084846 0x7f81e16f4994 325: String::substring(int) -> String
fifo write: @1699477099222940557 0x7f81e8b72300 536: I2C/C2I adapters(0xbabbbbbaaa)
fifo write: @1699477099223231131 0x7f81e16f4ef4 334: java.util.Arrays::fill(byte[], int, int, byte) -> void
fifo write: @1699477099223549795 0x7f81e16f5577 2266: java.util.Arrays::rangeCheck(int, int, int) -> void
fifo write: @1699477099224082982 0x7f81e90b5b4c 3: java.lang.module.ModuleDescriptor::isOpen() -> boolean
fifo write: @1699477099224654759 0x7f81e16f6914 63: java.lang.invoke.BoundMethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> void
fifo write: @1699477099224843861 0x7f81e16f6cd4 106: java.lang.invoke.MethodHandleNatives::refKindHasReceiver(byte) -> boolean
fifo write: @1699477099224967603 0x7f81e90b644c 2: jdk.internal.org.objectweb.asm.SymbolTable::getConstantPoolCount() -> int
fifo write: @1699477099225087854 0x7f81e16f70f4 3: java.lang.invoke.LambdaFormBuffer::ownedCount() -> int
fifo write: @1699477099225315567 0x7f81e90b6773 300: java.util.Arrays::fill(byte[], int, int, byte) -> void
fifo write: @1699477099225577251 0x7f81e16f75a1 2796: java.lang.invoke.InvokerBytecodeGenerator::emitReferenceCast(Class, Object) -> void
fifo write: @1699477099225648092 0x7f81e16f8a54 90: java.lang.reflect.Modifier::isPrivate(int) -> boolean
fifo write: @1699477099225728493 0x7f81e16f8e74 22: java.lang.invoke.LambdaForm$NamedFunction::member() -> java.lang.invoke.MemberName
fifo write: @1699477099225782953 0x7f81e16f9214 248: java.lang.invoke.InvokerBytecodeGenerator::emitStoreResult(java.lang.invoke.LambdaForm$Name) -> void
fifo write: @1699477099225827424 0x7f81e16f9714 341: java.lang.invoke.LambdaForm$NamedFunction::intrinsicName() -> java.lang.invoke.MethodHandleImpl$Intrinsic
fifo write: @1699477099225881575 0x7f81e16f9cde 900: java.lang.invoke.InvokerBytecodeGenerator::emitPushArguments(java.lang.invoke.LambdaForm$Name, int) -> void
fifo write: @1699477099225910255 0x7f81e16fa794 237: java.lang.invoke.MemberName::isPrivate() -> boolean
fifo write: @1699477099225948846 0x7f81e16fabf4 314: java.lang.invoke.DirectMethodHandle::internalMemberName(Object) -> Object
fifo write: @1699477099226095857 0x7f81e16fb157 1735: java.lang.invoke.InvokerBytecodeGenerator::refKindOpcode(byte) -> int
fifo write: @1699477099226248449 0x7f81e90b6ccb 720: jdk.internal.org.objectweb.asm.Symbol::<init>(int, int, String, String, String, long) -> void
fifo write: @1699477099226418232 0x7f81e90b744c 3: Boolean::booleanValue() -> boolean
fifo write: @1699477099226524613 0x7f81e16fc28f 3529: java.lang.invoke.InvokerBytecodeGenerator::emitStaticInvoke(java.lang.invoke.MemberName, java.lang.invoke.LambdaForm$Name) -> void
fifo write: @1699477099226755246 0x7f81e16fe1fc 6653: java.lang.invoke.InvokerBytecodeGenerator::isStaticallyInvocable(java.lang.invoke.MemberName) -> boolean
fifo write: @1699477099226870977 0x7f81e90b7753 696: jdk.internal.org.objectweb.asm.SymbolTable::put(jdk.internal.org.objectweb.asm.SymbolTable$Entry) -> jdk.internal.org.objectweb.asm.SymbolTable$Entry
fifo write: @1699477099227604827 0x7f81e8b72000 496: I2C/C2I adapters(0xbabbbaab)
fifo write: @1699477099228713021 0x7f81e17011f4 375: com.sun.org.apache.xerces.internal.util.XMLChar::isContent(int) -> boolean
fifo write: @1699477099229099426 0x7f81e17017b4 563: com.sun.org.apache.xerces.internal.impl.XMLEntityScanner::checkEntityLimit(com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType, com.sun.xml.internal.stream.Entity$ScannedEntity, int, int) -> void
fifo write: @1699477099229146787 0x7f81e1701eb4 517: com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl::setChunkIndex(int[], int[], int, int) -> int
fifo write: @1699477099229207378 0x7f81e17026db 1080: com.sun.org.apache.xerces.internal.impl.XMLEntityScanner::checkBeforeLoad(com.sun.xml.internal.stream.Entity$ScannedEntity, int, int) -> int
fifo write: @1699477099231555878 0x7f81e8b71d00 432: I2C/C2I adapters(0xb7ea)
fifo write: @1699477099231571408 0x7f81e8b71a00 504: I2C/C2I adapters(0xbbbbbaaa)
fifo write: @1699477099231584678 0x7f81e8b71700 496: I2C/C2I adapters(0xbb7ebbaaa)
fifo write: @1699477099231672999 0x7f81e1703194 381: java.util.regex.Pattern::peek() -> int
fifo write: @1699477099231872922 0x7f81e1703774 108: org.apache.logging.log4j.core.config.plugins.util.PluginType::getKey() -> String
fifo write: @1699477099232552801 0x7f81e1703b94 235: com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl::getChunkIndex(int[], int[], int) -> int
fifo write: @1699477099232750213 0x7f81e89b50c8 27: vtable stub
fifo write: @1699477099232981696 0x7f81e1704114 241: java.nio.Buffer::nextGetIndex() -> int
fifo write: @1699477099233033497 0x7f81e1704634 499: java.nio.HeapByteBuffer::get() -> byte
fifo write: @1699477099233062367 0x7f81e90b7fcf 80: CharacterDataLatin1::isWhitespace(int) -> boolean
fifo write: @1699477099233420752 0x7f81e1704cf4 63: jdk.internal.org.objectweb.asm.Frame::getInputStackSize() -> int
fifo write: @1699477099234007690 0x7f81e90b8653 200: jdk.internal.org.objectweb.asm.ByteVector::putShort(int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099234520126 0x7f81e90b8b4c 6: sun.reflect.generics.tree.ClassTypeSignature::getPath() -> java.util.List
fifo write: @1699477099234554027 0x7f81e90b8e4c 6: sun.reflect.generics.tree.SimpleClassTypeSignature::getName() -> String
fifo write: @1699477099234581877 0x7f81e90b914c 3: sun.reflect.generics.tree.SimpleClassTypeSignature::getDollar() -> boolean
fifo write: @1699477099234618677 0x7f81e90b944c 6: sun.reflect.generics.visitor.Reifier::getFactory() -> sun.reflect.generics.factory.GenericsFactory
fifo write: @1699477099234656238 0x7f81e90b974c 6: sun.reflect.generics.tree.SimpleClassTypeSignature::getTypeArguments() -> sun.reflect.generics.tree.TypeArgument[]
fifo write: @1699477099235133344 0x7f81e17050b4 473: Class::cast(Object) -> Object
fifo write: @1699477099235187185 0x7f81e1705714 644: PublicMethods$Key::matches(java.lang.reflect.Method, String, Class[]) -> boolean
fifo write: @1699477099235743582 0x7f81e1706040 568: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object) -> Object
fifo write: @1699477099235844233 0x7f81e170661d 587: jdk.internal.org.objectweb.asm.MethodWriter::visitFrameStart(int, int, int) -> int
fifo write: @1699477099235954065 0x7f81e17070b4 862: jdk.internal.org.objectweb.asm.MethodWriter::visitFrameEnd() -> void
fifo write: @1699477099236162007 0x7f81e1707a99 2123: jdk.internal.org.objectweb.asm.Frame::accept(jdk.internal.org.objectweb.asm.MethodWriter) -> void
fifo write: @1699477099236263269 0x7f81e1708f97 3866: java.util.HashMap::<init>(int, float) -> void
fifo write: @1699477099236579583 0x7f81e90b9ed0 55: java.util.ArrayList$Itr::hasNext() -> boolean
fifo write: @1699477099236725795 0x7f81e170ad94 85: java.lang.reflect.ReflectAccess::copyMethod(java.lang.reflect.Method) -> java.lang.reflect.Method
fifo write: @1699477099236810336 0x7f81e170b194 275: jdk.internal.reflect.ReflectionFactory::copyMethod(java.lang.reflect.Method) -> java.lang.reflect.Method
fifo write: @1699477099236914417 0x7f81e170b734 789: java.lang.reflect.Method::<init>(Class, String, Class[], Class, Class[], int, int, String, byte[], byte[], byte[]) -> void
fifo write: @1699477099236980878 0x7f81e170c0f4 84: System$2::getAnnotationType(Class) -> sun.reflect.annotation.AnnotationType
fifo write: @1699477099237051989 0x7f81e170c53f 860: java.lang.reflect.Method::copy() -> java.lang.reflect.Method
fifo write: @1699477099237238541 0x7f81e170ce57 1202: sun.reflect.annotation.AnnotationType::getInstance(Class) -> sun.reflect.annotation.AnnotationType
fifo write: @1699477099237392863 0x7f81e90ba7d0 115: jdk.internal.org.objectweb.asm.ClassReader::readUnsignedShort(int) -> int
fifo write: @1699477099237661057 0x7f81e170da14 233: jdk.internal.org.objectweb.asm.Edge::<init>(int, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Edge) -> void
fifo write: @1699477099237817779 0x7f81e90baecc 6: sun.reflect.annotation.AnnotationType::memberTypes() -> java.util.Map
fifo write: @1699477099237862499 0x7f81e90bb1cc 6: sun.reflect.annotation.AnnotationType::memberDefaults() -> java.util.Map
fifo write: @1699477099238000951 0x7f81e90bb4b7 1212: StringLatin1::indexOf(byte[], int, byte[], int, int) -> int
fifo write: @1699477099238108133 0x7f81e90bc256 173: jdk.internal.org.objectweb.asm.ByteVector::putByte(int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099238166943 0x7f81e170df14 185: PublicMethods$MethodList::<init>(java.lang.reflect.Method) -> void
fifo write: @1699477099238354606 0x7f81e170e4ab 3355: jdk.internal.org.objectweb.asm.Frame::merge(jdk.internal.org.objectweb.asm.SymbolTable, jdk.internal.org.objectweb.asm.Frame, int) -> boolean
fifo write: @1699477099238417557 0x7f81e17102f4 93: java.lang.reflect.ProxyGenerator::dotToSlash(String) -> String
fifo write: @1699477099238607859 0x7f81e90bc74c 6: sun.reflect.annotation.AnnotationType::retention() -> java.lang.annotation.RetentionPolicy
fifo write: @1699477099239652232 0x7f81e1710777 1515: sun.reflect.generics.parser.SignatureParser::current() -> char
fifo write: @1699477099240086178 0x7f81e17115da 2051: java.util.ArrayList::<init>(int) -> void
fifo write: @1699477099240151499 0x7f81e90bcdfe 1561: jdk.internal.loader.URLClassPath$JarLoader::getResource(String, boolean) -> jdk.internal.loader.Resource
fifo write: @1699477099240899879 0x7f81e1712734 573: java.lang.reflect.AccessibleObject::checkAccess(Class, Class, Class, int) -> void
fifo write: @1699477099240966249 0x7f81e1712e14 137: jdk.internal.reflect.MagicAccessorImpl::<init>() -> void
fifo write: @1699477099241135902 0x7f81e1713214 85: java.lang.reflect.ReflectAccess::copyConstructor(java.lang.reflect.Constructor) -> java.lang.reflect.Constructor
fifo write: @1699477099241186512 0x7f81e1713614 275: jdk.internal.reflect.ReflectionFactory::copyConstructor(java.lang.reflect.Constructor) -> java.lang.reflect.Constructor
fifo write: @1699477099241232993 0x7f81e1713bbc 1019: Class::forName(String, boolean, ClassLoader) -> Class
fifo write: @1699477099241275093 0x7f81e1714658 1114: Class::privateGetDeclaredConstructors(boolean) -> java.lang.reflect.Constructor[]
fifo write: @1699477099241317404 0x7f81e17150bc 764: java.lang.reflect.Constructor::copy() -> java.lang.reflect.Constructor
fifo write: @1699477099241367905 0x7f81e1715934 636: java.lang.reflect.Constructor::<init>(Class, Class[], Class[], int, int, String, byte[], byte[]) -> void
fifo write: @1699477099241514077 0x7f81e90be0cc 6: java.lang.reflect.Constructor::getRoot() -> java.lang.reflect.Constructor
fifo write: @1699477099241564417 0x7f81e90be3cc 6: java.lang.reflect.Constructor::getConstructorAccessor() -> jdk.internal.reflect.ConstructorAccessor
fifo write: @1699477099241596298 0x7f81e1716194 31: StringBuilder::<init>(String) -> void
fifo write: @1699477099241640598 0x7f81e1716514 532: java.lang.reflect.Constructor::setConstructorAccessor(jdk.internal.reflect.ConstructorAccessor) -> void
fifo write: @1699477099241681909 0x7f81e90be6cc 44: jdk.internal.reflect.DelegatingConstructorAccessorImpl::setDelegate(jdk.internal.reflect.ConstructorAccessorImpl) -> void
fifo write: @1699477099241711209 0x7f81e1716b94 234: jdk.internal.reflect.ConstructorAccessorImpl::<init>() -> void
fifo write: @1699477099241754410 0x7f81e90bea4c 44: jdk.internal.reflect.NativeConstructorAccessorImpl::setParent(jdk.internal.reflect.DelegatingConstructorAccessorImpl) -> void
fifo write: @1699477099241790640 0x7f81e1717034 999: java.lang.reflect.AccessibleObject::isAccessChecked(Class) -> boolean
fifo write: @1699477099242182275 0x7f81e1717894 240: PublicMethods$MethodList::length() -> int
fifo write: @1699477099242209645 0x7f81e90bedcc 3: java.util.Collections$1::hasNext() -> boolean
fifo write: @1699477099242579890 0x7f81e1717d74 5: sun.reflect.generics.parser.SignatureParser::mark() -> void
fifo write: @1699477099242701462 0x7f81e1718114 101: sun.reflect.generics.parser.SignatureParser::markToCurrent() -> String
fifo write: @1699477099242771333 0x7f81e1718514 236: sun.reflect.generics.tree.SimpleClassTypeSignature::<init>(String, boolean, sun.reflect.generics.tree.TypeArgument[]) -> void
fifo write: @1699477099242843234 0x7f81e1718a43 292: sun.reflect.generics.tree.ClassTypeSignature::make(java.util.List) -> sun.reflect.generics.tree.ClassTypeSignature
fifo write: @1699477099243001116 0x7f81e90bf386 4636: java.util.concurrent.ConcurrentHashMap::transfer(java.util.concurrent.ConcurrentHashMap$Node[], java.util.concurrent.ConcurrentHashMap$Node[]) -> void
fifo write: @1699477099243057386 0x7f81e1718fe3 518: sun.reflect.generics.parser.SignatureParser::parseClassTypeSignatureSuffix(java.util.List) -> void
fifo write: @1699477099243146878 0x7f81e17196cd 345: sun.reflect.generics.tree.SimpleClassTypeSignature::make(String, boolean, sun.reflect.generics.tree.TypeArgument[]) -> sun.reflect.generics.tree.SimpleClassTypeSignature
fifo write: @1699477099243199998 0x7f81e1719c94 185: sun.reflect.generics.tree.ClassTypeSignature::<init>(java.util.List) -> void
fifo write: @1699477099243292839 0x7f81e171a259 2246: sun.reflect.generics.parser.SignatureParser::parsePackageNameAndSimpleClassTypeSignature() -> sun.reflect.generics.tree.SimpleClassTypeSignature
fifo write: @1699477099243569693 0x7f81e171b91f 4599: sun.reflect.generics.parser.SignatureParser::parseClassTypeSignature() -> sun.reflect.generics.tree.ClassTypeSignature
fifo write: @1699477099243877237 0x7f81e171dc74 63: java.lang.reflect.Method::getParameterCount() -> int
fifo write: @1699477099244177611 0x7f81e171e1bc 5110: jdk.internal.org.objectweb.asm.MethodWriter::computeAllFrames() -> void
fifo write: @1699477099244232982 0x7f81e90c1cd0 135: sun.reflect.generics.parser.SignatureParser::current() -> char
fifo write: @1699477099244783659 0x7f81e17210ff 3982: sun.reflect.annotation.AnnotationInvocationHandler::invoke(Object, java.lang.reflect.Method, Object[]) -> Object
fifo write: @1699477099246324959 0x7f81e1722e80 1506: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, Object) -> Object
fifo write: @1699477099248283754 0x7f81e90c2161 754: java.util.StringTokenizer::scanToken(int) -> int
fifo write: @1699477099248609688 0x7f81e1723977 266: StringLatin1::indexOf(byte[], byte[]) -> int
fifo write: @1699477099248766860 0x7f81e1723f74 894: String::indexOf(String) -> int
fifo write: @1699477099250324220 0x7f81e1724994 242: jdk.internal.reflect.ByteVectorImpl::get(int) -> byte
fifo write: @1699477099250456072 0x7f81e1724f34 281: sun.reflect.generics.factory.CoreReflectionFactory::makeNamedType(String) -> java.lang.reflect.Type
fifo write: @1699477099250516453 0x7f81e1725497 170: sun.reflect.generics.tree.ClassTypeSignature::accept(sun.reflect.generics.visitor.TypeTreeVisitor) -> void
fifo write: @1699477099250766776 0x7f81e90c2bda 117: jdk.internal.reflect.ByteVectorImpl::add(byte) -> void
fifo write: @1699477099250823227 0x7f81e1725959 1059: java.util.ArrayList::toArray(Object[]) -> Object[]
fifo write: @1699477099251371314 0x7f81e1726537 8265: sun.reflect.generics.factory.CoreReflectionFactory::getDeclsLoader() -> ClassLoader
fifo write: @1699477099251492185 0x7f81e1729dfc 6558: sun.reflect.generics.visitor.Reifier::visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature) -> void
fifo write: @1699477099251550826 0x7f81e172cec4 247: sun.reflect.generics.parser.SignatureParser::make() -> sun.reflect.generics.parser.SignatureParser
fifo write: @1699477099251608427 0x7f81e172d314 31: sun.reflect.generics.parser.SignatureParser::parseFieldTypeSignature() -> sun.reflect.generics.tree.FieldTypeSignature
fifo write: @1699477099251652287 0x7f81e172d714 137: sun.reflect.generics.parser.SignatureParser::<init>() -> void
fifo write: @1699477099251702138 0x7f81e172daf4 58: sun.reflect.generics.parser.SignatureParser::init(String) -> void
fifo write: @1699477099251754989 0x7f81e172def4 22: sun.reflect.generics.visitor.Reifier::getResult() -> java.lang.reflect.Type
fifo write: @1699477099251826140 0x7f81e172e2c7 292: sun.reflect.generics.visitor.Reifier::make(sun.reflect.generics.factory.GenericsFactory) -> sun.reflect.generics.visitor.Reifier
fifo write: @1699477099251881990 0x7f81e172e814 185: sun.reflect.generics.visitor.Reifier::<init>(sun.reflect.generics.factory.GenericsFactory) -> void
fifo write: @1699477099251923061 0x7f81e90c304c 2: java.lang.reflect.Field::getModifiers() -> int
fifo write: @1699477099251996912 0x7f81e172ed57 1374: sun.reflect.generics.parser.SignatureParser::parseFieldTypeSignature(boolean) -> sun.reflect.generics.tree.FieldTypeSignature
fifo write: @1699477099252056213 0x7f81e90c3351 418: jdk.internal.org.objectweb.asm.SymbolTable$Entry::<init>(int, int, String, int) -> void
fifo write: @1699477099252113343 0x7f81e172fa14 869: Class::arrayContentsEq(Object[], Object[]) -> boolean
fifo write: @1699477099252161804 0x7f81e1730439 463: Class::annotationData() -> Class$AnnotationData
fifo write: @1699477099252212035 0x7f81e1730b14 466: java.lang.ref.WeakReference::<init>(Object) -> void
fifo write: @1699477099252788592 0x7f81e1731194 243: ProcessEnvironment$StringKeySet$1::hasNext() -> boolean
fifo write: @1699477099252836733 0x7f81e1731634 744: ProcessEnvironment$StringKeySet$1::next() -> Object
fifo write: @1699477099252881593 0x7f81e1731d94 655: ProcessEnvironment$StringKeySet$1::next() -> String
fifo write: @1699477099253017265 0x7f81e17324b4 522: java.util.stream.ReferencePipeline$2$1::accept(Object) -> void
fifo write: @1699477099253074916 0x7f81e1732b79 1312: Iterable::forEach(java.util.function.Consumer) -> void
fifo write: @1699477099253168857 0x7f81e1733694 613: ProcessEnvironment::getenv(String) -> String
fifo write: @1699477099253222638 0x7f81e1733d14 240: java.util.Collections$UnmodifiableMap::get(Object) -> Object
fifo write: @1699477099253270048 0x7f81e1734194 240: java.util.stream.ForEachOps$ForEachOp$OfRef::accept(Object) -> void
fifo write: @1699477099253337679 0x7f81e17346bc 1410: org.apache.logging.log4j.util.EnvironmentPropertySource::getProperty(String) -> String
fifo write: @1699477099254185860 0x7f81e90c3be6 16201: jdk.internal.loader.URLClassPath$JarLoader::getResource(String, boolean, java.util.Set) -> jdk.internal.loader.Resource
fifo write: @1699477099254259151 0x7f81e1735477 2921: System::getenv(String) -> String
fifo write: @1699477099254333762 0x7f81e1736b37 2363: ProcessEnvironment$StringEnvironment::get(Object) -> Object
fifo write: @1699477099254387093 0x7f81e1737c14 482: org.apache.logging.log4j.util.PropertiesUtil$Environment$$Lambda$22.0x00007f8160011fe0::test(Object) -> boolean
fifo write: @1699477099254441043 0x7f81e1738194 345: org.apache.logging.log4j.util.PropertiesUtil$Environment$$Lambda$23.0x00007f8160012230::accept(Object) -> void
fifo write: @1699477099254513814 0x7f81e17387c9 671: java.lang.invoke.LambdaForm$MH.0x00007f8160019c00::linkToTargetMethod(Object, Object, int, Object, Object) -> Object
fifo write: @1699477099254591295 0x7f81e1738e94 283: org.apache.logging.log4j.util.PropertiesUtil$Environment$$Lambda$26.0x00007f8160012670::<init>(org.apache.logging.log4j.util.PropertiesUtil$Environment, String, boolean, java.util.List) -> void
fifo write: @1699477099254668006 0x7f81e1739503 1538: java.lang.invoke.LambdaForm$DMH.0x00007f8160019400::newInvokeSpecial(Object, Object, Object, int, Object) -> Object
fifo write: @1699477099254704517 0x7f81e90cd0cc 2: AbstractStringBuilder::length() -> int
fifo write: @1699477099254760058 0x7f81e173a074 344: ProcessEnvironment$StringEnvironment::toString(ProcessEnvironment$Value) -> String
fifo write: @1699477099254807488 0x7f81e173a594 279: sun.reflect.generics.scope.ClassScope::<init>(Class) -> void
fifo write: @1699477099254872249 0x7f81e173ab17 2250: ProcessEnvironment$StringEnvironment::get(Object) -> String
fifo write: @1699477099254930100 0x7f81e173bbc7 386: sun.reflect.generics.scope.ClassScope::make(Class) -> sun.reflect.generics.scope.ClassScope
fifo write: @1699477099254987980 0x7f81e173c247 2861: org.apache.logging.log4j.util.PropertiesUtil$Environment::lambda$reload$3(String) -> void
fifo write: @1699477099255084202 0x7f81e173d66e 6723: java.util.concurrent.ConcurrentHashMap::putVal(Object, Object, boolean) -> Object
fifo write: @1699477099255139702 0x7f81e1740714 185: sun.reflect.generics.scope.AbstractScope::<init>(java.lang.reflect.GenericDeclaration) -> void
fifo write: @1699477099255207953 0x7f81e1740b94 230: sun.reflect.generics.factory.CoreReflectionFactory::<init>(java.lang.reflect.GenericDeclaration, sun.reflect.generics.scope.Scope) -> void
fifo write: @1699477099255292134 0x7f81e17410ca 337: sun.reflect.generics.factory.CoreReflectionFactory::make(java.lang.reflect.GenericDeclaration, sun.reflect.generics.scope.Scope) -> sun.reflect.generics.factory.CoreReflectionFactory
fifo write: @1699477099255376345 0x7f81e1741694 324: jdk.internal.org.objectweb.asm.Handler::<init>(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, int, String) -> void
fifo write: @1699477099255469767 0x7f81e1741d3c 1432: jdk.internal.org.objectweb.asm.MethodWriter::visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, String) -> void
fifo write: @1699477099255560678 0x7f81e1742a3c 2595: PublicMethods$MethodList::merge(PublicMethods$MethodList, java.lang.reflect.Method) -> PublicMethods$MethodList
fifo write: @1699477099255615449 0x7f81e1743f34 640: PublicMethods$Key::<init>(java.lang.reflect.Method) -> void
fifo write: @1699477099255656399 0x7f81e90cd3af 304: ProcessEnvironment::arrayHash(byte[]) -> int
fifo write: @1699477099255724570 0x7f81e1744815 2283: PublicMethods::merge(java.lang.reflect.Method) -> void
fifo write: @1699477099255807341 0x7f81e1745b5a 1989: jdk.internal.org.objectweb.asm.SymbolTable::put(jdk.internal.org.objectweb.asm.SymbolTable$Entry) -> jdk.internal.org.objectweb.asm.SymbolTable$Entry
fifo write: @1699477099255887312 0x7f81e1746c5f 2380: jdk.internal.org.objectweb.asm.MethodWriter::visitLdcInsn(Object) -> void
fifo write: @1699477099255998113 0x7f81e1748294 528: jdk.internal.loader.AbstractClassLoaderValue::map(ClassLoader) -> java.util.concurrent.ConcurrentHashMap
fifo write: @1699477099256156856 0x7f81e1748bdc 6339: jdk.internal.org.objectweb.asm.MethodWriter::putFrame() -> void
fifo write: @1699477099256616661 0x7f81e174c49f 9810: jdk.internal.org.objectweb.asm.Type::getArgumentTypes(String) -> jdk.internal.org.objectweb.asm.Type[]
fifo write: @1699477099256754693 0x7f81e17511d7 12126: jdk.internal.org.objectweb.asm.SymbolTable::addConstant(Object) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477099257025367 0x7f81e90cd8cc 6: org.apache.logging.log4j.core.util.datetime.FixedDateFormat$FixedFormat::getPattern() -> String
fifo write: @1699477099257152078 0x7f81e8b71180 448: I2C/C2I adapters(0xbaabeb)
fifo write: @1699477099257317721 0x7f81e1755c5c 1085: jdk.internal.reflect.Reflection::verifyModuleAccess(Module, Class) -> boolean
fifo write: @1699477099258457805 0x7f81e175681f 2508: java.nio.Buffer::<init>(int, int, int, int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477099258618367 0x7f81e1758051 9912: jdk.internal.reflect.Reflection::verifyMemberAccess(Class, Class, Class, int) -> boolean
fifo write: @1699477099258632408 0x7f81e89b50f8 27: vtable stub
fifo write: @1699477099259171154 0x7f81e175c714 231: sun.reflect.generics.parser.SignatureParser::parseTypeSig(String) -> sun.reflect.generics.tree.TypeSignature
fifo write: @1699477099259293286 0x7f81e175cc94 2663: sun.reflect.annotation.AnnotationParser::toClass(java.lang.reflect.Type) -> Class
fifo write: @1699477099259347107 0x7f81e89bfb00 592: I2C/C2I adapters(0xbbbbbbbaaabb)
fifo write: @1699477099259360807 0x7f81e89bf800 608: I2C/C2I adapters(0xbbbbbbbaaabbb)
fifo write: @1699477099259572380 0x7f81e175debc 4276: sun.reflect.annotation.AnnotationParser::parseSig(String, Class) -> Class
fifo write: @1699477099259812833 0x7f81e90cdbcc 6: java.lang.reflect.Field::getDeclaringClass() -> Class
fifo write: @1699477099259858273 0x7f81e175faf4 23: java.lang.reflect.Array::newInstance(Class, int) -> Object
fifo write: @1699477099259898004 0x7f81e175fe94 167: java.nio.ByteBuffer::position(int) -> java.nio.Buffer
fifo write: @1699477099259946884 0x7f81e17602b4 671: jdk.internal.loader.AbstractClassLoaderValue::extractValue(Object) -> Object
fifo write: @1699477099260136777 0x7f81e17609d9 904: Class::getAnnotation(Class) -> java.lang.annotation.Annotation
fifo write: @1699477099260296019 0x7f81e90cdf8f 5553: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477099260332369 0x7f81e1761274 111: Boolean::valueOf(boolean) -> Boolean
fifo write: @1699477099260470691 0x7f81e89bf500 520: I2C/C2I adapters(0xbaaaabbab)
fifo write: @1699477099260484041 0x7f81e89bf200 496: I2C/C2I adapters(0xbaaaabba)
fifo write: @1699477099260866936 0x7f81e89bef00 640: I2C/C2I adapters(0xbbbbaaabbbbbab)
fifo write: @1699477099260880337 0x7f81e89bec00 560: I2C/C2I adapters(0xbbbbaaabbab)
fifo write: @1699477099260893707 0x7f81e89be900 520: I2C/C2I adapters(0xbbbaabbab)
fifo write: @1699477099260906757 0x7f81e89be600 584: I2C/C2I adapters(0xbaaaabbabbbb)
fifo write: @1699477099261150500 0x7f81e17619df 9176: sun.reflect.annotation.AnnotationParser::parseMemberValue(Class, java.nio.ByteBuffer, jdk.internal.reflect.ConstantPool, Class) -> Object
fifo write: @1699477099261164960 0x7f81e89be300 624: I2C/C2I adapters(0xbbbbabebebbbbaa)
fifo write: @1699477099261178090 0x7f81e89bdf80 760: I2C/C2I adapters(0xbbbbbaabebebbbbbbbab)
fifo write: @1699477099261191301 0x7f81e89bdc00 672: I2C/C2I adapters(0xbbbbbaabebebbbbab)
fifo write: @1699477099261228111 0x7f81e89bd900 624: I2C/C2I adapters(0xbbbbabebebbbbab)
fifo write: @1699477099261241121 0x7f81e89bd580 664: I2C/C2I adapters(0xbbaabbbbaaabbbb)
fifo write: @1699477099261254001 0x7f81e89bd200 704: I2C/C2I adapters(0xbbbbbbaaabebebbbba)
fifo write: @1699477099261266862 0x7f81e89bce00 784: I2C/C2I adapters(0xbbbbbbaaabebebbbbbbba)
fifo write: @1699477099261279972 0x7f81e89bcb00 616: I2C/C2I adapters(0xbbaaabbbbbbbb)
fifo write: @1699477099262116652 0x7f81e89bc800 640: I2C/C2I adapters(0xbbbaaabbbbbbbb)
fifo write: @1699477099262776551 0x7f81e89bc500 504: I2C/C2I adapters(0xbaabebbbb)
fifo write: @1699477099262790191 0x7f81e89bc200 456: I2C/C2I adapters(0xbaabebb)
fifo write: @1699477099262807951 0x7f81e89bbf00 480: I2C/C2I adapters(0xbaabebbb)
fifo write: @1699477099263576541 0x7f81e90d0e1c 4264: jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8(String) -> int
fifo write: @1699477099263737793 0x7f81e1765a77 1435: java.lang.reflect.AccessibleObject::slowVerifyAccess(Class, Class, Class, int) -> boolean
fifo write: @1699477099264451363 0x7f81e17667f4 95: java.util.Calendar::internalSet(int, int) -> void
fifo write: @1699477099264785837 0x7f81e1766bf4 328: java.util.Objects::hashCode(Object) -> int
fifo write: @1699477099265307704 0x7f81e90d384c 6: java.lang.reflect.Method::getRoot() -> java.lang.reflect.Method
fifo write: @1699477099265460116 0x7f81e1767134 646: jdk.internal.loader.AbstractClassLoaderValue$Sub::hashCode() -> int
fifo write: @1699477099265569057 0x7f81e1767894 182: org.apache.logging.log4j.util.PropertiesUtil::getStringProperty(String) -> String
fifo write: @1699477099265668058 0x7f81e1767cf4 85: org.apache.logging.log4j.util.PropertiesUtil$Environment::access$200(org.apache.logging.log4j.util.PropertiesUtil$Environment, String) -> String
fifo write: @1699477099265787090 0x7f81e17681bc 2712: java.lang.reflect.AccessibleObject::verifyAccess(Class, Class, Class, int) -> boolean
fifo write: @1699477099265964712 0x7f81e176961e 4924: org.apache.logging.log4j.util.PropertiesUtil$Environment::get(String) -> String
fifo write: @1699477099266163415 0x7f81e90d3b9d 5821: java.util.concurrent.ConcurrentHashMap::transfer(java.util.concurrent.ConcurrentHashMap$Node[], java.util.concurrent.ConcurrentHashMap$Node[]) -> void
fifo write: @1699477099266223306 0x7f81e176b5b4 735: jdk.internal.org.objectweb.asm.Frame::getConcreteOutputType(int, int) -> int
fifo write: @1699477099266274056 0x7f81e89b5128 168: itable stub
fifo write: @1699477099266477009 0x7f81e176be14 137: jdk.internal.loader.AbstractClassLoaderValue::<init>() -> void
fifo write: @1699477099266561770 0x7f81e176c214 379: jdk.internal.loader.AbstractClassLoaderValue$Sub::<init>(jdk.internal.loader.AbstractClassLoaderValue, Object) -> void
fifo write: @1699477099266649391 0x7f81e176c7ea 486: jdk.internal.loader.AbstractClassLoaderValue::sub(Object) -> jdk.internal.loader.AbstractClassLoaderValue$Sub
fifo write: @1699477099266785963 0x7f81e176ce34 464: org.apache.logging.log4j.core.lookup.StrMatcher$StringMatcher::isMatch(char[], int, int, int) -> int
fifo write: @1699477099267040506 0x7f81e176d7f4 23: StringBuilder::length() -> int
fifo write: @1699477099267263719 0x7f81e90d744c 6: java.lang.reflect.Field::getType() -> Class
fifo write: @1699477099267624574 0x7f81e176ddef 6672: sun.reflect.annotation.AnnotationParser::parseAnnotation2(java.nio.ByteBuffer, jdk.internal.reflect.ConstantPool, Class, boolean, Class[]) -> java.lang.annotation.Annotation
fifo write: @1699477099267697455 0x7f81e90d7753 468: sun.reflect.generics.parser.SignatureParser::skipIdentifier() -> void
fifo write: @1699477099267821936 0x7f81e1770cd4 902: java.util.regex.Pattern$BmpCharProperty::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099268000878 0x7f81e1771689 1458: org.apache.logging.log4j.util.SystemPropertiesPropertySource::getNormalForm(Iterable) -> CharSequence
fifo write: @1699477099268095490 0x7f81e17724d4 1812: org.apache.logging.log4j.util.PropertiesPropertySource::getNormalForm(Iterable) -> CharSequence
fifo write: @1699477099268224481 0x7f81e90d80cc 6: org.apache.logging.log4j.core.config.Node::getChildren() -> java.util.List
fifo write: @1699477099268495185 0x7f81e1773494 326: java.util.ArrayList::checkForComodification(int) -> void
fifo write: @1699477099268561446 0x7f81e1773a38 859: java.util.ArrayList::hashCodeRange(int, int) -> int
fifo write: @1699477099268617326 0x7f81e17743b4 503: java.util.ArrayList::hashCode() -> int
fifo write: @1699477099270101425 0x7f81e89bbc00 504: I2C/C2I adapters(0xbbbbaaab)
fifo write: @1699477099270680283 0x7f81e1774d74 90: java.util.ImmutableCollections$Set12$1::hasNext() -> boolean
fifo write: @1699477099272629207 0x7f81e89bb900 464: I2C/C2I adapters(0xbbbbebeb)
fifo write: @1699477099273969695 0x7f81e177528b 1911: Class::newReflectionData(java.lang.ref.SoftReference, int) -> Class$ReflectionData
fifo write: @1699477099275704897 0x7f81e89bb580 488: I2C/C2I adapters(0xbbbbaba)
fifo write: @1699477099276029251 0x7f81e90d89cc 6: java.lang.reflect.Field::getName() -> String
fifo write: @1699477099276325785 0x7f81e89b51e0 27: vtable stub
fifo write: @1699477099277015984 0x7f81e1776257 2145: java.lang.invoke.InvokerBytecodeGenerator::storeInsnOpcode(java.lang.invoke.LambdaForm$BasicType) -> int
fifo write: @1699477099277416819 0x7f81e17774b9 492: String::trim() -> String
fifo write: @1699477099277459550 0x7f81e1777b94 768: StringLatin1::trim(byte[]) -> String
fifo write: @1699477099277538971 0x7f81e1778414 488: java.lang.reflect.Method::getParameterTypes() -> Class[]
fifo write: @1699477099277748073 0x7f81e1778994 660: java.util.TreeMap::successor(java.util.TreeMap$Entry) -> java.util.TreeMap$Entry
fifo write: @1699477099277798084 0x7f81e17791d4 852: java.util.TreeMap$PrivateEntryIterator::nextEntry() -> java.util.TreeMap$Entry
fifo write: @1699477099277812134 0x7f81e8b7cb80 536: I2C/C2I adapters(0xbbbbaaabbb)
fifo write: @1699477099277825484 0x7f81e8b7c880 560: I2C/C2I adapters(0xbbbbaaabbbb)
fifo write: @1699477099277946486 0x7f81e1779a74 280: Character::toLowerCase(int) -> int
fifo write: @1699477099278156159 0x7f81e1779f94 31: java.util.TreeMap$EntryIterator::next() -> java.util.Map$Entry
fifo write: @1699477099278195869 0x7f81e177a314 167: java.util.TreeMap$EntryIterator::next() -> Object
fifo write: @1699477099278244050 0x7f81e177a6f4 27: java.lang.reflect.Method::getRoot() -> java.lang.reflect.AccessibleObject
fifo write: @1699477099278279220 0x7f81e177aa74 95: java.util.TreeMap$PrivateEntryIterator::hasNext() -> boolean
fifo write: @1699477099278389212 0x7f81e177af14 1905: java.lang.reflect.Executable::declaredAnnotations() -> java.util.Map
fifo write: @1699477099278422452 0x7f81e177bf74 381: Character::toLowerCase(char) -> char
fifo write: @1699477099278499963 0x7f81e177c514 589: String$CaseInsensitiveComparator::compare(Object, Object) -> int
fifo write: @1699477099278669275 0x7f81e177cb74 849: String$CaseInsensitiveComparator::compare(String, String) -> int
fifo write: @1699477099278720426 0x7f81e177d621 1957: StringLatin1::compareToCI(byte[], byte[]) -> int
fifo write: @1699477099279570077 0x7f81e8b7c580 608: I2C/C2I adapters(0xbbabbbebebebebbb)
fifo write: @1699477099279583367 0x7f81e8b7c280 552: I2C/C2I adapters(0xbbabbbebebebeb)
fifo write: @1699477099279596537 0x7f81e8b7bf80 632: I2C/C2I adapters(0xbbabbbebebebebbbb)
fifo write: @1699477099279720119 0x7f81e177e734 1050: java.util.WeakHashMap::matchesKey(java.util.WeakHashMap$Entry, Object) -> boolean
fifo write: @1699477099279839900 0x7f81e177f094 589: com.sun.jmx.mbeanserver.MBeanAnalyzer$MethodOrder::compare(Object, Object) -> int
fifo write: @1699477099280076764 0x7f81e177f75e 1983: com.sun.jmx.mbeanserver.MBeanAnalyzer$MethodOrder::compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int
fifo write: @1699477099280152135 0x7f81e8b7bc80 504: I2C/C2I adapters(0xbbbbbbba)
fifo write: @1699477099280323217 0x7f81e90d92cc 6: java.lang.reflect.Method::getGenericSignature() -> String
fifo write: @1699477099280409838 0x7f81e90d95cc 6: javax.management.openmbean.OpenType::getClassName() -> String
fifo write: @1699477099280573290 0x7f81e1780896 37: java.util.TreeMap::put(Object, Object) -> Object
fifo write: @1699477099280716502 0x7f81e90d98cc 2: java.util.TreeMap::size() -> int
fifo write: @1699477099280906874 0x7f81e1780d6b 2821: java.util.TreeMap::put(Object, Object, boolean) -> Object
fifo write: @1699477099280986705 0x7f81e17822b7 789: java.util.ArrayList::add(Object) -> boolean
fifo write: @1699477099281071156 0x7f81e8b7b980 448: I2C/C2I adapters(0xbebabb)
fifo write: @1699477099281330360 0x7f81e8b7b680 464: I2C/C2I adapters(0xbbebabb)
fifo write: @1699477099282381743 0x7f81e1782ed4 15: java.lang.invoke.LambdaFormEditor$TransformKey::bval(int) -> byte
fifo write: @1699477099282437014 0x7f81e90dbccc 6: java.util.TreeMap$Entry::getKey() -> Object
fifo write: @1699477099282488815 0x7f81e90dbfcc 6: java.lang.reflect.Method::getAnnotationBytes() -> byte[]
fifo write: @1699477099282552586 0x7f81e1783294 299: java.util.TreeMap::getFirstEntry() -> java.util.TreeMap$Entry
fifo write: @1699477099282633907 0x7f81e1783794 322: java.util.TreeMap$PrivateEntryIterator::<init>(java.util.TreeMap, java.util.TreeMap$Entry) -> void
fifo write: @1699477099282696577 0x7f81e1783d14 167: java.util.LinkedHashMap$LinkedEntryIterator::next() -> Object
fifo write: @1699477099282760338 0x7f81e1784114 31: java.util.LinkedHashMap$LinkedEntryIterator::next() -> java.util.Map$Entry
fifo write: @1699477099282780478 0x7f81e89b5210 27: vtable stub
fifo write: @1699477099282800099 0x7f81e89b5240 27: vtable stub
fifo write: @1699477099282819939 0x7f81e89b5270 27: vtable stub
fifo write: @1699477099282877060 0x7f81e90dc2cc 6: javax.management.MBeanFeatureInfo::getDescription() -> String
fifo write: @1699477099283509458 0x7f81e1784494 381: java.util.regex.Pattern::next() -> int
fifo write: @1699477099283872733 0x7f81e1784a94 63: java.io.BufferedReader::readLine() -> String
fifo write: @1699477099284217537 0x7f81e1784e74 203: java.util.regex.ASCII::getType(int) -> int
fifo write: @1699477099284270278 0x7f81e17852f4 374: java.util.regex.ASCII::isType(int, int) -> boolean
fifo write: @1699477099284376819 0x7f81e1785874 327: StringLatin1::inflate(byte[], int, char[], int, int) -> void
fifo write: @1699477099284521461 0x7f81e1785dd4 150: Character::isHighSurrogate(char) -> boolean
fifo write: @1699477099284587432 0x7f81e17861f4 471: java.util.regex.ASCII::isSpace(int) -> boolean
fifo write: @1699477099284647853 0x7f81e1786814 713: java.util.regex.CharPredicates::lambda$ASCII_SPACE$20(int) -> boolean
fifo write: @1699477099284713953 0x7f81e1786fb7 810: java.util.regex.CharPredicates$$Lambda$17.0x800000025::is(int) -> boolean
fifo write: @1699477099284767504 0x7f81e1787814 250: java.util.regex.Pattern$BitClass::is(int) -> boolean
fifo write: @1699477099284825875 0x7f81e1787d14 647: java.util.regex.Pattern$CharPredicate$$Lambda$21.0x80000002d::is(int) -> boolean
fifo write: @1699477099284889456 0x7f81e1788434 1436: Character::codePointAt(CharSequence, int) -> int
fifo write: @1699477099284942196 0x7f81e1788f94 255: java.util.regex.Pattern$CharPredicate::lambda$negate$3(int) -> boolean
fifo write: @1699477099284991737 0x7f81e1789474 270: java.util.regex.Pattern::lambda$DOT$4(int) -> boolean
fifo write: @1699477099285049358 0x7f81e1789994 414: java.util.regex.Pattern$$Lambda$9.0x00007f8160072e08::is(int) -> boolean
fifo write: @1699477099285131469 0x7f81e1789f14 295: java.util.regex.Pattern$LastNode::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099285209730 0x7f81e178a534 612: java.util.regex.Pattern::matcher(CharSequence) -> java.util.regex.Matcher
fifo write: @1699477099285300541 0x7f81e178ad34 722: java.util.regex.Pattern$GroupTail::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099285400152 0x7f81e178b74a 2144: java.util.regex.Pattern$CharPropertyGreedy::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099285572384 0x7f81e178c974 392: java.lang.invoke.MethodHandleNatives::refKindIsMethod(byte) -> boolean
fifo write: @1699477099285668946 0x7f81e178cf14 317: java.lang.invoke.DirectMethodHandle::maybeCompile(java.lang.invoke.LambdaForm, java.lang.invoke.MemberName) -> void
fifo write: @1699477099285944379 0x7f81e178d517 2504: jdk.internal.misc.VM::isSystemDomainLoader(ClassLoader) -> boolean
fifo write: @1699477099286050671 0x7f81e178e7f4 92: java.nio.Buffer::hasRemaining() -> boolean
fifo write: @1699477099286636338 0x7f81e178ef57 1375: java.util.TreeMap::addEntryToEmptyMap(Object, Object) -> void
fifo write: @1699477099286705119 0x7f81e90dc8cc 6: com.sun.jmx.mbeanserver.MXBeanMapping::getOpenType() -> javax.management.openmbean.OpenType
fifo write: @1699477099286876771 0x7f81e178fe21 6302: java.lang.invoke.MethodHandles$Lookup::in(Class) -> java.lang.invoke.MethodHandles$Lookup
fifo write: @1699477099286944212 0x7f81e1792e97 633: java.util.LinkedHashMap::values() -> java.util.Collection
fifo write: @1699477099287001003 0x7f81e1793594 120: java.util.TreeMap::containsKey(Object) -> boolean
fifo write: @1699477099287082374 0x7f81e1793a74 1442: java.util.TreeMap::getEntry(Object) -> java.util.TreeMap$Entry
fifo write: @1699477099287842424 0x7f81e1794694 151: java.lang.invoke.MethodType::changeReturnType(Class) -> java.lang.invoke.MethodType
fifo write: @1699477099287948545 0x7f81e1794bf9 2252: java.lang.invoke.AbstractValidatingLambdaMetafactory::isAdaptableTo(Class, Class, boolean) -> boolean
fifo write: @1699477099288190758 0x7f81e17960bc 4601: java.lang.invoke.LambdaForm::normalize() -> int
fifo write: @1699477099288496122 0x7f81e90dced5 555: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477099288569773 0x7f81e1798314 293: java.util.TreeMap::<init>(java.util.Comparator) -> void
fifo write: @1699477099288644144 0x7f81e17987f9 387: javax.management.ImmutableDescriptor::findNonEmpty(javax.management.Descriptor[], int) -> int
fifo write: @1699477099288726305 0x7f81e1798e34 1534: javax.management.ImmutableDescriptor::isEmpty(javax.management.Descriptor) -> boolean
fifo write: @1699477099288784666 0x7f81e1799a14 92: java.util.TreeMap$KeyIterator::next() -> Object
fifo write: @1699477099288933608 0x7f81e1799dd4 106: java.lang.invoke.LambdaFormEditor$TransformKey::inRange(int) -> boolean
fifo write: @1699477099289298363 0x7f81e179a1f4 31: java.util.IdentityHashMap::hash(Object, int) -> int
fifo write: @1699477099289364523 0x7f81e179a554 83: java.util.IdentityHashMap::maskNull(Object) -> Object
fifo write: @1699477099289446535 0x7f81e179a914 92: java.util.TreeMap$ValueIterator::next() -> Object
fifo write: @1699477099289682668 0x7f81e179ad14 696: sun.reflect.annotation.AnnotationParser::toArray(java.util.Map) -> java.lang.annotation.Annotation[]
fifo write: @1699477099289777359 0x7f81e179b53c 4182: java.util.AbstractCollection::toArray(Object[]) -> Object[]
fifo write: @1699477099289797219 0x7f81e89b52a0 27: vtable stub
fifo write: @1699477099289816769 0x7f81e89b52d0 27: vtable stub
fifo write: @1699477099289955771 0x7f81e179d197 4137: java.lang.reflect.Method::getGenericReturnType() -> java.lang.reflect.Type
fifo write: @1699477099290308146 0x7f81e179ed74 473: javax.management.StandardMBean::equal(Object, Object) -> boolean
fifo write: @1699477099290368286 0x7f81e179f3d4 965: Class::getInterfaces(boolean) -> Class[]
fifo write: @1699477099290454118 0x7f81e179fd9c 1934: java.util.WeakHashMap::get(Object) -> Object
fifo write: @1699477099290649720 0x7f81e17a0e14 39: javax.management.ImmutableDescriptor::fieldIndex(String) -> int
fifo write: @1699477099290730481 0x7f81e17a11fa 87: java.util.Arrays::binarySearch(Object[], Object, java.util.Comparator) -> int
fifo write: @1699477099290800792 0x7f81e17a1634 771: javax.management.ImmutableDescriptor::checkIllegalFieldName(String) -> void
fifo write: @1699477099290887723 0x7f81e17a1ec3 781: java.util.Arrays::binarySearch0(Object[], int, int, Object, java.util.Comparator) -> int
fifo write: @1699477099291064215 0x7f81e17a2b9c 2842: javax.management.ImmutableDescriptor::getFieldValue(String) -> Object
fifo write: @1699477099291472081 0x7f81e17a41f4 31: java.lang.invoke.MethodHandleNatives::findMethodHandleType(Class, Class[]) -> java.lang.invoke.MethodType
fifo write: @1699477099291599192 0x7f81e17a45b4 1180: java.lang.invoke.MethodHandleNatives::isCallerSensitive(java.lang.invoke.MemberName) -> boolean
fifo write: @1699477099292364702 0x7f81e17a5094 334: java.lang.invoke.ConstantCallSite::getTarget() -> java.lang.invoke.MethodHandle
fifo write: @1699477099292804378 0x7f81e17a5761 4771: java.util.Properties::loadConvert(char[], int, int, StringBuilder) -> String
fifo write: @1699477099293132782 0x7f81e90dde4c 2: java.util.concurrent.locks.AbstractQueuedSynchronizer::getState() -> int
fifo write: @1699477099293400126 0x7f81e17a7939 714: java.util.TreeMap::getEntryUsingComparator(Object) -> java.util.TreeMap$Entry
fifo write: @1699477099293647129 0x7f81e90de14c 6: javax.management.MBeanFeatureInfo::getName() -> String
fifo write: @1699477099293725230 0x7f81e17a8198 1799: Class::privateGetDeclaredMethods(boolean) -> java.lang.reflect.Method[]
fifo write: @1699477099294000073 0x7f81e8b7b380 520: I2C/C2I adapters(0xbbbbbbbab)
fifo write: @1699477099294045544 0x7f81e8b7b080 520: I2C/C2I adapters(0xbbbbbaaaa)
fifo write: @1699477099294475979 0x7f81e90de46a 291: java.util.HashSet::<init>() -> void
fifo write: @1699477099294924785 0x7f81e17a8fea 900: java.util.Arrays::asList(Object[]) -> java.util.List
fifo write: @1699477099294990326 0x7f81e17a9834 796: java.util.Arrays$ArrayList::<init>(Object[]) -> void
fifo write: @1699477099295040297 0x7f81e17a9ff4 159: java.util.Arrays$ArrayItr::hasNext() -> boolean
fifo write: @1699477099295788096 0x7f81e90de8ba 49: StringLatin1::getChar(byte[], int) -> char
fifo write: @1699477099295843607 0x7f81e17aa494 513: StringLatin1$LinesSpliterator::indexOfLineSeparator(int) -> int
fifo write: @1699477099296011639 0x7f81e17aab94 411: java.util.HashSet::contains(Object) -> boolean
fifo write: @1699477099296129201 0x7f81e17ab114 232: java.lang.reflect.ReflectAccess::getRoot(java.lang.reflect.AccessibleObject) -> java.lang.reflect.AccessibleObject
fifo write: @1699477099296382824 0x7f81e17ab67f 2439: Class::getConstructor0(Class[], int) -> java.lang.reflect.Constructor
fifo write: @1699477099296470315 0x7f81e17acabe 789: sun.invoke.util.VerifyAccess::isTypeVisible(java.lang.invoke.MethodType, Class) -> boolean
fifo write: @1699477099296576837 0x7f81e17ad565 3802: jdk.internal.reflect.ReflectionFactory::checkInitted() -> void
fifo write: @1699477099296638387 0x7f81e17af017 612: Integer::valueOf(int) -> Integer
fifo write: @1699477099296752619 0x7f81e17af714 516: java.util.TreeMap$KeyIterator::<init>(java.util.TreeMap, java.util.TreeMap$Entry) -> void
fifo write: @1699477099296821330 0x7f81e17afdb7 693: java.util.TreeMap::navigableKeySet() -> java.util.NavigableSet
fifo write: @1699477099296885551 0x7f81e17b0594 373: java.util.TreeMap$KeySet::<init>(java.util.NavigableMap) -> void
fifo write: @1699477099296954391 0x7f81e17b0b8b 951: java.util.TreeMap::keyIterator() -> java.util.Iterator
fifo write: @1699477099297034152 0x7f81e17b1574 1798: java.util.TreeMap$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477099297091693 0x7f81e17b2314 47: java.util.TreeMap::keySet() -> java.util.Set
fifo write: @1699477099297141414 0x7f81e17b26f4 104: java.util.TreeMap$Values::size() -> int
fifo write: @1699477099297191164 0x7f81e17b2b14 240: java.util.TreeMap$KeySet::size() -> int
fifo write: @1699477099297252775 0x7f81e17b2f94 334: java.util.TreeMap$Values::<init>(java.util.TreeMap) -> void
fifo write: @1699477099297315056 0x7f81e17b3497 633: java.util.TreeMap::values() -> java.util.Collection
fifo write: @1699477099297399257 0x7f81e17b3b94 516: java.util.TreeMap$ValueIterator::<init>(java.util.TreeMap, java.util.TreeMap$Entry) -> void
fifo write: @1699477099297471468 0x7f81e17b428b 964: java.util.TreeMap$Values::iterator() -> java.util.Iterator
fifo write: @1699477099297534809 0x7f81e90debcc 6: com.sun.management.internal.DiagnosticCommandArgumentInfo::getName() -> String
fifo write: @1699477099297596990 0x7f81e17b4c94 377: java.util.Arrays$ArrayItr::next() -> Object
fifo write: @1699477099297660131 0x7f81e17b52b4 600: java.util.ImmutableCollections$Set12::contains(Object) -> boolean
fifo write: @1699477099297766752 0x7f81e17b5b5f 6143: javax.management.ImmutableDescriptor::<init>(java.util.Map) -> void
fifo write: @1699477099297831103 0x7f81e90deecc 6: com.sun.management.internal.DiagnosticCommandInfo::getArgumentsInfo() -> java.util.List
fifo write: @1699477099297891604 0x7f81e90df1d3 204: jdk.internal.reflect.ClassFileAssembler::emitByte(byte) -> void
fifo write: @1699477099297962144 0x7f81e17b83b4 1206: java.util.TreeMap::rotateRight(java.util.TreeMap$Entry) -> void
fifo write: @1699477099298080666 0x7f81e17b8d94 31: Class::getInterfaces() -> Class[]
fifo write: @1699477099298132507 0x7f81e17b9194 339: java.util.LinkedHashMap::<init>() -> void
fifo write: @1699477099298153057 0x7f81e8b7ad80 504: I2C/C2I adapters(0xbbbebebebbb)
fifo write: @1699477099298307379 0x7f81e89b5300 168: itable stub
fifo write: @1699477099298329789 0x7f81e89b53b8 168: itable stub
fifo write: @1699477099298460941 0x7f81e17b9734 1206: java.util.TreeMap::rotateLeft(java.util.TreeMap$Entry) -> void
fifo write: @1699477099298553462 0x7f81e17ba14f 1080: com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory::getMapping(java.lang.reflect.Type) -> com.sun.jmx.mbeanserver.MXBeanMapping
fifo write: @1699477099298622143 0x7f81e17baa54 867: java.util.IdentityHashMap::containsKey(Object) -> boolean
fifo write: @1699477099298718084 0x7f81e17bb3b9 577: sun.reflect.annotation.AnnotationParser::parseAnnotations(byte[], jdk.internal.reflect.ConstantPool, Class) -> java.util.Map
fifo write: @1699477099298828776 0x7f81e17bbaf4 63: java.util.Arrays$ArrayList::size() -> int
fifo write: @1699477099299056959 0x7f81e17bc04b 3879: com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory::mappingForType(java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory) -> com.sun.jmx.mbeanserver.MXBeanMapping
fifo write: @1699477099299399193 0x7f81e17bde7e 1459: Module::isStaticallyExportedOrOpen(String, Module, boolean) -> boolean
fifo write: @1699477099299677457 0x7f81e17bea14 251: java.lang.invoke.LambdaFormEditor$Transform::equals(java.lang.invoke.LambdaFormEditor$TransformKey) -> boolean
fifo write: @1699477099299807688 0x7f81e17bef14 869: com.sun.jmx.mbeanserver.MXBeanIntrospector::originalTypeString(java.lang.reflect.Type) -> String
fifo write: @1699477099299887179 0x7f81e17bf714 328: javax.management.StandardMBean::getDescription(javax.management.MBeanFeatureInfo) -> String
fifo write: @1699477099300016541 0x7f81e17bfc19 545: java.security.AccessController::executePrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext, Class) -> Object
fifo write: @1699477099300520757 0x7f81e90df735 1294: StringLatin1::compareToCI(byte[], byte[]) -> int
fifo write: @1699477099300910263 0x7f81e17c02b4 335: Class::isRecord() -> boolean
fifo write: @1699477099301167846 0x7f81e17c0894 428: java.util.TreeMap$EntrySet::<init>(java.util.TreeMap) -> void
fifo write: @1699477099301249297 0x7f81e17c0e14 516: java.util.TreeMap$EntryIterator::<init>(java.util.TreeMap, java.util.TreeMap$Entry) -> void
fifo write: @1699477099301335018 0x7f81e17c1494 275: javax.management.MBeanFeatureInfo::<init>(String, String, javax.management.Descriptor) -> void
fifo write: @1699477099301397289 0x7f81e17c1a37 748: java.util.TreeMap::entrySet() -> java.util.Set
fifo write: @1699477099301467450 0x7f81e17c228b 964: java.util.TreeMap$EntrySet::iterator() -> java.util.Iterator
fifo write: @1699477099301789594 0x7f81e90e07f1 1390: String$CaseInsensitiveComparator::compare(String, String) -> int
fifo write: @1699477099301950556 0x7f81e17c2e3c 6779: javax.management.ImmutableDescriptor::union(javax.management.Descriptor[]) -> javax.management.ImmutableDescriptor
fifo write: @1699477099302083048 0x7f81e90e1b00 1487: String$CaseInsensitiveComparator::compare(Object, Object) -> int
fifo write: @1699477099302704706 0x7f81e17c5ee6 4281: sun.invoke.util.VerifyAccess::isMemberAccessible(Class, Class, int, Class, Class, int) -> boolean
fifo write: @1699477099302981529 0x7f81e90e2ed0 207: java.util.ArrayList$Itr::next() -> Object
fifo write: @1699477099303472136 0x7f81e17c8114 118: java.util.ImmutableCollections$List12::size() -> int
fifo write: @1699477099303832110 0x7f81e17c8574 93: sun.invoke.util.Wrapper::isNumeric() -> boolean
fifo write: @1699477099303884261 0x7f81e17c8994 391: sun.invoke.util.Wrapper::isIntegral() -> boolean
fifo write: @1699477099303941552 0x7f81e17c8f34 821: sun.invoke.util.Wrapper::isSubwordOrInt() -> boolean
fifo write: @1699477099303988902 0x7f81e17c9774 93: sun.invoke.util.Wrapper::isSingleWord() -> boolean
fifo write: @1699477099304062363 0x7f81e17c9b94 185: java.lang.invoke.LambdaFormEditor::<init>(java.lang.invoke.LambdaForm) -> void
fifo write: @1699477099304157244 0x7f81e17ca063 366: java.lang.invoke.LambdaFormEditor::lambdaFormEditor(java.lang.invoke.LambdaForm) -> java.lang.invoke.LambdaFormEditor
fifo write: @1699477099304231575 0x7f81e17ca637 526: java.lang.invoke.LambdaForm::editor() -> java.lang.invoke.LambdaFormEditor
fifo write: @1699477099304335117 0x7f81e17cad3d 969: java.lang.invoke.DirectMethodHandle::preparedLambdaForm(java.lang.invoke.MethodType, int) -> java.lang.invoke.LambdaForm
fifo write: @1699477099304462458 0x7f81e17cb7f9 3542: java.lang.invoke.LambdaFormEditor::getInCache(java.lang.invoke.LambdaFormEditor$TransformKey) -> java.lang.invoke.LambdaForm
fifo write: @1699477099304939465 0x7f81e90e344c 6: String::value() -> byte[]
fifo write: @1699477099305940317 0x7f81e17cd3df 8575: com.sun.jmx.mbeanserver.Introspector::descriptorForAnnotations(java.lang.annotation.Annotation[]) -> javax.management.Descriptor
fifo write: @1699477099305961038 0x7f81e8b7aa00 768: I2C/C2I adapters(0xbbbbbbbbbbbebabbeabeb)
fifo write: @1699477099305981258 0x7f81e8b7a700 592: I2C/C2I adapters(0xbbbbbbbbbbbbe)
fifo write: @1699477099306001598 0x7f81e8b7a380 736: I2C/C2I adapters(0xbbbbbbbbbbbebabbeabe)
fifo write: @1699477099306022129 0x7f81e8b7a000 704: I2C/C2I adapters(0xbbbbbbbbbbbebabbbe)
fifo write: @1699477099306042639 0x7f81e8b79c80 680: I2C/C2I adapters(0xbbbbbbbbbbbebabbe)
fifo write: @1699477099306950420 0x7f81e90e3a53 324: jdk.internal.misc.Unsafe::allocateUninitializedArray(Class, int) -> Object
fifo write: @1699477099307040452 0x7f81e8b79980 488: I2C/C2I adapters(0xbbbabbb)
fifo write: @1699477099308606342 0x7f81e17d1394 234: java.util.ImmutableCollections$AbstractImmutableCollection::<init>() -> void
fifo write: @1699477099308695403 0x7f81e17d1834 1027: java.lang.invoke.LambdaFormBuffer::changeName(int, java.lang.invoke.LambdaForm$Name) -> void
fifo write: @1699477099313966091 0x7f81e17d2574 93: java.lang.invoke.MethodHandles$Lookup::hasFullPrivilegeAccess() -> boolean
fifo write: @1699477099314166584 0x7f81e17d2abc 3636: java.lang.invoke.DirectMethodHandle::preparedLambdaForm(java.lang.invoke.MemberName, boolean) -> java.lang.invoke.LambdaForm
fifo write: @1699477099314234745 0x7f81e90e425f 300: jdk.internal.misc.Unsafe::allocateUninitializedArray0(Class, int) -> Object
fifo write: @1699477099314303075 0x7f81e17d4814 463: java.lang.invoke.InnerClassLambdaMetafactory::getOpcodeOffset(Class) -> int
fifo write: @1699477099314372156 0x7f81e90e46d3 300: jdk.internal.misc.Unsafe::allocateUninitializedArray(Class, int) -> Object
fifo write: @1699477099314814982 0x7f81e90e4bcc 3: java.lang.invoke.DirectMethodHandle::isCrackable() -> boolean
fifo write: @1699477099315028955 0x7f81e17d4eb4 644: java.util.ImmutableCollections$Set12$1::next() -> Object
fifo write: @1699477099315110336 0x7f81e17d56b4 631: java.lang.invoke.BoundMethodHandle::editor() -> java.lang.invoke.LambdaFormEditor
fifo write: @1699477099315193797 0x7f81e17d5e54 846: java.lang.invoke.TypeConvertingMethodAdapter::cast(String, String) -> void
fifo write: @1699477099315283818 0x7f81e17d66f4 31: java.lang.invoke.DirectMethodHandle::preparedLambdaForm(java.lang.invoke.MemberName) -> java.lang.invoke.LambdaForm
fifo write: @1699477099315682413 0x7f81e17d6a54 72: Class$Atomic::casReflectionData(Class, java.lang.ref.SoftReference, java.lang.ref.SoftReference) -> boolean
fifo write: @1699477099315763064 0x7f81e17d6e34 891: jdk.internal.org.objectweb.asm.ClassReader::readUtf(int, int, char[]) -> String
fifo write: @1699477099315835945 0x7f81e17d7894 329: java.util.LinkedHashMap$LinkedHashIterator::<init>(java.util.LinkedHashMap) -> void
fifo write: @1699477099316125229 0x7f81e17d7e14 343: java.lang.invoke.MemberName::isField() -> boolean
fifo write: @1699477099316209570 0x7f81e17d8354 93: java.lang.reflect.Modifier::isAbstract(int) -> boolean
fifo write: @1699477099316547814 0x7f81e17d8794 165: java.lang.invoke.LambdaFormEditor$TransformKey::<init>(long) -> void
fifo write: @1699477099316638756 0x7f81e17d8c14 240: java.lang.invoke.ClassSpecializer$SpeciesData::fieldCount() -> int
fifo write: @1699477099316915559 0x7f81e17d926f 4784: java.lang.invoke.DirectMethodHandle::make(byte, Class, java.lang.invoke.MemberName, Class) -> java.lang.invoke.DirectMethodHandle
fifo write: @1699477099317991073 0x7f81e17db714 241: sun.security.x509.X509CertImpl::getEncodedInternal() -> byte[]
fifo write: @1699477099318125625 0x7f81e17dbc74 1801: sun.security.x509.X509CertImpl::getEncodedInternal(java.security.cert.Certificate) -> byte[]
fifo write: @1699477099319940688 0x7f81e17dca8a 935: java.util.Hashtable::get(Object) -> Object
fifo write: @1699477099320777259 0x7f81e17dd5fc 4497: java.security.cert.Certificate::equals(Object) -> boolean
fifo write: @1699477099322264628 0x7f81e8b79600 720: I2C/C2I adapters(0xbbbbbbbbbbbbbbbbb)
fifo write: @1699477099323357982 0x7f81e90e4f08 451: sun.net.www.ParseUtil::firstEncodeIndex(String) -> int
fifo write: @1699477099328798022 0x7f81e17df614 39: jdk.internal.org.objectweb.asm.FieldVisitor::<init>(int) -> void
fifo write: @1699477099328875143 0x7f81e17dfa86 569: jdk.internal.org.objectweb.asm.ClassWriter::visitField(int, String, String, String, Object) -> jdk.internal.org.objectweb.asm.FieldVisitor
fifo write: @1699477099328918353 0x7f81e17e01b4 964: java.lang.invoke.MemberName::isVarargs() -> boolean
fifo write: @1699477099328991564 0x7f81e17e0b77 1473: java.lang.invoke.MethodHandle::setVarargs(java.lang.invoke.MemberName) -> java.lang.invoke.MethodHandle
fifo write: @1699477099329067685 0x7f81e17e1861 670: jdk.internal.org.objectweb.asm.FieldWriter::<init>(jdk.internal.org.objectweb.asm.SymbolTable, int, String, String, String, Object) -> void
fifo write: @1699477099329108396 0x7f81e17e2139 458: jdk.internal.org.objectweb.asm.FieldWriter::computeFieldInfoSize() -> int
fifo write: @1699477099329231777 0x7f81e17e29b7 1868: jdk.internal.org.objectweb.asm.FieldVisitor::<init>(int, jdk.internal.org.objectweb.asm.FieldVisitor) -> void
fifo write: @1699477099329454990 0x7f81e17e3af9 2074: jdk.internal.org.objectweb.asm.FieldWriter::putFieldInfo(jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099329658563 0x7f81e90e56cc 2: jdk.internal.org.objectweb.asm.ClassReader::getMaxStringLength() -> int
fifo write: @1699477099329731984 0x7f81e17e4f74 330: java.lang.invoke.MethodHandles$Lookup$ClassFile::readUnsignedShort(byte[], int) -> int
fifo write: @1699477099329998227 0x7f81e89b5470 168: itable stub
fifo write: @1699477099330203210 0x7f81e17e5665 4648: jdk.internal.org.objectweb.asm.ClassReader::<init>(byte[], int, boolean) -> void
fifo write: @1699477099330283161 0x7f81e17e7799 1512: Module::implIsExportedOrOpen(String, Module, boolean) -> boolean
fifo write: @1699477099330671296 0x7f81e8b79300 480: I2C/C2I adapters(0xbbabaab)
fifo write: @1699477099330684826 0x7f81e8b79000 496: I2C/C2I adapters(0xbbabaaab)
fifo write: @1699477099331649609 0x7f81e17e84f4 23: java.util.Objects::hash(Object[]) -> int
fifo write: @1699477099331678929 0x7f81e17e8894 138: Byte::hashCode() -> int
fifo write: @1699477099331765960 0x7f81e17e8e38 4220: java.lang.invoke.MemberName::<init>(byte, Class, String, Object) -> void
fifo write: @1699477099331796270 0x7f81e17eac94 237: Byte::<init>(byte) -> void
fifo write: @1699477099331938812 0x7f81e17eb4ba 3155: java.lang.invoke.MemberName::hashCode() -> int
fifo write: @1699477099332255876 0x7f81e17ec997 36: jdk.internal.org.objectweb.asm.ClassWriter::<init>(int) -> void
fifo write: @1699477099332292097 0x7f81e17ecd94 39: jdk.internal.org.objectweb.asm.ClassVisitor::<init>(int) -> void
fifo write: @1699477099332392848 0x7f81e17ed1b9 1014: java.lang.invoke.MethodHandleNatives::canBeCalledVirtual(java.lang.invoke.MemberName) -> boolean
fifo write: @1699477099332448029 0x7f81e17edc57 847: jdk.internal.org.objectweb.asm.ClassWriter::<init>(jdk.internal.org.objectweb.asm.ClassReader, int) -> void
fifo write: @1699477099332501670 0x7f81e17ee5b7 1100: jdk.internal.org.objectweb.asm.SymbolTable::<init>(jdk.internal.org.objectweb.asm.ClassWriter) -> void
fifo write: @1699477099332610071 0x7f81e17eefb7 1868: jdk.internal.org.objectweb.asm.ClassVisitor::<init>(int, jdk.internal.org.objectweb.asm.ClassVisitor) -> void
fifo write: @1699477099332891805 0x7f81e90e5bf9 9615: java.util.jar.Attributes::read(java.util.jar.Manifest$FastInputStream, byte[], String, int) -> int
fifo write: @1699477099333422101 0x7f81e17f04a7 12833: java.lang.invoke.TypeConvertingMethodAdapter::convertType(Class, Class, Class) -> void
fifo write: @1699477099334821339 0x7f81e8b80f00 440: I2C/C2I adapters(0x66b)
fifo write: @1699477099334842420 0x7f81e8b80c00 448: I2C/C2I adapters(0x66bb)
fifo write: @1699477099335394117 0x7f81e90eb15d 1222: sun.security.provider.DigestBase::engineUpdate(byte[], int, int) -> void
fifo write: @1699477099337686746 0x7f81e17f5e54 976: java.lang.reflect.Constructor::acquireConstructorAccessor() -> jdk.internal.reflect.ConstructorAccessor
fifo write: @1699477099339267767 0x7f81e90ec04c 6: java.lang.invoke.MethodHandle::internalForm() -> java.lang.invoke.LambdaForm
fifo write: @1699477099340460482 0x7f81e17f6874 68: java.lang.invoke.LambdaForm::expressionCount() -> int
fifo write: @1699477099340519223 0x7f81e17f6c34 510: java.lang.invoke.BoundMethodHandle::fieldCount() -> int
fifo write: @1699477099340598654 0x7f81e17f72d4 914: java.lang.invoke.BoundMethodHandle::tooComplex() -> boolean
fifo write: @1699477099340689485 0x7f81e17f7c74 1115: java.lang.invoke.BoundMethodHandle::rebind() -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099340876108 0x7f81e17f8714 280: java.lang.invoke.MethodHandleNatives::linkMethodHandleConstant(Class, int, Class, String, Object) -> java.lang.invoke.MethodHandle
fifo write: @1699477099341611937 0x7f81e17f8f48 5796: java.lang.invoke.MethodHandles$Lookup::linkMethodHandleConstant(byte, Class, String, Object) -> java.lang.invoke.MethodHandle
fifo write: @1699477099342565349 0x7f81e8b80900 464: I2C/C2I adapters(0xb6666)
fifo write: @1699477099342635000 0x7f81e8b80600 448: I2C/C2I adapters(0xb6bb)
fifo write: @1699477099343728844 0x7f81e17fb874 27: jdk.internal.misc.Unsafe::weakCompareAndSetInt(Object, long, int, int) -> boolean
fifo write: @1699477099343831756 0x7f81e17fbcee 1252: sun.invoke.util.BytecodeDescriptor::unparseMethod(Class, Class[]) -> String
fifo write: @1699477099346096715 0x7f81e8b80300 472: I2C/C2I adapters(0xb6666b)
fifo write: @1699477099346115805 0x7f81e8b80000 456: I2C/C2I adapters(0xb666b)
fifo write: @1699477099346134846 0x7f81e8b7fd00 456: I2C/C2I adapters(0xb7e7e7eb)
fifo write: @1699477099346151836 0x7f81e8b7fa00 464: I2C/C2I adapters(0xb7e7e7e7e)
fifo write: @1699477099346167946 0x7f81e8b7f700 480: I2C/C2I adapters(0xb666666)
fifo write: @1699477099346183786 0x7f81e8b7f400 496: I2C/C2I adapters(0xb666666b)
fifo write: @1699477099346199586 0x7f81e8b7f100 448: I2C/C2I adapters(0xb666)
fifo write: @1699477099346215567 0x7f81e8b7ee00 544: I2C/C2I adapters(0xb7e7e7e7e7e7e7e7e7e)
fifo write: @1699477099346231907 0x7f81e8b7eb00 528: I2C/C2I adapters(0xb666666666)
fifo write: @1699477099346449840 0x7f81e89b5528 27: vtable stub
fifo write: @1699477099346496850 0x7f81e17fc9f4 8: java.lang.reflect.AccessibleObject::setAccessible0(boolean) -> boolean
fifo write: @1699477099346548981 0x7f81e17fcd96 37: java.lang.reflect.AccessibleObject::checkCanSetAccessible(Class, Class) -> void
fifo write: @1699477099347234820 0x7f81e17fd304 3532: java.lang.invoke.MethodType::dropParameterTypes(int, int) -> java.lang.invoke.MethodType
fifo write: @1699477099347282970 0x7f81e17fedaf 310: jdk.internal.misc.Unsafe::getAndAddInt(Object, long, int) -> int
fifo write: @1699477099347332531 0x7f81e17ff314 291: jdk.internal.org.objectweb.asm.SymbolTable::setMajorVersionAndClassName(int, String) -> int
fifo write: @1699477099347374132 0x7f81e17ff814 210: jdk.internal.org.objectweb.asm.SymbolTable::computeBootstrapMethodsSize() -> int
fifo write: @1699477099347414192 0x7f81e17ffcf4 63: jdk.internal.org.objectweb.asm.SymbolTable::getConstantPoolLength() -> int
fifo write: @1699477099347486293 0x7f81e1800097 344: jdk.internal.org.objectweb.asm.ByteVector::<init>(int) -> void
fifo write: @1699477099347571944 0x7f81e18006a3 1827: jdk.internal.org.objectweb.asm.ClassWriter::visit(int, int, String, String, String, String[]) -> void
fifo write: @1699477099347652205 0x7f81e1801897 207: jdk.internal.org.objectweb.asm.SymbolTable::putConstantPool(jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099347712586 0x7f81e1801e59 468: jdk.internal.org.objectweb.asm.SymbolTable::putBootstrapMethods(jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099348180452 0x7f81e1802bd1 13668: java.lang.reflect.AccessibleObject::checkCanSetAccessible(Class, Class, boolean) -> boolean
fifo write: @1699477099350442691 0x7f81e180949c 14303: jdk.internal.org.objectweb.asm.ClassWriter::toByteArray() -> byte[]
fifo write: @1699477099351132640 0x7f81e1811394 222: java.lang.invoke.LambdaForm::returnType() -> java.lang.invoke.LambdaForm$BasicType
fifo write: @1699477099351180941 0x7f81e90ed9ba 57: StringLatin1::charAt(byte[], int) -> char
fifo write: @1699477099351274492 0x7f81e1811894 374: java.lang.invoke.InnerClassLambdaMetafactory::getLoadOpcode(Class) -> int
fifo write: @1699477099351356273 0x7f81e90edccc 6: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle::getTarget() -> java.lang.invoke.MethodHandle
fifo write: @1699477099351421884 0x7f81e1811df4 248: java.lang.invoke.InnerClassLambdaMetafactory::getParameterSize(Class) -> int
fifo write: @1699477099351476965 0x7f81e1812314 296: jdk.internal.org.objectweb.asm.MethodVisitor::visitVarInsn(int, int) -> void
fifo write: @1699477099351498015 0x7f81e8b7e800 456: I2C/C2I adapters(0x66bbb)
fifo write: @1699477099351665847 0x7f81e18127f4 93: sun.invoke.util.Wrapper::isDoubleWord() -> boolean
fifo write: @1699477099351686187 0x7f81e8b7e500 456: I2C/C2I adapters(0xb66bb)
fifo write: @1699477099351836449 0x7f81e1812c14 39: jdk.internal.org.objectweb.asm.AnnotationVisitor::<init>(int) -> void
fifo write: @1699477099351925760 0x7f81e1813039 279: jdk.internal.org.objectweb.asm.MethodWriter::visitAnnotation(String, boolean) -> jdk.internal.org.objectweb.asm.AnnotationVisitor
fifo write: @1699477099352051402 0x7f81e18136b4 839: jdk.internal.org.objectweb.asm.AnnotationWriter::<init>(jdk.internal.org.objectweb.asm.SymbolTable, boolean, jdk.internal.org.objectweb.asm.ByteVector, jdk.internal.org.objectweb.asm.AnnotationWriter) -> void
fifo write: @1699477099352187924 0x7f81e1813f92 856: jdk.internal.org.objectweb.asm.AnnotationWriter::create(jdk.internal.org.objectweb.asm.SymbolTable, String, jdk.internal.org.objectweb.asm.AnnotationWriter) -> jdk.internal.org.objectweb.asm.AnnotationWriter
fifo write: @1699477099352261645 0x7f81e18148b4 1052: java.lang.invoke.MethodHandles$Lookup$ClassOption::optionsToFlag(java.util.Set) -> int
fifo write: @1699477099352445747 0x7f81e1815214 233: java.lang.invoke.MethodHandles$Lookup$ClassFile::<init>(String, int, byte[]) -> void
fifo write: @1699477099352501598 0x7f81e1815714 212: jdk.internal.org.objectweb.asm.AnnotationWriter::visitEnd() -> void
fifo write: @1699477099352621029 0x7f81e1815c14 374: java.lang.invoke.MethodHandles$Lookup$ClassDefiner::<init>(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MethodHandles$Lookup$ClassFile, int) -> void
fifo write: @1699477099352961814 0x7f81e1816217 141: System$2::defineClass(ClassLoader, Class, String, byte[], java.security.ProtectionDomain, boolean, int, Object) -> Class
fifo write: @1699477099353059715 0x7f81e1816737 1868: jdk.internal.org.objectweb.asm.AnnotationVisitor::<init>(int, jdk.internal.org.objectweb.asm.AnnotationVisitor) -> void
fifo write: @1699477099353277818 0x7f81e18178bf 3532: java.lang.invoke.MethodHandles$Lookup::makeHiddenClassDefiner(java.lang.invoke.MethodHandles$Lookup$ClassFile, java.util.Set, boolean) -> java.lang.invoke.MethodHandles$Lookup$ClassDefiner
fifo write: @1699477099353396859 0x7f81e1819365 776: Module::isExported(String, Module) -> boolean
fifo write: @1699477099353535281 0x7f81e1819cae 3421: java.lang.invoke.MethodHandles$Lookup$ClassDefiner::defineClass(boolean, Object) -> Class
fifo write: @1699477099353608862 0x7f81e181b774 27: java.lang.reflect.Constructor::getRoot() -> java.lang.reflect.AccessibleObject
fifo write: @1699477099353628892 0x7f81e8b7e200 480: I2C/C2I adapters(0xbbabbbbe)
fifo write: @1699477099353648483 0x7f81e8b7df00 496: I2C/C2I adapters(0xbaaaaaab)
fifo write: @1699477099353668343 0x7f81e8b7dc00 464: I2C/C2I adapters(0xbbbbebb)
fifo write: @1699477099353716303 0x7f81e90ef55d 200: java.util.ArrayList::<init>() -> void
fifo write: @1699477099354080958 0x7f81e181bad4 15: java.lang.invoke.LambdaFormEditor$TransformKey::packedBytes(int, int) -> long
fifo write: @1699477099354304161 0x7f81e181bed7 1334: java.lang.invoke.LambdaFormEditor$TransformKey::of(byte, int) -> java.lang.invoke.LambdaFormEditor$TransformKey
fifo write: @1699477099355845551 0x7f81e181caf7 1739: java.lang.invoke.MethodHandles$Lookup::findBoundCallerLookup(java.lang.invoke.MemberName) -> java.lang.invoke.MethodHandles$Lookup
fifo write: @1699477099355947952 0x7f81e181da17 1693: java.lang.invoke.MethodHandles$Lookup::checkMethod(byte, Class, java.lang.invoke.MemberName) -> void
fifo write: @1699477099356106454 0x7f81e181e917 2023: java.lang.invoke.MethodHandles$Lookup::maybeBindCaller(java.lang.invoke.MemberName, java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandles$Lookup) -> java.lang.invoke.MethodHandle
fifo write: @1699477099356331707 0x7f81e181fa14 317: java.lang.invoke.LambdaFormEditor::bindArgumentType(java.lang.invoke.BoundMethodHandle, int, java.lang.invoke.LambdaForm$BasicType) -> java.lang.invoke.MethodType
fifo write: @1699477099356512740 0x7f81e1820134 3749: java.lang.invoke.MethodHandles$Lookup::getDirectMethodCommon(byte, Class, java.lang.invoke.MemberName, boolean, boolean, java.lang.invoke.MethodHandles$Lookup) -> java.lang.invoke.MethodHandle
fifo write: @1699477099357074197 0x7f81e1822243 5727: java.lang.invoke.LambdaFormEditor::bindArgumentForm(int) -> java.lang.invoke.LambdaForm
fifo write: @1699477099357150188 0x7f81e1824d74 270: java.lang.invoke.Invokers::checkCustomized(java.lang.invoke.MethodHandle) -> void
fifo write: @1699477099357355600 0x7f81e1825294 137: java.lang.invoke.MethodHandleNatives$CallSiteContext::<init>() -> void
fifo write: @1699477099357403521 0x7f81e1825674 17: jdk.internal.misc.Unsafe::storeStoreFence() -> void
fifo write: @1699477099357508572 0x7f81e1825a6b 396: java.lang.invoke.MethodHandleNatives$CallSiteContext::make(java.lang.invoke.CallSite) -> java.lang.invoke.MethodHandleNatives$CallSiteContext
fifo write: @1699477099357586823 0x7f81e1826054 1005: java.lang.invoke.CallSite::<init>(java.lang.invoke.MethodHandle) -> void
fifo write: @1699477099357669604 0x7f81e18269d7 1134: java.lang.invoke.ConstantCallSite::<init>(java.lang.invoke.MethodHandle) -> void
fifo write: @1699477099358413474 0x7f81e8b7d900 488: I2C/C2I adapters(0xbbbebbbb)
fifo write: @1699477099358982901 0x7f81e1827414 344: java.lang.invoke.InvokerBytecodeGenerator::emitStoreInsn(java.lang.invoke.LambdaForm$BasicType, int) -> void
fifo write: @1699477099359066373 0x7f81e1827a3e 636: java.lang.invoke.LambdaForm::useCount(java.lang.invoke.LambdaForm$Name) -> int
fifo write: @1699477099359807752 0x7f81e1828324 1790: jdk.internal.org.objectweb.asm.Frame::setInputFrameFromDescriptor(jdk.internal.org.objectweb.asm.SymbolTable, int, String, int) -> void
fifo write: @1699477099359988784 0x7f81e182941e 707: java.lang.invoke.LambdaFormBuffer::indexOf(java.lang.invoke.LambdaForm$NamedFunction, java.util.List) -> int
fifo write: @1699477099360360729 0x7f81e1829b94 728: java.util.Arrays::fill(Object[], int, int, Object) -> void
fifo write: @1699477099360495551 0x7f81e182a477 4274: java.lang.invoke.InvokerBytecodeGenerator::isStaticallyNameable(Class) -> boolean
fifo write: @1699477099360550592 0x7f81e90f01d0 35: java.util.ImmutableCollections$ListN::size() -> int
fifo write: @1699477099360601802 0x7f81e90f04d0 75: java.util.ImmutableCollections$ListN::get(int) -> Object
fifo write: @1699477099360789515 0x7f81e90f09a0 7891: java.util.jar.Attributes::read(java.util.jar.Manifest$FastInputStream, byte[], String, int) -> int
fifo write: @1699477099360978607 0x7f81e182c554 1568: java.lang.invoke.LambdaForm$Name::internArguments() -> void
fifo write: @1699477099361194450 0x7f81e90f5b59 298: jdk.internal.org.objectweb.asm.ByteVector::put12(int, int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099361691856 0x7f81e182d1b4 408: java.lang.invoke.LambdaFormEditor::bindArgumentL(java.lang.invoke.BoundMethodHandle, int, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099361777168 0x7f81e182d7b4 1120: java.lang.invoke.MethodHandleNatives::linkCallSite(Object, int, Object, Object, Object, Object, Object[]) -> java.lang.invoke.MemberName
fifo write: @1699477099361842148 0x7f81e182e157 949: java.lang.invoke.BoundMethodHandle::bindArgumentL(int, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099361884419 0x7f81e182ead4 253: java.lang.invoke.MethodHandleNatives::staticArgumentsPulled(Object) -> boolean
fifo write: @1699477099361946590 0x7f81e182ef74 344: java.lang.invoke.Invokers::checkExactType(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType) -> void
fifo write: @1699477099362005460 0x7f81e182f4f4 92: java.lang.invoke.Invokers::linkToTargetMethod(java.lang.invoke.MethodType) -> java.lang.invoke.MemberName
fifo write: @1699477099362157352 0x7f81e182f984 2095: java.lang.invoke.MethodHandleNatives::linkCallSiteImpl(Class, java.lang.invoke.MethodHandle, String, java.lang.invoke.MethodType, Object, Object[]) -> java.lang.invoke.MemberName
fifo write: @1699477099362208463 0x7f81e1830994 373: jdk.internal.reflect.NativeConstructorAccessorImpl::<init>(java.lang.reflect.Constructor) -> void
fifo write: @1699477099362276554 0x7f81e1830fc1 2126: java.lang.invoke.BootstrapMethodInvoker::widenAndCast(Object, Class) -> Object
fifo write: @1699477099362327555 0x7f81e1832114 411: jdk.internal.reflect.DelegatingConstructorAccessorImpl::<init>(jdk.internal.reflect.ConstructorAccessorImpl) -> void
fifo write: @1699477099362566808 0x7f81e183280b 3918: java.lang.invoke.CallSite::makeSite(java.lang.invoke.MethodHandle, String, java.lang.invoke.MethodType, Object, Class) -> java.lang.invoke.CallSite
fifo write: @1699477099362884732 0x7f81e1834c7e 5497: java.lang.invoke.Invokers::callSiteForm(java.lang.invoke.MethodType, boolean) -> java.lang.invoke.LambdaForm
fifo write: @1699477099365273053 0x7f81e1837a97 28481: java.lang.invoke.BootstrapMethodInvoker::invoke(Class, java.lang.invoke.MethodHandle, String, Object, Object, Class) -> Object
fifo write: @1699477099366243685 0x7f81e8b7d600 456: I2C/C2I adapters(0x7e7e7e7e)
fifo write: @1699477099366587250 0x7f81e8b7d300 440: I2C/C2I adapters(0xabbebe)
fifo write: @1699477099366607540 0x7f81e8b7ce80 440: I2C/C2I adapters(0xabbeb)
fifo write: @1699477099366629030 0x7f81e8b84b00 440: I2C/C2I adapters(0xababe)
fifo write: @1699477099366648700 0x7f81e8b84800 440: I2C/C2I adapters(0xabbbe)
fifo write: @1699477099366670251 0x7f81e8b84500 464: I2C/C2I adapters(0xabbbbb)
fifo write: @1699477099366690361 0x7f81e8b84200 432: I2C/C2I adapters(0xabbe)
fifo write: @1699477099367700744 0x7f81e1843754 2216: java.lang.invoke.DirectMethodHandle::shouldBeInitialized(java.lang.invoke.MemberName) -> boolean
fifo write: @1699477099367981308 0x7f81e184487e 344: jdk.internal.reflect.Reflection::isSubclassOf(Class, Class) -> boolean
fifo write: @1699477099369715150 0x7f81e1845194 202: java.util.regex.Pattern$Node::<init>() -> void
fifo write: @1699477099369886992 0x7f81e89b5558 27: vtable stub
fifo write: @1699477099369981833 0x7f81e1845614 358: java.util.ImmutableCollections$Set12$1::<init>(java.util.ImmutableCollections$Set12) -> void
fifo write: @1699477099370162825 0x7f81e1845b99 42: java.lang.invoke.MethodHandles$Lookup::getDirectMethodNoSecurityManager(byte, Class, java.lang.invoke.MemberName, java.lang.invoke.MethodHandles$Lookup) -> java.lang.invoke.MethodHandle
fifo write: @1699477099370233736 0x7f81e1845fe7 455: java.util.ImmutableCollections$Set12::iterator() -> java.util.Iterator
fifo write: @1699477099370288757 0x7f81e1846594 164: java.lang.invoke.InfoFromMemberName::getModifiers() -> int
fifo write: @1699477099370396998 0x7f81e1846a14 270: java.lang.invoke.BoundMethodHandle$Species_L::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object) -> void
fifo write: @1699477099370495340 0x7f81e1846f14 221: java.lang.invoke.InfoFromMemberName::<init>(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MemberName, byte) -> void
fifo write: @1699477099370810404 0x7f81e1847573 2422: java.lang.invoke.LambdaMetafactory::metafactory(java.lang.invoke.MethodHandles$Lookup, String, java.lang.invoke.MethodType, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType) -> java.lang.invoke.CallSite
fifo write: @1699477099371157988 0x7f81e1848b3f 4585: java.lang.invoke.MethodHandles$Lookup::revealDirect(java.lang.invoke.MethodHandle) -> java.lang.invoke.MethodHandleInfo
fifo write: @1699477099371270320 0x7f81e184ae34 768: java.lang.invoke.InfoFromMemberName::getName() -> String
fifo write: @1699477099371343810 0x7f81e184b694 93: java.lang.invoke.InfoFromMemberName::getMethodType() -> java.lang.invoke.MethodType
fifo write: @1699477099371708355 0x7f81e184bd07 7555: java.lang.invoke.InnerClassLambdaMetafactory::<init>(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MethodType, String, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean, Class[], java.lang.invoke.MethodType[]) -> void
fifo write: @1699477099371880427 0x7f81e184f6a7 8889: java.lang.invoke.AbstractValidatingLambdaMetafactory::checkDescriptor(java.lang.invoke.MethodType) -> void
fifo write: @1699477099371975748 0x7f81e1853157 1673: java.lang.invoke.InnerClassLambdaMetafactory::lambdaClassName(Class) -> String
fifo write: @1699477099372035869 0x7f81e90f6b73 284: java.lang.invoke.MethodType::hashCode() -> int
fifo write: @1699477099372117890 0x7f81e1854136 971: java.lang.invoke.AbstractValidatingLambdaMetafactory::isAdaptableToAsReturn(Class, Class) -> boolean
fifo write: @1699477099372200971 0x7f81e1854a39 1225: java.lang.invoke.AbstractValidatingLambdaMetafactory::isAdaptableToAsReturnStrict(Class, Class) -> boolean
fifo write: @1699477099372460135 0x7f81e18556c7 6545: Module::canRead(Module) -> boolean
fifo write: @1699477099373119853 0x7f81e185845f 8824: java.lang.invoke.InnerClassLambdaMetafactory::buildCallSite() -> java.lang.invoke.CallSite
fifo write: @1699477099373884313 0x7f81e185cd12 23272: java.lang.invoke.AbstractValidatingLambdaMetafactory::<init>(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MethodType, String, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean, Class[], java.lang.invoke.MethodType[]) -> void
fifo write: @1699477099374297408 0x7f81e186739f 31009: java.lang.invoke.AbstractValidatingLambdaMetafactory::validateMetafactoryArgs() -> void
fifo write: @1699477099374471511 0x7f81e1873814 328: java.util.ImmutableCollections$AbstractImmutableSet::<init>() -> void
fifo write: @1699477099375280561 0x7f81e90f7557 553: jdk.internal.org.objectweb.asm.Frame::push(int) -> void
fifo write: @1699477099376857891 0x7f81e8b83b10 27: vtable stub
fifo write: @1699477099377466729 0x7f81e1873d7a 1878: java.util.Set::of(Object[]) -> java.util.Set
fifo write: @1699477099378241169 0x7f81e8b83800 424: I2C/C2I adapters(0xa7e)
fifo write: @1699477099378255019 0x7f81e8b83500 432: I2C/C2I adapters(0xaa7e)
fifo write: @1699477099379239282 0x7f81e90f7f33 400: sun.net.www.ParseUtil::firstEncodeIndex(String) -> int
fifo write: @1699477099379286623 0x7f81e1874c14 352: sun.invoke.util.VerifyAccess::getClassModifiers(Class) -> int
fifo write: @1699477099379625547 0x7f81e187525c 1997: java.lang.invoke.LambdaForm::compileToBytecode() -> void
fifo write: @1699477099379886430 0x7f81e1876353 252: java.lang.invoke.BoundMethodHandle$Species_L::make(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099379923861 0x7f81e1876874 87: Enum::equals(Object) -> boolean
fifo write: @1699477099381422790 0x7f81e1877054 1001: jdk.internal.org.objectweb.asm.MethodVisitor::visitMethodInsn(int, String, String, String, boolean) -> void
fifo write: @1699477099381460291 0x7f81e1877994 296: jdk.internal.org.objectweb.asm.MethodVisitor::visitInsn(int) -> void
fifo write: @1699477099381809485 0x7f81e90f89d0 71: java.util.zip.Inflater::ensureOpen() -> void
fifo write: @1699477099382076159 0x7f81e1877e94 278: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator::<init>(java.lang.invoke.InnerClassLambdaMetafactory, jdk.internal.org.objectweb.asm.MethodVisitor) -> void
fifo write: @1699477099382135740 0x7f81e1878397 36: java.lang.invoke.TypeConvertingMethodAdapter::<init>(jdk.internal.org.objectweb.asm.MethodVisitor) -> void
fifo write: @1699477099382239991 0x7f81e1878794 296: jdk.internal.org.objectweb.asm.MethodVisitor::visitCode() -> void
fifo write: @1699477099382324482 0x7f81e1878d41 2451: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator::convertArgumentTypes(java.lang.invoke.MethodType) -> void
fifo write: @1699477099382394153 0x7f81e187a3bc 3661: java.lang.invoke.InnerClassLambdaMetafactory::generateConstructor() -> void
fifo write: @1699477099382409803 0x7f81e8b83b40 27: vtable stub
fifo write: @1699477099382461174 0x7f81e187bef4 119: java.lang.invoke.InnerClassLambdaMetafactory::getReturnOpcode(Class) -> int
fifo write: @1699477099382503444 0x7f81e187c314 296: jdk.internal.org.objectweb.asm.MethodVisitor::visitMaxs(int, int) -> void
fifo write: @1699477099382545335 0x7f81e187c814 296: jdk.internal.org.objectweb.asm.MethodVisitor::visitEnd() -> void
fifo write: @1699477099382736107 0x7f81e187cd77 1554: java.lang.invoke.MethodHandles$Lookup::ensureDefineClassPermission() -> void
fifo write: @1699477099382874479 0x7f81e187dbfc 6822: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator::generate(java.lang.invoke.MethodType) -> void
fifo write: @1699477099382936110 0x7f81e1880bd7 1682: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator::invocationOpcode() -> int
fifo write: @1699477099383039171 0x7f81e1881cea 3098: java.lang.invoke.MethodHandles$Lookup::defineHiddenClass(byte[], boolean, java.lang.invoke.MethodHandles$Lookup$ClassOption[]) -> java.lang.invoke.MethodHandles$Lookup
fifo write: @1699477099383527637 0x7f81e18838ff 10078: java.lang.invoke.InnerClassLambdaMetafactory::generateInnerClass() -> Class
fifo write: @1699477099383877622 0x7f81e1888334 558: java.lang.invoke.MethodType::leadingReferenceParameter() -> Class
fifo write: @1699477099383921633 0x7f81e90f9050 67: Class::getClassLoader() -> ClassLoader
fifo write: @1699477099383992623 0x7f81e1888a81 1326: java.lang.invoke.MethodHandle::bindTo(Object) -> java.lang.invoke.MethodHandle
fifo write: @1699477099384591881 0x7f81e188982e 2914: java.lang.invoke.MethodHandles$Lookup::resolveOrFail(byte, java.lang.invoke.MemberName) -> java.lang.invoke.MemberName
fifo write: @1699477099384712943 0x7f81e188b156 4396: java.lang.invoke.MethodHandles$Lookup::getDirectMethodForConstant(byte, Class, java.lang.invoke.MemberName) -> java.lang.invoke.MethodHandle
fifo write: @1699477099385681085 0x7f81e188d2f4 113: Math::abs(long) -> long
fifo write: @1699477099389477274 0x7f81e90f93fb 1512: String::replace(char, char) -> String
fifo write: @1699477099392885518 0x7f81e188d6f4 324: java.util.HashMap::hash(Object) -> int
fifo write: @1699477099392972449 0x7f81e188dc37 513: java.util.HashMap::put(Object, Object) -> Object
fifo write: @1699477099395197398 0x7f81e90fa553 108: java.util.jar.Manifest$FastInputStream::peek() -> byte
fifo write: @1699477099395952758 0x7f81e90fa9e1 160: java.util.HashMap::put(Object, Object) -> Object
fifo write: @1699477099398712634 0x7f81e188e294 377: java.util.LinkedHashMap::<init>(java.util.Map) -> void
fifo write: @1699477099398763264 0x7f81e188e814 523: java.util.LinkedHashMap$LinkedEntryIterator::<init>(java.util.LinkedHashMap) -> void
fifo write: @1699477099398810455 0x7f81e188ef0b 616: java.util.LinkedHashMap$LinkedEntrySet::iterator() -> java.util.Iterator
fifo write: @1699477099398857125 0x7f81e188f637 759: java.util.LinkedHashMap::entrySet() -> java.util.Set
fifo write: @1699477099398897416 0x7f81e188fe14 240: java.util.jar.Attributes::entrySet() -> java.util.Set
fifo write: @1699477099398962097 0x7f81e1890294 428: java.util.LinkedHashMap$LinkedEntrySet::<init>(java.util.LinkedHashMap) -> void
fifo write: @1699477099399008277 0x7f81e189083a 743: java.util.jar.Attributes::<init>(java.util.jar.Attributes) -> void
fifo write: @1699477099399051338 0x7f81e18910a6 860: java.util.jar.Attributes::clone() -> Object
fifo write: @1699477099399108049 0x7f81e1891a40 3236: java.util.HashMap::putMapEntries(java.util.Map, boolean) -> void
fifo write: @1699477099400952752 0x7f81e90fb453 540: java.util.LinkedHashMap$LinkedHashIterator::nextNode() -> java.util.LinkedHashMap$Entry
fifo write: @1699477099401270247 0x7f81e90fbb10 102: Integer::numberOfLeadingZeros(int) -> int
fifo write: @1699477099401321147 0x7f81e90fbf53 540: java.util.LinkedHashMap$LinkedEntryIterator::next() -> Object
fifo write: @1699477099401581381 0x7f81e8b83b70 27: vtable stub
fifo write: @1699477099402213209 0x7f81e90fc653 338: java.util.LinkedHashMap::entrySet() -> java.util.Set
fifo write: @1699477099402875947 0x7f81e90fcb53 936: java.util.HashMap$HashIterator::nextNode() -> java.util.HashMap$Node
fifo write: @1699477099402949838 0x7f81e90fd653 980: java.util.HashMap$KeyIterator::next() -> Object
fifo write: @1699477099403228792 0x7f81e90fe16a 326: java.util.LinkedHashMap$LinkedEntrySet::iterator() -> java.util.Iterator
fifo write: @1699477099404028752 0x7f81e90fe750 412: java.util.jar.Attributes::entrySet() -> java.util.Set
fifo write: @1699477099414483887 0x7f81e1893214 312: java.lang.ref.Reference::enqueueFromPending() -> void
fifo write: @1699477099414576968 0x7f81e1893714 346: jdk.internal.ref.PhantomCleanable::isListEmpty() -> boolean
fifo write: @1699477099414645649 0x7f81e1893d54 1478: java.lang.ref.ReferenceQueue::enqueue(java.lang.ref.Reference) -> boolean
fifo write: @1699477099414731560 0x7f81e1894f34 1166: java.lang.ref.ReferenceQueue::reallyPoll() -> java.lang.ref.Reference
fifo write: @1699477099414775131 0x7f81e1895914 23: java.lang.invoke.MethodHandleNatives$CallSiteContext::run() -> void
fifo write: @1699477099414846802 0x7f81e1895d1c 1664: java.lang.ref.ReferenceQueue::remove(long) -> java.lang.ref.Reference
fifo write: @1699477099414916233 0x7f81e1896cb4 991: sun.security.util.ManifestDigester::findSection(int, sun.security.util.ManifestDigester$Position) -> boolean
fifo write: @1699477099417011860 0x7f81e90ff853 596: sun.security.util.ManifestDigester::findSection(int, sun.security.util.ManifestDigester$Position) -> boolean
fifo write: @1699477099420421844 0x7f81e18979bf 8232: sun.security.util.ManifestDigester::<init>(byte[]) -> void
fifo write: @1699477099421497607 0x7f81e189b196 744: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object) -> Object
fifo write: @1699477099421667310 0x7f81e189babf 8633: sun.security.util.ManifestDigester::<init>(byte[]) -> void
fifo write: @1699477099421847462 0x7f81e189f4d9 648: jdk.internal.misc.Unsafe::getLongUnaligned(Object, long) -> long
fifo write: @1699477099426266888 0x7f81e9100549 4804: java.util.HashMap::putMapEntries(java.util.Map, boolean) -> void
fifo write: @1699477099427079689 0x7f81e910367c 3960: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477099428591528 0x7f81e9105c4c 6: java.security.Provider$Service::getClassName() -> String
fifo write: @1699477099428810461 0x7f81e9105f33 108: Character::isWhitespace(char) -> boolean
fifo write: @1699477099428990284 0x7f81e91063ad 250: sun.security.provider.DigestBase::implCompressMultiBlock0(byte[], int, int) -> int
fifo write: @1699477099429041724 0x7f81e189fc97 508: java.math.MutableBigInteger::mulsub(int[], int[], int, int, int) -> int
fifo write: @1699477099430564334 0x7f81e910695c 219: sun.security.provider.DigestBase::implCompressMultiBlock0(byte[], int, int) -> int
fifo write: @1699477099430825897 0x7f81e9106faa 4940: java.util.jar.Attributes::clone() -> Object
fifo write: @1699477099431126051 0x7f81e18a04b7 3723: sun.security.util.SignatureFileVerifier::updateSigners(java.security.CodeSigner[], java.util.Hashtable, String) -> void
fifo write: @1699477099432885964 0x7f81e18a2114 1734: java.util.Hashtable::rehash() -> void
fifo write: @1699477099434607786 0x7f81e18a3074 1582: java.util.Hashtable::rehash() -> void
fifo write: @1699477099435547338 0x7f81e910a1d3 960: java.util.HashMap$EntryIterator::next() -> Object
fifo write: @1699477099436465900 0x7f81e18a3e17 90: java.util.jar.JavaUtilJarAccessImpl::getTrustedAttributes(java.util.jar.Manifest, String) -> java.util.jar.Attributes
fifo write: @1699477099436927236 0x7f81e910ad61 1972: java.util.Hashtable::get(Object) -> Object
fifo write: @1699477099437376012 0x7f81e910c130 2079: java.util.Hashtable::put(Object, Object) -> Object
fifo write: @1699477099439041923 0x7f81e8b86980 856: I2C/C2I adapters(0xbbbbaaaaaaaabbaabbbbbb)
fifo write: @1699477099440090847 0x7f81e18a4214 271: java.nio.ByteBuffer::<init>(int, int, int, int, byte[], int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477099443789955 0x7f81e910db27 1640: java.util.zip.Inflater::inflate(byte[], int, int) -> int
fifo write: @1699477099446753403 0x7f81e8b86680 520: I2C/C2I adapters(0xbbbbbbaaa)
fifo write: @1699477099448168121 0x7f81e910f0c1 5406: jdk.internal.loader.URLClassPath::getResource(String, boolean) -> jdk.internal.loader.Resource
fifo write: @1699477099448246732 0x7f81e18a4794 234: java.nio.file.attribute.FileTime::<init>(long, java.util.concurrent.TimeUnit, java.time.Instant) -> void
fifo write: @1699477099448814800 0x7f81e18a4c97 813: java.nio.file.attribute.FileTime::from(long, java.util.concurrent.TimeUnit) -> java.nio.file.attribute.FileTime
fifo write: @1699477099449329516 0x7f81e911210e 6725: sun.security.util.SignatureFileVerifier::updateSigners(java.security.CodeSigner[], java.util.Hashtable, String) -> void
fifo write: @1699477099449375097 0x7f81e9115c33 344: ClassLoader::checkName(String) -> boolean
fifo write: @1699477099451196060 0x7f81e9116254 199: String::getBytes(byte[], int, byte) -> void
fifo write: @1699477099453092195 0x7f81e18a5474 280: Character::getType(int) -> int
fifo write: @1699477099453142575 0x7f81e18a5994 214: CharacterDataLatin1::getType(int) -> int
fifo write: @1699477099453801594 0x7f81e18a5df7 478: Character::valueOf(char) -> Character
fifo write: @1699477099454405002 0x7f81e18a6714 499: Character::compareTo(Object) -> int
fifo write: @1699477099454447062 0x7f81e18a6d14 149: Character::compareTo(Character) -> int
fifo write: @1699477099454684025 0x7f81e18a71f9 1522: joptsimple.internal.AbbreviationMap::addToMappings(java.util.Map) -> void
fifo write: @1699477099457256119 0x7f81e18a7e94 206: StackStreamFactory$FrameBuffer::isEmpty() -> boolean
fifo write: @1699477099457404290 0x7f81e18a83b4 794: java.util.RegularEnumSet::contains(Object) -> boolean
fifo write: @1699477099457419971 0x7f81e8b83ba0 27: vtable stub
fifo write: @1699477099457934967 0x7f81e8b86380 544: I2C/C2I adapters(0xbbbebebebebebebe)
fifo write: @1699477099457981458 0x7f81e8b86080 456: I2C/C2I adapters(0xbebbebb)
fifo write: @1699477099458155010 0x7f81e8b85d80 464: I2C/C2I adapters(0xbbebbebb)
fifo write: @1699477099458251301 0x7f81e8b83bd0 168: itable stub
fifo write: @1699477099458269052 0x7f81e8b85a80 448: I2C/C2I adapters(0xbbebbe)
fifo write: @1699477099458716947 0x7f81e18a8c59 1268: java.lang.invoke.LambdaForm::methodType() -> java.lang.invoke.MethodType
fifo write: @1699477099458784268 0x7f81e18a98d4 987: java.lang.invoke.InvokerBytecodeGenerator::assertStaticType(Class, java.lang.invoke.LambdaForm$Name) -> boolean
fifo write: @1699477099458980641 0x7f81e18aa2d4 103: java.lang.invoke.MethodHandleNatives::refKindIsGetter(byte) -> boolean
fifo write: @1699477099459154913 0x7f81e8b85780 512: I2C/C2I adapters(0xbbebebebebebebe)
fifo write: @1699477099460261417 0x7f81e9118e39 2489: java.security.MessageDigest::update(byte[], int, int) -> void
fifo write: @1699477099460454110 0x7f81e8b85480 544: I2C/C2I adapters(0xbbebebebebebebeb)
fifo write: @1699477099460702843 0x7f81e911b24c 44: java.lang.invoke.InvokerBytecodeGenerator::setClassWriter(jdk.internal.org.objectweb.asm.ClassWriter) -> void
fifo write: @1699477099460833995 0x7f81e911b8cc 6: Class::getClassData() -> Object
fifo write: @1699477099460933166 0x7f81e8b85180 488: I2C/C2I adapters(0xbbebebebebebe)
fifo write: @1699477099461026317 0x7f81e8b84e00 512: I2C/C2I adapters(0xbbebebebebebeb)
fifo write: @1699477099461117478 0x7f81e8b83200 512: I2C/C2I adapters(0xbbbebebebebebe)
fifo write: @1699477099461130879 0x7f81e8b82f00 488: I2C/C2I adapters(0xbebebebebebeb)
fifo write: @1699477099461342671 0x7f81e18aa734 1208: jdk.internal.org.objectweb.asm.Frame::push(int) -> void
fifo write: @1699477099461398112 0x7f81e911c4d2 277: java.lang.invoke.LambdaForm$Name::useCount(java.lang.invoke.LambdaForm$Name) -> int
fifo write: @1699477099462801080 0x7f81e18ab546 8507: java.lang.invoke.MethodHandles$Lookup::canBeCached(byte, Class, java.lang.invoke.MemberName) -> boolean
fifo write: @1699477099462952412 0x7f81e18af2f7 1339: java.lang.invoke.MethodHandle::bindArgumentL(int, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099463158245 0x7f81e18afe74 600: java.lang.invoke.DelegatingMethodHandle::chooseDelegatingForm(java.lang.invoke.MethodHandle) -> java.lang.invoke.LambdaForm
fifo write: @1699477099463224386 0x7f81e18b0536 735: java.lang.invoke.DelegatingMethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.MethodHandle) -> void
fifo write: @1699477099465272122 0x7f81e18b0c94 243: StackWalker::hasOption(StackWalker$Option) -> boolean
fifo write: @1699477099466303135 0x7f81e18b1114 243: java.util.stream.Sink$ChainedReference::cancellationRequested() -> boolean
fifo write: @1699477099467670253 0x7f81e911dcd2 29781: jdk.internal.org.objectweb.asm.Frame::execute(int, int, jdk.internal.org.objectweb.asm.Symbol, jdk.internal.org.objectweb.asm.SymbolTable) -> void
fifo write: @1699477099468395922 0x7f81e8b83c88 168: itable stub
fifo write: @1699477099468570425 0x7f81e18b1594 337: java.lang.invoke.MethodHandleImpl$1::getDeclaringClass(Object) -> Class
fifo write: @1699477099468612675 0x7f81e18b1a94 459: StackFrameInfo::declaringClass() -> Class
fifo write: @1699477099469185852 0x7f81e18b22d7 11966: java.util.Properties$LineReader::readLine() -> int
fifo write: @1699477099469995323 0x7f81e8b82c00 432: I2C/C2I adapters(0xabeb)
fifo write: @1699477099472832889 0x7f81e8b82900 456: I2C/C2I adapters(0xbbebebea)
fifo write: @1699477099472851349 0x7f81e8b82600 448: I2C/C2I adapters(0xbbebe7e)
fifo write: @1699477099472869489 0x7f81e8b82300 448: I2C/C2I adapters(0xbbebe6)
fifo write: @1699477099472886250 0x7f81e8b82000 464: I2C/C2I adapters(0xbbebebaa)
fifo write: @1699477099472903220 0x7f81e8b81d00 464: I2C/C2I adapters(0xbbeabbebe)
fifo write: @1699477099472920600 0x7f81e8b81a00 440: I2C/C2I adapters(0xaabebe)
fifo write: @1699477099472937390 0x7f81e8b81680 712: I2C/C2I adapters(0xbbbbbbabebebbeaabbb)
fifo write: @1699477099473810101 0x7f81e912dfbc 4038: jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8Reference(int, String) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477099477870614 0x7f81e9130733 300: StringConcatHelper::prepend(long, byte[], String) -> long
fifo write: @1699477099478559573 0x7f81e9130ccc 6: java.util.logging.LogManager$LoggerContext::getOwner() -> java.util.logging.LogManager
fifo write: @1699477099481459720 0x7f81e8b81200 536: I2C/C2I adapters(0xbbbababbaa)
fifo write: @1699477099481478810 0x7f81e8b78d00 560: I2C/C2I adapters(0xbabbbababba)
fifo write: @1699477099486497785 0x7f81e91315ec 26: Object::<init>() -> void
fifo write: @1699477099487357286 0x7f81e91321d8 18: java.util.concurrent.ConcurrentHashMap::putIfAbsent(Object, Object) -> Object
fifo write: @1699477099487837363 0x7f81e8b78a00 568: I2C/C2I adapters(0xbabbaaaabbeb)
fifo write: @1699477099488052945 0x7f81e8b78700 464: I2C/C2I adapters(0xbbaaabe)
fifo write: @1699477099489965390 0x7f81e18b70b4 492: java.nio.ByteBuffer::arrayOffset() -> int
fifo write: @1699477099492178109 0x7f81e91327d8 663: java.util.ArrayList::indexOfRange(Object, int, int) -> int
fifo write: @1699477099492931828 0x7f81e91330a3 988: StringLatin1::inflate(byte[], int, char[], int, int) -> void
fifo write: @1699477099493203542 0x7f81e18b7963 5401: java.util.StringTokenizer::scanToken(int) -> int
fifo write: @1699477099493973372 0x7f81e18ba51f 2367: sun.net.www.ParseUtil::firstEncodeIndex(String) -> int
fifo write: @1699477099494119094 0x7f81e18bba26 3317: jdk.internal.loader.AbstractClassLoaderValue::computeIfAbsent(ClassLoader, java.util.function.BiFunction) -> Object
fifo write: @1699477099494175284 0x7f81e18bd394 39: StringBuilder::append(String) -> StringBuilder
fifo write: @1699477099494317376 0x7f81e18bd7d4 865: java.util.StringJoiner::checkAddLength(int, int) -> int
fifo write: @1699477099494422738 0x7f81e18be174 99: jdk.internal.org.objectweb.asm.SymbolTable::getType(int) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477099494703731 0x7f81e9133a50 37: Class::getName() -> String
fifo write: @1699477099495065506 0x7f81e18be61d 1969: java.lang.reflect.ProxyGenerator$ProxyMethod::emitIconstInsn(jdk.internal.org.objectweb.asm.MethodVisitor, int) -> void
fifo write: @1699477099495405410 0x7f81e18bf474 196: ClassLoader::getClassLoader(Class) -> ClassLoader
fifo write: @1699477099495574382 0x7f81e18bf914 329: Class::forName(String) -> Class
fifo write: @1699477099495724384 0x7f81e18bfe94 396: java.util.concurrent.ConcurrentHashMap::sumCount() -> long
fifo write: @1699477099496446964 0x7f81e18c04f7 386: sun.net.www.ParseUtil::match(char, long, long) -> boolean
fifo write: @1699477099496828539 0x7f81e18c0b59 525: AbstractStringBuilder::append(String) -> AbstractStringBuilder
fifo write: @1699477099497081162 0x7f81e9133dcc 6: java.lang.reflect.Method::getSharedExceptionTypes() -> Class[]
fifo write: @1699477099497235064 0x7f81e18c1314 491: java.lang.reflect.Proxy$ProxyBuilder::getElementType(Class) -> Class
fifo write: @1699477099497325975 0x7f81e18c19e1 1504: java.lang.reflect.Proxy$ProxyBuilder::addElementTypes(java.util.HashSet, Class[]) -> void
fifo write: @1699477099497403396 0x7f81e18c27b9 1181: java.lang.reflect.Proxy$ProxyBuilder::addElementType(java.util.HashSet, Class) -> void
fifo write: @1699477099498164966 0x7f81e18c3321 1178: jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8(String) -> int
fifo write: @1699477099498987416 0x7f81e18c4e3d 24067: jdk.internal.org.objectweb.asm.Frame::execute(int, int, jdk.internal.org.objectweb.asm.Symbol, jdk.internal.org.objectweb.asm.SymbolTable) -> void
fifo write: @1699477099499140348 0x7f81e18cf77c 5269: jdk.internal.org.objectweb.asm.Frame::putAbstractType(jdk.internal.org.objectweb.asm.SymbolTable, int, jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099499577954 0x7f81e18d22a1 1085: Class::getMethodsRecursive(String, Class[], boolean) -> PublicMethods$MethodList
fifo write: @1699477099499711016 0x7f81e18d2fb4 2459: PublicMethods$MethodList::filter(java.lang.reflect.Method[], String, Class[], boolean) -> PublicMethods$MethodList
fifo write: @1699477099499859478 0x7f81e91340d9 126: java.lang.ref.SoftReference::get() -> Object
fifo write: @1699477099501414448 0x7f81e9134591 4370: java.io.BufferedReader::readLine(boolean, boolean[]) -> String
fifo write: @1699477099501719482 0x7f81e18d4414 241: java.nio.Buffer::nextPutIndex() -> int
fifo write: @1699477099501782483 0x7f81e18d4934 515: java.nio.HeapByteBuffer::put(byte) -> java.nio.ByteBuffer
fifo write: @1699477099501923824 0x7f81e18d50d0 481: ThreadLocal::get() -> Object
fifo write: @1699477099502357830 0x7f81e18d57bf 2452: sun.nio.fs.UnixPath::normalizeAndCheck(String) -> String
fifo write: @1699477099502465021 0x7f81e18d6f81 6273: java.util.regex.Pattern::closure(java.util.regex.Pattern$Node) -> java.util.regex.Pattern$Node
fifo write: @1699477099523522373 0x7f81e9136c65 10835: java.util.zip.InflaterInputStream::read(byte[], int, int) -> int
fifo write: @1699477099547613243 0x7f81e18d9d74 90: java.nio.charset.CoderResult::isUnderflow() -> boolean
fifo write: @1699477099547669234 0x7f81e18da1b4 492: java.nio.CharBuffer::arrayOffset() -> int
fifo write: @1699477099547720435 0x7f81e18da894 265: StackStreamFactory$FrameBuffer::isActive() -> boolean
fifo write: @1699477099547770245 0x7f81e913c94c 3: java.util.stream.FindOps$FindSink::cancellationRequested() -> boolean
fifo write: @1699477099547910227 0x7f81e18db074 67: jdk.internal.reflect.ClassFileAssembler::setStack(int) -> void
fifo write: @1699477099548653197 0x7f81e18db474 44: java.lang.invoke.MemberName::changeReferenceKind(byte, byte) -> java.lang.invoke.MemberName
fifo write: @1699477099548783519 0x7f81e913cc4c 6: java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread() -> Thread
fifo write: @1699477099549173934 0x7f81e18db894 167: java.nio.ByteBuffer::limit(int) -> java.nio.Buffer
fifo write: @1699477099549597169 0x7f81e8b78400 456: I2C/C2I adapters(0xbaaabeb)
fifo write: @1699477099549818492 0x7f81e18dbc94 39: java.nio.CharBuffer::position(int) -> java.nio.CharBuffer
fifo write: @1699477099549920153 0x7f81e18dc094 188: java.nio.CharBuffer::position(int) -> java.nio.Buffer
fifo write: @1699477099549975384 0x7f81e18dc534 492: java.nio.ByteBuffer::array() -> byte[]
fifo write: @1699477099550066705 0x7f81e18dcc9c 1239: java.io.UnixFileSystem::normalize(String) -> String
fifo write: @1699477099550242047 0x7f81e18dd917 298: java.io.UnixFileSystem::prefixLength(String) -> int
fifo write: @1699477099550705603 0x7f81e913cf51 32: sun.nio.ch.FileChannelImpl::endBlocking(boolean) -> void
fifo write: @1699477099551492724 0x7f81e18dde94 230: sun.nio.fs.UnixPath::<init>(sun.nio.fs.UnixFileSystem, byte[]) -> void
fifo write: @1699477099552028880 0x7f81e18de376 21: sun.nio.ch.IOUtil::read(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477099552078291 0x7f81e18de6ce 32: sun.nio.ch.IOStatus::normalize(int) -> int
fifo write: @1699477099552188623 0x7f81e18deb7e 3123: java.util.regex.Pattern$Ques::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099552250303 0x7f81e18e0274 156: java.nio.ByteBuffer::hasArray() -> boolean
fifo write: @1699477099552317184 0x7f81e18e0719 816: sun.nio.cs.UTF_8::updatePositions(java.nio.Buffer, int, java.nio.Buffer, int) -> void
fifo write: @1699477099552367735 0x7f81e18e0ef4 90: java.nio.charset.CoderResult::isOverflow() -> boolean
fifo write: @1699477099552418325 0x7f81e18e12f4 156: java.nio.CharBuffer::hasArray() -> boolean
fifo write: @1699477099552472986 0x7f81e18e17b4 492: java.nio.CharBuffer::array() -> char[]
fifo write: @1699477099552587958 0x7f81e913d2fe 624: sun.nio.ch.IOUtil::readIntoNativeBuffer(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477099552633968 0x7f81e18e1e94 39: System$2::decodeASCII(byte[], int, char[], int, int) -> int
fifo write: @1699477099552691039 0x7f81e18e2299 590: String::decodeASCII(byte[], int, char[], int, int) -> int
fifo write: @1699477099552773530 0x7f81e18e2ab9 1095: sun.nio.cs.UTF_8$Decoder::xflow(java.nio.Buffer, int, int, java.nio.Buffer, int, int) -> java.nio.charset.CoderResult
fifo write: @1699477099552860721 0x7f81e18e3454 762: sun.nio.cs.UTF_8$Decoder::decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) -> java.nio.charset.CoderResult
fifo write: @1699477099552916852 0x7f81e18e3cf4 44: sun.nio.fs.UnixPath::getFileSystem() -> java.nio.file.FileSystem
fifo write: @1699477099552983793 0x7f81e18e409f 136: java.nio.HeapByteBuffer::<init>(byte[], int, int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477099553044884 0x7f81e18e457d 362: java.nio.ByteBuffer::wrap(byte[], int, int) -> java.nio.ByteBuffer
fifo write: @1699477099553102484 0x7f81e18e4af4 85: java.nio.ByteBuffer::wrap(byte[]) -> java.nio.ByteBuffer
fifo write: @1699477099553165215 0x7f81e913df4c 6: org.apache.logging.log4j.core.filter.AbstractFilterable::getFilter() -> org.apache.logging.log4j.core.Filter
fifo write: @1699477099553218646 0x7f81e913e24c 44: sun.nio.fs.NativeBuffer::setOwner(Object) -> void
fifo write: @1699477099553280747 0x7f81e18e4f5c 991: java.io.File::<init>(String) -> void
fifo write: @1699477099553711282 0x7f81e913e5cc 6: java.util.concurrent.locks.ReentrantReadWriteLock::readLock() -> java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock
fifo write: @1699477099553936145 0x7f81e18e5af1 5738: java.nio.charset.CharsetDecoder::decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean) -> java.nio.charset.CoderResult
fifo write: @1699477099554051637 0x7f81e913e91d 876: sun.nio.ch.Util::getTemporaryDirectBuffer(int) -> java.nio.ByteBuffer
fifo write: @1699477099554138488 0x7f81e18e8674 293: java.nio.file.Files::provider(java.nio.file.Path) -> java.nio.file.spi.FileSystemProvider
fifo write: @1699477099554194828 0x7f81e18e8b74 65: java.util.regex.Matcher::groupCount() -> int
fifo write: @1699477099554252929 0x7f81e913f951 42: java.nio.channels.spi.AbstractInterruptibleChannel::isOpen() -> boolean
fifo write: @1699477099554645594 0x7f81e18e8ef4 6: java.nio.Buffer::discardMark() -> void
fifo write: @1699477099554733585 0x7f81e18e9274 157: sun.nio.fs.UnixPath::isEmpty() -> boolean
fifo write: @1699477099554800826 0x7f81e18e9714 552: java.io.Reader::<init>(Object) -> void
fifo write: @1699477099555016629 0x7f81e18e9dd9 1285: java.nio.HeapByteBuffer::compact() -> java.nio.ByteBuffer
fifo write: @1699477099555192011 0x7f81e18eaa7c 3721: sun.nio.cs.StreamDecoder::readBytes() -> int
fifo write: @1699477099555586376 0x7f81e18ed1ac 19637: sun.nio.cs.UTF_8$Decoder::decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) -> java.nio.charset.CoderResult
fifo write: @1699477099555648827 0x7f81e18f4e74 26: java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState(int, int) -> boolean
fifo write: @1699477099555732078 0x7f81e18f5214 968: sun.nio.fs.UnixPath::toUnixPath(java.nio.file.Path) -> sun.nio.fs.UnixPath
fifo write: @1699477099555977641 0x7f81e18f5a94 282: java.nio.charset.CharsetDecoder::reset() -> java.nio.charset.CharsetDecoder
fifo write: @1699477099556142124 0x7f81e18f6294 240: java.util.regex.Matcher::getSubSequence(int, int) -> CharSequence
fifo write: @1699477099556282155 0x7f81e913fc59 772: sun.nio.ch.Util::offerFirstTemporaryDirectBuffer(java.nio.ByteBuffer) -> void
fifo write: @1699477099556498558 0x7f81e18f6714 112: org.apache.logging.log4j.core.Logger::isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, String) -> boolean
fifo write: @1699477099556605920 0x7f81e9140855 54: java.nio.Buffer$1::acquireScope(java.nio.Buffer, boolean) -> jdk.internal.misc.ScopedMemoryAccess$Scope$Handle
fifo write: @1699477099556672880 0x7f81e18f6b94 39: java.nio.CharBuffer::limit(int) -> java.nio.CharBuffer
fifo write: @1699477099556784002 0x7f81e18f6fbf 952: org.apache.logging.log4j.core.Logger$PrivateConfig::filter(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, String) -> boolean
fifo write: @1699477099556850793 0x7f81e9140bb4 10: java.nio.MappedByteBuffer::flip() -> java.nio.ByteBuffer
fifo write: @1699477099556912683 0x7f81e18f7914 188: java.nio.CharBuffer::limit(int) -> java.nio.Buffer
fifo write: @1699477099556990154 0x7f81e18f7d94 109: java.nio.CharBuffer::<init>(int, int, int, int, char[], int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477099557055735 0x7f81e18f8234 676: sun.nio.fs.UnixPath::toString() -> String
fifo write: @1699477099557123836 0x7f81e18f8a7d 362: java.nio.CharBuffer::wrap(char[], int, int) -> java.nio.CharBuffer
fifo write: @1699477099557200037 0x7f81e18f901f 136: java.nio.HeapCharBuffer::<init>(char[], int, int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477099557249558 0x7f81e18f9494 313: sun.nio.cs.StreamDecoder::ensureOpen() -> void
fifo write: @1699477099557366759 0x7f81e18f9994 109: java.io.InputStreamReader::read(char[], int, int) -> int
fifo write: @1699477099557432580 0x7f81e9140ecc 44: java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread(Thread) -> void
fifo write: @1699477099557752834 0x7f81e18f9e61 2773: sun.nio.cs.StreamDecoder::read(char[], int, int) -> int
fifo write: @1699477099557822985 0x7f81e9141256 437: sun.nio.ch.Util$BufferCache::offerFirst(java.nio.ByteBuffer) -> boolean
fifo write: @1699477099557927787 0x7f81e18fb799 3463: sun.nio.cs.StreamDecoder::implRead(char[], int, int) -> int
fifo write: @1699477099557989457 0x7f81e18fd2b4 764: java.io.File::isInvalid() -> boolean
fifo write: @1699477099558204950 0x7f81e18fdbc9 1360: sun.nio.fs.NativeBuffers::getNativeBufferFromCache(int) -> sun.nio.fs.NativeBuffer
fifo write: @1699477099558269301 0x7f81e18fe734 1057: sun.nio.fs.UnixPath::getByteArrayForSysCalls() -> byte[]
fifo write: @1699477099558360762 0x7f81e18ff159 862: sun.nio.fs.UnixNativeDispatcher::copyToNativeBuffer(sun.nio.fs.UnixPath) -> sun.nio.fs.NativeBuffer
fifo write: @1699477099558452203 0x7f81e18ffbd9 1428: java.io.BufferedReader::fill() -> void
fifo write: @1699477099558500824 0x7f81e1900894 23: sun.nio.fs.NativeBuffer::release() -> void
fifo write: @1699477099558695397 0x7f81e1900ee6 7382: Integer::parseInt(String, int) -> int
fifo write: @1699477099558760647 0x7f81e914184c 6: java.nio.charset.CharsetDecoder::charset() -> java.nio.charset.Charset
fifo write: @1699477099558875759 0x7f81e19048cd 4615: sun.nio.fs.NativeBuffers::releaseNativeBuffer(sun.nio.fs.NativeBuffer) -> void
fifo write: @1699477099558938740 0x7f81e1906714 144: java.util.Collections$EmptySet::iterator() -> java.util.Iterator
fifo write: @1699477099559056881 0x7f81e9141b55 458: sun.nio.ch.Util$BufferCache::get(int) -> java.nio.ByteBuffer
fifo write: @1699477099559201963 0x7f81e91423b0 6: java.nio.MappedByteBuffer::rewind() -> java.nio.ByteBuffer
fifo write: @1699477099559356505 0x7f81e91426dc 18: sun.nio.ch.FileDispatcherImpl::read(java.io.FileDescriptor, long, int) -> int
fifo write: @1699477099559462826 0x7f81e1906af4 60: java.io.FileDescriptor$1::getAppend(java.io.FileDescriptor) -> boolean
fifo write: @1699477099559828231 0x7f81e1906e94 267: org.apache.logging.slf4j.Log4jLogger::isDebugEnabled() -> boolean
fifo write: @1699477099559878662 0x7f81e19072f4 98: sun.nio.ch.IOStatus::normalize(long) -> long
fifo write: @1699477099560382538 0x7f81e9142ad2 4251: sun.nio.ch.IOUtil::read(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477099560449059 0x7f81e91462b4 10: java.nio.ByteBuffer::flip() -> java.nio.ByteBuffer
fifo write: @1699477099560525230 0x7f81e91465d7 28: ThreadLocal::getMap(Thread) -> ThreadLocal$ThreadLocalMap
fifo write: @1699477099560722633 0x7f81e1907db4 410: sun.nio.fs.UnixPath::<init>(sun.nio.fs.UnixFileSystem, String) -> void
fifo write: @1699477099560841604 0x7f81e19084f7 2477: java.util.regex.Matcher::group(int) -> String
fifo write: @1699477099560890675 0x7f81e1909974 179: String::isASCII(byte[]) -> boolean
fifo write: @1699477099560981126 0x7f81e1909e54 1826: System$2::getBytesNoRepl(String, java.nio.charset.Charset) -> byte[]
fifo write: @1699477099561092017 0x7f81e190ac17 2500: sun.nio.fs.UnixPath::encode(sun.nio.fs.UnixFileSystem, String) -> byte[]
fifo write: @1699477099561174439 0x7f81e190bf34 1729: String::getBytesNoRepl(String, java.nio.charset.Charset) -> byte[]
fifo write: @1699477099561351951 0x7f81e91468d5 782: jdk.internal.misc.ScopedMemoryAccess::copyMemory(jdk.internal.misc.ScopedMemoryAccess$Scope, jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, Object, long, long) -> void
fifo write: @1699477099561433112 0x7f81e9147554 143: ThreadLocal$ThreadLocalMap::getEntry(ThreadLocal) -> ThreadLocal$ThreadLocalMap$Entry
fifo write: @1699477099561530493 0x7f81e190cc34 1789: String::getBytesNoRepl1(String, java.nio.charset.Charset) -> byte[]
fifo write: @1699477099561689415 0x7f81e190e0ac 3000: sun.nio.fs.UnixFileSystem::getPath(String, String[]) -> java.nio.file.Path
fifo write: @1699477099562053670 0x7f81e190f994 261: java.lang.reflect.Executable::isVarArgs() -> boolean
fifo write: @1699477099562105401 0x7f81e190fe94 264: java.lang.reflect.Method::isVarArgs() -> boolean
fifo write: @1699477099562981502 0x7f81e1910a1c 93: String::<init>(byte[], java.nio.charset.Charset) -> void
fifo write: @1699477099563190835 0x7f81e1910e14 161: java.io.FileDescriptor::<init>() -> void
fifo write: @1699477099563356717 0x7f81e19111f4 108: sun.nio.fs.UnixDirectoryStream::readLock() -> java.util.concurrent.locks.Lock
fifo write: @1699477099563815933 0x7f81e1911614 714: java.nio.file.FileSystems::getDefault() -> java.nio.file.FileSystem
fifo write: @1699477099563865133 0x7f81e1911cf4 161: java.io.FileDescriptor::valid() -> boolean
fifo write: @1699477099564212188 0x7f81e9147de5 974: String::<init>(char[], int, int, Void) -> void
fifo write: @1699477099564298229 0x7f81e91486d3 544: java.util.regex.Matcher::reset() -> java.util.regex.Matcher
fifo write: @1699477099564441811 0x7f81e91490d1 38: sun.nio.ch.FileChannelImpl::ensureOpen() -> void
fifo write: @1699477099564584463 0x7f81e91493d1 32: sun.nio.ch.FileChannelImpl::beginBlocking() -> void
fifo write: @1699477099564942977 0x7f81e19121b4 535: sun.nio.fs.UnixNativeDispatcher::open(sun.nio.fs.UnixPath, int, int) -> int
fifo write: @1699477099565032228 0x7f81e1912994 599: java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node) -> void
fifo write: @1699477099565348192 0x7f81e1913145 380: java.io.FileDescriptor::unregisterCleanup() -> void
fifo write: @1699477099565405053 0x7f81e1913765 676: java.io.FileDescriptor::close() -> void
fifo write: @1699477099565635506 0x7f81e1913fb4 664: java.io.FileDescriptor$1::set(java.io.FileDescriptor, int) -> void
fifo write: @1699477099565685627 0x7f81e19147c5 451: java.io.FileDescriptor::set(int) -> void
fifo write: @1699477099565860039 0x7f81e1914e14 423: java.nio.channels.spi.AbstractInterruptibleChannel::close() -> void
fifo write: @1699477099565910340 0x7f81e1915534 769: sun.nio.cs.StreamDecoder::inReady() -> boolean
fifo write: @1699477099565997041 0x7f81e1915c7d 46: sun.nio.fs.UnixChannelFactory::newFileChannel(sun.nio.fs.UnixPath, java.util.Set, int) -> java.nio.channels.FileChannel
fifo write: @1699477099566110162 0x7f81e191611c 2688: sun.nio.fs.UnixFileModeAttribute::toUnixMode(int, java.nio.file.attribute.FileAttribute[]) -> int
fifo write: @1699477099566181893 0x7f81e19176fc 377: sun.nio.fs.NativeBuffers::copyCStringToNativeBuffer(byte[], sun.nio.fs.NativeBuffer) -> void
fifo write: @1699477099566234464 0x7f81e1917d14 137: sun.nio.fs.UnixChannelFactory$Flags::<init>() -> void
fifo write: @1699477099566297325 0x7f81e19180f4 59: java.io.FileDescriptor$1::setAppend(java.io.FileDescriptor, boolean) -> void
fifo write: @1699477099566381216 0x7f81e19184e3 121: sun.nio.ch.FileChannelImpl::open(java.io.FileDescriptor, String, boolean, boolean, boolean, Object) -> java.nio.channels.FileChannel
fifo write: @1699477099566432866 0x7f81e1918917 462: java.nio.channels.FileChannel::<init>() -> void
fifo write: @1699477099566539618 0x7f81e1918f7f 1949: sun.nio.fs.UnixChannelFactory::newFileChannel(int, sun.nio.fs.UnixPath, String, java.util.Set, int) -> java.nio.channels.FileChannel
fifo write: @1699477099566583958 0x7f81e191a074 14: sun.nio.ch.FileChannelImpl::setUninterruptible() -> void
fifo write: @1699477099566664599 0x7f81e191a417 542: java.nio.file.Files::newInputStream(java.nio.file.Path, java.nio.file.OpenOption[]) -> java.io.InputStream
fifo write: @1699477099566728280 0x7f81e191ab8a 1245: sun.nio.ch.NativeThreadSet::signalAndWait() -> void
fifo write: @1699477099566886842 0x7f81e191baaa 6013: sun.nio.fs.UnixChannelFactory$Flags::toFlags(java.util.Set) -> sun.nio.fs.UnixChannelFactory$Flags
fifo write: @1699477099566942283 0x7f81e191e4b4 682: java.util.concurrent.locks.AbstractQueuedSynchronizer::hasQueuedPredecessors() -> boolean
fifo write: @1699477099567037504 0x7f81e191ede5 3430: sun.nio.ch.FileChannelImpl::<init>(java.io.FileDescriptor, String, boolean, boolean, boolean, Object) -> void
fifo write: @1699477099567188766 0x7f81e19206f7 3949: java.nio.file.spi.FileSystemProvider::newInputStream(java.nio.file.Path, java.nio.file.OpenOption[]) -> java.io.InputStream
fifo write: @1699477099567237077 0x7f81e19223f7 341: java.nio.ByteBuffer::allocate(int) -> java.nio.ByteBuffer
fifo write: @1699477099567301558 0x7f81e1922997 950: java.nio.file.Path::of(String, String[]) -> java.nio.file.Path
fifo write: @1699477099567355718 0x7f81e192329d 290: java.nio.HeapByteBuffer::<init>(int, int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477099567422179 0x7f81e192379a 1039: java.nio.file.Paths::get(String, String[]) -> java.nio.file.Path
fifo write: @1699477099567511280 0x7f81e192418f 214: sun.nio.cs.UTF_8::newDecoder() -> java.nio.charset.CharsetDecoder
fifo write: @1699477099567561281 0x7f81e1924614 39: java.nio.charset.CharsetDecoder::<init>(java.nio.charset.Charset, float, float) -> void
fifo write: @1699477099567609312 0x7f81e1924a34 47: sun.nio.cs.UTF_8$Decoder::<init>(java.nio.charset.Charset) -> void
fifo write: @1699477099567795494 0x7f81e192510e 9280: sun.nio.fs.UnixChannelFactory::open(int, sun.nio.fs.UnixPath, String, sun.nio.fs.UnixChannelFactory$Flags, int) -> java.io.FileDescriptor
fifo write: @1699477099567875945 0x7f81e1929a94 39: java.io.BufferedReader::<init>(java.io.Reader) -> void
fifo write: @1699477099567946036 0x7f81e1929ef4 1417: java.nio.charset.CharsetDecoder::replaceWith(String) -> java.nio.charset.CharsetDecoder
fifo write: @1699477099568008227 0x7f81e192abf4 1482: java.nio.charset.CharsetDecoder::<init>(java.nio.charset.Charset, float, float, String) -> void
fifo write: @1699477099568076208 0x7f81e192b859 1369: sun.nio.cs.StreamDecoder::<init>(java.io.InputStream, Object, java.nio.charset.CharsetDecoder) -> void
fifo write: @1699477099568131138 0x7f81e192c457 1309: java.io.BufferedReader::<init>(java.io.Reader, int) -> void
fifo write: @1699477099568175769 0x7f81e192cfd4 757: java.io.File::canRead() -> boolean
fifo write: @1699477099568263390 0x7f81e192d814 109: java.io.InputStreamReader::close() -> void
fifo write: @1699477099568365641 0x7f81e192dc34 592: sun.nio.cs.StreamDecoder::implClose() -> void
fifo write: @1699477099568434042 0x7f81e192e359 1080: sun.nio.cs.StreamDecoder::close() -> void
fifo write: @1699477099568546124 0x7f81e192ef34 709: java.io.BufferedReader::close() -> void
fifo write: @1699477099568714896 0x7f81e192f894 31: sun.nio.ch.FileDispatcherImpl::size(java.io.FileDescriptor) -> long
fifo write: @1699477099568809597 0x7f81e192fc54 78: Math::max(long, long) -> long
fifo write: @1699477099568983239 0x7f81e19301fd 4097: oshi.util.FileUtil::readFile(String, boolean) -> java.util.List
fifo write: @1699477099569047480 0x7f81e1931fd9 107: sun.nio.cs.StreamDecoder::forInputStreamReader(java.io.InputStream, Object, java.nio.charset.CharsetDecoder) -> sun.nio.cs.StreamDecoder
fifo write: @1699477099569098001 0x7f81e914adb5 737: StringLatin1::inflate(byte[], int, char[], int, int) -> void
fifo write: @1699477099569142781 0x7f81e1932457 1244: sun.nio.ch.ChannelInputStream::available() -> int
fifo write: @1699477099569209582 0x7f81e1932f5c 1046: java.io.InputStreamReader::<init>(java.io.InputStream, java.nio.charset.CharsetDecoder) -> void
fifo write: @1699477099569293273 0x7f81e1933a3c 3354: sun.nio.ch.FileChannelImpl::size() -> long
fifo write: @1699477099569374304 0x7f81e1935937 2504: java.nio.file.Files::newBufferedReader(java.nio.file.Path, java.nio.charset.Charset) -> java.io.BufferedReader
fifo write: @1699477099569419815 0x7f81e1936c94 31: sun.nio.ch.FileDispatcherImpl::seek(java.io.FileDescriptor, long) -> long
fifo write: @1699477099569461405 0x7f81e1937094 267: org.apache.logging.slf4j.Log4jLogger::isTraceEnabled() -> boolean
fifo write: @1699477099570090123 0x7f81e193765c 3757: sun.nio.ch.FileChannelImpl::position() -> long
fifo write: @1699477099570623940 0x7f81e914b747 7287: sun.nio.ch.ChannelInputStream::read(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer, boolean) -> int
fifo write: @1699477099570663241 0x7f81e1939834 492: java.util.regex.Matcher::find() -> boolean
fifo write: @1699477099570978055 0x7f81e9150c46 8032: sun.nio.ch.FileChannelImpl::read(java.nio.ByteBuffer) -> int
fifo write: @1699477099571071546 0x7f81e915624c 6: java.util.concurrent.locks.ReentrantReadWriteLock::writeLock() -> java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock
fifo write: @1699477099572552055 0x7f81e9156702 9032: sun.nio.ch.ChannelInputStream::read(byte[], int, int) -> int
fifo write: @1699477099572605805 0x7f81e193a019 1422: jdk.internal.reflect.ClassFileAssembler::emitConstantPoolMethodref(short, short) -> void
fifo write: @1699477099572649086 0x7f81e193ad94 101: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock::lock() -> void
fifo write: @1699477099572728597 0x7f81e193b494 327: java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireShared(int) -> void
fifo write: @1699477099572771717 0x7f81e193ba14 31: java.util.concurrent.locks.ReentrantReadWriteLock$FairSync::readerShouldBlock() -> boolean
fifo write: @1699477099572818488 0x7f81e193bdb4 457: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock::unlock() -> void
fifo write: @1699477099572869929 0x7f81e193c454 973: java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared(int) -> boolean
fifo write: @1699477099572993140 0x7f81e193cef8 2642: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::tryReleaseShared(int) -> boolean
fifo write: @1699477099573052821 0x7f81e193e498 2681: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::tryAcquireShared(int) -> int
fifo write: @1699477099573569088 0x7f81e193f9d4 1485: java.lang.reflect.Method::equals(Object) -> boolean
fifo write: @1699477099574122845 0x7f81e19405f4 395: java.util.regex.CharPredicates::lambda$ASCII_DIGIT$18(int) -> boolean
fifo write: @1699477099574176436 0x7f81e1940b94 489: java.util.regex.CharPredicates$$Lambda$16.0x800000024::is(int) -> boolean
fifo write: @1699477099574231056 0x7f81e19411f7 1439: sun.nio.ch.FileChannelImpl$Closer::run() -> void
fifo write: @1699477099574286937 0x7f81e1941ed4 908: java.io.FileDescriptor$1::close(java.io.FileDescriptor) -> void
fifo write: @1699477099574326398 0x7f81e1942894 285: sun.nio.ch.ChannelInputStream::close() -> void
fifo write: @1699477099574396308 0x7f81e1942d74 91: sun.nio.fs.UnixDirectoryStream::isOpen() -> boolean
fifo write: @1699477099574472179 0x7f81e194319a 547: java.nio.file.Files::newByteChannel(java.nio.file.Path, java.util.Set, java.nio.file.attribute.FileAttribute[]) -> java.nio.channels.SeekableByteChannel
fifo write: @1699477099574556590 0x7f81e194391e 1398: sun.nio.fs.UnixFileSystemProvider::newByteChannel(java.nio.file.Path, java.util.Set, java.nio.file.attribute.FileAttribute[]) -> java.nio.channels.SeekableByteChannel
fifo write: @1699477099574650722 0x7f81e19446dc 5343: sun.nio.ch.FileChannelImpl::implCloseChannel() -> void
fifo write: @1699477099574847844 0x7f81e1946d7a 2041: java.nio.file.Files::newByteChannel(java.nio.file.Path, java.nio.file.OpenOption[]) -> java.nio.channels.SeekableByteChannel
fifo write: @1699477099574897865 0x7f81e1947dd4 1351: sun.nio.fs.UnixPath::resolve(byte[], byte[]) -> byte[]
fifo write: @1699477099575070087 0x7f81e915ced4 219: java.util.regex.Pattern$GroupHead::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099575688375 0x7f81e1948ab7 2336: java.nio.file.Files::readAllLines(java.nio.file.Path, java.nio.charset.Charset) -> java.util.List
fifo write: @1699477099575918818 0x7f81e1949e94 391: sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator::isSelfOrParent(byte[]) -> boolean
fifo write: @1699477099576027549 0x7f81e194a559 2334: oshi.util.FileUtil::getIntFromFile(String) -> int
fifo write: @1699477099576744839 0x7f81e194b794 137: java.util.stream.PipelineHelper::<init>() -> void
fifo write: @1699477099577736652 0x7f81e194be94 137: Integer::hashCode() -> int
fifo write: @1699477099578593493 0x7f81e194c31e 2103: sun.nio.fs.UnixPath::resolve(java.nio.file.Path) -> sun.nio.fs.UnixPath
fifo write: @1699477099579304542 0x7f81e194d6b4 507: java.nio.file.Files$2::hasNext() -> boolean
fifo write: @1699477099579385843 0x7f81e194ddc5 344: sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator::hasNext() -> boolean
fifo write: @1699477099579901639 0x7f81e194e59c 3973: sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator::readNextEntry() -> java.nio.file.Path
fifo write: @1699477099580924523 0x7f81e1950914 47: sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator::next() -> Object
fifo write: @1699477099580988344 0x7f81e1950d54 885: java.nio.file.Files$2::next() -> Object
fifo write: @1699477099581036894 0x7f81e1951634 780: java.nio.file.Files$2::next() -> java.nio.file.Path
fifo write: @1699477099581089065 0x7f81e1951e65 626: sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator::next() -> java.nio.file.Path
fifo write: @1699477099581682572 0x7f81e915d3cc 6: com.sun.jna.PointerType::getPointer() -> com.sun.jna.Pointer
fifo write: @1699477099581737763 0x7f81e1952597 669: Long::valueOf(long) -> Long
fifo write: @1699477099582558994 0x7f81e1952c74 67: java.util.stream.AbstractPipeline::isParallel() -> boolean
fifo write: @1699477099582907448 0x7f81e915d6d0 67: java.nio.ByteBuffer::arrayOffset() -> int
fifo write: @1699477099584352517 0x7f81e1952fd4 107: Byte::valueOf(byte) -> Byte
fifo write: @1699477099585674614 0x7f81e915db2f 5626: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477099586025639 0x7f81e9160a32 565: sun.nio.fs.UnixPath::normalizeAndCheck(String) -> String
fifo write: @1699477099586326612 0x7f81e9161350 67: java.nio.CharBuffer::arrayOffset() -> int
fifo write: @1699477099586396993 0x7f81e1953457 2012: AbstractStringBuilder::checkRange(int, int, int) -> void
fifo write: @1699477099586726348 0x7f81e9161761 5631: java.io.BufferedReader::readLine(boolean, boolean[]) -> String
fifo write: @1699477099586875220 0x7f81e9164a4c 2: java.util.Spliterators$IteratorSpliterator::characteristics() -> int
fifo write: @1699477099587280935 0x7f81e19545d4 86: java.util.regex.Pattern::lambda$Single$7(int, int) -> boolean
fifo write: @1699477099587332345 0x7f81e1954a14 233: java.util.regex.Pattern$$Lambda$18.0x800000028::is(int) -> boolean
fifo write: @1699477099587785241 0x7f81e1954ef7 2254: com.sun.jna.NativeMappedConverter::getInstance(Class) -> com.sun.jna.NativeMappedConverter
fifo write: @1699477099588376299 0x7f81e19561b4 1933: oshi.util.FileUtil::getStringFromFile(String) -> String
fifo write: @1699477099589679246 0x7f81e9164d4c 2: java.util.stream.AbstractPipeline::getStreamAndOpFlags() -> int
fifo write: @1699477099590203542 0x7f81e916534c 2: oshi.hardware.CentralProcessor$LogicalProcessor::getProcessorNumber() -> int
fifo write: @1699477099590563037 0x7f81e1956ff4 77: java.util.stream.StreamOpFlag::getMask(int) -> int
fifo write: @1699477099590605458 0x7f81e19573f4 254: java.util.stream.StreamOpFlag::combineOpFlags(int, int) -> int
fifo write: @1699477099590777940 0x7f81e1957a57 5506: jdk.internal.reflect.ReflectionFactory::newConstructorAccessor(java.lang.reflect.Constructor) -> jdk.internal.reflect.ConstructorAccessor
fifo write: @1699477099591455139 0x7f81e195a014 243: java.util.regex.Pattern$BranchConn::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099591603851 0x7f81e195a494 334: java.util.regex.Matcher::end() -> int
fifo write: @1699477099591785003 0x7f81e195aa14 31: java.util.regex.Pattern::split(CharSequence) -> String[]
fifo write: @1699477099592055086 0x7f81e9165654 111: java.util.regex.CharPredicates$$Lambda$17.0x800000025::is(int) -> boolean
fifo write: @1699477099592420231 0x7f81e195ae14 334: java.util.regex.Matcher::start() -> int
fifo write: @1699477099592927448 0x7f81e195b3de 1000: java.util.regex.Pattern$CharProperty::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099592984368 0x7f81e195be14 513: java.util.ArrayList$SubList::<init>(java.util.ArrayList, int, int) -> void
fifo write: @1699477099593056809 0x7f81e195c503 1545: java.util.ArrayList$SubList::toArray(Object[]) -> Object[]
fifo write: @1699477099593322453 0x7f81e195d529 11603: java.util.regex.Pattern::split(CharSequence, int) -> String[]
fifo write: @1699477099593378193 0x7f81e19622b7 664: java.util.ArrayList::subList(int, int) -> java.util.List
fifo write: @1699477099593443114 0x7f81e1962ae7 916: java.util.regex.Pattern$Slice::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099593483955 0x7f81e1963414 339: java.util.ArrayList$SubList::checkForComodification() -> void
fifo write: @1699477099593581386 0x7f81e1963b7f 4354: java.util.AbstractList::subListRangeCheck(int, int, int) -> void
fifo write: @1699477099593665727 0x7f81e9165a54 475: java.util.regex.Matcher::search(int) -> boolean
fifo write: @1699477099593786759 0x7f81e91662de 705: java.util.regex.Pattern$BmpCharPropertyGreedy::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099594149003 0x7f81e9166c35 1: java.util.regex.Pattern$$Lambda$18.0x800000028::is(int) -> boolean
fifo write: @1699477099594569499 0x7f81e9166f5c 311: java.util.regex.Pattern$Start::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099594642770 0x7f81e9167566 321: java.util.regex.Pattern$BmpCharProperty::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099596295241 0x7f81e9167c59 1904: java.util.ArrayList::add(Object) -> boolean
fifo write: @1699477099598171755 0x7f81e8b83d40 27: vtable stub
fifo write: @1699477099599322860 0x7f81e9168c7a 2230: StringLatin1::toLowerCase(String, byte[], java.util.Locale) -> String
fifo write: @1699477099611348525 0x7f81e1965fcb 5664: java.util.concurrent.ConcurrentHashMap::replaceNode(Object, Object, Object) -> Object
fifo write: @1699477099616130867 0x7f81e916a3cc 2: java.util.Formatter$Flags::valueOf() -> int
fifo write: @1699477099616152787 0x7f81e8b78100 520: I2C/C2I adapters(0xbbbbbbbabe)
fifo write: @1699477099616496922 0x7f81e1968c94 352: java.util.regex.Pattern$Node::study(java.util.regex.Pattern$TreeInfo) -> boolean
fifo write: @1699477099616775336 0x7f81e19692b7 1353: Class::protectionDomain() -> java.security.ProtectionDomain
fifo write: @1699477099617833409 0x7f81e1969e94 168: java.lang.invoke.DirectMethodHandle$Constructor::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, java.lang.invoke.MemberName, boolean, java.lang.invoke.MemberName, Class) -> void
fifo write: @1699477099617851769 0x7f81e8b77e00 432: I2C/C2I adapters(0x7eab)
fifo write: @1699477099618594769 0x7f81e196a5d7 11886: java.util.Properties$LineReader::readLine() -> int
fifo write: @1699477099619202177 0x7f81e196f2f4 179: StringUTF16::getChar(byte[], int) -> char
fifo write: @1699477099619360029 0x7f81e916a6d9 1190: String::<init>(char[], int, int) -> void
fifo write: @1699477099619722904 0x7f81e916b22e 117: StringUTF16::getChar(byte[], int) -> char
fifo write: @1699477099641734727 0x7f81e196fbae 13242: String::split(String, int) -> String[]
fifo write: @1699477099651213159 0x7f81e197585e 1867: java.io.BufferedInputStream::read(byte[], int, int) -> int
fifo write: @1699477099651754686 0x7f81e19767f4 1908: CharacterData::of(int) -> CharacterData
fifo write: @1699477099660393028 0x7f81e916ba51 42: AbstractStringBuilder::isLatin1() -> boolean
fifo write: @1699477099662549476 0x7f81e19775f0 247: java.lang.invoke.MethodHandleImpl$1::newMemberName() -> Object
fifo write: @1699477099662616627 0x7f81e1977ab7 611: StackFrameInfo::<init>(StackWalker) -> void
fifo write: @1699477099662671227 0x7f81e1978194 137: java.lang.invoke.MemberName::<init>() -> void
fifo write: @1699477099663030372 0x7f81e8b77b00 472: I2C/C2I adapters(0x7e7e7e7e7e7e)
fifo write: @1699477099663049382 0x7f81e8b77800 464: I2C/C2I adapters(0x66666)
fifo write: @1699477099663070562 0x7f81e8b77500 584: I2C/C2I adapters(0x7e7e7e7e7e7e7e7e7e7e7e)
fifo write: @1699477099663092393 0x7f81e8b77200 432: I2C/C2I adapters(0x6aa)
fifo write: @1699477099663119783 0x7f81e8b76f00 464: I2C/C2I adapters(0x7e7e7e7e7e)
fifo write: @1699477099665346032 0x7f81e19785de 386: arw::a(float[]) -> void
fifo write: @1699477099667707342 0x7f81e1978b74 23: Math::asin(double) -> double
fifo write: @1699477099674157375 0x7f81e1978f19 50: java.util.concurrent.ConcurrentHashMap::remove(Object) -> Object
fifo write: @1699477099674262837 0x7f81e916c74c 6: com.sun.jna.internal.Cleaner$CleanerRef::getNext() -> com.sun.jna.internal.Cleaner$CleanerRef
fifo write: @1699477099674327637 0x7f81e916ca4c 44: com.sun.jna.internal.Cleaner$CleanerRef::setPrevious(com.sun.jna.internal.Cleaner$CleanerRef) -> void
fifo write: @1699477099674390288 0x7f81e916cdcc 44: com.sun.jna.internal.Cleaner$CleanerRef::setNext(com.sun.jna.internal.Cleaner$CleanerRef) -> void
fifo write: @1699477099674451769 0x7f81e916d14c 6: com.sun.jna.internal.Cleaner$CleanerRef::getPrevious() -> com.sun.jna.internal.Cleaner$CleanerRef
fifo write: @1699477099674572490 0x7f81e19793b7 2709: Class::copyConstructors(java.lang.reflect.Constructor[]) -> java.lang.reflect.Constructor[]
fifo write: @1699477099677617809 0x7f81e197a81f 1979: java.lang.invoke.LambdaProxyClassArchive::find(Class, String, java.lang.invoke.MethodType, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean, Class[], java.lang.invoke.MethodType[]) -> Class
fifo write: @1699477099677720021 0x7f81e197b897 2686: java.lang.invoke.LambdaProxyClassArchive::loadedByBuiltinLoader(Class) -> boolean
fifo write: @1699477099678153966 0x7f81e197cd4a 1983: java.io.BufferedInputStream::read1(byte[], int, int) -> int
fifo write: @1699477099678388859 0x7f81e197de34 482: java.util.concurrent.ConcurrentHashMap$KeyIterator::next() -> Object
fifo write: @1699477099678540401 0x7f81e8b76c00 520: I2C/C2I adapters(0xbabbabbbb)
fifo write: @1699477099678559812 0x7f81e8b76900 536: I2C/C2I adapters(0xbbabbabbbb)
fifo write: @1699477099678962357 0x7f81e916d44c 3: java.time.temporal.ValueRange::getMinimum() -> long
fifo write: @1699477099679007667 0x7f81e916d74c 3: java.time.temporal.ValueRange::getMaximum() -> long
fifo write: @1699477099679072018 0x7f81e916da4c 6: java.time.temporal.ChronoField::range() -> java.time.temporal.ValueRange
fifo write: @1699477099679114809 0x7f81e916dd4c 2: java.time.ZoneOffset::getTotalSeconds() -> int
fifo write: @1699477099679170529 0x7f81e197e494 197: java.time.temporal.ValueRange::isValidValue(long) -> boolean
fifo write: @1699477099679223710 0x7f81e197e994 117: java.time.temporal.ChronoField::checkValidValue(long) -> long
fifo write: @1699477099679392712 0x7f81e197edc0 667: java.time.temporal.ValueRange::checkValidValue(long, java.time.temporal.TemporalField) -> long
fifo write: @1699477099679775867 0x7f81e197f5b7 485: java.lang.invoke.InnerClassLambdaMetafactory::spinInnerClass() -> Class
fifo write: @1699477099679919939 0x7f81e916e34c 3: Long::longValue() -> long
fifo write: @1699477099682519753 0x7f81e197fc94 253: jdk.internal.loader.URLClassPath$JarLoader$2::getInputStream() -> java.io.InputStream
fifo write: @1699477099682640134 0x7f81e19801c5 335: jdk.internal.loader.Resource::cachedInputStream() -> java.io.InputStream
fifo write: @1699477099682817767 0x7f81e198099f 5282: java.net.URLClassLoader$1::run() -> Class
fifo write: @1699477099682893878 0x7f81e916e659 62: java.lang.ref.Cleaner$1::apply(Object) -> Object
fifo write: @1699477099683414524 0x7f81e198327c 4509: jdk.internal.loader.Resource::getBytes() -> byte[]
fifo write: @1699477099683478575 0x7f81e916e9d0 43: jdk.internal.loader.URLClassPath$JarLoader$2::getCodeSourceURL() -> java.net.URL
fifo write: @1699477099683718698 0x7f81e1985a26 6453: java.net.URLClassLoader::defineClass(String, jdk.internal.loader.Resource) -> Class
fifo write: @1699477099684176964 0x7f81e19888b4 856: StackStreamFactory::isReflectionFrame(Class) -> boolean
fifo write: @1699477099684250815 0x7f81e1989234 727: StackStreamFactory$StackFrameTraverser$StackFrameBuffer::at(int) -> Class
fifo write: @1699477099684304836 0x7f81e1989a14 120: StackStreamFactory$AbstractStackWalker::hasNext() -> boolean
fifo write: @1699477099684371987 0x7f81e1989eb4 831: StackStreamFactory$AbstractStackWalker::skipReflectionFrames() -> boolean
fifo write: @1699477099684569369 0x7f81e198a859 2024: StackStreamFactory$AbstractStackWalker::peekFrame() -> Class
fifo write: @1699477099684651910 0x7f81e198bb19 1422: jdk.internal.reflect.ClassFileAssembler::emitConstantPoolNameAndType(short, short) -> void
fifo write: @1699477099684742441 0x7f81e198c97c 2086: StackStreamFactory$FrameBuffer::get() -> Class
fifo write: @1699477099685368439 0x7f81e198db94 326: java.security.Provider::checkInitialized() -> void
fifo write: @1699477099685702094 0x7f81e916eccc 2: StackStreamFactory$FrameBuffer::getIndex() -> int
fifo write: @1699477099686655236 0x7f81e916f37c 1619: jdk.internal.loader.URLClassPath$JarLoader::getResource(String, boolean) -> jdk.internal.loader.Resource
fifo write: @1699477099686844329 0x7f81e198e157 544: java.util.jar.JarVerifier::update(int, byte[], int, int, sun.security.util.ManifestEntryVerifier) -> void
fifo write: @1699477099690265563 0x7f81e198e874 309: java.lang.invoke.LambdaForm::fixResult(int, java.lang.invoke.LambdaForm$Name[]) -> int
fifo write: @1699477099690510716 0x7f81e198ee79 1296: java.lang.invoke.LambdaForm::<init>(int, java.lang.invoke.LambdaForm$Name[], int, boolean, java.lang.invoke.MethodHandle, java.lang.invoke.LambdaForm$Kind) -> void
fifo write: @1699477099690807020 0x7f81e8b83d70 27: vtable stub
fifo write: @1699477099691361347 0x7f81e91709cc 6: java.lang.invoke.ClassSpecializer$SpeciesData::getterFunctions() -> java.util.List
fifo write: @1699477099691736542 0x7f81e198fcfc 5038: java.lang.invoke.InvokerBytecodeGenerator::lookupPregenerated(java.lang.invoke.LambdaForm, java.lang.invoke.MethodType) -> java.lang.invoke.MemberName
fifo write: @1699477099691884634 0x7f81e19922d7 1217: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle::<init>(java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandleImpl$Intrinsic, Object) -> void
fifo write: @1699477099691948494 0x7f81e1992d94 230: java.lang.invoke.LambdaForm$NamedFunction::<init>(java.lang.invoke.MemberName, java.lang.invoke.MethodHandle) -> void
fifo write: @1699477099692683204 0x7f81e8b76600 440: I2C/C2I adapters(0x7e7eb)
fifo write: @1699477099693257691 0x7f81e19936f7 2908: java.util.Arrays::copyOfRange(Object[], int, int, Class) -> Object[]
fifo write: @1699477099693341222 0x7f81e1994e35 1357: java.lang.invoke.MethodHandles$Lookup::resolveOrFail(byte, Class, String, java.lang.invoke.MethodType) -> java.lang.invoke.MemberName
fifo write: @1699477099693406613 0x7f81e1995bbc 1499: java.lang.invoke.MethodHandles$Lookup::checkMethodName(byte, String) -> void
fifo write: @1699477099693550125 0x7f81e1996a34 439: java.lang.invoke.MemberName$Factory::resolveOrNull(byte, java.lang.invoke.MemberName, Class, int) -> java.lang.invoke.MemberName
fifo write: @1699477099693677437 0x7f81e91727bb 84: java.lang.invoke.MethodTypeForm::canonicalize(Class, int) -> Class
fifo write: @1699477099693738938 0x7f81e199707a 597: java.lang.invoke.MethodType::methodType(Class, Class) -> java.lang.invoke.MethodType
fifo write: @1699477099694445987 0x7f81e1997867 5712: java.lang.invoke.MethodTypeForm::<init>(java.lang.invoke.MethodType) -> void
fifo write: @1699477099694582738 0x7f81e1999f94 328: java.util.ImmutableCollections$AbstractImmutableList::<init>() -> void
fifo write: @1699477099696611625 0x7f81e199a4ce 199: java.lang.invoke.SimpleMethodHandle::make(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099696693356 0x7f81e199a994 207: java.lang.invoke.SimpleMethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> void
fifo write: @1699477099697028530 0x7f81e9173ac4 395: jdk.internal.perf.PerfCounter::add(long) -> void
fifo write: @1699477099698415038 0x7f81e8b76300 456: I2C/C2I adapters(0xbbb6b)
fifo write: @1699477099698434878 0x7f81e8b76000 448: I2C/C2I adapters(0xba6b)
fifo write: @1699477099698710932 0x7f81e8b75d00 432: I2C/C2I adapters(0xbe6)
fifo write: @1699477099699275359 0x7f81e199aee0 742: java.lang.invoke.LambdaForm$DMH.0x00007f8160120800::invokeStatic(Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477099699848796 0x7f81e199b574 486: aew::b(char) -> boolean
fifo write: @1699477099700018529 0x7f81e199bb74 429: aew::c(char) -> boolean
fifo write: @1699477099700587556 0x7f81e199c154 973: java.util.concurrent.locks.AbstractQueuedSynchronizer::release(int) -> boolean
fifo write: @1699477099700643037 0x7f81e91749cc 2: com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry::getHash() -> int
fifo write: @1699477099700748488 0x7f81e9174cb2 69: jdk.internal.util.Preconditions::checkIndex(int, int, java.util.function.BiFunction) -> int
fifo write: @1699477099700899120 0x7f81e199cc00 1471: java.lang.invoke.LambdaForm$MH.0x00007f8160252800::invoke(Object, Object) -> int
fifo write: @1699477099700957441 0x7f81e199d774 312: java.lang.invoke.DirectMethodHandle::fieldOffset(Object) -> long
fifo write: @1699477099701028322 0x7f81e199dd80 1241: java.lang.invoke.LambdaForm$MH.0x00007f8160251800::invoke(Object, Object) -> int
fifo write: @1699477099701096993 0x7f81e199e6f4 481: java.lang.invoke.DirectMethodHandle::checkCast(Object, Object) -> Object
fifo write: @1699477099701153783 0x7f81e199ed60 774: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object) -> int
fifo write: @1699477099701192074 0x7f81e199f494 174: aew::hashCode() -> int
fifo write: @1699477099701244514 0x7f81e199f974 402: java.lang.invoke.DirectMethodHandle::checkBase(Object) -> Object
fifo write: @1699477099701310305 0x7f81e19a0020 2133: java.lang.invoke.LambdaForm$MH.0x00007f816024c400::invoke(Object, Object) -> Object
fifo write: @1699477099701402956 0x7f81e19a11b4 583: java.lang.invoke.DirectMethodHandle$Accessor::checkCast(Object) -> Object
fifo write: @1699477099701452627 0x7f81e19a197f 679: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, int, int) -> int
fifo write: @1699477099701577099 0x7f81e19a20db 1453: java.lang.invoke.VarHandleReferences$Array::getVolatile(java.lang.invoke.VarHandle, Object, int) -> Object
fifo write: @1699477099701665950 0x7f81e19a2e57 3009: java.util.concurrent.atomic.AtomicReferenceArray::get(int) -> Object
fifo write: @1699477099701717341 0x7f81e91755d3 104: java.lang.invoke.VarForm::getMemberName(int) -> java.lang.invoke.MemberName
fifo write: @1699477099702091185 0x7f81e9175fe0 456: java.lang.invoke.VarHandle::checkExactAccessMode(java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477099702310368 0x7f81e9176655 1312: java.lang.ref.ReferenceQueue::poll() -> java.lang.ref.Reference
fifo write: @1699477099702673773 0x7f81e19a45c2 8290: java.lang.invoke.VarHandleGuards::guard_LI_L(java.lang.invoke.VarHandle, Object, int, java.lang.invoke.VarHandle$AccessDescriptor) -> Object
fifo write: @1699477099703856188 0x7f81e19a7a1d 490: jdk.internal.org.objectweb.asm.MethodWriter::addSuccessorToCurrentBasicBlock(int, jdk.internal.org.objectweb.asm.Label) -> void
fifo write: @1699477099704049221 0x7f81e91777de 341: jdk.internal.org.objectweb.asm.ByteVector::put122(int, int, int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099704727909 0x7f81e19a8179 1266: Module::allows(java.util.Set, Module) -> boolean
fifo write: @1699477099705013383 0x7f81e19a8c14 293: jdk.internal.org.objectweb.asm.ByteVector::putShort(int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099705793583 0x7f81e8b73f80 448: I2C/C2I adapters(0x7e7e7eb)
fifo write: @1699477099705807533 0x7f81e8b73b00 440: I2C/C2I adapters(0x7ebb)
fifo write: @1699477099705823614 0x7f81e8b8f600 432: I2C/C2I adapters(0xab7e)
fifo write: @1699477099706541643 0x7f81e9177e9d 1434: jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn(int, int) -> void
fifo write: @1699477099706591443 0x7f81e91790cc 6: java.security.Provider::getName() -> String
fifo write: @1699477099707053519 0x7f81e19a929d 1311: java.lang.invoke.MethodHandleImpl::makeIntrinsic(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, java.lang.invoke.MethodHandleImpl$Intrinsic) -> java.lang.invoke.MethodHandle
fifo write: @1699477099707135440 0x7f81e19a9ed9 1283: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle::<init>(java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandleImpl$Intrinsic) -> void
fifo write: @1699477099707242292 0x7f81e19aad94 400: java.lang.invoke.DelegatingMethodHandle::rebind() -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099707472225 0x7f81e19ab2f4 268: java.lang.invoke.LambdaForm::identityForm(java.lang.invoke.LambdaForm$BasicType) -> java.lang.invoke.LambdaForm
fifo write: @1699477099709073455 0x7f81e91798bb 28672: java.lang.invoke.MethodType::makeImpl(Class, Class[], boolean) -> java.lang.invoke.MethodType
fifo write: @1699477099709129516 0x7f81e91892b4 327: java.util.Arrays::equals(Object[], Object[]) -> boolean
fifo write: @1699477099709210197 0x7f81e19ab937 2067: java.lang.invoke.MethodHandles::makeIdentity(Class) -> java.lang.invoke.MethodHandle
fifo write: @1699477099709250508 0x7f81e91898cc 2: sun.security.provider.DigestBase::engineGetDigestLength() -> int
fifo write: @1699477099709321639 0x7f81e19acbfc 1705: sun.security.provider.ByteArrayAccess::i2bBig4(int, byte[], int) -> void
fifo write: @1699477099709359509 0x7f81e19ada14 137: java.security.MessageDigestSpi::<init>() -> void
fifo write: @1699477099709455520 0x7f81e19ade14 175: java.lang.invoke.SimpleMethodHandle::copyWithExtendL(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099709548742 0x7f81e19ae274 23: java.lang.invoke.BoundMethodHandle::bindSingle(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477099709593692 0x7f81e9189c14 87: java.util.WeakHashMap::hash(Object) -> int
fifo write: @1699477099709635773 0x7f81e19ae614 687: java.util.ArrayList::clear() -> void
fifo write: @1699477099710708357 0x7f81e19aeea6 2909: java.util.ImmutableCollections$Set12::<init>(Object, Object) -> void
fifo write: @1699477099710823448 0x7f81e9189fd4 1430: java.util.WeakHashMap::expungeStaleEntries() -> void
fifo write: @1699477099711911212 0x7f81e19b0543 669: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object, Object) -> Object
fifo write: @1699477099712336188 0x7f81e19b0b94 313: java.util.jar.JarVerifier$VerifierStream::ensureOpen() -> void
fifo write: @1699477099712606191 0x7f81e19b1105 1182: java.util.jar.JarVerifier$VerifierStream::read(byte[], int, int) -> int
fifo write: @1699477099714143701 0x7f81e918ae45 6206: jdk.internal.loader.URLClassPath$JarLoader::getResource(String, boolean, java.util.Set) -> jdk.internal.loader.Resource
fifo write: @1699477099714314923 0x7f81e19b1c14 31: jdk.internal.org.objectweb.asm.ClassReader::<init>(byte[], int, int) -> void
fifo write: @1699477099714370184 0x7f81e19b1ff4 430: java.lang.invoke.MethodHandles$Lookup$ClassFile::readInt(byte[], int) -> int
fifo write: @1699477099714417274 0x7f81e918ebd4 95: java.util.HashMap::<init>(int) -> void
fifo write: @1699477099714460685 0x7f81e19b2674 379: jdk.internal.misc.VM::isSupportedClassFileVersion(int, int) -> boolean
fifo write: @1699477099714507266 0x7f81e19b2c19 191: jdk.internal.org.objectweb.asm.ClassReader::<init>(byte[]) -> void
fifo write: @1699477099714551996 0x7f81e19b3094 159: jdk.internal.org.objectweb.asm.ClassReader::readShort(int) -> short
fifo write: @1699477099714610837 0x7f81e19b3534 735: jdk.internal.org.objectweb.asm.ClassReader::readUtf(int, char[]) -> String
fifo write: @1699477099714664838 0x7f81e19b3db4 263: jdk.internal.org.objectweb.asm.ClassReader::readUTF8(int, char[]) -> String
fifo write: @1699477099714761189 0x7f81e918f04c 6: java.util.jar.JarFile$JarFileEntry::getName() -> String
fifo write: @1699477099715081563 0x7f81e19b43d6 1881: jdk.internal.org.objectweb.asm.Type::getObjectType(String) -> jdk.internal.org.objectweb.asm.Type
fifo write: @1699477099715488258 0x7f81e19b567f 4796: jdk.internal.org.objectweb.asm.Type::getClassName() -> String
fifo write: @1699477099715799142 0x7f81e19b7e7f 6985: jdk.internal.org.objectweb.asm.ClassReader::readConst(int, char[]) -> Object
fifo write: @1699477099715988775 0x7f81e918f4c1 5506: jdk.internal.loader.URLClassPath::getResource(String, boolean) -> jdk.internal.loader.Resource
fifo write: @1699477099716073146 0x7f81e19bb0b4 216: java.lang.invoke.MethodHandles$Lookup::makeHiddenClassDefiner(byte[], java.util.Set, boolean) -> java.lang.invoke.MethodHandles$Lookup$ClassDefiner
fifo write: @1699477099716196037 0x7f81e19bb614 248: java.lang.invoke.MethodHandles$Lookup$ClassDefiner::defineClassAsLookup(boolean) -> java.lang.invoke.MethodHandles$Lookup
fifo write: @1699477099716431150 0x7f81e19bc01f 10749: java.lang.invoke.MethodHandles$Lookup$ClassFile::newInstance(byte[], String) -> java.lang.invoke.MethodHandles$Lookup$ClassFile
fifo write: @1699477099716659493 0x7f81e19c1674 1653: java.util.Base64$Decoder::decodedOutLength(byte[], int, int) -> int
fifo write: @1699477099716871446 0x7f81e19c2539 858: java.util.ArrayList::addAll(java.util.Collection) -> boolean
fifo write: @1699477099716934977 0x7f81e91924cc 6: java.util.jar.Attributes$Name::toString() -> String
fifo write: @1699477099716990528 0x7f81e19c2e96 1503: sun.security.util.ManifestEntryVerifier::update(byte[], int, int) -> void
fifo write: @1699477099717064369 0x7f81e19c3bb4 818: java.lang.invoke.MethodHandles::identity(Class) -> java.lang.invoke.MethodHandle
fifo write: @1699477099717407523 0x7f81e91927cc 6: sun.security.util.ManifestEntryVerifier::getEntry() -> java.util.jar.JarEntry
fifo write: @1699477099717524515 0x7f81e19c4594 791: java.security.MessageDigest::isEqual(byte[], byte[]) -> boolean
fifo write: @1699477099717619966 0x7f81e9192acc 6: java.security.CodeSigner::getSignerCertPath() -> java.security.cert.CertPath
fifo write: @1699477099717666656 0x7f81e9192dcc 6: sun.security.provider.certpath.X509CertPath::getCertificates() -> java.util.List
fifo write: @1699477099718027571 0x7f81e9193119 5323: jdk.internal.org.objectweb.asm.SymbolTable::addType(String) -> int
fifo write: @1699477099718199233 0x7f81e19c4e94 241: java.util.ArrayList::toArray() -> Object[]
fifo write: @1699477099718529918 0x7f81e9195f4c 6: java.security.MessageDigest::getAlgorithm() -> String
fifo write: @1699477099718921463 0x7f81e19c5394 129: java.util.concurrent.ConcurrentHashMap::isEmpty() -> boolean
fifo write: @1699477099719774444 0x7f81e919654c 6: aev::a() -> aew
fifo write: @1699477099719830344 0x7f81e19c5839 498: java.lang.reflect.Constructor::checkCanSetAccessible(Class) -> void
fifo write: @1699477099720018187 0x7f81e19c5e94 240: java.util.jar.Attributes::entrySet() -> java.util.Set
fifo write: @1699477099720403432 0x7f81e919687d 1551: AbstractStringBuilder::append(String) -> AbstractStringBuilder
fifo write: @1699477099721606757 0x7f81e19c645f 3560: java.lang.invoke.MethodHandles::constant(Class, Object) -> java.lang.invoke.MethodHandle
fifo write: @1699477099721758719 0x7f81e19c7ed4 512: Class::getDeclaredConstructors() -> java.lang.reflect.Constructor[]
fifo write: @1699477099722204705 0x7f81e919791f 1724: sun.security.provider.DigestBase::engineUpdate(byte[], int, int) -> void
fifo write: @1699477099723040485 0x7f81e8b75a00 448: I2C/C2I adapters(0xb7e7e7e)
fifo write: @1699477099723055975 0x7f81e8b75700 456: I2C/C2I adapters(0xb7e7ebb)
fifo write: @1699477099723072446 0x7f81e8b75400 448: I2C/C2I adapters(0xaa7e7e)
fifo write: @1699477099723610983 0x7f81e19c8680 1522: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, Object, Object) -> Object
fifo write: @1699477099731979440 0x7f81e9198d81 5627: java.util.concurrent.ConcurrentHashMap::putVal(Object, Object, boolean) -> Object
fifo write: @1699477099733295017 0x7f81e19c94b4 482: String::getBytes(java.nio.charset.Charset) -> byte[]
fifo write: @1699477099735049950 0x7f81e19c9af4 158: java.security.Provider$ServiceKey::matches(String, String) -> boolean
fifo write: @1699477099735499746 0x7f81e19ca066 3167: java.security.Provider::getService(String, String) -> java.security.Provider$Service
fifo write: @1699477099736493299 0x7f81e8b75100 496: I2C/C2I adapters(0xb7e7e7eb7e7e7e)
fifo write: @1699477099736508269 0x7f81e8b74e00 464: I2C/C2I adapters(0xbbbbb6)
fifo write: @1699477099737331219 0x7f81e8b74b00 536: I2C/C2I adapters(0xbbaaaabbbb)
fifo write: @1699477099737584383 0x7f81e19cb8b4 966: java.security.Provider$ServiceKey::equals(Object) -> boolean
fifo write: @1699477099739187483 0x7f81e19cc582 9880: java.util.jar.JarVerifier::processEntry(sun.security.util.ManifestEntryVerifier) -> void
fifo write: @1699477099740020874 0x7f81e19d1434 978: java.util.stream.WhileOps$1Op$1OpSink::accept(Object) -> void
fifo write: @1699477099740087695 0x7f81e19d1e3d 910: java.util.Base64$Decoder::decodeBlock(byte[], int, int, byte[], int, boolean, boolean) -> int
fifo write: @1699477099745353143 0x7f81e8b74800 488: I2C/C2I adapters(0xbbbabbeb)
fifo write: @1699477099746913213 0x7f81e19d2934 444: java.security.Provider$Service::newInstanceOf() -> Object
fifo write: @1699477099747157216 0x7f81e19d313f 3070: java.security.Provider$Service::newInstanceUtil(Class, Object) -> Object
fifo write: @1699477099747237007 0x7f81e8b74280 520: I2C/C2I adapters(0xbbbabaaaa)
fifo write: @1699477099747253208 0x7f81e8b8f300 536: I2C/C2I adapters(0xbbaabaaaaa)
fifo write: @1699477099747269708 0x7f81e8b8f000 448: I2C/C2I adapters(0xabbaa)
fifo write: @1699477099747484191 0x7f81e19d4b57 5237: java.security.Provider$Service::getDefaultConstructor() -> java.lang.reflect.Constructor
fifo write: @1699477099747501721 0x7f81e8b8ec80 656: I2C/C2I adapters(0xbbaabaabaabbaaa)
fifo write: @1699477099747517801 0x7f81e8b8e980 608: I2C/C2I adapters(0xbbbabababbaaa)
fifo write: @1699477099747534481 0x7f81e8b8e680 536: I2C/C2I adapters(0xbbbbbbbaaa)
fifo write: @1699477099747550471 0x7f81e8b8e380 512: I2C/C2I adapters(0xaaaaaaaaa)
fifo write: @1699477099747606722 0x7f81e8b8e080 448: I2C/C2I adapters(0xbb7e7e)
fifo write: @1699477099747623032 0x7f81e8b8dd80 496: I2C/C2I adapters(0xbb7e7e7e7e7e7e)
fifo write: @1699477099747639123 0x7f81e8b8da80 448: I2C/C2I adapters(0xb7eba)
fifo write: @1699477099747654873 0x7f81e8b8d780 536: I2C/C2I adapters(0xbbbbaaaaaa)
fifo write: @1699477099747670633 0x7f81e8b8d480 480: I2C/C2I adapters(0xb7e7e7e7e7e7e)
fifo write: @1699477099747686733 0x7f81e8b8d180 496: I2C/C2I adapters(0xbbaaaaaa)
fifo write: @1699477099748191020 0x7f81e19d7221 10643: java.security.Provider$Service::newInstance(Object) -> Object
fifo write: @1699477099749922582 0x7f81e19dc954 1069: java.lang.invoke.MethodHandles$Lookup::restrictProtectedReceiver(java.lang.invoke.MemberName) -> boolean
fifo write: @1699477099750479549 0x7f81e8b8ce80 432: I2C/C2I adapters(0xa7eb)
fifo write: @1699477099750889775 0x7f81e19dd374 313: com.google.common.base.Preconditions::checkNotNull(Object) -> Object
fifo write: @1699477099751238659 0x7f81e19dd894 230: sun.security.jca.GetInstance$Instance::<init>(java.security.Provider, Object) -> void
fifo write: @1699477099751341320 0x7f81e19ddd94 627: sun.security.jca.GetInstance::getInstance(java.security.Provider$Service, Class) -> sun.security.jca.GetInstance$Instance
fifo write: @1699477099751399241 0x7f81e19de594 31: Enum::hashCode() -> int
fifo write: @1699477099751484962 0x7f81e19de9e0 934: java.lang.invoke.LambdaForm$MH.0x00007f8160001400::invoke(Object, Object) -> Object
fifo write: @1699477099751569833 0x7f81e19df2fc 2113: sun.security.jca.GetInstance::checkSuperClass(java.security.Provider$Service, Class, Class) -> void
fifo write: @1699477099753080613 0x7f81e19e0614 470: java.security.MessageDigest$Delegate::<init>(java.security.MessageDigestSpi, String, java.security.Provider) -> void
fifo write: @1699477099753136594 0x7f81e19e0c94 331: java.security.MessageDigest::<init>(String, java.security.Provider) -> void
fifo write: @1699477099753220155 0x7f81e19e1237 567: java.security.MessageDigest$Delegate$CloneableDelegate::<init>(java.security.MessageDigestSpi, String, java.security.Provider) -> void
fifo write: @1699477099753272485 0x7f81e19e1994 485: java.security.MessageDigest::digest() -> byte[]
fifo write: @1699477099753323456 0x7f81e19e1f94 240: java.security.MessageDigest$Delegate::engineDigest() -> byte[]
fifo write: @1699477099753401237 0x7f81e19e2457 798: sun.security.provider.DigestBase::engineDigest() -> byte[]
fifo write: @1699477099753682061 0x7f81e19e2dbc 2731: sun.security.provider.DigestBase::engineDigest(byte[], int, int) -> int
fifo write: @1699477099753752021 0x7f81e19e4527 1975: sun.security.provider.ByteArrayAccess::i2bBig(int[], int, byte[], int, int) -> void
fifo write: @1699477099755051798 0x7f81e19e5597 547: sun.security.provider.DigestBase::<init>(String, int, int) -> void
fifo write: @1699477099755528364 0x7f81e19e5cef 3460: java.security.MessageDigest$Delegate::of(java.security.MessageDigestSpi, String, java.security.Provider) -> java.security.MessageDigest$Delegate
fifo write: @1699477099755588775 0x7f81e19e7537 1042: sun.security.provider.SHA2::<init>(String, int, int[]) -> void
fifo write: @1699477099755645836 0x7f81e19e7eda 1179: sun.security.provider.SHA2$SHA256::<init>() -> void
fifo write: @1699477099755694707 0x7f81e19e8914 191: sun.security.provider.SHA2::resetHashes() -> void
fifo write: @1699477099756405736 0x7f81e19e8f50 4691: sun.security.provider.SHA2::implDigest(byte[], int) -> void
fifo write: @1699477099756667619 0x7f81e19eb454 199: com.google.common.collect.Hashing::smear(int) -> int
fifo write: @1699477099756802691 0x7f81e19eb8dc 960: com.google.common.collect.ImmutableSet$SetBuilderImpl::addDedupedElement(Object) -> void
fifo write: @1699477099756858992 0x7f81e19ec339 395: com.google.common.collect.ImmutableSet$SetBuilderImpl::ensureCapacity(int) -> void
fifo write: @1699477099756946963 0x7f81e19ec9fe 1026: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::add(Object) -> com.google.common.collect.ImmutableSet$SetBuilderImpl
fifo write: @1699477099757008804 0x7f81e19ed579 971: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::ensureTableCapacity(int) -> void
fifo write: @1699477099757119355 0x7f81e19ee061 2240: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::insertInHashTable(Object) -> com.google.common.collect.ImmutableSet$SetBuilderImpl
fifo write: @1699477099758220149 0x7f81e19ef2ff 1995: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477099762017778 0x7f81e8b8cb80 448: I2C/C2I adapters(0xbb6a)
fifo write: @1699477099763097572 0x7f81e19f0634 457: java.util.concurrent.locks.ReentrantLock::unlock() -> void
fifo write: @1699477099763153763 0x7f81e19f0c74 63: java.util.concurrent.atomic.AtomicReferenceArray::length() -> int
fifo write: @1699477099763213694 0x7f81e19f1034 712: java.util.concurrent.locks.ReentrantLock$Sync::tryRelease(int) -> boolean
fifo write: @1699477099763302305 0x7f81e919c5ac 30: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment::access$500(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment) -> java.lang.ref.ReferenceQueue
fifo write: @1699477099763397206 0x7f81e919c8ac 30: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry::access$400(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> com.google.common.collect.MapMakerInternalMap$WeakValueReference
fifo write: @1699477099763476817 0x7f81e19f187f 1815: aew::g(String) -> boolean
fifo write: @1699477099763545548 0x7f81e19f2814 140: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment::self() -> com.google.common.collect.MapMakerInternalMap$Segment
fifo write: @1699477099763678050 0x7f81e19f2f54 84: java.util.IdentityHashMap::nextKeyIndex(int, int) -> int
fifo write: @1699477099763928893 0x7f81e19f339c 1835: java.lang.invoke.VarHandleReferences$Array::runtimeTypeCheck(java.lang.invoke.VarHandleReferences$Array, Object[], Object) -> Object
fifo write: @1699477099763981514 0x7f81e19f4414 255: com.google.common.base.Equivalence::hash(Object) -> int
fifo write: @1699477099764042264 0x7f81e19f4934 428: com.google.common.collect.MapMakerInternalMap::hash(Object) -> int
fifo write: @1699477099764099745 0x7f81e19f4f14 232: com.google.common.base.Equivalence$Equals::doHash(Object) -> int
fifo write: @1699477099764281287 0x7f81e19f57a6 3422: java.lang.invoke.VarHandleReferences$Array::setVolatile(java.lang.invoke.VarHandle, Object, int, Object) -> void
fifo write: @1699477099764406329 0x7f81e19f73ff 4017: java.util.concurrent.atomic.AtomicReferenceArray::set(int, Object) -> void
fifo write: @1699477099764509700 0x7f81e19f95f6 423: java.lang.invoke.LambdaForm$MH.0x00007f8160252c00::linkToTargetMethod(Object, Object) -> int
fifo write: @1699477099764591471 0x7f81e19f9b74 110: com.google.common.collect.MapMakerInternalMap::segmentFor(int) -> com.google.common.collect.MapMakerInternalMap$Segment
fifo write: @1699477099764645372 0x7f81e19fa014 31: ac$a::hashCode(Object) -> int
fifo write: @1699477099764703643 0x7f81e19fa3f4 87: ac$a::equals(Object, Object) -> boolean
fifo write: @1699477099764911336 0x7f81e19fab8a 10601: java.lang.invoke.VarHandleGuards::guard_LIL_V(java.lang.invoke.VarHandle, Object, int, Object, java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477099764989937 0x7f81e19fefa1 2523: java.util.IdentityHashMap::put(Object, Object) -> Object
fifo write: @1699477099765052007 0x7f81e1a00214 230: org.apache.commons.lang3.Validate$$Lambda$397.0x00007f8160257bb0::<init>(String, Object[]) -> void
fifo write: @1699477099765136488 0x7f81e1a00737 1268: org.apache.commons.lang3.Validate::toSupplier(String, Object[]) -> java.util.function.Supplier
fifo write: @1699477099765220270 0x7f81e1a01297 2706: org.apache.commons.lang3.Validate::notNull(Object) -> Object
fifo write: @1699477099765266170 0x7f81e919cecc 6: hm::o() -> hh
fifo write: @1699477099765357081 0x7f81e919d4cc 2: it.unimi.dsi.fastutil.objects.ObjectArrayList::size() -> int
fifo write: @1699477099765430032 0x7f81e1a02497 857: java.util.Objects::requireNonNull(Object, java.util.function.Supplier) -> Object
fifo write: @1699477099765520923 0x7f81e1a02d17 2391: org.apache.commons.lang3.Validate::notNull(Object, String, Object[]) -> Object
fifo write: @1699477099765595444 0x7f81e919d7cc 6: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$LinkedStrongKeyWeakValueEntry::getNext() -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry
fifo write: @1699477099765713786 0x7f81e1a03f7f 6681: aev$a::hashCode() -> int
fifo write: @1699477099765755226 0x7f81e1a06814 137: Record::<init>() -> void
fifo write: @1699477099765892718 0x7f81e1a06f34 583: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry::<init>(Object, int, com.google.common.collect.MapMakerInternalMap$1) -> void
fifo write: @1699477099765952849 0x7f81e1a07614 188: com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry::<init>(Object, int) -> void
fifo write: @1699477099766091331 0x7f81e1a07afa 1815: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment, Object, int, com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry
fifo write: @1699477099766152532 0x7f81e1a08914 489: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry::<init>(Object, int) -> void
fifo write: @1699477099766264193 0x7f81e1a08ed4 175: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry::access$402(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry, com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> com.google.common.collect.MapMakerInternalMap$WeakValueReference
fifo write: @1699477099766360004 0x7f81e1a09334 553: com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl::<init>(java.lang.ref.ReferenceQueue, Object, com.google.common.collect.MapMakerInternalMap$InternalEntry) -> void
fifo write: @1699477099766406775 0x7f81e919dacc 6: hm::c() -> aev
fifo write: @1699477099766462466 0x7f81e1a09ab4 504: java.util.concurrent.locks.ReentrantLock::lock() -> void
fifo write: @1699477099766515026 0x7f81e1a0a134 279: java.util.concurrent.locks.ReentrantLock$Sync::lock() -> void
fifo write: @1699477099766573707 0x7f81e1a0a6f0 784: java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock() -> boolean
fifo write: @1699477099766655788 0x7f81e1a0af7f 1815: aew::h(String) -> boolean
fifo write: @1699477099766713599 0x7f81e1a0bf14 230: aew::<init>(String, String, aew$a) -> void
fifo write: @1699477099766804210 0x7f81e1a0c4a7 1874: aew::c(String, String) -> String
fifo write: @1699477099766917451 0x7f81e1a0d5a7 1874: aew::d(String, String) -> String
fifo write: @1699477099766972652 0x7f81e919ddcc 6: com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry::getKey() -> Object
fifo write: @1699477099767056583 0x7f81e1a0e6bf 1789: aew::<init>(String) -> void
fifo write: @1699477099767135684 0x7f81e1a0f722 2962: aew::b(String, char) -> String[]
fifo write: @1699477099767265026 0x7f81e1a10daf 4235: aew::<init>(String, String) -> void
fifo write: @1699477099767331637 0x7f81e1a12ebf 1636: aew::<init>(String[]) -> void
fifo write: @1699477099767377517 0x7f81e919e0b1 114: aew::b(char) -> boolean
fifo write: @1699477099767430868 0x7f81e1a13d14 324: aev$a::<init>(aew, aew) -> void
fifo write: @1699477099767508999 0x7f81e1a142e3 1206: java.util.concurrent.ConcurrentMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477099767584220 0x7f81e1a14d14 159: com.google.common.collect.MapMakerInternalMap$Segment::getLiveEntry(Object, int) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477099767646931 0x7f81e1a151ba 1452: aev::a(aew, aew) -> aev
fifo write: @1699477099767777303 0x7f81e1a15fd4 1013: com.google.common.collect.MapMakerInternalMap::get(Object) -> Object
fifo write: @1699477099767844983 0x7f81e1a16a1d 182: hm::a(aev, Object, com.mojang.serialization.Lifecycle) -> he$c
fifo write: @1699477099767898004 0x7f81e1a16eb7 412: hm::g(aev) -> void
fifo write: @1699477099767952155 0x7f81e1a17514 185: hm$$Lambda$398.0x00007f816025c2f0::<init>(hm) -> void
fifo write: @1699477099768015596 0x7f81e1a17994 589: hm$$Lambda$398.0x00007f816025c2f0::apply(Object) -> Object
fifo write: @1699477099768133697 0x7f81e1a180f7 3001: com.google.common.collect.MapMakerInternalMap$Segment::getFirst(int) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477099768250139 0x7f81e1a197fc 5455: com.google.common.collect.MapMakerInternalMap$Segment::get(Object, int) -> Object
fifo write: @1699477099768301669 0x7f81e1a1bc74 85: aev::a(aev, aew) -> aev
fifo write: @1699477099768357040 0x7f81e1a1c0c7 299: apc::a(aew) -> apc
fifo write: @1699477099768407041 0x7f81e1a1c614 196: apc::<init>(aew, float, boolean) -> void
fifo write: @1699477099768484042 0x7f81e1a1ca74 27: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$LinkedStrongKeyWeakValueEntry::getNext() -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477099768546052 0x7f81e1a1ce21 26: apd::a(aew) -> apc
fifo write: @1699477099768613783 0x7f81e1a1d216 674: hq::a(hq, aev, Object) -> Object
fifo write: @1699477099768679624 0x7f81e1a1d961 890: apd::a(aew, aew) -> apc
fifo write: @1699477099768752785 0x7f81e1a1e2b4 1133: hq::a(hq, aew, Object) -> Object
fifo write: @1699477099768848536 0x7f81e1a1edb4 1934: apd::a(String) -> apc
fifo write: @1699477099768897627 0x7f81e1a1fe94 230: aev::<init>(aew, aew) -> void
fifo write: @1699477099768953618 0x7f81e1a203c7 356: aev::a(aev$a) -> aev
fifo write: @1699477099769020139 0x7f81e1a209b4 777: aev$$Lambda$389.0x00007f8160248668::apply(Object) -> Object
fifo write: @1699477099769072649 0x7f81e1a21214 167: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment::maybeDrainReferenceQueues() -> void
fifo write: @1699477099769155100 0x7f81e1a2171c 2199: com.google.common.collect.MapMakerInternalMap$Segment::preWriteCleanup() -> void
fifo write: @1699477099769238491 0x7f81e1a22826 1615: com.google.common.collect.MapMakerInternalMap::putIfAbsent(Object, Object) -> Object
fifo write: @1699477099769352763 0x7f81e1a23694 581: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::newEntry(com.google.common.collect.MapMakerInternalMap$Segment, Object, int, com.google.common.collect.MapMakerInternalMap$InternalEntry) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477099769431934 0x7f81e1a23cde 1217: com.google.common.collect.MapMakerInternalMap$Segment::drainValueReferenceQueue(java.lang.ref.ReferenceQueue) -> void
fifo write: @1699477099769516075 0x7f81e1a248b4 981: com.google.common.collect.MapMakerInternalMap$Segment::setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry, Object) -> void
fifo write: @1699477099769611576 0x7f81e1a25194 573: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::setValue(com.google.common.collect.MapMakerInternalMap$Segment, com.google.common.collect.MapMakerInternalMap$InternalEntry, Object) -> void
fifo write: @1699477099769687067 0x7f81e1a2581e 1725: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::find(Object) -> int
fifo write: @1699477099769860459 0x7f81e1a26b1e 10760: hm::a(int, aev, Object, com.mojang.serialization.Lifecycle) -> he$c
fifo write: @1699477099769968301 0x7f81e1a2b15d 1355: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment, com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry, Object) -> void
fifo write: @1699477099770015431 0x7f81e1a2bcf4 486: aew::b(char) -> boolean
fifo write: @1699477099770133753 0x7f81e1a2c405 3918: com.google.common.collect.MapMakerInternalMap$Segment::getEntry(Object, int) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477099770237384 0x7f81e1a2e334 473: he$c::<init>(he$c$a, hh, aev, Object) -> void
fifo write: @1699477099770295795 0x7f81e1a2ea90 1080: java.util.concurrent.locks.ReentrantLock$Sync::tryLock() -> boolean
fifo write: @1699477099770361886 0x7f81e1a2f434 775: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::insert(int, Object, int) -> void
fifo write: @1699477099770420187 0x7f81e1a2fd6e 552: he$c::a(hh, aev) -> he$c
fifo write: @1699477099770499318 0x7f81e1a30514 1072: it.unimi.dsi.fastutil.objects.ObjectArrayList::set(int, Object) -> Object
fifo write: @1699477099770562459 0x7f81e1a31039 329: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::put(Object, int) -> int
fifo write: @1699477099770637779 0x7f81e1a3169d 1912: it.unimi.dsi.fastutil.objects.ObjectArrayList::size(int) -> void
fifo write: @1699477099770717131 0x7f81e1a32674 1900: com.mojang.serialization.Lifecycle::add(com.mojang.serialization.Lifecycle) -> com.mojang.serialization.Lifecycle
fifo write: @1699477099770986074 0x7f81e1a333b4 950: it.unimi.dsi.fastutil.objects.ObjectArrays::newArray(Object[], int) -> Object[]
fifo write: @1699477099771033995 0x7f81e919e4b1 86: aew::c(char) -> boolean
fifo write: @1699477099771100385 0x7f81e1a33cf4 471: it.unimi.dsi.fastutil.objects.ObjectArrays::forceCapacity(Object[], int, int) -> Object[]
fifo write: @1699477099771153546 0x7f81e919e850 35: java.util.concurrent.atomic.AtomicReferenceArray::length() -> int
fifo write: @1699477099771654243 0x7f81e1a3487e 18235: com.google.common.collect.MapMakerInternalMap$Segment::put(Object, int, Object, boolean) -> Object
fifo write: @1699477099771702123 0x7f81e919eb1d 58: com.google.common.collect.MapMakerInternalMap::rehash(int) -> int
fifo write: @1699477099771750564 0x7f81e919eeb1 106: aew::b(char) -> boolean
fifo write: @1699477099772557524 0x7f81e919f2b6 1: java.util.concurrent.atomic.AtomicInteger::incrementAndGet() -> int
fifo write: @1699477099772638405 0x7f81e1a3c614 96: java.util.concurrent.locks.ReentrantLock::tryLock() -> boolean
fifo write: @1699477099772751057 0x7f81e1a3ca99 1928: com.google.common.collect.MapMakerInternalMap$Segment::runLockedCleanup() -> void
fifo write: @1699477099772809137 0x7f81e919f5d4 45: java.util.IdentityHashMap::hash(Object, int) -> int
fifo write: @1699477099773115491 0x7f81e919f913 8: it.unimi.dsi.fastutil.HashCommon::mix(int) -> int
fifo write: @1699477099775205768 0x7f81e919fc33 604: aew::g(String) -> boolean
fifo write: @1699477099776286872 0x7f81e91a088f 5: java.util.IdentityHashMap::nextKeyIndex(int, int) -> int
fifo write: @1699477099776773018 0x7f81e1a3da34 822: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::copy(com.google.common.collect.MapMakerInternalMap$Segment, com.google.common.collect.MapMakerInternalMap$InternalEntry, com.google.common.collect.MapMakerInternalMap$InternalEntry) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477099776973160 0x7f81e1a3e1d4 1230: com.google.common.collect.MapMakerInternalMap$Segment::copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry, com.google.common.collect.MapMakerInternalMap$InternalEntry) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477099777065202 0x7f81e1a3eb74 623: com.google.common.collect.MapMakerInternalMap$Segment::isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> boolean
fifo write: @1699477099777276864 0x7f81e1a3f301 1346: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment, com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry, com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry
fifo write: @1699477099777422446 0x7f81e1a3ff94 861: com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl::copyFor(java.lang.ref.ReferenceQueue, com.google.common.collect.MapMakerInternalMap$InternalEntry) -> com.google.common.collect.MapMakerInternalMap$WeakValueReference
fifo write: @1699477099777492017 0x7f81e91a0bd0 79: java.util.concurrent.atomic.AtomicReferenceArray::get(int) -> Object
fifo write: @1699477099777617319 0x7f81e1a40814 240: java.util.Collections$UnmodifiableCollection::toArray() -> Object[]
fifo write: @1699477099778082145 0x7f81e1a40d9a 2169: jdk.internal.reflect.GeneratedConstructorAccessor1::newInstance(Object[]) -> Object
fifo write: @1699477099778379429 0x7f81e91a0fd3 984: aew::hashCode() -> int
fifo write: @1699477099778535081 0x7f81e1a41f17 245: java.util.stream.ReduceOps$3ReducingSink::accept(Object) -> void
fifo write: @1699477099778711963 0x7f81e1a423d7 1446: java.util.stream.AbstractPipeline::<init>(java.util.stream.AbstractPipeline, int) -> void
fifo write: @1699477099779195449 0x7f81e1a4304d 547: com.mojang.serialization.Codec::of(com.mojang.serialization.Encoder, com.mojang.serialization.Decoder, String) -> com.mojang.serialization.Codec
fifo write: @1699477099779299861 0x7f81e1a43694 440: com.mojang.serialization.Codec$2::<init>(com.mojang.serialization.Decoder, com.mojang.serialization.Encoder, String) -> void
fifo write: @1699477099784572679 0x7f81e1a43c34 683: java.util.zip.ZipEntry::isDirectory() -> boolean
fifo write: @1699477099784655190 0x7f81e1a444b4 343: sun.security.provider.DigestBase::engineReset() -> void
fifo write: @1699477099784740291 0x7f81e1a44b2a 1770: java.util.Hashtable::remove(Object) -> Object
fifo write: @1699477099784952353 0x7f81e1a45994 485: java.security.MessageDigest::reset() -> void
fifo write: @1699477099785027604 0x7f81e1a45f94 240: java.security.MessageDigest$Delegate::engineReset() -> void
fifo write: @1699477099785122256 0x7f81e1a464b7 2011: sun.security.util.ManifestEntryVerifier::<init>(java.util.jar.Manifest, String) -> void
fifo write: @1699477099785256997 0x7f81e1a47739 448: java.util.Base64$Decoder::decode(byte[]) -> byte[]
fifo write: @1699477099785307478 0x7f81e1a47db4 413: java.util.Base64$Decoder::decode(String) -> byte[]
fifo write: @1699477099785382949 0x7f81e1a48414 372: java.util.jar.JarVerifier$VerifierStream::close() -> void
fifo write: @1699477099785573642 0x7f81e1a48ce7 6598: java.util.jar.JarVerifier::beginEntry(java.util.jar.JarEntry, sun.security.util.ManifestEntryVerifier) -> void
fifo write: @1699477099785699653 0x7f81e1a4beb7 1294: java.security.Security::getImpl(String, String, java.security.Provider) -> Object[]
fifo write: @1699477099785793304 0x7f81e1a4c974 71: sun.security.jca.GetInstance::getInstance(String, Class, String, java.security.Provider) -> sun.security.jca.GetInstance$Instance
fifo write: @1699477099785879125 0x7f81e1a4ce67 3594: java.security.MessageDigest::getInstance(String, java.security.Provider) -> java.security.MessageDigest
fifo write: @1699477099785955576 0x7f81e1a4e65c 2041: java.security.Security::getSpiClass(String) -> Class
fifo write: @1699477099786087198 0x7f81e1a4fa94 5626: java.util.Base64$Decoder::decode0(byte[], int, int, byte[]) -> int
fifo write: @1699477099786131199 0x7f81e1a52717 972: sun.security.jca.GetInstance$Instance::toArray() -> Object[]
fifo write: @1699477099786242010 0x7f81e1a52f34 1273: sun.security.util.ManifestEntryVerifier::algsPermittedStatusForSigners(java.util.Map, java.security.CodeSigner[]) -> java.util.Map
fifo write: @1699477099786314751 0x7f81e1a539d4 1361: java.security.CodeSigner::equals(Object) -> boolean
fifo write: @1699477099786410022 0x7f81e1a54661 2225: sun.security.jca.GetInstance::getService(String, String, java.security.Provider) -> java.security.Provider$Service
fifo write: @1699477099786462113 0x7f81e1a55960 1715: String::encode8859_1(byte, byte[], boolean) -> byte[]
fifo write: @1699477099786602725 0x7f81e1a56914 2194: java.util.jar.JarFile::verifiableEntry(java.util.zip.ZipEntry) -> java.util.jar.JarEntry
fifo write: @1699477099786723926 0x7f81e1a57801 1445: java.util.jar.JarVerifier$VerifierStream::<init>(java.util.jar.Manifest, java.util.jar.JarEntry, java.io.InputStream, java.util.jar.JarVerifier) -> void
fifo write: @1699477099786787907 0x7f81e1a5857c 1253: java.util.jar.JarFile$JarFileEntry::realEntry() -> java.util.jar.JarFile$JarFileEntry
fifo write: @1699477099786835438 0x7f81e91a2451 414: java.security.cert.Certificate::equals(Object) -> boolean
fifo write: @1699477099787100381 0x7f81e1a596e7 12266: sun.security.util.ManifestEntryVerifier::setEntry(String, java.util.jar.JarEntry) -> void
fifo write: @1699477099792358789 0x7f81e91a2a59 1582: StringLatin1::regionMatchesCI(byte[], int, byte[], int, int) -> boolean
fifo write: @1699477099794478396 0x7f81e91a3cf9 2247: StringLatin1::toUpperCase(String, byte[], java.util.Locale) -> String
fifo write: @1699477099797068440 0x7f81e1a5ec5c 1528: java.util.jar.JarVerifier::mapSignersToCertArray(java.security.CodeSigner[]) -> java.security.cert.Certificate[]
fifo write: @1699477099798183354 0x7f81e1a5fcaf 9073: sun.security.util.ManifestEntryVerifier::verify(java.util.Hashtable, java.util.Hashtable, java.util.Map) -> java.security.CodeSigner[]
fifo write: @1699477099803649815 0x7f81e91a54a2 1945: String::regionMatches(boolean, int, String, int, int) -> boolean
fifo write: @1699477099815285945 0x7f81e91a6bd4 87: jdk.internal.misc.Unsafe::putIntUnaligned(Object, long, int, boolean) -> void
fifo write: @1699477099820781506 0x7f81e8b8c880 488: I2C/C2I adapters(0xb66bbbbb)
fifo write: @1699477099822993184 0x7f81e8b83da0 27: vtable stub
fifo write: @1699477099826287126 0x7f81e91a6f33 384: sun.net.www.ParseUtil::firstEncodeIndex(String) -> int
fifo write: @1699477099835789149 0x7f81e91a7c7a 2066: jdk.internal.org.objectweb.asm.SymbolTable::put(jdk.internal.org.objectweb.asm.SymbolTable$Entry) -> jdk.internal.org.objectweb.asm.SymbolTable$Entry
fifo write: @1699477099835857160 0x7f81e91a8fcc 6: java.util.stream.Collectors$CollectorImpl::characteristics() -> java.util.Set
fifo write: @1699477099836015022 0x7f81e1a64094 380: java.util.stream.AbstractPipeline::<init>(java.util.Spliterator, int, boolean) -> void
fifo write: @1699477099836081383 0x7f81e1a64714 574: java.util.stream.StreamOpFlag::fromCharacteristics(java.util.Spliterator) -> int
fifo write: @1699477099836164284 0x7f81e91a92cc 6: com.google.common.collect.ImmutableEntry::getKey() -> Object
fifo write: @1699477099836223165 0x7f81e91a95cc 6: com.google.common.collect.ImmutableEntry::getValue() -> Object
fifo write: @1699477099837154337 0x7f81e91a98d5 104: java.util.jar.JarFile::maybeInstantiateVerifier() -> void
fifo write: @1699477099837246548 0x7f81e91a9d94 1435: java.lang.invoke.MemberName::getMethodType() -> java.lang.invoke.MethodType
fifo write: @1699477099838952810 0x7f81e1a64d74 92: com.google.common.collect.AbstractIndexedListIterator::hasNext() -> boolean
fifo write: @1699477099838987580 0x7f81e1a65174 39: Integer::highestOneBit(int) -> int
fifo write: @1699477099839240764 0x7f81e1a65537 1062: dgm::hashCode() -> int
fifo write: @1699477099839571928 0x7f81e1a65f34 687: com.google.common.collect.AbstractIndexedListIterator::next() -> Object
fifo write: @1699477099839662339 0x7f81e1a66674 104: com.google.common.collect.Iterators$ArrayItr::get(int) -> Object
fifo write: @1699477099839708330 0x7f81e1a66a94 765: Boolean::equals(Object) -> boolean
fifo write: @1699477099839744070 0x7f81e1a671f4 39: com.google.common.base.Preconditions::checkPositionIndex(int, int) -> int
fifo write: @1699477099839782221 0x7f81e1a67594 760: Integer::equals(Object) -> boolean
fifo write: @1699477099839840371 0x7f81e1a67d94 955: com.google.common.collect.CollectPreconditions::checkEntryNotNull(Object, Object) -> void
fifo write: @1699477099839884042 0x7f81e1a6889d 421: com.google.common.base.Preconditions::checkPositionIndex(int, int, String) -> int
fifo write: @1699477099839989893 0x7f81e1a68e74 318: com.google.common.base.Preconditions::checkState(boolean) -> void
fifo write: @1699477099840126015 0x7f81e1a69394 47: com.google.common.collect.RegularImmutableMap::get(Object) -> Object
fifo write: @1699477099840168786 0x7f81e1a697d4 827: com.google.common.collect.AbstractIterator::hasNext() -> boolean
fifo write: @1699477099840238746 0x7f81e1a6a0d9 1163: com.google.common.collect.RegularImmutableMap::get(Object, com.google.common.collect.ImmutableMapEntry[], int) -> Object
fifo write: @1699477099840474099 0x7f81e91aaf94 1806: Class::getPackageName() -> String
fifo write: @1699477099840504040 0x7f81e1a6abf4 101: Boolean::hashCode(boolean) -> int
fifo write: @1699477099840547590 0x7f81e1a6b014 243: Boolean::hashCode() -> int
fifo write: @1699477099840586671 0x7f81e1a6b4f4 63: com.google.common.collect.RegularImmutableList::size() -> int
fifo write: @1699477099840652812 0x7f81e1a6b93c 2743: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477099840781683 0x7f81e91ac331 127: java.util.HashMap::hash(Object) -> int
fifo write: @1699477099840816574 0x7f81e1a6cd94 137: com.google.common.collect.AbstractMapEntry::<init>() -> void
fifo write: @1699477099840860864 0x7f81e1a6d1b7 759: java.util.LinkedHashMap::entrySet() -> java.util.Set
fifo write: @1699477099840935015 0x7f81e1a6d994 324: com.google.common.collect.ImmutableEntry::<init>(Object, Object) -> void
fifo write: @1699477099841036137 0x7f81e1a6df14 137: com.google.common.collect.UnmodifiableIterator::<init>() -> void
fifo write: @1699477099841072837 0x7f81e1a6e2f4 63: com.google.common.collect.RegularImmutableMap::size() -> int
fifo write: @1699477099841160878 0x7f81e1a6e6b4 313: com.google.common.collect.AbstractIterator::tryToComputeNext() -> boolean
fifo write: @1699477099841256480 0x7f81e1a6ee1e 3647: com.google.common.collect.StandardTable$ColumnKeyIterator::computeNext() -> Object
fifo write: @1699477099841299790 0x7f81e1a70634 637: com.google.common.collect.AbstractIterator::next() -> Object
fifo write: @1699477099841336831 0x7f81e1a70d34 800: java.util.HashMap$Node::hashCode() -> int
fifo write: @1699477099841406762 0x7f81e1a717f4 297: com.google.common.base.Preconditions::checkArgument(boolean) -> void
fifo write: @1699477099841441332 0x7f81e1a71cf4 39: com.google.common.base.Preconditions::checkElementIndex(int, int) -> int
fifo write: @1699477099841480632 0x7f81e91ac6cc 6: com.google.common.collect.Tables$ImmutableCell::getRowKey() -> Object
fifo write: @1699477099841518023 0x7f81e91ac9b1 125: java.util.Objects::hashCode(Object) -> int
fifo write: @1699477099841573534 0x7f81e1a7209a 1236: com.google.common.base.Preconditions::checkArgument(boolean, String, Object, Object) -> void
fifo write: @1699477099841612824 0x7f81e91acd4c 6: com.google.common.collect.Tables$ImmutableCell::getColumnKey() -> Object
fifo write: @1699477099841651515 0x7f81e91ad04c 6: com.google.common.collect.Tables$ImmutableCell::getValue() -> Object
fifo write: @1699477099841693475 0x7f81e1a72a9d 421: com.google.common.base.Preconditions::checkElementIndex(int, int, String) -> int
fifo write: @1699477099842464735 0x7f81e1a73074 95: java.util.stream.StreamOpFlag::isKnown(int) -> boolean
fifo write: @1699477099842552366 0x7f81e1a73494 450: java.util.stream.ReferencePipeline$3$1::accept(Object) -> void
fifo write: @1699477099842601107 0x7f81e1a73ab4 449: com.google.common.collect.ImmutableMapEntry::<init>(Object, Object) -> void
fifo write: @1699477099842745049 0x7f81e1a74114 450: java.util.Spliterator::getExactSizeIfKnown() -> long
fifo write: @1699477099842785889 0x7f81e1a74734 674: com.google.common.collect.ImmutableMap$Builder::ensureCapacity(int) -> void
fifo write: @1699477099842843410 0x7f81e1a74f6d 574: com.google.common.collect.ImmutableMap::entryOf(Object, Object) -> java.util.Map$Entry
fifo write: @1699477099842912191 0x7f81e1a756d7 1360: com.google.common.collect.ImmutableMap$Builder::put(Object, Object) -> com.google.common.collect.ImmutableMap$Builder
fifo write: @1699477099842999672 0x7f81e1a7629d 477: com.google.common.base.Preconditions::checkPositionIndexes(int, int, int) -> void
fifo write: @1699477099843057053 0x7f81e1a76934 805: java.util.stream.AbstractPipeline::wrapSink(java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477099843168314 0x7f81e1a772a6 1516: com.google.common.collect.RegularImmutableMap::checkNoConflictInKeyBucket(Object, Object, com.google.common.collect.ImmutableMapEntry, boolean) -> com.google.common.collect.ImmutableMapEntry
fifo write: @1699477099843204395 0x7f81e1a78094 234: com.google.common.collect.UnmodifiableListIterator::<init>() -> void
fifo write: @1699477099843243945 0x7f81e1a78534 493: com.google.common.collect.AbstractIndexedListIterator::<init>(int, int) -> void
fifo write: @1699477099843315706 0x7f81e1a78c15 1763: com.google.common.collect.Iterators::forArray(Object[], int, int, int) -> com.google.common.collect.UnmodifiableListIterator
fifo write: @1699477099843362477 0x7f81e1a79b37 659: com.google.common.collect.Iterators$ArrayItr::<init>(Object[], int, int, int) -> void
fifo write: @1699477099843401577 0x7f81e1a7a354 1055: dgj::equals(Object) -> boolean
fifo write: @1699477099843467068 0x7f81e1a7ace3 772: java.util.stream.AbstractPipeline::wrapAndCopyInto(java.util.stream.Sink, java.util.Spliterator) -> java.util.stream.Sink
fifo write: @1699477099843536979 0x7f81e1a7b55c 3297: java.util.stream.AbstractPipeline::sourceSpliterator(int) -> java.util.Spliterator
fifo write: @1699477099843615070 0x7f81e1a7ced7 1873: com.google.common.collect.RegularImmutableMap::makeImmutable(java.util.Map$Entry, Object, Object) -> com.google.common.collect.ImmutableMapEntry
fifo write: @1699477099843663751 0x7f81e1a7dd14 447: com.google.common.collect.ImmutableList::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099843712071 0x7f81e1a7e294 175: com.google.common.collect.ImmutableList::listIterator() -> com.google.common.collect.UnmodifiableListIterator
fifo write: @1699477099843763172 0x7f81e1a7e717 98: com.google.common.collect.RegularImmutableList::listIterator(int) -> com.google.common.collect.UnmodifiableListIterator
fifo write: @1699477099843807302 0x7f81e91ad314 35: com.google.common.base.Preconditions::checkNotNull(Object) -> Object
fifo write: @1699477099843854243 0x7f81e1a7eb14 335: com.google.common.collect.ImmutableMap::entrySet() -> com.google.common.collect.ImmutableSet
fifo write: @1699477099843916064 0x7f81e1a7f11e 1534: java.util.stream.AbstractPipeline::copyInto(java.util.stream.Sink, java.util.Spliterator) -> void
fifo write: @1699477099843966945 0x7f81e1a7fe14 240: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099844016265 0x7f81e1a802b4 495: com.google.common.collect.ObjectArrays::checkElementNotNull(Object, int) -> Object
fifo write: @1699477099844051236 0x7f81e1a80994 234: com.google.common.collect.ImmutableCollection::<init>() -> void
fifo write: @1699477099844090636 0x7f81e1a80e54 1055: dga::equals(Object) -> boolean
fifo write: @1699477099844136257 0x7f81e1a81794 329: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet::iterator() -> java.util.Iterator
fifo write: @1699477099844234828 0x7f81e1a81cb4 584: com.google.common.collect.StandardTable$CellIterator::hasNext() -> boolean
fifo write: @1699477099844275419 0x7f81e1a82394 272: java.util.HashMap::<init>(java.util.Map) -> void
fifo write: @1699477099844434081 0x7f81e1a829b4 3938: java.util.AbstractMap::equals(Object) -> boolean
fifo write: @1699477099844499901 0x7f81e1a84514 167: com.google.common.collect.ImmutableMap::entrySet() -> java.util.Set
fifo write: @1699477099844678714 0x7f81e1a849f3 396: com.google.common.collect.Maps::newHashMap(java.util.Map) -> java.util.HashMap
fifo write: @1699477099844693614 0x7f81e8b83dd0 27: vtable stub
fifo write: @1699477099844747035 0x7f81e1a84fb7 788: dfl::c(dgm, Comparable) -> java.util.Map
fifo write: @1699477099844783435 0x7f81e1a857f4 1412: java.util.AbstractMap::hashCode() -> int
fifo write: @1699477099844797055 0x7f81e8b83e00 168: itable stub
fifo write: @1699477099844863036 0x7f81e1a8638b 1286: com.google.common.collect.StandardTable::put(Object, Object, Object) -> Object
fifo write: @1699477099844931587 0x7f81e1a86fae 1391: com.google.common.collect.HashBasedTable::put(Object, Object, Object) -> Object
fifo write: @1699477099844972398 0x7f81e91ad64f 76: com.google.common.collect.Iterators$ArrayItr::get(int) -> Object
fifo write: @1699477099845012618 0x7f81e1a87b94 47: com.google.common.collect.StandardTable$CellIterator::next() -> Object
fifo write: @1699477099845067659 0x7f81e1a87f94 369: com.google.common.collect.Tables$ImmutableCell::<init>(Object, Object, Object) -> void
fifo write: @1699477099845133600 0x7f81e1a885cd 476: com.google.common.collect.Tables::immutableCell(Object, Object, Object) -> com.google.common.collect.Table$Cell
fifo write: @1699477099845185510 0x7f81e1a88cde 1274: com.google.common.collect.StandardTable::getOrCreate(Object) -> java.util.Map
fifo write: @1699477099845221391 0x7f81e1a89714 137: com.google.common.collect.Tables$AbstractCell::<init>() -> void
fifo write: @1699477099845285402 0x7f81e1a89bf9 3238: com.google.common.collect.StandardTable$CellIterator::next() -> com.google.common.collect.Table$Cell
fifo write: @1699477099845339412 0x7f81e1a8b1f9 1189: com.google.common.collect.ArrayTable::set(int, int, Object) -> Object
fifo write: @1699477099845409383 0x7f81e1a8bdcb 2048: com.google.common.collect.ArrayTable::put(Object, Object, Object) -> Object
fifo write: @1699477099845967610 0x7f81e1a8ce14 167: java.util.stream.ReferencePipeline$Head::<init>(java.util.Spliterator, int, boolean) -> void
fifo write: @1699477099846011251 0x7f81e1a8d214 31: java.util.stream.ReferencePipeline::<init>(java.util.Spliterator, int, boolean) -> void
fifo write: @1699477099846068642 0x7f81e1a8d646 826: java.util.stream.StreamSupport::stream(java.util.Spliterator, boolean) -> java.util.stream.Stream
fifo write: @1699477099846183163 0x7f81e1a8e29e 1394: java.util.stream.AbstractPipeline::evaluate(java.util.stream.TerminalOp) -> Object
fifo write: @1699477099847515900 0x7f81e91adccc 6: java.util.stream.ReduceOps$Box::get() -> Object
fifo write: @1699477099847729273 0x7f81e91ae2cc 6: java.util.stream.Collectors$CollectorImpl::accumulator() -> java.util.function.BiConsumer
fifo write: @1699477099847774464 0x7f81e91ae5cc 6: java.util.stream.Collectors$CollectorImpl::combiner() -> java.util.function.BinaryOperator
fifo write: @1699477099847817834 0x7f81e91ae8cc 6: java.util.stream.Collectors$CollectorImpl::supplier() -> java.util.function.Supplier
fifo write: @1699477099847853645 0x7f81e1a8ee94 243: com.google.common.collect.TransformedIterator::hasNext() -> boolean
fifo write: @1699477099847948276 0x7f81e1a8f314 234: it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap::<init>() -> void
fifo write: @1699477099847984726 0x7f81e1a8f794 137: it.unimi.dsi.fastutil.objects.AbstractObject2ObjectFunction::<init>() -> void
fifo write: @1699477099848022727 0x7f81e1a8fbb7 796: com.mojang.serialization.CompressorHolder::<init>() -> void
fifo write: @1699477099848059257 0x7f81e1a90434 462: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::<init>() -> void
fifo write: @1699477099848118278 0x7f81e91aebcc 2: java.util.Spliterators$ArraySpliterator::characteristics() -> int
fifo write: @1699477099848479763 0x7f81e91aee99 54: java.util.HashMap::tableSizeFor(int) -> int
fifo write: @1699477099849336994 0x7f81e1a90a94 31: java.util.stream.ReferencePipeline::<init>(java.util.stream.AbstractPipeline, int) -> void
fifo write: @1699477099849386185 0x7f81e1a90eb4 875: java.util.stream.Sink$ChainedReference::<init>(java.util.stream.Sink) -> void
fifo write: @1699477099849432445 0x7f81e1a916dd 1187: java.util.regex.Matcher::match(int, int) -> boolean
fifo write: @1699477099849569797 0x7f81e91af5d3 3180: java.util.HashMap::putMapEntries(java.util.Map, boolean) -> void
fifo write: @1699477099849606157 0x7f81e1a92314 240: java.util.stream.Sink$ChainedReference::end() -> void
fifo write: @1699477099849643748 0x7f81e91b174c 6: com.mojang.datafixers.util.Pair::getSecond() -> Object
fifo write: @1699477099849680648 0x7f81e91b1a4c 6: com.mojang.datafixers.util.Pair::getFirst() -> Object
fifo write: @1699477099850104684 0x7f81e1a92794 328: com.google.common.collect.ImmutableList::<init>() -> void
fifo write: @1699477099850223385 0x7f81e1a92cf9 985: java.util.ArrayList::<init>(java.util.Collection) -> void
fifo write: @1699477099850278766 0x7f81e1a93757 876: com.google.common.collect.CollectCollectors$$Lambda$270.0x00007f81601aab38::accept(Object, Object) -> void
fifo write: @1699477099850356257 0x7f81e1a94014 514: com.google.common.collect.CollectCollectors::lambda$toImmutableMap$7(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableMap$Builder, Object) -> void
fifo write: @1699477099850600840 0x7f81e1a94694 523: java.util.LinkedHashMap$LinkedValueIterator::<init>(java.util.LinkedHashMap) -> void
fifo write: @1699477099850648281 0x7f81e1a94d8b 616: java.util.LinkedHashMap$LinkedValues::iterator() -> java.util.Iterator
fifo write: @1699477099850970885 0x7f81e1a955a5 4209: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477099851011956 0x7f81e1a97414 116: java.util.LinkedHashMap$LinkedKeyIterator::next() -> Object
fifo write: @1699477099851203348 0x7f81e91b1dba 5867: jdk.internal.org.objectweb.asm.SymbolTable::addConstantUtf8(String) -> int
fifo write: @1699477099851242868 0x7f81e91b54cc 6: com.google.common.collect.Maps$KeySet::map() -> java.util.Map
fifo write: @1699477099851284369 0x7f81e1a97814 432: com.google.common.collect.TransformedIterator::next() -> Object
fifo write: @1699477099851330640 0x7f81e1a97db4 527: com.google.common.collect.CollectPreconditions::checkNonnegative(int, String) -> int
fifo write: @1699477099851381660 0x7f81e91b57cc 6: com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry::getNextInKeyBucket() -> com.google.common.collect.ImmutableMapEntry
fifo write: @1699477099851427621 0x7f81e1a98597 347: com.google.common.collect.Maps::newLinkedHashMapWithExpectedSize(int) -> java.util.LinkedHashMap
fifo write: @1699477099851463761 0x7f81e1a98b34 424: com.google.common.collect.Maps::capacity(int) -> int
fifo write: @1699477099851509822 0x7f81e1a99157 535: com.google.common.collect.HashBasedTable$Factory::get() -> java.util.Map
fifo write: @1699477099851556933 0x7f81e1a99857 648: com.google.common.collect.HashBasedTable$Factory::get() -> Object
fifo write: @1699477099851677544 0x7f81e1a9a014 31: com.google.common.collect.ImmutableMap$Builder::buildOrThrow() -> com.google.common.collect.ImmutableMap
fifo write: @1699477099851714835 0x7f81e1a9a417 357: com.google.common.collect.ImmutableMap$Builder::<init>(int) -> void
fifo write: @1699477099851748295 0x7f81e1a9a994 255: java.util.AbstractCollection::isEmpty() -> boolean
fifo write: @1699477099851781605 0x7f81e1a9ae94 137: com.google.common.collect.ImmutableMap::<init>() -> void
fifo write: @1699477099851905987 0x7f81e1a9b274 85: com.google.common.collect.ImmutableList::asImmutableList(Object[]) -> com.google.common.collect.ImmutableList
fifo write: @1699477099852123620 0x7f81e91b5dcc 6: dga::a() -> java.util.Collection
fifo write: @1699477099852159690 0x7f81e91b60cc 6: dgj::a() -> java.util.Collection
fifo write: @1699477099852275522 0x7f81e1a9b737 2763: com.google.common.collect.ImmutableList::asImmutableList(Object[], int) -> com.google.common.collect.ImmutableList
fifo write: @1699477099852427254 0x7f81e91b63b9 4: com.google.common.collect.AbstractIndexedListIterator::hasNext() -> boolean
fifo write: @1699477099852674377 0x7f81e1a9cce6 5553: com.google.common.collect.ImmutableMap$Builder::build(boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099852711807 0x7f81e91b66d0 35: com.google.common.collect.RegularImmutableList::size() -> int
fifo write: @1699477099852767538 0x7f81e1a9f274 93: com.google.common.collect.Iterators::forArray(Object[]) -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099852804039 0x7f81e1a9f694 328: com.google.common.collect.Sets$ImprovedAbstractSet::<init>() -> void
fifo write: @1699477099852854569 0x7f81e1a9fb94 190: com.google.common.collect.RegularImmutableSet::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099852899430 0x7f81e1aa0014 290: com.google.common.collect.RegularImmutableSet::iterator() -> java.util.Iterator
fifo write: @1699477099852953621 0x7f81e1aa054a 431: com.google.common.collect.Maps::immutableEntry(Object, Object) -> java.util.Map$Entry
fifo write: @1699477099853125763 0x7f81e1aa0b74 90: java.util.ImmutableCollections$SetN$SetNIterator::hasNext() -> boolean
fifo write: @1699477099853316215 0x7f81e91b69f3 495: dgm::hashCode() -> int
fifo write: @1699477099853524548 0x7f81e91b724c 6: java.util.stream.Collectors$CollectorImpl::finisher() -> java.util.function.Function
fifo write: @1699477099853582579 0x7f81e1aa12f4 91: com.google.common.collect.Iterators$9::hasNext() -> boolean
fifo write: @1699477099853663470 0x7f81e1aa1714 354: dfk$$Lambda$510.0x00007f8160301c08::apply(Object) -> Object
fifo write: @1699477099853709390 0x7f81e1aa1c14 337: dfk$$Lambda$509.0x00007f81603019c8::apply(Object) -> Object
fifo write: @1699477099853749181 0x7f81e1aa2154 986: com.google.common.collect.AbstractMapEntry::hashCode() -> int
fifo write: @1699477099854099795 0x7f81e1aa29d4 205: com.google.common.collect.ImmutableMapEntry::createEntryArray(int) -> com.google.common.collect.ImmutableMapEntry[]
fifo write: @1699477099854261717 0x7f81e1aa2e14 362: com.google.common.collect.SingletonImmutableBiMap::get(Object) -> Object
fifo write: @1699477099854321388 0x7f81e1aa3394 334: com.google.common.collect.Iterators$9::<init>(Object) -> void
fifo write: @1699477099854377119 0x7f81e1aa38c7 441: com.google.common.collect.Iterators::singletonIterator(Object) -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099854419019 0x7f81e1aa3e94 334: com.google.common.collect.Iterators$9::next() -> Object
fifo write: @1699477099854489970 0x7f81e1aa43f4 633: java.util.Arrays::fill(Object[], Object) -> void
fifo write: @1699477099854576732 0x7f81e1aa4a94 371: com.google.common.collect.StandardTable$RowMap$EntrySet$1::apply(Object) -> Object
fifo write: @1699477099854666143 0x7f81e1aa53d7 931: com.google.common.collect.Maps$3::transform(Object) -> Object
fifo write: @1699477099854716893 0x7f81e1aa5d14 258: com.google.common.collect.StandardTable$RowMap$EntrySet$1::apply(Object) -> java.util.Map
fifo write: @1699477099854771474 0x7f81e1aa6237 807: com.google.common.collect.Maps$3::transform(Object) -> java.util.Map$Entry
fifo write: @1699477099854808065 0x7f81e1aa6a94 234: com.google.common.collect.Maps$IteratorBasedAbstractMap::<init>() -> void
fifo write: @1699477099854860285 0x7f81e1aa6f34 619: com.google.common.collect.SingletonImmutableSet::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099854909086 0x7f81e1aa7614 232: com.google.common.collect.Maps$1::transform(java.util.Map$Entry) -> Object
fifo write: @1699477099854955046 0x7f81e1aa7ab4 618: com.google.common.collect.Maps$1::transform(Object) -> Object
fifo write: @1699477099855010767 0x7f81e1aa815d 1180: com.google.common.collect.HashBasedTable::row(Object) -> java.util.Map
fifo write: @1699477099855068418 0x7f81e1aa8bb4 891: com.google.common.collect.StandardTable$Row::<init>(com.google.common.collect.StandardTable, Object) -> void
fifo write: @1699477099855121589 0x7f81e1aa94b1 996: com.google.common.collect.StandardTable::row(Object) -> java.util.Map
fifo write: @1699477099855168709 0x7f81e1aa9db7 716: com.google.common.collect.SingletonImmutableSet::iterator() -> java.util.Iterator
fifo write: @1699477099855231230 0x7f81e91b7b7a 719: java.util.LinkedHashMap::get(Object) -> Object
fifo write: @1699477099855287171 0x7f81e1aaa554 809: com.google.common.collect.ObjectArrays::checkElementsNotNull(Object[], int) -> Object[]
fifo write: @1699477099855346601 0x7f81e1aaaf19 594: com.google.common.collect.ImmutableList::construct(Object[]) -> com.google.common.collect.ImmutableList
fifo write: @1699477099855397772 0x7f81e1aab679 380: com.google.common.collect.ObjectArrays::checkElementsNotNull(Object[]) -> Object[]
fifo write: @1699477099855446013 0x7f81e1aabd34 2164: java.util.AbstractCollection::toArray() -> Object[]
fifo write: @1699477099855481073 0x7f81e1aacc94 328: com.google.common.collect.ImmutableSet::<init>() -> void
fifo write: @1699477099855621635 0x7f81e1aad234 2194: com.google.common.collect.ImmutableList::copyOf(java.util.Collection) -> com.google.common.collect.ImmutableList
fifo write: @1699477099855677616 0x7f81e91b86d0 642: java.util.HashMap::containsKey(Object) -> boolean
fifo write: @1699477099855795707 0x7f81e1aae314 137: com.google.common.collect.AbstractTable::<init>() -> void
fifo write: @1699477099855930479 0x7f81e1aae7ee 2345: com.google.common.collect.Maps::indexMap(java.util.Collection) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099856132202 0x7f81e91b90cc 6: eal::g() -> eam
fifo write: @1699477099857052053 0x7f81e1aaf994 207: java.util.stream.ReferencePipeline$StatelessOp::<init>(java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int) -> void
fifo write: @1699477099857205545 0x7f81e1aafe14 522: com.google.common.collect.StandardTable$TableSet::<init>(com.google.common.collect.StandardTable) -> void
fifo write: @1699477099857271326 0x7f81e1ab0434 616: com.google.common.collect.StandardTable$TableSet::<init>(com.google.common.collect.StandardTable, com.google.common.collect.StandardTable$1) -> void
fifo write: @1699477099857314807 0x7f81e1ab0b14 335: com.google.common.collect.Maps$ViewCachingAbstractMap::entrySet() -> java.util.Set
fifo write: @1699477099857362658 0x7f81e1ab10b4 875: com.google.common.collect.TransformedIterator::<init>(java.util.Iterator) -> void
fifo write: @1699477099857425228 0x7f81e1ab1894 31: com.google.common.collect.StandardTable$ColumnKeyIterator::<init>(com.google.common.collect.StandardTable, com.google.common.collect.StandardTable$1) -> void
fifo write: @1699477099857474319 0x7f81e1ab1c94 527: com.google.common.collect.StandardTable$ColumnKeySet::iterator() -> java.util.Iterator
fifo write: @1699477099857533830 0x7f81e1ab2354 1310: com.google.common.collect.ImmutableList::copyOf(Iterable) -> com.google.common.collect.ImmutableList
fifo write: @1699477099857575890 0x7f81e1ab2def 198: com.google.common.collect.StandardTable::createColumnKeyIterator() -> java.util.Iterator
fifo write: @1699477099857618891 0x7f81e91b9694 35: java.util.IdentityHashMap::maskNull(Object) -> Object
fifo write: @1699477099857692332 0x7f81e1ab3274 144: com.google.common.collect.Iterators::emptyIterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099857727682 0x7f81e1ab3694 296: com.google.common.collect.AbstractIterator::<init>() -> void
fifo write: @1699477099857768233 0x7f81e1ab3b94 199: java.util.Collection::stream() -> java.util.stream.Stream
fifo write: @1699477099857826533 0x7f81e1ab4099 1848: com.google.common.collect.StandardTable$ColumnKeyIterator::<init>(com.google.common.collect.StandardTable) -> void
fifo write: @1699477099857886944 0x7f81e1ab4e94 328: com.google.common.collect.RegularImmutableMap::<init>(java.util.Map$Entry[], com.google.common.collect.ImmutableMapEntry[], int) -> void
fifo write: @1699477099857925715 0x7f81e1ab5414 585: com.google.common.collect.Hashing::closedTableSize(int, double) -> int
fifo write: @1699477099859804399 0x7f81e8b83eb8 168: itable stub
fifo write: @1699477099859890930 0x7f81e91ba2d3 240: jdk.internal.org.objectweb.asm.ByteVector::putInt(int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099861375589 0x7f81e1ab5b14 185: java.util.stream.ReduceOps$ReduceOp::<init>(java.util.stream.StreamShape) -> void
fifo write: @1699477099861442190 0x7f81e1ab5fb4 878: java.util.stream.ReduceOps$ReduceOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477099861502521 0x7f81e91bae78 543: java.lang.invoke.MethodType::equals(Object) -> boolean
fifo write: @1699477099861536571 0x7f81e1ab6794 137: java.util.stream.ReduceOps$Box::<init>() -> void
fifo write: @1699477099861625153 0x7f81e1ab6b94 365: java.util.stream.Collectors$CollectorImpl::<init>(java.util.function.Supplier, java.util.function.BiConsumer, java.util.function.BinaryOperator, java.util.function.Function, java.util.Set) -> void
fifo write: @1699477099861714254 0x7f81e1ab7214 47: java.util.stream.ReduceOps$3::makeSink() -> java.util.stream.ReduceOps$AccumulatingSink
fifo write: @1699477099861803345 0x7f81e1ab7614 679: java.util.stream.ReduceOps$3::<init>(java.util.stream.StreamShape, java.util.function.BinaryOperator, java.util.function.BiConsumer, java.util.function.Supplier, java.util.stream.Collector) -> void
fifo write: @1699477099861839115 0x7f81e1ab7d34 464: java.util.stream.ReduceOps$3::getOpFlags() -> int
fifo write: @1699477099861903166 0x7f81e1ab83d7 1916: java.util.stream.ReduceOps::makeRef(java.util.stream.Collector) -> java.util.stream.TerminalOp
fifo write: @1699477099861972127 0x7f81e1ab9294 534: java.util.stream.ReduceOps$3ReducingSink::<init>(java.util.function.Supplier, java.util.function.BiConsumer, java.util.function.BinaryOperator) -> void
fifo write: @1699477099862008597 0x7f81e1ab9894 298: java.util.stream.ReduceOps$3ReducingSink::begin(long) -> void
fifo write: @1699477099862057568 0x7f81e1ab9e0b 662: java.util.stream.ReduceOps$3::makeSink() -> java.util.stream.ReduceOps$3ReducingSink
fifo write: @1699477099862127059 0x7f81e1aba621 2886: java.util.stream.ReferencePipeline::collect(java.util.stream.Collector) -> Object
fifo write: @1699477099862431113 0x7f81e1abbcda 893: com.mojang.serialization.MapCodec::<init>() -> void
fifo write: @1699477099862529654 0x7f81e1abc594 422: com.google.common.collect.ImmutableSet$CachingAsList::<init>() -> void
fifo write: @1699477099862597325 0x7f81e1abcb59 1377: dgh::equals(Object) -> boolean
fifo write: @1699477099863356545 0x7f81e91bb7cc 6: java.util.AbstractMap$SimpleImmutableEntry::getKey() -> Object
fifo write: @1699477099863460986 0x7f81e1abda14 167: com.google.common.collect.ImmutableList::iterator() -> java.util.Iterator
fifo write: @1699477099863490467 0x7f81e1abde94 39: java.util.regex.Matcher::matches() -> boolean
fifo write: @1699477099863813871 0x7f81e1abe4ad 7023: com.google.common.collect.RegularImmutableMap::fromEntryArrayCheckingBucketOverflow(int, java.util.Map$Entry[], boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099863867631 0x7f81e91bbacc 6: dgh::a() -> java.util.Collection
fifo write: @1699477099863951303 0x7f81e1ac14ca 337: com.mojang.datafixers.util.Pair::of(Object, Object) -> com.mojang.datafixers.util.Pair
fifo write: @1699477099864011113 0x7f81e1ac1a94 230: com.mojang.datafixers.util.Pair::<init>(Object, Object) -> void
fifo write: @1699477099864138005 0x7f81e1ac1fd7 1568: dfk::a(java.util.List, dgm, Comparable) -> java.util.List
fifo write: @1699477099864215866 0x7f81e1ac2e17 1954: dfk$$Lambda$534.0x00007f816030aae0::apply(Object) -> Object
fifo write: @1699477099864308937 0x7f81e1ac3e97 2237: com.google.common.collect.Lists::newArrayList(Iterable) -> java.util.ArrayList
fifo write: @1699477099864400748 0x7f81e1ac4f02 2918: java.util.regex.Pattern$Dollar::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099864469639 0x7f81e1ac63f4 23: com.google.common.collect.ImmutableMap::toImmutableMap(java.util.function.Function, java.util.function.Function) -> java.util.stream.Collector
fifo write: @1699477099864563890 0x7f81e1ac6794 230: com.google.common.collect.CollectCollectors$$Lambda$270.0x00007f81601aab38::<init>(java.util.function.Function, java.util.function.Function) -> void
fifo write: @1699477099864633661 0x7f81e1ac6ceb 550: com.google.common.collect.CollectCollectors$$Lambda$269.0x00007f81601aa918::get() -> Object
fifo write: @1699477099864809654 0x7f81e1ac74bf 3712: java.util.stream.Collector::of(java.util.function.Supplier, java.util.function.BiConsumer, java.util.function.BinaryOperator, java.util.function.Function, java.util.stream.Collector$Characteristics[]) -> java.util.stream.Collector
fifo write: @1699477099864858734 0x7f81e1ac8ef4 90: java.util.HashMap::isEmpty() -> boolean
fifo write: @1699477099864913095 0x7f81e1ac9317 453: com.google.common.collect.ImmutableMap$Builder::<init>() -> void
fifo write: @1699477099864977496 0x7f81e1ac9914 191: com.google.common.collect.ImmutableMap$Builder::build() -> com.google.common.collect.ImmutableMap
fifo write: @1699477099865044427 0x7f81e1ac9db4 558: com.google.common.collect.CollectCollectors$$Lambda$272.0x00007f81601aafb8::apply(Object) -> Object
fifo write: @1699477099865099607 0x7f81e1aca434 1059: com.google.common.collect.Sets::hashCodeImpl(java.util.Set) -> int
fifo write: @1699477099865166168 0x7f81e1acad99 415: dfk$$Lambda$508.0x00007f8160301558::accept(Object) -> void
fifo write: @1699477099865223409 0x7f81e1acb314 140: com.google.common.collect.HashBasedTable$Factory::<init>(int) -> void
fifo write: @1699477099865362911 0x7f81e1acb797 2504: dfk::a(dfk$b, Object, com.mojang.serialization.MapCodec, java.util.Map, java.util.List, java.util.List) -> void
fifo write: @1699477099865439722 0x7f81e1acc894 418: com.google.common.collect.HashBasedTable::<init>(java.util.Map, com.google.common.collect.HashBasedTable$Factory) -> void
fifo write: @1699477099865528163 0x7f81e1accf87 3596: com.google.common.collect.CollectCollectors::toImmutableMap(java.util.function.Function, java.util.function.Function) -> java.util.stream.Collector
fifo write: @1699477099865583494 0x7f81e1ace712 1304: com.google.common.collect.HashBasedTable::create() -> com.google.common.collect.HashBasedTable
fifo write: @1699477099865619304 0x7f81e1acf214 199: com.google.common.collect.ImmutableMap::hashCode() -> int
fifo write: @1699477099865711875 0x7f81e1acf694 275: dfl::<init>(Object, com.google.common.collect.ImmutableMap, com.mojang.serialization.MapCodec) -> void
fifo write: @1699477099865758246 0x7f81e1acfc14 428: java.util.LinkedHashMap$LinkedKeySet::<init>(java.util.LinkedHashMap) -> void
fifo write: @1699477099865800746 0x7f81e1ad01b7 727: java.util.LinkedHashMap::keySet() -> java.util.Set
fifo write: @1699477099865847117 0x7f81e1ad098b 616: java.util.LinkedHashMap$LinkedKeySet::iterator() -> java.util.Iterator
fifo write: @1699477099865891518 0x7f81e91bc3d0 163: com.google.common.collect.AbstractIndexedListIterator::next() -> Object
fifo write: @1699477099865939038 0x7f81e1ad1094 523: java.util.LinkedHashMap$LinkedKeyIterator::<init>(java.util.LinkedHashMap) -> void
fifo write: @1699477099865984929 0x7f81e91bc8cc 44: csv::k(dfj) -> void
fifo write: @1699477099866204102 0x7f81e1ad1a07 8773: dfl::a(java.util.Map) -> void
fifo write: @1699477099866271203 0x7f81e1ad52f4 132: java.util.ArrayList$ArrayListSpliterator::getFence() -> int
fifo write: @1699477099866499695 0x7f81e1ad57eb 354: java.util.ArrayList::spliterator() -> java.util.Spliterator
fifo write: @1699477099866580067 0x7f81e1ad5d14 251: java.util.ArrayList$ArrayListSpliterator::<init>(java.util.ArrayList, int, int, int) -> void
fifo write: @1699477099866644807 0x7f81e1ad6214 237: java.util.ArrayList$ArrayListSpliterator::estimateSize() -> long
fifo write: @1699477099866742009 0x7f81e1ad6714 31: dfj::<init>(csv, com.google.common.collect.ImmutableMap, com.mojang.serialization.MapCodec) -> void
fifo write: @1699477099866835210 0x7f81e1ad6b5e 1309: java.util.ArrayList$ArrayListSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477099866951981 0x7f81e1ad787a 452: csv$$Lambda$506.0x00007f81602fec68::create(Object, com.google.common.collect.ImmutableMap, com.mojang.serialization.MapCodec) -> Object
fifo write: @1699477099867047303 0x7f81e1ad7e74 184: com.google.common.primitives.Ints::saturatedCast(long) -> int
fifo write: @1699477099867110773 0x7f81e91bcc50 35: com.google.common.collect.RegularImmutableMap::size() -> int
fifo write: @1699477099867197704 0x7f81e1ad8314 428: com.google.common.collect.StandardTable$RowMap::<init>(com.google.common.collect.StandardTable) -> void
fifo write: @1699477099867257405 0x7f81e1ad8894 234: com.google.common.collect.Maps$ViewCachingAbstractMap::<init>() -> void
fifo write: @1699477099867384837 0x7f81e1ad8d99 2528: dfi$a::<init>(csv, com.google.common.collect.ImmutableMap, com.mojang.serialization.MapCodec) -> void
fifo write: @1699477099867461578 0x7f81e1ada38f 535: com.google.common.collect.StandardTable::createRowMap() -> java.util.Map
fifo write: @1699477099867545059 0x7f81e1ada9d4 1158: com.google.common.collect.Maps$KeySet::<init>(java.util.Map) -> void
fifo write: @1699477099867611180 0x7f81e1adb406 684: com.google.common.collect.Maps$ViewCachingAbstractMap::createKeySet() -> java.util.Set
fifo write: @1699477099867674581 0x7f81e1adbbda 1137: com.google.common.collect.Maps$ViewCachingAbstractMap::keySet() -> java.util.Set
fifo write: @1699477099867753812 0x7f81e1adc637 907: com.google.common.collect.StandardTable$ColumnKeySet::<init>(com.google.common.collect.StandardTable, com.google.common.collect.StandardTable$1) -> void
fifo write: @1699477099867812102 0x7f81e1adceb7 813: com.google.common.collect.StandardTable$ColumnKeySet::<init>(com.google.common.collect.StandardTable) -> void
fifo write: @1699477099867847663 0x7f81e1add694 400: java.util.AbstractMap::size() -> int
fifo write: @1699477099867883573 0x7f81e1addc14 272: com.google.common.collect.Maps$KeySet::size() -> int
fifo write: @1699477099867940444 0x7f81e1ade18a 927: com.google.common.collect.StandardTable$RowMap::createEntrySet() -> java.util.Set
fifo write: @1699477099868003655 0x7f81e1adea37 825: com.google.common.collect.StandardTable$RowMap$EntrySet::<init>(com.google.common.collect.StandardTable$RowMap) -> void
fifo write: @1699477099868046755 0x7f81e1adf254 1255: dgm::equals(Object) -> boolean
fifo write: @1699477099868094996 0x7f81e91bcf4c 6: dgm::f() -> String
fifo write: @1699477099868139957 0x7f81e1adfd14 392: dfi$d$$Lambda$496.0x00007f81602f6a80::applyAsInt(Object) -> int
fifo write: @1699477099868187307 0x7f81e91bd231 62: com.google.common.collect.CollectPreconditions::checkEntryNotNull(Object, Object) -> void
fifo write: @1699477099868278438 0x7f81e91bd550 39: java.util.LinkedHashMap::afterNodeInsertion(boolean) -> void
fifo write: @1699477099868692304 0x7f81e1ae0514 394: dfi$d$$Lambda$537.0x00007f81603111b8::apply(Object) -> Object
fifo write: @1699477099868749395 0x7f81e1ae0a14 143: java.util.stream.ForEachOps$ForEachOp::<init>(boolean) -> void
fifo write: @1699477099868806405 0x7f81e1ae0e14 105: java.util.stream.ForEachOps$ForEachOp::getOpFlags() -> int
fifo write: @1699477099868885626 0x7f81e1ae1297 902: java.util.stream.ForEachOps::makeRef(java.util.function.Consumer, boolean) -> java.util.stream.TerminalOp
fifo write: @1699477099868969227 0x7f81e1ae1b37 818: java.util.stream.ForEachOps$ForEachOp$OfRef::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477099869017678 0x7f81e1ae2294 285: java.util.stream.ForEachOps$ForEachOp$OfRef::<init>(java.util.function.Consumer, boolean) -> void
fifo write: @1699477099869076309 0x7f81e1ae27d7 1034: java.util.stream.ReferencePipeline::forEach(java.util.function.Consumer) -> void
fifo write: @1699477099869123629 0x7f81e91bd832 69: com.google.common.base.Preconditions::checkPositionIndex(int, int, String) -> int
fifo write: @1699477099869185020 0x7f81e1ae3137 721: java.util.stream.ForEachOps$ForEachOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Void
fifo write: @1699477099869460944 0x7f81e1ae385a 893: com.mojang.serialization.MapDecoder$Implementation::<init>() -> void
fifo write: @1699477099869535575 0x7f81e1ae4114 240: java.util.stream.Sink$ChainedReference::begin(long) -> void
fifo write: @1699477099869572655 0x7f81e1ae4594 474: java.util.stream.AbstractPipeline::close() -> void
fifo write: @1699477099869830988 0x7f81e91bdb3d 366: com.google.common.collect.RegularImmutableMap::get(Object, com.google.common.collect.ImmutableMapEntry[], int) -> Object
fifo write: @1699477099870030941 0x7f81e91be255 166: dga::equals(Object) -> boolean
fifo write: @1699477099870077972 0x7f81e1ae4bb9 902: com.google.common.collect.Iterators::size(java.util.Iterator) -> int
fifo write: @1699477099870403896 0x7f81e1ae5434 516: com.google.common.collect.ImmutableMapEntrySet::<init>() -> void
fifo write: @1699477099870692620 0x7f81e1ae5a3a 1003: com.google.common.collect.StandardTable::rowMap() -> java.util.Map
fifo write: @1699477099870818421 0x7f81e1ae635a 1245: com.google.common.collect.StandardTable::columnKeySet() -> java.util.Set
fifo write: @1699477099870982933 0x7f81e1ae6e79 1692: com.google.common.collect.AbstractTable::putAll(com.google.common.collect.Table) -> void
fifo write: @1699477099871137225 0x7f81e91bead4 443: com.google.common.collect.RegularImmutableMap::get(Object) -> Object
fifo write: @1699477099871363678 0x7f81e1ae7da1 4730: com.google.common.collect.ArrayTable::<init>(Iterable, Iterable) -> void
fifo write: @1699477099871547481 0x7f81e1ae9d5a 893: com.mojang.serialization.MapEncoder$Implementation::<init>() -> void
fifo write: @1699477099871622962 0x7f81e1aea614 207: java.util.Spliterators$ArraySpliterator::<init>(Object[], int, int, int) -> void
fifo write: @1699477099871665362 0x7f81e1aeaa74 5: java.util.Spliterators$ArraySpliterator::estimateSize() -> long
fifo write: @1699477099871719543 0x7f81e91bf25c 55: Integer::equals(Object) -> boolean
fifo write: @1699477099871812304 0x7f81e1aeae39 941: java.util.Spliterators$ArraySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477099871946656 0x7f81e1aeb7da 1287: com.mojang.serialization.MapCodec$1::<init>(com.mojang.serialization.MapEncoder, com.mojang.serialization.MapDecoder, java.util.function.Supplier) -> void
fifo write: @1699477099872105508 0x7f81e1aec337 1400: com.mojang.serialization.MapCodec::of(com.mojang.serialization.MapEncoder, com.mojang.serialization.MapDecoder, java.util.function.Supplier) -> com.mojang.serialization.MapCodec
fifo write: @1699477099872176929 0x7f81e91bf5d3 330: java.util.HashMap::entrySet() -> java.util.Set
fifo write: @1699477099872315791 0x7f81e1aeceb7 502: java.util.stream.ReferencePipeline$3::<init>(java.util.stream.ReferencePipeline, java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int, java.util.function.Function) -> void
fifo write: @1699477099872360211 0x7f81e1aed514 258: com.google.common.collect.StandardTable$RowMap$EntrySet::size() -> int
fifo write: @1699477099872463472 0x7f81e1aedaad 1184: java.util.stream.ReferencePipeline$3::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477099872586664 0x7f81e1aee4b4 1075: java.util.stream.ReferencePipeline$3$1::<init>(java.util.stream.ReferencePipeline$3, java.util.stream.Sink) -> void
fifo write: @1699477099872694995 0x7f81e1aeeddf 1088: java.util.stream.ReferencePipeline::map(java.util.function.Function) -> java.util.stream.Stream
fifo write: @1699477099872787577 0x7f81e1aef814 240: com.google.common.collect.StandardTable$RowMap$EntrySet$1::<init>(com.google.common.collect.StandardTable$RowMap$EntrySet) -> void
fifo write: @1699477099872891018 0x7f81e1aefd06 1080: com.google.common.collect.Maps::keyIterator(java.util.Iterator) -> java.util.Iterator
fifo write: @1699477099872988929 0x7f81e1af0634 1067: com.google.common.collect.Maps$3::<init>(java.util.Iterator, com.google.common.base.Function) -> void
fifo write: @1699477099873080550 0x7f81e1af0f8f 1374: com.google.common.collect.Maps::asMapEntryIterator(java.util.Set, com.google.common.base.Function) -> java.util.Iterator
fifo write: @1699477099873183552 0x7f81e1af1b17 2180: com.google.common.collect.StandardTable$RowMap$EntrySet::iterator() -> java.util.Iterator
fifo write: @1699477099873280113 0x7f81e1af2b77 1658: com.google.common.collect.Maps$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477099873379234 0x7f81e1af3834 972: com.google.common.collect.Maps$1::<init>(java.util.Iterator) -> void
fifo write: @1699477099873423135 0x7f81e1af4103 535: com.google.common.collect.AbstractTable::createCellSet() -> java.util.Set
fifo write: @1699477099873473165 0x7f81e1af4714 428: com.google.common.collect.AbstractTable$CellSet::<init>(com.google.common.collect.AbstractTable) -> void
fifo write: @1699477099873514296 0x7f81e1af4cb4 667: com.google.common.collect.StandardTable$ColumnKeySet::size() -> int
fifo write: @1699477099873561666 0x7f81e1af545a 1085: com.google.common.collect.StandardTable::cellSet() -> java.util.Set
fifo write: @1699477099873612507 0x7f81e1af5e5a 1179: com.google.common.collect.HashBasedTable::cellSet() -> java.util.Set
fifo write: @1699477099873657718 0x7f81e1af68ba 991: com.google.common.collect.AbstractTable::cellSet() -> java.util.Set
fifo write: @1699477099873700418 0x7f81e1af71eb 202: com.google.common.collect.StandardTable::cellIterator() -> java.util.Iterator
fifo write: @1699477099873742879 0x7f81e1af7694 240: com.google.common.collect.AbstractTable$CellSet::iterator() -> java.util.Iterator
fifo write: @1699477099873812280 0x7f81e1af7b14 31: com.google.common.collect.StandardTable$CellIterator::<init>(com.google.common.collect.StandardTable, com.google.common.collect.StandardTable$1) -> void
fifo write: @1699477099873956041 0x7f81e1af8234 879: com.google.common.collect.StandardTable$CellIterator::<init>(com.google.common.collect.StandardTable) -> void
fifo write: @1699477099874040993 0x7f81e1af8b2a 1105: com.google.common.collect.RegularImmutableMap::createEntrySet() -> com.google.common.collect.ImmutableSet
fifo write: @1699477099874133614 0x7f81e91bfb19 782: java.util.HashMap$HashIterator::<init>(java.util.HashMap) -> void
fifo write: @1699477099874208885 0x7f81e1af9574 67: java.util.stream.AbstractPipeline::sequential() -> java.util.stream.BaseStream
fifo write: @1699477099874323866 0x7f81e1af9957 995: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet::<init>(com.google.common.collect.ImmutableMap, java.util.Map$Entry[]) -> void
fifo write: @1699477099874438928 0x7f81e1afa337 703: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet::<init>(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableList) -> void
fifo write: @1699477099874517139 0x7f81e1afab79 3680: java.util.stream.ReferencePipeline$7$1::accept(Object) -> void
fifo write: @1699477099874562609 0x7f81e1afc694 309: java.util.Spliterators$ArraySpliterator::<init>(Object[], int) -> void
fifo write: @1699477099874614520 0x7f81e1afcc6e 469: java.util.Spliterators::spliterator(Object[], int) -> java.util.Spliterator
fifo write: @1699477099874651420 0x7f81e91c04d4 265: java.util.HashMap$Node::hashCode() -> int
fifo write: @1699477099874696481 0x7f81e1afd294 230: dfk$$Lambda$534.0x00007f816030aae0::<init>(java.util.List, dgm) -> void
fifo write: @1699477099874744571 0x7f81e1afd7b4 648: com.google.common.collect.RegularImmutableSet::spliterator() -> java.util.Spliterator
fifo write: @1699477099874810672 0x7f81e1afdfb7 2402: dfk$$Lambda$533.0x00007f816030a898::apply(Object) -> Object
fifo write: @1699477099874875153 0x7f81e1aff107 2128: dfk::a(dgm, java.util.List) -> java.util.stream.Stream
fifo write: @1699477099875005595 0x7f81e91c0a6a 554: java.util.HashMap$EntrySet::iterator() -> java.util.Iterator
fifo write: @1699477099875318089 0x7f81e1b00014 309: com.google.common.collect.ArrayTable::eraseAll() -> void
fifo write: @1699477099875479871 0x7f81e91c12db 52: Boolean::equals(Object) -> boolean
fifo write: @1699477099875494411 0x7f81e8b83f70 168: itable stub
fifo write: @1699477099878359428 0x7f81e91c1632 69: com.google.common.base.Preconditions::checkElementIndex(int, int, String) -> int
fifo write: @1699477099878433829 0x7f81e91c1910 47: com.google.common.base.Preconditions::checkArgument(boolean, String, Object, Object) -> void
fifo write: @1699477099878539410 0x7f81e1b00737 2913: StackStreamFactory$AbstractStackWalker::checkState(StackStreamFactory$WalkerState) -> void
fifo write: @1699477099878582821 0x7f81e91c1c4c 6: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet::map() -> com.google.common.collect.ImmutableMap
fifo write: @1699477099878616071 0x7f81e1b01f74 207: java.util.Collections$EmptyList::toArray() -> Object[]
fifo write: @1699477099879327590 0x7f81e91c1fef 5544: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477099879365801 0x7f81e1b02394 400: com.google.common.collect.ImmutableMapEntrySet::size() -> int
fifo write: @1699477099880004399 0x7f81e1b02974 1766: com.google.common.collect.ImmutableMapEntrySet::contains(Object) -> boolean
fifo write: @1699477099880684088 0x7f81e91c5141 202: com.google.common.collect.RegularImmutableMap::checkNoConflictInKeyBucket(Object, Object, com.google.common.collect.ImmutableMapEntry, boolean) -> com.google.common.collect.ImmutableMapEntry
fifo write: @1699477099880967801 0x7f81e1b03614 23: com.google.common.collect.ImmutableMap::equals(Object) -> boolean
fifo write: @1699477099881014882 0x7f81e1b03994 450: com.google.common.collect.ImmutableMapEntrySet::isHashCodeFast() -> boolean
fifo write: @1699477099881078793 0x7f81e1b03f34 1334: com.google.common.collect.Maps::equalsImpl(java.util.Map, Object) -> boolean
fifo write: @1699477099881134464 0x7f81e1b049d9 1044: java.util.AbstractCollection::containsAll(java.util.Collection) -> boolean
fifo write: @1699477099881189284 0x7f81e1b05379 1684: com.google.common.collect.ImmutableSet::equals(Object) -> boolean
fifo write: @1699477099881248405 0x7f81e1b06054 1548: com.google.common.collect.Sets::equalsImpl(java.util.Set, Object) -> boolean
fifo write: @1699477099883496424 0x7f81e1b06cb4 297: java.util.LinkedHashMap::get(Object) -> Object
fifo write: @1699477099897010059 0x7f81e91c576f 5312: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477099902109174 0x7f81e91c8433 416: java.util.Arrays::fill(Object[], Object) -> void
fifo write: @1699477099902331857 0x7f81e91c89d0 604: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477099902390928 0x7f81e91c9408 1: Enum::hashCode() -> int
fifo write: @1699477099902589621 0x7f81e91c99fa 655: java.util.LinkedHashMap::get(Object) -> Object
fifo write: @1699477099902680392 0x7f81e91ca4d1 46: dgj::equals(Object) -> boolean
fifo write: @1699477099903171238 0x7f81e91ca8bc 9279: com.google.common.collect.StandardTable$ColumnKeyIterator::computeNext() -> Object
fifo write: @1699477099903214909 0x7f81e91cfbd1 46: dgh::equals(Object) -> boolean
fifo write: @1699477099903280980 0x7f81e91cfed4 1465: java.util.ArrayList::grow(int) -> Object[]
fifo write: @1699477099903327520 0x7f81e91d0ad0 63: com.google.common.collect.ImmutableMap$Builder::ensureCapacity(int) -> void
fifo write: @1699477099903371801 0x7f81e91d0e30 91: com.google.common.base.Preconditions::checkPositionIndexes(int, int, int) -> void
fifo write: @1699477099903856377 0x7f81e91d12d6 10289: com.google.common.collect.AbstractIterator::hasNext() -> boolean
fifo write: @1699477099903911028 0x7f81e91d6e14 39: com.google.common.collect.ObjectArrays::checkElementNotNull(Object, int) -> Object
fifo write: @1699477099903968678 0x7f81e91d7153 269: com.google.common.collect.ImmutableMap::entrySet() -> com.google.common.collect.ImmutableSet
fifo write: @1699477099904328363 0x7f81e91d75d0 348: com.google.common.collect.RegularImmutableList::listIterator(int) -> com.google.common.collect.UnmodifiableListIterator
fifo write: @1699477099904376554 0x7f81e91d7bd0 131: com.google.common.collect.StandardTable$CellIterator::hasNext() -> boolean
fifo write: @1699477099904451415 0x7f81e91d8040 452: com.google.common.collect.Iterators::forArray(Object[], int, int, int) -> com.google.common.collect.UnmodifiableListIterator
fifo write: @1699477099904517235 0x7f81e91d87d0 352: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet::iterator() -> java.util.Iterator
fifo write: @1699477099904641907 0x7f81e91d8e7f 641: com.google.common.collect.ImmutableMap$Builder::put(Object, Object) -> com.google.common.collect.ImmutableMap$Builder
fifo write: @1699477099904774499 0x7f81e91d96e8 19: com.google.common.collect.RegularImmutableMap::makeImmutable(java.util.Map$Entry, Object, Object) -> com.google.common.collect.ImmutableMapEntry
fifo write: @1699477099905154824 0x7f81e91d99fd 741: com.google.common.collect.ImmutableList::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099905558279 0x7f81e91da3ec 77: com.google.common.collect.Tables::immutableCell(Object, Object, Object) -> com.google.common.collect.Table$Cell
fifo write: @1699477099907785958 0x7f81e91da91a 9797: com.google.common.collect.AbstractIterator::tryToComputeNext() -> boolean
fifo write: @1699477099908811721 0x7f81e91e00b3 1623: com.google.common.collect.StandardTable::getOrCreate(Object) -> java.util.Map
fifo write: @1699477099908903132 0x7f81e91e1600 1435: com.google.common.collect.ImmutableMap::entrySet() -> java.util.Set
fifo write: @1699477099909109035 0x7f81e91e2500 1715: java.util.AbstractMap::hashCode() -> int
fifo write: @1699477099910683735 0x7f81e91e3af6 717: com.google.common.collect.ArrayTable::set(int, int, Object) -> Object
fifo write: @1699477099911016769 0x7f81e91e44d8 2950: java.util.AbstractMap::equals(Object) -> boolean
fifo write: @1699477099911254132 0x7f81e91e68b5 2945: com.google.common.collect.StandardTable$CellIterator::next() -> com.google.common.collect.Table$Cell
fifo write: @1699477099911687048 0x7f81e91e87f0 187: com.google.common.collect.TransformedIterator::hasNext() -> boolean
fifo write: @1699477099912049633 0x7f81e91e8d58 2455: com.google.common.collect.ArrayTable::put(Object, Object, Object) -> Object
fifo write: @1699477099912210185 0x7f81e91ead9b 2841: com.google.common.collect.RegularImmutableMap::fromEntryArrayCheckingBucketOverflow(int, java.util.Map$Entry[], boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099912259965 0x7f81e91ec954 243: java.util.HashMap::<init>(int, float) -> void
fifo write: @1699477099912642290 0x7f81e91ece36 1006: java.util.Arrays::copyOf(Object[], int, Class) -> Object[]
fifo write: @1699477099913058716 0x7f81e91ed7d3 330: java.util.LinkedHashMap::entrySet() -> java.util.Set
fifo write: @1699477099913526532 0x7f81e91edd35 2945: com.google.common.collect.StandardTable$CellIterator::next() -> Object
fifo write: @1699477099916596881 0x7f81e91efcec 507: com.google.common.collect.Iterators::size(java.util.Iterator) -> int
fifo write: @1699477099918134241 0x7f81e91f047d 354: com.google.common.collect.ObjectArrays::checkElementsNotNull(Object[], int) -> Object[]
fifo write: @1699477099919075303 0x7f81e91f0a92 37: com.google.common.collect.CollectPreconditions::checkNonnegative(int, String) -> int
fifo write: @1699477099919196715 0x7f81e91f0db1 62: com.google.common.collect.Maps::capacity(int) -> int
fifo write: @1699477099919953235 0x7f81e91f11d4 2534: com.google.common.collect.TransformedIterator::next() -> Object
fifo write: @1699477099920162227 0x7f81e91f2f44 3510: com.google.common.collect.AbstractTable::putAll(com.google.common.collect.Table) -> void
fifo write: @1699477099920230258 0x7f81e91f58d0 299: com.google.common.collect.HashBasedTable$Factory::get() -> Object
fifo write: @1699477099920466201 0x7f81e1b07294 1893: com.google.common.collect.ImmutableList::copyOf(java.util.Collection) -> com.google.common.collect.ImmutableList
fifo write: @1699477099921772868 0x7f81e91f60f8 11231: com.google.common.collect.AbstractIterator::next() -> Object
fifo write: @1699477099925042270 0x7f81e91fc1b7 276: com.google.common.collect.ObjectArrays::checkElementsNotNull(Object[], int) -> Object[]
fifo write: @1699477099925861910 0x7f81e8b87700 520: I2C/C2I adapters(0xbbaababaa)
fifo write: @1699477099926227815 0x7f81e91fc750 348: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477099926611820 0x7f81e91fcf70 5865: java.util.AbstractCollection::toArray() -> Object[]
fifo write: @1699477099926628720 0x7f81e8b87400 448: I2C/C2I adapters(0xabbab)
fifo write: @1699477099926955974 0x7f81e1b08114 296: jdk.internal.org.objectweb.asm.MethodVisitor::visitFieldInsn(int, String, String, String) -> void
fifo write: @1699477099927657473 0x7f81e8b87100 456: I2C/C2I adapters(0xbbbb6)
fifo write: @1699477099927884946 0x7f81e1b085f4 301: Math::round(double) -> long
fifo write: @1699477099929148353 0x7f81e9201056 261: jdk.internal.org.objectweb.asm.ByteVector::putShort(int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477099930323898 0x7f81e8b86d80 560: I2C/C2I adapters(0xbbbbbbbaaab)
fifo write: @1699477099930507600 0x7f81e8b8c580 560: I2C/C2I adapters(0xbbbbbbbbaaa)
fifo write: @1699477099930695623 0x7f81e1b08b7d 736: jdk.internal.org.objectweb.asm.AnnotationWriter::putAnnotations(int, jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477099930924866 0x7f81e8b8c280 640: I2C/C2I adapters(0xbbbabababbaaab)
fifo write: @1699477099931026007 0x7f81e8b8bf80 640: I2C/C2I adapters(0xbbbbabababbaaa)
fifo write: @1699477099931081158 0x7f81e8b8bc80 560: I2C/C2I adapters(0xbbbbabababb)
fifo write: @1699477099931111778 0x7f81e8b8b980 592: I2C/C2I adapters(0xbbbbabababbb)
fifo write: @1699477099931415962 0x7f81e8b8b680 592: I2C/C2I adapters(0xbbbbbabababb)
fifo write: @1699477099931511603 0x7f81e1b095c0 712: java.lang.invoke.InvokerBytecodeGenerator::<init>(String, String, java.lang.invoke.LambdaForm, java.lang.invoke.MethodType) -> void
fifo write: @1699477099931527243 0x7f81e8b8b380 560: I2C/C2I adapters(0xbbbabababbb)
fifo write: @1699477099931543964 0x7f81e8b8b000 688: I2C/C2I adapters(0xbbaabaabaabbaaab)
fifo write: @1699477099931644745 0x7f81e8b8ac80 688: I2C/C2I adapters(0xbbbaabaabaabbaaa)
fifo write: @1699477099931661405 0x7f81e8b8a980 608: I2C/C2I adapters(0xbbbaabaabaabb)
fifo write: @1699477099931677885 0x7f81e8b8a680 640: I2C/C2I adapters(0xbbbaabaabaabbb)
fifo write: @1699477099931934869 0x7f81e8b8a380 640: I2C/C2I adapters(0xbbbbaabaabaabb)
fifo write: @1699477099931951499 0x7f81e8b8a080 608: I2C/C2I adapters(0xbbaabaabaabbb)
fifo write: @1699477099932207732 0x7f81e8b89d80 496: I2C/C2I adapters(0xb7e7e7e7e7e7eb)
fifo write: @1699477099932495186 0x7f81e8b89a80 560: I2C/C2I adapters(0xbbbbaaaaaab)
fifo write: @1699477099932622868 0x7f81e8b89780 560: I2C/C2I adapters(0xbbbbbaaaaaa)
fifo write: @1699477099932897221 0x7f81e1b09ff7 1022: java.lang.invoke.InvokerBytecodeGenerator::generateCustomizedCode(java.lang.invoke.LambdaForm, java.lang.invoke.MethodType) -> java.lang.invoke.MemberName
fifo write: @1699477099932938882 0x7f81e9203d4c 2: it.unimi.dsi.fastutil.doubles.DoubleArrayList::size() -> int
fifo write: @1699477099933603200 0x7f81e1b0ae14 660: it.unimi.dsi.fastutil.doubles.DoubleArrayList::getDouble(int) -> double
fifo write: @1699477099933641651 0x7f81e1b0b6f4 5: ehq::a(int, int, int) -> int
fifo write: @1699477099933679241 0x7f81e1b0ba74 47: java.util.BitSet::checkInvariants() -> void
fifo write: @1699477099933861223 0x7f81e1b0be34 445: ehw::d(int, int, int) -> boolean
fifo write: @1699477099934196428 0x7f81e1b0c454 144: ehr::b(boolean, boolean) -> boolean
fifo write: @1699477099934239028 0x7f81e1b0c894 288: ehr$$Lambda$594.0x00007f8160324000::apply(boolean, boolean) -> boolean
fifo write: @1699477099934341370 0x7f81e920404c 2: eia::size() -> int
fifo write: @1699477099934444511 0x7f81e1b0cd94 212: ehq::b(int, int, int) -> boolean
fifo write: @1699477099934561133 0x7f81e1b0d294 123: java.util.BitSet::expandTo(int) -> void
fifo write: @1699477099934607243 0x7f81e1b0d720 243: ehq$$Lambda$598.0x00007f8160327c20::merge(int, int, int) -> boolean
fifo write: @1699477099934748475 0x7f81e1b0ddb7 1702: java.util.BitSet::get(int) -> boolean
fifo write: @1699477099934819066 0x7f81e1b0eddb 1485: ehq::a(ehr, ehw, int, int, ehw, int, int, ehq, int, int, int[], boolean[], int, int, int) -> boolean
fifo write: @1699477099934834876 0x7f81e8b84028 27: vtable stub
fifo write: @1699477099934897497 0x7f81e1b0fd57 1786: java.util.BitSet::set(int) -> void
fifo write: @1699477099935285332 0x7f81e920445d 7406: com.google.common.collect.Maps::indexMap(java.util.Collection) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099935387993 0x7f81e1b10dd9 1377: dgh::equals(Object) -> boolean
fifo write: @1699477099935649767 0x7f81e92094dc 195: java.util.regex.Pattern$Begin::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477099936553108 0x7f81e92099cf 427: dgm::hashCode() -> int
fifo write: @1699477099937009484 0x7f81e920a18f 380: java.util.Arrays::fill(Object[], Object) -> void
fifo write: @1699477099937050975 0x7f81e920a6cc 6: dgm::g() -> Class
fifo write: @1699477099937780514 0x7f81e920aa29 722: com.google.common.collect.ImmutableMapEntry$NonTerminalImmutableMapEntry::<init>(Object, Object, com.google.common.collect.ImmutableMapEntry) -> void
fifo write: @1699477099937923186 0x7f81e920b24c 6: java.util.AbstractMap$SimpleImmutableEntry::getValue() -> Object
fifo write: @1699477099938184179 0x7f81e920b55e 40: java.util.stream.ReduceOps$3ReducingSink::accept(Object) -> void
fifo write: @1699477099938630885 0x7f81e1b118f4 99: com.google.common.collect.RegularImmutableList::get(int) -> Object
fifo write: @1699477099939353374 0x7f81e920b848 324: com.google.common.collect.ImmutableList::asImmutableList(Object[], int) -> com.google.common.collect.ImmutableList
fifo write: @1699477099939446126 0x7f81e920beac 30: com.google.common.collect.ImmutableSortedMap::access$300(com.google.common.collect.ImmutableSortedMap) -> com.google.common.collect.ImmutableList
fifo write: @1699477099939520907 0x7f81e920c1ac 30: com.google.common.collect.ImmutableSortedMap::access$200(com.google.common.collect.ImmutableSortedMap) -> com.google.common.collect.RegularImmutableSortedSet
fifo write: @1699477099939568667 0x7f81e920c4cc 6: dgm::e() -> com.mojang.serialization.Codec
fifo write: @1699477099939847331 0x7f81e1b12277 18851: dfk::<init>(java.util.function.Function, Object, dfk$b, java.util.Map) -> void
fifo write: @1699477099939927672 0x7f81e920cad1 142: Class::cast(Object) -> Object
fifo write: @1699477099940176595 0x7f81e1b19317 1847: dfl::c(dgm) -> Comparable
fifo write: @1699477099940390938 0x7f81e920cf3c 12: com.google.common.collect.ImmutableMapEntry::createEntryArray(int) -> com.google.common.collect.ImmutableMapEntry[]
fifo write: @1699477099940445668 0x7f81e920d259 54: dfk$$Lambda$509.0x00007f81603019c8::apply(Object) -> Object
fifo write: @1699477099940554430 0x7f81e920d5d9 54: dfk$$Lambda$510.0x00007f8160301c08::apply(Object) -> Object
fifo write: @1699477099940616771 0x7f81e920d935 962: java.util.Arrays::fill(Object[], Object) -> void
fifo write: @1699477099940659141 0x7f81e920e151 98: dgh::equals(Object) -> boolean
fifo write: @1699477099940696492 0x7f81e920e4cc 6: cht::e() -> eaq
fifo write: @1699477099940748402 0x7f81e1b1a194 332: csw$$Lambda$601.0x00007f8160323728::apply(Object) -> Object
fifo write: @1699477099940807003 0x7f81e920e7d0 296: com.google.common.collect.RegularImmutableSet::iterator() -> java.util.Iterator
fifo write: @1699477099940854764 0x7f81e920ed57 35: java.util.stream.ForEachOps$ForEachOp$OfRef::accept(Object) -> void
fifo write: @1699477099940904314 0x7f81e1b1a6c1 388: csw::a(cht, dfj) -> eaq
fifo write: @1699477099942700188 0x7f81e920f099 3103: com.google.common.collect.RegularImmutableMap::fromEntryArrayCheckingBucketOverflow(int, java.util.Map$Entry[], boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099942807669 0x7f81e9210e14 971: java.util.regex.Pattern$BmpCharPredicate$$Lambda$20.0x80000002b::is(int) -> boolean
fifo write: @1699477099942896840 0x7f81e9211c10 876: com.google.common.collect.CollectCollectors$$Lambda$270.0x00007f81601aab38::accept(Object, Object) -> void
fifo write: @1699477099943009802 0x7f81e8b84058 168: itable stub
fifo write: @1699477099943066502 0x7f81e921284c 6: hm::p() -> hg$c
fifo write: @1699477099943213664 0x7f81e9212b59 74: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object, Object) -> Object
fifo write: @1699477099943745561 0x7f81e1b1ac94 505: dgh::a(Enum) -> String
fifo write: @1699477099943796972 0x7f81e1b1b2b4 979: dgh::a(Comparable) -> String
fifo write: @1699477099943851822 0x7f81e1b1bad4 1404: ehq::a(int, int, int, boolean) -> void
fifo write: @1699477099944577382 0x7f81e1b1c897 245: ehw::c(ha$a) -> int
fifo write: @1699477099944686303 0x7f81e1b1cd94 234: it.unimi.dsi.fastutil.doubles.AbstractDoubleCollection::<init>() -> void
fifo write: @1699477099944731124 0x7f81e1b1d214 328: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::<init>() -> void
fifo write: @1699477099945057348 0x7f81e9212f09 382: java.lang.invoke.MethodType::<init>(Class, Class[]) -> void
fifo write: @1699477099945102799 0x7f81e1b1d720 187: ehq$$Lambda$597.0x00007f81603279f8::merge(int, int, int) -> boolean
fifo write: @1699477099945193250 0x7f81e1b1dd52 793: java.lang.invoke.LambdaForm$MH.0x00007f8160329400::linkToTargetMethod(Object, Object, int, int, Object, int, int, Object, int, int, Object, Object, Object) -> Object
fifo write: @1699477099945228850 0x7f81e1b1e474 2: eht::size() -> int
fifo write: @1699477099945291731 0x7f81e1b1e814 467: ehq$$Lambda$598.0x00007f8160327c20::<init>(ehr, ehw, int, int, ehw, int, int, ehq, int, int, int[], boolean[]) -> void
fifo write: @1699477099945388482 0x7f81e1b1f11b 1669: java.lang.invoke.LambdaForm$DMH.0x00007f8160328c00::newInvokeSpecial(Object, Object, Object, int, int, Object, int, int, Object, int, int, Object, Object) -> Object
fifo write: @1699477099945426933 0x7f81e1b1fd74 360: Integer::numberOfTrailingZeros(int) -> int
fifo write: @1699477099945501464 0x7f81e1b2033e 739: ehv::a(ehz$a) -> boolean
fifo write: @1699477099945627325 0x7f81e1b20bff 2762: ehq::a(ehz, ehr, ehw, int, ehw, int, ehq, int, int[], boolean[], int, int, int) -> boolean
fifo write: @1699477099945672256 0x7f81e1b22103 1092: eid::a(double, double) -> int
fifo write: @1699477099945805608 0x7f81e1b22bb4 589: ehq::a(int, int, int, int) -> boolean
fifo write: @1699477099946006280 0x7f81e1b232f4 159: Long::numberOfTrailingZeros(long) -> int
fifo write: @1699477099946049221 0x7f81e9213cd0 135: java.util.BitSet::get(int) -> boolean
fifo write: @1699477099946199123 0x7f81e1b237d4 559: com.google.common.math.MathPreconditions::checkNonNegative(String, int) -> int
fifo write: @1699477099946296954 0x7f81e92140d4 159: ehq::b(int, int, int) -> boolean
fifo write: @1699477099946369945 0x7f81e92145d2 197: ehw::d(int, int, int) -> boolean
fifo write: @1699477099946895682 0x7f81e1b23f94 348: java.util.BitSet::recalculateWordsInUse() -> void
fifo write: @1699477099946935582 0x7f81e1b24594 338: ehq::b(int, int, int, int) -> void
fifo write: @1699477099947128055 0x7f81e1b24c00 1205: java.util.BitSet::clear(int, int) -> void
fifo write: @1699477099947477729 0x7f81e1b258f4 2: eht::getDouble(int) -> double
fifo write: @1699477099947524580 0x7f81e1b25cc3 630: eia::a(ehz$a) -> boolean
fifo write: @1699477099947570900 0x7f81e1b26494 467: it.unimi.dsi.fastutil.doubles.DoubleArrayList::<init>(double[], boolean) -> void
fifo write: @1699477099947665642 0x7f81e1b26c5f 4222: java.util.BitSet::checkRange(int, int) -> void
fifo write: @1699477099947740443 0x7f81e1b28e97 1301: it.unimi.dsi.fastutil.doubles.DoubleArrayList::wrap(double[], int) -> it.unimi.dsi.fastutil.doubles.DoubleArrayList
fifo write: @1699477099947782983 0x7f81e9214b30 12: ehr$$Lambda$594.0x00007f8160324000::apply(boolean, boolean) -> boolean
fifo write: @1699477099948010966 0x7f81e1b29b34 557: ehp::a(ha$a) -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477099948794716 0x7f81e1b2a299 2431: dfi$a::<init>(csv, com.google.common.collect.ImmutableMap, com.mojang.serialization.MapCodec) -> void
fifo write: @1699477099949809679 0x7f81e8b89480 464: I2C/C2I adapters(0xbbbba7e)
fifo write: @1699477099950351886 0x7f81e8b9d380 456: I2C/C2I adapters(0xbb7e7e7e)
fifo write: @1699477099950462668 0x7f81e9215177 1481: ehq$$Lambda$598.0x00007f8160327c20::merge(int, int, int) -> boolean
fifo write: @1699477099951349329 0x7f81e9216651 38: ac$a::equals(Object, Object) -> boolean
fifo write: @1699477099951874166 0x7f81e92169fa 4293: com.google.common.collect.ImmutableMap$Builder::build(boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099951994248 0x7f81e1b2b8fc 3284: java.lang.invoke.MethodType::makeImpl(Class, Class[], boolean) -> java.lang.invoke.MethodType
fifo write: @1699477099952645936 0x7f81e1b2d0d4 996: java.util.ImmutableCollections$List12::<init>(Object) -> void
fifo write: @1699477099954442999 0x7f81e921946f 5882: java.util.AbstractCollection::toArray() -> Object[]
fifo write: @1699477099955990959 0x7f81e921db9c 2996: com.google.common.collect.RegularImmutableMap::fromEntryArrayCheckingBucketOverflow(int, java.util.Map$Entry[], boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099957332207 0x7f81e1b2d994 316: com.google.common.collect.ImmutableSet$CachingAsList::asList() -> com.google.common.collect.ImmutableList
fifo write: @1699477099957612350 0x7f81e1b2df37 860: com.google.common.collect.CollectCollectors$$Lambda$270.0x00007f81601aab38::accept(Object, Object) -> void
fifo write: @1699477099957663171 0x7f81e1b2e7b4 674: com.google.common.collect.ImmutableMap$Builder::ensureCapacity(int) -> void
fifo write: @1699477099957745642 0x7f81e1b2efd7 1360: com.google.common.collect.ImmutableMap$Builder::put(Object, Object) -> com.google.common.collect.ImmutableMap$Builder
fifo write: @1699477099958042806 0x7f81e921fb6b 124: com.google.common.collect.ImmutableMap::entryOf(Object, Object) -> java.util.Map$Entry
fifo write: @1699477099958400330 0x7f81e1b2fca5 4073: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477099958574253 0x7f81e921ffe0 297: com.google.common.collect.AbstractMapEntry::hashCode() -> int
fifo write: @1699477099958764425 0x7f81e1b31a94 607: com.google.common.collect.ImmutableCollection$Builder::expandedCapacity(int, int) -> int
fifo write: @1699477099958916387 0x7f81e1b32299 5077: java.util.HashMap::resize() -> java.util.HashMap$Node[]
fifo write: @1699477099959030118 0x7f81e1b343b4 297: java.util.LinkedHashMap::get(Object) -> Object
fifo write: @1699477099959354353 0x7f81e1b349dc 3065: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477099959595396 0x7f81e1b361f4 3810: java.util.HashMap::comparableClassFor(Object) -> Class
fifo write: @1699477099959825029 0x7f81e92205b8 4073: java.lang.invoke.MethodType$ConcurrentWeakInternSet::get(Object) -> Object
fifo write: @1699477099959912280 0x7f81e1b37ca0 2316: java.util.HashMap$TreeNode::find(int, Object, Class) -> java.util.HashMap$TreeNode
fifo write: @1699477099961133336 0x7f81e9222bf9 14559: dfl::a(java.util.Map) -> void
fifo write: @1699477099961192456 0x7f81e1b38fb4 604: com.google.common.collect.ArrayTable::<init>(com.google.common.collect.Table) -> void
fifo write: @1699477099961245877 0x7f81e1b39694 400: com.google.common.collect.StandardTable::rowKeySet() -> java.util.Set
fifo write: @1699477099961300008 0x7f81e1b39c14 31: com.google.common.collect.HashBasedTable::columnKeySet() -> java.util.Set
fifo write: @1699477099961362319 0x7f81e1b3a05a 1512: com.google.common.collect.HashBasedTable::rowKeySet() -> java.util.Set
fifo write: @1699477099961418149 0x7f81e1b3ac5a 1097: com.google.common.collect.HashBasedTable::rowMap() -> java.util.Map
fifo write: @1699477099961492520 0x7f81e1b3b657 1587: com.google.common.collect.ArrayTable::create(com.google.common.collect.Table) -> com.google.common.collect.ArrayTable
fifo write: @1699477099961545631 0x7f81e1b3c294 31: com.google.common.collect.ArrayTable::putAll(com.google.common.collect.Table) -> void
fifo write: @1699477099961633482 0x7f81e1b3c8bf 7444: dfl::a(java.util.Map) -> void
fifo write: @1699477099961676393 0x7f81e1b3f714 335: com.google.common.collect.HashBasedTable::isEmpty() -> boolean
fifo write: @1699477099961716153 0x7f81e1b3fc14 243: com.google.common.collect.StandardTable::isEmpty() -> boolean
fifo write: @1699477099962226710 0x7f81e1b40387 8693: dfl::a(java.util.Map) -> void
fifo write: @1699477099963778760 0x7f81e922db11 2494: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477099965542533 0x7f81e8b89180 472: I2C/C2I adapters(0x666666)
fifo write: @1699477099965560913 0x7f81e8b88e80 464: I2C/C2I adapters(0xbbbb6b)
fifo write: @1699477099968858795 0x7f81e922f9d6 2757: dfl::c(dgm, Comparable) -> java.util.Map
fifo write: @1699477099969108089 0x7f81e1b43d0a 3174: hq::a(hq, String, Object) -> Object
fifo write: @1699477099969240930 0x7f81e9231c4c 6: com.mojang.serialization.Codec$2::toString() -> String
fifo write: @1699477099969366702 0x7f81e9231f95 3381: java.util.HashMap::resize() -> java.util.HashMap$Node[]
fifo write: @1699477099970110411 0x7f81e1b4555a 1087: com.mojang.serialization.Decoder$5::<init>(java.util.function.Supplier) -> void
fifo write: @1699477099970226143 0x7f81e1b45f8d 1198: com.mojang.serialization.Decoder::unit(java.util.function.Supplier) -> com.mojang.serialization.MapDecoder
fifo write: @1699477099970328324 0x7f81e1b46a86 1097: com.mojang.serialization.Encoder::empty() -> com.mojang.serialization.MapEncoder
fifo write: @1699477099970401495 0x7f81e1b474da 987: com.mojang.serialization.Encoder$4::<init>() -> void
fifo write: @1699477099970494716 0x7f81e1b47e14 230: com.mojang.serialization.MapCodec$$Lambda$154.0x00007f816013ae50::<init>(com.mojang.serialization.MapEncoder, com.mojang.serialization.MapDecoder) -> void
fifo write: @1699477099970576437 0x7f81e1b48357 1353: com.mojang.serialization.MapCodec::of(com.mojang.serialization.MapEncoder, com.mojang.serialization.MapDecoder) -> com.mojang.serialization.MapCodec
fifo write: @1699477099971315957 0x7f81e9233cef 5398: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477099972374591 0x7f81e1b48f18 384: com.google.common.collect.RegularImmutableMap::fromEntryArray(int, java.util.Map$Entry[], boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099972691995 0x7f81e1b49766 5553: com.google.common.collect.ImmutableMap$Builder::build(boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477099972734495 0x7f81e1b4bd14 324: csw$$Lambda$662.0x00007f8160347b38::applyAsInt(Object) -> int
fifo write: @1699477099973244642 0x7f81e9236d34 1099: jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes(String) -> int
fifo write: @1699477099973306413 0x7f81e1b4c259 1018: java.util.HashMap$TreeNode::tieBreakOrder(Object, Object) -> int
fifo write: @1699477099973929400 0x7f81e9237ae4 119: com.google.common.collect.ImmutableMapEntrySet::size() -> int
fifo write: @1699477099974715500 0x7f81e9237f38 323: StringLatin1::compareTo(byte[], byte[], int, int) -> int
fifo write: @1699477099976794207 0x7f81e9238584 27: java.util.HashMap::comparableClassFor(Object) -> Class
fifo write: @1699477099978204155 0x7f81e92388d3 330: java.util.LinkedHashMap::values() -> java.util.Collection
fifo write: @1699477099979026166 0x7f81e9238dd9 82: java.util.AbstractCollection::isEmpty() -> boolean
fifo write: @1699477099979492752 0x7f81e92391ea 326: java.util.LinkedHashMap$LinkedValues::iterator() -> java.util.Iterator
fifo write: @1699477099980416284 0x7f81e92397f1 149: com.google.common.collect.StandardTable$TableSet::<init>(com.google.common.collect.StandardTable, com.google.common.collect.StandardTable$1) -> void
fifo write: @1699477099981003601 0x7f81e9239b88 569: com.google.common.collect.ImmutableList::copyOf(java.util.Collection) -> com.google.common.collect.ImmutableList
fifo write: @1699477099983639755 0x7f81e1b4cd9d 126: ehq$$Lambda$596.0x00007f81603277d0::merge(int, int, int) -> boolean
fifo write: @1699477099983745147 0x7f81e1b4d294 494: ehq$$Lambda$597.0x00007f81603279f8::<init>(ehz, ehr, ehw, int, ehw, int, ehq, int, int[], boolean[]) -> void
fifo write: @1699477099983859328 0x7f81e1b4db52 769: java.lang.invoke.LambdaForm$MH.0x00007f8160328400::linkToTargetMethod(Object, Object, Object, int, Object, int, Object, int, Object, Object, Object) -> Object
fifo write: @1699477099983915099 0x7f81e1b4e274 85: it.unimi.dsi.fastutil.doubles.DoubleArrayList::wrap(double[]) -> it.unimi.dsi.fastutil.doubles.DoubleArrayList
fifo write: @1699477099984016000 0x7f81e1b4e751 1375: java.lang.invoke.LambdaForm$DMH.0x00007f8160321c00::newInvokeSpecial(Object, Object, Object, Object, int, Object, int, Object, int, Object, Object) -> Object
fifo write: @1699477099984181892 0x7f81e1b4fd7f 2533: ehq::a(ehz, ehz, ehr, ehw, ehw, ehq, int[], int, int, int) -> boolean
fifo write: @1699477099984297734 0x7f81e1b51014 185: eig::<init>(ehw) -> void
fifo write: @1699477099984335914 0x7f81e1b51494 269: ehq::a() -> boolean
fifo write: @1699477099984369915 0x7f81e1b51974 90: java.util.BitSet::isEmpty() -> boolean
fifo write: @1699477099984404505 0x7f81e1b51d94 364: eig::c() -> boolean
fifo write: @1699477099984497686 0x7f81e1b5250e 5306: eid::a(int, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> ehz
fifo write: @1699477099984759250 0x7f81e1b54777 2000: java.util.BitSet::nextClearBit(int) -> int
fifo write: @1699477099984803620 0x7f81e1b55994 382: ehw::b() -> int
fifo write: @1699477099984834831 0x7f81e1b55f14 382: ehw::c() -> int
fifo write: @1699477099984865661 0x7f81e1b56494 382: ehw::d() -> int
fifo write: @1699477099984880501 0x7f81e8b9e010 168: itable stub
fifo write: @1699477099984894342 0x7f81e8b9e0c8 168: itable stub
fifo write: @1699477099984938262 0x7f81e1b56a14 130: eia::a() -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477099985104844 0x7f81e923a8b9 54: java.lang.invoke.DirectMethodHandle::constructorMethod(Object) -> Object
fifo write: @1699477099985262086 0x7f81e1b57284 3636: ehp::<init>(ehw, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList) -> void
fifo write: @1699477099985407628 0x7f81e1b58b97 611: java.lang.invoke.DirectMethodHandle::make(java.lang.invoke.MemberName) -> java.lang.invoke.DirectMethodHandle
fifo write: @1699477099985457329 0x7f81e1b5933a 621: ehw::<init>(int, int, int) -> void
fifo write: @1699477099985492379 0x7f81e1b59aab 378: ehq::a(int, int, int, int, int) -> boolean
fifo write: @1699477099985530190 0x7f81e1b5a0b9 712: ehy::a(ehz$a) -> boolean
fifo write: @1699477099985574180 0x7f81e1b5a894 378: java.util.BitSet::ensureCapacity(int) -> void
fifo write: @1699477099985663821 0x7f81e1b5af14 240: ehy::size() -> int
fifo write: @1699477099985701832 0x7f81e923abd0 99: it.unimi.dsi.fastutil.doubles.DoubleArrayList::getDouble(int) -> double
fifo write: @1699477099985899345 0x7f81e1b5b414 2041: it.unimi.dsi.fastutil.doubles.DoubleArrayList::equals(Object) -> boolean
fifo write: @1699477099985991226 0x7f81e923af4c 6: ehy::a() -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477099986414601 0x7f81e1b5c1b4 943: cvr$$Lambda$663.0x00007f81603428d8::test(Object) -> boolean
fifo write: @1699477099986480342 0x7f81e1b5ca17 558: eid::a(double, double, double, double, double, double) -> eig
fifo write: @1699477099986647324 0x7f81e1b5d246 5002: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477099986704395 0x7f81e1b5f674 602: cvr::p(dfj) -> boolean
fifo write: @1699477099986858157 0x7f81e1b5ff69 7804: eid::b(eig, eig, ehr) -> eig
fifo write: @1699477099986928798 0x7f81e1b63204 3401: eid::b(double, double, double, double, double, double) -> eig
fifo write: @1699477099987439514 0x7f81e1b64d67 101: java.util.ImmutableCollections$SetN::iterator() -> java.util.Iterator
fifo write: @1699477099987491745 0x7f81e1b65194 301: java.util.ImmutableCollections$SetN$SetNIterator::<init>(java.util.ImmutableCollections$SetN) -> void
fifo write: @1699477099987841830 0x7f81e1b65717 245: ehq::a(ha$a) -> int
fifo write: @1699477099987889710 0x7f81e1b65c17 245: ehq::b(ha$a) -> int
fifo write: @1699477099987948541 0x7f81e1b66117 348: java.util.BitSet::initWords(int) -> void
fifo write: @1699477099988006602 0x7f81e1b6669d 336: ehq::<init>(int, int, int) -> void
fifo write: @1699477099988267395 0x7f81e923b5ef 2351: com.google.common.collect.StandardTable$ColumnKeyIterator::<init>(com.google.common.collect.StandardTable, com.google.common.collect.StandardTable$1) -> void
fifo write: @1699477099988312406 0x7f81e1b66cb4 685: eht::<init>(int) -> void
fifo write: @1699477099988380567 0x7f81e1b673f4 152: eid::a(int, int) -> long
fifo write: @1699477099988450277 0x7f81e1b6793a 1749: java.util.BitSet::<init>(int) -> void
fifo write: @1699477099988512218 0x7f81e1b689a9 1300: ehu::a(ha$a) -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477099988579719 0x7f81e1b6955c 812: com.google.common.math.IntMath::gcd(int, int) -> int
fifo write: @1699477099988616830 0x7f81e1b69e94 177: ehv::size() -> int
fifo write: @1699477099988663110 0x7f81e1b6a323 112: eig$$Lambda$600.0x00007f81603232b0::consume(int, int, int, int, int, int) -> void
fifo write: @1699477099988699961 0x7f81e1b6a797 36: eig$$Lambda$599.0x00007f8160322e88::consume(double, double, double, double, double, double) -> void
fifo write: @1699477099988738481 0x7f81e1b6ab97 544: eig::a(eig[], double, double, double, double, double, double) -> void
fifo write: @1699477099988835292 0x7f81e1b6b2e8 1427: eig::a(eid$a, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, int, int, int, int, int, int) -> void
fifo write: @1699477099988869773 0x7f81e923d1b1 174: Math::round(double) -> long
fifo write: @1699477099988964074 0x7f81e1b6bfcf 697: java.lang.invoke.LambdaForm$MH.0x00007f8160321400::linkToTargetMethod(Object, Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477099989040125 0x7f81e1b6c694 471: ehq$$Lambda$596.0x00007f81603277d0::<init>(ehz, ehz, ehr, ehw, ehw, ehq, int[]) -> void
fifo write: @1699477099989146756 0x7f81e1b6cf08 1608: java.lang.invoke.LambdaForm$DMH.0x00007f8160321000::newInvokeSpecial(Object, Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477099989188767 0x7f81e1b6db8d 1303: ehv::<init>(int, int) -> void
fifo write: @1699477099989489051 0x7f81e1b6e822 2442: ehq::a(ehw, ehw, ehz, ehz, ehz, ehr) -> ehq
fifo write: @1699477099989579252 0x7f81e1b6fc23 2375: ehq::a(ehw, ehw$b, boolean) -> void
fifo write: @1699477099989854756 0x7f81e923d8c0 63: java.util.stream.StreamOpFlag::fromCharacteristics(java.util.Spliterator) -> int
fifo write: @1699477099990427053 0x7f81e923dc50 619: java.util.ArrayList::toArray() -> Object[]
fifo write: @1699477099991230003 0x7f81e923e238 713: java.util.stream.StreamSupport::stream(java.util.Spliterator, boolean) -> java.util.stream.Stream
fifo write: @1699477099991244894 0x7f81e8b9dd00 504: I2C/C2I adapters(0xbbbbbbb66)
fifo write: @1699477099991285964 0x7f81e8b9e180 27: vtable stub
fifo write: @1699477099992116615 0x7f81e923eb60 63: java.util.Spliterator::getExactSizeIfKnown() -> long
fifo write: @1699477099992529250 0x7f81e1b71159 1377: dgh::equals(Object) -> boolean
fifo write: @1699477099992594031 0x7f81e1b71c94 397: dfi$d$$Lambda$495.0x00007f81602f65f8::apply(Object) -> Object
fifo write: @1699477099992681822 0x7f81e923eed5 238: java.util.stream.AbstractPipeline::sourceSpliterator(int) -> java.util.Spliterator
fifo write: @1699477099992846704 0x7f81e923f3d3 990: com.google.common.collect.ImmutableMap$Builder::ensureCapacity(int) -> void
fifo write: @1699477099993900018 0x7f81e923fd5b 416: java.util.stream.AbstractPipeline::evaluate(java.util.stream.TerminalOp) -> Object
fifo write: @1699477099994145181 0x7f81e92404ff 1615: com.google.common.collect.ImmutableMap$Builder::put(Object, Object) -> com.google.common.collect.ImmutableMap$Builder
fifo write: @1699477099995893334 0x7f81e92414f5 564: java.util.stream.AbstractPipeline::wrapSink(java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477099996148937 0x7f81e9241d10 2005: com.google.common.collect.CollectCollectors$$Lambda$270.0x00007f81601aab38::accept(Object, Object) -> void
fifo write: @1699477099996319819 0x7f81e9243052 493: java.util.ArrayList$ArrayListSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477099997006938 0x7f81e9243927 524: dgh::equals(Object) -> boolean
fifo write: @1699477099997301882 0x7f81e924417d 177: java.util.stream.AbstractPipeline::copyInto(java.util.stream.Sink, java.util.Spliterator) -> void
fifo write: @1699477099998480667 0x7f81e9244844 12330: com.google.common.collect.HashBasedTable::put(Object, Object, Object) -> Object
fifo write: @1699477099998538988 0x7f81e924b055 578: dgm::equals(Object) -> boolean
fifo write: @1699477099998738850 0x7f81e924b880 1368: com.google.common.collect.Sets::hashCodeImpl(java.util.Set) -> int
fifo write: @1699477099998947143 0x7f81e924ca43 903: java.util.stream.AbstractPipeline::wrapAndCopyInto(java.util.stream.Sink, java.util.Spliterator) -> java.util.stream.Sink
fifo write: @1699477099999478190 0x7f81e924d65c 699: java.util.Collection::stream() -> java.util.stream.Stream
fifo write: @1699477100000527963 0x7f81e924dff4 1425: java.util.ArrayList::<init>(java.util.Collection) -> void
fifo write: @1699477100002691931 0x7f81e924ed30 4371: java.util.stream.ReferencePipeline$3$1::accept(Object) -> void
fifo write: @1699477100003648984 0x7f81e92511d0 883: com.google.common.collect.ArrayTable::eraseAll() -> void
fifo write: @1699477100005904093 0x7f81e9251b30 3952: dfk$$Lambda$534.0x00007f816030aae0::apply(Object) -> Object
fifo write: @1699477100011017449 0x7f81e1b724d4 851: it.unimi.dsi.fastutil.doubles.DoubleArrayList::equals(it.unimi.dsi.fastutil.doubles.DoubleArrayList) -> boolean
fifo write: @1699477100011405444 0x7f81e1b73194 92: java.util.EnumMap::unmaskNull(Object) -> Object
fifo write: @1699477100011767168 0x7f81e1b73594 396: java.util.EnumMap::isValidKey(Object) -> boolean
fifo write: @1699477100011854070 0x7f81e1b73c49 671: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object, Object, Object, Object) -> Object
fifo write: @1699477100011926121 0x7f81e1b742b4 724: java.util.EnumMap::get(Object) -> Object
fifo write: @1699477100012139023 0x7f81e1b74b83 1538: java.lang.invoke.LambdaForm$DMH.0x00007f8160100c00::newInvokeSpecial(Object, Object, Object, Object, Object) -> Object
fifo write: @1699477100012220564 0x7f81e1b756f4 353: eid::a(eig, eig) -> eig
fifo write: @1699477100012293785 0x7f81e1b75c94 185: eig$$Lambda$599.0x00007f8160322e88::<init>(eig[]) -> void
fifo write: @1699477100012366986 0x7f81e1b760f4 248: eid::a(eig, eig, ehr) -> eig
fifo write: @1699477100012404347 0x7f81e1b76594 23: ehw::b(ehw$b, boolean) -> void
fifo write: @1699477100012488338 0x7f81e1b76914 320: eig$$Lambda$600.0x00007f81603232b0::<init>(eid$a, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList) -> void
fifo write: @1699477100012621959 0x7f81e1b76f97 2023: eig::d() -> eig
fifo write: @1699477100012776151 0x7f81e1b77f26 3568: ehq::<init>(ehw) -> void
fifo write: @1699477100012850822 0x7f81e1b79b19 1595: java.util.BitSet::clone() -> Object
fifo write: @1699477100012924173 0x7f81e1b7a9bf 2971: eig::b(eid$a) -> void
fifo write: @1699477100013701543 0x7f81e9254450 131: ehp::a(ha$a) -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477100014415413 0x7f81e1b7bd50 348: com.google.common.collect.Maps::newHashMap() -> java.util.HashMap
fifo write: @1699477100014678446 0x7f81e1b7c306 993: com.google.common.collect.ImmutableList::of(Object) -> com.google.common.collect.ImmutableList
fifo write: @1699477100014726937 0x7f81e1b7cc34 885: com.google.common.collect.SingletonImmutableList::<init>(Object) -> void
fifo write: @1699477100016357538 0x7f81e9254b14 13059: java.util.HashMap$TreeNode::find(int, Object, Class) -> java.util.HashMap$TreeNode
fifo write: @1699477100016470039 0x7f81e925cc4c 6: ha::c() -> String
fifo write: @1699477100016528100 0x7f81e1b7d4f7 1582: com.google.common.collect.NaturalOrdering::compare(Object, Object) -> int
fifo write: @1699477100016602531 0x7f81e1b7e15e 916: com.google.common.collect.NaturalOrdering::compare(Comparable, Comparable) -> int
fifo write: @1699477100017322280 0x7f81e8b9da00 592: I2C/C2I adapters(0xbbabbbbbbbbb)
fifo write: @1699477100017994739 0x7f81e1b7ea94 337: jdk.internal.misc.Unsafe::ensureClassInitialized(Class) -> void
fifo write: @1699477100018074950 0x7f81e1b7f014 247: java.lang.invoke.LambdaFormBuffer::insertName(int, java.lang.invoke.LambdaForm$Name, boolean) -> void
fifo write: @1699477100018758159 0x7f81e1b7f6a0 3980: java.lang.invoke.LambdaFormBuffer::growNames(int, int) -> void
fifo write: @1699477100018969251 0x7f81e1b814dd 2315: java.lang.invoke.BoundMethodHandle$SpeciesData::extendWith(byte) -> java.lang.invoke.BoundMethodHandle$SpeciesData
fifo write: @1699477100019496978 0x7f81e1b82774 338: jdk.internal.org.objectweb.asm.Type::getType(String) -> jdk.internal.org.objectweb.asm.Type
fifo write: @1699477100019511678 0x7f81e8b88a80 776: I2C/C2I adapters(0xbbbbbbbbbbbbbbbbbbb)
fifo write: @1699477100019688421 0x7f81e8b9e1b0 27: vtable stub
fifo write: @1699477100020131336 0x7f81e1b82dfd 1969: java.lang.invoke.InvokerBytecodeGenerator::emitIconstInsn(jdk.internal.org.objectweb.asm.MethodVisitor, int) -> void
fifo write: @1699477100020567982 0x7f81e1b83c94 488: java.lang.invoke.ClassSpecializer$SpeciesData::factory() -> java.lang.invoke.MethodHandle
fifo write: @1699477100020818625 0x7f81e1b845bc 8527: java.lang.invoke.InvokerBytecodeGenerator::addMethod() -> void
fifo write: @1699477100020880656 0x7f81e1b88614 788: jdk.internal.util.ArraysSupport::mismatch(byte[], byte[], int) -> int
fifo write: @1699477100020932777 0x7f81e925de4c 6: java.lang.invoke.MethodHandleImpl$CountingWrapper::getTarget() -> java.lang.invoke.MethodHandle
fifo write: @1699477100020974627 0x7f81e1b88fb7 992: java.lang.invoke.MethodHandle::maybeCustomize() -> void
fifo write: @1699477100021232011 0x7f81e1b898f4 321: Math::addExact(int, int) -> int
fifo write: @1699477100021367702 0x7f81e1b89eb6 868: java.lang.invoke.LambdaForm$MH.0x00007f8160259000::reinvoke(Object, Object, Object) -> int
fifo write: @1699477100021427133 0x7f81e1b8a694 946: java.lang.invoke.MethodHandleImpl$CountingWrapper::maybeStopCounting(Object) -> void
fifo write: @1699477100021475114 0x7f81e1b8af14 725: java.lang.invoke.MethodHandleImpl::profileBoolean(boolean, int[]) -> boolean
fifo write: @1699477100021516534 0x7f81e1b8b914 434: java.lang.invoke.MethodHandleImpl$CountingWrapper::countDown() -> boolean
fifo write: @1699477100021572905 0x7f81e1b8c060 862: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object) -> int
fifo write: @1699477100021620375 0x7f81e925e139 54: java.lang.invoke.DirectMethodHandle::internalMemberName(Object) -> Object
fifo write: @1699477100021686486 0x7f81e1b8c940 2342: java.lang.invoke.LambdaForm$MH.0x00007f8160259400::guard(Object, Object, Object) -> int
fifo write: @1699477100021746757 0x7f81e1b8d9b6 1411: java.lang.invoke.LambdaForm$MH.0x00007f8160258400::invoke(Object, Object, Object) -> int
fifo write: @1699477100022335655 0x7f81e1b8e50a 1108: java.util.List::of(Object) -> java.util.List
fifo write: @1699477100022495337 0x7f81e1b8ef80 3894: java.lang.invoke.ClassSpecializer$SpeciesData::transformHelper(int) -> java.lang.invoke.MethodHandle
fifo write: @1699477100022549407 0x7f81e1b90994 211: java.lang.invoke.LambdaFormBuffer::replaceName(int, java.lang.invoke.LambdaForm$Name) -> void
fifo write: @1699477100023337197 0x7f81e1b90f7f 3631: java.lang.invoke.LambdaFormBuffer::clearDuplicatesAndNulls() -> void
fifo write: @1699477100023401598 0x7f81e1b92b14 217: java.lang.invoke.MethodHandle::asTypeCached(java.lang.invoke.MethodType) -> java.lang.invoke.MethodHandle
fifo write: @1699477100023713382 0x7f81e1b93096 860: java.lang.invoke.DelegatingMethodHandle$Holder::delegate(Object, Object, Object) -> int
fifo write: @1699477100023863904 0x7f81e1b938e3 931: java.lang.invoke.LambdaForm$MH.0x00007f8160001000::invoke(Object, Object) -> Object
fifo write: @1699477100023913915 0x7f81e925ea50 143: java.lang.invoke.DirectMethodHandle$Accessor::checkCast(Object) -> Object
fifo write: @1699477100024134857 0x7f81e925edba 1067: java.util.Arrays::copyOf(Object[], int, Class) -> Object[]
fifo write: @1699477100024265829 0x7f81e1b94114 31: Integer::toString() -> String
fifo write: @1699477100024309080 0x7f81e1b94514 643: Integer::toString(int) -> String
fifo write: @1699477100024473032 0x7f81e925f7bd 262: java.lang.invoke.LambdaForm$MH.0x00007f816024c400::invoke(Object, Object) -> Object
fifo write: @1699477100024610763 0x7f81e1b94c94 180: dgj::a(Integer) -> String
fifo write: @1699477100024658404 0x7f81e1b95134 534: dgj::a(Comparable) -> String
fifo write: @1699477100024823886 0x7f81e1b95794 488: dfk::b() -> dfl
fifo write: @1699477100026103363 0x7f81e9260058 14899: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477100026168564 0x7f81e9268fdd 328: com.google.common.collect.ImmutableList::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477100026218264 0x7f81e1b95d97 2893: java.util.IdentityHashMap::closeDeletion(int) -> void
fifo write: @1699477100027128676 0x7f81e92695f8 715: java.util.regex.Matcher::match(int, int) -> boolean
fifo write: @1699477100027741524 0x7f81e926a1b2 597: aew::h(String) -> boolean
fifo write: @1699477100028838408 0x7f81e1b97114 230: java.util.AbstractMap$SimpleImmutableEntry::<init>(Object, Object) -> void
fifo write: @1699477100030368838 0x7f81e926b0bd 16413: java.util.LinkedHashMap::get(Object) -> Object
fifo write: @1699477100030441999 0x7f81e1b97654 930: java.util.IdentityHashMap::get(Object) -> Object
fifo write: @1699477100030505030 0x7f81e1b980b0 1187: com.mojang.serialization.Encoder::fieldOf(String) -> com.mojang.serialization.MapEncoder
fifo write: @1699477100030575950 0x7f81e1b98c30 1187: com.mojang.serialization.Decoder::fieldOf(String) -> com.mojang.serialization.MapDecoder
fifo write: @1699477100030651391 0x7f81e1b99760 1077: com.mojang.serialization.codecs.FieldEncoder::<init>(String, com.mojang.serialization.Encoder) -> void
fifo write: @1699477100030707272 0x7f81e1b9a194 230: com.mojang.serialization.Codec$$Lambda$176.0x00007f8160185d58::<init>(com.mojang.serialization.Codec, String) -> void
fifo write: @1699477100030766443 0x7f81e1b9a6e0 1077: com.mojang.serialization.codecs.FieldDecoder::<init>(String, com.mojang.serialization.Decoder) -> void
fifo write: @1699477100030820314 0x7f81e1b9b174 1782: java.util.IdentityHashMap::remove(Object) -> Object
fifo write: @1699477100030907235 0x7f81e1b9c157 4687: com.mojang.serialization.Codec::fieldOf(String) -> com.mojang.serialization.MapCodec
fifo write: @1699477100030962635 0x7f81e1b9e019 1730: dfl::a(dgm, Comparable) -> Object
fifo write: @1699477100031071357 0x7f81e9274c56 69: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object) -> Object
fifo write: @1699477100032258822 0x7f81e1b9ee5f 1088: java.util.stream.ReferencePipeline::flatMap(java.util.function.Function) -> java.util.stream.Stream
fifo write: @1699477100032869600 0x7f81e1b9fba7 11197: dfk::a(com.mojang.serialization.MapCodec, java.util.function.Supplier, String, dgm) -> com.mojang.serialization.MapCodec
fifo write: @1699477100032916771 0x7f81e1ba3e94 240: com.google.common.collect.ImmutableList$1::get(int) -> Object
fifo write: @1699477100033000232 0x7f81e1ba43ad 1184: java.util.stream.ReferencePipeline$7::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477100033036752 0x7f81e1ba4d94 248: java.util.stream.ReferencePipeline$7$1::begin(long) -> void
fifo write: @1699477100033099153 0x7f81e1ba5234 1075: java.util.stream.ReferencePipeline$7$1::<init>(java.util.stream.ReferencePipeline$7, java.util.stream.Sink) -> void
fifo write: @1699477100033230085 0x7f81e1ba5ca1 3735: dfk$a::a(dgm) -> void
fifo write: @1699477100033535019 0x7f81e8b9e1e0 27: vtable stub
fifo write: @1699477100033647420 0x7f81e1ba7874 63: com.google.common.collect.RegularImmutableSet::size() -> int
fifo write: @1699477100033769012 0x7f81e1ba7c14 47: com.google.common.collect.ImmutableSortedMap$1EntrySet$1::get(int) -> Object
fifo write: @1699477100033860653 0x7f81e1ba8014 463: com.google.common.collect.ImmutableSortedSet::asList() -> com.google.common.collect.ImmutableList
fifo write: @1699477100033978914 0x7f81e1ba8614 440: com.mojang.serialization.MapCodec$5::<init>(com.mojang.serialization.MapCodec, java.util.function.UnaryOperator, java.util.function.Supplier) -> void
fifo write: @1699477100034094876 0x7f81e1ba8bda 1187: com.mojang.serialization.MapCodec$3::<init>(com.mojang.serialization.MapCodec, com.mojang.serialization.MapCodec$ResultFunction) -> void
fifo write: @1699477100034175357 0x7f81e1ba96b0 1299: com.mojang.serialization.MapCodec::mapResult(com.mojang.serialization.MapCodec$ResultFunction) -> com.mojang.serialization.MapCodec
fifo write: @1699477100034248148 0x7f81e1baa253 1397: com.google.common.collect.ImmutableSortedMap$1EntrySet$1::get(int) -> java.util.Map$Entry
fifo write: @1699477100034519491 0x7f81e92752cc 6: com.google.common.collect.ImmutableSortedMap$1EntrySet$1::delegateCollection() -> com.google.common.collect.ImmutableCollection
fifo write: @1699477100036061941 0x7f81e927562c 266: com.google.common.collect.CollectCollectors$$Lambda$269.0x00007f81601aa918::get() -> Object
fifo write: @1699477100036173583 0x7f81e9275b49 390: java.util.stream.Collector::of(java.util.function.Supplier, java.util.function.BiConsumer, java.util.function.BinaryOperator, java.util.function.Function, java.util.stream.Collector$Characteristics[]) -> java.util.stream.Collector
fifo write: @1699477100036294294 0x7f81e92762bc 837: com.google.common.collect.ImmutableMapEntrySet::contains(Object) -> boolean
fifo write: @1699477100036370985 0x7f81e9276f54 662: java.util.stream.ReduceOps$3ReducingSink::begin(long) -> void
fifo write: @1699477100036681349 0x7f81e1baaf94 185: hm$$Lambda$504.0x00007f81602fd340::<init>(hm) -> void
fifo write: @1699477100036738000 0x7f81e1bab414 334: hm::v() -> void
fifo write: @1699477100036846931 0x7f81e1bab994 340: hm$$Lambda$504.0x00007f81602fd340::apply(Object) -> Object
fifo write: @1699477100036907122 0x7f81e1babf14 183: hm::g(Object) -> he$c
fifo write: @1699477100036981903 0x7f81e1bac3e3 1134: java.util.Map::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477100037030904 0x7f81e1bacdee 552: he$c::a(hh, Object) -> he$c
fifo write: @1699477100037090515 0x7f81e1bad5c7 2322: hm::f(Object) -> he$c
fifo write: @1699477100037126665 0x7f81e927778b 58: java.util.ArrayList::spliterator() -> java.util.Spliterator
fifo write: @1699477100037358028 0x7f81e9277b53 354: com.google.common.collect.StandardTable::rowMap() -> java.util.Map
fifo write: @1699477100037430679 0x7f81e1bae6ba 576: he$c::b(aev) -> void
fifo write: @1699477100037756183 0x7f81e92780c7 664: com.google.common.collect.HashBasedTable::create() -> com.google.common.collect.HashBasedTable
fifo write: @1699477100037925045 0x7f81e92788d3 338: com.google.common.collect.Maps$ViewCachingAbstractMap::keySet() -> java.util.Set
fifo write: @1699477100038784216 0x7f81e1baed94 240: com.google.common.collect.ImmutableSortedMap::size() -> int
fifo write: @1699477100039166751 0x7f81e92791dc 307: eia::a(ehz$a) -> boolean
fifo write: @1699477100039822510 0x7f81e8b9d680 632: I2C/C2I adapters(0xbb7e7e7e7e7e7e7e7eb7e7e7e)
fifo write: @1699477100039836910 0x7f81e8b88780 480: I2C/C2I adapters(0xbbbb7e7e7e)
fifo write: @1699477100040244495 0x7f81e1baf214 115: Boolean::toString() -> String
fifo write: @1699477100040310176 0x7f81e1baf6b4 622: dga::a(Comparable) -> String
fifo write: @1699477100040355737 0x7f81e1bafd94 264: dga::a(Boolean) -> String
fifo write: @1699477100040935484 0x7f81e9279845 2174: java.util.stream.ReduceOps$ReduceOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477100041044166 0x7f81e1bb02b4 619: com.google.common.collect.SingletonImmutableList::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477100041289349 0x7f81e927b0d4 1995: java.util.stream.ReferencePipeline::collect(java.util.stream.Collector) -> Object
fifo write: @1699477100041365680 0x7f81e1bb0994 365: dfk$$Lambda$508.0x00007f8160301558::<init>(dfk$b, Object, com.mojang.serialization.MapCodec, java.util.Map, java.util.List) -> void
fifo write: @1699477100041440861 0x7f81e927cb8c 882: com.google.common.collect.RegularImmutableMap::createEntrySet() -> com.google.common.collect.ImmutableSet
fifo write: @1699477100041526582 0x7f81e1bb109e 2939: com.google.common.collect.ImmutableSortedMap::copyOfInternal(java.util.Map, java.util.Comparator) -> com.google.common.collect.ImmutableSortedMap
fifo write: @1699477100041825326 0x7f81e927d70a 1404: com.google.common.collect.StandardTable::cellIterator() -> java.util.Iterator
fifo write: @1699477100042782128 0x7f81e1bb28fe 10659: hm::a(int, aev, Object, com.mojang.serialization.Lifecycle) -> he$c
fifo write: @1699477100042870989 0x7f81e1bb6e14 422: com.google.common.collect.ImmutableAsList::<init>() -> void
fifo write: @1699477100043805231 0x7f81e1bb7374 63: java.util.HashMap$EntrySet::size() -> int
fifo write: @1699477100043874052 0x7f81e1bb7754 990: aew::equals(Object) -> boolean
fifo write: @1699477100044021404 0x7f81e1bb80d7 1626: com.google.common.collect.Iterables::castOrCopyToCollection(Iterable) -> java.util.Collection
fifo write: @1699477100044075385 0x7f81e1bb8d3a 715: dfk$a::<init>(Object) -> void
fifo write: @1699477100044128105 0x7f81e1bb956d 127: dfk$a::a(java.util.function.Function, dfk$b) -> dfk
fifo write: @1699477100044196246 0x7f81e1bb99f7 1985: com.google.common.collect.Iterables::toArray(Iterable, Object[]) -> Object[]
fifo write: @1699477100044250187 0x7f81e1bba839 666: java.util.stream.Streams$StreamBuilderImpl::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477100044326068 0x7f81e1bbafb9 336: gy::a(int, aev, Object, com.mojang.serialization.Lifecycle) -> he$c
fifo write: @1699477100044505520 0x7f81e1bbb634 885: com.google.common.collect.SingletonImmutableSet::<init>(Object) -> void
fifo write: @1699477100044589631 0x7f81e1bbbf06 993: com.google.common.collect.ImmutableSet::of(Object) -> com.google.common.collect.ImmutableSet
fifo write: @1699477100044653642 0x7f81e1bbc877 1537: com.google.common.collect.SingletonImmutableBiMap::createEntrySet() -> com.google.common.collect.ImmutableSet
fifo write: @1699477100045001777 0x7f81e8b88480 472: I2C/C2I adapters(0xb66666)
fifo write: @1699477100045028497 0x7f81e8b88180 480: I2C/C2I adapters(0xb66666b)
fifo write: @1699477100045931909 0x7f81e1bbd932 17255: com.google.common.collect.ImmutableSortedMap::fromEntries(java.util.Comparator, boolean, java.util.Map$Entry[], int) -> com.google.common.collect.ImmutableSortedMap
fifo write: @1699477100046026790 0x7f81e1bc40e3 1289: com.google.common.collect.ImmutableSortedMap::lambda$fromEntries$0(java.util.Comparator, java.util.Map$Entry, java.util.Map$Entry) -> int
fifo write: @1699477100046108131 0x7f81e1bc4c97 1979: com.google.common.collect.ImmutableSortedMap$$Lambda$527.0x00007f8160309128::compare(Object, Object) -> int
fifo write: @1699477100046267283 0x7f81e1bc5b8b 854: ehq::a(int, int, int, int, int, int, int, int, int) -> ehq
fifo write: @1699477100046541737 0x7f81e927e617 101: Integer::numberOfTrailingZeros(int) -> int
fifo write: @1699477100046799010 0x7f81e927ea93 3398: csv$$Lambda$506.0x00007f81602fec68::create(Object, com.google.common.collect.ImmutableMap, com.mojang.serialization.MapCodec) -> Object
fifo write: @1699477100047415348 0x7f81e1bc6594 424: dfi::<init>(dfi$d) -> void
fifo write: @1699477100047593980 0x7f81e1bc6ed4 4418: dfi$d::<init>() -> void
fifo write: @1699477100047746852 0x7f81e1bc8844 1966: csw::a(String, csv) -> csv
fifo write: @1699477100047909434 0x7f81e92809e0 2806: com.google.common.collect.ImmutableMap::hashCode() -> int
fifo write: @1699477100047961445 0x7f81e1bc97f4 4: dfi$d::e(float) -> dfi$d
fifo write: @1699477100048003675 0x7f81e1bc9b98 45: dfi$d::f(float) -> dfi$d
fifo write: @1699477100048053786 0x7f81e1bc9f94 325: dfi$d::a(float, float) -> dfi$d
fifo write: @1699477100048095057 0x7f81e1bca4f4 554: Math::max(float, float) -> float
fifo write: @1699477100048177078 0x7f81e1bcad7f 4352: csv::<init>(dfi$d) -> void
fifo write: @1699477100048254429 0x7f81e92828dc 716: ehq$$Lambda$597.0x00007f81603279f8::merge(int, int, int) -> boolean
fifo write: @1699477100048296469 0x7f81e1bccad4 104: dfi$d::a() -> dfi$d
fifo write: @1699477100048313039 0x7f81e8b9e210 27: vtable stub
fifo write: @1699477100050472827 0x7f81e9283526 1280: ehq$$Lambda$598.0x00007f8160327c20::<init>(ehr, ehw, int, int, ehw, int, int, ehq, int, int, int[], boolean[]) -> void
fifo write: @1699477100050852002 0x7f81e1bcce94 195: com.google.common.collect.SingletonImmutableList::get(int) -> Object
fifo write: @1699477100051143656 0x7f81e9284243 4301: com.google.common.collect.ArrayTable::<init>(Iterable, Iterable) -> void
fifo write: @1699477100051399859 0x7f81e1bcd314 240: com.google.common.collect.RegularImmutableAsList::get(int) -> Object
fifo write: @1699477100052376842 0x7f81e9286f7c 11: dfi$d$$Lambda$496.0x00007f81602f6a80::applyAsInt(Object) -> int
fifo write: @1699477100053059391 0x7f81e1bcd7d9 830: com.google.common.collect.ArrayTable::at(int, int) -> Object
fifo write: @1699477100053150942 0x7f81e1bce1bc 2051: com.google.common.collect.ArrayTable::get(Object, Object) -> Object
fifo write: @1699477100053904302 0x7f81e1bcf1f4 44: dfi$d::a(dai) -> dfi$d
fifo write: @1699477100055467602 0x7f81e9287250 143: java.util.stream.ReduceOps$3::getOpFlags() -> int
fifo write: @1699477100056207091 0x7f81e1bcf620 2195: com.mojang.serialization.MapCodec::orElseGet(java.util.function.UnaryOperator, java.util.function.Supplier) -> com.mojang.serialization.MapCodec
fifo write: @1699477100056268482 0x7f81e92876d0 87: com.google.common.collect.AbstractIndexedListIterator::<init>(int, int) -> void
fifo write: @1699477100056792699 0x7f81e9287ada 306: com.google.common.collect.CollectCollectors::toImmutableMap(java.util.function.Function, java.util.function.Function) -> java.util.stream.Collector
fifo write: @1699477100056827199 0x7f81e92881d0 83: java.util.ArrayList$ArrayListSpliterator::estimateSize() -> long
fifo write: @1699477100057082243 0x7f81e92885d3 346: com.google.common.collect.StandardTable::columnKeySet() -> java.util.Set
fifo write: @1699477100059467283 0x7f81e9288e4c 2: ha::e() -> int
fifo write: @1699477100060041441 0x7f81e9289134 143: it.unimi.dsi.fastutil.doubles.DoubleArrayList::wrap(double[], int) -> it.unimi.dsi.fastutil.doubles.DoubleArrayList
fifo write: @1699477100060225883 0x7f81e9289551 430: String::compareTo(String) -> int
fifo write: @1699477100060757660 0x7f81e1bd0638 402: dfi$d::d(float) -> dfi$d
fifo write: @1699477100061269447 0x7f81e9289b01 2811: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477100061304887 0x7f81e928b6a7 556: eid::a(double, double) -> int
fifo write: @1699477100061741923 0x7f81e1bd0c58 937: eib::getDouble(int) -> double
fifo write: @1699477100063264532 0x7f81e928becc 3: java.util.stream.MatchOps$BooleanTerminalSink::cancellationRequested() -> boolean
fifo write: @1699477100063817790 0x7f81e1bd1514 31: java.util.HashMap$TreeNode::<init>(int, Object, Object, java.util.HashMap$Node) -> void
fifo write: @1699477100064081283 0x7f81e1bd1937 721: java.util.Spliterators$ArraySpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477100064204115 0x7f81e1bd2159 1005: java.util.stream.AbstractPipeline::copyIntoWithCancel(java.util.stream.Sink, java.util.Spliterator) -> boolean
fifo write: @1699477100064255265 0x7f81e928c1cc 3: java.util.stream.MatchOps$BooleanTerminalSink::getAndClearState() -> boolean
fifo write: @1699477100064338366 0x7f81e928c4c8 367: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, Object) -> Object
fifo write: @1699477100064390597 0x7f81e1bd2ad4 850: com.google.common.collect.ImmutableEnumMap::get(Object) -> Object
fifo write: @1699477100064431158 0x7f81e1bd3437 963: cxt::b(ha) -> dga
fifo write: @1699477100065360970 0x7f81e1bd3e14 243: dfl::b(dgm) -> boolean
fifo write: @1699477100065396750 0x7f81e1bd4294 256: com.google.common.collect.ImmutableMap::containsKey(Object) -> boolean
fifo write: @1699477100065666264 0x7f81e1bd47d9 1588: cxt::a(dfj, ha) -> boolean
fifo write: @1699477100066215851 0x7f81e1bd5494 454: eib::size() -> int
fifo write: @1699477100067952233 0x7f81e1bd5a94 396: java.util.stream.MatchOps$1MatchSink::accept(Object) -> void
fifo write: @1699477100068159376 0x7f81e928cddb 404: ehq::a(int, int, int, int) -> boolean
fifo write: @1699477100070351344 0x7f81e928d610 2042: com.google.common.collect.CollectCollectors$$Lambda$270.0x00007f81601aab38::accept(Object, Object) -> void
fifo write: @1699477100070826820 0x7f81e928ec10 6766: dfk$$Lambda$508.0x00007f8160301558::accept(Object) -> void
fifo write: @1699477100070864830 0x7f81e9292e50 63: java.util.stream.Sink$ChainedReference::end() -> void
fifo write: @1699477100071598649 0x7f81e92931d0 71: dfi$d$$Lambda$537.0x00007f81603111b8::apply(Object) -> Object
fifo write: @1699477100071939254 0x7f81e1bd6054 87: cun::a(ha) -> int
fifo write: @1699477100071976744 0x7f81e1bd6457 76: csv::a(double, double, double, double, double, double) -> eig
fifo write: @1699477100072290868 0x7f81e929355d 954: java.util.stream.AbstractPipeline::<init>(java.util.stream.AbstractPipeline, int) -> void
fifo write: @1699477100073091269 0x7f81e9293fdc 592: ehq$$Lambda$596.0x00007f81603277d0::merge(int, int, int) -> boolean
fifo write: @1699477100073665036 0x7f81e9294985 1949: com.google.common.collect.CollectCollectors::lambda$toImmutableMap$7(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableMap$Builder, Object) -> void
fifo write: @1699477100073843108 0x7f81e8b87e80 440: I2C/C2I adapters(0xbeaaa)
fifo write: @1699477100073857218 0x7f81e8b87a00 496: I2C/C2I adapters(0xaabaaaaa)
fifo write: @1699477100074366775 0x7f81e8b9ad80 480: I2C/C2I adapters(0xaaaaaab)
fifo write: @1699477100074588408 0x7f81e1bd69a6 2982: sun.invoke.util.VerifyAccess::isModuleAccessible(Class, Module, Module) -> boolean
fifo write: @1699477100074673449 0x7f81e1bd80f4 169: java.lang.invoke.MethodHandleStatics::traceLambdaForm(String, java.lang.invoke.MethodType, Class, java.lang.invoke.MemberName) -> void
fifo write: @1699477100074912372 0x7f81e9296394 3107: eid::a(int, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> ehz
fifo write: @1699477100075657642 0x7f81e9298a9f 4322: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477100075990376 0x7f81e1bd8514 47: java.util.stream.Nodes$SpinedNodeBuilder::accept(Object) -> void
fifo write: @1699477100076111128 0x7f81e929b110 31: com.google.common.base.Preconditions::checkState(boolean) -> void
fifo write: @1699477100076174448 0x7f81e1bd8954 2156: java.util.stream.SpinedBuffer::accept(Object) -> void
fifo write: @1699477100077048560 0x7f81e1bd9954 144: ehr::l(boolean, boolean) -> boolean
fifo write: @1699477100077105880 0x7f81e1bd9d94 288: ehr$$Lambda$584.0x00007f816031ea68::apply(boolean, boolean) -> boolean
fifo write: @1699477100078103463 0x7f81e929b493 950: com.google.common.collect.AbstractIterator::hasNext() -> boolean
fifo write: @1699477100080041588 0x7f81e929bef1 1546: ehq$$Lambda$598.0x00007f8160327c20::merge(int, int, int) -> boolean
fifo write: @1699477100080350222 0x7f81e1bda294 185: dfi$d$$Lambda$537.0x00007f81603111b8::<init>(eaq) -> void
fifo write: @1699477100080572735 0x7f81e1bda777 1268: dfi$d::a(eaq) -> dfi$d
fifo write: @1699477100080649296 0x7f81e929d4e2 1385: ehq::a(ehr, ehw, int, int, ehw, int, int, ehq, int, int, int[], boolean[], int, int, int) -> boolean
fifo write: @1699477100082151276 0x7f81e8b9d080 480: I2C/C2I adapters(0xbbbaaaa)
fifo write: @1699477100082619932 0x7f81e929ec14 1281: com.google.common.collect.AbstractIterator::next() -> Object
fifo write: @1699477100083145128 0x7f81e1bdb294 2343: java.util.HashMap$TreeNode::balanceInsertion(java.util.HashMap$TreeNode, java.util.HashMap$TreeNode) -> java.util.HashMap$TreeNode
fifo write: @1699477100085909954 0x7f81e929fb53 12888: dfk::a(dfk$b, Object, com.mojang.serialization.MapCodec, java.util.Map, java.util.List, java.util.List) -> void
fifo write: @1699477100086277689 0x7f81e92a76f7 600: java.util.stream.ReferencePipeline::forEach(java.util.function.Consumer) -> void
fifo write: @1699477100087049229 0x7f81e92a80d0 67: java.util.stream.Sink$ChainedReference::begin(long) -> void
fifo write: @1699477100087208021 0x7f81e92a8456 221: java.util.stream.AbstractPipeline::close() -> void
fifo write: @1699477100088692900 0x7f81e92a88d3 358: com.google.common.collect.Maps$ViewCachingAbstractMap::entrySet() -> java.util.Set
fifo write: @1699477100088769271 0x7f81e92a8e75 558: java.util.Spliterators$ArraySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477100089974687 0x7f81e92a9777 869: java.util.stream.ReferencePipeline::map(java.util.function.Function) -> java.util.stream.Stream
fifo write: @1699477100090398222 0x7f81e1bdc946 5002: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477100090918059 0x7f81e92aa1ef 2351: com.google.common.collect.StandardTable$ColumnKeyIterator::<init>(com.google.common.collect.StandardTable) -> void
fifo write: @1699477100091131241 0x7f81e1bded94 175: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::listIterator() -> it.unimi.dsi.fastutil.doubles.DoubleListIterator
fifo write: @1699477100091149092 0x7f81e8b9e240 27: vtable stub
fifo write: @1699477100091231143 0x7f81e92abacc 6: csv::n() -> dfj
fifo write: @1699477100091355154 0x7f81e1bdf31d 1420: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::ensureIndex(int) -> void
fifo write: @1699477100091924742 0x7f81e1be0194 240: it.unimi.dsi.fastutil.doubles.AbstractDoubleList$1::getMaxPos() -> int
fifo write: @1699477100091972302 0x7f81e1be05f4 159: it.unimi.dsi.fastutil.doubles.DoubleArrayList$1::hasNext() -> boolean
fifo write: @1699477100092024813 0x7f81e1be0a94 431: it.unimi.dsi.fastutil.doubles.DoubleIterators$AbstractIndexBasedIterator::hasNext() -> boolean
fifo write: @1699477100092079994 0x7f81e1be10b4 604: it.unimi.dsi.fastutil.doubles.DoubleArrayList$1::nextDouble() -> double
fifo write: @1699477100092125534 0x7f81e1be1894 240: it.unimi.dsi.fastutil.doubles.AbstractDoubleList$1::get(int) -> double
fifo write: @1699477100092189205 0x7f81e1be1d57 1248: it.unimi.dsi.fastutil.doubles.DoubleIterators$AbstractIndexBasedIterator::nextDouble() -> double
fifo write: @1699477100092282596 0x7f81e92abdd0 199: eia::a() -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477100092355897 0x7f81e1be28d4 1061: dbr::a(eig, dgv, eig, eig) -> eig
fifo write: @1699477100092957455 0x7f81e92ac2d5 590: ehq::b(int, int, int, int) -> void
fifo write: @1699477100093198058 0x7f81e92accd1 158: java.util.BitSet::recalculateWordsInUse() -> void
fifo write: @1699477100093481812 0x7f81e92ad130 79: java.util.BitSet::checkRange(int, int) -> void
fifo write: @1699477100093918517 0x7f81e92ad80f 2112: com.google.common.collect.StandardTable$ColumnKeySet::iterator() -> java.util.Iterator
fifo write: @1699477100094019549 0x7f81e92af050 119: ehw::<init>(int, int, int) -> void
fifo write: @1699477100094526655 0x7f81e92af453 176: ehy::a(ehz$a) -> boolean
fifo write: @1699477100094836229 0x7f81e92af950 83: ehy::size() -> int
fifo write: @1699477100094927090 0x7f81e92afcdc 551: java.util.BitSet::clear(int, int) -> void
fifo write: @1699477100096083005 0x7f81e92b05d5 410: it.unimi.dsi.fastutil.doubles.DoubleArrayList::equals(it.unimi.dsi.fastutil.doubles.DoubleArrayList) -> boolean
fifo write: @1699477100097283261 0x7f81e92b0dd4 3596: java.util.stream.ReferencePipeline$7$1::accept(Object) -> void
fifo write: @1699477100097361702 0x7f81e92b3678 611: it.unimi.dsi.fastutil.doubles.DoubleArrayList::equals(Object) -> boolean
fifo write: @1699477100097591915 0x7f81e92b404f 1567: ehp::<init>(ehw, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList) -> void
fifo write: @1699477100099300477 0x7f81e92b51c6 5113: java.util.AbstractCollection::toArray() -> Object[]
fifo write: @1699477100101729188 0x7f81e92b8c61 414: ehq::a(int, int, int, int, int) -> boolean
fifo write: @1699477100103209577 0x7f81e1be3317 2424: com.google.common.collect.ImmutableSortedMap::fromEntries(java.util.Comparator, boolean, Iterable) -> com.google.common.collect.ImmutableSortedMap
fifo write: @1699477100107180649 0x7f81e92b9668 10542: jdk.internal.org.objectweb.asm.SymbolTable::addConstantMemberReference(int, String, String, String) -> jdk.internal.org.objectweb.asm.SymbolTable$Entry
fifo write: @1699477100107245259 0x7f81e1be443e 677: dfk$a::a(dgm[]) -> dfk$a
fifo write: @1699477100108486536 0x7f81e92bfe21 4848: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477100108792279 0x7f81e92c2750 75: com.google.common.collect.RegularImmutableList::get(int) -> Object
fifo write: @1699477100109177464 0x7f81e1be4c94 322: ehq::b(int, int, int, int) -> void
fifo write: @1699477100109459628 0x7f81e1be5280 1205: java.util.BitSet::clear(int, int) -> void
fifo write: @1699477100110849216 0x7f81e1be5fd4 1055: dgj::equals(Object) -> boolean
fifo write: @1699477100124677234 0x7f81e92c2c5d 8860: eid::a(double, double, double, double, double, double) -> eig
fifo write: @1699477100124771305 0x7f81e1be6957 1287: com.google.common.collect.RegularImmutableSortedSet::createAsList() -> com.google.common.collect.ImmutableList
fifo write: @1699477100125069639 0x7f81e92c82e6 6691: eid::b(eig, eig, ehr) -> eig
fifo write: @1699477100125120079 0x7f81e1be7474 2: java.util.stream.Streams$AbstractStreamBuilderImpl::estimateSize() -> long
fifo write: @1699477100125165450 0x7f81e1be7814 400: com.google.common.collect.ImmutableAsList::size() -> int
fifo write: @1699477100125239931 0x7f81e1be7db4 616: com.google.common.collect.ImmutableSortedMap$1EntrySet$1::<init>(com.google.common.collect.ImmutableSortedMap$1EntrySet) -> void
fifo write: @1699477100125309292 0x7f81e1be8506 726: com.google.common.collect.ImmutableSortedMap$1EntrySet::createAsList() -> com.google.common.collect.ImmutableList
fifo write: @1699477100125389663 0x7f81e1be8c5a 1480: com.google.common.collect.ImmutableSortedMap$1EntrySet::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477100126987244 0x7f81e1be9794 324: cun$$Lambda$678.0x00007f8160357558::applyAsInt(Object) -> int
fifo write: @1699477100127061345 0x7f81e1be9c94 167: it.unimi.dsi.fastutil.objects.Object2IntMap::computeIntIfAbsent(Object, java.util.function.ToIntFunction) -> int
fifo write: @1699477100127127865 0x7f81e92ccb5d 1004: ehq::<init>(int, int, int) -> void
fifo write: @1699477100127199686 0x7f81e1bea17e 1470: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::find(Object) -> int
fifo write: @1699477100127282277 0x7f81e1beaee3 854: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::computeIfAbsent(Object, java.util.function.ToIntFunction) -> int
fifo write: @1699477100127331188 0x7f81e1beb834 907: cun::g(dfj) -> int
fifo write: @1699477100127399439 0x7f81e1bec0b4 775: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::insert(int, Object, int) -> void
fifo write: @1699477100127556031 0x7f81e1beca14 2753: cun::h(dfj) -> int
fifo write: @1699477100128168419 0x7f81e92cd653 497: java.util.BitSet::<init>(int) -> void
fifo write: @1699477100128347791 0x7f81e92cdc51 42: java.util.stream.ForEachOps$ForEachOp::getOpFlags() -> int
fifo write: @1699477100130065773 0x7f81e1bede54 28: Math::getExponent(double) -> int
fifo write: @1699477100130157164 0x7f81e1bee217 920: StrictMath::floorOrCeil(double, double, double, double) -> double
fifo write: @1699477100141048595 0x7f81e92ce0e8 8325: eid::b(double, double, double, double, double, double) -> eig
fifo write: @1699477100141340449 0x7f81e92d32e9 1648: java.util.stream.ForEachOps$ForEachOp$OfRef::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477100141849265 0x7f81e1beeb86 2640: java.util.TimSort::binarySort(Object[], int, int, int, java.util.Comparator) -> void
fifo write: @1699477100142291291 0x7f81e1befdb7 695: com.google.common.collect.ImmutableList$1::<init>(com.google.common.collect.ImmutableList, int, int) -> void
fifo write: @1699477100142382212 0x7f81e1bf05b1 1013: com.google.common.collect.ImmutableList::listIterator(int) -> com.google.common.collect.UnmodifiableListIterator
fifo write: @1699477100145890908 0x7f81e92d4616 1295: dfl::c(dgm) -> Comparable
fifo write: @1699477100146159051 0x7f81e92d58d9 6943: eig::a(eig[], double, double, double, double, double, double) -> void
fifo write: @1699477100147394117 0x7f81e1bf0ef4 44: dfi$d::a(dgk) -> dfi$d
fifo write: @1699477100148062966 0x7f81e1bf12b4 516: com.google.common.collect.ImmutableSortedSetFauxverideShim::<init>() -> void
fifo write: @1699477100148129867 0x7f81e1bf18b7 797: com.google.common.collect.RegularImmutableSortedSet::<init>(com.google.common.collect.ImmutableList, java.util.Comparator) -> void
fifo write: @1699477100148178497 0x7f81e1bf2137 658: com.google.common.collect.ImmutableSortedSet::<init>(java.util.Comparator) -> void
fifo write: @1699477100148284348 0x7f81e1bf2894 463: com.google.common.collect.ImmutableSortedMap::<init>(com.google.common.collect.RegularImmutableSortedSet, com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSortedMap) -> void
fifo write: @1699477100148355129 0x7f81e1bf2f34 533: com.google.common.collect.ImmutableSortedMap::<init>(com.google.common.collect.RegularImmutableSortedSet, com.google.common.collect.ImmutableList) -> void
fifo write: @1699477100148392270 0x7f81e1bf3614 234: com.google.common.collect.ImmutableSortedMapFauxverideShim::<init>() -> void
fifo write: @1699477100149647046 0x7f81e92da6d3 338: java.util.LinkedHashMap::keySet() -> java.util.Set
fifo write: @1699477100149977550 0x7f81e92dabd1 74: dgj::equals(Object) -> boolean
fifo write: @1699477100150240524 0x7f81e92daf51 58: com.google.common.collect.Iterators$9::next() -> Object
fifo write: @1699477100150584238 0x7f81e92db300 492: java.util.AbstractMap::size() -> int
fifo write: @1699477100150659889 0x7f81e92dbad0 99: com.google.common.collect.StandardTable$RowMap$EntrySet::size() -> int
fifo write: @1699477100150750680 0x7f81e92dbef0 528: com.google.common.collect.Maps$KeySet::size() -> int
fifo write: @1699477100151156516 0x7f81e92dc74f 98: com.google.common.collect.SingletonImmutableSet::iterator() -> java.util.Iterator
fifo write: @1699477100153783669 0x7f81e1bf3ae2 1562: java.util.TimSort::countRunAndMakeAscending(Object[], int, int, java.util.Comparator) -> int
fifo write: @1699477100154129564 0x7f81e1bf492c 1422: java.util.TimSort::sort(Object[], int, int, java.util.Comparator, Object[], int, int) -> void
fifo write: @1699477100156321132 0x7f81e1bf5894 334: it.unimi.dsi.fastutil.doubles.DoubleIterators$AbstractIndexBasedListIterator::<init>(int, int) -> void
fifo write: @1699477100156382403 0x7f81e1bf5e14 240: it.unimi.dsi.fastutil.doubles.DoubleIterators$AbstractIndexBasedIterator::<init>(int, int) -> void
fifo write: @1699477100156463274 0x7f81e1bf6317 532: it.unimi.dsi.fastutil.doubles.AbstractDoubleList$1::<init>(it.unimi.dsi.fastutil.doubles.AbstractDoubleList, int, int) -> void
fifo write: @1699477100156566085 0x7f81e1bf69b7 923: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::listIterator(int) -> it.unimi.dsi.fastutil.doubles.DoubleListIterator
fifo write: @1699477100156625146 0x7f81e1bf7214 137: it.unimi.dsi.fastutil.doubles.AbstractDoubleIterator::<init>() -> void
fifo write: @1699477100156704017 0x7f81e1bf7614 253: it.unimi.dsi.fastutil.doubles.DoubleArrayList$1::<init>(it.unimi.dsi.fastutil.doubles.DoubleArrayList, int) -> void
fifo write: @1699477100156785618 0x7f81e1bf7b14 637: it.unimi.dsi.fastutil.doubles.DoubleArrayList::listIterator(int) -> it.unimi.dsi.fastutil.doubles.DoubleListIterator
fifo write: @1699477100157416586 0x7f81e1bf8357 4977: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::equals(Object) -> boolean
fifo write: @1699477100158745724 0x7f81e1bfa214 47: StrictMath::ceil(double) -> double
fifo write: @1699477100158785144 0x7f81e1bfa5f4 23: Math::ceil(double) -> double
fifo write: @1699477100159914879 0x7f81e92dcb79 2188: java.util.regex.Pattern::matcher(CharSequence) -> java.util.regex.Matcher
fifo write: @1699477100161110454 0x7f81e92de101 2541: java.util.regex.Matcher::<init>(java.util.regex.Pattern, CharSequence) -> void
fifo write: @1699477100163557816 0x7f81e92df9b9 3727: dfl::a(dgm, Comparable) -> Object
fifo write: @1699477100164339996 0x7f81e92e27d9 226: ehv::a(ehz$a) -> boolean
fifo write: @1699477100165426520 0x7f81e92e2d55 1146: ehq::b(int, int, int, int) -> void
fifo write: @1699477100165627142 0x7f81e92e3c10 39: com.google.common.math.MathPreconditions::checkNonNegative(String, int) -> int
fifo write: @1699477100165881496 0x7f81e92e3f5c 1087: java.util.BitSet::clear(int, int) -> void
fifo write: @1699477100166633655 0x7f81e92e4cea 326: java.util.LinkedHashMap$LinkedKeySet::iterator() -> java.util.Iterator
fifo write: @1699477100166945739 0x7f81e92e52cc 6: ha$a::c() -> String
fifo write: @1699477100167285024 0x7f81e92e55fa 1220: java.util.IdentityHashMap::put(Object, Object) -> Object
fifo write: @1699477100170265452 0x7f81e92e6475 1750: com.google.common.collect.StandardTable$RowMap$EntrySet::iterator() -> java.util.Iterator
fifo write: @1699477100171540878 0x7f81e1bfa9f4 1570: java.util.stream.AbstractPipeline::sourceStageSpliterator() -> java.util.Spliterator
fifo write: @1699477100171636719 0x7f81e1bfb79f 1572: java.util.stream.ReferencePipeline$Head::forEach(java.util.function.Consumer) -> void
fifo write: @1699477100171700630 0x7f81e1bfc494 402: java.util.Spliterators$EmptySpliterator::forEachRemaining(Object) -> void
fifo write: @1699477100171775141 0x7f81e1bfca34 491: java.util.Spliterators$EmptySpliterator$OfRef::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477100172725373 0x7f81e92e76b0 2604: com.google.common.collect.Maps$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477100177677817 0x7f81e1bfd394 320: java.util.Arrays::sort(Object[], int, int, java.util.Comparator) -> void
fifo write: @1699477100178120753 0x7f81e92e934c 6: dgs::c() -> String
fifo write: @1699477100184177201 0x7f81e92e9c19 36444: dfl::a(java.util.Map) -> void
fifo write: @1699477100184671527 0x7f81e9300ca4 16810: eig$$Lambda$599.0x00007f8160322e88::consume(double, double, double, double, double, double) -> void
fifo write: @1699477100184897170 0x7f81e930aeaf 5295: com.google.common.collect.StandardTable$ColumnKeySet::size() -> int
fifo write: @1699477100184928211 0x7f81e930e190 31: com.google.common.base.Preconditions::checkArgument(boolean) -> void
fifo write: @1699477100185364146 0x7f81e930e4d6 125: java.util.regex.Pattern$LastNode::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477100185888563 0x7f81e930e997 380: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::<init>() -> void
fifo write: @1699477100187590425 0x7f81e8b9e270 168: itable stub
fifo write: @1699477100187617685 0x7f81e8b9e328 168: itable stub
fifo write: @1699477100189612171 0x7f81e930f284 18416: eig$$Lambda$600.0x00007f81603232b0::consume(int, int, int, int, int, int) -> void
fifo write: @1699477100190284290 0x7f81e931a882 19282: eig::a(eid$a, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, int, int, int, int, int, int) -> void
fifo write: @1699477100190350091 0x7f81e9325db3 560: com.google.common.collect.ImmutableList::construct(Object[]) -> com.google.common.collect.ImmutableList
fifo write: @1699477100191623497 0x7f81e932677a 1137: ehq::<init>(ehw) -> void
fifo write: @1699477100194672047 0x7f81e932747c 764: com.google.common.collect.ImmutableList::copyOf(Iterable) -> com.google.common.collect.ImmutableList
fifo write: @1699477100215810249 0x7f81e93285b0 16911: java.util.AbstractCollection::toArray() -> Object[]
fifo write: @1699477100216882133 0x7f81e9331bcc 6: dgv::c() -> String
fifo write: @1699477100221612624 0x7f81e9332e06 28689: jdk.internal.org.objectweb.asm.Frame::execute(int, int, jdk.internal.org.objectweb.asm.Symbol, jdk.internal.org.objectweb.asm.SymbolTable) -> void
fifo write: @1699477100228458302 0x7f81e9343e3e 27096: ehq::a(ehw, ehw$b, boolean) -> void
fifo write: @1699477100230810412 0x7f81e9357314 1: ac$a::hashCode(Object) -> int
fifo write: @1699477100239508155 0x7f81e93576ed 12921: eig::b(eid$a) -> void
fifo write: @1699477100244149175 0x7f81e1bfd994 185: ehy::<init>(it.unimi.dsi.fastutil.doubles.DoubleList) -> void
fifo write: @1699477100244911804 0x7f81e1bfde23 112: eig$$Lambda$600.0x00007f81603232b0::consume(int, int, int, int, int, int) -> void
fifo write: @1699477100244981325 0x7f81e1bfe297 36: eig$$Lambda$599.0x00007f8160322e88::consume(double, double, double, double, double, double) -> void
fifo write: @1699477100245152137 0x7f81e1bfe80e 5306: eid::a(int, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> ehz
fifo write: @1699477100245244849 0x7f81e1c009e8 1411: eig::a(eid$a, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, int, int, int, int, int, int) -> void
fifo write: @1699477100245448451 0x7f81e1c01869 7804: eid::b(eig, eig, ehr) -> eig
fifo write: @1699477100247070612 0x7f81e1c04974 3: dfi$d::h() -> dfi$d
fifo write: @1699477100248104326 0x7f81e1c04d17 544: eig::a(eig[], double, double, double, double, double, double) -> void
fifo write: @1699477100249601145 0x7f81e935f851 446: java.util.regex.Pattern$Dollar::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477100250583758 0x7f81e1c05459 1377: dgh::equals(Object) -> boolean
fifo write: @1699477100250628638 0x7f81e1c05fd4 1255: dgm::equals(Object) -> boolean
fifo write: @1699477100250990643 0x7f81e9360451 1305: ehp::<init>(ehw, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList) -> void
fifo write: @1699477100251778973 0x7f81e1c06a74 44: dfi$d::a(ear) -> dfi$d
fifo write: @1699477100251819384 0x7f81e1c06e17 558: eid::a(double, double, double, double, double, double) -> eig
fifo write: @1699477100252725955 0x7f81e9361392 14194: eig::d() -> eig
fifo write: @1699477100253053139 0x7f81e8feaccc 6: dgr::c() -> String
fifo write: @1699477100253538066 0x7f81e9047708 2023: ehq::a(ehw, ehw, ehz, ehz, ehz, ehr) -> ehq
fifo write: @1699477100256506104 0x7f81e8ff1950 35: com.google.common.collect.RegularImmutableSet::size() -> int
fifo write: @1699477100256684606 0x7f81e90b7754 575: dgh::equals(Object) -> boolean
fifo write: @1699477100257147952 0x7f81e9001cf4 1130: ehq$$Lambda$596.0x00007f81603277d0::<init>(ehz, ehz, ehr, ehw, ehw, ehq, int[]) -> void
fifo write: @1699477100259838397 0x7f81e9066cea 7417: ehq::a(ehw, ehw$b, boolean) -> void
fifo write: @1699477100259958269 0x7f81e8b9cd80 448: I2C/C2I adapters(0xbab6)
fifo write: @1699477100260809810 0x7f81e8b9ca80 480: I2C/C2I adapters(0xbb7e7e7e7e7e)
fifo write: @1699477100260830610 0x7f81e8b9c780 456: I2C/C2I adapters(0xbbbb7e)
fifo write: @1699477100262788265 0x7f81e1482677 3034: java.lang.invoke.MemberName::equals(java.lang.invoke.MemberName) -> boolean
fifo write: @1699477100267659267 0x7f81e140c817 338: czy::g_(dfj) -> boolean
fifo write: @1699477100271273234 0x7f81e90fe78e 141: ehu::a(ha$a) -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477100273220859 0x7f81e9017014 2838: eid::a(int, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> ehz
fifo write: @1699477100275901744 0x7f81e9094132 269: eid::a(double, double, double, double, double, double) -> eig
fifo write: @1699477100280150858 0x7f81e1439314 324: ctj$$Lambda$787.0x00007f8160386e90::applyAsInt(Object) -> int
fifo write: @1699477100280202649 0x7f81e1ae27b4 1085: ctj::h(dfj) -> int
fifo write: @1699477100281981702 0x7f81e90b8665 267: java.util.concurrent.locks.ReentrantLock$Sync::tryRelease(int) -> boolean
fifo write: @1699477100283752485 0x7f81e144fd94 324: csw$$Lambda$799.0x00007f816038ac38::applyAsInt(Object) -> int
fifo write: @1699477100287838538 0x7f81e1447cb7 536: java.util.LinkedHashMap::replacementTreeNode(java.util.HashMap$Node, java.util.HashMap$Node) -> java.util.HashMap$TreeNode
fifo write: @1699477100287919809 0x7f81e1463b34 916: java.util.LinkedHashMap::transferLinks(java.util.LinkedHashMap$Entry, java.util.LinkedHashMap$Entry) -> void
fifo write: @1699477100289330867 0x7f81e1409279 1399: eib::b(ehz$a) -> boolean
fifo write: @1699477100289468229 0x7f81e1ab0497 1436: eib::a(ehz$a) -> boolean
fifo write: @1699477100289554170 0x7f81e145ae14 324: cxt$$Lambda$716.0x00007f8160367020::apply(Object) -> Object
fifo write: @1699477100290216998 0x7f81e147bd1c 3999: cxt::o(dfj) -> eig
fifo write: @1699477100297023396 0x7f81e91db349 7273: eig::a(eig[], double, double, double, double, double, double) -> void
fifo write: @1699477100297342680 0x7f81e8ffa70b 62: java.util.stream.ReduceOps$3::makeSink() -> java.util.stream.ReduceOps$AccumulatingSink
fifo write: @1699477100297865997 0x7f81e8ffc88b 62: java.util.stream.ReduceOps$3::makeSink() -> java.util.stream.ReduceOps$3ReducingSink
fifo write: @1699477100300191777 0x7f81e9222ca8 18754: dfk::<init>(java.util.function.Function, Object, dfk$b, java.util.Map) -> void
fifo write: @1699477100300357539 0x7f81e901ae24 2164: java.util.stream.ReduceOps$ReduceOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477100300421200 0x7f81e90e3a57 173: ClassLoader::getClassLoadingLock(String) -> Object
fifo write: @1699477100300481051 0x7f81e8b9c480 480: I2C/C2I adapters(0xbabbbab)
fifo write: @1699477100301244431 0x7f81e90ce9e5 7305: eig$$Lambda$599.0x00007f8160322e88::consume(double, double, double, double, double, double) -> void
fifo write: @1699477100302522047 0x7f81e90df83b 4860: com.google.common.collect.ImmutableMap::equals(Object) -> boolean
fifo write: @1699477100303147585 0x7f81e900e7e4 9096: eig$$Lambda$600.0x00007f81603232b0::consume(int, int, int, int, int, int) -> void
fifo write: @1699477100304205209 0x7f81e9217868 9588: eig::a(eid$a, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, int, int, int, int, int, int) -> void
fifo write: @1699477100306402107 0x7f81e901aa4c 6: dgi::c() -> String
fifo write: @1699477100307862506 0x7f81e9296600 2191: com.google.common.base.Equivalence$Equals::doHash(Object) -> int
fifo write: @1699477100319860590 0x7f81e917f81b 15671: eid::a(eig, eig) -> eig
fifo write: @1699477100319922841 0x7f81e9296294 39: java.util.Objects::requireNonNull(Object, java.util.function.Supplier) -> Object
fifo write: @1699477100321736105 0x7f81e145b794 482: hm$$Lambda$535.0x00007f81603108b8::test(Object) -> boolean
fifo write: @1699477100322633236 0x7f81e8b9b700 464: I2C/C2I adapters(0xba7ebbb)
fifo write: @1699477100324091275 0x7f81e9123bc6 16956: eid::b(eig, eig, ehr) -> eig
fifo write: @1699477100324892365 0x7f81e14fb97c 1969: java.lang.invoke.LambdaForm::arguments(int, java.lang.invoke.MethodType) -> java.lang.invoke.LambdaForm$Name[]
fifo write: @1699477100324972906 0x7f81e8b9b400 504: I2C/C2I adapters(0xbbbbbbab)
fifo write: @1699477100324984636 0x7f81e8b9b080 520: I2C/C2I adapters(0xbbbaaaaaa)
fifo write: @1699477100324996317 0x7f81e8b9c180 456: I2C/C2I adapters(0xb7ebba)
fifo write: @1699477100325006807 0x7f81e8b9be80 448: I2C/C2I adapters(0xb7ebb)
fifo write: @1699477100325037387 0x7f81e8b9ba00 440: I2C/C2I adapters(0xba7ea)
fifo write: @1699477100325047947 0x7f81e8baa480 480: I2C/C2I adapters(0xbabaaaa)
fifo write: @1699477100329779498 0x7f81e8baa180 520: I2C/C2I adapters(0xbbbbbaaab)
fifo write: @1699477100329968611 0x7f81e8ba9e80 536: I2C/C2I adapters(0xbbbabaaaab)
fifo write: @1699477100330043422 0x7f81e8ba9b80 536: I2C/C2I adapters(0xbbbbabaaaa)
fifo write: @1699477100330493358 0x7f81e14d7614 275: java.lang.invoke.InvokerBytecodeGenerator$ClassData::<init>(String, String, Object) -> void
fifo write: @1699477100330535078 0x7f81e1410cf4 83: java.lang.invoke.LambdaForm::lambdaName() -> String
fifo write: @1699477100330548698 0x7f81e8ba9880 504: I2C/C2I adapters(0xbbbbbaba)
fifo write: @1699477100330590719 0x7f81e145a474 15: java.lang.invoke.InvokerBytecodeGenerator::bogusMethod(Object) -> void
fifo write: @1699477100330627959 0x7f81e15fdf74 15: java.lang.invoke.InvokerBytecodeGenerator::maybeDump(byte[]) -> void
fifo write: @1699477100330680400 0x7f81e1438539 825: jdk.internal.org.objectweb.asm.ClassWriter::visitSource(String, String) -> void
fifo write: @1699477100330694040 0x7f81e8ba9580 560: I2C/C2I adapters(0xbbaabaaaaab)
fifo write: @1699477100330806132 0x7f81e16c5d94 374: java.lang.invoke.InvokerBytecodeGenerator::toByteArray() -> byte[]
fifo write: @1699477100330849272 0x7f81e1559e74 84: System$2::classData(Class) -> Object
fifo write: @1699477100330862872 0x7f81e8ba9280 560: I2C/C2I adapters(0xbbbaabaaaaa)
fifo write: @1699477100330943593 0x7f81e140f63c 1613: java.lang.invoke.InvokerBytecodeGenerator::classFilePrologue() -> jdk.internal.org.objectweb.asm.ClassWriter
fifo write: @1699477100330957574 0x7f81e8ba8f80 504: I2C/C2I adapters(0xbbbaabaa)
fifo write: @1699477100331010204 0x7f81e1459599 611: java.lang.invoke.MethodHandleNatives::classData(Class) -> Object
fifo write: @1699477100331023754 0x7f81e8ba8c80 520: I2C/C2I adapters(0xbbbaabaab)
fifo write: @1699477100331312348 0x7f81e147b094 615: java.lang.invoke.DirectMethodHandle::getFunction(byte) -> java.lang.invoke.LambdaForm$NamedFunction
fifo write: @1699477100331326958 0x7f81e8ba8980 520: I2C/C2I adapters(0xbbbbaabaa)
fifo write: @1699477100331537651 0x7f81e1abe52f 6914: java.lang.invoke.InvokerBytecodeGenerator::clinit(jdk.internal.org.objectweb.asm.ClassWriter, String, java.util.List) -> void
fifo write: @1699477100331574042 0x7f81e1577454 144: ehr::n(boolean, boolean) -> boolean
fifo write: @1699477100331617442 0x7f81e1466914 288: ehr$$Lambda$582.0x00007f816031e628::apply(boolean, boolean) -> boolean
fifo write: @1699477100331654683 0x7f81e157a01d 110: eid$$Lambda$829.0x00007f81603a4000::merge(int, int, int) -> boolean
fifo write: @1699477100331701463 0x7f81e14bef9b 726: eid::a(ehr, ehw, int, int, ehw, int, int, int, int, int) -> boolean
fifo write: @1699477100331941466 0x7f81e14d8914 416: eig::a(ha$a, int) -> double
fifo write: @1699477100332409542 0x7f81e90f7f3d 314: java.lang.invoke.DirectMethodHandle::allocateInstance(Object) -> Object
fifo write: @1699477100332450753 0x7f81e144a779 1085: eig::c(ha$a) -> double
fifo write: @1699477100332527404 0x7f81e14ee02a 432: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477100332649375 0x7f81e1a6478c 1180: java.lang.invoke.LambdaForm$DMH.0x00007f8160191400::newInvokeSpecial(Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477100332709226 0x7f81e1a9789e 1534: eig::b(ha$a) -> double
fifo write: @1699477100332760527 0x7f81e141fe94 306: dfi$a::b() -> csv
fifo write: @1699477100332833398 0x7f81e14b4d1d 86: eid$$Lambda$827.0x00007f816039c9f8::merge(int, int, int) -> boolean
fifo write: @1699477100332982720 0x7f81e15875cf 689: java.lang.invoke.LambdaForm$MH.0x00007f81603a0c00::linkToTargetMethod(Object, Object, Object, int, Object, int, Object) -> Object
fifo write: @1699477100333036810 0x7f81e1547114 336: eid$$Lambda$828.0x00007f816039cc20::<init>(ehz, ehr, ehw, int, ehw, int) -> void
fifo write: @1699477100333068261 0x7f81e900e250 63: eig::c() -> boolean
fifo write: @1699477100333106431 0x7f81e150a51d 94: eid$$Lambda$828.0x00007f816039cc20::merge(int, int, int) -> boolean
fifo write: @1699477100333182462 0x7f81e1aeab88 1592: java.lang.invoke.LambdaForm$DMH.0x00007f81603a0400::newInvokeSpecial(Object, Object, Object, Object, int, Object, int) -> Object
fifo write: @1699477100333236573 0x7f81e14487de 1992: eid::a(ehz, ehz, ehr, ehw, ehw, int, int, int) -> boolean
fifo write: @1699477100333304534 0x7f81e155e285 584: java.lang.invoke.LambdaForm$MH.0x00007f81603a1c00::linkToTargetMethod(Object, Object, int, int, Object, int, int, Object) -> Object
fifo write: @1699477100333430896 0x7f81e1b0d846 5002: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477100333539687 0x7f81e1b72588 1608: java.lang.invoke.LambdaForm$DMH.0x00007f81603a1400::newInvokeSpecial(Object, Object, Object, int, int, Object, int, int) -> Object
fifo write: @1699477100333589408 0x7f81e19a8c14 303: eid$$Lambda$829.0x00007f81603a4000::<init>(ehr, ehw, int, int, ehw, int, int) -> void
fifo write: @1699477100333651688 0x7f81e141d2de 1888: eid::a(ehz, ehr, ehw, int, ehw, int, int, int, int) -> boolean
fifo write: @1699477100333701369 0x7f81e900ddcc 6: com.google.common.cache.LocalCache$WeakAccessEntry::getNextInAccessQueue() -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100333748210 0x7f81e91b6ecc 44: com.google.common.cache.LocalCache$AccessQueue$1::setNextInAccessQueue(com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100333795150 0x7f81e91b69cc 44: com.google.common.cache.LocalCache$AccessQueue$1::setPreviousInAccessQueue(com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100334051124 0x7f81e1653b49 2392: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite::compareAndSet(java.lang.invoke.VarHandle, Object, Object, Object) -> boolean
fifo write: @1699477100334143755 0x7f81e162da94 144: dfi::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100334316897 0x7f81e173d70b 7333: java.lang.invoke.VarHandleGuards::guard_LLL_Z(java.lang.invoke.VarHandle, Object, Object, Object, java.lang.invoke.VarHandle$AccessDescriptor) -> boolean
fifo write: @1699477100334388168 0x7f81e14dafbd 842: dfi$a::a(cpb, gw, ehs) -> eig
fifo write: @1699477100334442499 0x7f81e1766c16 309: dfi$a::j(cpb, gw) -> eig
fifo write: @1699477100334496739 0x7f81e9022ccc 6: com.google.common.cache.LocalCache$WeakEntry::getValueReference() -> com.google.common.cache.LocalCache$ValueReference
fifo write: @1699477100334540300 0x7f81e1761274 101: com.google.common.cache.LocalCache::expiresAfterAccess() -> boolean
fifo write: @1699477100334617491 0x7f81e92b02d7 35: com.google.common.collect.TransformedIterator::hasNext() -> boolean
fifo write: @1699477100334704112 0x7f81e903037c 1500: StringBuilder::append(String) -> StringBuilder
fifo write: @1699477100334750093 0x7f81e92affcc 2: com.google.common.cache.LocalCache$WeakEntry::getHash() -> int
fifo write: @1699477100334791783 0x7f81e1547d74 173: com.google.common.cache.LocalCache$WeakEntry::getKey() -> Object
fifo write: @1699477100334842284 0x7f81e92afccc 6: com.google.common.cache.LocalCache$StrongValueReference::get() -> Object
fifo write: @1699477100334898064 0x7f81e15a3d37 768: dfi::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100334979086 0x7f81e15b29f4 445: com.google.common.cache.LocalCache::connectAccessOrder(com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100335018666 0x7f81e8ff9730 12: ehr$$Lambda$582.0x00007f816031e628::apply(boolean, boolean) -> boolean
fifo write: @1699477100335068017 0x7f81e8ff93cc 44: com.google.common.cache.LocalCache$WeakAccessEntry::setNextInAccessQueue(com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100335114127 0x7f81e8ff90cc 6: com.google.common.cache.LocalCache$WeakAccessEntry::getPreviousInAccessQueue() -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100335159588 0x7f81e90668cc 6: com.google.common.cache.LocalCache$AccessQueue$1::getPreviousInAccessQueue() -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100335206348 0x7f81e906654c 44: com.google.common.cache.LocalCache$WeakAccessEntry::setPreviousInAccessQueue(com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100335245879 0x7f81e177aa54 122: dfi$a$a::b(ha, dax) -> int
fifo write: @1699477100335302020 0x7f81e199f496 325: dfi::b_(dfj, cpb, gw) -> eig
fifo write: @1699477100335350910 0x7f81e18c0b3a 837: dfi$a::l(cpb, gw) -> eig
fifo write: @1699477100335409921 0x7f81e145cff4 1843: eig::a(ha) -> eig
fifo write: @1699477100336051779 0x7f81e1705094 365: eid$$Lambda$827.0x00007f816039c9f8::<init>(ehz, ehz, ehr, ehw, ehw) -> void
fifo write: @1699477100336212981 0x7f81e90ce550 35: ehv::size() -> int
fifo write: @1699477100336297433 0x7f81e1552357 1567: eid::a(ehz, ehz, ehz, ehw, ehw, ehr) -> boolean
fifo write: @1699477100336314793 0x7f81e8b9e3e0 27: vtable stub
fifo write: @1699477100336375104 0x7f81e1783cf4 101: com.google.common.cache.LocalCache::expiresAfterWrite() -> boolean
fifo write: @1699477100336619857 0x7f81e1404983 10568: java.lang.invoke.VarHandleGuards::guard_LL_V(java.lang.invoke.VarHandle, Object, Object, java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477100336658677 0x7f81e1876874 101: com.google.common.cache.LocalCache::refreshes() -> boolean
fifo write: @1699477100336693148 0x7f81e19c4e94 265: com.google.common.cache.LocalCache::recordsAccess() -> boolean
fifo write: @1699477100336805859 0x7f81e14ef1d4 733: com.google.common.cache.LocalCache$LocalLoadingCache::getUnchecked(Object) -> Object
fifo write: @1699477100336863410 0x7f81e1476086 1568: com.google.common.cache.LocalCache::isExpired(com.google.common.cache.ReferenceEntry, long) -> boolean
fifo write: @1699477100336906240 0x7f81e15306d7 1190: csv::a(eig) -> boolean
fifo write: @1699477100337000872 0x7f81e14dbb81 1836: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite::set(java.lang.invoke.VarHandle, Object, Object) -> void
fifo write: @1699477100337046572 0x7f81e194be94 39: com.google.common.cache.LocalCache::getOrLoad(Object) -> Object
fifo write: @1699477100337107843 0x7f81e1589794 188: com.google.common.cache.LocalCache$LocalLoadingCache::get(Object) -> Object
fifo write: @1699477100337149854 0x7f81e19eb494 31: com.google.common.base.Equivalence$Identity::doHash(Object) -> int
fifo write: @1699477100337314706 0x7f81e1417ec7 12084: eid::c(eig, eig, ehr) -> boolean
fifo write: @1699477100337418277 0x7f81e9211bc5 670: eid::a(ehr, ehw, int, int, ehw, int, int, int, int, int) -> boolean
fifo write: @1699477100337475768 0x7f81e1a2bd34 428: com.google.common.cache.LocalCache::hash(Object) -> int
fifo write: @1699477100337563629 0x7f81e9216951 698: eid$$Lambda$829.0x00007f81603a4000::merge(int, int, int) -> boolean
fifo write: @1699477100337610009 0x7f81e19dd394 359: com.google.common.cache.LocalCache$AccessQueue::offer(Object) -> boolean
fifo write: @1699477100337692901 0x7f81e16bcf06 1101: com.google.common.cache.LocalCache::get(Object, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100337785542 0x7f81e1a734b4 502: java.util.AbstractQueue::add(Object) -> boolean
fifo write: @1699477100337837362 0x7f81e1705f94 606: com.google.common.cache.LocalCache$AccessQueue::contains(Object) -> boolean
fifo write: @1699477100337872673 0x7f81e90cdecc 3: dfi$a::p() -> boolean
fifo write: @1699477100337921434 0x7f81e1785874 483: dax::values() -> dax[]
fifo write: @1699477100337983344 0x7f81e199ffb9 2044: com.google.common.cache.LocalCache$AccessQueue::offer(com.google.common.cache.ReferenceEntry) -> boolean
fifo write: @1699477100338036175 0x7f81e16b39d7 1399: csv::a(eig, ha) -> boolean
fifo write: @1699477100338087756 0x7f81e188d754 1377: dax$2::a(dfj, cpb, gw, ha) -> boolean
fifo write: @1699477100338154277 0x7f81e14c17b7 2494: dax$1::a(dfj, cpb, gw, ha) -> boolean
fifo write: @1699477100338200147 0x7f81e1ad5794 389: com.google.common.base.Equivalence::equivalent(Object, Object) -> boolean
fifo write: @1699477100338307308 0x7f81e1a9a994 216: com.google.common.cache.LocalCache$Segment::postReadCleanup() -> void
fifo write: @1699477100338522181 0x7f81e14afd3c 8028: com.google.common.cache.LocalCache$Segment::getLiveValue(com.google.common.cache.ReferenceEntry, long) -> Object
fifo write: @1699477100339009948 0x7f81e1b3321f 14706: java.util.concurrent.ConcurrentLinkedQueue::poll() -> Object
fifo write: @1699477100339089429 0x7f81e1446277 3001: com.google.common.cache.LocalCache$Segment::getFirst(int) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100339130559 0x7f81e1617e94 159: java.util.concurrent.ConcurrentLinkedQueue::add(Object) -> boolean
fifo write: @1699477100339226670 0x7f81e146cee5 4129: com.google.common.cache.LocalCache$Segment::getEntry(Object, int) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100341308777 0x7f81e9346f53 25802: dbr::a(eig, dgv, eig, eig) -> eig
fifo write: @1699477100341389448 0x7f81e1516f34 812: com.google.common.cache.LocalCache$Segment::recordRead(com.google.common.cache.ReferenceEntry, long) -> void
fifo write: @1699477100341541670 0x7f81e1a89d76 5886: com.google.common.cache.LocalCache$Segment::get(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100341627821 0x7f81e1722ddc 1238: com.google.common.cache.LocalCache$Segment::scheduleRefresh(com.google.common.cache.ReferenceEntry, Object, int, Object, long, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100341739293 0x7f81e1a67875 7598: java.util.concurrent.ConcurrentLinkedQueue::offer(Object) -> boolean
fifo write: @1699477100341769183 0x7f81e90d7dcc 2: hy::u() -> int
fifo write: @1699477100341832064 0x7f81e141e457 2302: java.util.concurrent.ConcurrentLinkedQueue$Node::<init>(Object) -> void
fifo write: @1699477100341934655 0x7f81e199b5d4 1377: dax$3::a(dfj, cpb, gw, ha) -> boolean
fifo write: @1699477100341995976 0x7f81e1b1d714 317: java.util.Arrays::stream(Object[]) -> java.util.stream.Stream
fifo write: @1699477100342025156 0x7f81e90d7acc 2: hy::w() -> int
fifo write: @1699477100342083557 0x7f81e90d774c 6: dfi$a::u() -> eam
fifo write: @1699477100342133398 0x7f81e16fabf4 72: jdk.internal.misc.Unsafe::weakCompareAndSetReference(Object, long, Object, Object) -> boolean
fifo write: @1699477100342208349 0x7f81e14c3387 2780: java.util.concurrent.ConcurrentLinkedQueue$Node::casItem(Object, Object) -> boolean
fifo write: @1699477100342264830 0x7f81e1490117 2103: dfi$a$a$$Lambda$826.0x00007f816039d2a0::test(Object) -> boolean
fifo write: @1699477100342292790 0x7f81e90dd54c 2: hy::v() -> int
fifo write: @1699477100342402091 0x7f81e15408c9 2306: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite::weakCompareAndSet(java.lang.invoke.VarHandle, Object, Object, Object) -> boolean
fifo write: @1699477100342471972 0x7f81e91da7ec 619: aew::g(String) -> boolean
fifo write: @1699477100342540253 0x7f81e1468566 3353: cxi::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100342604934 0x7f81e14029fc 3235: dfi$a$a::a(ha$a) -> boolean
fifo write: @1699477100342659145 0x7f81e159cfc3 684: java.util.stream.ReferencePipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477100342720115 0x7f81e1aa0014 230: java.util.stream.MatchOps$$Lambda$715.0x00007f81601dec50::<init>(java.util.stream.MatchOps$MatchKind, java.util.function.Predicate) -> void
fifo write: @1699477100342828147 0x7f81e1a98b14 275: java.util.stream.MatchOps$MatchOp::<init>(java.util.stream.StreamShape, java.util.stream.MatchOps$MatchKind, java.util.function.Supplier) -> void
fifo write: @1699477100342895428 0x7f81e1adbbd4 1300: java.util.stream.MatchOps$MatchOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Boolean
fifo write: @1699477100342979839 0x7f81e19ef347 2758: java.util.stream.MatchOps::makeRef(java.util.function.Predicate, java.util.stream.MatchOps$MatchKind) -> java.util.stream.TerminalOp
fifo write: @1699477100343062680 0x7f81e1b1e4d4 1397: java.util.stream.MatchOps$MatchOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477100343114071 0x7f81e1786fb7 839: java.util.stream.MatchOps$$Lambda$715.0x00007f81601dec50::get() -> Object
fifo write: @1699477100343142161 0x7f81e90dd24c 3: csv::o() -> boolean
fifo write: @1699477100343189212 0x7f81e1b00034 425: java.util.stream.ReferencePipeline::anyMatch(java.util.function.Predicate) -> boolean
fifo write: @1699477100343277073 0x7f81e16d18ea 650: java.util.stream.MatchOps::lambda$makeRef$0(java.util.stream.MatchOps$MatchKind, java.util.function.Predicate) -> java.util.stream.MatchOps$BooleanTerminalSink
fifo write: @1699477100343339113 0x7f81e91ed169 310: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::listIterator() -> it.unimi.dsi.fastutil.doubles.DoubleListIterator
fifo write: @1699477100343430785 0x7f81e1a82a04 4404: eid::a(eig, ha) -> eig
fifo write: @1699477100343581077 0x7f81e14f5627 14023: dfi$a$a::<init>(dfj) -> void
fifo write: @1699477100343626637 0x7f81e92ac7d0 147: it.unimi.dsi.fastutil.doubles.DoubleIterators$AbstractIndexBasedIterator::nextDouble() -> double
fifo write: @1699477100343662828 0x7f81e90dce9d 58: com.google.common.cache.LocalCache::rehash(int) -> int
fifo write: @1699477100343709348 0x7f81e1524374 551: Math::min(double, double) -> double
fifo write: @1699477100343748669 0x7f81e1792e74 552: Math::max(double, double) -> double
fifo write: @1699477100343788189 0x7f81e92ac2d0 131: it.unimi.dsi.fastutil.doubles.DoubleArrayList$1::nextDouble() -> double
fifo write: @1699477100343826130 0x7f81e90c27d0 119: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::ensureIndex(int) -> void
fifo write: @1699477100343927651 0x7f81e1a90417 554: dfi::f(dfj, cpb, gw) -> eig
fifo write: @1699477100344529829 0x7f81e164cabd 2719: dfi$a::i(cpb, gw) -> boolean
fifo write: @1699477100344910724 0x7f81e18ba577 2287: java.util.Spliterators::checkFromToBounds(int, int, int) -> void
fifo write: @1699477100345154167 0x7f81e90c245a 68: com.google.common.collect.TransformedIterator::next() -> Object
fifo write: @1699477100345505311 0x7f81e15b5237 1015: java.util.ArrayList::set(int, Object) -> Object
fifo write: @1699477100345675114 0x7f81e9015b5c 615: eid$$Lambda$829.0x00007f81603a4000::<init>(ehr, ehw, int, int, ehw, int, int) -> void
fifo write: @1699477100345868286 0x7f81e9041baa 796: eid$$Lambda$828.0x00007f816039cc20::<init>(ehz, ehr, ehw, int, ehw, int) -> void
fifo write: @1699477100345907207 0x7f81e1734194 47: hk::b(Object) -> void
fifo write: @1699477100346068409 0x7f81e1add6dd 1098: hk::a(Object, int) -> void
fifo write: @1699477100346551605 0x7f81e144c0a9 880: java.util.Spliterators::spliterator(Object[], int, int, int) -> java.util.Spliterator
fifo write: @1699477100346566015 0x7f81e8b9e410 27: vtable stub
fifo write: @1699477100346579395 0x7f81e8b9e440 27: vtable stub
fifo write: @1699477100346837899 0x7f81e1954a14 144: cxc::b_(dfj, cpb, gw) -> eig
fifo write: @1699477100347066342 0x7f81e19fa03d 826: dfi$a::b(cpb, gw, ehs) -> eig
fifo write: @1699477100347164833 0x7f81e156d919 2326: dfi$a::a() -> void
fifo write: @1699477100347216164 0x7f81e1aae7d4 2095: dfi$a::D() -> boolean
fifo write: @1699477100347911342 0x7f81e194d2f4 9: ehi::b() -> double
fifo write: @1699477100347957333 0x7f81e19de574 9: ehi::d() -> double
fifo write: @1699477100348002384 0x7f81e91b8250 95: eig::a(ha) -> eig
fifo write: @1699477100348040994 0x7f81e1a6d1dc 468: ehi::<init>(double, double, double, double, double, double) -> void
fifo write: @1699477100348139445 0x7f81e91b7f4c 6: dfk::a() -> com.google.common.collect.ImmutableList
fifo write: @1699477100348382409 0x7f81e1b06d3f 2686: csv::c(dfj, cpb, gw) -> boolean
fifo write: @1699477100348398619 0x7f81e8b9e470 27: vtable stub
fifo write: @1699477100348494090 0x7f81e14c04e0 910: java.lang.invoke.DelegatingMethodHandle$Holder::reinvoke_L(Object, Object, Object) -> Object
fifo write: @1699477100348557751 0x7f81e196f2f4 91: dfi::c_(dfj) -> eam
fifo write: @1699477100348628212 0x7f81e19f0c74 9: ehi::c() -> double
fifo write: @1699477100348660872 0x7f81e1b666b4 386: ehi::a() -> double
fifo write: @1699477100349692675 0x7f81e91c9a37 760: eig::b(ha$a) -> double
fifo write: @1699477100349862458 0x7f81e14fd2df 9387: eig::a() -> ehi
fifo write: @1699477100350010720 0x7f81e16f1bb4 1132: cxc::e_(dfj) -> boolean
fifo write: @1699477100350061380 0x7f81e14506f4 1806: cxc::c_(dfj) -> eam
fifo write: @1699477100350075950 0x7f81e8b9e4a0 27: vtable stub
fifo write: @1699477100350944592 0x7f81e148eef7 1767: dfi::g(dfj, cpb, gw) -> int
fifo write: @1699477100351825753 0x7f81e19f2f74 3: csv::e_(dfj) -> boolean
fifo write: @1699477100352059526 0x7f81e8ff6e56 169: dfi::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100352350180 0x7f81e8ff6b68 18: dfi::b_(dfj, cpb, gw) -> eig
fifo write: @1699477100352453171 0x7f81e902eed8 231: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::listIterator(int) -> it.unimi.dsi.fastutil.doubles.DoubleListIterator
fifo write: @1699477100353603076 0x7f81e902ea51 158: com.google.common.cache.LocalCache::isExpired(com.google.common.cache.ReferenceEntry, long) -> boolean
fifo write: @1699477100353932920 0x7f81e8ff6814 1: com.google.common.base.Equivalence$Identity::doHash(Object) -> int
fifo write: @1699477100354275885 0x7f81e902e559 74: com.google.common.cache.LocalCache$AccessQueue::contains(Object) -> boolean
fifo write: @1699477100354854112 0x7f81e90ebc53 104: com.google.common.cache.LocalCache$Segment::scheduleRefresh(com.google.common.cache.ReferenceEntry, Object, int, Object, long, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100356314651 0x7f81e145f55e 1266: com.google.common.cache.LocalCache$Segment::drainRecencyQueue() -> void
fifo write: @1699477100358296447 0x7f81e90eb16f 885: java.util.concurrent.ConcurrentLinkedQueue::add(Object) -> boolean
fifo write: @1699477100358643871 0x7f81e906e168 1347: java.util.concurrent.ConcurrentLinkedQueue::poll() -> Object
fifo write: @1699477100359951518 0x7f81e9298a9c 3996: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477100361070942 0x7f81e9019d66 429: com.google.common.cache.LocalCache$Segment::getLiveValue(com.google.common.cache.ReferenceEntry, long) -> Object
fifo write: @1699477100361284665 0x7f81e901924c 6: com.google.common.cache.LocalCache$AccessQueue$1::getNextInAccessQueue() -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100361704810 0x7f81e90bd66f 885: java.util.concurrent.ConcurrentLinkedQueue::offer(Object) -> boolean
fifo write: @1699477100362498350 0x7f81e90bd150 135: com.google.common.cache.LocalCache$Segment::getFirst(int) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100362607142 0x7f81e924275c 459: com.google.common.cache.LocalCache$Segment::getEntry(Object, int) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100364479416 0x7f81e90337d8 4002: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::equals(Object) -> boolean
fifo write: @1699477100368174643 0x7f81e9023684 2567: com.google.common.cache.LocalCache$AccessQueue::offer(Object) -> boolean
fifo write: @1699477100368437277 0x7f81e9043ba0 2655: java.util.AbstractQueue::add(Object) -> boolean
fifo write: @1699477100368684050 0x7f81e9049662 2405: com.google.common.cache.LocalCache$Segment::get(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100371344184 0x7f81e9241e03 945: eid$$Lambda$827.0x00007f816039c9f8::<init>(ehz, ehz, ehr, ehw, ehw) -> void
fifo write: @1699477100371892581 0x7f81e90bcd5b 132: dfi$a::a(cpb, gw, ehs) -> eig
fifo write: @1699477100373161858 0x7f81e9028384 2563: com.google.common.cache.LocalCache$AccessQueue::offer(com.google.common.cache.ReferenceEntry) -> boolean
fifo write: @1699477100374142430 0x7f81e9215ef7 284: dax$2::a(dfj, cpb, gw, ha) -> boolean
fifo write: @1699477100375421607 0x7f81e9215777 284: dax$3::a(dfj, cpb, gw, ha) -> boolean
fifo write: @1699477100375665030 0x7f81e921543b 40: eid::a(eig, ha) -> eig
fifo write: @1699477100377576025 0x7f81e92c823e 5897: com.google.common.cache.LocalCache::get(Object, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100380499812 0x7f81e91d8ed3 1225: java.util.Spliterators$ArraySpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477100381252082 0x7f81e1ae0e14 143: java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively() -> boolean
fifo write: @1699477100381305713 0x7f81e1ab7d14 305: java.util.concurrent.locks.ReentrantLock::isHeldByCurrentThread() -> boolean
fifo write: @1699477100381927901 0x7f81e179a214 343: com.google.common.cache.LocalCache$AccessQueue::peek() -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100381984622 0x7f81e18b7094 432: com.google.common.cache.LocalCache$AccessQueue::peek() -> Object
fifo write: @1699477100382073303 0x7f81e19a11b4 655: com.google.common.cache.LocalCache$Segment::runUnlockedCleanup() -> void
fifo write: @1699477100382092133 0x7f81e8ba8680 456: I2C/C2I adapters(0xb7ebab)
fifo write: @1699477100382269795 0x7f81e1aa3efe 1403: com.google.common.cache.LocalCache::processPendingNotifications() -> void
fifo write: @1699477100382361506 0x7f81e144cd5c 2581: com.google.common.cache.LocalCache$Segment::runLockedCleanup(long) -> void
fifo write: @1699477100382377937 0x7f81e8ba8380 456: I2C/C2I adapters(0xbb7eba)
fifo write: @1699477100382442627 0x7f81e8ba8080 456: I2C/C2I adapters(0xbb7ebb)
fifo write: @1699477100384592445 0x7f81e146487c 1736: com.google.common.cache.LocalCache$Segment::drainKeyReferenceQueue() -> void
fifo write: @1699477100384781308 0x7f81e146fe9e 3027: com.google.common.cache.LocalCache$Segment::expireEntries(long) -> void
fifo write: @1699477100384949130 0x7f81e1a99843 630: eia::a(ehz$a) -> boolean
fifo write: @1699477100385074301 0x7f81e1bdc946 5002: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477100385119532 0x7f81e18da174 391: arw::a(int, int, int) -> int
fifo write: @1699477100385215173 0x7f81e1b0c8b9 914: eif::a(ha$a, int) -> int
fifo write: @1699477100385310935 0x7f81e91eb61e 333: eig::b(ha$a) -> double
fifo write: @1699477100385401006 0x7f81e19b0494 350: eie::a(ha$a) -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477100385508937 0x7f81e91eb2d7 35: eig::c() -> boolean
fifo write: @1699477100385529537 0x7f81e8b9e4d0 27: vtable stub
fifo write: @1699477100385584468 0x7f81e901f97e 265: eig::c(ha$a) -> double
fifo write: @1699477100385638059 0x7f81e1ab9894 304: eif::a(ha$a) -> int
fifo write: @1699477100385690429 0x7f81e1ad6214 304: eif::b(ha$a) -> int
fifo write: @1699477100385810601 0x7f81e156f23e 723: ehv::a(ehz$a) -> boolean
fifo write: @1699477100385896102 0x7f81e1b569f4 99: Math::abs(int) -> int
fifo write: @1699477100386020354 0x7f81e140d77e 1714: eig::a(ha) -> eig
fifo write: @1699477100386250987 0x7f81e1ae04f4 237: arw::a(int) -> int
fifo write: @1699477100386301687 0x7f81e1ae1af4 411: ha::a(int) -> ha
fifo write: @1699477100386450789 0x7f81e1710786 1101: com.google.common.cache.LocalCache::get(Object, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100386521740 0x7f81e1af4c94 502: ha::g() -> ha
fifo write: @1699477100386619591 0x7f81e1aed514 267: eif::b(int, int, int) -> boolean
fifo write: @1699477100386680202 0x7f81e901f352 242: ehw::d(int, int, int) -> boolean
fifo write: @1699477100387330061 0x7f81e901e599 1105: dax$3::a(dfj, cpb, gw, ha) -> boolean
fifo write: @1699477100387376101 0x7f81e1af7194 159: java.util.concurrent.ConcurrentLinkedQueue::add(Object) -> boolean
fifo write: @1699477100387653195 0x7f81e1611e1f 14322: java.util.concurrent.ConcurrentLinkedQueue::poll() -> Object
fifo write: @1699477100387755496 0x7f81e9210380 775: java.util.AbstractQueue::add(Object) -> boolean
fifo write: @1699477100387824577 0x7f81e1b321b7 1347: cso::g(dfj) -> ha
fifo write: @1699477100388021730 0x7f81e1a94f0c 5482: java.util.concurrent.ConcurrentLinkedQueue::updateHead(java.util.concurrent.ConcurrentLinkedQueue$Node, java.util.concurrent.ConcurrentLinkedQueue$Node) -> void
fifo write: @1699477100388143611 0x7f81e19fefb7 2298: cso::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100388504016 0x7f81e1484356 5774: com.google.common.cache.LocalCache$Segment::get(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100388575507 0x7f81e1ab5fb9 723: ehw::a() -> boolean
fifo write: @1699477100388726969 0x7f81e14b65e5 4113: com.google.common.cache.LocalCache$Segment::getEntry(Object, int) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100388964232 0x7f81e920fa03 945: eid$$Lambda$827.0x00007f816039c9f8::<init>(ehz, ehz, ehr, ehw, ehw) -> void
fifo write: @1699477100389280456 0x7f81e1477775 7566: java.util.concurrent.ConcurrentLinkedQueue::offer(Object) -> boolean
fifo write: @1699477100389375467 0x7f81e9080281 730: com.google.common.cache.LocalCache$AccessQueue::offer(Object) -> boolean
fifo write: @1699477100389479188 0x7f81e907f881 730: com.google.common.cache.LocalCache$AccessQueue::offer(com.google.common.cache.ReferenceEntry) -> boolean
fifo write: @1699477100389557139 0x7f81e162e331 394: java.util.Spliterators$ArraySpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477100389729122 0x7f81e1416917 1977: dfi$a$a$$Lambda$826.0x00007f816039d2a0::test(Object) -> boolean
fifo write: @1699477100390053556 0x7f81e154445c 3009: dfi$a$a::a(ha$a) -> boolean
fifo write: @1699477100390834706 0x7f81e920f3d0 131: com.google.common.cache.LocalCache$Segment::getFirst(int) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100391271061 0x7f81e907e693 1063: eid$$Lambda$829.0x00007f81603a4000::merge(int, int, int) -> boolean
fifo write: @1699477100391735007 0x7f81e907e10e 141: ehu::a(ha$a) -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477100391857369 0x7f81e9038507 1003: eid::a(ehr, ehw, int, int, ehw, int, int, int, int, int) -> boolean
fifo write: @1699477100392273954 0x7f81e9037fe0 191: eig::a(ha$a, int) -> double
fifo write: @1699477100392810961 0x7f81e920f052 44: ehw::c(ha$a) -> int
fifo write: @1699477100392876042 0x7f81e9037c52 44: ehq::b(ha$a) -> int
fifo write: @1699477100392973603 0x7f81e903742a 796: eid$$Lambda$828.0x00007f816039cc20::<init>(ehz, ehr, ehw, int, ehw, int) -> void
fifo write: @1699477100393026494 0x7f81e9036fd2 44: ehq::a(ha$a) -> int
fifo write: @1699477100393071835 0x7f81e9036cd0 47: ehq::a() -> boolean
fifo write: @1699477100393141016 0x7f81e903694c 6: com.google.common.cache.LocalCache$WeakEntry::getNext() -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100393223297 0x7f81e909f55c 615: eid$$Lambda$829.0x00007f81603a4000::<init>(ehr, ehw, int, int, ehw, int, int) -> void
fifo write: @1699477100393280957 0x7f81e909f130 59: dfi$a$a::b(ha, dax) -> int
fifo write: @1699477100393361688 0x7f81e909ecda 115: eif::a(ha$a, int) -> int
fifo write: @1699477100393450370 0x7f81e909e999 50: dax::values() -> dax[]
fifo write: @1699477100393563661 0x7f81e909e650 39: eht::<init>(int) -> void
fifo write: @1699477100393666792 0x7f81e909d918 1078: dax$2::a(dfj, cpb, gw, ha) -> boolean
fifo write: @1699477100393908005 0x7f81e1b08614 257: dfi$a::q() -> boolean
fifo write: @1699477100393955926 0x7f81e1b4cd74 95: java.util.Optional::isPresent() -> boolean
fifo write: @1699477100394077678 0x7f81e909d3d9 206: eie::a(ha$a) -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477100394129348 0x7f81e1647574 483: ha$a::values() -> ha$a[]
fifo write: @1699477100394296231 0x7f81e1771114 185: dfi$a$a$$Lambda$826.0x00007f816039d2a0::<init>(dfi$a$a) -> void
fifo write: @1699477100394360451 0x7f81e91c4857 224: eif::b(ha$a) -> int
fifo write: @1699477100394430032 0x7f81e1a41fd4 1968: dfi$a::D() -> boolean
fifo write: @1699477100394491593 0x7f81e91c4257 224: eif::a(ha$a) -> int
fifo write: @1699477100394597794 0x7f81e91c3a46 773: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite::compareAndSet(java.lang.invoke.VarHandle, Object, Object, Object) -> boolean
fifo write: @1699477100394662545 0x7f81e1782599 429: dfi$a::k(cpb, gw) -> eig
fifo write: @1699477100394843738 0x7f81e1aeedd7 994: com.google.common.cache.LocalCache$Segment::cleanUp() -> void
fifo write: @1699477100395608517 0x7f81e1b2e1df 9300: eig::a() -> ehi
fifo write: @1699477100398701097 0x7f81e91c2d2f 884: dfi$a$a$$Lambda$826.0x00007f816039d2a0::test(Object) -> boolean
fifo write: @1699477100398909090 0x7f81e909cedc 267: Math::min(double, double) -> double
fifo write: @1699477100400006764 0x7f81e91c2758 283: eia::a(ehz$a) -> boolean
fifo write: @1699477100401727616 0x7f81e91c244c 6: ha::o() -> ha$a
fifo write: @1699477100402101641 0x7f81e91c1f4c 6: csv::l() -> dfk
fifo write: @1699477100402155272 0x7f81e1770c74 92: java.util.ImmutableCollections$ListItr::hasNext() -> boolean
fifo write: @1699477100402241753 0x7f81e1610c14 1694: dfc::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100402616118 0x7f81e140039f 4759: eid::a(eig, ha) -> eig
fifo write: @1699477100403009823 0x7f81e1b4f8d4 86: ehr::j(boolean, boolean) -> boolean
fifo write: @1699477100403341877 0x7f81e91606cc 50: com.google.common.cache.LocalCache$WeakEntry::setValueReference(com.google.common.cache.LocalCache$ValueReference) -> void
fifo write: @1699477100404029696 0x7f81e915de1c 3884: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477100404100037 0x7f81e14918b9 712: ehy::a(ehz$a) -> boolean
fifo write: @1699477100404156938 0x7f81e915da4c 6: ha::f() -> ha$b
fifo write: @1699477100404306170 0x7f81e1b4f294 230: ehr$$Lambda$586.0x00007f816031eea8::apply(boolean, boolean) -> boolean
fifo write: @1699477100404648634 0x7f81e14d2ff4 551: Math::min(double, double) -> double
fifo write: @1699477100404995749 0x7f81e14ec4d4 1134: dfd::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100405306923 0x7f81e1789fc5 1412: eie::a(ehw, ha$a, int) -> ehw
fifo write: @1699477100405451145 0x7f81e91117fd 432: eie::a(ha$a) -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477100405914961 0x7f81e1896cb4 933: com.google.common.math.DoubleMath::fuzzyEquals(double, double, double) -> boolean
fifo write: @1699477100406093703 0x7f81e9111254 255: ehv::a(ehz$a) -> boolean
fifo write: @1699477100406388397 0x7f81e9110e50 119: ehw::<init>(int, int, int) -> void
fifo write: @1699477100406718251 0x7f81e1af8e17 672: com.google.common.base.Preconditions::checkState(boolean, Object) -> void
fifo write: @1699477100406775782 0x7f81e14d2c14 47: com.google.common.cache.LocalCache$Segment::preWriteCleanup(long) -> void
fifo write: @1699477100406971314 0x7f81e1b2022f 423: jdk.internal.misc.Unsafe::getAndSetReference(Object, long, Object) -> Object
fifo write: @1699477100407038405 0x7f81e1b1fd94 31: com.google.common.util.concurrent.SettableFuture::set(Object) -> boolean
fifo write: @1699477100407102236 0x7f81e1b9e994 194: com.google.common.cache.LocalCache$LoadingValueReference::set(Object) -> boolean
fifo write: @1699477100407228137 0x7f81e1b9e574 72: sun.misc.Unsafe::compareAndSwapObject(Object, long, Object, Object) -> boolean
fifo write: @1699477100407366289 0x7f81e1b9df97 229: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper::casValue(com.google.common.util.concurrent.AbstractFuture, Object, Object) -> boolean
fifo write: @1699477100407430620 0x7f81e14d21b9 274: com.google.common.util.concurrent.AbstractFuture::set(Object) -> boolean
fifo write: @1699477100407501861 0x7f81e14d1834 752: com.google.common.cache.LocalCache$Segment::postWriteCleanup() -> void
fifo write: @1699477100407777105 0x7f81e151d097 1977: dfi$a$a$$Lambda$826.0x00007f816039d2a0::test(Object) -> boolean
fifo write: @1699477100410602731 0x7f81e9008293 5100: dax$1::a(dfj, cpb, gw, ha) -> boolean
fifo write: @1699477100410654861 0x7f81e9007dd0 87: dfi$a::b() -> csv
fifo write: @1699477100410835364 0x7f81e910f634 943: java.util.stream.MatchOps$1MatchSink::accept(Object) -> void
fifo write: @1699477100412488505 0x7f81e9100560 4278: cso::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100415257620 0x7f81e9345ad3 1179: java.util.Spliterators$ArraySpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477100416137232 0x7f81e910ef54 215: Math::max(double, double) -> double
fifo write: @1699477100417780113 0x7f81e9344ae8 1351: java.util.concurrent.ConcurrentLinkedQueue::poll() -> Object
fifo write: @1699477100417936615 0x7f81e1abd134 832: gy::b(Object) -> aew
fifo write: @1699477100417992956 0x7f81e1acacb7 428: he$c::g() -> aev
fifo write: @1699477100418064197 0x7f81e1ad05d4 1126: hm::b(Object) -> aew
fifo write: @1699477100419046059 0x7f81e9344680 109: eig::c(ha$a) -> double
fifo write: @1699477100419568136 0x7f81e1aca437 832: cvr::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100419622867 0x7f81e93442c1 120: Integer::valueOf(int) -> Integer
fifo write: @1699477100421440700 0x7f81e90064dc 447: com.google.common.cache.LocalCache$Segment::getEntry(Object, int) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100422363802 0x7f81e1abcb14 196: eif::<init>(ehw, int, int, int, int, int, int) -> void
fifo write: @1699477100423080201 0x7f81e1b198b4 998: dap::n(dfj) -> int
fifo write: @1699477100423152862 0x7f81e1ad0154 115: Math::copySign(double, double) -> double
fifo write: @1699477100423241773 0x7f81e1b110fc 1489: dap::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100423310154 0x7f81e1630754 599: com.google.common.math.MathPreconditions::checkNonNegative(String, double) -> double
fifo write: @1699477100423431186 0x7f81e1b192fa 121: com.google.common.cache.LocalCache$EntryFactory$6::newEntry(com.google.common.cache.LocalCache$Segment, Object, int, com.google.common.cache.ReferenceEntry) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100423535787 0x7f81e1a0b6b4 819: com.google.common.cache.LocalCache$WeakEntry::<init>(java.lang.ref.ReferenceQueue, Object, int, com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100423654919 0x7f81e1a72557 1435: com.google.common.cache.LocalCache$WeakAccessEntry::<init>(java.lang.ref.ReferenceQueue, Object, int, com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100424194796 0x7f81e162ff94 287: java.util.concurrent.TimeUnit::toNanos(long) -> long
fifo write: @1699477100424304317 0x7f81e1a72074 101: com.google.common.cache.LocalCache::evictsBySize() -> boolean
fifo write: @1699477100424670652 0x7f81e90059ee 890: java.util.concurrent.ConcurrentLinkedQueue::offer(Object) -> boolean
fifo write: @1699477100424729243 0x7f81e1a0b214 240: com.google.common.cache.LocalCache$LoadingValueReference::get() -> Object
fifo write: @1699477100424780523 0x7f81e1aac814 243: com.google.common.cache.LocalCache$LoadingValueReference::isActive() -> boolean
fifo write: @1699477100424885525 0x7f81e1aac114 626: com.google.common.cache.LocalCache::recordsWrite() -> boolean
fifo write: @1699477100424959296 0x7f81e1adfbe4 529: com.google.common.util.concurrent.SettableFuture::create() -> com.google.common.util.concurrent.SettableFuture
fifo write: @1699477100425008956 0x7f81e1adf614 422: com.google.common.util.concurrent.SettableFuture::<init>() -> void
fifo write: @1699477100425061087 0x7f81e1adf214 137: com.google.common.util.concurrent.internal.InternalFutureFailureAccess::<init>() -> void
fifo write: @1699477100425113258 0x7f81e1516514 328: com.google.common.util.concurrent.AbstractFuture$TrustedFuture::<init>() -> void
fifo write: @1699477100425159798 0x7f81e1aabc94 234: com.google.common.util.concurrent.AbstractFuture::<init>() -> void
fifo write: @1699477100425225509 0x7f81e1745b9a 1863: com.google.common.cache.LocalCache$LoadingValueReference::<init>() -> void
fifo write: @1699477100425271430 0x7f81e1516014 293: com.google.common.base.Stopwatch::<init>() -> void
fifo write: @1699477100425357431 0x7f81e1a8727d 1811: com.google.common.cache.LocalCache$LoadingValueReference::<init>(com.google.common.cache.LocalCache$ValueReference) -> void
fifo write: @1699477100425465992 0x7f81e15159cc 400: com.google.common.base.Stopwatch::createUnstarted() -> com.google.common.base.Stopwatch
fifo write: @1699477100425566423 0x7f81e1ac36ba 638: com.google.common.cache.LocalCache$Segment::newEntry(Object, int, com.google.common.cache.ReferenceEntry) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100425673495 0x7f81e1ac3114 320: com.google.common.cache.LocalCache$Segment::loadSync(Object, int, com.google.common.cache.LocalCache$LoadingValueReference, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100425799996 0x7f81e1aba5d7 3116: com.google.common.util.concurrent.AbstractFuture::complete(com.google.common.util.concurrent.AbstractFuture, boolean) -> void
fifo write: @1699477100425856837 0x7f81e1b68234 449: eie::<init>(eig, ha$a, int) -> void
fifo write: @1699477100426618467 0x7f81e14dd09f 2087: eig::b(ha) -> eig
fifo write: @1699477100427021442 0x7f81e900402e 2357: com.google.common.cache.LocalCache$Segment::drainRecencyQueue() -> void
fifo write: @1699477100428601743 0x7f81e92b4ada 5545: dfi$a$a::<init>(dfj) -> void
fifo write: @1699477100429161190 0x7f81e91fd63f 4108: csv::a(eig) -> boolean
fifo write: @1699477100429600445 0x7f81e142dd76 19508: com.google.common.cache.LocalCache$Segment::lockedGetOrLoad(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100429685217 0x7f81e1b678d4 699: ctx::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100430152753 0x7f81e142ce34 881: ctx::h(dfj) -> ha
fifo write: @1699477100431707813 0x7f81e1a91e57 993: cyw::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100431921905 0x7f81e91c886e 890: java.util.concurrent.ConcurrentLinkedQueue::add(Object) -> boolean
fifo write: @1699477100432830777 0x7f81e1a916b4 474: csv$1::a(eig) -> Boolean
fifo write: @1699477100432951739 0x7f81e15bdc14 712: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper::gasWaiters(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter) -> com.google.common.util.concurrent.AbstractFuture$Waiter
fifo write: @1699477100433012580 0x7f81e15bd154 828: csv$1::load(Object) -> Object
fifo write: @1699477100433080180 0x7f81e1a88d5c 917: com.google.common.base.Stopwatch::start() -> com.google.common.base.Stopwatch
fifo write: @1699477100433208342 0x7f81e1a88594 712: com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper::gasListeners(com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener) -> com.google.common.util.concurrent.AbstractFuture$Listener
fifo write: @1699477100433268083 0x7f81e1aadf14 31: com.google.common.util.concurrent.AbstractFuture$TrustedFuture::get() -> Object
fifo write: @1699477100433340994 0x7f81e1aad599 987: com.google.common.util.concurrent.Uninterruptibles::getUninterruptibly(java.util.concurrent.Future) -> Object
fifo write: @1699477100433404975 0x7f81e1acc334 236: com.google.common.cache.LocalCache$LoadingValueReference::elapsedNanos() -> long
fifo write: @1699477100433475306 0x7f81e1acbc34 510: com.google.common.base.Stopwatch::elapsed(java.util.concurrent.TimeUnit) -> long
fifo write: @1699477100433524426 0x7f81e1566194 362: com.google.common.base.Stopwatch::elapsedNanos() -> long
fifo write: @1699477100433600877 0x7f81e1b02797 2009: com.google.common.util.concurrent.AbstractFuture::getDoneValue(Object) -> Object
fifo write: @1699477100433742209 0x7f81e14e46fc 3911: com.google.common.util.concurrent.AbstractFuture::get() -> Object
fifo write: @1699477100433816600 0x7f81e15658f4 663: java.util.concurrent.TimeUnit::convert(long, java.util.concurrent.TimeUnit) -> long
fifo write: @1699477100433907661 0x7f81e1b2278b 1263: com.google.common.cache.LocalCache$Segment::setValue(com.google.common.cache.ReferenceEntry, Object, Object, long) -> void
fifo write: @1699477100433966512 0x7f81e1acb714 185: com.google.common.cache.LocalCache$StrongValueReference::<init>(Object) -> void
fifo write: @1699477100434086983 0x7f81e1b5ba34 645: com.google.common.cache.LocalCache$Strength$1::referenceValue(com.google.common.cache.LocalCache$Segment, com.google.common.cache.ReferenceEntry, Object, int) -> com.google.common.cache.LocalCache$ValueReference
fifo write: @1699477100434149134 0x7f81e1b5b2b4 678: com.google.common.cache.LocalCache$LoadingValueReference::notifyNewValue(Object) -> void
fifo write: @1699477100434205135 0x7f81e1ab4654 771: com.google.common.util.concurrent.AbstractFuture::releaseWaiters() -> void
fifo write: @1699477100434291196 0x7f81e188ef81 2434: com.google.common.cache.LocalCache$Segment::evictEntries(com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100434379587 0x7f81e1ae41a1 2076: com.google.common.cache.LocalCache$Segment::recordWrite(com.google.common.cache.ReferenceEntry, int, long) -> void
fifo write: @1699477100434436038 0x7f81e9343a59 186: dfi$a::i(cpb, gw) -> boolean
fifo write: @1699477100435049006 0x7f81e1b22094 400: com.google.common.util.concurrent.AbstractFuture::clearListeners(com.google.common.util.concurrent.AbstractFuture$Listener) -> com.google.common.util.concurrent.AbstractFuture$Listener
fifo write: @1699477100435720264 0x7f81e14e7110 2907: com.google.common.cache.LocalCache$Segment::getAndRecordStats(Object, int, com.google.common.cache.LocalCache$LoadingValueReference, com.google.common.util.concurrent.ListenableFuture) -> Object
fifo write: @1699477100436112630 0x7f81e149433e 18655: com.google.common.cache.LocalCache$Segment::storeLoadedValue(Object, int, com.google.common.cache.LocalCache$LoadingValueReference, Object) -> boolean
fifo write: @1699477100436290042 0x7f81e1b273ef 6110: com.google.common.cache.LocalCache$LoadingValueReference::loadFuture(Object, com.google.common.cache.CacheLoader) -> com.google.common.util.concurrent.ListenableFuture
fifo write: @1699477100440980502 0x7f81e91c781c 1111: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::put(Object, int) -> int
fifo write: @1699477100442836836 0x7f81e90845a3 3288: com.google.common.cache.LocalCache$Segment::get(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100442915167 0x7f81e9003579 622: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::find(Object) -> int
fifo write: @1699477100442971538 0x7f81e1b26ab4 507: java.util.ImmutableCollections$ListItr::next() -> Object
fifo write: @1699477100444131873 0x7f81e1ab3bb4 885: eak::a(boolean) -> eam
fifo write: @1699477100444666040 0x7f81e92b3ffa 539: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::insert(int, Object, int) -> void
fifo write: @1699477100445601512 0x7f81e1a85574 1806: czv::c_(dfj) -> eam
fifo write: @1699477100446003247 0x7f81e91fcdf2 297: csv::c(dfj, cpb, gw) -> boolean
fifo write: @1699477100446327711 0x7f81e90832bd 998: java.util.stream.ReferencePipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477100446874868 0x7f81e91c74cc 9: com.google.common.cache.LocalCache$WeakAccessEntry::getAccessTime() -> long
fifo write: @1699477100447663119 0x7f81e19f18f4 2507: cux::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100447869251 0x7f81e91c68d3 360: java.util.concurrent.atomic.AtomicReferenceArray::set(int, Object) -> void
fifo write: @1699477100450844670 0x7f81e15250bf 4518: dfi::r() -> aew
fifo write: @1699477100451775842 0x7f81e91c63cf 156: dfi::f(dfj, cpb, gw) -> eig
fifo write: @1699477100453279951 0x7f81e91c5700 615: ehw::a() -> boolean
fifo write: @1699477100456025067 0x7f81e904f9ce 11139: eid::a(ehz, ehr, ehw, int, ehw, int, int, int, int) -> boolean
fifo write: @1699477100456667925 0x7f81e91d1efb 6228: com.google.common.cache.LocalCache::get(Object, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100456715806 0x7f81e1a84f97 109: eig$$Lambda$830.0x00007f81603a4430::test(int) -> boolean
fifo write: @1699477100456781906 0x7f81e1ad7637 935: ctt::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100456849637 0x7f81e1ad6b57 1113: ctt::b_(dfj, cpb, gw) -> eig
fifo write: @1699477100456898938 0x7f81e1b7b5b4 780: eig::a(double, ha$a, int) -> boolean
fifo write: @1699477100456970349 0x7f81e904f0fe 145: eid::a(ehz, ehr, ehw, int, ehw, int, int, int, int) -> boolean
fifo write: @1699477100460230230 0x7f81e91798f7 9118: dfi$a$a::<init>(dfj) -> void
fifo write: @1699477100461850411 0x7f81e907bc67 1404: java.util.stream.AbstractPipeline::copyIntoWithCancel(java.util.stream.Sink, java.util.Spliterator) -> boolean
fifo write: @1699477100462030603 0x7f81e91d18d0 151: java.util.stream.MatchOps$$Lambda$715.0x00007f81601dec50::get() -> Object
fifo write: @1699477100462742113 0x7f81e91d11d3 408: java.util.ArrayList::set(int, Object) -> Object
fifo write: @1699477100464590816 0x7f81e907a865 1371: ctt::b_(dfj, cpb, gw) -> eig
fifo write: @1699477100465115523 0x7f81e90c60d8 11017: eid$$Lambda$828.0x00007f816039cc20::merge(int, int, int) -> boolean
fifo write: @1699477100465165704 0x7f81e1b7a957 1248: dbs::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100465213194 0x7f81e14baf7a 1453: dbs::b_(dfj, cpb, gw) -> eig
fifo write: @1699477100466058995 0x7f81e9079465 1371: ctt::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100466567392 0x7f81e90c4db5 1172: java.util.stream.MatchOps$MatchOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477100468618198 0x7f81e91f9fb4 2417: dfi$a::a() -> void
fifo write: @1699477100468665899 0x7f81e9078b7e 409: dfi::g(dfj, cpb, gw) -> int
fifo write: @1699477100469037144 0x7f81e14baa94 240: com.google.common.collect.Iterators$6::transform(Object) -> Object
fifo write: @1699477100469107865 0x7f81e156bab7 428: he$c::a() -> Object
fifo write: @1699477100469174786 0x7f81e156b234 798: hm$$Lambda$536.0x00007f8160310b08::apply(Object) -> Object
fifo write: @1699477100469257227 0x7f81e14ba654 122: Double::isNaN(double) -> boolean
fifo write: @1699477100469859944 0x7f81e9179391 34: java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node) -> void
fifo write: @1699477100470023207 0x7f81e156ac14 537: com.google.common.cache.LocalCache::nullifyAccessOrder(com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100470509223 0x7f81e1ab23d4 1130: cun::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100471258362 0x7f81e1ab1f1d 94: eid$$Lambda$828.0x00007f816039cc20::merge(int, int, int) -> boolean
fifo write: @1699477100473767735 0x7f81e91f76f9 3937: hk::b(Object) -> void
fifo write: @1699477100474240571 0x7f81e8ba0a80 496: I2C/C2I adapters(0xbbabbaaa)
fifo write: @1699477100479514069 0x7f81e8ba0780 456: I2C/C2I adapters(0xba666)
fifo write: @1699477100485046700 0x7f81e8ba0480 456: I2C/C2I adapters(0xbbaa6)
fifo write: @1699477100485061481 0x7f81e8ba0180 456: I2C/C2I adapters(0xbbaa7e)
fifo write: @1699477100493971076 0x7f81e8b9fe80 496: I2C/C2I adapters(0xbbbb6abb)
fifo write: @1699477100493985166 0x7f81e8b9fb80 480: I2C/C2I adapters(0xbb6666b)
fifo write: @1699477100493998916 0x7f81e8b9f800 472: I2C/C2I adapters(0xbb6666)
fifo write: @1699477100494012406 0x7f81e8ba7d80 512: I2C/C2I adapters(0xb66666666b)
fifo write: @1699477100494025526 0x7f81e8ba7a80 504: I2C/C2I adapters(0xb66666666)
fifo write: @1699477100494038597 0x7f81e8ba7780 480: I2C/C2I adapters(0xb6666bb)
fifo write: @1699477100494051737 0x7f81e8ba7400 704: I2C/C2I adapters(0xb6666666666666666b)
fifo write: @1699477100494064837 0x7f81e8ba7080 696: I2C/C2I adapters(0xb6666666666666666)
fifo write: @1699477100494077677 0x7f81e8ba6d80 504: I2C/C2I adapters(0xb666666bb)
fifo write: @1699477100494090537 0x7f81e8ba6a80 472: I2C/C2I adapters(0xb6b66b)
fifo write: @1699477100494103787 0x7f81e8ba6780 456: I2C/C2I adapters(0xb6b66)
fifo write: @1699477100494116878 0x7f81e8ba6480 472: I2C/C2I adapters(0xb666bb)
fifo write: @1699477100494129868 0x7f81e8ba6180 464: I2C/C2I adapters(0xb66bbb)
fifo write: @1699477100494142748 0x7f81e8ba5e80 456: I2C/C2I adapters(0xbb666)
fifo write: @1699477100494155738 0x7f81e8ba5b80 472: I2C/C2I adapters(0xbb666b)
fifo write: @1699477100494168708 0x7f81e8ba5880 512: I2C/C2I adapters(0xb66666aa66)
fifo write: @1699477100494181728 0x7f81e8ba5580 496: I2C/C2I adapters(0xb666666ab)
fifo write: @1699477100494194749 0x7f81e8ba5280 480: I2C/C2I adapters(0xb6666ab)
fifo write: @1699477100494207719 0x7f81e8ba4f80 472: I2C/C2I adapters(0xb6666a)
fifo write: @1699477100494220639 0x7f81e8ba4c80 488: I2C/C2I adapters(0xb666666a)
fifo write: @1699477100494233929 0x7f81e8ba4980 536: I2C/C2I adapters(0xb666666666b)
fifo write: @1699477100494246719 0x7f81e8ba4680 496: I2C/C2I adapters(0xb6666666)
fifo write: @1699477100494259649 0x7f81e8ba4380 544: I2C/C2I adapters(0xb6666666666)
fifo write: @1699477100494272500 0x7f81e8ba4080 552: I2C/C2I adapters(0xb6666666666b)
fifo write: @1699477100507321898 0x7f81e8ba3d80 496: I2C/C2I adapters(0xbbbb7eabb)
fifo write: @1699477100507337078 0x7f81e8ba3a80 480: I2C/C2I adapters(0xb7e7e7e7ebb)
fifo write: @1699477100507350418 0x7f81e8ba3780 528: I2C/C2I adapters(0xb7e7e7e7e7e7e7e7eb)
fifo write: @1699477100507363738 0x7f81e8ba3480 472: I2C/C2I adapters(0xbb7e7e7e7e)
fifo write: @1699477100507376808 0x7f81e8ba3180 480: I2C/C2I adapters(0xbb7e7e7e7eb)
fifo write: @1699477100507389928 0x7f81e8ba2e80 472: I2C/C2I adapters(0xb7e7e7e7eb)
fifo write: @1699477100507403039 0x7f81e8ba2b80 512: I2C/C2I adapters(0xb7e7e7e7e7e7e7e7e)
fifo write: @1699477100507416589 0x7f81e8ba2800 760: I2C/C2I adapters(0xb7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7eb)
fifo write: @1699477100507429929 0x7f81e8ba2480 744: I2C/C2I adapters(0xb7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e)
fifo write: @1699477100507442949 0x7f81e8ba2180 504: I2C/C2I adapters(0xb7e7e7e7e7e7ebb)
fifo write: @1699477100507455999 0x7f81e8ba1e80 472: I2C/C2I adapters(0xb7eb7e7eb)
fifo write: @1699477100507468989 0x7f81e8ba1b80 456: I2C/C2I adapters(0xb7eb7e7e)
fifo write: @1699477100507481850 0x7f81e8ba1880 472: I2C/C2I adapters(0xb7e7e7ebb)
fifo write: @1699477100507494900 0x7f81e8ba1580 464: I2C/C2I adapters(0xb7e7ebbb)
fifo write: @1699477100507507830 0x7f81e8ba1280 472: I2C/C2I adapters(0xbb7e7e7eb)
fifo write: @1699477100507521180 0x7f81e8ba0d80 520: I2C/C2I adapters(0xb7e7e7e7e7eaa7e7e)
fifo write: @1699477100507534250 0x7f81e8b9aa80 504: I2C/C2I adapters(0xb7e7e7e7e7e7eab)
fifo write: @1699477100507547200 0x7f81e8b9a780 480: I2C/C2I adapters(0xb7e7e7e7eab)
fifo write: @1699477100507560181 0x7f81e8b9a480 472: I2C/C2I adapters(0xb7e7e7e7ea)
fifo write: @1699477100507573121 0x7f81e8b9a180 496: I2C/C2I adapters(0xb7e7e7e7e7e7ea)
fifo write: @1699477100507629981 0x7f81e8b99e80 560: I2C/C2I adapters(0xb7e7e7e7e7e7e7e7e7eb)
fifo write: @1699477100507643172 0x7f81e8b99b80 496: I2C/C2I adapters(0xb7e7e7e7e7e7e7e)
fifo write: @1699477100507656312 0x7f81e8b99880 576: I2C/C2I adapters(0xb7e7e7e7e7e7e7e7e7e7e)
fifo write: @1699477100507669332 0x7f81e8b99580 592: I2C/C2I adapters(0xb7e7e7e7e7e7e7e7e7e7eb)
fifo write: @1699477100513344195 0x7f81e8b99280 584: I2C/C2I adapters(0xb666666666666)
fifo write: @1699477100513360365 0x7f81e8b98f80 504: I2C/C2I adapters(0xb6666666b)
fifo write: @1699477100516041410 0x7f81e8b98c80 456: I2C/C2I adapters(0xba7e7e7e)
fifo write: @1699477100517735682 0x7f81e8b98980 448: I2C/C2I adapters(0xba66)
fifo write: @1699477100518793615 0x7f81e8b98680 496: I2C/C2I adapters(0x66666666)
fifo write: @1699477100518807056 0x7f81e8b98380 456: I2C/C2I adapters(0x6666)
fifo write: @1699477100520015611 0x7f81e8b98080 456: I2C/C2I adapters(0xb7e7e7ea)
fifo write: @1699477100520028901 0x7f81e8b97d80 456: I2C/C2I adapters(0xb666a)
fifo write: @1699477100521160776 0x7f81e8b97a80 448: I2C/C2I adapters(0xb66a)
fifo write: @1699477100521174056 0x7f81e8b97780 448: I2C/C2I adapters(0xb7e7ea)
fifo write: @1699477100522034467 0x7f81e90c4a4c 2: java.util.stream.FindOps$FindOp::getOpFlags() -> int
fifo write: @1699477100522368322 0x7f81e8b97480 552: I2C/C2I adapters(0x66666666666)
fifo write: @1699477100522915919 0x7f81e1aad154 15: org.joml.Math::fma(float, float, float) -> float
fifo write: @1699477100523012200 0x7f81e90c474c 4: org.joml.Matrix3f::m00() -> float
fifo write: @1699477100523055050 0x7f81e90c444c 4: org.joml.Matrix3f::m01() -> float
fifo write: @1699477100523085981 0x7f81e90c414c 4: org.joml.Matrix3f::m10() -> float
fifo write: @1699477100523121821 0x7f81e90c3e4c 4: org.joml.Matrix3f::m12() -> float
fifo write: @1699477100523150292 0x7f81e90c394c 4: org.joml.Matrix3f::m11() -> float
fifo write: @1699477100523173912 0x7f81e91f734c 4: org.joml.Matrix3f::m21() -> float
fifo write: @1699477100523197102 0x7f81e91f704c 4: org.joml.Matrix3f::m22() -> float
fifo write: @1699477100523220333 0x7f81e91f6d4c 4: org.joml.Matrix3f::m02() -> float
fifo write: @1699477100523243463 0x7f81e91f6a4c 4: org.joml.Matrix3f::m20() -> float
fifo write: @1699477100525466912 0x7f81e91f674c 2: it.unimi.dsi.fastutil.booleans.BooleanArrayList::size() -> int
fifo write: @1699477100525636144 0x7f81e1ab1874 159: it.unimi.dsi.fastutil.booleans.BooleanArrayList$1::hasNext() -> boolean
fifo write: @1699477100525689924 0x7f81e15b4634 604: it.unimi.dsi.fastutil.booleans.BooleanArrayList$1::nextBoolean() -> boolean
fifo write: @1699477100525745425 0x7f81e15b3d14 660: it.unimi.dsi.fastutil.booleans.BooleanArrayList::getBoolean(int) -> boolean
fifo write: @1699477100525848936 0x7f81e15b3874 95: i::a(int) -> int
fifo write: @1699477100525888387 0x7f81e19a3d34 450: it.unimi.dsi.fastutil.booleans.BooleanArrayList::<init>(int) -> void
fifo write: @1699477100525932548 0x7f81e19a3217 1164: it.unimi.dsi.fastutil.booleans.BooleanArrayList::initArrayFromCapacity(int) -> void
fifo write: @1699477100525981028 0x7f81e1a81e94 328: it.unimi.dsi.fastutil.booleans.AbstractBooleanList::<init>() -> void
fifo write: @1699477100526019509 0x7f81e1a81a14 234: it.unimi.dsi.fastutil.booleans.AbstractBooleanCollection::<init>() -> void
fifo write: @1699477100526072509 0x7f81e1a81514 198: it.unimi.dsi.fastutil.booleans.BooleanArrayList::add(boolean) -> boolean
fifo write: @1699477100526123210 0x7f81e19a2d99 88: it.unimi.dsi.fastutil.booleans.BooleanArrayList::<init>(boolean[]) -> void
fifo write: @1699477100526160340 0x7f81e1a80e67 408: h::d() -> it.unimi.dsi.fastutil.booleans.BooleanList
fifo write: @1699477100526197311 0x7f81e1b59e54 927: it.unimi.dsi.fastutil.booleans.BooleanArrayList::grow(int) -> void
fifo write: @1699477100526231611 0x7f81e1b5935f 788: it.unimi.dsi.fastutil.booleans.BooleanArrayList::<init>(boolean[], int, int) -> void
fifo write: @1699477100526503985 0x7f81e18d6974 23: com.google.common.base.Objects::hashCode(Object[]) -> int
fifo write: @1699477100526555126 0x7f81e18d60b7 1142: com.mojang.datafixers.util.Pair::hashCode() -> int
fifo write: @1699477100526646677 0x7f81e18d5734 690: it.unimi.dsi.fastutil.booleans.AbstractBooleanList::iterator() -> it.unimi.dsi.fastutil.booleans.BooleanListIterator
fifo write: @1699477100526702767 0x7f81e1a79414 637: it.unimi.dsi.fastutil.booleans.BooleanArrayList::listIterator(int) -> it.unimi.dsi.fastutil.booleans.BooleanListIterator
fifo write: @1699477100526742358 0x7f81e1a788d7 1335: it.unimi.dsi.fastutil.booleans.AbstractBooleanList::hashCode() -> int
fifo write: @1699477100526788239 0x7f81e1ad9b34 722: it.unimi.dsi.fastutil.booleans.AbstractBooleanList::listIterator() -> it.unimi.dsi.fastutil.booleans.BooleanListIterator
fifo write: @1699477100526838579 0x7f81e1ad9614 253: it.unimi.dsi.fastutil.booleans.BooleanArrayList$1::<init>(it.unimi.dsi.fastutil.booleans.BooleanArrayList, int) -> void
fifo write: @1699477100526880890 0x7f81e1ad9114 204: i::a(i) -> i
fifo write: @1699477100526924840 0x7f81e1492f78 1137: it.unimi.dsi.fastutil.booleans.AbstractBooleanList::ensureIndex(int) -> void
fifo write: @1699477100527119463 0x7f81e158ad14 1998: it.unimi.dsi.fastutil.booleans.BooleanArrayList::equals(Object) -> boolean
fifo write: @1699477100527192414 0x7f81e1aaa8f4 1811: com.mojang.datafixers.util.Pair::equals(Object) -> boolean
fifo write: @1699477100527269705 0x7f81e1492454 812: it.unimi.dsi.fastutil.booleans.BooleanArrayList::equals(it.unimi.dsi.fastutil.booleans.BooleanArrayList) -> boolean
fifo write: @1699477100527509138 0x7f81e91f63b1 74: java.util.Objects::equals(Object, Object) -> boolean
fifo write: @1699477100527544588 0x7f81e91f5fd0 67: i::a(int) -> int
fifo write: @1699477100527719071 0x7f81e91234eb 62: com.mojang.datafixers.util.Pair::of(Object, Object) -> com.mojang.datafixers.util.Pair
fifo write: @1699477100527904383 0x7f81e9123150 95: it.unimi.dsi.fastutil.booleans.BooleanArrayList::getBoolean(int) -> boolean
fifo write: @1699477100528169486 0x7f81e9121d6e 1284: java.util.stream.ReferencePipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477100528521481 0x7f81e9121850 139: it.unimi.dsi.fastutil.booleans.BooleanArrayList$1::nextBoolean() -> boolean
fifo write: @1699477100528614252 0x7f81e91214d0 63: it.unimi.dsi.fastutil.booleans.BooleanArrayList::grow(int) -> void
fifo write: @1699477100528667323 0x7f81e9121050 127: it.unimi.dsi.fastutil.booleans.BooleanArrayList::add(boolean) -> boolean
fifo write: @1699477100529146499 0x7f81e1a936e1 1673: java.lang.invoke.MethodHandles$Lookup::findConstructor(Class, java.lang.invoke.MethodType) -> java.lang.invoke.MethodHandle
fifo write: @1699477100529182719 0x7f81e9120a57 505: it.unimi.dsi.fastutil.booleans.BooleanArrayList::initArrayFromCapacity(int) -> void
fifo write: @1699477100529215870 0x7f81e1a93114 335: h$$Lambda$838.0x00007f81603b75b0::test(Object) -> boolean
fifo write: @1699477100529247230 0x7f81e158a72c 302: h::a(h) -> h
fifo write: @1699477100529282131 0x7f81e1aaa0be 646: h::a(h, h) -> boolean
fifo write: @1699477100529894419 0x7f81e91204be 261: java.util.Spliterators::spliterator(Object[], int, int, int) -> java.util.Spliterator
fifo write: @1699477100530216093 0x7f81e1b0bdc3 669: java.lang.invoke.LambdaForm$MH.0x00007f81603a2c00::linkToTargetMethod(Object, double, Object, Object) -> Object
fifo write: @1699477100530252333 0x7f81e158a194 235: eig$$Lambda$830.0x00007f81603a4430::<init>(eig, double, ha$a) -> void
fifo write: @1699477100530290664 0x7f81e1b0b5f9 576: arw::a(int, int, java.util.function.IntPredicate) -> int
fifo write: @1699477100530482176 0x7f81e1b58003 1538: java.lang.invoke.LambdaForm$DMH.0x00007f81603a2400::newInvokeSpecial(Object, Object, double, Object) -> Object
fifo write: @1699477100530572747 0x7f81e1aa1e2c 2137: eig::a(ha$a, double) -> int
fifo write: @1699477100530983033 0x7f81e911fa4e 776: java.util.Arrays::stream(Object[]) -> java.util.stream.Stream
fifo write: @1699477100532091567 0x7f81e911f282 141: eid::a(ehz, ehz, ehr, ehw, ehw, int, int, int) -> boolean
fifo write: @1699477100532221899 0x7f81e911ec57 215: eid$$Lambda$827.0x00007f816039c9f8::merge(int, int, int) -> boolean
fifo write: @1699477100533361833 0x7f81e1b57214 1653: dbi::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100533776059 0x7f81e1aa1894 279: com.google.common.collect.AbstractSequentialIterator::<init>(Object) -> void
fifo write: @1699477100533848450 0x7f81e1b0b014 473: com.google.common.cache.LocalCache$AccessQueue$2::<init>(com.google.common.cache.LocalCache$AccessQueue, com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100533886030 0x7f81e1ad8cf4 95: com.google.common.collect.AbstractSequentialIterator::hasNext() -> boolean
fifo write: @1699477100533941331 0x7f81e1461b94 1700: com.google.common.cache.LocalCache$Segment::getNextEvictable() -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100534094863 0x7f81e1aa1314 347: com.google.common.cache.LocalCache$AccessQueue$2::computeNext(com.google.common.cache.ReferenceEntry) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100534138503 0x7f81e140b319 2278: dfi$a::a() -> void
fifo write: @1699477100534190224 0x7f81e140ab34 733: com.google.common.cache.LocalCache$AccessQueue$2::computeNext(Object) -> Object
fifo write: @1699477100534241095 0x7f81e1461054 1242: com.google.common.collect.AbstractSequentialIterator::next() -> Object
fifo write: @1699477100534291835 0x7f81e1afbd2a 974: com.google.common.cache.LocalCache$AccessQueue::iterator() -> java.util.Iterator
fifo write: @1699477100536111819 0x7f81e911d107 1831: java.util.stream.AbstractPipeline::copyIntoWithCancel(java.util.stream.Sink, java.util.Spliterator) -> boolean
fifo write: @1699477100536162360 0x7f81e93257d7 227: eid$$Lambda$828.0x00007f816039cc20::merge(int, int, int) -> boolean
fifo write: @1699477100539378401 0x7f81e1afaef4 1806: dbi::c_(dfj) -> eam
fifo write: @1699477100539574914 0x7f81e93252d3 180: ehy::a(ehz$a) -> boolean
fifo write: @1699477100549243098 0x7f81e9324944 50: com.google.common.cache.LocalCache::connectAccessOrder(com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100549748135 0x7f81e1b6b914 456: com.google.common.cache.LocalCache$EntryFactory::copyEntry(com.google.common.cache.LocalCache$Segment, com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry, Object) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100549892257 0x7f81e1b0aa94 231: com.google.common.cache.LocalCache$EntryFactory$6::copyEntry(com.google.common.cache.LocalCache$Segment, com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry, Object) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100550021679 0x7f81e1b6ab99 1646: com.google.common.cache.LocalCache$Segment::copyEntry(com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100550252151 0x7f81e15080dc 2281: com.google.common.cache.LocalCache$EntryFactory::copyAccessEntry(com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100550919200 0x7f81e15074f9 1261: com.google.common.cache.LocalCache$Segment::removeValueFromChain(com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry, Object, int, Object, com.google.common.cache.LocalCache$ValueReference, com.google.common.cache.RemovalCause) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100551024081 0x7f81e1b79159 813: com.google.common.cache.LocalCache$Segment::enqueueNotification(Object, int, Object, int, com.google.common.cache.RemovalCause) -> void
fifo write: @1699477100551150623 0x7f81e1b787de 873: com.google.common.cache.LocalCache$Segment::removeEntryFromChain(com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100551220934 0x7f81e1b6a334 392: com.google.common.cache.LocalCache$2::iterator() -> java.util.Iterator
fifo write: @1699477100551297425 0x7f81e1be5b94 1830: com.google.common.cache.LocalCache$AccessQueue::remove(Object) -> boolean
fifo write: @1699477100551373166 0x7f81e18a11b9 2100: java.util.AbstractCollection::remove(Object) -> boolean
fifo write: @1699477100551439617 0x7f81e932435d 454: java.util.concurrent.locks.ReentrantLock$Sync::tryLock() -> boolean
fifo write: @1699477100551724181 0x7f81e9323fd0 87: eam::a() -> eal
fifo write: @1699477100551847482 0x7f81e9323bd0 127: eam::c() -> boolean
fifo write: @1699477100551973194 0x7f81e1b77e34 859: cwc::c(dfj, cpb, gw) -> boolean
fifo write: @1699477100552635352 0x7f81e149dd16 8503: com.google.common.cache.LocalCache$Segment::removeEntry(com.google.common.cache.ReferenceEntry, int, com.google.common.cache.RemovalCause) -> boolean
fifo write: @1699477100552690813 0x7f81e9323860 46: eig::a(ha$a, int) -> double
fifo write: @1699477100552768854 0x7f81e18a03d4 1322: cvq::b_(dfj, cpb, gw) -> eig
fifo write: @1699477100552827125 0x7f81e9323300 183: eig::b(ha$a) -> double
fifo write: @1699477100553849108 0x7f81e9322db0 171: com.google.common.math.IntMath::gcd(int, int) -> int
fifo write: @1699477100556176477 0x7f81e931ed45 5865: dbi::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100556671054 0x7f81e931e5af 268: eid::a(int, int) -> long
fifo write: @1699477100557647286 0x7f81e931c999 2564: eid::a(int, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> ehz
fifo write: @1699477100558388396 0x7f81e1a92c94 243: dap::e_(dfj) -> boolean
fifo write: @1699477100558614869 0x7f81e1be4cf4 1806: dap::c_(dfj) -> eam
fifo write: @1699477100560378811 0x7f81e931a7f4 3656: eia::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, boolean, boolean) -> void
fifo write: @1699477100564029009 0x7f81e1a66b17 611: cun::c(dfj, cpb, gw) -> boolean
fifo write: @1699477100566405799 0x7f81e931a2d4 215: Math::min(double, double) -> double
fifo write: @1699477100566473650 0x7f81e9319fd6 73: com.google.common.math.MathPreconditions::checkNonNegative(String, double) -> double
fifo write: @1699477100568461566 0x7f81e1a65e74 1529: cub::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100568770850 0x7f81e931956f 240: java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock() -> boolean
fifo write: @1699477100571665187 0x7f81e1a65537 632: dbk::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100572210394 0x7f81e9315247 6191: dap::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100578349843 0x7f81e1a8ed14 488: dbr::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100580768175 0x7f81e1a8e714 488: dbr::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100582439496 0x7f81e1a8e017 611: dbr::c(dfj, cpb, gw) -> boolean
fifo write: @1699477100586542639 0x7f81e9313f53 1313: com.google.common.cache.LocalCache$Segment::drainKeyReferenceQueue() -> void
fifo write: @1699477100587284259 0x7f81e142abf4 1806: dbr::c_(dfj) -> eam
fifo write: @1699477100588899440 0x7f81e931366f 472: dbr::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100590574021 0x7f81e9312fd0 67: com.google.common.cache.LocalCache::processPendingNotifications() -> void
fifo write: @1699477100590638492 0x7f81e9312bd0 87: com.google.common.cache.LocalCache$AccessQueue::peek() -> Object
fifo write: @1699477100592394155 0x7f81e93123bb 582: com.google.common.util.concurrent.AbstractFuture::set(Object) -> boolean
fifo write: @1699477100595716028 0x7f81e93103d3 2764: com.google.common.cache.LocalCache$Segment::expireEntries(long) -> void
fifo write: @1699477100599734360 0x7f81e9369d1a 5206: com.google.common.cache.LocalCache$Segment::runLockedCleanup(long) -> void
fifo write: @1699477100601333560 0x7f81e930f9d1 290: eig$$Lambda$830.0x00007f81603a4430::test(int) -> boolean
fifo write: @1699477100602165031 0x7f81e142a1ad 980: aew::c(String) -> aew
fifo write: @1699477100602493885 0x7f81e1a6c534 859: ctd::c(dfj, cpb, gw) -> boolean
fifo write: @1699477100603276115 0x7f81e1af1f54 3762: cte::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100603324965 0x7f81e930f6cc 6: crs::a() -> czx$a
fifo write: @1699477100603427817 0x7f81e1429c14 255: czx::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100604237307 0x7f81e936d4e0 1192: com.google.common.cache.LocalCache$WeakAccessEntry::<init>(java.lang.ref.ReferenceQueue, Object, int, com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477100604349798 0x7f81e1a6b9d7 1264: dbu::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100604394799 0x7f81e1a8d614 144: czx::f(dfj, cpb, gw) -> eig
fifo write: @1699477100604434339 0x7f81e930f350 99: java.util.EnumMap::isValidKey(Object) -> boolean
fifo write: @1699477100604892115 0x7f81e936e078 1484: com.google.common.cache.LocalCache$EntryFactory$6::newEntry(com.google.common.cache.LocalCache$Segment, Object, int, com.google.common.cache.ReferenceEntry) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100604977876 0x7f81e936ee4f 228: java.util.EnumMap::get(Object) -> Object
fifo write: @1699477100606069810 0x7f81e1a6b037 626: crw::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100606409065 0x7f81e170a557 809: ha::h() -> ha
fifo write: @1699477100606446615 0x7f81e1709cd7 809: ha::i() -> ha
fifo write: @1699477100615306270 0x7f81e1708e74 1806: cun::c_(dfj) -> eam
fifo write: @1699477100616687898 0x7f81e936f3d8 395: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::find(Object) -> int
fifo write: @1699477100617556069 0x7f81e936fb97 1361: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::computeIfAbsent(Object, java.util.function.ToIntFunction) -> int
fifo write: @1699477100618897176 0x7f81e9370d10 1252: cun::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477100622409721 0x7f81e9371ed6 241: com.google.common.math.DoubleMath::fuzzyEquals(double, double, double) -> boolean
fifo write: @1699477100623454525 0x7f81e930eed0 75: java.util.concurrent.TimeUnit::toNanos(long) -> long
fifo write: @1699477100623664958 0x7f81e93723d0 59: com.google.common.cache.LocalCache$LoadingValueReference::get() -> Object
fifo write: @1699477100625312859 0x7f81e9372753 172: java.util.concurrent.TimeUnit::convert(long, java.util.concurrent.TimeUnit) -> long
fifo write: @1699477100625754045 0x7f81e9372c70 744: com.google.common.cache.LocalCache$LoadingValueReference::<init>(com.google.common.cache.LocalCache$ValueReference) -> void
fifo write: @1699477100626982000 0x7f81e937357e 1478: com.google.common.cache.LocalCache$Segment::newEntry(Object, int, com.google.common.cache.ReferenceEntry) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477100627069912 0x7f81e9374355 696: com.google.common.cache.LocalCache$LoadingValueReference::notifyNewValue(Object) -> void
fifo write: @1699477100627291674 0x7f81e9374cb6 1343: com.google.common.cache.LocalCache$LoadingValueReference::loadFuture(Object, com.google.common.cache.CacheLoader) -> com.google.common.util.concurrent.ListenableFuture
fifo write: @1699477100629493833 0x7f81e93764cd 130: ehi::<init>(double, double, double, double, double, double) -> void
fifo write: @1699477100630300593 0x7f81e937695b 1375: eig::a() -> ehi
fifo write: @1699477100633269872 0x7f81e9377d13 2348: com.google.common.cache.LocalCache$Segment::loadSync(Object, int, com.google.common.cache.LocalCache$LoadingValueReference, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100642131346 0x7f81e9379d73 1516: ClassLoader::compareCerts(java.security.cert.Certificate[], java.security.cert.Certificate[]) -> boolean
fifo write: @1699477100646566333 0x7f81e937ae53 760: java.util.Base64$Decoder::decodedOutLength(byte[], int, int) -> int
fifo write: @1699477100647462495 0x7f81e937b935 698: java.security.MessageDigest::isEqual(byte[], byte[]) -> boolean
fifo write: @1699477100649402690 0x7f81e937c47f 8896: com.google.common.cache.LocalCache$Segment::lockedGetOrLoad(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477100651041081 0x7f81e924b54c 6: cgy::e() -> csv
fifo write: @1699477100652396458 0x7f81e1b71794 271: cja$a::<init>() -> void
fifo write: @1699477100652513339 0x7f81e1b71314 102: cgy::<init>(csv, cja$a) -> void
fifo write: @1699477100652593440 0x7f81e1b70d41 393: cji::a(aew, cja) -> cja
fifo write: @1699477100652785343 0x7f81e1b70363 1212: cji::a(aev, cja) -> cja
fifo write: @1699477100652880594 0x7f81e177dd5e 1000: cji::a(csv, cja) -> cja
fifo write: @1699477100652905264 0x7f81e8b9e500 27: vtable stub
fifo write: @1699477100652950365 0x7f81e1b6fe21 243: cji::a(cgy) -> cja
fifo write: @1699477100653004996 0x7f81e177cd17 1827: cja::<init>(cja$a) -> void
fifo write: @1699477100653046616 0x7f81e177c517 397: cgy::a(java.util.Map, cja) -> void
fifo write: @1699477100653087897 0x7f81e1ac5bc3 818: cji::a(csv) -> cja
fifo write: @1699477100656742974 0x7f81e8b95700 584: I2C/C2I adapters(0xbbbaaaabbaab)
fifo write: @1699477100659430169 0x7f81e8b95400 488: I2C/C2I adapters(0xbb7e7e7eb66)
fifo write: @1699477100659444129 0x7f81e8b95100 432: I2C/C2I adapters(0xb6a)
fifo write: @1699477100659457179 0x7f81e8b94e00 472: I2C/C2I adapters(0xbbbbbb6)
fifo write: @1699477100659470679 0x7f81e8b94b00 456: I2C/C2I adapters(0xb7eabb)
fifo write: @1699477100659483659 0x7f81e8b94800 472: I2C/C2I adapters(0xb7e7e7e66)
fifo write: @1699477100659496639 0x7f81e8b94500 480: I2C/C2I adapters(0xb7e7e7e66a)
fifo write: @1699477100659509860 0x7f81e8b94200 440: I2C/C2I adapters(0x7e7e6)
fifo write: @1699477100659523040 0x7f81e8b93f00 480: I2C/C2I adapters(0xba7e7e7e7e7e)
fifo write: @1699477100659536200 0x7f81e8b93c00 448: I2C/C2I adapters(0xb7e6a)
fifo write: @1699477100661467055 0x7f81e8b97180 448: I2C/C2I adapters(0xb7eab)
fifo write: @1699477100664071258 0x7f81e8b96e80 496: I2C/C2I adapters(0xbbabaaaa)
fifo write: @1699477100665623149 0x7f81e924b053 44: java.lang.invoke.LambdaForm::uncustomize() -> java.lang.invoke.LambdaForm
fifo write: @1699477100675340594 0x7f81e9243d35 154: StringConcatHelper::newString(byte[], long) -> String
fifo write: @1699477100685730418 0x7f81e14deda7 9523: java.util.concurrent.ConcurrentHashMap::transfer(java.util.concurrent.ConcurrentHashMap$Node[], java.util.concurrent.ConcurrentHashMap$Node[]) -> void
fifo write: @1699477100686321216 0x7f81e92d9c60 431: jdk.internal.perf.PerfCounter::addElapsedTimeFrom(long) -> void
fifo write: @1699477100687424240 0x7f81e92438cf 256: java.security.CodeSource::getCertificates() -> java.security.cert.Certificate[]
fifo write: @1699477100689658339 0x7f81e9383328 16959: com.google.common.cache.LocalCache$Segment::storeLoadedValue(Object, int, com.google.common.cache.LocalCache$LoadingValueReference, Object) -> boolean
fifo write: @1699477100692658538 0x7f81e1ac561a 296: java.lang.invoke.LambdaForm$Name::withConstraint(Object) -> java.lang.invoke.LambdaForm$Name
fifo write: @1699477100693563909 0x7f81e1ac4df4 404: java.lang.invoke.MethodHandleImpl::countNonNull(Object[]) -> int
fifo write: @1699477100693689941 0x7f81e1b50ff6 29: java.lang.invoke.MethodHandleImpl::makePairwiseConvert(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean) -> java.lang.invoke.MethodHandle
fifo write: @1699477100693800262 0x7f81e1b77874 328: java.lang.invoke.MethodHandleImpl::makePairwiseConvert(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean, boolean) -> java.lang.invoke.MethodHandle
fifo write: @1699477100693889063 0x7f81e189216d 1867: java.lang.invoke.MethodHandleImpl::computeValueConversions(java.lang.invoke.MethodType, java.lang.invoke.MethodType, boolean, boolean) -> Object[]
fifo write: @1699477100694028925 0x7f81e15905c1 2458: java.lang.invoke.MethodHandle::asTypeUncached(java.lang.invoke.MethodType) -> java.lang.invoke.MethodHandle
fifo write: @1699477100694100846 0x7f81e1a7f737 2050: java.lang.invoke.MethodType::isConvertibleTo(java.lang.invoke.MethodType) -> boolean
fifo write: @1699477100695157860 0x7f81e92d8f59 1479: jdk.internal.org.objectweb.asm.Frame::push(int) -> void
fifo write: @1699477100696473267 0x7f81e158f8f7 1280: java.lang.invoke.MemberName::asConstructor() -> java.lang.invoke.MemberName
fifo write: @1699477100696772441 0x7f81e1b532df 2541: java.lang.invoke.MethodHandles$Lookup::getDirectConstructorCommon(Class, java.lang.invoke.MemberName, boolean) -> java.lang.invoke.MethodHandle
fifo write: @1699477100697310737 0x7f81e143d1df 20651: java.lang.invoke.MethodHandleImpl::makePairwiseConvertByEditor(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean, boolean) -> java.lang.invoke.MethodHandle
fifo write: @1699477100701074815 0x7f81e92d8c4c 6: ClassLoader::getUnnamedModule() -> Module
fifo write: @1699477100703539597 0x7f81e8b96b80 448: I2C/C2I adapters(0xb7ea7e)
fifo write: @1699477100704287857 0x7f81e1b77237 513: java.util.HashMap::putIfAbsent(Object, Object) -> Object
fifo write: @1699477100705980649 0x7f81e92d72d3 2350: jdk.internal.org.objectweb.asm.ClassReader::<init>(byte[], int, boolean) -> void
fifo write: @1699477100706311783 0x7f81e1b52c97 377: java.util.stream.Collectors$$Lambda$108.0x00007f8160171838::accept(Object, Object) -> void
fifo write: @1699477100706445985 0x7f81e1a7ec39 1105: java.util.stream.Collectors::lambda$uniqKeysMapAccumulator$1(java.util.function.Function, java.util.function.Function, java.util.Map, Object) -> void
fifo write: @1699477100709569225 0x7f81e1b52460 977: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object, Object, Object) -> Object
fifo write: @1699477100710095252 0x7f81e1891b14 535: java.lang.invoke.ClassSpecializer$SpeciesData::getterFunction(int) -> java.lang.invoke.LambdaForm$NamedFunction
fifo write: @1699477100710241934 0x7f81e189155f 301: java.lang.invoke.BoundMethodHandle$Species_LL::make(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477100710364105 0x7f81e143c594 320: java.lang.invoke.BoundMethodHandle$Species_LL::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, Object) -> void
fifo write: @1699477100710487847 0x7f81e143b257 2323: java.lang.invoke.InvokerBytecodeGenerator::emitReturnInsn(java.lang.invoke.LambdaForm$BasicType) -> void
fifo write: @1699477100710571418 0x7f81e1890ff4 198: java.lang.invoke.DelegatingMethodHandle::whichKind(int) -> java.lang.invoke.LambdaForm$Kind
fifo write: @1699477100710766501 0x7f81e1a7e714 47: java.lang.invoke.MethodType::invokerType() -> java.lang.invoke.MethodType
fifo write: @1699477100710854032 0x7f81e143ad17 187: java.lang.invoke.MethodType::appendParameterTypes(Class[]) -> java.lang.invoke.MethodType
fifo write: @1699477100710961283 0x7f81e1503514 731: java.lang.invoke.BoundMethodHandle::speciesDataFor(java.lang.invoke.LambdaForm) -> java.lang.invoke.BoundMethodHandle$SpeciesData
fifo write: @1699477100711337988 0x7f81e143a6f9 42: java.lang.invoke.DelegatingMethodHandle::makeReinvokerForm(java.lang.invoke.MethodHandle, int, Object, java.lang.invoke.LambdaForm$NamedFunction) -> java.lang.invoke.LambdaForm
fifo write: @1699477100711592721 0x7f81e1a7432e 8746: java.lang.invoke.DelegatingMethodHandle::makeReinvokerForm(java.lang.invoke.MethodHandle, int, Object, boolean, java.lang.invoke.LambdaForm$NamedFunction, java.lang.invoke.LambdaForm$NamedFunction) -> java.lang.invoke.LambdaForm
fifo write: @1699477100711741673 0x7f81e1502337 2598: java.lang.invoke.BoundMethodHandle$Species_L::copyWithExtendL(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477100711927426 0x7f81e1501834 829: java.lang.invoke.LambdaFormEditor::oldSpeciesData() -> java.lang.invoke.BoundMethodHandle$SpeciesData
fifo write: @1699477100712115198 0x7f81e16b8f60 969: java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial(Object, Object, Object) -> Object
fifo write: @1699477100712217729 0x7f81e16b8734 620: java.lang.invoke.MethodHandle::asType(java.lang.invoke.MethodType) -> java.lang.invoke.MethodHandle
fifo write: @1699477100712496263 0x7f81e92d6939 50: java.lang.invoke.DirectMethodHandle::fieldOffset(Object) -> long
fifo write: @1699477100712588764 0x7f81e92d6614 35: java.lang.invoke.DirectMethodHandle::checkBase(Object) -> Object
fifo write: @1699477100712694615 0x7f81e16b7de9 1093: java.lang.invoke.DirectMethodHandle$Holder::getReference(Object, Object) -> Object
fifo write: @1699477100712842567 0x7f81e92d5fbc 91: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, int, int) -> int
fifo write: @1699477100713114501 0x7f81e92d5c3c 83: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object) -> int
fifo write: @1699477100713205112 0x7f81e92d573d 178: java.lang.invoke.DirectMethodHandle::checkCast(Object, Object) -> Object
fifo write: @1699477100713228082 0x7f81e8b9e530 27: vtable stub
fifo write: @1699477100713304013 0x7f81e92c7c33 276: java.util.Arrays::hashCode(Object[]) -> int
fifo write: @1699477100713388874 0x7f81e92c76d9 198: java.lang.invoke.LambdaForm$MH.0x00007f8160251800::invoke(Object, Object) -> int
fifo write: @1699477100713462375 0x7f81e92c733f 72: java.lang.invoke.LambdaForm$MH.0x00007f8160252c00::linkToTargetMethod(Object, Object) -> int
fifo write: @1699477100713541106 0x7f81e92c6c81 306: java.lang.invoke.LambdaForm$MH.0x00007f8160252800::invoke(Object, Object) -> int
fifo write: @1699477100713642418 0x7f81e164a397 3023: com.mojang.datafixers.types.templates.Const::hashCode() -> int
fifo write: @1699477100713740489 0x7f81e92c6640 347: java.lang.invoke.LambdaForm$MH.0x00007f816024c400::invoke(Object, Object) -> Object
fifo write: @1699477100714229745 0x7f81e1ac77d7 4108: com.mojang.datafixers.types.templates.Product::hashCode() -> int
fifo write: @1699477100714388147 0x7f81e1acdb57 4108: com.mojang.datafixers.types.templates.Sum::hashCode() -> int
fifo write: @1699477100714670001 0x7f81e14f093f 4936: com.mojang.datafixers.types.templates.Tag::hashCode() -> int
fifo write: @1699477100715208538 0x7f81e14f0294 279: com.mojang.datafixers.types.templates.Const::<init>(com.mojang.datafixers.types.Type) -> void
fifo write: @1699477100715303909 0x7f81e1ac70c3 386: com.mojang.datafixers.DSL::constType(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100720831140 0x7f81e92c343b 4555: sun.invoke.util.VerifyAccess::isSamePackage(Class, Class) -> boolean
fifo write: @1699477100720916942 0x7f81e16b7814 324: com.mojang.datafixers.types.templates.Sum::<init>(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> void
fifo write: @1699477100721017303 0x7f81e1acd3ca 431: com.mojang.datafixers.DSL::or(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100721073064 0x7f81e1649980 1017: java.lang.invoke.LambdaForm$MH.0x00007f816041a000::invoke(Object, Object) -> int
fifo write: @1699477100721119264 0x7f81e152ecff 679: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, int) -> int
fifo write: @1699477100721187125 0x7f81e152e2e0 1190: java.lang.invoke.DirectMethodHandle$Holder::getInt(Object, Object) -> int
fifo write: @1699477100721234666 0x7f81e152db34 610: com.mojang.datafixers.types.templates.Sum::size() -> int
fifo write: @1699477100721286876 0x7f81e152cd17 1760: com.mojang.datafixers.types.templates.RecursivePoint::hashCode() -> int
fifo write: @1699477100721337307 0x7f81e150c937 2167: com.mojang.datafixers.types.templates.List::hashCode() -> int
fifo write: @1699477100721494479 0x7f81e150b99e 1699: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getOrDefault(Object, int) -> int
fifo write: @1699477100721972555 0x7f81e1acce97 237: com.mojang.datafixers.schemas.Schema::register(java.util.Map, String, java.util.function.Supplier) -> void
fifo write: @1699477100722127747 0x7f81e16b7294 324: com.mojang.datafixers.types.templates.Product::<init>(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> void
fifo write: @1699477100722197418 0x7f81e1649214 324: com.mojang.datafixers.types.templates.Tag::<init>(String, com.mojang.datafixers.types.templates.TypeTemplate) -> void
fifo write: @1699477100722280799 0x7f81e150b2ca 431: com.mojang.datafixers.DSL::and(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100722364810 0x7f81e1666eca 431: com.mojang.datafixers.DSL::field(String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100722417021 0x7f81e1666814 570: com.mojang.datafixers.DSL::remainder() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100722524322 0x7f81e1666194 570: com.mojang.datafixers.DSL::emptyPart() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100722628314 0x7f81e16656ba 1279: com.mojang.datafixers.DSL::optional(com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100722683384 0x7f81e150ad43 344: com.mojang.datafixers.DSL::id(int) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100722718135 0x7f81e1665214 240: com.mojang.datafixers.types.templates.Tag::size() -> int
fifo write: @1699477100722755495 0x7f81e1664934 610: com.mojang.datafixers.types.templates.Product::size() -> int
fifo write: @1699477100722792566 0x7f81e17df194 237: com.mojang.datafixers.types.templates.RecursivePoint::<init>(int) -> void
fifo write: @1699477100722870577 0x7f81e17de19f 2208: com.mojang.datafixers.DSL$TypeReference::in(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100722943738 0x7f81e17dd4d7 1626: com.mojang.datafixers.DSL::lambda$taggedChoiceLazy$0(java.util.Map$Entry) -> com.mojang.datafixers.util.Pair
fifo write: @1699477100723003499 0x7f81e1b5e877 1988: com.mojang.datafixers.DSL$$Lambda$933.0x00007f816040dd38::apply(Object) -> Object
fifo write: @1699477100723052919 0x7f81e17dcf94 354: com.mojang.datafixers.util.Pair$$Lambda$934.0x00007f816040df78::apply(Object) -> Object
fifo write: @1699477100723101930 0x7f81e17dca14 354: com.mojang.datafixers.util.Pair$$Lambda$935.0x00007f816040e1b8::apply(Object) -> Object
fifo write: @1699477100723157871 0x7f81e1b5e039 682: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::put(Object, Object) -> Object
fifo write: @1699477100723209311 0x7f81e1b5d2fe 1470: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::find(Object) -> int
fifo write: @1699477100723292262 0x7f81e1b24a9f 3979: com.mojang.datafixers.schemas.Schema::id(String) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100723343753 0x7f81e1b5cd17 298: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$ValueSpliterator::acceptOnIndex(java.util.function.Consumer, int) -> void
fifo write: @1699477100723403884 0x7f81e1b23f54 1117: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::insert(int, Object, Object) -> void
fifo write: @1699477100723443544 0x7f81e930aacc 2: java.util.AbstractList$ListItr::nextIndex() -> int
fifo write: @1699477100723486225 0x7f81e1b23794 450: java.util.stream.ReferencePipeline$4$1::accept(Object) -> void
fifo write: @1699477100723534335 0x7f81e14eb7b4 671: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$ValueSpliterator::acceptOnIndex(Object, int) -> void
fifo write: @1699477100723571856 0x7f81e152c854 15: java.lang.invoke.LambdaFormEditor$TransformKey::packedBytes(int, int, int) -> long
fifo write: @1699477100723634427 0x7f81e14eacb7 1172: java.lang.invoke.LambdaFormEditor$TransformKey::of(byte, int, int) -> java.lang.invoke.LambdaFormEditor$TransformKey
fifo write: @1699477100723951261 0x7f81e14ea794 270: java.util.AbstractList$SubList$1::nextIndex() -> int
fifo write: @1699477100723988451 0x7f81e14ea114 468: java.util.AbstractList$SubList$1::hasNext() -> boolean
fifo write: @1699477100724939404 0x7f81e14e98e0 1001: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477100724996894 0x7f81e14e9143 562: java.lang.invoke.LambdaForm$MH.0x00007f8160259c00::linkToTargetMethod(Object, Object, Object) -> int
fifo write: @1699477100725043995 0x7f81e1ac6c54 87: java.lang.runtime.ObjectMethods::eq(Object, Object) -> boolean
fifo write: @1699477100725100186 0x7f81e1a71560 862: java.lang.invoke.LambdaForm$DMH.0x00007f8160015c00::invokeSpecial(Object, Object, Object) -> int
fifo write: @1699477100725173467 0x7f81e1a70ce0 827: java.lang.invoke.LambdaForm$MH.0x00007f8160258000::invoke(Object, Object, Object) -> int
fifo write: @1699477100725282058 0x7f81e1a6f9e5 2863: java.lang.invoke.LambdaForm$MH.0x00007f8160259800::invoke(Object, Object, Object) -> int
fifo write: @1699477100725339419 0x7f81e1a6f3c0 309: java.lang.invoke.LambdaForm$MH.0x00007f8160253400::invoke(Object, Object, Object) -> int
fifo write: @1699477100725655883 0x7f81e1a6ef74 2: com.mojang.datafixers.types.templates.RecursivePoint::size() -> int
fifo write: @1699477100725854915 0x7f81e1a6eb94 137: com.mojang.datafixers.types.Type::<init>() -> void
fifo write: @1699477100726046878 0x7f81e930a63d 190: java.lang.invoke.DirectMethodHandle$Holder::getReference(Object, Object) -> Object
fifo write: @1699477100726893819 0x7f81e1b40887 7980: com.mojang.datafixers.types.templates.Const::equals(Object) -> boolean
fifo write: @1699477100727325174 0x7f81e1b40094 144: ayx$$Lambda$861.0x00007f81603dca28::typeName() -> String
fifo write: @1699477100727427526 0x7f81e1a6e69a 258: java.lang.invoke.DirectMethodHandle$Constructor::viewAsType(java.lang.invoke.MethodType, boolean) -> java.lang.invoke.MethodHandle
fifo write: @1699477100727504127 0x7f81e1a9ed94 279: com.mojang.datafixers.types.templates.List::<init>(com.mojang.datafixers.types.templates.TypeTemplate) -> void
fifo write: @1699477100727571927 0x7f81e1a9e7c3 386: com.mojang.datafixers.DSL::list(com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100727683449 0x7f81e1a9d9dd 1621: com.mojang.datafixers.DSL::and(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate[]) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100727812811 0x7f81e1a9d03a 1074: com.mojang.datafixers.DSL::allWithRemainder(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate[]) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100727900602 0x7f81e1a9c659 873: org.apache.commons.lang3.ArrayUtils::copyArrayGrow1(Object, Class) -> Object
fifo write: @1699477100727955232 0x7f81e1a9c194 240: com.mojang.datafixers.types.templates.List::size() -> int
fifo write: @1699477100728142515 0x7f81e1ad46d9 1476: org.apache.commons.lang3.ArrayUtils::add(Object[], Object) -> Object[]
fifo write: @1699477100728265056 0x7f81e1a9bd14 185: java.util.HashMap::getOrDefault(Object, Object) -> Object
fifo write: @1699477100728811883 0x7f81e1ad263f 4920: com.mojang.datafixers.types.templates.Named::hashCode() -> int
fifo write: @1699477100728878674 0x7f81e1ad1ad4 873: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::find(int) -> int
fifo write: @1699477100728950185 0x7f81e16b0834 721: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::insert(int, int, Object) -> void
fifo write: @1699477100729021966 0x7f81e16b0039 682: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::put(int, Object) -> Object
fifo write: @1699477100729341080 0x7f81e1a9b694 505: com.mojang.datafixers.types.templates.TaggedChoice$$Lambda$936.0x00007f8160411040::applyAsInt(Object) -> int
fifo write: @1699477100729405671 0x7f81e16afb94 220: java.util.stream.IntPipeline$$Lambda$937.0x00007f81601e2918::applyAsInt(int, int) -> int
fifo write: @1699477100729467102 0x7f81e16af4b4 507: java.util.stream.ReduceOps$6ReducingSink::accept(int) -> void
fifo write: @1699477100729629724 0x7f81e16af074 90: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477100730052280 0x7f81e16aea4a 431: com.mojang.datafixers.DSL::named(String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100730119040 0x7f81e930a236 137: java.lang.invoke.MethodHandleImpl::profileBoolean(boolean, int[]) -> boolean
fifo write: @1699477100730200381 0x7f81e16ae494 324: com.mojang.datafixers.types.templates.Named::<init>(String, com.mojang.datafixers.types.templates.TypeTemplate) -> void
fifo write: @1699477100730315853 0x7f81e16ad397 2139: com.mojang.datafixers.schemas.Schema::resolveTemplate(String) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100730385324 0x7f81e1a7de14 185: com.mojang.datafixers.schemas.Schema$$Lambda$932.0x00007f816040cec8::<init>(String) -> void
fifo write: @1699477100730526676 0x7f81e1a7ca5f 2918: com.mojang.datafixers.schemas.Schema::getTemplate(String) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100730601337 0x7f81e1a7c514 240: com.mojang.datafixers.types.templates.Const$1::<init>(com.mojang.datafixers.types.templates.Const) -> void
fifo write: @1699477100730688238 0x7f81e1a7bfe3 347: com.mojang.datafixers.types.templates.Const::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100730768459 0x7f81e9309e39 110: java.lang.invoke.DelegatingMethodHandle$Holder::delegate(Object, Object, Object) -> int
fifo write: @1699477100730834680 0x7f81e1a6e2f4 67: com.mojang.datafixers.types.templates.Const$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100731069503 0x7f81e1561767 6338: com.mojang.datafixers.types.templates.Sum::equals(Object) -> boolean
fifo write: @1699477100732710524 0x7f81e147fe80 5944: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100732816675 0x7f81e1a7a95d 3436: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100732863406 0x7f81e1560a1e 959: it.unimi.dsi.fastutil.HashCommon::arraySize(int, float) -> int
fifo write: @1699477100732947327 0x7f81e147f300 1201: java.lang.invoke.LambdaForm$MH.0x00007f816034fc00::invoke(Object, Object, Object) -> int
fifo write: @1699477100733019158 0x7f81e1a7a2d4 86: java.lang.runtime.ObjectMethods::eq(int, int) -> boolean
fifo write: @1699477100733231381 0x7f81e930954d 382: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, Object, Object) -> Object
fifo write: @1699477100733600995 0x7f81e147df99 1975: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477100733726997 0x7f81e1ae7e3c 4255: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntrySet::contains(Object) -> boolean
fifo write: @1699477100733776078 0x7f81e1560514 185: bcz$$Lambda$897.0x00007f8160406f98::<init>(com.mojang.datafixers.schemas.Schema) -> void
fifo write: @1699477100738980245 0x7f81e1ae6fd7 1768: bcz::a(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100739066116 0x7f81e1ae62f9 1551: com.mojang.datafixers.schemas.Schema::registerType(boolean, com.mojang.datafixers.DSL$TypeReference, java.util.function.Supplier) -> void
fifo write: @1699477100739198498 0x7f81e14aaee7 6338: com.mojang.datafixers.types.templates.Product::equals(Object) -> boolean
fifo write: @1699477100739243218 0x7f81e155ff14 31: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$EntryIterator::next() -> Object
fifo write: @1699477100739300819 0x7f81e1ae5e14 243: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap, int) -> void
fifo write: @1699477100739352850 0x7f81e9309050 123: com.mojang.datafixers.types.templates.Const::hashCode() -> int
fifo write: @1699477100739404730 0x7f81e14aa814 114: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry::getKey() -> Object
fifo write: @1699477100739510632 0x7f81e14aa0b4 687: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$EntryIterator::next() -> it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry
fifo write: @1699477100739692534 0x7f81e1a287e7 6306: com.mojang.datafixers.types.templates.Tag::equals(Object) -> boolean
fifo write: @1699477100739738805 0x7f81e14a9c14 114: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry::getValue() -> Object
fifo write: @1699477100739870496 0x7f81e15b9647 6187: com.mojang.datafixers.types.templates.RecursivePoint::equals(Object) -> boolean
fifo write: @1699477100739927757 0x7f81e9308cbc 99: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object) -> int
fifo write: @1699477100739963017 0x7f81e14a9794 240: com.mojang.datafixers.types.templates.Named::size() -> int
fifo write: @1699477100740063719 0x7f81e1a28094 230: com.mojang.datafixers.types.templates.Named$$Lambda$939.0x00007f8160414c80::<init>(com.mojang.datafixers.types.templates.Named, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477100740139190 0x7f81e1a27a4e 431: com.mojang.datafixers.DSL::named(String, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.Type
fifo write: @1699477100740205181 0x7f81e1a26f57 1137: com.mojang.datafixers.types.templates.Named$$Lambda$939.0x00007f8160414c80::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100740276702 0x7f81e15b8a57 1011: com.mojang.datafixers.types.templates.Named::lambda$apply$0(com.mojang.datafixers.types.families.TypeFamily, int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100740349712 0x7f81e15b7f57 1241: com.mojang.datafixers.types.templates.Named::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100740414113 0x7f81e9308386 605: java.lang.invoke.LambdaForm$MH.0x00007f8160259400::guard(Object, Object, Object) -> int
fifo write: @1699477100740446584 0x7f81e14a92f4 196: Integer::compare(int, int) -> int
fifo write: @1699477100740501694 0x7f81e1a26714 324: com.mojang.datafixers.types.templates.Named$NamedType::<init>(String, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477100740564005 0x7f81e15b7a94 185: bag$$Lambda$946.0x00007f816041fd10::<init>(com.mojang.datafixers.schemas.Schema) -> void
fifo write: @1699477100740606446 0x7f81e1ae5a14 167: bag$$Lambda$946.0x00007f816041fd10::get() -> Object
fifo write: @1699477100740663347 0x7f81e1ad16f4 23: bag::c(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100740773918 0x7f81e14157d7 1768: bag::a(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100740880499 0x7f81e9307cde 245: java.lang.invoke.LambdaForm$MH.0x00007f8160258400::invoke(Object, Object, Object) -> int
fifo write: @1699477100740982431 0x7f81e9306ef5 1042: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::find(Object) -> int
fifo write: @1699477100741034321 0x7f81e1414fb7 848: com.mojang.datafixers.schemas.Schema::registerSimple(java.util.Map, String) -> void
fifo write: @1699477100741073142 0x7f81e15b7414 144: ayx$$Lambda$866.0x00007f81603dd518::typeName() -> String
fifo write: @1699477100741126402 0x7f81e1414097 2043: bcz$$Lambda$914.0x00007f8160409350::get() -> Object
fifo write: @1699477100741192563 0x7f81e1413177 1952: bcz::b() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100741320425 0x7f81e1510667 6338: com.mojang.datafixers.types.templates.List::equals(Object) -> boolean
fifo write: @1699477100741368416 0x7f81e14129b7 664: com.mojang.datafixers.schemas.Schema$$Lambda$883.0x00007f8160402ec8::get() -> Object
fifo write: @1699477100741425856 0x7f81e9306a3c 139: java.lang.invoke.LambdaForm$MH.0x00007f8160001000::invoke(Object, Object) -> Object
fifo write: @1699477100741481307 0x7f81e9306739 46: java.lang.invoke.LambdaForm$MH.0x00007f8160253400::invoke(Object, Object, Object) -> int
fifo write: @1699477100741537208 0x7f81e1412494 230: com.mojang.datafixers.schemas.Schema$$Lambda$882.0x00007f81604016b8::<init>(java.util.function.Function, String) -> void
fifo write: @1699477100741643939 0x7f81e14115f7 1898: com.mojang.datafixers.schemas.Schema::register(java.util.Map, String, java.util.function.Function) -> void
fifo write: @1699477100741705560 0x7f81e150ff74 159: Long::numberOfLeadingZeros(long) -> int
fifo write: @1699477100741772151 0x7f81e150f9ea 447: com.mojang.datafixers.types.templates.Sum::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100741836532 0x7f81e150f494 340: com.mojang.datafixers.types.templates.Sum$1::<init>(com.mojang.datafixers.types.templates.Sum, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477100741950533 0x7f81e150eeea 447: com.mojang.datafixers.types.templates.Product::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100742007734 0x7f81e150dff7 1447: com.mojang.datafixers.types.templates.Sum$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100742073685 0x7f81e1b64814 340: com.mojang.datafixers.types.templates.Product$1::<init>(com.mojang.datafixers.types.templates.Product, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477100742213907 0x7f81e1b6221f 6168: bag::a(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100742274067 0x7f81e1b61b14 324: com.mojang.datafixers.types.templates.Sum$SumType::<init>(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477100742356348 0x7f81e1b614ce 431: com.mojang.datafixers.DSL::or(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.Type
fifo write: @1699477100742419179 0x7f81e1b607f7 1447: com.mojang.datafixers.types.templates.Product$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100742483380 0x7f81e1b60294 340: com.mojang.datafixers.types.templates.Tag$1::<init>(com.mojang.datafixers.types.templates.Tag, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477100742551031 0x7f81e14a7dea 447: com.mojang.datafixers.types.templates.Tag::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100742617772 0x7f81e14a774e 431: com.mojang.datafixers.DSL::field(String, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.templates.Tag$TagType
fifo write: @1699477100742672442 0x7f81e1b5fd14 324: com.mojang.datafixers.types.templates.Tag$TagType::<init>(String, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477100742728423 0x7f81e14a6cd7 1040: com.mojang.datafixers.types.templates.Tag$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100742778834 0x7f81e9305a54 283: com.mojang.datafixers.types.templates.Sum::hashCode() -> int
fifo write: @1699477100742845535 0x7f81e14a66f4 507: com.mojang.datafixers.schemas.Schema::lambda$register$5(java.util.function.Function, String) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100742890935 0x7f81e14a6094 612: com.mojang.datafixers.schemas.Schema$$Lambda$882.0x00007f81604016b8::get() -> Object
fifo write: @1699477100743045277 0x7f81e14a3767 6338: com.mojang.datafixers.types.templates.Named::equals(Object) -> boolean
fifo write: @1699477100743214719 0x7f81e14a2f14 413: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::compare(int, int) -> int
fifo write: @1699477100743812837 0x7f81e9304d54 283: com.mojang.datafixers.types.templates.Product::hashCode() -> int
fifo write: @1699477100744617278 0x7f81e14a2894 185: com.mojang.datafixers.types.families.RecursiveTypeFamily$$Lambda$940.0x00007f8160415c90::<init>(com.mojang.datafixers.types.families.RecursiveTypeFamily) -> void
fifo write: @1699477100744729139 0x7f81e148e214 428: it.unimi.dsi.fastutil.ints.Int2ObjectMaps$SynchronizedMap::computeIfAbsent(int, it.unimi.dsi.fastutil.ints.Int2ObjectFunction) -> Object
fifo write: @1699477100744886871 0x7f81e148d702 1141: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::computeIfAbsent(int, it.unimi.dsi.fastutil.ints.Int2ObjectFunction) -> Object
fifo write: @1699477100744949152 0x7f81e148d094 401: it.unimi.dsi.fastutil.HashCommon::maxFill(int, float) -> int
fifo write: @1699477100745011583 0x7f81e93049b9 78: java.lang.invoke.DirectMethodHandle$Holder::getInt(Object, Object) -> int
fifo write: @1699477100745101194 0x7f81e148c297 1830: com.mojang.datafixers.types.families.RecursiveTypeFamily::apply(int) -> com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType
fifo write: @1699477100745164994 0x7f81e148b397 1927: com.mojang.datafixers.types.families.RecursiveTypeFamily::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100745230095 0x7f81e1489a57 3606: com.mojang.datafixers.types.templates.Check::hashCode() -> int
fifo write: @1699477100745374927 0x7f81e1488979 1751: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::hashCode() -> int
fifo write: @1699477100746383420 0x7f81e9304350 43: com.mojang.datafixers.types.templates.Const$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100746972077 0x7f81e1488494 240: com.mojang.datafixers.schemas.Schema::registerEntities(com.mojang.datafixers.schemas.Schema) -> java.util.Map
fifo write: @1699477100747331422 0x7f81e1488014 240: com.mojang.datafixers.schemas.Schema::registerTypes(com.mojang.datafixers.schemas.Schema, java.util.Map, java.util.Map) -> void
fifo write: @1699477100747370913 0x7f81e1487c14 144: ayx$$Lambda$864.0x00007f81603dd0b8::typeName() -> String
fifo write: @1699477100747457224 0x7f81e93030f3 1761: jdk.internal.org.objectweb.asm.ClassReader::readUtf(int, int, char[]) -> String
fifo write: @1699477100747561335 0x7f81e14875f4 90: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477100747650976 0x7f81e9302b66 229: com.google.common.collect.RegularImmutableMap::makeImmutable(java.util.Map$Entry, Object, Object) -> com.google.common.collect.ImmutableMapEntry
fifo write: @1699477100747904659 0x7f81e14d0214 340: com.mojang.datafixers.types.templates.List$1::<init>(com.mojang.datafixers.types.templates.List, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477100747960460 0x7f81e14cfd14 279: com.mojang.datafixers.types.templates.List$ListType::<init>(com.mojang.datafixers.types.Type) -> void
fifo write: @1699477100748028121 0x7f81e14cf747 386: com.mojang.datafixers.DSL::list(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.templates.List$ListType
fifo write: @1699477100748088132 0x7f81e14cedd7 967: com.mojang.datafixers.types.templates.List$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100748159953 0x7f81e14ce7ea 447: com.mojang.datafixers.types.templates.List::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100748572008 0x7f81e9301f52 642: com.mojang.datafixers.types.templates.Tag::hashCode() -> int
fifo write: @1699477100748895682 0x7f81e14cd1ba 2927: java.lang.invoke.MemberName::asSpecial() -> java.lang.invoke.MemberName
fifo write: @1699477100750907258 0x7f81e14cc657 836: java.lang.invoke.DirectMethodHandle::makeAllocator(java.lang.invoke.MemberName) -> java.lang.invoke.DirectMethodHandle
fifo write: @1699477100751133321 0x7f81e9301c4c 2: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::size() -> int
fifo write: @1699477100751207942 0x7f81e14cc194 240: com.mojang.datafixers.schemas.Schema::registerBlockEntities(com.mojang.datafixers.schemas.Schema) -> java.util.Map
fifo write: @1699477100751245712 0x7f81e14cbd14 234: java.util.concurrent.ConcurrentHashMap::<init>() -> void
fifo write: @1699477100751341844 0x7f81e14cb894 114: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapEntry::getKey() -> Object
fifo write: @1699477100751560026 0x7f81e9301450 123: com.mojang.datafixers.types.templates.List::hashCode() -> int
fifo write: @1699477100752345467 0x7f81e938ef64 1268: java.util.stream.ReduceOps$ReduceOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477100752777072 0x7f81e9390034 1539: java.lang.invoke.MemberName::getMethodOrFieldType() -> java.lang.invoke.MethodType
fifo write: @1699477100753395640 0x7f81e14cb374 326: it.unimi.dsi.fastutil.HashCommon::nextPowerOfTwo(long) -> long
fifo write: @1699477100753458091 0x7f81e14caf14 243: java.util.Collections$UnmodifiableCollection::contains(Object) -> boolean
fifo write: @1699477100753774355 0x7f81e9300dd0 91: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry::getKey() -> Object
fifo write: @1699477100753866686 0x7f81e9300950 91: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry::getValue() -> Object
fifo write: @1699477100753967317 0x7f81e14caa94 185: bcx$$Lambda$989.0x00007f816042a1b8::<init>(com.mojang.datafixers.schemas.Schema) -> void
fifo write: @1699477100754026188 0x7f81e14ca6f4 23: bcx::c(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100754066279 0x7f81e14ca314 167: bcx$$Lambda$989.0x00007f816042a1b8::get() -> Object
fifo write: @1699477100754169600 0x7f81e14c95d7 1768: bcx::a(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100754555225 0x7f81e93910cc 2: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::size() -> int
fifo write: @1699477100754606786 0x7f81e14585fe 1366: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::containsKey(Object) -> boolean
fifo write: @1699477100756498850 0x7f81e8b95e00 456: I2C/C2I adapters(0xbaaaabe)
fifo write: @1699477100756599991 0x7f81e14c8e94 340: com.mojang.datafixers.types.templates.RecursivePoint$1::<init>(com.mojang.datafixers.types.templates.RecursivePoint, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477100756653882 0x7f81e14581f4 6: com.mojang.datafixers.types.templates.RecursivePoint$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100756724603 0x7f81e1457ab7 729: com.mojang.datafixers.types.templates.RecursivePoint::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100756762304 0x7f81e93913da 113: com.mojang.datafixers.types.templates.Sum::size() -> int
fifo write: @1699477100756815044 0x7f81e1457614 117: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::right() -> it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry
fifo write: @1699477100757113198 0x7f81e1457214 144: ayx$$Lambda$860.0x00007f81603dc7f8::typeName() -> String
fifo write: @1699477100757865608 0x7f81e1456e74 2: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry::balance() -> int
fifo write: @1699477100758334484 0x7f81e1456af4 2: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::balance() -> int
fifo write: @1699477100758730479 0x7f81e9391b7d 1274: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getOrDefault(Object, int) -> int
fifo write: @1699477100758842280 0x7f81e1456360 889: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, long) -> Object
fifo write: @1699477100760072326 0x7f81e1455e94 144: ayx$$Lambda$869.0x00007f81603ddba8::typeName() -> String
fifo write: @1699477100760269529 0x7f81e9392a56 193: com.mojang.datafixers.types.templates.Const::equals(Object) -> boolean
fifo write: @1699477100766037473 0x7f81e9393644 1859: com.mojang.datafixers.DSL$TypeReference::in(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100767331410 0x7f81e9394d1d 2470: com.google.common.base.Equivalence$Equals::doHash(Object) -> int
fifo write: @1699477100767880017 0x7f81e1455b14 31: StackStreamFactory$StackFrameTraverser$StackFrameBuffer::nextStackFrame() -> Object
fifo write: @1699477100767989758 0x7f81e14552b9 839: StackStreamFactory$StackFrameTraverser::nextStackFrame() -> StackWalker$StackFrame
fifo write: @1699477100768052519 0x7f81e1454d14 334: StackFrameInfo::ensureRetainClassRefEnabled() -> void
fifo write: @1699477100768126110 0x7f81e1453f1c 1553: StackStreamFactory$StackFrameTraverser::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477100768179041 0x7f81e1453534 1047: StackFrameInfo::getDeclaringClass() -> Class
fifo write: @1699477100768255582 0x7f81e14528d4 1619: org.apache.logging.log4j.util.StackLocator$$Lambda$35.0x00007f8160082e20::apply(Object) -> Object
fifo write: @1699477100768341843 0x7f81e1427a5c 1971: StackStreamFactory$StackFrameTraverser$StackFrameBuffer::nextStackFrame() -> StackFrameInfo
fifo write: @1699477100771462053 0x7f81e9396f38 159: Character::isWhitespace(char) -> boolean
fifo write: @1699477100771954220 0x7f81e1452214 406: com.mojang.brigadier.StringReader::canRead(int) -> boolean
fifo write: @1699477100772013160 0x7f81e1451b14 503: com.mojang.brigadier.StringReader::canRead() -> boolean
fifo write: @1699477100772117602 0x7f81e14275f4 7: com.mojang.brigadier.StringReader::skip() -> void
fifo write: @1699477100772275414 0x7f81e1426977 1291: com.mojang.brigadier.StringReader::peek() -> char
fifo write: @1699477100772329995 0x7f81e1425c77 1299: com.mojang.brigadier.StringReader::read() -> char
fifo write: @1699477100772367695 0x7f81e14254f4 600: com.mojang.brigadier.StringReader::isAllowedInUnquotedString(char) -> boolean
fifo write: @1699477100772421476 0x7f81e1425094 185: java.util.Optional::<init>(Object) -> void
fifo write: @1699477100772480406 0x7f81e1424963 705: java.util.Optional::of(Object) -> java.util.Optional
fifo write: @1699477100772515497 0x7f81e93973cc 2: com.mojang.brigadier.StringReader::getCursor() -> int
fifo write: @1699477100772722980 0x7f81e14236df 2263: com.mojang.brigadier.StringReader::skipWhitespace() -> void
fifo write: @1699477100772810341 0x7f81e14231d4 144: com.mojang.brigadier.StringReader::isQuotedStringStart(char) -> boolean
fifo write: @1699477100773314517 0x7f81e93977d8 5727: java.lang.invoke.LambdaForm::prepare() -> void
fifo write: @1699477100773383368 0x7f81e1422066 2112: com.mojang.brigadier.StringReader::expect(char) -> void
fifo write: @1699477100773464479 0x7f81e1420b66 2452: rr::a(char) -> void
fifo write: @1699477100773700952 0x7f81e18cef14 515: qw::a(String, rq) -> rq
fifo write: @1699477100773770853 0x7f81e1420694 93: ro::hashCode() -> int
fifo write: @1699477100773904205 0x7f81e939af50 83: com.mojang.brigadier.StringReader::canRead() -> boolean
fifo write: @1699477100773970856 0x7f81e18cddbf 1982: com.mojang.brigadier.StringReader::readUnquotedString() -> String
fifo write: @1699477100774078327 0x7f81e18cd814 230: com.mojang.serialization.DataResult::<init>(com.mojang.datafixers.util.Either, com.mojang.serialization.Lifecycle) -> void
fifo write: @1699477100774132758 0x7f81e939b350 139: com.mojang.brigadier.StringReader::peek() -> char
fifo write: @1699477100774159948 0x7f81e18cd394 240: qw::hashCode() -> int
fifo write: @1699477100774222979 0x7f81e18cc157 2148: com.mojang.brigadier.StringReader::readString() -> String
fifo write: @1699477100774303740 0x7f81e18ca73f 3174: rr::b() -> String
fifo write: @1699477100774340600 0x7f81e939b7cc 6: com.mojang.serialization.DataResult::get() -> com.mojang.datafixers.util.Either
fifo write: @1699477100774394371 0x7f81e18ca194 185: com.mojang.serialization.DynamicLike::<init>(com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477100774433702 0x7f81e18c9bb9 329: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::put(Object, int) -> int
fifo write: @1699477100774474182 0x7f81e18c94b4 610: ro::<init>(String) -> void
fifo write: @1699477100774600744 0x7f81e18c733f 4376: rr::d() -> rq
fifo write: @1699477100774629334 0x7f81e18c69b7 764: qw::<init>() -> void
fifo write: @1699477100774680295 0x7f81e18c5f37 1118: ro::a(String) -> ro
fifo write: @1699477100774723875 0x7f81e18c5a94 185: qw::<init>(java.util.Map) -> void
fifo write: @1699477100774790986 0x7f81e18c46df 2390: com.mojang.brigadier.StringReader::readQuotedString() -> String
fifo write: @1699477100774840087 0x7f81e18c3bb4 1277: qw::equals(Object) -> boolean
fifo write: @1699477100775099360 0x7f81e153bd3f 6442: rr::i() -> boolean
fifo write: @1699477100775145061 0x7f81e18c35c3 386: com.mojang.datafixers.util.Either::left(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477100775175981 0x7f81e939bab8 59: CharacterData::of(int) -> CharacterData
fifo write: @1699477100775245782 0x7f81e153b270 905: com.mojang.serialization.DataResult::success(Object, com.mojang.serialization.Lifecycle) -> com.mojang.serialization.DataResult
fifo write: @1699477100775294763 0x7f81e153a7ba 1187: com.mojang.serialization.DataResult::success(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477100775321253 0x7f81e153a394 137: com.mojang.datafixers.util.Either::<init>() -> void
fifo write: @1699477100775354204 0x7f81e1539e94 279: com.mojang.datafixers.util.Either$Left::<init>(Object) -> void
fifo write: @1699477100775382034 0x7f81e1539894 462: com.mojang.serialization.Dynamic::hashCode() -> int
fifo write: @1699477100775469205 0x7f81e1538fb4 910: com.mojang.serialization.Dynamic::<init>(com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477100775527576 0x7f81e1537793 2876: com.mojang.brigadier.StringReader::readStringUntil(char) -> String
fifo write: @1699477100775910871 0x7f81e15367f4 1792: com.mojang.serialization.Dynamic::equals(Object) -> boolean
fifo write: @1699477100776066403 0x7f81e1533dff 5384: rr::c() -> rq
fifo write: @1699477100776151594 0x7f81e1533714 230: com.mojang.serialization.DataResult$$Lambda$1040.0x00007f8160433f38::<init>(com.mojang.serialization.DataResult, java.util.function.Function) -> void
fifo write: @1699477100776233555 0x7f81e1533214 230: com.mojang.serialization.DataResult$$Lambda$1041.0x00007f81604343a8::<init>(com.mojang.serialization.DataResult, java.util.function.Function) -> void
fifo write: @1699477100776318906 0x7f81e1532d97 237: com.mojang.datafixers.util.Either$Left::map(java.util.function.Function, java.util.function.Function) -> Object
fifo write: @1699477100776380607 0x7f81e15322da 1193: com.mojang.serialization.DataResult::lambda$flatMap$11(java.util.function.Function, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477100776436868 0x7f81e1531cca 337: com.mojang.serialization.DataResult::create(com.mojang.datafixers.util.Either, com.mojang.serialization.Lifecycle) -> com.mojang.serialization.DataResult
fifo write: @1699477100776485828 0x7f81e1c07557 1325: com.mojang.serialization.DataResult$$Lambda$1040.0x00007f8160433f38::apply(Object) -> Object
fifo write: @1699477100776517129 0x7f81e939bdb1 166: com.mojang.brigadier.StringReader::isAllowedInUnquotedString(char) -> boolean
fifo write: @1699477100776564059 0x7f81e939c250 151: com.mojang.brigadier.StringReader::read() -> char
fifo write: @1699477100776598240 0x7f81e1531614 185: com.mojang.brigadier.StringReader::<init>(String) -> void
fifo write: @1699477100776625440 0x7f81e939c74c 6: ro::r_() -> String
fifo write: @1699477100776692031 0x7f81e1c08287 3271: com.mojang.serialization.DataResult::flatMap(java.util.function.Function) -> com.mojang.serialization.DataResult
fifo write: @1699477100776738581 0x7f81e1c09894 1665: aue::b(String) -> com.mojang.serialization.Dynamic
fifo write: @1699477100776821342 0x7f81e939ca76 809: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::find(Object) -> int
fifo write: @1699477100777233438 0x7f81e1c0ab7f 12182: rr::f() -> qw
fifo write: @1699477100777301629 0x7f81e1c103c6 3280: rr::a(String) -> qw
fifo write: @1699477100778034168 0x7f81e1c11d14 372: ri::getMap(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477100778089139 0x7f81e1c12214 230: com.mojang.serialization.Dynamic$$Lambda$1039.0x00007f8160433cf0::<init>(com.mojang.serialization.Dynamic, String) -> void
fifo write: @1699477100778140620 0x7f81e1c12714 340: ri$1::<init>(ri, qw) -> void
fifo write: @1699477100778208260 0x7f81e1c12c14 393: com.mojang.serialization.Dynamic$$Lambda$1039.0x00007f8160433cf0::apply(Object) -> Object
fifo write: @1699477100778281271 0x7f81e1c131b4 746: ri$1::get(String) -> Object
fifo write: @1699477100778331332 0x7f81e1c13934 625: ri$1::a(String) -> rq
fifo write: @1699477100778403823 0x7f81e1c140da 2868: ri::e(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477100778451694 0x7f81e1c15394 515: qw::c(String) -> rq
fifo write: @1699477100778519154 0x7f81e1c15994 324: com.mojang.serialization.OptionalDynamic::<init>(com.mojang.serialization.DynamicOps, com.mojang.serialization.DataResult) -> void
fifo write: @1699477100778739617 0x7f81e1c15f7c 1714: com.mojang.serialization.DynamicLike::asString(String) -> String
fifo write: @1699477100778863359 0x7f81e1c16efa 5317: com.mojang.serialization.Dynamic::get(String) -> com.mojang.serialization.OptionalDynamic
fifo write: @1699477100778960650 0x7f81e1c192b7 3899: com.mojang.serialization.Dynamic::lambda$get$11(String, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477100779011761 0x7f81e1c1ad34 1133: ro::equals(Object) -> boolean
fifo write: @1699477100779146143 0x7f81e1c1b890 4737: aue::a(int, String, String[]) -> void
fifo write: @1699477100779226234 0x7f81e1c1da17 3624: com.mojang.serialization.OptionalDynamic::asString() -> com.mojang.serialization.DataResult
fifo write: @1699477100779883192 0x7f81e1c1f234 934: com.mojang.serialization.OptionalDynamic$$Lambda$1042.0x00007f81604345f0::apply(Object) -> Object
fifo write: @1699477100779968863 0x7f81e1c1fab9 294: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::putIfAbsent(Object, int) -> int
fifo write: @1699477100780088435 0x7f81e1c20137 2769: ri::getStringValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477100780180906 0x7f81e1c214d7 2964: com.mojang.serialization.Dynamic::asString() -> com.mojang.serialization.DataResult
fifo write: @1699477100780248907 0x7f81e1c229b7 2423: ri::b(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477100781262370 0x7f81e939d54f 212: com.mojang.brigadier.StringReader::expect(char) -> void
fifo write: @1699477100783806313 0x7f81e939dbd8 2743: java.util.AbstractMap::equals(Object) -> boolean
fifo write: @1699477100785520675 0x7f81e939fd50 467: ro::hashCode() -> int
fifo write: @1699477100786274735 0x7f81e93a0553 496: rr::i() -> boolean
fifo write: @1699477100788198979 0x7f81e93a0fdb 124: com.mojang.serialization.Lifecycle::add(com.mojang.serialization.Lifecycle) -> com.mojang.serialization.Lifecycle
fifo write: @1699477100788346261 0x7f81e93a142e 2601: com.mojang.brigadier.StringReader::readStringUntil(char) -> String
fifo write: @1699477100789599457 0x7f81e93a2ef4 2208: com.mojang.brigadier.StringReader::readUnquotedString() -> String
fifo write: @1699477100789971632 0x7f81e93a46a6 6221: java.lang.invoke.MethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> void
fifo write: @1699477100790720242 0x7f81e93a7fd1 174: qw::equals(Object) -> boolean
fifo write: @1699477100792205891 0x7f81e93a8512 2402: rr::b() -> String
fifo write: @1699477100793371166 0x7f81e93a9ef5 2315: com.mojang.brigadier.StringReader::readString() -> String
fifo write: @1699477100797117254 0x7f81e93ab793 2796: com.mojang.brigadier.StringReader::readQuotedString() -> String
fifo write: @1699477100798098347 0x7f81e93ad570 1755: qw::hashCode() -> int
fifo write: @1699477100798634364 0x7f81e93aebda 337: com.mojang.serialization.Dynamic::equals(Object) -> boolean
fifo write: @1699477100799745298 0x7f81e93af3b3 3219: rr::c() -> rq
fifo write: @1699477100801579471 0x7f81e1c23a74 600: com.mojang.brigadier.StringReader::isAllowedInUnquotedString(char) -> boolean
fifo write: @1699477100801986907 0x7f81e1c2423f 1934: com.mojang.brigadier.StringReader::readUnquotedString() -> String
fifo write: @1699477100802056667 0x7f81e1c25457 2092: com.mojang.brigadier.StringReader::readString() -> String
fifo write: @1699477100802352411 0x7f81e1c2671f 3126: rr::b() -> String
fifo write: @1699477100805054216 0x7f81e93b16b1 150: com.mojang.brigadier.StringReader::isAllowedInUnquotedString(char) -> boolean
fifo write: @1699477100805523972 0x7f81e93b1bf0 2278: com.mojang.serialization.DataResult$$Lambda$1040.0x00007f8160433f38::apply(Object) -> Object
fifo write: @1699477100805742415 0x7f81e93b36f3 2315: com.mojang.serialization.DataResult::flatMap(java.util.function.Function) -> com.mojang.serialization.DataResult
fifo write: @1699477100807005251 0x7f81e93b5194 1976: com.mojang.serialization.Dynamic::hashCode() -> int
fifo write: @1699477100809853428 0x7f81e93b6a7a 539: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::insert(int, Object, int) -> void
fifo write: @1699477100814477558 0x7f81e93b77cc 31471: java.lang.invoke.LambdaForm$Name::replaceNames(java.lang.invoke.LambdaForm$Name[], java.lang.invoke.LambdaForm$Name[], int, int) -> java.lang.invoke.LambdaForm$Name
fifo write: @1699477100814606409 0x7f81e93c88f4 2124: com.mojang.brigadier.StringReader::readUnquotedString() -> String
fifo write: @1699477100815777575 0x7f81e93c9f12 2278: rr::b() -> String
fifo write: @1699477100815862796 0x7f81e93cb875 2255: com.mojang.brigadier.StringReader::readString() -> String
fifo write: @1699477100824868262 0x7f81e93cd09b 1346: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::put(Object, int) -> int
fifo write: @1699477100827028960 0x7f81e1c28094 630: java.lang.invoke.LambdaFormEditor$TransformKey::packedBytes(byte[]) -> long
fifo write: @1699477100827651178 0x7f81e1c288dd 1553: java.lang.invoke.LambdaFormEditor$TransformKey::of(byte, int, int[]) -> java.lang.invoke.LambdaFormEditor$TransformKey
fifo write: @1699477100828300206 0x7f81e1c29614 367: jdk.internal.org.objectweb.asm.AnnotationWriter::computeAnnotationsSize(String) -> int
fifo write: @1699477100828348197 0x7f81e8b95a00 456: I2C/C2I adapters(0xbbebba)
fifo write: @1699477100828873074 0x7f81e1c29d7c 3102: java.lang.invoke.InvokerBytecodeGenerator::classData(Object) -> String
fifo write: @1699477100829245818 0x7f81e1c2b37f 679: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long, int) -> long
fifo write: @1699477100829319809 0x7f81e1c2bb60 881: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object) -> Object
fifo write: @1699477100829398980 0x7f81e1c2c396 632: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long, Object) -> long
fifo write: @1699477100829485292 0x7f81e1c2ca96 680: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long, Object, int, Object) -> long
fifo write: @1699477100829562493 0x7f81e1c2d218 787: java.lang.invoke.LambdaForm$MH.0x00007f816011a400::invoke(Object, long, Object, int) -> long
fifo write: @1699477100829641554 0x7f81e1c2da60 870: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long, Object, Object, Object) -> long
fifo write: @1699477100829689664 0x7f81e1c2e2e2 833: java.lang.invoke.LambdaForm$MH.0x00007f81600d8400::invoke(Object, long, Object, Object) -> long
fifo write: @1699477100829717185 0x7f81e1c2ea77 156: StringConcatHelper::prepend(long, byte[], int) -> long
fifo write: @1699477100829746405 0x7f81e1c2ef94 442: StringConcatHelper::mix(long, int) -> long
fifo write: @1699477100829779905 0x7f81e1c2f594 423: StringConcatHelper::prepend(long, byte[], int, String) -> long
fifo write: @1699477100829822026 0x7f81e1c2fc02 609: java.lang.invoke.LambdaForm$MH.0x00007f816011b000::invoke(Object, int) -> long
fifo write: @1699477100829859066 0x7f81e1c30274 143: StringConcatHelper::prepend(long, byte[], String, String) -> long
fifo write: @1699477100829899977 0x7f81e1c3075c 642: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long) -> Object
fifo write: @1699477100829958688 0x7f81e1c30ee0 707: java.lang.invoke.DelegatingMethodHandle$Holder::reinvoke_L(Object, long, Object) -> long
fifo write: @1699477100829996098 0x7f81e93ce119 111: Integer::stringSize(int) -> int
fifo write: @1699477100830030959 0x7f81e93ce4c0 55: StringConcatHelper::stringOf(Object) -> String
fifo write: @1699477100830073869 0x7f81e93ce830 107: StringConcatHelper::mix(long, String) -> long
fifo write: @1699477100830229791 0x7f81e1c31994 873: java.lang.invoke.MethodHandles::filterArgumentChecks(java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle) -> void
fifo write: @1699477100830723208 0x7f81e93cec50 35: java.util.Arrays$ArrayList::size() -> int
fifo write: @1699477100830873450 0x7f81e1c322f4 224: java.lang.invoke.Invokers::maybeCustomize(java.lang.invoke.MethodHandle) -> void
fifo write: @1699477100831187884 0x7f81e1c32860 977: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477100831360746 0x7f81e1c33186 3447: java.lang.invoke.MethodHandles::argumentsWithCombiner(boolean, java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle, int[]) -> java.lang.invoke.MethodHandle
fifo write: @1699477100831491167 0x7f81e1c34d46 2605: java.lang.invoke.MethodHandles::insertArguments(java.lang.invoke.MethodHandle, int, Object[]) -> java.lang.invoke.MethodHandle
fifo write: @1699477100831763841 0x7f81e1c3648f 6015: java.lang.invoke.MethodHandles::argumentsWithCombinerChecks(int, boolean, java.lang.invoke.MethodType, java.lang.invoke.MethodType, int[]) -> Class
fifo write: @1699477100832034274 0x7f81e93cef4c 6: java.lang.invoke.MethodHandleImpl$AsVarargsCollector::getTarget() -> java.lang.invoke.MethodHandle
fifo write: @1699477100832290508 0x7f81e93cf310 3240: com.mojang.serialization.Dynamic::get(String) -> com.mojang.serialization.OptionalDynamic
fifo write: @1699477100832450000 0x7f81e1c392f9 1036: AbstractStringBuilder::setLength(int) -> void
fifo write: @1699477100832494520 0x7f81e1c39e02 836: java.lang.invoke.LambdaForm$MH.0x00007f81600d9400::invoke(Object, long) -> Object
fifo write: @1699477100832669273 0x7f81e1c3a86f 8708: java.lang.invoke.StringConcatFactory::parseRecipe(java.lang.invoke.MethodType, String, Object[]) -> java.util.List
fifo write: @1699477100832713733 0x7f81e93d1539 1174: Integer::getChars(int, int, byte[]) -> int
fifo write: @1699477100832819535 0x7f81e1c3e8b4 1089: java.lang.invoke.MethodHandles::insertArgumentsChecks(java.lang.invoke.MethodHandle, int, int) -> Class[]
fifo write: @1699477100832888986 0x7f81e1c3f361 1218: StringConcatHelper::newArrayWithSuffix(String, long) -> byte[]
fifo write: @1699477100833094398 0x7f81e1c3fe94 185: java.util.Arrays$ArrayItr::<init>(Object[]) -> void
fifo write: @1699477100833164109 0x7f81e1c403a1 1084: java.lang.invoke.LambdaFormEditor::addArgumentForm(int, java.lang.invoke.LambdaForm$BasicType) -> java.lang.invoke.LambdaForm
fifo write: @1699477100833206870 0x7f81e1c40fe7 299: java.util.Arrays$ArrayList::iterator() -> java.util.Iterator
fifo write: @1699477100833264820 0x7f81e1c4159c 1714: java.lang.invoke.MethodType::listToArray(java.util.List) -> Class[]
fifo write: @1699477100833326761 0x7f81e1c42300 43: java.lang.invoke.MethodHandles::foldArgumentsWithCombiner(java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle, int[]) -> java.lang.invoke.MethodHandle
fifo write: @1699477100833370232 0x7f81e1c426da 962: System$2::stringConcatMix(long, String) -> long
fifo write: @1699477100833496283 0x7f81e1c430d9 402: java.lang.invoke.LambdaFormEditor::foldArgumentsForm(int, boolean, java.lang.invoke.MethodType, int[]) -> java.lang.invoke.LambdaForm
fifo write: @1699477100833723316 0x7f81e1c437e9 131: java.lang.invoke.BoundMethodHandle$Species_LLLLL::make(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, Object, Object, Object, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477100833779947 0x7f81e1c43c57 1369: java.lang.invoke.MethodHandles::copyTypes(Object[]) -> java.util.List
fifo write: @1699477100833854078 0x7f81e1c44860 1009: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477100833928499 0x7f81e1c450b4 484: java.lang.invoke.BoundMethodHandle$Species_LLLLL::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, Object, Object, Object, Object) -> void
fifo write: @1699477100834188022 0x7f81e1c45899 690: java.lang.invoke.LambdaForm$MH.0x00007f81600da400::invoke(Object, Object) -> long
fifo write: @1699477100834537447 0x7f81e1c46076 2429: java.lang.invoke.LambdaForm$MH.0x00007f8160119c00::invoke(Object, Object) -> Object
fifo write: @1699477100834727989 0x7f81e93d2339 742: java.util.Arrays::equals(byte[], byte[]) -> boolean
fifo write: @1699477100835310117 0x7f81e1c4713c 417: java.lang.invoke.Invokers$Holder::linkToTargetMethod(int, Object) -> Object
fifo write: @1699477100836599333 0x7f81e1c47713 411: java.lang.invoke.BoundMethodHandle$Species_LLLL::make(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, Object, Object, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477100836695285 0x7f81e1c47e34 431: java.lang.invoke.BoundMethodHandle$Species_LLLL::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, Object, Object, Object) -> void
fifo write: @1699477100836851107 0x7f81e1c48564 354: java.lang.invoke.BoundMethodHandle$Species_LLL::make(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, Object, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477100837004919 0x7f81e1c48b94 378: java.lang.invoke.BoundMethodHandle$Species_LLL::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, Object, Object) -> void
fifo write: @1699477100837058529 0x7f81e1c49259 1155: java.util.Arrays$ArrayList::toArray(Object[]) -> Object[]
fifo write: @1699477100837129040 0x7f81e1c49c80 43: java.lang.invoke.MethodHandles::filterArgumentsWithCombiner(java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle, int[]) -> java.lang.invoke.MethodHandle
fifo write: @1699477100837186011 0x7f81e1c4a054 850: java.lang.invoke.MethodType::insertParameterTypes(int, java.util.List) -> java.lang.invoke.MethodType
fifo write: @1699477100837407134 0x7f81e1c4a91c 1996: java.lang.invoke.LambdaForm$MH.0x00007f816011b400::invoke(Object, int) -> Object
fifo write: @1699477100837835819 0x7f81e93d2d93 44: java.lang.invoke.MethodType::checkSlotCount(int) -> void
fifo write: @1699477100837913700 0x7f81e1c4b796 61: java.lang.invoke.LambdaFormBuffer::insertExpression(int, java.lang.invoke.LambdaForm$Name) -> java.lang.invoke.LambdaFormBuffer
fifo write: @1699477100838246245 0x7f81e1c4bb97 256: java.lang.invoke.LambdaForm$Name::<init>(java.lang.invoke.MethodType, Object[]) -> void
fifo write: @1699477100838365926 0x7f81e93d30d3 116: jdk.internal.org.objectweb.asm.Frame::getLocal(int) -> int
fifo write: @1699477100838878013 0x7f81e1c4c0b9 306: java.lang.invoke.LambdaFormEditor::filterArgumentsForm(int, java.lang.invoke.MethodType, int[]) -> java.lang.invoke.LambdaForm
fifo write: @1699477100839142446 0x7f81e1c4cb43 573: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, int, Object) -> Object
fifo write: @1699477100839270898 0x7f81e1c4d1bf 422: java.lang.invoke.Invokers$Holder::linkToTargetMethod(int, int, Object) -> Object
fifo write: @1699477100839423150 0x7f81e93d350b 62: java.util.ArrayList::iterator() -> java.util.Iterator
fifo write: @1699477100839478611 0x7f81e1c4d77f 596: java.lang.invoke.DelegatingMethodHandle$Holder::reinvoke_L(Object, long, int) -> long
fifo write: @1699477100839759054 0x7f81e1c4dedc 2557: java.lang.invoke.LambdaForm$MH.0x00007f8160439400::invoke(Object, int, int) -> Object
fifo write: @1699477100841827101 0x7f81e93d3a95 10485: rr::d() -> rq
fifo write: @1699477100841880532 0x7f81e93dacf4 282: com.mojang.datafixers.types.templates.Product::size() -> int
fifo write: @1699477100841931432 0x7f81e93db360 45: com.mojang.datafixers.DSL::remainder() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100842395498 0x7f81e93db6d2 273: jdk.internal.org.objectweb.asm.ByteVector::putByteArray(byte[], int, int) -> jdk.internal.org.objectweb.asm.ByteVector
fifo write: @1699477100843593314 0x7f81e93dbbcc 2: com.mojang.datafixers.schemas.Schema::getVersionKey() -> int
fifo write: @1699477100844034209 0x7f81e1c4f114 234: it.unimi.dsi.fastutil.objects.AbstractObjectCollection::<init>() -> void
fifo write: @1699477100844300773 0x7f81e1c4f5b7 727: java.util.HashMap::keySet() -> java.util.Set
fifo write: @1699477100844604277 0x7f81e93dbee3 46: com.mojang.datafixers.DSL::constType(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100845122523 0x7f81e1c4fd14 324: axj$$Lambda$1069.0x00007f816043fa68::apply(Object) -> Object
fifo write: @1699477100845166734 0x7f81e1c50234 811: java.util.stream.Collectors$$Lambda$22.0x800000035::accept(Object, Object) -> void
fifo write: @1699477100845307676 0x7f81e1c50a66 655: axj::a(String) -> String
fifo write: @1699477100848350854 0x7f81e8b96880 480: I2C/C2I adapters(0xbbaaaba)
fifo write: @1699477100849146335 0x7f81e93dc715 10513: rr::f() -> qw
fifo write: @1699477100849247206 0x7f81e93e38fc 2719: jdk.internal.org.objectweb.asm.Frame::getAbstractTypeFromDescriptor(jdk.internal.org.objectweb.asm.SymbolTable, String, int) -> int
fifo write: @1699477100852933143 0x7f81e1c51294 413: it.unimi.dsi.fastutil.ints.IntAVLTreeSet::compare(int, int) -> int
fifo write: @1699477100853659733 0x7f81e93e57d7 35: com.mojang.datafixers.types.templates.Tag::size() -> int
fifo write: @1699477100853884316 0x7f81e1c518f9 1912: java.util.HashMap$EntrySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477100853984817 0x7f81e1c52974 96: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry::succ() -> boolean
fifo write: @1699477100854660626 0x7f81e93e5de9 160: com.mojang.datafixers.DSL::optional(com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100855541757 0x7f81e1c52d96 37: java.lang.invoke.MethodHandles$Lookup::getDirectConstructor(Class, java.lang.invoke.MemberName) -> java.lang.invoke.MethodHandle
fifo write: @1699477100855930332 0x7f81e93e62e0 587: com.mojang.datafixers.schemas.Schema::register(java.util.Map, String, java.util.function.Supplier) -> void
fifo write: @1699477100859550779 0x7f81e93e728c 527: jdk.internal.org.objectweb.asm.AnnotationWriter::putAnnotations(jdk.internal.org.objectweb.asm.SymbolTable, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477100859833773 0x7f81e1c531b4 448: java.util.stream.ReduceOps$3::getOpFlags() -> int
fifo write: @1699477100859925934 0x7f81e93e7ce3 46: com.mojang.datafixers.DSL::list(com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100860866366 0x7f81e93e805b 592: sun.invoke.util.VerifyAccess::isTypeVisible(Class, Class) -> boolean
fifo write: @1699477100860930537 0x7f81e1c53814 71: java.util.HashMap$KeyIterator::<init>(java.util.HashMap) -> void
fifo write: @1699477100860991768 0x7f81e1c53c6f 246: java.util.HashMap$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477100861059638 0x7f81e1c541be 838: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapSpliterator::forEachRemaining(Object) -> void
fifo write: @1699477100861115129 0x7f81e1c54c80 1522: java.lang.invoke.LambdaForm$DMH.0x00007f81601a4400::newInvokeSpecial(Object, Object, int) -> Object
fifo write: @1699477100861372492 0x7f81e1c55794 727: java.lang.invoke.MemberName::equals(Object) -> boolean
fifo write: @1699477100861858029 0x7f81e93e8bcc 6: com.mojang.datafixers.DataFix::getOutputSchema() -> com.mojang.datafixers.schemas.Schema
fifo write: @1699477100862175163 0x7f81e1c55e97 524: java.util.stream.ReduceOps$2ReducingSink::accept(Object) -> void
fifo write: @1699477100862345445 0x7f81e1c56514 144: ayx$$Lambda$867.0x00007f81603dd748::typeName() -> String
fifo write: @1699477100862533917 0x7f81e1c56a9c 5478: it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap::putAll(java.util.Map) -> void
fifo write: @1699477100862587408 0x7f81e93e8ee1 160: java.util.HashMap::putIfAbsent(Object, Object) -> Object
fifo write: @1699477100863162006 0x7f81e1c58d94 31: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$EntryIterator::next() -> Object
fifo write: @1699477100863217096 0x7f81e1c59194 110: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapEntry::getIntValue() -> int
fifo write: @1699477100863271107 0x7f81e1c59614 144: ayx$$Lambda$862.0x00007f81603dcc58::typeName() -> String
fifo write: @1699477100863344398 0x7f81e1c59a34 687: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$EntryIterator::next() -> it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapEntry
fifo write: @1699477100863411369 0x7f81e1c5a194 243: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap, int) -> void
fifo write: @1699477100863490600 0x7f81e93e9370 523: java.util.stream.Collectors$$Lambda$108.0x00007f8160171838::accept(Object, Object) -> void
fifo write: @1699477100863568811 0x7f81e1c5a614 327: com.mojang.datafixers.types.templates.Check::<init>(String, int, com.mojang.datafixers.types.templates.TypeTemplate) -> void
fifo write: @1699477100864453742 0x7f81e93e9ead 10347: rr::a(String) -> qw
fifo write: @1699477100864568914 0x7f81e1c5abcd 435: com.mojang.datafixers.DSL::check(String, int, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100864697415 0x7f81e1c5b299 1975: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477100864745636 0x7f81e1c5c414 421: com.mojang.datafixers.types.templates.Check::size() -> int
fifo write: @1699477100864808287 0x7f81e1c5ca14 93: com.mojang.datafixers.types.families.RecursiveTypeFamily$$Lambda$940.0x00007f8160415c90::get(int) -> Object
fifo write: @1699477100864902978 0x7f81e1c5ce14 327: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::<init>(com.mojang.datafixers.types.families.RecursiveTypeFamily, int, java.util.function.Supplier) -> void
fifo write: @1699477100864986119 0x7f81e1c5d394 188: com.mojang.datafixers.types.families.RecursiveTypeFamily$$Lambda$941.0x00007f8160416168::<init>(com.mojang.datafixers.types.families.RecursiveTypeFamily, int) -> void
fifo write: @1699477100865080400 0x7f81e1c5d8de 1588: com.mojang.datafixers.types.families.RecursiveTypeFamily::lambda$apply$2(int) -> com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType
fifo write: @1699477100865133141 0x7f81e1c5e614 144: ayx$$Lambda$865.0x00007f81603dd2e8::typeName() -> String
fifo write: @1699477100865184762 0x7f81e1c5ea39 526: com.mojang.datafixers.types.templates.TaggedChoice::hashCode() -> int
fifo write: @1699477100865238812 0x7f81e1c5f114 219: java.util.HashMap$EntrySpliterator::characteristics() -> int
fifo write: @1699477100865324733 0x7f81e93f117d 394: com.mojang.datafixers.DSL$$Lambda$933.0x00007f816040dd38::apply(Object) -> Object
fifo write: @1699477100865457635 0x7f81e1c5f614 185: bav$$Lambda$1086.0x00007f816044b9b8::<init>(com.mojang.datafixers.schemas.Schema) -> void
fifo write: @1699477100865581667 0x7f81e1c5fa94 167: bav$$Lambda$1086.0x00007f816044b9b8::get() -> Object
fifo write: @1699477100865653938 0x7f81e1c5fe74 23: bav::n(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100865735939 0x7f81e1c60257 1768: bav::a(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100865783959 0x7f81e1c60f94 105: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$ValueSpliterator::characteristics() -> int
fifo write: @1699477100865857440 0x7f81e93f187d 494: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$ValueSpliterator::acceptOnIndex(Object, int) -> void
fifo write: @1699477100865947232 0x7f81e1c61414 324: com.mojang.datafixers.types.templates.CompoundList::<init>(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> void
fifo write: @1699477100866010012 0x7f81e93f2173 100: com.mojang.datafixers.types.templates.TaggedChoice$$Lambda$936.0x00007f8160411040::applyAsInt(Object) -> int
fifo write: @1699477100866075483 0x7f81e1c61997 106: com.mojang.datafixers.types.templates.CompoundList$$Lambda$942.0x00007f8160416b10::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100866165964 0x7f81e1c61e14 230: com.mojang.datafixers.types.templates.CompoundList$$Lambda$942.0x00007f8160416b10::<init>(com.mojang.datafixers.types.templates.CompoundList, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477100866290416 0x7f81e1c623b0 1775: com.mojang.datafixers.DSL::compoundList(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100866388857 0x7f81e1c6314e 431: com.mojang.datafixers.DSL::compoundList(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.templates.CompoundList$CompoundListType
fifo write: @1699477100866481778 0x7f81e1c637f7 1429: com.mojang.datafixers.types.templates.CompoundList::lambda$apply$0(com.mojang.datafixers.types.families.TypeFamily, int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100866577390 0x7f81e1c64457 1241: com.mojang.datafixers.types.templates.CompoundList::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100866662631 0x7f81e1c64f14 324: com.mojang.datafixers.types.templates.CompoundList$CompoundListType::<init>(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477100866712711 0x7f81e1c65474 96: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::succ() -> boolean
fifo write: @1699477100867429731 0x7f81e93f24b3 536: com.mojang.datafixers.DSL::and(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate[]) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100867595913 0x7f81e1c65894 357: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477100867671434 0x7f81e1c65e14 260: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$FastEntryIterator::next() -> it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry
fifo write: @1699477100867719744 0x7f81e1c66319 529: com.mojang.datafixers.types.templates.Product$ProductType::hashCode() -> int
fifo write: @1699477100867799675 0x7f81e1c66994 318: com.mojang.datafixers.types.templates.Tag$TagType::hashCode() -> int
fifo write: @1699477100867847996 0x7f81e1c66f19 529: com.mojang.datafixers.types.templates.Sum$SumType::hashCode() -> int
fifo write: @1699477100867933727 0x7f81e93f3003 46: com.mojang.datafixers.types.templates.Const::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100868675037 0x7f81e1c67594 263: com.mojang.datafixers.types.Type::equals(Object) -> boolean
fifo write: @1699477100868765698 0x7f81e1c67ad4 1230: com.mojang.datafixers.types.templates.Product$ProductType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477100868829779 0x7f81e1c68554 1230: com.mojang.datafixers.types.templates.Sum$SumType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477100868886399 0x7f81e1c68f74 87: com.mojang.datafixers.types.templates.Const$PrimitiveType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477100868942690 0x7f81e1c69374 87: com.mojang.datafixers.types.constant.EmptyPartPassthrough::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477100868995551 0x7f81e1c69774 87: com.mojang.datafixers.types.constant.EmptyPart::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477100869104602 0x7f81e93f337a 1833: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::find(Object) -> int
fifo write: @1699477100869170243 0x7f81e1c69bd4 1380: com.mojang.datafixers.types.templates.Tag$TagType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477100869445097 0x7f81e93f4637 1105: org.apache.commons.lang3.ArrayUtils::add(Object[], Object) -> Object[]
fifo write: @1699477100870134976 0x7f81e1c6a814 318: com.mojang.datafixers.types.templates.Named$NamedType::hashCode() -> int
fifo write: @1699477100870502450 0x7f81e93f53db 760: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::insert(int, Object, Object) -> void
fifo write: @1699477100870792384 0x7f81e1c6ae20 2711: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100870843185 0x7f81e1c6c114 144: ayx$$Lambda$863.0x00007f81603dce88::typeName() -> String
fifo write: @1699477100870911136 0x7f81e1c6c554 1479: com.mojang.datafixers.types.templates.Named$NamedType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477100871243940 0x7f81e93f5c59 62: com.mojang.datafixers.types.templates.List::size() -> int
fifo write: @1699477100871532344 0x7f81e93f5fda 309: com.mojang.datafixers.types.templates.Sum::equals(Object) -> boolean
fifo write: @1699477100872206192 0x7f81e1c6d194 47: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::object2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477100872383025 0x7f81e1c6d5ba 919: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::object2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.Object2ObjectMap$FastEntrySet
fifo write: @1699477100872691639 0x7f81e1c6deb7 755: bav$$Lambda$1125.0x00007f8160451130::get() -> Object
fifo write: @1699477100872753949 0x7f81e1c6e694 661: bav::d() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100873113074 0x7f81e93f6da1 2994: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::put(Object, Object) -> Object
fifo write: @1699477100873389688 0x7f81e1c6edb7 664: bav$$Lambda$1126.0x00007f8160451350::get() -> Object
fifo write: @1699477100873501549 0x7f81e93f8a4c 2: com.mojang.datafixers.types.templates.TaggedChoice::size() -> int
fifo write: @1699477100873576520 0x7f81e1c6f537 1161: com.mojang.datafixers.schemas.Schema$$Lambda$938.0x00007f8160411938::apply(Object, Object) -> Object
fifo write: @1699477100873992225 0x7f81e93f904c 6: org.apache.commons.lang3.tuple.ImmutableTriple::getLeft() -> Object
fifo write: @1699477100874045606 0x7f81e93f934c 6: org.apache.commons.lang3.tuple.ImmutableTriple::getRight() -> Object
fifo write: @1699477100874094277 0x7f81e93f964c 6: org.apache.commons.lang3.tuple.ImmutableTriple::getMiddle() -> Object
fifo write: @1699477100874394901 0x7f81e93f995a 309: com.mojang.datafixers.types.templates.Product::equals(Object) -> boolean
fifo write: @1699477100877576062 0x7f81e1c70037 4228: bau$$Lambda$1075.0x00007f8160448228::get() -> Object
fifo write: @1699477100877753904 0x7f81e1c71c97 6034: bau::d(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100877817665 0x7f81e93fa3d3 240: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477100877900016 0x7f81e1c74174 436: java.util.stream.Collectors::castingIdentity() -> java.util.function.Function
fifo write: @1699477100877970147 0x7f81e1c7473c 2025: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::<init>(int, float) -> void
fifo write: @1699477100878135169 0x7f81e1c75754 951: java.util.stream.Collectors$CollectorImpl::<init>(java.util.function.Supplier, java.util.function.BiConsumer, java.util.function.BinaryOperator, java.util.Set) -> void
fifo write: @1699477100878205840 0x7f81e93fa9d1 134: com.mojang.datafixers.types.templates.RecursivePoint::equals(Object) -> boolean
fifo write: @1699477100878672096 0x7f81e93fb0f7 1410: java.util.ArrayList$ArrayListSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477100879555977 0x7f81e93fbf5a 653: com.mojang.datafixers.types.templates.Tag::equals(Object) -> boolean
fifo write: @1699477100879844331 0x7f81e1c76114 31: java.util.stream.IntPipeline::<init>(java.util.stream.AbstractPipeline, int) -> void
fifo write: @1699477100879927042 0x7f81e1c76514 207: java.util.stream.IntPipeline$StatelessOp::<init>(java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int) -> void
fifo write: @1699477100879970673 0x7f81e1c76994 144: java.util.OptionalInt::<init>(int) -> void
fifo write: @1699477100880013143 0x7f81e1c76d94 101: java.util.OptionalInt::orElse(int) -> int
fifo write: @1699477100880074124 0x7f81e1c77247 254: java.util.OptionalInt::of(int) -> java.util.OptionalInt
fifo write: @1699477100880138235 0x7f81e1c77714 661: bav::b() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100880195845 0x7f81e1c77e37 755: bav$$Lambda$1143.0x00007f81604537a8::get() -> Object
fifo write: @1699477100881065227 0x7f81e1c78634 634: java.util.HashMap::remove(Object) -> Object
fifo write: @1699477100881687385 0x7f81e1c7922b 4967: java.util.HashMap::removeNode(int, Object, Object, boolean, boolean) -> java.util.HashMap$Node
fifo write: @1699477100881907828 0x7f81e93fd211 38: java.lang.runtime.ObjectMethods::eq(Object, Object) -> boolean
fifo write: @1699477100882043999 0x7f81e93fd542 85: java.lang.invoke.LambdaForm$MH.0x00007f8160259c00::linkToTargetMethod(Object, Object, Object) -> int
fifo write: @1699477100882123280 0x7f81e93fd8b9 138: java.lang.invoke.LambdaForm$MH.0x00007f8160258000::invoke(Object, Object, Object) -> int
fifo write: @1699477100882469845 0x7f81e93fdd6f 1289: java.lang.invoke.TypeConvertingMethodAdapter::descriptorToName(String) -> String
fifo write: @1699477100882541656 0x7f81e93feabc 99: java.lang.invoke.LambdaForm$DMH.0x00007f8160015c00::invokeSpecial(Object, Object, Object) -> int
fifo write: @1699477100882770419 0x7f81e1c7b6a3 8441: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100883027922 0x7f81e93ff1ea 734: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$EntryIterator::next() -> Object
fifo write: @1699477100883301416 0x7f81e1c7e794 185: bav$$Lambda$1109.0x00007f816044ee10::<init>(com.mojang.datafixers.schemas.Schema) -> void
fifo write: @1699477100883474258 0x7f81e1c7ec57 1768: bav::b(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100883686941 0x7f81e93ffc01 646: java.lang.invoke.LambdaForm$MH.0x00007f8160259800::invoke(Object, Object, Object) -> int
fifo write: @1699477100883935214 0x7f81e1c7fad7 4804: bav$$Lambda$1109.0x00007f816044ee10::get() -> Object
fifo write: @1699477100883998625 0x7f81e1c81914 185: bax$$Lambda$1152.0x00007f8160455048::<init>(com.mojang.datafixers.schemas.Schema) -> void
fifo write: @1699477100884073736 0x7f81e1c81d94 167: bax$$Lambda$1152.0x00007f8160455048::get() -> Object
fifo write: @1699477100884148406 0x7f81e1c82174 23: bax::a(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100884235058 0x7f81e1c82557 1768: bax::a(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100884517311 0x7f81e1c83437 6610: bav::m(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100884727434 0x7f81e1c85dc0 5213: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100884789455 0x7f81e1c87d94 199: java.util.HashMap$HashMapSpliterator::<init>(java.util.HashMap, int, int, int, int) -> void
fifo write: @1699477100884883996 0x7f81e1c88294 31: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap, it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$1) -> void
fifo write: @1699477100884959307 0x7f81e1c88694 280: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap) -> void
fifo write: @1699477100885040098 0x7f81e1c88c14 230: java.util.stream.Collectors$$Lambda$108.0x00007f8160171838::<init>(java.util.function.Function, java.util.function.Function) -> void
fifo write: @1699477100885096759 0x7f81e1c890f4 436: java.util.stream.Collectors::uniqKeysMapMerger() -> java.util.function.BinaryOperator
fifo write: @1699477100885139489 0x7f81e1c89614 47: java.util.HashMap$HashMapSpliterator::estimateSize() -> long
fifo write: @1699477100885184040 0x7f81e1c89a14 237: java.util.HashMap$HashMapSpliterator::getFence() -> int
fifo write: @1699477100885242611 0x7f81e1c89ff0 348: java.util.stream.Collectors$$Lambda$107.0x00007f8160171618::get() -> Object
fifo write: @1699477100885336032 0x7f81e1c8a537 1423: java.util.stream.Collectors::uniqKeysMapAccumulator(java.util.function.Function, java.util.function.Function) -> java.util.function.BiConsumer
fifo write: @1699477100885432973 0x7f81e1c8b171 2592: java.util.stream.Collectors::toMap(java.util.function.Function, java.util.function.Function) -> java.util.stream.Collector
fifo write: @1699477100885540034 0x7f81e1c8c2b4 891: java.lang.invoke.BoundMethodHandle$Species_LL::copyWithExtendL(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477100885669186 0x7f81e940065a 201: com.mojang.datafixers.types.templates.List::equals(Object) -> boolean
fifo write: @1699477100885760007 0x7f81e1c8ca94 661: bav::e() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100885817708 0x7f81e1c8d1b7 755: bav$$Lambda$1124.0x00007f8160450f10::get() -> Object
fifo write: @1699477100886002680 0x7f81e1c8d9ef 133: java.util.HashMap$EntrySet::spliterator() -> java.util.Spliterator
fifo write: @1699477100886062891 0x7f81e1c8de14 293: java.util.HashMap$EntrySpliterator::<init>(java.util.HashMap, int, int, int, int) -> void
fifo write: @1699477100886155822 0x7f81e1c8e3d4 341: com.google.common.collect.Maps::newConcurrentMap() -> java.util.concurrent.ConcurrentMap
fifo write: @1699477100886674389 0x7f81e1c8e8d4 78: Math::min(long, long) -> long
fifo write: @1699477100886758870 0x7f81e1c8ecd4 441: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::<init>(java.util.Map) -> void
fifo write: @1699477100886818701 0x7f81e1c8f334 352: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::<init>(java.util.Map, float) -> void
fifo write: @1699477100887102745 0x7f81e1c8fae7 6338: com.mojang.datafixers.types.templates.Check::equals(Object) -> boolean
fifo write: @1699477100887171936 0x7f81e1c9249e 948: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::putAll(java.util.Map) -> void
fifo write: @1699477100887228886 0x7f81e1c92e54 737: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::tryCapacity(long) -> void
fifo write: @1699477100887289817 0x7f81e1c936b4 850: com.mojang.datafixers.util.Pair::toMap() -> java.util.stream.Collector
fifo write: @1699477100887369108 0x7f81e1c93e14 428: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$1::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap) -> void
fifo write: @1699477100887439339 0x7f81e1c943b7 728: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::values() -> it.unimi.dsi.fastutil.objects.ObjectCollection
fifo write: @1699477100887548120 0x7f81e1c94c37 2497: com.mojang.datafixers.DSL::taggedChoiceLazy(String, com.mojang.datafixers.types.Type, java.util.Map) -> com.mojang.datafixers.types.templates.TaggedChoice
fifo write: @1699477100887655612 0x7f81e1c95dbe 749: com.mojang.datafixers.DSL::taggedChoice(String, com.mojang.datafixers.types.Type, java.util.Map) -> com.mojang.datafixers.types.templates.TaggedChoice
fifo write: @1699477100887723243 0x7f81e1c9666f 246: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$1::spliterator() -> it.unimi.dsi.fastutil.objects.ObjectSpliterator
fifo write: @1699477100887803894 0x7f81e1c96b94 71: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$ValueSpliterator::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap) -> void
fifo write: @1699477100887864234 0x7f81e1c96fb7 447: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$1::spliterator() -> java.util.Spliterator
fifo write: @1699477100888084547 0x7f81e1c9773d 4425: com.mojang.datafixers.types.templates.TaggedChoice::<init>(String, com.mojang.datafixers.types.Type, it.unimi.dsi.fastutil.objects.Object2ObjectMap) -> void
fifo write: @1699477100888191319 0x7f81e1c993fd 2001: com.mojang.datafixers.DSL::fields(String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100888316540 0x7f81e94011a0 2547: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntrySet::contains(Object) -> boolean
fifo write: @1699477100888430212 0x7f81e9402bcc 2: com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry::getHash() -> int
fifo write: @1699477100888946068 0x7f81e1c9a1f4 375: com.mojang.datafixers.DataFix::getVersionKey() -> int
fifo write: @1699477100890141514 0x7f81e9403151 14030: aue::b(String) -> com.mojang.serialization.Dynamic
fifo write: @1699477100890909824 0x7f81e940c2db 16630: java.lang.invoke.MethodType::makeImpl(Class, Class[], boolean) -> java.lang.invoke.MethodType
fifo write: @1699477100890960404 0x7f81e1c9a6f4 29: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::incBalance() -> void
fifo write: @1699477100891002395 0x7f81e1c9aa74 29: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry::incBalance() -> void
fifo write: @1699477100891077226 0x7f81e94156f0 45: com.google.common.collect.Maps::newHashMap() -> java.util.HashMap
fifo write: @1699477100891156677 0x7f81e9415a8b 62: com.mojang.datafixers.types.templates.Product::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100893039241 0x7f81e1c9aef7 3312: bav$$Lambda$1127.0x00007f8160451570::get() -> Object
fifo write: @1699477100893222593 0x7f81e1c9c637 5109: bav::f(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100893279614 0x7f81e9416152 569: jdk.internal.org.objectweb.asm.Label::resolve(byte[], int) -> boolean
fifo write: @1699477100893328175 0x7f81e9416991 1: java.lang.invoke.MethodHandleNatives::refKindIsField(byte) -> boolean
fifo write: @1699477100893434956 0x7f81e9416cd2 642: com.mojang.datafixers.types.templates.Named::hashCode() -> int
fifo write: @1699477100893567908 0x7f81e8b9e560 168: itable stub
fifo write: @1699477100894281807 0x7f81e1c9e694 144: ayx$$Lambda$870.0x00007f81603dddd8::typeName() -> String
fifo write: @1699477100894708942 0x7f81e941793a 1148: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100894849484 0x7f81e1c9ea94 339: java.util.AbstractList$Itr::checkForComodification() -> void
fifo write: @1699477100894982336 0x7f81e1c9f066 1515: java.lang.invoke.MethodHandles::dropArguments(java.lang.invoke.MethodHandle, int, Class[]) -> java.lang.invoke.MethodHandle
fifo write: @1699477100895014166 0x7f81e1c9fc94 342: java.util.AbstractList$Itr::hasNext() -> boolean
fifo write: @1699477100895059127 0x7f81e1ca0279 1281: java.util.AbstractList$Itr::next() -> Object
fifo write: @1699477100895092907 0x7f81e1ca0ef4 99: java.util.Arrays$ArrayList::get(int) -> Object
fifo write: @1699477100895126628 0x7f81e94188dd 233: com.mojang.datafixers.types.templates.Product::size() -> int
fifo write: @1699477100895241319 0x7f81e1ca1443 3919: java.lang.invoke.MethodHandles::dropArguments0(java.lang.invoke.MethodHandle, int, java.util.List) -> java.lang.invoke.MethodHandle
fifo write: @1699477100895290710 0x7f81e1ca3139 1138: java.util.concurrent.ConcurrentHashMap::initTable() -> java.util.concurrent.ConcurrentHashMap$Node[]
fifo write: @1699477100895539293 0x7f81e9418fe5 5760: java.util.AbstractCollection::containsAll(java.util.Collection) -> boolean
fifo write: @1699477100895676865 0x7f81e1ca3eee 8099: java.lang.invoke.MethodHandles::dropArgumentChecks(java.lang.invoke.MethodType, int, java.util.List) -> int
fifo write: @1699477100895884507 0x7f81e1ca7254 87: com.mojang.datafixers.DataFixUtils::getVersion(int) -> int
fifo write: @1699477100896751148 0x7f81e941cd0b 62: com.mojang.datafixers.types.templates.Named::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100896837399 0x7f81e941d0d3 217: com.mojang.datafixers.types.templates.Named$$Lambda$939.0x00007f8160414c80::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100896972361 0x7f81e1ca7614 167: it.unimi.dsi.fastutil.objects.Object2ObjectMap::entrySet() -> java.util.Set
fifo write: @1699477100897046002 0x7f81e1ca7a94 167: it.unimi.dsi.fastutil.objects.Object2ObjectMap::entrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477100897122893 0x7f81e1ca7f94 1852: it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap::equals(Object) -> boolean
fifo write: @1699477100897225115 0x7f81e941d64c 2: com.mojang.datafixers.types.families.RecursiveTypeFamily::hashCode() -> int
fifo write: @1699477100897644690 0x7f81e1ca8db7 4228: bau$$Lambda$1077.0x00007f8160448678::get() -> Object
fifo write: @1699477100897743161 0x7f81e941d98b 62: com.mojang.datafixers.types.templates.Tag::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100897989234 0x7f81e1caaa17 6034: bau::b(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100898091006 0x7f81e941dd8b 62: com.mojang.datafixers.types.templates.Sum::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100898438440 0x7f81e1cacf14 144: ayx$$Lambda$873.0x00007f81603de468::typeName() -> String
fifo write: @1699477100898547712 0x7f81e1cad45f 4027: com.mojang.datafixers.types.templates.Hook::hashCode() -> int
fifo write: @1699477100898601092 0x7f81e941e14f 216: java.util.HashSet::add(Object) -> boolean
fifo write: @1699477100898729414 0x7f81e941e69d 1174: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::hashCode() -> int
fifo write: @1699477100899833948 0x7f81e941f518 2168: jdk.internal.org.objectweb.asm.MethodWriter::visitInsn(int) -> void
fifo write: @1699477100900056231 0x7f81e9420d56 1296: com.mojang.datafixers.types.templates.Product$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100900245693 0x7f81e9421deb 62: com.mojang.datafixers.DSL::field(String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100900483137 0x7f81e9422190 554: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100901254957 0x7f81e1caef9a 2623: com.mojang.datafixers.DSL::compoundList(com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100902005336 0x7f81e1cb0214 369: com.mojang.datafixers.types.templates.Hook::<init>(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.Hook$HookFunction, com.mojang.datafixers.types.templates.Hook$HookFunction) -> void
fifo write: @1699477100902135948 0x7f81e1cb084d 476: com.mojang.datafixers.DSL::hook(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.Hook$HookFunction, com.mojang.datafixers.types.templates.Hook$HookFunction) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100902742256 0x7f81e1cb13ff 17233: com.mojang.datafixers.schemas.Schema::buildTypes() -> java.util.Map
fifo write: @1699477100902804927 0x7f81e9422e54 59: java.util.HashMap::getOrDefault(Object, Object) -> Object
fifo write: @1699477100902917968 0x7f81e1cb7c25 3836: com.google.common.collect.MapMakerInternalMap$Segment::getEntry(Object, int) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477100903094330 0x7f81e1cb9714 661: bav::f() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100903149981 0x7f81e1cb9e37 755: bav$$Lambda$1114.0x00007f816044f930::get() -> Object
fifo write: @1699477100903580187 0x7f81e1cba614 240: java.util.stream.ReduceOps$6ReducingSink::<init>(java.util.function.IntBinaryOperator) -> void
fifo write: @1699477100903692148 0x7f81e1cbaab7 502: java.util.stream.ReferencePipeline$4::<init>(java.util.stream.ReferencePipeline, java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int, java.util.function.ToIntFunction) -> void
fifo write: @1699477100903754159 0x7f81e1cbb167 354: java.util.stream.ReduceOps$7::makeSink() -> java.util.stream.ReduceOps$6ReducingSink
fifo write: @1699477100903832030 0x7f81e1cbb72d 1184: java.util.stream.ReferencePipeline$4::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477100903894751 0x7f81e1cbc117 545: java.util.stream.ReduceOps$7::makeSink() -> java.util.stream.ReduceOps$AccumulatingSink
fifo write: @1699477100903975622 0x7f81e1cbc7b4 1075: java.util.stream.ReferencePipeline$4$1::<init>(java.util.stream.ReferencePipeline$4, java.util.stream.Sink) -> void
fifo write: @1699477100904021482 0x7f81e1cbd074 10: java.util.stream.ReduceOps$6ReducingSink::begin(long) -> void
fifo write: @1699477100904084233 0x7f81e1cbd414 31: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$ValueSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477100904158304 0x7f81e1cbd814 285: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapSpliterator::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap) -> void
fifo write: @1699477100904220095 0x7f81e1cbddb4 617: java.util.stream.ReduceOps$6ReducingSink::get() -> java.util.OptionalInt
fifo write: @1699477100904277886 0x7f81e1cbe534 797: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapSpliterator::estimateSize() -> long
fifo write: @1699477100904340196 0x7f81e1cbee34 728: java.util.stream.ReduceOps$6ReducingSink::get() -> Object
fifo write: @1699477100904421247 0x7f81e1cbf65f 1088: java.util.stream.ReferencePipeline::mapToInt(java.util.function.ToIntFunction) -> java.util.stream.IntStream
fifo write: @1699477100904505718 0x7f81e94231f3 1233: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::hashCode() -> int
fifo write: @1699477100906914700 0x7f81e9424417 1907: com.mojang.datafixers.schemas.Schema::id(String) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100908070265 0x7f81e1cc0094 137: it.unimi.dsi.fastutil.ints.AbstractInt2ObjectFunction::<init>() -> void
fifo write: @1699477100908193656 0x7f81e94260d3 205: com.mojang.datafixers.types.templates.Tag$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100908695893 0x7f81e1cc0494 234: it.unimi.dsi.fastutil.ints.AbstractInt2ObjectMap::<init>() -> void
fifo write: @1699477100908941786 0x7f81e942669c 637: com.mojang.datafixers.DSL$$Lambda$933.0x00007f816040dd38::apply(Object) -> Object
fifo write: @1699477100909577254 0x7f81e1cc0914 144: ayx$$Lambda$871.0x00007f81603de008::typeName() -> String
fifo write: @1699477100910130361 0x7f81e1cc0ee3 7716: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100910581777 0x7f81e1cc3c14 144: ayx$$Lambda$872.0x00007f81603de238::typeName() -> String
fifo write: @1699477100911092404 0x7f81e9429673 4283: bag::a(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100911157364 0x7f81e1cc3ff4 308: sun.invoke.util.Wrapper::findWrapperType(Class) -> sun.invoke.util.Wrapper
fifo write: @1699477100911421008 0x7f81e1cc4677 3012: sun.invoke.util.Wrapper::hashWrap(Class) -> int
fifo write: @1699477100913368813 0x7f81e1cc5f37 664: bav$$Lambda$1137.0x00007f8160452ad0::get() -> Object
fifo write: @1699477100913512485 0x7f81e1cc6694 144: ayx$$Lambda$874.0x00007f81603de698::typeName() -> String
fifo write: @1699477100913649047 0x7f81e8b96580 464: I2C/C2I adapters(0xbbbebaa)
fifo write: @1699477100913817289 0x7f81e942cc38 2411: com.mojang.datafixers.types.templates.Sum$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100914450537 0x7f81e1cc6a99 50: java.lang.invoke.LambdaForm$Name::<init>(int, java.lang.invoke.LambdaForm$BasicType) -> void
fifo write: @1699477100915461050 0x7f81e1cc6e74 23: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::balance(int) -> void
fifo write: @1699477100915886635 0x7f81e1cc71f4 23: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry::balance(int) -> void
fifo write: @1699477100916594805 0x7f81e1cc76d7 4084: com.mojang.datafixers.types.templates.CompoundList::hashCode() -> int
fifo write: @1699477100916812677 0x7f81e1cc91b7 755: bav$$Lambda$1142.0x00007f8160453588::get() -> Object
fifo write: @1699477100916873958 0x7f81e1cc9994 661: bav::c() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100917297714 0x7f81e1cca2a7 5150: com.mojang.datafixers.types.templates.TaggedChoice::lambda$apply$0(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.types.Type
fifo write: @1699477100917451126 0x7f81e942f202 2557: jdk.internal.ref.PhantomCleanable::<init>(Object, java.lang.ref.Cleaner) -> void
fifo write: @1699477100917565757 0x7f81e94309d7 35: com.mojang.datafixers.schemas.Schema::registerTypes(com.mojang.datafixers.schemas.Schema, java.util.Map, java.util.Map) -> void
fifo write: @1699477100918084774 0x7f81e94313f6 409: java.util.HashMap$EntrySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477100920020859 0x7f81e1ccc394 240: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap) -> void
fifo write: @1699477100920929531 0x7f81e9431dee 1746: com.mojang.datafixers.DSL::allWithRemainder(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate[]) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100921126673 0x7f81e9432f57 35: com.mojang.datafixers.schemas.Schema::registerBlockEntities(com.mojang.datafixers.schemas.Schema) -> java.util.Map
fifo write: @1699477100921224664 0x7f81e1ccc814 369: org.apache.commons.lang3.tuple.ImmutableTriple::<init>(Object, Object, Object) -> void
fifo write: @1699477100921316426 0x7f81e1ccce14 230: com.mojang.datafixers.types.templates.TaggedChoice$$Lambda$1082.0x00007f8160449130::<init>(com.mojang.datafixers.types.templates.TaggedChoice, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477100921356686 0x7f81e1ccd314 137: org.apache.commons.lang3.tuple.Triple::<init>() -> void
fifo write: @1699477100921425957 0x7f81e1ccd714 185: com.mojang.datafixers.types.templates.TaggedChoice$$Lambda$1083.0x00007f8160449358::<init>(com.mojang.datafixers.types.templates.TaggedChoice) -> void
fifo write: @1699477100921492088 0x7f81e1ccdb94 345: com.mojang.datafixers.types.templates.TaggedChoice$$Lambda$1083.0x00007f8160449358::apply(Object) -> Object
fifo write: @1699477100921583779 0x7f81e1cce157 1241: com.mojang.datafixers.types.templates.TaggedChoice::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100921647800 0x7f81e9433257 35: com.mojang.datafixers.schemas.Schema::registerEntities(com.mojang.datafixers.schemas.Schema) -> java.util.Map
fifo write: @1699477100921703881 0x7f81e1ccec59 1289: org.apache.commons.lang3.tuple.Triple::hashCode() -> int
fifo write: @1699477100921746131 0x7f81e1ccf794 144: ayx$$Lambda$844.0x00007f81603da4f8::typeName() -> String
fifo write: @1699477100921834002 0x7f81e1ccfc37 2334: com.mojang.datafixers.types.templates.TaggedChoice$$Lambda$1082.0x00007f8160449130::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100921908393 0x7f81e1cd0d57 1493: it.unimi.dsi.fastutil.objects.Object2ObjectMaps$1::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477100921948304 0x7f81e9433557 35: com.mojang.datafixers.types.templates.Named::size() -> int
fifo write: @1699477100922047465 0x7f81e1cd1a5d 2800: com.mojang.datafixers.types.templates.TaggedChoice::lambda$apply$1(com.mojang.datafixers.types.families.TypeFamily, int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100922174857 0x7f81e1cd2e39 2660: org.apache.commons.lang3.tuple.Triple::equals(Object) -> boolean
fifo write: @1699477100922374779 0x7f81e8b96100 504: I2C/C2I adapters(0xbbbaaabb)
fifo write: @1699477100922389039 0x7f81e8b93900 504: I2C/C2I adapters(0xbbbaaaab)
fifo write: @1699477100922403860 0x7f81e8b93600 504: I2C/C2I adapters(0xbbbaaaba)
fifo write: @1699477100923595515 0x7f81e1cd4194 234: it.unimi.dsi.fastutil.objects.AbstractObject2IntMap::<init>() -> void
fifo write: @1699477100923638466 0x7f81e1cd4614 137: it.unimi.dsi.fastutil.objects.AbstractObject2IntFunction::<init>() -> void
fifo write: @1699477100923719047 0x7f81e943386f 62: com.mojang.datafixers.DSL::or(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.Type
fifo write: @1699477100925291277 0x7f81e1cd4d83 13503: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100925468959 0x7f81e9433c18 962: com.mojang.datafixers.types.templates.Sum$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100926923118 0x7f81e94349cc 6: sun.invoke.util.Wrapper::wrapperSimpleName() -> String
fifo write: @1699477100927787499 0x7f81e9434cf5 806: java.util.HashMap$EntrySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477100928223745 0x7f81e943575e 411: java.lang.ref.Cleaner::register(Object, Runnable) -> java.lang.ref.Cleaner$Cleanable
fifo write: @1699477100928924794 0x7f81e9436380 45: com.mojang.datafixers.schemas.Schema$$Lambda$883.0x00007f8160402ec8::get() -> Object
fifo write: @1699477100929694234 0x7f81e9436a5e 237: java.lang.invoke.LambdaForm$MH.0x00007f816034fc00::invoke(Object, Object, Object) -> int
fifo write: @1699477100930031898 0x7f81e1cd9c63 10960: com.mojang.datafixers.DSL::optionalFields(String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate, String, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100930096419 0x7f81e1cddb14 185: bbf$$Lambda$1173.0x00007f816045a448::<init>(com.mojang.datafixers.schemas.Schema) -> void
fifo write: @1699477100930180040 0x7f81e1cddfd7 1768: bbf::a(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100930575285 0x7f81e9437100 527: com.mojang.datafixers.schemas.Schema::registerSimple(java.util.Map, String) -> void
fifo write: @1699477100930660986 0x7f81e1cdecf4 173: com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry::getKey() -> Object
fifo write: @1699477100931422976 0x7f81e9437c3b 16556: java.net.URL::<init>(java.net.URL, String, java.net.URLStreamHandler) -> void
fifo write: @1699477100933411972 0x7f81e1cdf19d 1175: org.apache.commons.lang3.tuple.ImmutableTriple::of(Object, Object, Object) -> org.apache.commons.lang3.tuple.ImmutableTriple
fifo write: @1699477100933676145 0x7f81e1cdfc97 4212: bau::b() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100933769226 0x7f81e1ce1837 4309: bau$$Lambda$1079.0x00007f8160448ac0::get() -> Object
fifo write: @1699477100933881598 0x7f81e1ce34b7 4309: bau$$Lambda$1078.0x00007f81604488a0::get() -> Object
fifo write: @1699477100934001079 0x7f81e1ce5137 4236: bau$$Lambda$1076.0x00007f8160448450::get() -> Object
fifo write: @1699477100934076010 0x7f81e1ce6c14 230: com.mojang.datafixers.types.templates.Hook$$Lambda$1081.0x00007f8160448f08::<init>(com.mojang.datafixers.types.templates.Hook, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477100934154171 0x7f81e1ce7134 485: com.mojang.datafixers.types.templates.Hook::lambda$apply$0(com.mojang.datafixers.types.families.TypeFamily, int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100934210962 0x7f81e1ce77b4 603: com.mojang.datafixers.types.templates.Hook$$Lambda$1081.0x00007f8160448f08::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477100934272813 0x7f81e1ce7f57 1241: com.mojang.datafixers.types.templates.Hook::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477100934304193 0x7f81e1ce8a14 144: ayx$$Lambda$876.0x00007f81603deaf8::typeName() -> String
fifo write: @1699477100934381484 0x7f81e1ce8f17 4212: bau::c() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100934411945 0x7f81e9441f10 39: java.lang.runtime.ObjectMethods::eq(int, int) -> boolean
fifo write: @1699477100934524156 0x7f81e1ceab17 6042: bau::c(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100934952342 0x7f81e1ced037 664: bav$$Lambda$1139.0x00007f8160452f18::get() -> Object
fifo write: @1699477100935249295 0x7f81e1ced89a 3729: bav::a(java.util.Map) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100935311636 0x7f81e1cef237 3829: bav$$Lambda$1138.0x00007f8160452cf0::get() -> Object
fifo write: @1699477100937930250 0x7f81e1cf0b94 191: com.mojang.datafixers.DataFix::<init>(com.mojang.datafixers.schemas.Schema, boolean) -> void
fifo write: @1699477100938093332 0x7f81e94422e5 794: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapSpliterator::forEachRemaining(Object) -> void
fifo write: @1699477100938486927 0x7f81e1cf10d7 2871: com.mojang.datafixers.DataFixerBuilder::addFixer(com.mojang.datafixers.DataFix) -> void
fifo write: @1699477100939504440 0x7f81e9442fa1 3873: com.mojang.datafixers.schemas.Schema::registerType(boolean, com.mojang.datafixers.DSL$TypeReference, java.util.function.Supplier) -> void
fifo write: @1699477100939717973 0x7f81e1cf2966 13793: it.unimi.dsi.fastutil.ints.IntAVLTreeSet::add(int) -> boolean
fifo write: @1699477100939903605 0x7f81e1cf8914 2094: AbstractStringBuilder::append(CharSequence) -> AbstractStringBuilder
fifo write: @1699477100939963736 0x7f81e1cf9694 231: java.util.Formatter$Flags::contains(java.util.Formatter$Flags) -> boolean
fifo write: @1699477100940116478 0x7f81e1cf9bdd 763: java.util.regex.Matcher::find(int) -> boolean
fifo write: @1699477100940733836 0x7f81e9445c38 219: Character::digit(char, int) -> int
fifo write: @1699477100941320984 0x7f81e94461dc 18: bav$$Lambda$1086.0x00007f816044b9b8::get() -> Object
fifo write: @1699477100941605347 0x7f81e94464f3 676: bav::a(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100942136394 0x7f81e1cfa414 185: bbm$$Lambda$1190.0x00007f816045dc10::<init>(com.mojang.datafixers.schemas.Schema) -> void
fifo write: @1699477100942368137 0x7f81e1cfa894 31: bbm$$Lambda$1190.0x00007f816045dc10::get() -> Object
fifo write: @1699477100942446298 0x7f81e1cfacd7 1768: bbm::a(com.mojang.datafixers.schemas.Schema, java.util.Map, String) -> void
fifo write: @1699477100942487328 0x7f81e9446fd9 54: com.mojang.datafixers.util.Pair$$Lambda$934.0x00007f816040df78::apply(Object) -> Object
fifo write: @1699477100942563589 0x7f81e1cfba34 610: com.mojang.datafixers.types.templates.CompoundList::size() -> int
fifo write: @1699477100943411610 0x7f81e1cfc31f 8228: bbm::a(com.mojang.datafixers.schemas.Schema) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477100944083859 0x7f81e9447390 605: java.util.stream.Collectors$$Lambda$108.0x00007f8160171838::accept(Object, Object) -> void
fifo write: @1699477100944126669 0x7f81e9447dd9 54: com.mojang.datafixers.util.Pair$$Lambda$935.0x00007f816040e1b8::apply(Object) -> Object
fifo write: @1699477100944193080 0x7f81e1cff514 328: it.unimi.dsi.fastutil.objects.AbstractObjectSet::<init>() -> void
fifo write: @1699477100944615736 0x7f81e1cffa99 2477: com.mojang.datafixers.types.templates.TaggedChoice::equals(Object) -> boolean
fifo write: @1699477100945380525 0x7f81e9448184 577: java.util.stream.Collectors::lambda$uniqKeysMapAccumulator$1(java.util.function.Function, java.util.function.Function, java.util.Map, Object) -> void
fifo write: @1699477100946436169 0x7f81e1d00c94 188: it.unimi.dsi.fastutil.ints.AbstractInt2ObjectMap$BasicEntry::<init>(int, Object) -> void
fifo write: @1699477100946489290 0x7f81e1d01114 289: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::<init>(int, Object) -> void
fifo write: @1699477100946559391 0x7f81e1d01614 148: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::put(int, Object) -> Object
fifo write: @1699477100946622651 0x7f81e1d01a74 56: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::right(it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry) -> void
fifo write: @1699477100946660012 0x7f81e1d01e74 96: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::pred() -> boolean
fifo write: @1699477100946697422 0x7f81e9448b4c 2: it.unimi.dsi.fastutil.ints.AbstractInt2ObjectMap$BasicEntry::getIntKey() -> int
fifo write: @1699477100946738793 0x7f81e9448e4c 6: it.unimi.dsi.fastutil.ints.AbstractInt2ObjectMap$BasicEntry::getValue() -> Object
fifo write: @1699477100946777233 0x7f81e1d02274 95: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$TreeIterator::hasNext() -> boolean
fifo write: @1699477100946997856 0x7f81e9449150 75: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::compare(int, int) -> int
fifo write: @1699477100947295740 0x7f81e9449516 650: com.mojang.datafixers.schemas.Schema::register(java.util.Map, String, java.util.function.Function) -> void
fifo write: @1699477100947325420 0x7f81e1d02674 95: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$SetIterator::hasNext() -> boolean
fifo write: @1699477100948480185 0x7f81e1d02e26 14647: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::add(int) -> it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry
fifo write: @1699477100950238928 0x7f81e1d09294 240: com.mojang.datafixers.types.templates.List$ListType::hashCode() -> int
fifo write: @1699477100950870986 0x7f81e1d096f4 100: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::hashCode() -> int
fifo write: @1699477100950985638 0x7f81e1d09b34 897: com.mojang.datafixers.types.templates.List$ListType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477100952768981 0x7f81e8b93300 480: I2C/C2I adapters(0xbb66666)
fifo write: @1699477100953097775 0x7f81e944a03b 168: StringConcatHelper::newArray(long) -> byte[]
fifo write: @1699477100957552793 0x7f81e8b93000 488: I2C/C2I adapters(0xbb7e7e7e7e7eb)
fifo write: @1699477100961848628 0x7f81e8b92d00 464: I2C/C2I adapters(0xbbbb7e7e)
fifo write: @1699477100961862328 0x7f81e8b92a00 464: I2C/C2I adapters(0x7e7e7e7eb)
fifo write: @1699477100962352144 0x7f81e8b92700 456: I2C/C2I adapters(0xba6b6)
fifo write: @1699477100966739921 0x7f81e8b92400 472: I2C/C2I adapters(0xbbb7e7e7e)
fifo write: @1699477100971384161 0x7f81e8b92100 504: I2C/C2I adapters(0xbb7e7e7e7e7e7eb)
fifo write: @1699477100971397601 0x7f81e8b91e00 480: I2C/C2I adapters(0xbbb7e7e7eb)
fifo write: @1699477100973876313 0x7f81e944a7a7 748: sun.invoke.util.VerifyAccess::isClassAccessible(Class, Class, Class, int) -> boolean
fifo write: @1699477100975373953 0x7f81e1d0a3c6 674: java.lang.invoke.LambdaForm$MH.0x00007f8160229800::linkToTargetMethod(Object, Object, int, Object) -> Object
fifo write: @1699477100975505844 0x7f81e1d0aaf7 1563: java.util.Optional::map(java.util.function.Function) -> java.util.Optional
fifo write: @1699477100975817178 0x7f81e1d0b897 4173: com.mojang.datafixers.DataFixUtils::or(java.util.Optional, java.util.function.Supplier) -> java.util.Optional
fifo write: @1699477100977235177 0x7f81e944b4da 39: jdk.internal.org.objectweb.asm.SymbolTable::addConstantMethodref(String, String, String, boolean) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477100978938829 0x7f81e1d0d93e 16369: com.google.common.collect.MapMakerInternalMap$Segment::put(Object, int, Object, boolean) -> Object
fifo write: @1699477100980493409 0x7f81e8b91b00 488: I2C/C2I adapters(0xbb7e7e7e6ab)
fifo write: @1699477100980971845 0x7f81e8b91800 464: I2C/C2I adapters(0xbb7e7e7ea)
fifo write: @1699477100997135333 0x7f81e944b8d6 4316: jdk.internal.org.objectweb.asm.MethodWriter::visitMethodInsn(int, String, String, String, boolean) -> void
fifo write: @1699477100997171183 0x7f81e944e836 166: jdk.internal.misc.InnocuousThread::eraseThreadLocals() -> void
fifo write: @1699477100997325405 0x7f81e8b91500 488: I2C/C2I adapters(0xbbbb7e7e7ea)
fifo write: @1699477100997337035 0x7f81e8b91200 480: I2C/C2I adapters(0xbbb7e7e7ea)
fifo write: @1699477100999262360 0x7f81e944ebd5 1194: jdk.internal.ref.PhantomCleanable::remove() -> boolean
fifo write: @1699477100999348371 0x7f81e944f6f4 1277: jdk.internal.ref.PhantomCleanable::clean() -> void
fifo write: @1699477101002380840 0x7f81e1d14c03 1538: java.lang.invoke.LambdaForm$DMH.0x00007f8160229000::newInvokeSpecial(Object, Object, Object, int) -> Object
fifo write: @1699477101007697029 0x7f81e1d15794 234: com.mojang.datafixers.types.templates.Sum$SumType$$Lambda$1295.0x00007f816047d678::<init>(com.mojang.datafixers.types.templates.Sum$SumType, String, int) -> void
fifo write: @1699477101008337587 0x7f81e1d15e1f 5482: com.mojang.datafixers.types.templates.Sum$SumType::findChoiceType(String, int) -> java.util.Optional
fifo write: @1699477101008700462 0x7f81e8b90f00 504: I2C/C2I adapters(0xbb7e7e7eb7e7e7e)
fifo write: @1699477101013617286 0x7f81e1d18214 328: it.unimi.dsi.fastutil.ints.AbstractInt2ObjectSortedMap::<init>() -> void
fifo write: @1699477101014375065 0x7f81e1d18779 123: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::subMap(int, int) -> it.unimi.dsi.fastutil.ints.Int2ObjectSortedMap
fifo write: @1699477101014415816 0x7f81e1d18b94 347: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::firstIntKey() -> int
fifo write: @1699477101014469727 0x7f81e1d19134 891: com.mojang.datafixers.DataFixerUpper::getLowestSchemaSameVersion(it.unimi.dsi.fastutil.ints.Int2ObjectSortedMap, int) -> int
fifo write: @1699477101014542417 0x7f81e1d199e0 1557: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::locateKey(int) -> it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry
fifo write: @1699477101014582418 0x7f81e1d1a7b4 363: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Submap::lastIntKey() -> int
fifo write: @1699477101014625939 0x7f81e1d1ad94 230: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::get(int) -> Object
fifo write: @1699477101014671099 0x7f81e9450a4c 6: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::types() -> java.util.Map
fifo write: @1699477101014757200 0x7f81e1d1b2d4 1080: com.mojang.datafixers.types.templates.Check$CheckType::findCheckedType(int) -> java.util.Optional
fifo write: @1699477101014958603 0x7f81e1d1bd60 2025: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Submap::<init>(it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap, int, boolean, int, boolean) -> void
fifo write: @1699477101015046374 0x7f81e1d1cfbc 2280: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Submap::lastEntry() -> it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry
fifo write: @1699477101020809788 0x7f81e8b90c00 464: I2C/C2I adapters(0xbbbb66)
fifo write: @1699477101024463406 0x7f81e1d1e527 5741: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477101029081805 0x7f81e1d20d94 358: com.mojang.datafixers.types.templates.Sum$SumType$$Lambda$1291.0x00007f816047cdb0::get() -> Object
fifo write: @1699477101029130436 0x7f81e1d21314 240: com.mojang.datafixers.types.templates.Sum$SumType::lambda$findCheckedType$4(int) -> java.util.Optional
fifo write: @1699477101030290241 0x7f81e1d21837 2817: ClassLoader::getSystemClassLoader() -> ClassLoader
fifo write: @1699477101031321134 0x7f81e1d22d14 188: com.mojang.datafixers.types.templates.Sum$SumType$$Lambda$1291.0x00007f816047cdb0::<init>(com.mojang.datafixers.types.templates.Sum$SumType, int) -> void
fifo write: @1699477101031975473 0x7f81e1d23317 5323: com.mojang.datafixers.types.templates.Sum$SumType::findCheckedType(int) -> java.util.Optional
fifo write: @1699477101032549080 0x7f81e9450d87 572: java.util.jar.JarVerifier::update(int, byte[], int, int, sun.security.util.ManifestEntryVerifier) -> void
fifo write: @1699477101035276465 0x7f81e8b90900 448: I2C/C2I adapters(0xbabbea)
fifo write: @1699477101037819528 0x7f81e1d25c77 15342: java.util.jar.Attributes::read(java.util.jar.Manifest$FastInputStream, byte[], String, int) -> int
fifo write: @1699477101044713156 0x7f81e1d2ccb4 548: com.google.common.collect.MapMakerInternalMap$Segment::postReadCleanup() -> void
fifo write: @1699477101044806987 0x7f81e1d2d45c 5156: com.google.common.collect.MapMakerInternalMap$Segment::get(Object, int) -> Object
fifo write: @1699477101044945129 0x7f81e9452030 87: java.util.Arrays::rangeCheck(int, int, int) -> void
fifo write: @1699477101046237436 0x7f81e8b90600 488: I2C/C2I adapters(0xbbbb7e7e7eb)
fifo write: @1699477101047486942 0x7f81e1d2f779 2405: java.util.WeakHashMap::expungeStaleEntries() -> void
fifo write: @1699477101047881307 0x7f81e8b90300 504: I2C/C2I adapters(0xbbbb7e7e7e6ab)
fifo write: @1699477101047895947 0x7f81e8b90000 536: I2C/C2I adapters(0xbbbb7e7e7e6aba)
fifo write: @1699477101047909257 0x7f81e8b8fd00 512: I2C/C2I adapters(0xbb7e7e7ebb66be)
fifo write: @1699477101047922528 0x7f81e8b8f900 496: I2C/C2I adapters(0xbb7e7e7ebb66)
fifo write: @1699477101047935578 0x7f81e8bbbe80 472: I2C/C2I adapters(0xbbbbb66)
fifo write: @1699477101047948508 0x7f81e8bbbb80 480: I2C/C2I adapters(0xbb7e7e7e6b)
fifo write: @1699477101047961438 0x7f81e8bbb880 496: I2C/C2I adapters(0xbbbbb6ab)
fifo write: @1699477101047974288 0x7f81e8bbb580 472: I2C/C2I adapters(0xbbbb66a)
fifo write: @1699477101047987168 0x7f81e8bbb280 496: I2C/C2I adapters(0xb7e7e7ebb66a)
fifo write: @1699477101048000059 0x7f81e8bbaf80 504: I2C/C2I adapters(0xbba7e7e7e7e7e7e)
fifo write: @1699477101048012939 0x7f81e8bbac80 536: I2C/C2I adapters(0xbbbbbbaabea)
fifo write: @1699477101060085595 0x7f81e94523ca 234: java.util.Optional::of(Object) -> java.util.Optional
fifo write: @1699477101063505239 0x7f81e8bba980 464: I2C/C2I adapters(0xba7e7e7ea)
fifo write: @1699477101069446585 0x7f81e8bba680 544: I2C/C2I adapters(0xbbababab66b)
fifo write: @1699477101072772848 0x7f81e8bba380 472: I2C/C2I adapters(0xba6aaab)
fifo write: @1699477101073067062 0x7f81e8bba080 520: I2C/C2I adapters(0xbbaaaaabb)
fifo write: @1699477101073550298 0x7f81e1d30be4 497: com.google.common.collect.Lists::newArrayList() -> java.util.ArrayList
fifo write: @1699477101074142206 0x7f81e8bb9d80 504: I2C/C2I adapters(0xbbaaa66ab)
fifo write: @1699477101075405572 0x7f81e8b9e618 27: vtable stub
fifo write: @1699477101075541514 0x7f81e8b9e648 27: vtable stub
fifo write: @1699477101075645976 0x7f81e1d31214 23: java.lang.invoke.DirectMethodHandle::rebind() -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477101075950389 0x7f81e9452b2c 30: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment::access$800(com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment) -> java.lang.ref.ReferenceQueue
fifo write: @1699477101076060561 0x7f81e1d31594 140: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment::self() -> com.google.common.collect.MapMakerInternalMap$Segment
fifo write: @1699477101076106871 0x7f81e1d31994 232: com.google.common.base.Equivalence$Equals::doHash(Object) -> int
fifo write: @1699477101076293664 0x7f81e9452e4c 6: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$LinkedWeakKeyDummyValueEntry::getNext() -> com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry
fifo write: @1699477101076379715 0x7f81e1d321d4 1013: com.google.common.collect.MapMakerInternalMap::getEntry(Object) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477101076468406 0x7f81e1d32cc4 1930: com.google.common.collect.Interners$InternerImpl::intern(Object) -> Object
fifo write: @1699477101076665589 0x7f81e1d33d1a 410: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry::<init>(java.lang.ref.ReferenceQueue, Object, int, com.google.common.collect.MapMakerInternalMap$1) -> void
fifo write: @1699477101076726109 0x7f81e1d34314 512: com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry::<init>(java.lang.ref.ReferenceQueue, Object, int) -> void
fifo write: @1699477101076790310 0x7f81e1d34a37 609: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry::<init>(java.lang.ref.ReferenceQueue, Object, int) -> void
fifo write: @1699477101076904592 0x7f81e1d351dd 939: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper::newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment, Object, int, com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry) -> com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry
fifo write: @1699477101077120715 0x7f81e94531a1 402: java.lang.ref.WeakReference::<init>(Object, java.lang.ref.ReferenceQueue) -> void
fifo write: @1699477101077775493 0x7f81e1d35dff 5753: aqh::hashCode() -> int
fifo write: @1699477101077996926 0x7f81e94536d9 82: java.util.AbstractCollection::isEmpty() -> boolean
fifo write: @1699477101078060717 0x7f81e9453ada 269: jdk.internal.org.objectweb.asm.MethodVisitor::<init>(int, jdk.internal.org.objectweb.asm.MethodVisitor) -> void
fifo write: @1699477101078150718 0x7f81e1d38354 442: com.google.common.collect.Maps::newLinkedHashMap() -> java.util.LinkedHashMap
fifo write: @1699477101078708325 0x7f81e9453f53 340: java.util.EnumMap::get(Object) -> Object
fifo write: @1699477101079049229 0x7f81e945454c 6: org.apache.logging.log4j.core.config.AppenderControl::getAppender() -> org.apache.logging.log4j.core.Appender
fifo write: @1699477101080910993 0x7f81e1d38a3c 1942: cji::a(String, cja) -> cja
fifo write: @1699477101082617495 0x7f81e1d39af7 710: org.apache.logging.log4j.util.StackLocator::lambda$getCallerClass$1(Class, java.util.function.Predicate, Class) -> boolean
fifo write: @1699477101082669816 0x7f81e1d3a2b4 1062: org.apache.logging.log4j.util.StackLocator$$Lambda$37.0x00007f81600832b8::test(Object) -> boolean
fifo write: @1699477101082956599 0x7f81e8bb9a80 504: I2C/C2I adapters(0xbbbbb6a666)
fifo write: @1699477101087875533 0x7f81e8bb9780 480: I2C/C2I adapters(0xb7e7e7e66b)
fifo write: @1699477101087888903 0x7f81e8bb9480 464: I2C/C2I adapters(0x7e7e7e66)
fifo write: @1699477101089146599 0x7f81e1d3ac14 231: cjf::b() -> boolean
fifo write: @1699477101089183609 0x7f81e1d3b114 484: cjf::d() -> cja
fifo write: @1699477101089223690 0x7f81e1d3b714 655: cjf::a(cja) -> boolean
fifo write: @1699477101089263181 0x7f81e1d3beb4 492: ehx::a(cja) -> boolean
fifo write: @1699477101089412792 0x7f81e1d3c5d4 1104: cxg::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101089620895 0x7f81e94548be 3136: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::put(Object, Object) -> Object
fifo write: @1699477101090644928 0x7f81e1d3d059 1005: java.util.stream.AbstractPipeline::copyIntoWithCancel(java.util.stream.Sink, java.util.Spliterator) -> boolean
fifo write: @1699477101090822311 0x7f81e94568ff 144: eid::a(ehz, ehz, ehz, ehw, ehw, ehr) -> boolean
fifo write: @1699477101090881311 0x7f81e1d3d9c3 684: java.util.stream.ReferencePipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477101095933637 0x7f81e9456ec9 1998: eid::c(eig, eig, ehr) -> boolean
fifo write: @1699477101096401783 0x7f81e1d3e137 862: czy::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101098182306 0x7f81e9458bf3 2156: aev$a::hashCode() -> int
fifo write: @1699477101100312443 0x7f81e945a914 59: Double::isNaN(double) -> boolean
fifo write: @1699477101100448985 0x7f81e1d3f114 1771: cvq::f(dfj, cpb, gw) -> eig
fifo write: @1699477101100713738 0x7f81e1d3fed4 1322: cvq::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101100769459 0x7f81e1d40a14 1771: cvq::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101101906374 0x7f81e1d417d4 1130: cvp::f(dfj, cpb, gw) -> eig
fifo write: @1699477101103965940 0x7f81e945ac67 476: eif::<init>(ehw, int, int, int, int, int, int) -> void
fifo write: @1699477101104252584 0x7f81e945b2f4 886: eie::a(ehw, ha$a, int) -> ehw
fifo write: @1699477101105925756 0x7f81e945bf13 1440: dfi$a::D() -> boolean
fifo write: @1699477101109312339 0x7f81e945d954 2361: dfi$a::a() -> void
fifo write: @1699477101113217610 0x7f81e1d42194 276: cyh::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101113399632 0x7f81e1d426ff 1753: cyh::h(dfj) -> int
fifo write: @1699477101115870984 0x7f81e945febb 4066: eig::b(ha) -> eig
fifo write: @1699477101117862870 0x7f81e1d435b7 612: dbm::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101118504928 0x7f81e1d43c74 143: arw::a(double, double, double) -> double
fifo write: @1699477101119234297 0x7f81e9462ba6 2665: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::rehash(int) -> void
fifo write: @1699477101124365114 0x7f81e94644e5 6441: cux::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101139648160 0x7f81e94689e5 2009: czy::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101153950655 0x7f81e946a26f 492: dbr::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101159895802 0x7f81e946abcc 1851: java.util.stream.ReferencePipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477101171768965 0x7f81e946c7c5 1885: dbr::c(dfj, cpb, gw) -> boolean
fifo write: @1699477101171936787 0x7f81e946e0e1 2365: java.util.stream.AbstractPipeline::copyIntoWithCancel(java.util.stream.Sink, java.util.Spliterator) -> boolean
fifo write: @1699477101199407531 0x7f81e1d441b4 1951: dfi$a::D() -> boolean
fifo write: @1699477101199505432 0x7f81e1d45299 2278: dfi$a::a() -> void
fifo write: @1699477101200105900 0x7f81e1d46254 139: arw::a(double) -> int
fifo write: @1699477101200197891 0x7f81e1d46734 1865: cwf::n(dfj) -> eig
fifo write: @1699477101200230752 0x7f81e1d475f7 775: ehu::a(ha$a, double) -> int
fifo write: @1699477101200687157 0x7f81e1d48214 31: csr::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101200779559 0x7f81e1d486b4 1847: csr::h(dfj) -> eig
fifo write: @1699477101213679075 0x7f81e94705e5 3849: cvq::b_(dfj, cpb, gw) -> eig
fifo write: @1699477101216207488 0x7f81e1d49874 1806: czy::c_(dfj) -> eam
fifo write: @1699477101226987876 0x7f81e947336a 2201: dbr::c_(dfj) -> eam
fifo write: @1699477101228975842 0x7f81e1d4a637 761: ctj::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101230080526 0x7f81e1d4b1f4 1806: ctj::c_(dfj) -> eam
fifo write: @1699477101230646153 0x7f81e1d4bfd7 947: crv::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101233390929 0x7f81e1d4cd74 1806: czo::c_(dfj) -> eam
fifo write: @1699477101234728416 0x7f81e94752c5 1414: ctj::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101235533986 0x7f81e1d4db14 488: cxt::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101238116220 0x7f81e1d4e0f7 463: java.util.Optional::ofNullable(Object) -> java.util.Optional
fifo write: @1699477101238837319 0x7f81e1d4e759 1163: com.google.common.collect.RegularImmutableMap::get(Object, com.google.common.collect.ImmutableMapEntry[], int) -> Object
fifo write: @1699477101240998787 0x7f81e1d4f294 47: com.google.common.collect.RegularImmutableBiMap::get(Object) -> Object
fifo write: @1699477101241089018 0x7f81e1d4f6b4 1331: dbx::c(csv) -> java.util.Optional
fifo write: @1699477101241188729 0x7f81e1d501b4 888: com.google.common.base.Suppliers$NonSerializableMemoizingSupplier::get() -> Object
fifo write: @1699477101241302081 0x7f81e1d50b97 2155: dca::e_(dfj) -> boolean
fifo write: @1699477101247242888 0x7f81e1d51b37 788: czd::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101247322399 0x7f81e1d52374 6: cwg::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101247688273 0x7f81e1d52737 635: css::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477101274233835 0x7f81e1d53239 329: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::put(Object, int) -> int
fifo write: @1699477101275512652 0x7f81e94769d4 2349: dfi$a::a() -> void
fifo write: @1699477101278031194 0x7f81e1d53814 340: com.mojang.serialization.Encoder$1::<init>(com.mojang.serialization.Encoder, java.util.function.Function) -> void
fifo write: @1699477101278091405 0x7f81e1d53d6a 447: com.mojang.serialization.Encoder::comap(java.util.function.Function) -> com.mojang.serialization.Encoder
fifo write: @1699477101278563371 0x7f81e9478c13 1432: dfi$a::D() -> boolean
fifo write: @1699477101279445193 0x7f81e1d54314 248: java.util.stream.ReferencePipeline$2$1::begin(long) -> void
fifo write: @1699477101279513063 0x7f81e1d547b7 502: java.util.stream.ReferencePipeline$2::<init>(java.util.stream.ReferencePipeline, java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int, java.util.function.Predicate) -> void
fifo write: @1699477101279563334 0x7f81e1d54e34 1075: java.util.stream.ReferencePipeline$2$1::<init>(java.util.stream.ReferencePipeline$2, java.util.stream.Sink) -> void
fifo write: @1699477101279612205 0x7f81e1d557ad 1184: java.util.stream.ReferencePipeline$2::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477101279652675 0x7f81e947a509 402: java.lang.invoke.MethodHandles$Lookup::<init>(Class, Class, int) -> void
fifo write: @1699477101279702896 0x7f81e1d561df 1088: java.util.stream.ReferencePipeline::filter(java.util.function.Predicate) -> java.util.stream.Stream
fifo write: @1699477101279991810 0x7f81e947aaec 155: java.util.stream.Sink$ChainedReference::<init>(java.util.stream.Sink) -> void
fifo write: @1699477101280085211 0x7f81e1d56c14 237: rb::<init>(int) -> void
fifo write: @1699477101280159662 0x7f81e1d57094 137: rk::<init>() -> void
fifo write: @1699477101284634150 0x7f81e1d57494 202: org.apache.logging.log4j.status.StatusLogger::isDebugPropertyEnabled() -> boolean
fifo write: @1699477101284802432 0x7f81e1d57954 723: org.apache.logging.log4j.util.PropertiesUtil::getBooleanProperty(String, boolean, boolean) -> boolean
fifo write: @1699477101288344417 0x7f81e1d58574 84: java.util.concurrent.CopyOnWriteArrayList::size() -> int
fifo write: @1699477101288577560 0x7f81e1d589de 1025: org.apache.logging.log4j.status.StatusLogger::isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker) -> boolean
fifo write: @1699477101294276334 0x7f81e1d593d4 1242: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477101294425986 0x7f81e947b1ef 62: com.mojang.datafixers.DSL::and(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.Type
fifo write: @1699477101294895812 0x7f81e947b556 301: com.mojang.datafixers.types.templates.Product$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477101294994763 0x7f81e947bc09 382: com.mojang.datafixers.types.templates.Product$ProductType::<init>(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477101295259367 0x7f81e947c14c 2: eca::c() -> int
fifo write: @1699477101295284557 0x7f81e947c44c 6: t::d() -> eca
fifo write: @1699477101295576271 0x7f81e1d59e94 584: java.util.Optional::orElseThrow(java.util.function.Supplier) -> Object
fifo write: @1699477101297047220 0x7f81e1d5a514 240: com.mojang.datafixers.types.templates.Named$NamedType::findChoiceType(String, int) -> java.util.Optional
fifo write: @1699477101297162391 0x7f81e1d5a994 623: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::unfold() -> com.mojang.datafixers.types.Type
fifo write: @1699477101297536546 0x7f81e1d5b096 37: java.lang.invoke.MethodHandles$Lookup::getDirectConstructorNoSecurityManager(Class, java.lang.invoke.MemberName) -> java.lang.invoke.MethodHandle
fifo write: @1699477101298652071 0x7f81e947c75a 705: java.util.Base64$Decoder::decodeBlock(byte[], int, int, byte[], int, boolean, boolean) -> int
fifo write: @1699477101298749632 0x7f81e1d5b454 183: com.google.common.math.IntMath::isPowerOfTwo(int) -> boolean
fifo write: @1699477101298779942 0x7f81e1d5b8f4 305: com.google.common.math.MathPreconditions::checkRoundingUnnecessary(boolean) -> void
fifo write: @1699477101298843563 0x7f81e1d5be54 559: com.google.common.math.MathPreconditions::checkPositive(String, int) -> int
fifo write: @1699477101299061266 0x7f81e947d0d8 925: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment, Object, int, com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry
fifo write: @1699477101303016507 0x7f81e1d5c614 191: java.lang.invoke.MethodHandle::viewAsType(java.lang.invoke.MethodType, boolean) -> java.lang.invoke.MethodHandle
fifo write: @1699477101303120288 0x7f81e1d5ca94 167: java.lang.invoke.BoundMethodHandle::copyWith(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> java.lang.invoke.MethodHandle
fifo write: @1699477101303648335 0x7f81e1d5d056 3489: java.lang.invoke.LambdaForm$MH.0x00007f8160100800::invoke(Object, Object, Object) -> Object
fifo write: @1699477101304238463 0x7f81e8bb9180 504: I2C/C2I adapters(0xbbaabbbb)
fifo write: @1699477101304403005 0x7f81e1d5e997 6711: aew::toString() -> String
fifo write: @1699477101304708779 0x7f81e1d61757 8830: java.lang.invoke.StringConcatFactory::makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, String, java.lang.invoke.MethodType, String, Object[]) -> java.lang.invoke.CallSite
fifo write: @1699477101305267576 0x7f81e1d66007 16445: java.lang.invoke.StringConcatFactory::generateMHInlineCopy(java.lang.invoke.MethodType, java.util.List) -> java.lang.invoke.MethodHandle
fifo write: @1699477101307893200 0x7f81e1d6cf97 15198: java.lang.invoke.DirectMethodHandle::makePreparedLambdaForm(java.lang.invoke.MethodType, int) -> java.lang.invoke.LambdaForm
fifo write: @1699477101312212066 0x7f81e1d72f94 275: com.mojang.serialization.codecs.RecordCodecBuilder::<init>(java.util.function.Function, java.util.function.Function, com.mojang.serialization.MapDecoder) -> void
fifo write: @1699477101312277066 0x7f81e1d734f4 301: com.mojang.serialization.codecs.RecordCodecBuilder::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.serialization.codecs.RecordCodecBuilder
fifo write: @1699477101312436688 0x7f81e947dd39 102: jdk.internal.org.objectweb.asm.Attribute::computeAttributesSize(jdk.internal.org.objectweb.asm.SymbolTable, int, int) -> int
fifo write: @1699477101312752803 0x7f81e8bb8e80 456: I2C/C2I adapters(0xb66aa)
fifo write: @1699477101313586153 0x7f81e8bb8b80 464: I2C/C2I adapters(0xb66aab)
fifo write: @1699477101314633436 0x7f81e8bb8880 472: I2C/C2I adapters(0xb66aabb)
fifo write: @1699477101314859259 0x7f81e947e9cc 6: sun.invoke.util.Wrapper::primitiveSimpleName() -> String
fifo write: @1699477101315528068 0x7f81e947ecf3 3366: jdk.internal.org.objectweb.asm.MethodWriter::visitLabel(jdk.internal.org.objectweb.asm.Label) -> void
fifo write: @1699477101316668342 0x7f81e9480dd8 11626: java.util.HashMap::getNode(Object) -> java.util.HashMap$Node
fifo write: @1699477101317826367 0x7f81e8bb8580 504: I2C/C2I adapters(0xbbababbb)
fifo write: @1699477101319131074 0x7f81e9487558 18: java.lang.invoke.BoundMethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> void
fifo write: @1699477101323212057 0x7f81e1d73994 695: java.lang.invoke.MethodHandles::filterArgumentsCheckArity(java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle[]) -> void
fifo write: @1699477101325563747 0x7f81e8bb8280 504: I2C/C2I adapters(0xbbbaabba)
fifo write: @1699477101327820516 0x7f81e8bb7f80 496: I2C/C2I adapters(0xbbbbbb6a)
fifo write: @1699477101327833906 0x7f81e8bb7c80 472: I2C/C2I adapters(0xbbbbb6a)
fifo write: @1699477101329436997 0x7f81e94884d8 1019: java.lang.invoke.AbstractValidatingLambdaMetafactory::isAdaptableTo(Class, Class, boolean) -> boolean
fifo write: @1699477101331309231 0x7f81e94898ea 299: com.mojang.serialization.MapCodec::<init>() -> void
fifo write: @1699477101344650894 0x7f81e1d74514 327: buj$$Lambda$1883.0x00007f8160600d38::test(Object) -> boolean
fifo write: @1699477101344714094 0x7f81e1d74a1e 331: buj::c(dfj) -> boolean
fifo write: @1699477101345395743 0x7f81e1d74f74 39: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::maxRunBeforeFallback(int) -> int
fifo write: @1699477101345657897 0x7f81e1d7535e 1072: java.util.ImmutableCollections$SetN::probe(Object) -> int
fifo write: @1699477101345746848 0x7f81e1d75e59 1044: java.util.AbstractCollection::addAll(java.util.Collection) -> boolean
fifo write: @1699477101345821629 0x7f81e1d76794 332: buj$$Lambda$1890.0x00007f8160601d50::accept(Object) -> void
fifo write: @1699477101345926980 0x7f81e1d76cf8 1623: com.google.common.math.IntMath::log2(int, java.math.RoundingMode) -> int
fifo write: @1699477101346055902 0x7f81e1d77b77 1326: com.google.common.collect.ImmutableSet::chooseTableSize(int) -> int
fifo write: @1699477101346476227 0x7f81e1d78877 3534: buj::a(he, dfj) -> void
fifo write: @1699477101347622162 0x7f81e1d7a094 312: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry::next() -> it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry
fifo write: @1699477101347680453 0x7f81e1d7a614 470: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$TreeIterator::updateNext() -> void
fifo write: @1699477101347764004 0x7f81e1d7ad54 1234: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$TreeIterator::nextEntry() -> it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry
fifo write: @1699477101348672345 0x7f81e9489f53 13679: Class::descriptorString() -> String
fifo write: @1699477101350305287 0x7f81e9491475 1034: java.util.HashMap$EntrySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477101350430868 0x7f81e9492180 789: java.util.AbstractCollection::toArray() -> Object[]
fifo write: @1699477101354775774 0x7f81e94934bd 8866: java.util.concurrent.ConcurrentHashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477101358184958 0x7f81e9498514 4097: java.util.stream.ReferencePipeline$7$1::accept(Object) -> void
fifo write: @1699477101362807898 0x7f81e1d7b7da 1187: com.mojang.serialization.MapDecoder$4::<init>(com.mojang.serialization.MapDecoder, java.util.function.Function) -> void
fifo write: @1699477101362878328 0x7f81e1d7c2b0 1299: com.mojang.serialization.MapDecoder::map(java.util.function.Function) -> com.mojang.serialization.MapDecoder
fifo write: @1699477101363419165 0x7f81e949b5b9 6262: java.util.zip.ZipFile$ZipFileInputStream::close() -> void
fifo write: @1699477101365956538 0x7f81e1d7cd94 185: com.mojang.serialization.MapCodec$$Lambda$238.0x00007f81601a0cd8::<init>(com.mojang.serialization.MapCodec) -> void
fifo write: @1699477101366024659 0x7f81e1d7d2b0 1299: com.mojang.serialization.MapEncoder::comap(java.util.function.Function) -> com.mojang.serialization.MapEncoder
fifo write: @1699477101366089030 0x7f81e1d7ddda 1187: com.mojang.serialization.MapEncoder$1::<init>(com.mojang.serialization.MapEncoder, java.util.function.Function) -> void
fifo write: @1699477101366556076 0x7f81e1d7e93d 4528: com.mojang.serialization.MapCodec::xmap(java.util.function.Function, java.util.function.Function) -> com.mojang.serialization.MapCodec
fifo write: @1699477101367165023 0x7f81e1d80617 28: com.mojang.serialization.MapCodec::forGetter(java.util.function.Function) -> com.mojang.serialization.codecs.RecordCodecBuilder
fifo write: @1699477101367223534 0x7f81e1d80a14 185: com.mojang.serialization.codecs.RecordCodecBuilder$$Lambda$178.0x00007f81601864c8::<init>(com.mojang.serialization.MapCodec) -> void
fifo write: @1699477101367432997 0x7f81e1d80f32 1688: com.mojang.serialization.codecs.RecordCodecBuilder::of(java.util.function.Function, com.mojang.serialization.MapCodec) -> com.mojang.serialization.codecs.RecordCodecBuilder
fifo write: @1699477101375245128 0x7f81e1d81cd4 1118: AbstractStringBuilder::<init>(String) -> void
fifo write: @1699477101378077584 0x7f81e1d82794 185: com.mojang.serialization.MapCodec$MapCodecCodec::<init>(com.mojang.serialization.MapCodec) -> void
fifo write: @1699477101378124045 0x7f81e1d82c63 292: com.mojang.serialization.MapCodec::codec() -> com.mojang.serialization.Codec
fifo write: @1699477101378498040 0x7f81e1d83194 167: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment::maybeDrainReferenceQueues() -> void
fifo write: @1699477101378581061 0x7f81e1d83614 890: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper::setValue(com.google.common.collect.MapMakerInternalMap$Segment, com.google.common.collect.MapMakerInternalMap$InternalEntry, Object) -> void
fifo write: @1699477101378761123 0x7f81e1d84114 581: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper::newEntry(com.google.common.collect.MapMakerInternalMap$Segment, Object, int, com.google.common.collect.MapMakerInternalMap$InternalEntry) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477101378933295 0x7f81e1d84781 1851: com.google.common.collect.MapMakerInternalMap$Segment::drainKeyReferenceQueue(java.lang.ref.ReferenceQueue) -> void
fifo write: @1699477101379096197 0x7f81e949ec59 3994: java.lang.invoke.TypeConvertingMethodAdapter::cast(String, String) -> void
fifo write: @1699477101379410532 0x7f81e94a1321 402: java.lang.ref.Reference::<init>(Object, java.lang.ref.ReferenceQueue) -> void
fifo write: @1699477101379911968 0x7f81e1d857f9 779: java.lang.invoke.InvokerBytecodeGenerator::generateCustomizedCodeBytes() -> byte[]
fifo write: @1699477101380022149 0x7f81e1d861f9 543: java.lang.invoke.InvokerBytecodeGenerator::resolveInvokerMember(Class, String, java.lang.invoke.MethodType) -> java.lang.invoke.MemberName
fifo write: @1699477101380514676 0x7f81e1d86c7f 13310: java.lang.invoke.InvokerBytecodeGenerator::classDataValues() -> java.util.List
fifo write: @1699477101383823648 0x7f81e94a1e7b 3072: AbstractStringBuilder::append(int) -> AbstractStringBuilder
fifo write: @1699477101384304285 0x7f81e94a39b8 18: java.lang.invoke.MethodHandleNatives::findMethodHandleType(Class, Class[]) -> java.lang.invoke.MethodType
fifo write: @1699477101385488400 0x7f81e94a3fb9 122: jdk.internal.org.objectweb.asm.Attribute::putAttributes(jdk.internal.org.objectweb.asm.SymbolTable, int, int, jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477101386060957 0x7f81e94a43d7 35: jdk.internal.ref.CleanerImpl$PhantomCleanableRef::performCleanup() -> void
fifo write: @1699477101386162969 0x7f81e94a46c2 257: jdk.internal.org.objectweb.asm.AnnotationWriter::computeAnnotationsSize(jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter, jdk.internal.org.objectweb.asm.AnnotationWriter) -> int
fifo write: @1699477101389723225 0x7f81e94a4cb5 106: java.lang.invoke.InnerClassLambdaMetafactory::getOpcodeOffset(Class) -> int
fifo write: @1699477101392846595 0x7f81e1b6c694 340: com.mojang.serialization.Decoder$1::<init>(com.mojang.serialization.Decoder, java.util.function.Function) -> void
fifo write: @1699477101392978187 0x7f81e1c059ea 447: com.mojang.serialization.Decoder::flatMap(java.util.function.Function) -> com.mojang.serialization.Decoder
fifo write: @1699477101393920249 0x7f81e8bb7980 480: I2C/C2I adapters(0xbbaaabb)
fifo write: @1699477101394041130 0x7f81e94a5650 107: jdk.internal.org.objectweb.asm.MethodWriter::visitMaxs(int, int) -> void
fifo write: @1699477101394466876 0x7f81e8bb7680 504: I2C/C2I adapters(0xbbaaabbb)
fifo write: @1699477101395988896 0x7f81e94a5d54 375: sun.invoke.util.Wrapper::forPrimitiveType(Class) -> sun.invoke.util.Wrapper
fifo write: @1699477101397695298 0x7f81e94a68d4 1599: jdk.internal.org.objectweb.asm.MethodWriter::computeMethodInfoSize() -> int
fifo write: @1699477101397709828 0x7f81e8bb7380 504: I2C/C2I adapters(0xbbbebbbbb)
fifo write: @1699477101398117073 0x7f81e94a8136 3241: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::rehash(int) -> void
fifo write: @1699477101398174634 0x7f81e8bb7080 488: I2C/C2I adapters(0xbbebbbbb)
fifo write: @1699477101398274515 0x7f81e1c053f4 325: java.lang.invoke.LambdaFormBuffer::indexOf(java.lang.invoke.LambdaForm$Name, java.lang.invoke.LambdaForm$Name[]) -> int
fifo write: @1699477101398541798 0x7f81e1b6f6b9 530: java.lang.invoke.InvokerBytecodeGenerator::methodPrologue() -> void
fifo write: @1699477101399049405 0x7f81e1b6eb74 956: java.lang.invoke.InvokerBytecodeGenerator::emitReturn(java.lang.invoke.LambdaForm$Name) -> void
fifo write: @1699477101399464870 0x7f81e1d8b797 467: java.lang.invoke.InvokerBytecodeGenerator::resolveFrom(String, java.lang.invoke.MethodType, Class) -> java.lang.invoke.MemberName
fifo write: @1699477101400871579 0x7f81e94aa61d 781: sun.invoke.util.VerifyType::isNullConversion(Class, Class, boolean) -> boolean
fifo write: @1699477101401577188 0x7f81e94ab355 451: java.lang.invoke.MethodHandles$Lookup::in(Class) -> java.lang.invoke.MethodHandles$Lookup
fifo write: @1699477101402414048 0x7f81e8bb6d80 448: I2C/C2I adapters(0x66aa)
fifo write: @1699477101403471012 0x7f81e94aba35 5582: java.util.Collections$SetFromMap::remove(Object) -> boolean
fifo write: @1699477101403763756 0x7f81e8bb6a00 672: I2C/C2I adapters(0xbbaaaa7eaaaaabb6b)
fifo write: @1699477101404188531 0x7f81e94ae799 630: java.lang.invoke.MethodHandles$Lookup::checkAccess(byte, Class, java.lang.invoke.MemberName) -> void
fifo write: @1699477101406362139 0x7f81e8bb6680 696: I2C/C2I adapters(0xbbaaaa7eaaaaabb6bb)
fifo write: @1699477101406649543 0x7f81e1ba7854 94: sun.invoke.util.Wrapper::hashChar(char) -> int
fifo write: @1699477101407831598 0x7f81e1d8bf5f 2766: java.lang.invoke.TypeConvertingMethodAdapter::hashWrapperName(String) -> int
fifo write: @1699477101408042841 0x7f81e1d8d574 467: sun.invoke.util.Wrapper::isWrapperType(Class) -> boolean
fifo write: @1699477101409506790 0x7f81e94afb89 5744: jdk.internal.org.objectweb.asm.ClassWriter::visitMethod(int, String, String, String, String[]) -> jdk.internal.org.objectweb.asm.MethodVisitor
fifo write: @1699477101412559489 0x7f81e94b3270 1559: sun.invoke.util.VerifyAccess::isMemberAccessible(Class, Class, int, Class, Class, int) -> boolean
fifo write: @1699477101413704943 0x7f81e94b48f4 2746: java.lang.invoke.MemberName::getInvocationType() -> java.lang.invoke.MethodType
fifo write: @1699477101417170848 0x7f81e8bb6380 584: I2C/C2I adapters(0xbbbbbb7e7e7e7e7ebb)
fifo write: @1699477101417184128 0x7f81e8bb6080 464: I2C/C2I adapters(0xb7e7eaa6)
fifo write: @1699477101417491522 0x7f81e8bb5d80 584: I2C/C2I adapters(0xbbbbbb7e7e7e67ebb)
fifo write: @1699477101417504552 0x7f81e8bb5a80 472: I2C/C2I adapters(0x7eb7e7e7ea)
fifo write: @1699477101417517503 0x7f81e8bb5700 744: I2C/C2I adapters(0xbbbbbbeb7e7e7e7e7e666aa7ebb)
fifo write: @1699477101417548703 0x7f81e8bb5400 472: I2C/C2I adapters(0xb6bbbbb)
fifo write: @1699477101417561513 0x7f81e8bb5100 536: I2C/C2I adapters(0xb6bbbbbbbb)
fifo write: @1699477101417574013 0x7f81e8bb4e00 512: I2C/C2I adapters(0xb6bbbbbbb)
fifo write: @1699477101418522316 0x7f81e1d8dd37 3156: java.lang.invoke.TypeConvertingMethodAdapter::wrapperOrNullFromDescriptor(String) -> sun.invoke.util.Wrapper
fifo write: @1699477101419216645 0x7f81e8bb4b00 496: I2C/C2I adapters(0xb6bbbbbb)
fifo write: @1699477101419575009 0x7f81e1d8f85b 2676: sun.invoke.util.Wrapper::forBasicType(char) -> sun.invoke.util.Wrapper
fifo write: @1699477101420599782 0x7f81e8bb4780 672: I2C/C2I adapters(0xbbbbbbeb7e7e7e666aa7eb)
fifo write: @1699477101420615683 0x7f81e8bb4480 472: I2C/C2I adapters(0xbbb7e66)
fifo write: @1699477101420960477 0x7f81e8bb4180 472: I2C/C2I adapters(0xbbbab66)
fifo write: @1699477101421344882 0x7f81e8bb3e80 488: I2C/C2I adapters(0xbbbab66b)
fifo write: @1699477101427078926 0x7f81e94b782f 556: sun.security.provider.ByteArrayAccess::i2bBig(int[], int, byte[], int, int) -> void
fifo write: @1699477101427115437 0x7f81e8bb3b80 560: I2C/C2I adapters(0xbbbbbbbbbaa)
fifo write: @1699477101427734185 0x7f81e8bb3880 520: I2C/C2I adapters(0xbbbbbabaa)
fifo write: @1699477101427750095 0x7f81e8bb3580 544: I2C/C2I adapters(0xbbbbbbaaa66)
fifo write: @1699477101427765065 0x7f81e8bb3280 472: I2C/C2I adapters(0xbbbb6bb)
fifo write: @1699477101428065779 0x7f81e94b8122 1061: java.util.jar.JarVerifier$VerifierStream::read(byte[], int, int) -> int
fifo write: @1699477101429329915 0x7f81e8bb1500 592: I2C/C2I adapters(0xbbbbbbbbbaab)
fifo write: @1699477101429853032 0x7f81e90f2b54 4517: java.lang.invoke.TypeConvertingMethodAdapter::convertType(Class, Class, Class) -> void
fifo write: @1699477101431262430 0x7f81e14d30c6 674: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object, Object, Object) -> Object
fifo write: @1699477101431276840 0x7f81e8bb2f80 456: I2C/C2I adapters(0xbaaabb)
fifo write: @1699477101432783340 0x7f81e145d02b 1947: java.lang.invoke.MethodTypeForm::setCachedLambdaForm(int, java.lang.invoke.LambdaForm) -> java.lang.invoke.LambdaForm
fifo write: @1699477101441515792 0x7f81e8bb2c80 536: I2C/C2I adapters(0xbbbbbb6a6b6)
fifo write: @1699477101441929688 0x7f81e14b65e4 4061: java.lang.invoke.InvokerBytecodeGenerator::<init>(java.lang.invoke.LambdaForm, int, String, String, java.lang.invoke.MethodType) -> void
fifo write: @1699477101442365263 0x7f81e8bb2980 560: I2C/C2I adapters(0xbbbbbb6a6b6b)
fifo write: @1699477101442780589 0x7f81e8bb2680 640: I2C/C2I adapters(0xbbaabbaaaabaab)
fifo write: @1699477101443862963 0x7f81e8bb2300 656: I2C/C2I adapters(0xbbaabbaaaabaabb)
fifo write: @1699477101444424150 0x7f81e8bb2000 496: I2C/C2I adapters(0xbbaaaa6b)
fifo write: @1699477101445194730 0x7f81e8bb1d00 512: I2C/C2I adapters(0xbbaaaa6bb)
fifo write: @1699477101445766037 0x7f81e8bb1800 448: I2C/C2I adapters(0xbaa6b)
fifo write: @1699477101445971660 0x7f81e1420674 90: sun.invoke.util.Wrapper::isSigned() -> boolean
fifo write: @1699477101446176433 0x7f81e901f94c 6: StackStreamFactory$StackFrameTraverser$StackFrameBuffer::frames() -> StackFrameInfo[]
fifo write: @1699477101446314814 0x7f81e8bb1200 520: I2C/C2I adapters(0xbbbbaaaab)
fifo write: @1699477101446325485 0x7f81e8bb0e80 656: I2C/C2I adapters(0xbbbbaaaaaaaa7eab)
fifo write: @1699477101446335845 0x7f81e8bb0b80 528: I2C/C2I adapters(0xbbbaabaa7ea)
fifo write: @1699477101446346025 0x7f81e8bb0880 528: I2C/C2I adapters(0xbaabba7ebaa)
fifo write: @1699477101446356155 0x7f81e8bb0580 464: I2C/C2I adapters(0xbaabaa7e)
fifo write: @1699477101448278350 0x7f81e8bb0280 624: I2C/C2I adapters(0xbbbb7e7e7e7e7e7eaaaaa)
fifo write: @1699477101448309890 0x7f81e8baff80 456: I2C/C2I adapters(0xbbba6)
fifo write: @1699477101450749362 0x7f81e16b7dd4 857: sun.invoke.util.Wrapper::isConvertibleFrom(sun.invoke.util.Wrapper) -> boolean
fifo write: @1699477101451015905 0x7f81e1524449 1008: java.lang.invoke.TypeConvertingMethodAdapter::unboxMethod(sun.invoke.util.Wrapper) -> String
fifo write: @1699477101451087296 0x7f81e141d2f7 1347: java.lang.invoke.TypeConvertingMethodAdapter::toWrapper(String) -> sun.invoke.util.Wrapper
fifo write: @1699477101451151247 0x7f81e1530749 1008: java.lang.invoke.TypeConvertingMethodAdapter::unboxingDescriptor(sun.invoke.util.Wrapper) -> String
fifo write: @1699477101451212648 0x7f81e1a2585c 1648: java.lang.invoke.TypeConvertingMethodAdapter::unbox(String, sun.invoke.util.Wrapper) -> void
fifo write: @1699477101451279739 0x7f81e1650819 3040: sun.invoke.util.Wrapper::forWrapperType(Class) -> sun.invoke.util.Wrapper
fifo write: @1699477101452214631 0x7f81e8bafc80 488: I2C/C2I adapters(0xbbbbb666)
fifo write: @1699477101453401966 0x7f81e920bbd7 35: jdk.internal.reflect.DelegatingConstructorAccessorImpl::newInstance(Object[]) -> Object
fifo write: @1699477101454044444 0x7f81e93dacd0 123: java.util.ImmutableCollections$Set12$1::next() -> Object
fifo write: @1699477101454402438 0x7f81e90d3fc3 4454: sun.invoke.util.BytecodeDescriptor::unparseSig(Class, StringBuilder) -> void
fifo write: @1699477101455745766 0x7f81e90d3b30 147: java.lang.invoke.MethodHandles$Lookup$ClassFile::readUnsignedShort(byte[], int) -> int
fifo write: @1699477101457212214 0x7f81e8bbf500 624: I2C/C2I adapters(0xbbbb7e7eabbbaa7ea)
fifo write: @1699477101458988757 0x7f81e8bbf200 456: I2C/C2I adapters(0xb7e7eab)
fifo write: @1699477101459167600 0x7f81e141fe94 168: java.lang.invoke.InvokerBytecodeGenerator::<init>(String, java.lang.invoke.LambdaForm, java.lang.invoke.MethodType) -> void
fifo write: @1699477101459232120 0x7f81e14a2f4a 337: java.lang.invoke.MethodHandles$Lookup$ClassFile::newInstanceNoCheck(String, byte[]) -> java.lang.invoke.MethodHandles$Lookup$ClassFile
fifo write: @1699477101459755567 0x7f81e8bbee80 648: I2C/C2I adapters(0xbbbb7e7eabbbaa7eab)
fifo write: @1699477101459997520 0x7f81e8bbeb80 472: I2C/C2I adapters(0xbbaa6ab)
fifo write: @1699477101460010640 0x7f81e8bbe880 536: I2C/C2I adapters(0xbbbbaa67ea6b)
fifo write: @1699477101460160502 0x7f81e8bbe580 576: I2C/C2I adapters(0xbabbaabbb6aa)
fifo write: @1699477101461086864 0x7f81e91f0e59 2683: java.lang.reflect.Constructor::newInstanceWithCaller(Object[], boolean, Class) -> Object
fifo write: @1699477101461127715 0x7f81e8bbe280 600: I2C/C2I adapters(0xbabbaabbb6aab)
fifo write: @1699477101461550160 0x7f81e9047717 1563: jdk.internal.org.objectweb.asm.Handler::putExceptionTable(jdk.internal.org.objectweb.asm.Handler, jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477101461650682 0x7f81e8bbdf80 520: I2C/C2I adapters(0xbabb6bbba6)
fifo write: @1699477101462455312 0x7f81e8bbdc80 544: I2C/C2I adapters(0xbabb6bbba6b)
fifo write: @1699477101463421404 0x7f81e8bbd980 488: I2C/C2I adapters(0xbaaaaab6)
fifo write: @1699477101463949041 0x7f81e8bbd680 512: I2C/C2I adapters(0xbaaaaab6b)
fifo write: @1699477101464087123 0x7f81e1466914 340: com.mojang.serialization.Encoder$2::<init>(com.mojang.serialization.Encoder, java.util.function.Function) -> void
fifo write: @1699477101464153574 0x7f81e162d3c9 1008: java.lang.invoke.TypeConvertingMethodAdapter::wrapperName(sun.invoke.util.Wrapper) -> String
fifo write: @1699477101464199355 0x7f81e14a7dea 447: com.mojang.serialization.Encoder::flatComap(java.util.function.Function) -> com.mojang.serialization.Encoder
fifo write: @1699477101464512739 0x7f81e8bbd380 448: I2C/C2I adapters(0xbeaaa6)
fifo write: @1699477101464523649 0x7f81e8bbd080 464: I2C/C2I adapters(0xbbb6ab)
fifo write: @1699477101464576029 0x7f81e8bbcd80 512: I2C/C2I adapters(0xbbb6abaab)
fifo write: @1699477101464937184 0x7f81e9211bfd 745: com.google.common.collect.MapMakerInternalMap$Segment::getEntry(Object, int) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477101465053276 0x7f81e8bbca80 464: I2C/C2I adapters(0xbbeaaa6)
fifo write: @1699477101465147267 0x7f81e8bbc780 464: I2C/C2I adapters(0xbeaaa6b)
fifo write: @1699477101465439011 0x7f81e1acdb77 3811: com.mojang.serialization.Codec::flatXmap(java.util.function.Function, java.util.function.Function) -> com.mojang.serialization.Codec
fifo write: @1699477101466669416 0x7f81e8bbc480 568: I2C/C2I adapters(0xbbbbbbbebabb)
fifo write: @1699477101467904752 0x7f81e8bbc180 528: I2C/C2I adapters(0xbbb6abaabb)
fifo write: @1699477101468420629 0x7f81e8baf980 528: I2C/C2I adapters(0xbbb6abaaab)
fifo write: @1699477101468834634 0x7f81e8baf680 552: I2C/C2I adapters(0xbbb6abaaabb)
fifo write: @1699477101469276160 0x7f81e1565603 1538: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, Object, Object, Object) -> Object
fifo write: @1699477101469842057 0x7f81e8baf380 584: I2C/C2I adapters(0xbbbaaaaaaabb)
fifo write: @1699477101469852668 0x7f81e8baf080 480: I2C/C2I adapters(0xaaabaaa)
fifo write: @1699477101469863058 0x7f81e8baed00 648: I2C/C2I adapters(0xbbbb6aaaaaabbaa)
fifo write: @1699477101469873668 0x7f81e8baea00 584: I2C/C2I adapters(0xbbbaaaaaabba)
fifo write: @1699477101469883978 0x7f81e8bae700 560: I2C/C2I adapters(0xbbbaaaaaaba)
fifo write: @1699477101469894098 0x7f81e8bae400 512: I2C/C2I adapters(0xbbbb6aaab)
fifo write: @1699477101470034230 0x7f81e8bae100 496: I2C/C2I adapters(0xbbbb6aaa)
fifo write: @1699477101470044750 0x7f81e8bade00 520: I2C/C2I adapters(0xbbbaaaaab)
fifo write: @1699477101471097134 0x7f81e8badb00 536: I2C/C2I adapters(0xbbbbaaabaa)
fifo write: @1699477101471107604 0x7f81e8bad800 536: I2C/C2I adapters(0xbbbbbaaaba)
fifo write: @1699477101471145154 0x7f81e8bad500 456: I2C/C2I adapters(0xbaaaba)
fifo write: @1699477101477194812 0x7f81e8bad200 472: I2C/C2I adapters(0xbbbb6ba)
fifo write: @1699477101477208402 0x7f81e8bacf00 496: I2C/C2I adapters(0xbbbbb6ba)
fifo write: @1699477101478362887 0x7f81e8bacc00 504: I2C/C2I adapters(0xbbbaaaaa)
fifo write: @1699477101478820653 0x7f81e8bac900 536: I2C/C2I adapters(0xbbbaaaaaab)
fifo write: @1699477101483038388 0x7f81e904fa53 9116: jdk.internal.org.objectweb.asm.MethodWriter::putMethodInfo(jdk.internal.org.objectweb.asm.ByteVector) -> void
fifo write: @1699477101485972756 0x7f81e14b4d14 185: com.mojang.serialization.Decoder$$Lambda$153.0x00007f81601392e8::<init>(Object) -> void
fifo write: @1699477101486117988 0x7f81e14ba694 137: com.mojang.serialization.codecs.RecordCodecBuilder$Instance::<init>() -> void
fifo write: @1699477101486172998 0x7f81e14cc1c0 247: com.mojang.serialization.codecs.RecordCodecBuilder::instance() -> com.mojang.serialization.codecs.RecordCodecBuilder$Instance
fifo write: @1699477101486227289 0x7f81e16af094 31: com.mojang.serialization.codecs.RecordCodecBuilder$Instance::point(Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101486273390 0x7f81e150a514 185: com.mojang.serialization.codecs.RecordCodecBuilder$$Lambda$181.0x00007f8160186f90::<init>(Object) -> void
fifo write: @1699477101486349340 0x7f81e14c17b7 2647: com.mojang.serialization.Decoder::unit(Object) -> com.mojang.serialization.MapDecoder
fifo write: @1699477101486490382 0x7f81e144a75a 1087: com.mojang.serialization.codecs.RecordCodecBuilder$2::<init>(com.mojang.serialization.codecs.RecordCodecBuilder) -> void
fifo write: @1699477101486560373 0x7f81e1666857 1622: com.mojang.serialization.codecs.RecordCodecBuilder::build(com.mojang.datafixers.kinds.App) -> com.mojang.serialization.MapCodec
fifo write: @1699477101486944578 0x7f81e1a3e312 4322: com.mojang.serialization.codecs.RecordCodecBuilder::point(Object) -> com.mojang.serialization.codecs.RecordCodecBuilder
fifo write: @1699477101486976029 0x7f81e8bac600 520: I2C/C2I adapters(0xbbbbababa)
fifo write: @1699477101488717761 0x7f81e8bac300 544: I2C/C2I adapters(0xbbbbababab)
fifo write: @1699477101490439443 0x7f81e8bc3700 456: I2C/C2I adapters(0xbbb66)
fifo write: @1699477101490719567 0x7f81e15b393a 3253: com.mojang.serialization.codecs.RecordCodecBuilder::create(java.util.function.Function) -> com.mojang.serialization.Codec
fifo write: @1699477101490948130 0x7f81e8bc3400 464: I2C/C2I adapters(0xbbb66b)
fifo write: @1699477101491347645 0x7f81e8bc3100 520: I2C/C2I adapters(0xbbbaaabbb)
fifo write: @1699477101491751760 0x7f81e92a0417 9380: jdk.internal.org.objectweb.asm.ClassWriter::toByteArray() -> byte[]
fifo write: @1699477101491763220 0x7f81e8bac000 488: I2C/C2I adapters(0xbb66aaaa6)
fifo write: @1699477101492333798 0x7f81e8babd00 512: I2C/C2I adapters(0xbb66aaaa6b)
fifo write: @1699477101495459618 0x7f81e8baba00 440: I2C/C2I adapters(0xa7e7e)
fifo write: @1699477101495473128 0x7f81e8bab700 448: I2C/C2I adapters(0xba7e7e)
fifo write: @1699477101495732792 0x7f81e8bab400 456: I2C/C2I adapters(0xba7e7eb)
fifo write: @1699477101496032015 0x7f81e8bab100 432: I2C/C2I adapters(0x7eaa)
fifo write: @1699477101496045536 0x7f81e8baae00 440: I2C/C2I adapters(0xb7eaa)
fifo write: @1699477101496300189 0x7f81e8baab00 448: I2C/C2I adapters(0xb7eaab)
fifo write: @1699477101499567471 0x7f81e8baa780 448: I2C/C2I adapters(0xbbeb6)
fifo write: @1699477101499580881 0x7f81e8bc2e00 496: I2C/C2I adapters(0xbbeb666bbb)
fifo write: @1699477101499898895 0x7f81e8bc2b00 448: I2C/C2I adapters(0xba7eb)
fifo write: @1699477101500684566 0x7f81e8bc2800 520: I2C/C2I adapters(0xbbeb666bbbb)
fifo write: @1699477101501025790 0x7f81e8bc2500 456: I2C/C2I adapters(0xbbeb6b)
fifo write: @1699477101501183962 0x7f81e8bc2200 464: I2C/C2I adapters(0xbbeb6bb)
fifo write: @1699477101501489416 0x7f81e8bc1f00 488: I2C/C2I adapters(0xbbb6beb6b)
fifo write: @1699477101502785212 0x7f81e8bc1c00 504: I2C/C2I adapters(0xbbb6beb6bb)
fifo write: @1699477101503626343 0x7f81e8bc1900 536: I2C/C2I adapters(0xbbbbbabaaa)
fifo write: @1699477101505711470 0x7f81e8bc1600 488: I2C/C2I adapters(0xbbbb6666)
fifo write: @1699477101506083644 0x7f81e8bc1300 496: I2C/C2I adapters(0xbbbb6666b)
fifo write: @1699477101507596234 0x7f81e8bc1000 480: I2C/C2I adapters(0xbaaaabb)
fifo write: @1699477101507799357 0x7f81e8bc0d00 592: I2C/C2I adapters(0xbbbbabbbabaa)
fifo write: @1699477101507810097 0x7f81e8bc0a00 496: I2C/C2I adapters(0xbaaab6bb)
fifo write: @1699477101508137911 0x7f81e8bc0700 512: I2C/C2I adapters(0xbaaab6bbb)
fifo write: @1699477101508372504 0x7f81e8bc0400 592: I2C/C2I adapters(0xbbbbabbbbaab)
fifo write: @1699477101508385654 0x7f81e8bc0100 504: I2C/C2I adapters(0xbaaabbbb)
fifo write: @1699477101508759909 0x7f81e8bbfe00 520: I2C/C2I adapters(0xbaaabbbbb)
fifo write: @1699477101509140444 0x7f81e945bef0 6650: jdk.internal.org.objectweb.asm.Type::getDescriptor() -> String
fifo write: @1699477101509865513 0x7f81e8bbfb00 472: I2C/C2I adapters(0xbbbbaa6)
fifo write: @1699477101510281859 0x7f81e8bbf800 496: I2C/C2I adapters(0xbbbbaa6b)
fifo write: @1699477101512181493 0x7f81e94350d0 119: ha::g() -> ha
fifo write: @1699477101512195293 0x7f81e8bcb080 472: I2C/C2I adapters(0xb6aabab)
fifo write: @1699477101512617539 0x7f81e8bcad80 496: I2C/C2I adapters(0xb6aababb)
fifo write: @1699477101513079085 0x7f81e94476d2 373: java.util.IdentityHashMap::containsKey(Object) -> boolean
fifo write: @1699477101513619712 0x7f81e8bcaa80 496: I2C/C2I adapters(0xbaaaaabb)
fifo write: @1699477101514130188 0x7f81e8bca780 536: I2C/C2I adapters(0xbaaaaabbab)
fifo write: @1699477101517041846 0x7f81e8bca480 464: I2C/C2I adapters(0xba6b6b)
fifo write: @1699477101517407211 0x7f81e8bca180 608: I2C/C2I adapters(0xbaaaabbbbbbbb)
fifo write: @1699477101518962741 0x7f81e8bc9e80 464: I2C/C2I adapters(0xbbaa7eb)
fifo write: @1699477101520528181 0x7f81e8bc9b80 640: I2C/C2I adapters(0xbaaaabbbbbbbbb)
fifo write: @1699477101521194690 0x7f81e1774d74 99: StackStreamFactory$CallerClassFinder$ClassBuffer::at(int) -> Class
fifo write: @1699477101521314851 0x7f81e90eb14c 6: org.apache.logging.log4j.core.LoggerContext::getConfigLocation() -> java.net.URI
fifo write: @1699477101521391062 0x7f81e140a234 889: org.apache.logging.slf4j.Log4jLoggerFactory::lambda$static$0(Class) -> boolean
fifo write: @1699477101521436693 0x7f81e145f554 1238: org.apache.logging.slf4j.Log4jLoggerFactory$$Lambda$29.0x00007f816001fd70::test(Object) -> boolean
fifo write: @1699477101523498539 0x7f81e8bc9880 456: I2C/C2I adapters(0xb6bbb)
fifo write: @1699477101524254239 0x7f81e14581f4 31: Integer::toHexString(int) -> String
fifo write: @1699477101524281519 0x7f81e14d2177 349: Integer::formatUnsignedInt(int, int, byte[], int) -> void
fifo write: @1699477101524376161 0x7f81e144c094 873: Integer::toUnsignedString0(int, int) -> String
fifo write: @1699477101524421191 0x7f81e918a2bc 99: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, long) -> Object
fifo write: @1699477101524432081 0x7f81e8bc9580 448: I2C/C2I adapters(0xbbeaaa)
fifo write: @1699477101525669607 0x7f81e8bc9280 472: I2C/C2I adapters(0xba7e7e7e7e)
fifo write: @1699477101525938631 0x7f81e9189fcc 9: java.util.concurrent.atomic.AtomicLong::get() -> long
fifo write: @1699477101525966281 0x7f81e16cd574 30: java.util.concurrent.atomic.AtomicLong::compareAndSet(long, long) -> boolean
fifo write: @1699477101526055272 0x7f81e14a97b4 1042: dlr::c(int) -> int
fifo write: @1699477101526119503 0x7f81e150f9b4 349: dkt::c(int) -> int
fifo write: @1699477101526158344 0x7f81e1b049dd 1052: dkh::a(int) -> int
fifo write: @1699477101527077655 0x7f81e8bc8f80 504: I2C/C2I adapters(0xbbbbbbbbe)
fifo write: @1699477101527874416 0x7f81e8bc8c80 488: I2C/C2I adapters(0x6666666)
fifo write: @1699477101528424163 0x7f81e8bc8980 520: I2C/C2I adapters(0xbbbbbbbbeb)
fifo write: @1699477101533041132 0x7f81e8bc8680 544: I2C/C2I adapters(0xbbbbbbbebbb)
fifo write: @1699477101533054523 0x7f81e8bc8380 520: I2C/C2I adapters(0xbbbaaaabeb)
fifo write: @1699477101533331016 0x7f81e8bc8080 480: I2C/C2I adapters(0xbabbaaa)
fifo write: @1699477101533793522 0x7f81e8bc7d80 584: I2C/C2I adapters(0xbbbbbbbaaaaa)
fifo write: @1699477101535072699 0x7f81e936f2b3 384: java.lang.invoke.MethodHandleNatives::canBeCalledVirtual(java.lang.invoke.MemberName) -> boolean
fifo write: @1699477101536064282 0x7f81e90677a2 5677: java.lang.invoke.InvokerBytecodeGenerator::emitImplicitConversion(java.lang.invoke.LambdaForm$BasicType, Class, Object) -> void
fifo write: @1699477101537429819 0x7f81e8bc7a80 608: I2C/C2I adapters(0xbbbbbbbaaaaab)
fifo write: @1699477101538336371 0x7f81e901adb2 2394: com.google.common.collect.MapMakerInternalMap$Segment::runLockedCleanup() -> void
fifo write: @1699477101538373571 0x7f81e8bc7780 520: I2C/C2I adapters(0xbbbaabbbb)
fifo write: @1699477101538640745 0x7f81e9066bd0 183: com.google.common.collect.MapMakerInternalMap$Segment::getFirst(int) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477101539822660 0x7f81e8bc7480 432: I2C/C2I adapters(0xa6a)
fifo write: @1699477101541023996 0x7f81e8bc7180 544: I2C/C2I adapters(0xbbbaabbbbb)
fifo write: @1699477101542040199 0x7f81e1547d94 240: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry::getValue() -> Object
fifo write: @1699477101542437304 0x7f81e14679d7 1152: java.util.stream.Collectors$$Lambda$59.0x00007f816003cec0::accept(Object, Object) -> void
fifo write: @1699477101542554915 0x7f81e14129b4 648: com.google.common.collect.RegularImmutableList::spliterator() -> java.util.Spliterator
fifo write: @1699477101542789778 0x7f81e19dd394 332: dkj$$Lambda$3410.0x00007f8160751f00::apply(Object) -> Object
fifo write: @1699477101542909000 0x7f81e1414fbe 708: dkj::a(csv) -> java.util.stream.Stream
fifo write: @1699477101543334045 0x7f81e155a294 373: java.util.Collections$SingletonSet::<init>(Object) -> void
fifo write: @1699477101543373516 0x7f81e1547143 480: java.util.Collections::singleton(Object) -> java.util.Set
fifo write: @1699477101543400046 0x7f81e177aa74 95: java.util.Collections$2::characteristics() -> int
fifo write: @1699477101543430387 0x7f81e1617e94 254: java.util.Collections$2::<init>(Object) -> void
fifo write: @1699477101543473277 0x7f81e1705094 539: java.util.Collections$SingletonSet::spliterator() -> java.util.Spliterator
fifo write: @1699477101543523718 0x7f81e18bd394 47: java.util.Collections$2::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477101543562148 0x7f81e1575c47 361: java.util.Collections::singletonSpliterator(Object) -> java.util.Spliterator
fifo write: @1699477101543633329 0x7f81e14befb4 741: java.util.Collections$2::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477101543677020 0x7f81e14915d7 1309: com.google.common.collect.SingletonImmutableList::spliterator() -> java.util.Spliterator
fifo write: @1699477101544592712 0x7f81e91c331b 180: java.util.Spliterators$ArraySpliterator::<init>(Object[], int) -> void
fifo write: @1699477101546634738 0x7f81e93cd085 1936: java.util.stream.Collectors$$Lambda$59.0x00007f816003cec0::accept(Object, Object) -> void
fifo write: @1699477101547835513 0x7f81e140b3a9 1683: Object::toString() -> String
fifo write: @1699477101548046705 0x7f81e93a8c29 3405: java.lang.invoke.MemberName$Factory::resolve(byte, java.lang.invoke.MemberName, Class, int, boolean) -> java.lang.invoke.MemberName
fifo write: @1699477101549305132 0x7f81e8bc6e80 504: I2C/C2I adapters(0xbbbb7e7e7e7e7e)
fifo write: @1699477101549640296 0x7f81e8bc6b80 472: I2C/C2I adapters(0x7e7e7e7e7eb)
fifo write: @1699477101549717937 0x7f81e8bc6880 472: I2C/C2I adapters(0xb7e7e7e7e7e)
fifo write: @1699477101550821021 0x7f81e16c1994 487: com.mojang.serialization.MapCodec$1::toString() -> String
fifo write: @1699477101551182046 0x7f81e16fac14 175: dkh::f() -> int
fifo write: @1699477101551789164 0x7f81e93a84d0 147: dkt::c(int) -> int
fifo write: @1699477101551938486 0x7f81e91ca2d9 158: dkh::f() -> int
fifo write: @1699477101552148078 0x7f81e8bc6580 464: I2C/C2I adapters(0xbbabb7e)
fifo write: @1699477101553196252 0x7f81e8bc6280 472: I2C/C2I adapters(0xbbbb7e7eb)
fifo write: @1699477101553597297 0x7f81e8bc5f80 488: I2C/C2I adapters(0xbbbb7e7ebb)
fifo write: @1699477101553903881 0x7f81e8bc5c80 464: I2C/C2I adapters(0xbb7e7ebb)
fifo write: @1699477101554272096 0x7f81e93077d0 225: java.util.ArrayList::clear() -> void
fifo write: @1699477101554283406 0x7f81e8bc5980 472: I2C/C2I adapters(0xbb7e7ebbb)
fifo write: @1699477101555918187 0x7f81e93fb0f0 1139: java.lang.invoke.LambdaFormEditor::getInCache(java.lang.invoke.LambdaFormEditor$TransformKey) -> java.lang.invoke.LambdaForm
fifo write: @1699477101556231531 0x7f81e8bc5680 456: I2C/C2I adapters(0xbbb7e7e)
fifo write: @1699477101558401549 0x7f81e8bc5380 440: I2C/C2I adapters(0x6b6)
fifo write: @1699477101558593182 0x7f81e8bc5080 448: I2C/C2I adapters(0xb6b6)
fifo write: @1699477101558858235 0x7f81e8bc4d80 448: I2C/C2I adapters(0x6b6b)
fifo write: @1699477101559126508 0x7f81e8bc4a80 456: I2C/C2I adapters(0x6b6ba)
fifo write: @1699477101559139719 0x7f81e8bc4780 432: I2C/C2I adapters(0x6ba)
fifo write: @1699477101560049110 0x7f81e8bc4480 456: I2C/C2I adapters(0xbaa7e7e)
fifo write: @1699477101560411635 0x7f81e8bc4180 464: I2C/C2I adapters(0xbaa7e7eb)
fifo write: @1699477101560841611 0x7f81e8bc3e80 560: I2C/C2I adapters(0xbbbbbbbbbba)
fifo write: @1699477101561852914 0x7f81e9002057 568: java.lang.invoke.MemberName::init(Class, String, Object, int) -> void
fifo write: @1699477101565100336 0x7f81e90bd67d 572: com.google.common.collect.MapMakerInternalMap$Segment::getEntry(Object, int) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477101565774024 0x7f81e8bc3a00 464: I2C/C2I adapters(0xbbaa6b)
fifo write: @1699477101567594108 0x7f81e17bbad4 92: java.util.IdentityHashMap::unmaskNull(Object) -> Object
fifo write: @1699477101567657259 0x7f81e19eb477 90: hm::a(Object, he$c) -> void
fifo write: @1699477101567723599 0x7f81e1785894 423: hm$$Lambda$3590.0x00007f816077cc20::accept(Object, Object) -> void
fifo write: @1699477101567782480 0x7f81e142493a 601: he$c::b(Object) -> void
fifo write: @1699477101568002133 0x7f81e1734174 160: he$c::b() -> boolean
fifo write: @1699477101568123065 0x7f81e14daf94 831: hm::b(java.util.Map$Entry) -> boolean
fifo write: @1699477101568191525 0x7f81e14d9834 1204: hm$$Lambda$3591.0x00007f816077ce50::test(Object) -> boolean
fifo write: @1699477101569203039 0x7f81e1a81514 234: java.util.stream.AbstractSpinedBuffer::count() -> long
fifo write: @1699477101569280770 0x7f81e906ee38 1: java.util.stream.StreamOpFlag::isKnown(int) -> boolean
fifo write: @1699477101569627174 0x7f81e1513594 505: java.util.Collections$UnmodifiableCollection::<init>(java.util.Collection) -> void
fifo write: @1699477101570119160 0x7f81e9121d0e 1765: java.util.ImmutableCollections$MapN::probe(Object) -> int
fifo write: @1699477101570727928 0x7f81e1539894 473: Character::isLetterOrDigit(int) -> boolean
fifo write: @1699477101570784289 0x7f81e1705f94 565: Character::isLetterOrDigit(char) -> boolean
fifo write: @1699477101571276405 0x7f81e906e5de 467: com.google.common.collect.ImmutableMap$Builder::<init>(int) -> void
fifo write: @1699477101571401127 0x7f81e94217dd 454: String::compareTo(Object) -> int
fifo write: @1699477101571932844 0x7f81e1b62266 4462: com.google.gson.stream.JsonReader::nextQuotedValue(char) -> String
fifo write: @1699477101572207287 0x7f81e14afda6 7177: com.google.gson.stream.JsonReader::nextNonWhitespace(boolean) -> int
fifo write: @1699477101572246248 0x7f81e1ab7214 137: com.google.gson.JsonElement::<init>() -> void
fifo write: @1699477101572376059 0x7f81e155ff14 428: com.google.gson.stream.JsonReader::hasNext() -> boolean
fifo write: @1699477101572467771 0x7f81e188d774 1476: com.google.gson.stream.JsonReader::peek() -> com.google.gson.stream.JsonToken
fifo write: @1699477101572541912 0x7f81e1a84f94 302: com.google.gson.JsonObject::add(String, com.google.gson.JsonElement) -> void
fifo write: @1699477101572619693 0x7f81e1476097 1568: com.google.gson.internal.bind.TypeAdapters$28::tryBeginNesting(com.google.gson.stream.JsonReader, com.google.gson.stream.JsonToken) -> com.google.gson.JsonElement
fifo write: @1699477101572735084 0x7f81e14e90b4 801: com.google.gson.internal.LinkedTreeMap$Node::<init>(boolean, com.google.gson.internal.LinkedTreeMap$Node, Object, com.google.gson.internal.LinkedTreeMap$Node, com.google.gson.internal.LinkedTreeMap$Node) -> void
fifo write: @1699477101572793775 0x7f81e1786fd4 787: com.google.gson.internal.LinkedTreeMap::put(Object, Object) -> Object
fifo write: @1699477101572888496 0x7f81e1b5d40e 4516: com.google.gson.internal.LinkedTreeMap::find(Object, boolean) -> com.google.gson.internal.LinkedTreeMap$Node
fifo write: @1699477101573153730 0x7f81e1a9787c 1150: AbstractStringBuilder::appendChars(char[], int, int) -> void
fifo write: @1699477101573216640 0x7f81e1b68a37 3170: com.google.gson.stream.JsonReader::nextName() -> String
fifo write: @1699477101573341352 0x7f81e144625d 2317: com.google.gson.internal.LinkedTreeMap::rebalance(com.google.gson.internal.LinkedTreeMap$Node, boolean) -> void
fifo write: @1699477101573379142 0x7f81e14eb7b4 691: com.google.gson.JsonPrimitive::<init>(String) -> void
fifo write: @1699477101573473424 0x7f81e1a024b4 862: com.google.gson.internal.LinkedTreeMap::replaceInParent(com.google.gson.internal.LinkedTreeMap$Node, com.google.gson.internal.LinkedTreeMap$Node) -> void
fifo write: @1699477101573616325 0x7f81e15105fa 5902: com.google.gson.internal.bind.TypeAdapters$28::readTerminal(com.google.gson.stream.JsonReader, com.google.gson.stream.JsonToken) -> com.google.gson.JsonElement
fifo write: @1699477101573665036 0x7f81e1ab98d4 1297: com.google.gson.internal.LinkedTreeMap::rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> void
fifo write: @1699477101574051831 0x7f81e1a9d15c 3339: com.google.gson.stream.JsonReader::nextString() -> String
fifo write: @1699477101574434296 0x7f81e1c081dc 22356: com.google.gson.stream.JsonReader::doPeek() -> int
fifo write: @1699477101574658609 0x7f81e1b1d739 216: AbstractStringBuilder::append(char[], int, int) -> AbstractStringBuilder
fifo write: @1699477101575794464 0x7f81e9420fd7 413: com.google.gson.stream.JsonReader::nextNonWhitespace(boolean) -> int
fifo write: @1699477101576035817 0x7f81e1b52c74 352: StringCoding::hasNegatives(byte[], int, int) -> boolean
fifo write: @1699477101576078997 0x7f81e1b75737 273: String::<init>(char[], int, int) -> void
fifo write: @1699477101576814237 0x7f81e9215e14 423: com.google.gson.stream.JsonReader::doPeek() -> int
fifo write: @1699477101576869287 0x7f81e1a0a6d9 593: String::<init>(char[], int, int, Void) -> void
fifo write: @1699477101577591087 0x7f81e1ac3154 1298: com.google.gson.internal.LinkedTreeMap::rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> void
fifo write: @1699477101577740959 0x7f81e1b6e6f4 107: AbstractStringBuilder::isLatin1() -> boolean
fifo write: @1699477101577809870 0x7f81e16bcebe 1075: com.google.gson.stream.JsonReader::fillBuffer(int) -> boolean
fifo write: @1699477101577938761 0x7f81e9215928 347: StringUTF16::compress(char[], int, int) -> byte[]
fifo write: @1699477101578332306 0x7f81e9083f30 275: StringCoding::hasNegatives(byte[], int, int) -> boolean
fifo write: @1699477101579908547 0x7f81e9420ccc 6: com.google.gson.internal.LinkedTreeMap$Node::getKey() -> Object
fifo write: @1699477101579993268 0x7f81e906e14c 6: com.google.gson.internal.LinkedTreeMap$Node::getValue() -> Object
fifo write: @1699477101580184410 0x7f81e1894a94 252: com.google.gson.JsonElement::isJsonPrimitive() -> boolean
fifo write: @1699477101580337652 0x7f81e196f2f4 168: com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator::hasNext() -> boolean
fifo write: @1699477101580391393 0x7f81e19f4f14 183: com.google.gson.internal.LinkedTreeMap$EntrySet$1::next() -> Object
fifo write: @1699477101580443844 0x7f81e1c5fa94 31: com.google.gson.internal.LinkedTreeMap$EntrySet$1::next() -> java.util.Map$Entry
fifo write: @1699477101580513765 0x7f81e157a037 1114: arn::a(com.google.gson.JsonElement, String) -> String
fifo write: @1699477101580589296 0x7f81e1451b14 730: qr$$Lambda$3595.0x00007f816077ddb8::accept(Object, Object) -> void
fifo write: @1699477101581071282 0x7f81e91db328 7203: com.google.common.collect.MapMakerInternalMap$Segment::put(Object, int, Object, boolean) -> Object
fifo write: @1699477101581157063 0x7f81e14dd081 2011: java.util.regex.Matcher::replaceAll(String) -> String
fifo write: @1699477101581230434 0x7f81e156f234 817: com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator::nextNode() -> com.google.gson.internal.LinkedTreeMap$Node
fifo write: @1699477101581316075 0x7f81e1594d57 3940: com.google.gson.JsonPrimitive::getAsString() -> String
fifo write: @1699477101581750741 0x7f81e9016ff9 3100: com.google.gson.stream.JsonReader::nextQuotedValue(char) -> String
fifo write: @1699477101582058704 0x7f81e908331b 1306: com.google.gson.internal.LinkedTreeMap$Node::<init>(boolean, com.google.gson.internal.LinkedTreeMap$Node, Object, com.google.gson.internal.LinkedTreeMap$Node, com.google.gson.internal.LinkedTreeMap$Node) -> void
fifo write: @1699477101582155196 0x7f81e93f3bf0 1043: com.google.gson.internal.LinkedTreeMap::replaceInParent(com.google.gson.internal.LinkedTreeMap$Node, com.google.gson.internal.LinkedTreeMap$Node) -> void
fifo write: @1699477101582618682 0x7f81e15c16d4 902: java.util.regex.Pattern$BmpCharProperty::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477101582676912 0x7f81e18aa757 1184: String::charAt(int) -> char
fifo write: @1699477101582716263 0x7f81e18f4e54 58: StringUTF16::length(byte[]) -> int
fifo write: @1699477101582754533 0x7f81e1a0b1f4 174: StringUTF16::checkIndex(int, byte[]) -> void
fifo write: @1699477101583112008 0x7f81e9296618 3496: com.google.gson.internal.LinkedTreeMap::find(Object, boolean) -> com.google.gson.internal.LinkedTreeMap$Node
fifo write: @1699477101583198629 0x7f81e1ae62e3 1320: java.util.regex.Pattern$BmpCharPropertyGreedy::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477101583273070 0x7f81e93f3354 359: java.util.regex.Pattern$BmpCharPredicate$$Lambda$20.0x80000002b::is(int) -> boolean
fifo write: @1699477101583348241 0x7f81e91d9e64 211: java.util.regex.Pattern$BmpCharPredicate::lambda$union$2(java.util.regex.Pattern$CharPredicate, int) -> boolean
fifo write: @1699477101583458623 0x7f81e91d8e79 1627: String::<init>(char[], int, int) -> void
fifo write: @1699477101583537044 0x7f81e907cbea 281: java.util.regex.Pattern$Branch::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477101583798457 0x7f81e9215452 145: String::charAt(int) -> char
fifo write: @1699477101584474156 0x7f81e907c850 71: com.google.gson.JsonPrimitive::getAsString() -> String
fifo write: @1699477101585348987 0x7f81e907bf86 453: java.util.regex.Pattern$BmpCharProperty::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477101586205918 0x7f81e93a3dd3 552: com.google.gson.internal.LinkedTreeMap$EntrySet$1::next() -> Object
fifo write: @1699477101586989548 0x7f81e1b7bd14 303: com.google.common.collect.ImmutableList::construct(Object[]) -> com.google.common.collect.ImmutableList
fifo write: @1699477101587877810 0x7f81e9023656 2577: com.google.gson.internal.LinkedTreeMap::rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> void
fifo write: @1699477101588835712 0x7f81e142ac06 1406: AbstractStringBuilder::append(char) -> AbstractStringBuilder
fifo write: @1699477101588980104 0x7f81e93a37cc 4: bkh::a() -> double
fifo write: @1699477101589107705 0x7f81e9028bf4 963: java.util.regex.Matcher::find() -> boolean
fifo write: @1699477101589647272 0x7f81e1acce94 336: System$2::getEnumConstantsShared(Class) -> Enum[]
fifo write: @1699477101589906276 0x7f81e1ad6217 98: java.lang.reflect.ReflectAccess::newInstance(java.lang.reflect.Constructor, Object[], Class) -> Object
fifo write: @1699477101589974137 0x7f81e1456b14 620: java.util.EnumMap::getKeyUniverse(Class) -> Enum[]
fifo write: @1699477101590059578 0x7f81e18c9b97 280: jdk.internal.reflect.ReflectionFactory::newInstance(java.lang.reflect.Constructor, Object[], Class) -> Object
fifo write: @1699477101590302291 0x7f81e199b5d4 1311: java.util.EnumMap::<init>(Class) -> void
fifo write: @1699477101590446763 0x7f81e1b8c11f 4662: Class::getEnumConstantsShared() -> Object[]
fifo write: @1699477101590614315 0x7f81e19a8c34 484: it.unimi.dsi.fastutil.objects.ObjectArraySet::<init>() -> void
fifo write: @1699477101590669006 0x7f81e1af7194 230: bkl$a$$Lambda$3598.0x00007f816077f150::<init>(bkl$a, bkh) -> void
fifo write: @1699477101590752047 0x7f81e1411632 1836: com.google.common.collect.Maps::newEnumMap(Class) -> java.util.EnumMap
fifo write: @1699477101590897679 0x7f81e1b1c894 39: bkl$a::a(bkh) -> bkl$a
fifo write: @1699477101591027290 0x7f81e1422037 2618: bki::<init>(bkh, java.util.function.Consumer) -> void
fifo write: @1699477101591089351 0x7f81e144888d 1656: bkl$a::b(bkh) -> bki
fifo write: @1699477101591331884 0x7f81e1b2e21f 7930: Class::newInstance() -> Object
fifo write: @1699477101592274956 0x7f81e9394cf0 4100: com.google.gson.JsonObject::add(String, com.google.gson.JsonElement) -> void
fifo write: @1699477101592589500 0x7f81e1a89d2d 7136: com.google.common.collect.RegularImmutableMap::fromEntryArrayCheckingBucketOverflow(int, java.util.Map$Entry[], boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477101592705162 0x7f81e911d0da 1931: java.util.regex.Matcher::replaceAll(String) -> String
fifo write: @1699477101592717402 0x7f81e8bd7780 456: I2C/C2I adapters(0xbb6aa)
fifo write: @1699477101593656284 0x7f81e1b4cd94 153: bir::<init>(float, float, boolean) -> void
fifo write: @1699477101593687294 0x7f81e1b514c4 257: bir::b(float, float) -> bir
fifo write: @1699477101594937100 0x7f81e15b5234 1158: org.apache.logging.log4j.core.layout.PatternLayout$NoFormatPatternSerializer::requiresLocation() -> boolean
fifo write: @1699477101595290545 0x7f81e1a90414 503: bki::a(double) -> void
fifo write: @1699477101595371456 0x7f81e1a6d1b7 639: bkl$a::a(bkh, double) -> bkl$a
fifo write: @1699477101595659169 0x7f81e1722df7 1258: bkl$a::a(bkh, bki) -> void
fifo write: @1699477101595716540 0x7f81e148eef7 1617: bkl$a$$Lambda$3598.0x00007f816077f150::accept(Object) -> void
fifo write: @1699477101595782011 0x7f81e19129b7 501: com.google.common.collect.RegularImmutableMap::fromEntries(java.util.Map$Entry[]) -> com.google.common.collect.ImmutableMap
fifo write: @1699477101596029464 0x7f81e90288cc 6: biu::f() -> bjj
fifo write: @1699477101597644885 0x7f81e1a31014 137: java.util.stream.FindOps$FindSink::<init>() -> void
fifo write: @1699477101597686895 0x7f81e1a73474 109: java.util.stream.FindOps$FindSink::accept(Object) -> void
fifo write: @1699477101597751446 0x7f81e14a6cd4 1285: java.util.stream.FindOps$FindOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477101599071233 0x7f81e153c0bc 10677: java.util.Properties$LineReader::readLine() -> int
fifo write: @1699477101599769242 0x7f81e1abcb14 137: java.util.function.Function$$Lambda$106.0x00007f81601713d8::apply(Object) -> Object
fifo write: @1699477101600524472 0x7f81e90c607a 10253: com.google.common.collect.MapMakerInternalMap::putIfAbsent(Object, Object) -> Object
fifo write: @1699477101600563503 0x7f81e1ac1494 368: CharacterDataLatin1::digit(int, int) -> int
fifo write: @1699477101600804396 0x7f81e8bd7480 448: I2C/C2I adapters(0xbbeaab)
fifo write: @1699477101601155280 0x7f81e8bd7180 464: I2C/C2I adapters(0xbbeaabb)
fifo write: @1699477101602380116 0x7f81e90444b0 863: java.lang.invoke.MethodHandles$Lookup::isClassAccessible(Class) -> boolean
fifo write: @1699477101602685730 0x7f81e90cf6f7 6863: com.google.gson.stream.JsonReader::nextName() -> String
fifo write: @1699477101604294241 0x7f81e1b51d94 513: Character$Subset::<init>(String) -> void
fifo write: @1699477101604338871 0x7f81e1bf69d4 933: Character$UnicodeBlock::<init>(String) -> void
fifo write: @1699477101605001460 0x7f81e9204f17 7322: com.google.gson.internal.bind.TypeAdapters$28::readTerminal(com.google.gson.stream.JsonReader, com.google.gson.stream.JsonToken) -> com.google.gson.JsonElement
fifo write: @1699477101609021222 0x7f81e90ce872 705: java.util.StringTokenizer::skipDelimiters(int) -> int
fifo write: @1699477101611351192 0x7f81e153bb14 31: java.util.concurrent.ConcurrentHashMap$EntryIterator::next() -> Object
fifo write: @1699477101611431713 0x7f81e1b73594 275: java.util.concurrent.ConcurrentHashMap$MapEntry::<init>(Object, Object, java.util.concurrent.ConcurrentHashMap) -> void
fifo write: @1699477101611503814 0x7f81e1b0c8d7 1107: java.util.concurrent.ConcurrentHashMap$EntryIterator::next() -> java.util.Map$Entry
fifo write: @1699477101615161881 0x7f81e904414c 2: java.lang.invoke.LambdaForm::arity() -> int
fifo write: @1699477101615646467 0x7f81e1d3d0d9 3354: java.lang.invoke.LambdaFormBuffer::endEdit() -> java.lang.invoke.LambdaForm
fifo write: @1699477101617012885 0x7f81e9043b58 77: java.util.LinkedHashMap::get(Object) -> Object
fifo write: @1699477101618530605 0x7f81e9282f90 1248: java.lang.invoke.InvokerBytecodeGenerator::emitLoadInsn(java.lang.invoke.LambdaForm$BasicType, int) -> void
fifo write: @1699477101619647159 0x7f81e14880fc 3238: jdk.internal.loader.BuiltinClassLoader$2::run() -> java.util.List
fifo write: @1699477101620817554 0x7f81e8bd6e80 488: I2C/C2I adapters(0xbbbbbebebe)
fifo write: @1699477101620839074 0x7f81e8bd6b80 464: I2C/C2I adapters(0xbbbbbebe)
fifo write: @1699477101622849040 0x7f81e162e3e0 997: java.lang.invoke.DelegatingMethodHandle$Holder::delegate(Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477101623170264 0x7f81e90e0468 3239: java.lang.invoke.InvokerBytecodeGenerator::emitPushArgument(Class, Object) -> void
fifo write: @1699477101623843563 0x7f81e924293a 957: java.lang.invoke.MethodHandles$Lookup::checkSymbolicClass(Class) -> void
fifo write: @1699477101625437914 0x7f81e8bd6880 536: I2C/C2I adapters(0xbbaaaabbab)
fifo write: @1699477101626049602 0x7f81e9282c4c 6: sun.security.util.KnownOIDs::aliases() -> String[]
fifo write: @1699477101626694510 0x7f81e1425647 4444: sun.util.locale.LocaleUtils::caseIgnoreMatch(String, String) -> boolean
fifo write: @1699477101626738201 0x7f81e1bd5a94 144: java.util.Collections$EmptyList::iterator() -> java.util.Iterator
fifo write: @1699477101626798011 0x7f81e1bea1d4 3074: sun.util.locale.BaseLocale$Key::equals(Object) -> boolean
fifo write: @1699477101627766734 0x7f81e151c914 149: java.util.regex.Pattern$Node::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477101627909406 0x7f81e1588b14 256: java.lang.reflect.AnnotatedElement::isAnnotationPresent(Class) -> boolean
fifo write: @1699477101628987080 0x7f81e1c16e8e 4516: com.google.gson.internal.LinkedTreeMap::find(Object, boolean) -> com.google.gson.internal.LinkedTreeMap$Node
fifo write: @1699477101629009580 0x7f81e8bd6580 592: I2C/C2I adapters(0xbbaaabbbbbbb)
fifo write: @1699477101629027860 0x7f81e8bd6280 520: I2C/C2I adapters(0xbbaaabbbb)
fifo write: @1699477101629739739 0x7f81e8bd2280 608: I2C/C2I adapters(0xbbabbaaaaaabb)
fifo write: @1699477101629871571 0x7f81e9294e75 1713: java.util.ArrayList::<init>(java.util.Collection) -> void
fifo write: @1699477101629988412 0x7f81e18c3d4c 3596: sun.net.util.URLUtil::urlNoFragString(java.net.URL) -> String
fifo write: @1699477101630095044 0x7f81e90df765 1387: String::<init>(char[], int, int, Void) -> void
fifo write: @1699477101630686981 0x7f81e93f7953 1324: StringLatin1::compareToCI(byte[], byte[]) -> int
fifo write: @1699477101631024286 0x7f81e19a31e5 1150: java.util.jar.JarVerifier$VerifierStream::read(byte[], int, int) -> int
fifo write: @1699477101631572803 0x7f81e1591e14 93: java.security.Provider$UString::hashCode() -> int
fifo write: @1699477101631760025 0x7f81e17d5e54 783: java.security.Provider$UString::<init>(String) -> void
fifo write: @1699477101631894477 0x7f81e1792e74 462: org.apache.logging.log4j.util.StackLocator::lambda$getCallerClass$0(Class, Class) -> boolean
fifo write: @1699477101631959838 0x7f81e1a90e94 813: org.apache.logging.log4j.util.StackLocator$$Lambda$36.0x00007f8160083060::test(Object) -> boolean
fifo write: @1699477101632035459 0x7f81e17aeff4 414: org.apache.logging.log4j.spi.LoggerRegistry::factoryKey(org.apache.logging.log4j.message.MessageFactory) -> String
fifo write: @1699477101632082880 0x7f81e1ab5fb4 940: org.apache.logging.log4j.core.appender.AbstractAppender::requiresLocation() -> boolean
fifo write: @1699477101632154240 0x7f81e1a72557 1377: org.apache.logging.log4j.spi.LoggerRegistry::getOrCreateInnerMap(String) -> java.util.Map
fifo write: @1699477101632349043 0x7f81e19c45d4 910: java.security.Provider::check(String) -> void
fifo write: @1699477101632430344 0x7f81e1464879 1930: java.security.Provider::getEngineName(String) -> String
fifo write: @1699477101632547696 0x7f81e1b742b4 940: org.apache.logging.log4j.core.layout.PatternLayout::requiresLocation() -> boolean
fifo write: @1699477101632761298 0x7f81e942d571 1478: String$CaseInsensitiveComparator::compare(String, String) -> int
fifo write: @1699477101633026552 0x7f81e15616dc 6396: java.security.Provider$Service::<init>(java.security.Provider, String, String, String, java.util.List, java.util.Map) -> void
fifo write: @1699477101633109983 0x7f81e159d0a1 3105: java.security.Provider::implRemoveService(java.security.Provider$Service) -> void
fifo write: @1699477101633194014 0x7f81e160adb7 1978: sun.security.util.SecurityProviderConstants::getAliases(String) -> java.util.List
fifo write: @1699477101633308215 0x7f81e90f12f4 2285: sun.util.locale.LocaleUtils::toLowerString(String) -> String
fifo write: @1699477101633448417 0x7f81e91fada0 1559: String$CaseInsensitiveComparator::compare(Object, Object) -> int
fifo write: @1699477101633566479 0x7f81e15b9607 5375: java.security.Provider::putService(java.security.Provider$Service) -> void
fifo write: @1699477101633819892 0x7f81e15af207 8533: java.security.Provider::putPropertyStrings(java.security.Provider$Service) -> void
fifo write: @1699477101634275668 0x7f81e18b7094 420: java.nio.file.Files$AcceptAllFilter::accept(Object) -> boolean
fifo write: @1699477101634368309 0x7f81e19b04ba 487: sun.nio.fs.UnixPath::resolve(byte[]) -> sun.nio.fs.UnixPath
fifo write: @1699477101634408290 0x7f81e1c04d14 313: java.io.BufferedReader::ensureOpen() -> void
fifo write: @1699477101634703313 0x7f81e1b0d89c 3894: sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator::readNextEntry() -> java.nio.file.Path
fifo write: @1699477101634764504 0x7f81e19aa9d4 92: java.util.ArrayDeque::elementAt(Object[], int) -> Object
fifo write: @1699477101634815585 0x7f81e1a248d4 798: java.io.StreamTokenizer::read() -> int
fifo write: @1699477101634883436 0x7f81e1a07afc 1240: java.io.BufferedReader::read() -> int
fifo write: @1699477101635014737 0x7f81e91e5014 2344: String::toUpperCase(java.util.Locale) -> String
fifo write: @1699477101635056308 0x7f81e1490117 2050: sun.nio.fs.UnixPath::checkRead() -> void
fifo write: @1699477101635302631 0x7f81e19f2f74 21: java.util.regex.Pattern$TreeInfo::reset() -> void
fifo write: @1699477101635383172 0x7f81e1abbcb9 789: java.util.regex.Pattern::append(int, int) -> void
fifo write: @1699477101636641648 0x7f81e942d158 67: java.lang.invoke.MemberName$Factory::resolveOrFail(byte, java.lang.invoke.MemberName, Class, int, Class) -> java.lang.invoke.MemberName
fifo write: @1699477101637212816 0x7f81e1be10b4 663: java.util.ImmutableCollections$SetN$SetNIterator::next() -> Object
fifo write: @1699477101637274817 0x7f81e92828cc 6: Module::getDescriptor() -> java.lang.module.ModuleDescriptor
fifo write: @1699477101637369978 0x7f81e198e114 324: SecurityManager$$Lambda$3696.0x00007f81601fd120::accept(Object) -> void
fifo write: @1699477101637426218 0x7f81e19a1934 358: SecurityManager::lambda$addNonExportedPackages$1(String) -> void
fifo write: @1699477101637467739 0x7f81e942ce4c 6: java.lang.module.ModuleDescriptor$Exports::source() -> String
fifo write: @1699477101637621141 0x7f81e1b5b294 327: SecurityManager$$Lambda$3697.0x00007f81601fd350::test(Object) -> boolean
fifo write: @1699477101637662132 0x7f81e1d4a914 331: java.lang.module.ModuleDescriptor$Exports::isQualified() -> boolean
fifo write: @1699477101637729342 0x7f81e1b035f4 524: SecurityManager::lambda$nonExportedPkgs$2(java.lang.module.ModuleDescriptor$Exports) -> boolean
fifo write: @1699477101638042206 0x7f81e942cb14 35: Character::charCount(int) -> int
fifo write: @1699477101638188408 0x7f81e14029e6 3151: java.security.Provider::getService(String, String) -> java.security.Provider$Service
fifo write: @1699477101640181364 0x7f81e1612784 12061: java.util.regex.Pattern::sequence(java.util.regex.Pattern$Node) -> java.util.regex.Pattern$Node
fifo write: @1699477101640243385 0x7f81e146fe61 2559: com.sun.crypto.provider.AESCrypt::mul4(int, byte[]) -> int
fifo write: @1699477101641387489 0x7f81e8bd5f80 480: I2C/C2I adapters(0xbababaa)
fifo write: @1699477101641538471 0x7f81e8bd5c80 480: I2C/C2I adapters(0xbbabaaa)
fifo write: @1699477101643044951 0x7f81e1bec494 255: java.util.AbstractCollection::isEmpty() -> boolean
fifo write: @1699477101643260893 0x7f81e147bd1f 3955: sun.security.ssl.CipherSuite::<init>(String, int, int, boolean, String, String, sun.security.ssl.ProtocolVersion[], sun.security.ssl.CipherSuite$KeyExchange, sun.security.ssl.SSLCipher, sun.security.ssl.CipherSuite$MacAlg, sun.security.ssl.CipherSuite$HashAlg) -> void
fifo write: @1699477101644121314 0x7f81e1b76f14 491: java.nio.Buffer::limit(int) -> java.nio.Buffer
fifo write: @1699477101644475129 0x7f81e1514421 2523: java.util.IdentityHashMap::put(Object, Object) -> Object
fifo write: @1699477101645225698 0x7f81e1c07214 421: java.util.HashSet::iterator() -> java.util.Iterator
fifo write: @1699477101645288439 0x7f81e1611d14 573: String$CaseInsensitiveComparator::compare(Object, Object) -> int
fifo write: @1699477101645488482 0x7f81e15739f4 849: String$CaseInsensitiveComparator::compare(String, String) -> int
fifo write: @1699477101645605973 0x7f81e1a998a1 1925: StringLatin1::compareToCI(byte[], byte[]) -> int
fifo write: @1699477101645641374 0x7f81e1b65c94 178: java.lang.ref.SoftReference::get() -> Object
fifo write: @1699477101645777996 0x7f81e1b65714 243: java.util.TreeSet::contains(Object) -> boolean
fifo write: @1699477101645913107 0x7f81e18a03ea 1292: java.util.regex.Pattern$NotBehind::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477101646032579 0x7f81e90f0838 211: Character::toLowerCase(char) -> char
fifo write: @1699477101646416294 0x7f81e9204acc 3: sun.security.ssl.SSLCipher::isAvailable() -> boolean
fifo write: @1699477101646805259 0x7f81e1b8b494 135: java.util.Arrays$ArrayList::contains(Object) -> boolean
fifo write: @1699477101646897540 0x7f81e1b8af14 243: sun.security.ssl.CipherSuite::supports(sun.security.ssl.ProtocolVersion) -> boolean
fifo write: @1699477101646939350 0x7f81e159b939 899: java.util.Arrays$ArrayList::indexOf(Object) -> int
fifo write: @1699477101646996181 0x7f81e16118f4 92: java.util.RegularEnumSet::isEmpty() -> boolean
fifo write: @1699477101647199294 0x7f81e17dcf94 351: java.util.RegularEnumSet::add(Object) -> boolean
fifo write: @1699477101647229464 0x7f81e17dca14 243: Enum::getDeclaringClass() -> Class
fifo write: @1699477101647262525 0x7f81e1a7f114 256: java.util.RegularEnumSet::add(Enum) -> boolean
fifo write: @1699477101647340056 0x7f81e1a32699 1403: sun.security.util.DisabledAlgorithmConstraints::permits(java.util.Set, String, java.security.AlgorithmParameters) -> boolean
fifo write: @1699477101647456027 0x7f81e15a3dff 3672: sun.security.util.DisabledAlgorithmConstraints::cachedCheckAlgorithm(String) -> boolean
fifo write: @1699477101647494948 0x7f81e1b4f614 620: java.util.EnumSet::getUniverse(Class) -> Enum[]
fifo write: @1699477101647605379 0x7f81e1b5a294 418: java.util.EnumSet::<init>(Class, Enum[]) -> void
fifo write: @1699477101647654080 0x7f81e14d8d34 526: java.util.RegularEnumSet::<init>(Class, Enum[]) -> void
fifo write: @1699477101647701580 0x7f81e15b8239 527: java.util.EnumSet::of(Enum) -> java.util.EnumSet
fifo write: @1699477101647754551 0x7f81e1b59e14 237: qu::<init>(byte) -> void
fifo write: @1699477101647917993 0x7f81e16dd09c 2402: java.util.EnumSet::typeCheck(Enum) -> void
fifo write: @1699477101647972444 0x7f81e1896cd9 1017: sun.security.ssl.SSLAlgorithmConstraints::permits(java.util.Set, String, java.security.AlgorithmParameters) -> boolean
fifo write: @1699477101648002844 0x7f81e19d2139 662: sun.security.ssl.CipherSuite::isAvailable() -> boolean
fifo write: @1699477101648181297 0x7f81e16294bf 3316: java.util.EnumSet::noneOf(Class) -> java.util.EnumSet
fifo write: @1699477101648699643 0x7f81e91e447b 656: java.util.regex.Pattern$SliceI::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477101649882238 0x7f81e92046fd 34: java.io.ByteArrayOutputStream::size() -> int
fifo write: @1699477101649909049 0x7f81e920434c 6: sun.security.util.DerOutputStream::buf() -> byte[]
fifo write: @1699477101649934649 0x7f81e92425cc 2: sun.util.calendar.CalendarDate::getYear() -> int
fifo write: @1699477101650603198 0x7f81e1a7ec14 175: sun.security.util.DerOutputStream::<init>() -> void
fifo write: @1699477101650780820 0x7f81e1a272b4 786: sun.security.util.ObjectIdentifier::equals(Object) -> boolean
fifo write: @1699477101650853731 0x7f81e1b1eb94 238: re::<init>(long) -> void
fifo write: @1699477101650926372 0x7f81e1ab1f97 1516: sun.security.util.DerValue::toDigit(byte, String) -> int
fifo write: @1699477101651015343 0x7f81e14d8914 39: StringBuilder::append(char) -> StringBuilder
fifo write: @1699477101651242826 0x7f81e1c23cc0 8490: sun.security.util.DerOutputStream::putLength(int) -> void
fifo write: @1699477101651283797 0x7f81e1b1e4b4 398: sun.security.util.ObjectIdentifier::<init>(byte[]) -> void
fifo write: @1699477101651380448 0x7f81e19c85b4 993: sun.security.util.ObjectIdentifier::check(byte[]) -> void
fifo write: @1699477101651446739 0x7f81e1aa4614 160: sun.security.util.DerInputStream::getOID() -> sun.security.util.ObjectIdentifier
fifo write: @1699477101651514220 0x7f81e1a9b737 1533: sun.security.util.DerValue::getOID() -> sun.security.util.ObjectIdentifier
fifo write: @1699477101651558770 0x7f81e92422cc 3: sun.util.calendar.CalendarDate::isNormalized() -> boolean
fifo write: @1699477101651688182 0x7f81e1aa3eb4 397: arg::read() -> int
fifo write: @1699477101651756603 0x7f81e9241fcc 5: sun.util.calendar.CalendarDate::setNormalized(boolean) -> void
fifo write: @1699477101651867314 0x7f81e1b578ba 441: rf::b(long) -> void
fifo write: @1699477101652558373 0x7f81e1c60659 855: jdk.internal.reflect.ClassFileAssembler::emitConstantPoolClass(short) -> void
fifo write: @1699477101652890837 0x7f81e1ad6bba 2321: sun.security.util.DerValue::subs(byte, int) -> sun.security.util.DerValue[]
fifo write: @1699477101652944088 0x7f81e162fffc 1671: sun.security.util.DerValue::toByteArray() -> byte[]
fifo write: @1699477101653172401 0x7f81e93f704c 2: sun.util.calendar.CalendarDate::getMonth() -> int
fifo write: @1699477101653418654 0x7f81e93f6d54 21: StringBuilder::append(int) -> StringBuilder
fifo write: @1699477101653653217 0x7f81e1bec099 96: sun.security.util.DerInputStream::<init>(byte[]) -> void
fifo write: @1699477101653779859 0x7f81e91faa4c 5: sun.util.calendar.CalendarDate::setLeapYear(boolean) -> void
fifo write: @1699477101654008242 0x7f81e1520997 1213: java.math.BigInteger::stripLeadingZeroBytes(byte[], int, int) -> int[]
fifo write: @1699477101654187164 0x7f81e91fa74c 6: sun.security.util.KnownOIDs::stdName() -> String
fifo write: @1699477101654236605 0x7f81e91fa44c 6: sun.security.x509.Extension::getExtensionId() -> sun.security.util.ObjectIdentifier
fifo write: @1699477101654249155 0x7f81e8bd5980 480: I2C/C2I adapters(0xbabebaba)
fifo write: @1699477101654373106 0x7f81e1b57197 467: sun.util.calendar.BaseCalendar::isLeapYear(int) -> boolean
fifo write: @1699477101654404697 0x7f81e16348f4 373: sun.util.calendar.CalendarUtils::isGregorianLeapYear(int) -> boolean
fifo write: @1699477101654522648 0x7f81e1634494 168: sun.security.util.DerInputStream::getSet(int) -> sun.security.util.DerValue[]
fifo write: @1699477101654564809 0x7f81e91f9ecc 3: sun.security.x509.Extension::isCritical() -> boolean
fifo write: @1699477101654606829 0x7f81e9294b4c 6: sun.util.calendar.CalendarDate::getZone() -> java.util.TimeZone
fifo write: @1699477101654650470 0x7f81e929484c 3: sun.util.calendar.CalendarDate::setTimeOfDay(long) -> void
fifo write: @1699477101654751881 0x7f81e1634074 94: sun.security.util.DerValue::isConstructed() -> boolean
fifo write: @1699477101654810052 0x7f81e1710797 1387: sun.security.util.DerValue::toDerInputStream() -> sun.security.util.DerInputStream
fifo write: @1699477101654962084 0x7f81e17de1bf 1922: sun.security.x509.RDN::<init>(sun.security.util.DerValue) -> void
fifo write: @1699477101655016675 0x7f81e1c06e14 31: sun.security.util.ObjectIdentifier::hashCode() -> int
fifo write: @1699477101655064905 0x7f81e929454c 6: sun.security.x509.Extension::getExtensionValue() -> byte[]
fifo write: @1699477101655167087 0x7f81e16649f9 3166: java.security.Provider::ensureLegacyParsed() -> void
fifo write: @1699477101655244678 0x7f81e144cda1 2388: sun.security.x509.AVA::<init>(sun.security.util.DerValue) -> void
fifo write: @1699477101655287118 0x7f81e1a26ed4 87: sun.security.util.BitArray::subscript(int) -> int
fifo write: @1699477101655334519 0x7f81e1789f59 1123: java.math.BigInteger::bitLength() -> int
fifo write: @1699477101655364559 0x7f81e1a6e2d4 101: sun.security.util.BitArray::position(int) -> int
fifo write: @1699477101655393090 0x7f81e1c601f4 155: sun.util.calendar.Gregorian$Date::getNormalizedYear() -> int
fifo write: @1699477101655439930 0x7f81e17d7314 239: sun.security.jca.ProviderList::getProvider(int) -> java.security.Provider
fifo write: @1699477101655684573 0x7f81e1976c57 831: sun.security.util.BitArray::get(int) -> boolean
fifo write: @1699477101655821895 0x7f81e904b3f4 491: java.util.Arrays::hashCode(byte[]) -> int
fifo write: @1699477101655855206 0x7f81e9293fcc 2: jdk.internal.reflect.ClassFileAssembler::getStack() -> int
fifo write: @1699477101655974217 0x7f81e18cddd7 2112: Class::getConstructor(Class[]) -> java.lang.reflect.Constructor
fifo write: @1699477101656603695 0x7f81e1bdcaff 7014: sun.security.jca.ProviderConfig::getProvider() -> java.security.Provider
fifo write: @1699477101656650786 0x7f81e1976774 100: sun.security.util.DerValue::isContextSpecific() -> boolean
fifo write: @1699477101656807218 0x7f81e17d6ab4 444: java.security.Provider$Service::newInstanceOf() -> Object
fifo write: @1699477101657139392 0x7f81e19f749f 4603: sun.security.util.ObjectIdentifier::toString() -> String
fifo write: @1699477101657247124 0x7f81e19f113f 3070: java.security.Provider$Service::newInstanceUtil(Class, Object) -> Object
fifo write: @1699477101657362565 0x7f81e904b0cc 3: sun.util.calendar.BaseCalendar$Date::getCachedJan1() -> long
fifo write: @1699477101657406316 0x7f81e904adcc 2: sun.util.calendar.CalendarDate::getDayOfMonth() -> int
fifo write: @1699477101657455206 0x7f81e1417134 553: sun.security.util.DerValue::<init>(byte[]) -> void
fifo write: @1699477101657922102 0x7f81e1b24057 5318: java.security.Provider$Service::getDefaultConstructor() -> java.lang.reflect.Constructor
fifo write: @1699477101658024324 0x7f81e1a82a1c 4104: sun.security.util.DerValue::getOctetString() -> byte[]
fifo write: @1699477101658071854 0x7f81e904aa07 175: sun.security.util.DerInputStream::<init>(byte[], int, int, boolean) -> void
fifo write: @1699477101658117915 0x7f81e1416c45 73: java.io.ByteArrayOutputStream::toByteArray() -> byte[]
fifo write: @1699477101658266267 0x7f81e904a3b5 468: java.util.Arrays::hashCode(byte[]) -> int
fifo write: @1699477101658490650 0x7f81e904a0cc 2: sun.util.calendar.CalendarDate::setDayOfWeek(int) -> void
fifo write: @1699477101658780143 0x7f81e14f5aa1 10965: java.security.Provider$Service::newInstance(Object) -> Object
fifo write: @1699477101658819144 0x7f81e9049c8b 78: sun.security.util.DerValue::data() -> sun.security.util.DerInputStream
fifo write: @1699477101658849604 0x7f81e19c1f14 438: sun.security.util.DerValue::isContextSpecific(byte) -> boolean
fifo write: @1699477101659097487 0x7f81e19c1637 459: java.math.BigInteger::compareTo(java.math.BigInteger) -> int
fifo write: @1699477101659384501 0x7f81e91054f0 399: com.mojang.serialization.DataResult$$Lambda$1040.0x00007f8160433f38::apply(Object) -> Object
fifo write: @1699477101659500483 0x7f81e1a87b74 65: sun.util.calendar.CalendarDate::setMonth(int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101659538033 0x7f81e1a87774 65: sun.util.calendar.CalendarDate::setDayOfMonth(int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101659574104 0x7f81e1a87374 65: sun.util.calendar.CalendarDate::setYear(int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101659605414 0x7f81e90495cc 6: sun.security.x509.X509AttributeName::getSuffix() -> String
fifo write: @1699477101659745246 0x7f81e91051cc 6: sun.security.x509.X509AttributeName::getPrefix() -> String
fifo write: @1699477101659953229 0x7f81e1a86f14 168: sun.security.util.DerInputStream::getSequence(int) -> sun.security.util.DerValue[]
fifo write: @1699477101660379464 0x7f81e1552db4 464: sun.security.x509.AlgorithmId::<init>(sun.security.util.ObjectIdentifier, sun.security.util.DerValue) -> void
fifo write: @1699477101660425725 0x7f81e1552974 65: sun.util.calendar.CalendarDate::setSeconds(int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101660463375 0x7f81e15522f4 65: sun.util.calendar.CalendarDate::setHours(int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101660500046 0x7f81e156e574 65: sun.util.calendar.CalendarDate::setMinutes(int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101660525796 0x7f81e9104bcc 2: sun.util.calendar.CalendarDate::getHours() -> int
fifo write: @1699477101660566856 0x7f81e91048cc 2: sun.util.calendar.CalendarDate::getSeconds() -> int
fifo write: @1699477101660593677 0x7f81e91045cc 2: sun.util.calendar.CalendarDate::getMinutes() -> int
fifo write: @1699477101660643637 0x7f81e9104119 154: sun.security.util.DerInputStream::getDerValue() -> sun.security.util.DerValue
fifo write: @1699477101660716628 0x7f81e1653b57 2300: sun.security.x509.AlgorithmId::parse(sun.security.util.DerValue) -> sun.security.x509.AlgorithmId
fifo write: @1699477101660774789 0x7f81e91035fb 994: Class::reflectionData() -> Class$ReflectionData
fifo write: @1699477101660806510 0x7f81e91600cc 2: sun.util.calendar.CalendarDate::setDaylightSaving(int) -> void
fifo write: @1699477101660840130 0x7f81e915fdcc 2: sun.util.calendar.CalendarDate::setZoneOffset(int) -> void
fifo write: @1699477101660876890 0x7f81e915facc 2: sun.util.calendar.CalendarDate::getMillis() -> int
fifo write: @1699477101660903401 0x7f81e915f7cc 2: sun.security.util.BitArray::length() -> int
fifo write: @1699477101660963142 0x7f81e156dcb4 892: sun.security.util.KnownOIDs::findMatch(String) -> sun.security.util.KnownOIDs
fifo write: @1699477101660999332 0x7f81e915f4d6 30: cpr::d(cpr$e) -> String
fifo write: @1699477101661053813 0x7f81e163b094 428: java.util.Collections$SynchronizedMap::put(Object, Object) -> Object
fifo write: @1699477101661092093 0x7f81e163a634 1029: sun.security.util.DerValue::checkPaddedBits(int, byte[], int, int, boolean) -> int
fifo write: @1699477101661188894 0x7f81e1648d14 324: cpr$$Lambda$3739.0x00007f81607b6f20::apply(Object) -> Object
fifo write: @1699477101661405927 0x7f81e1be1dfa 2477: sun.security.util.BitArray::<init>(int, byte[], int) -> void
fifo write: @1699477101661450278 0x7f81e1a423b9 1104: sun.security.x509.Extension::<init>(sun.security.util.DerValue) -> void
fifo write: @1699477101661704211 0x7f81e158493f 6197: java.io.InputStream::readNBytes(int) -> byte[]
fifo write: @1699477101661789242 0x7f81e16f5597 2603: sun.security.util.DerValue::getBigIntegerInternal(byte, boolean) -> java.math.BigInteger
fifo write: @1699477101661864283 0x7f81e1648514 805: sun.security.x509.OIDMap::getClass(sun.security.util.ObjectIdentifier) -> Class
fifo write: @1699477101661979835 0x7f81e1b6084b 2134: java.net.URI$Parser::scan(int, int, String) -> int
fifo write: @1699477101662032815 0x7f81e915f1cc 2: sun.util.calendar.BaseCalendar$Date::getCachedYear() -> int
fifo write: @1699477101662086056 0x7f81e1b93c94 186: sun.security.x509.Extension::<init>() -> void
fifo write: @1699477101662138387 0x7f81e156d894 141: java.util.Date::<init>(long) -> void
fifo write: @1699477101662830986 0x7f81e1c51914 1754: java.util.Hashtable::rehash() -> void
fifo write: @1699477101662966477 0x7f81e1b402c1 7939: sun.security.x509.CertificateExtensions::parseExtension(sun.security.x509.Extension) -> void
fifo write: @1699477101663036388 0x7f81e915ed6a 218: com.mojang.datafixers.util.Either$Left::left() -> java.util.Optional
fifo write: @1699477101663591255 0x7f81e1648114 47: sun.security.util.DerValue::getUnalignedBitString() -> sun.security.util.BitArray
fifo write: @1699477101663641476 0x7f81e1416874 2: sun.security.x509.CertificateVersion::compare(int) -> int
fifo write: @1699477101664216384 0x7f81e19fefdc 1943: sun.security.util.DerValue::getUnalignedBitString(boolean) -> sun.security.util.BitArray
fifo write: @1699477101664270164 0x7f81e1b93714 488: sun.security.util.BitArray::toByteArray() -> byte[]
fifo write: @1699477101664434016 0x7f81e14fd89e 7999: sun.util.calendar.BaseCalendar::getFixedDate(int, int, int, sun.util.calendar.BaseCalendar$Date) -> long
fifo write: @1699477101664494577 0x7f81e1a41ef4 65: sun.util.calendar.CalendarDate::setMillis(int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101664604509 0x7f81e1bd2214 755: sun.security.jca.GetInstance::getInstance(java.security.Provider$Service, Class) -> sun.security.jca.GetInstance$Instance
fifo write: @1699477101664656439 0x7f81e1bd1937 932: java.math.BigInteger::<init>(long) -> void
fifo write: @1699477101664732340 0x7f81e1b66bad 1440: java.util.Hashtable::put(Object, Object) -> Object
fifo write: @1699477101664790501 0x7f81e1aaf197 789: java.math.BigInteger::valueOf(long) -> java.math.BigInteger
fifo write: @1699477101664939693 0x7f81e164cafc 2113: sun.security.jca.GetInstance::checkSuperClass(java.security.Provider$Service, Class, Class) -> void
fifo write: @1699477101664987013 0x7f81e1aae754 1094: java.io.DataInputStream::readInt() -> int
fifo write: @1699477101665071265 0x7f81e9299f7e 1562: sun.security.util.DerValue::<init>(byte[], int, int, boolean, boolean) -> void
fifo write: @1699477101665134015 0x7f81e1a2f4b4 660: java.math.BigInteger::compareMagnitude(java.math.BigInteger) -> int
fifo write: @1699477101665177236 0x7f81e1b66699 235: java.io.OutputStream::write(byte[]) -> void
fifo write: @1699477101665808744 0x7f81e1a8e0d7 1993: sun.security.x509.OIDMap$OIDInfo::getClazz() -> Class
fifo write: @1699477101666026147 0x7f81e14fcff4 155: sun.util.calendar.BaseCalendar$Date::hit(long) -> boolean
fifo write: @1699477101666113518 0x7f81e1b92ff4 240: sun.util.calendar.BaseCalendar::getDayOfWeekFromFixedDate(long) -> int
fifo write: @1699477101666350701 0x7f81e150c0bc 2769: sun.security.util.DerValue::getBoolean() -> boolean
fifo write: @1699477101666430652 0x7f81e1b2b95c 2628: sun.security.x509.AlgorithmId::getName() -> String
fifo write: @1699477101666550484 0x7f81e1a2877a 5528: sun.security.jca.ProviderList$ServiceList::tryGet(int) -> java.security.Provider$Service
fifo write: @1699477101666592534 0x7f81e150b914 338: sun.util.calendar.Gregorian$Date::setNormalizedYear(int) -> void
fifo write: @1699477101666636305 0x7f81e1a2f094 47: sun.security.util.DerInputStream::toByteArray() -> byte[]
fifo write: @1699477101666692476 0x7f81e1a2ea14 31: sun.util.calendar.Gregorian$Date::<init>(java.util.TimeZone) -> void
fifo write: @1699477101666748366 0x7f81e1795b14 192: sun.util.calendar.CalendarDate::<init>(java.util.TimeZone) -> void
fifo write: @1699477101666817217 0x7f81e1795677 198: sun.util.calendar.Gregorian::newCalendarDate(java.util.TimeZone) -> sun.util.calendar.Gregorian$Date
fifo write: @1699477101666876608 0x7f81e1795094 321: sun.util.calendar.BaseCalendar$Date::<init>(java.util.TimeZone) -> void
fifo write: @1699477101666938879 0x7f81e915ea4c 6: sun.security.x509.AlgorithmId::getParameters() -> java.security.AlgorithmParameters
fifo write: @1699477101666986759 0x7f81e1794b14 364: java.io.ByteArrayInputStream::<init>(byte[]) -> void
fifo write: @1699477101667113501 0x7f81e9298a13 2068: com.google.common.collect.CollectCollectors$$Lambda$270.0x00007f81601aab38::accept(Object, Object) -> void
fifo write: @1699477101667159322 0x7f81e1b07d14 167: sun.security.x509.X500Name::<init>(sun.security.util.DerInputStream) -> void
fifo write: @1699477101667309623 0x7f81e1a045f7 5465: sun.util.calendar.BaseCalendar::getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate, long) -> void
fifo write: @1699477101667341784 0x7f81e915e3b5 118: java.net.URI::match(char, long, long) -> boolean
fifo write: @1699477101667434085 0x7f81e152d49c 3072: sun.security.x509.X500Name::parseDER(sun.security.util.DerInputStream) -> void
fifo write: @1699477101667468646 0x7f81e915e0d0 47: sun.security.x509.X509CertImpl::getEncodedInternal() -> byte[]
fifo write: @1699477101667517386 0x7f81e1b072b4 1219: sun.util.calendar.BaseCalendar::isLeapYear(sun.util.calendar.CalendarDate) -> boolean
fifo write: @1699477101667573957 0x7f81e1b06c94 330: sun.util.calendar.Gregorian::getCalendarDate(long, sun.util.calendar.CalendarDate) -> sun.util.calendar.Gregorian$Date
fifo write: @1699477101667620517 0x7f81e152cc97 399: sun.util.calendar.Gregorian::newCalendarDate(java.util.TimeZone) -> sun.util.calendar.CalendarDate
fifo write: @1699477101667722689 0x7f81e150ec14 927: sun.util.calendar.CalendarDate::setDate(int, int, int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101667847070 0x7f81e92b2289 2022: com.google.common.collect.CollectCollectors::lambda$toImmutableMap$7(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableMap$Builder, Object) -> void
fifo write: @1699477101667907751 0x7f81e164a6d7 2365: sun.util.calendar.AbstractCalendar::setTimeOfDay(sun.util.calendar.CalendarDate, int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101667951112 0x7f81e150dfb4 1221: sun.util.calendar.CalendarDate::setTimeOfDay(int, int, int, int) -> sun.util.calendar.CalendarDate
fifo write: @1699477101667993652 0x7f81e1a2d654 1744: sun.util.calendar.BaseCalendar::getFixedDate(sun.util.calendar.CalendarDate) -> long
fifo write: @1699477101668148824 0x7f81e1ae7dec 4290: sun.util.calendar.AbstractCalendar::getCalendarDate(long, sun.util.calendar.CalendarDate) -> sun.util.calendar.CalendarDate
fifo write: @1699477101668186835 0x7f81e1a03db9 658: sun.util.calendar.AbstractCalendar::getTimeOfDay(sun.util.calendar.CalendarDate) -> long
fifo write: @1699477101668234145 0x7f81e1bf8ef7 2772: sun.util.calendar.BaseCalendar::normalizeMonth(sun.util.calendar.CalendarDate) -> void
fifo write: @1699477101668267386 0x7f81e1bf8a14 160: sun.security.util.DerInputStream::getUTCTime() -> java.util.Date
fifo write: @1699477101668301946 0x7f81e1bf8534 252: sun.security.util.DerInputStream::getUnalignedBitString() -> sun.security.util.BitArray
fifo write: @1699477101668382737 0x7f81e146d4ff 3716: sun.util.calendar.AbstractCalendar::getTime(sun.util.calendar.CalendarDate) -> long
fifo write: @1699477101668709732 0x7f81e1a2c3b7 1708: sun.security.util.DerValue::getUTCTime() -> java.util.Date
fifo write: @1699477101668749222 0x7f81e92b1eb0 59: sun.security.x509.X509CertImpl::getEncodedInternal(java.security.cert.Certificate) -> byte[]
fifo write: @1699477101668832543 0x7f81e1d4513c 2066: java.math.BigInteger::<init>(byte[], int, int) -> void
fifo write: @1699477101668868214 0x7f81e146cd81 579: sun.security.jca.Providers::getThreadProviderList() -> sun.security.jca.ProviderList
fifo write: @1699477101668952615 0x7f81e929d375 1750: String::equalsIgnoreCase(String) -> boolean
fifo write: @1699477101669000905 0x7f81e14f1a1b 1749: sun.security.util.IOUtils::readExactlyNBytes(java.io.InputStream, int) -> byte[]
fifo write: @1699477101669038426 0x7f81e1d44914 813: sun.security.jca.Providers::getProviderList() -> sun.security.jca.ProviderList
fifo write: @1699477101669519282 0x7f81e92c11b0 2113: com.mojang.serialization.Dynamic::get(String) -> com.mojang.serialization.OptionalDynamic
fifo write: @1699477101671009041 0x7f81e1d918a6 24954: sun.security.util.DerValue::getTimeInternal(boolean) -> java.util.Date
fifo write: @1699477101671020661 0x7f81e8bd5680 464: I2C/C2I adapters(0xbbabbeb)
fifo write: @1699477101672165606 0x7f81e1d44414 277: java.nio.MappedByteBuffer::limit(int) -> java.nio.ByteBuffer
fifo write: @1699477101672953286 0x7f81e8bd3900 464: I2C/C2I adapters(0xbbbaabe)
fifo write: @1699477101673710646 0x7f81e9357827 12154: sun.util.locale.BaseLocale::getInstance(String, String, String, String) -> sun.util.locale.BaseLocale
fifo write: @1699477101673724846 0x7f81e8bd3600 448: I2C/C2I adapters(0xbabbbe)
fifo write: @1699477101674157062 0x7f81e14f1474 320: jdk.nio.zipfs.ZipConstants::SH(byte[], int) -> int
fifo write: @1699477101674271883 0x7f81e92b18cc 2: jdk.nio.zipfs.ZipFileSystem$IndexNode::hashCode() -> int
fifo write: @1699477101674282934 0x7f81e8bd3300 480: I2C/C2I adapters(0xbabaaab)
fifo write: @1699477101674554027 0x7f81e14f0c54 666: jdk.nio.zipfs.ZipFileSystem$IndexNode::normalize(byte[]) -> byte[]
fifo write: @1699477101674582687 0x7f81e14f0794 87: jdk.nio.zipfs.ZipFileSystem$IndexNode::name(byte[]) -> void
fifo write: @1699477101674616658 0x7f81e17e6d34 937: jdk.nio.zipfs.ZipFileSystem$IndexNode::pathHasDotOrDotDot() -> boolean
fifo write: @1699477101674656858 0x7f81e17e6574 565: jdk.nio.zipfs.ZipConstants::pkSigAt(byte[], int, int, int) -> boolean
fifo write: @1699477101674684559 0x7f81e164a274 104: jdk.nio.zipfs.ZipCoder::isUTF8() -> boolean
fifo write: @1699477101674721249 0x7f81e17e5c54 817: jdk.nio.zipfs.ZipFileSystem::checkUTF8(byte[]) -> void
fifo write: @1699477101674753930 0x7f81e14f51f9 34: jdk.nio.zipfs.ZipConstants::cenSigAt(byte[], int) -> boolean
fifo write: @1699477101674815050 0x7f81e17e54f4 414: jdk.nio.zipfs.ZipConstants::CENEXT(byte[], int) -> int
fifo write: @1699477101674844411 0x7f81e1a7bef4 414: jdk.nio.zipfs.ZipConstants::CENCOM(byte[], int) -> int
fifo write: @1699477101674872741 0x7f81e1a7b8f4 414: jdk.nio.zipfs.ZipConstants::CENNAM(byte[], int) -> int
fifo write: @1699477101674901241 0x7f81e1a7b2f4 414: jdk.nio.zipfs.ZipConstants::CENHOW(byte[], int) -> int
fifo write: @1699477101674930222 0x7f81e1a7acf4 414: jdk.nio.zipfs.ZipConstants::CENFLG(byte[], int) -> int
fifo write: @1699477101675217526 0x7f81e92ce040 10348: java.io.DataInputStream::readUTF(java.io.DataInput) -> String
fifo write: @1699477101675255816 0x7f81e18c8800 1295: jdk.nio.zipfs.ZipFileSystem$IndexNode::<init>(byte[], int, int) -> void
fifo write: @1699477101677122590 0x7f81e92b12d2 297: jdk.nio.zipfs.ZipFileSystem::checkUTF8(byte[]) -> void
fifo write: @1699477101677275002 0x7f81e92c08d2 489: jdk.nio.zipfs.ZipFileSystem$IndexNode::pathHasDotOrDotDot() -> boolean
fifo write: @1699477101677422264 0x7f81e92c00d6 477: jdk.nio.zipfs.ZipFileSystem$IndexNode::normalize(byte[]) -> byte[]
fifo write: @1699477101677644447 0x7f81e92bfd50 47: jdk.nio.zipfs.ZipCoder::isUTF8() -> boolean
fifo write: @1699477101677780079 0x7f81e1a7a334 937: jdk.nio.zipfs.ZipFileSystem$IndexNode::pathHasDotOrDotDot() -> boolean
fifo write: @1699477101677953861 0x7f81e92b0d3a 265: jdk.nio.zipfs.ZipConstants::pkSigAt(byte[], int, int, int) -> boolean
fifo write: @1699477101677985051 0x7f81e929cf33 112: jdk.nio.zipfs.ZipConstants::CENEXT(byte[], int) -> int
fifo write: @1699477101678014342 0x7f81e929cb33 112: jdk.nio.zipfs.ZipConstants::CENCOM(byte[], int) -> int
fifo write: @1699477101678042412 0x7f81e929c733 112: jdk.nio.zipfs.ZipConstants::CENHOW(byte[], int) -> int
fifo write: @1699477101678073142 0x7f81e929c1ba 217: jdk.nio.zipfs.ZipConstants::cenSigAt(byte[], int) -> boolean
fifo write: @1699477101678104163 0x7f81e927c733 112: jdk.nio.zipfs.ZipConstants::CENFLG(byte[], int) -> int
fifo write: @1699477101678343976 0x7f81e8bd3000 520: I2C/C2I adapters(0xbbaabbbab)
fifo write: @1699477101678354916 0x7f81e8bd2d00 520: I2C/C2I adapters(0xbbaabbbbb)
fifo write: @1699477101678365336 0x7f81e8bd2a00 536: I2C/C2I adapters(0xbbaabbbbab)
fifo write: @1699477101678375816 0x7f81e8bd2580 592: I2C/C2I adapters(0xbbaabbbbbabb)
fifo write: @1699477101678849392 0x7f81e927c333 112: jdk.nio.zipfs.ZipConstants::CENNAM(byte[], int) -> int
fifo write: @1699477101680276231 0x7f81e8b9e678 168: itable stub
fifo write: @1699477101680887919 0x7f81e927bad2 549: jdk.nio.zipfs.ZipFileSystem$IndexNode::pathHasDotOrDotDot() -> boolean
fifo write: @1699477101681738330 0x7f81e927b764 83: CharacterDataLatin1::digit(int, int) -> int
fifo write: @1699477101682257106 0x7f81e18c8014 695: java.util.LinkedHashMap::valuesToArray(Object[]) -> Object[]
fifo write: @1699477101682736823 0x7f81e18c7974 459: jdk.nio.zipfs.ZipFileSystem::getParentOff(byte[]) -> int
fifo write: @1699477101682772893 0x7f81e18c7514 241: jdk.nio.zipfs.ZipFileSystem$ParentLookup::<init>() -> void
fifo write: @1699477101682806364 0x7f81e1a1b894 144: jdk.nio.zipfs.ZipFileSystem$IndexNode::<init>() -> void
fifo write: @1699477101683061037 0x7f81e8bd5380 592: I2C/C2I adapters(0xbbbbbbbbbaaa)
fifo write: @1699477101683310680 0x7f81e1a19efc 3247: jdk.nio.zipfs.ZipFileSystem::makeParentDirs(jdk.nio.zipfs.ZipFileSystem$IndexNode, jdk.nio.zipfs.ZipFileSystem$IndexNode) -> void
fifo write: @1699477101683358601 0x7f81e8bd5080 624: I2C/C2I adapters(0xbbbebebebebebebebebebe)
fifo write: @1699477101683369751 0x7f81e8bd4c80 880: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebebebe)
fifo write: @1699477101683529393 0x7f81e8bd4800 912: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebebebebe)
fifo write: @1699477101683540413 0x7f81e8bd4480 656: I2C/C2I adapters(0xbbbebebebebebebebebebebe)
fifo write: @1699477101683892538 0x7f81e1ad4a3b 819: jdk.internal.util.ArraysSupport::vectorizedMismatch(Object, long, Object, long, int, int) -> int
fifo write: @1699477101683931628 0x7f81e1a19694 386: jdk.nio.zipfs.ZipFileSystem$ParentLookup::name(byte[], int) -> void
fifo write: @1699477101684028699 0x7f81e1ad42b4 735: jdk.nio.zipfs.ZipFileSystem$ParentLookup::equals(Object) -> boolean
fifo write: @1699477101684109860 0x7f81e1ad3c19 411: java.util.Arrays::equals(byte[], int, int, byte[], int, int) -> boolean
fifo write: @1699477101684148131 0x7f81e1ad3294 824: jdk.internal.util.ArraysSupport::mismatch(byte[], int, byte[], int, int) -> int
fifo write: @1699477101684614527 0x7f81e1ad2c74 402: java.math.BigInteger::trustedStripLeadingZeroInts(int[]) -> int[]
fifo write: @1699477101684775189 0x7f81e927b0b0 371: jdk.nio.zipfs.ZipFileSystem::getParentOff(byte[]) -> int
fifo write: @1699477101684871060 0x7f81e8bd3f00 1280: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe)
fifo write: @1699477101684888540 0x7f81e8bd1e80 792: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebe)
fifo write: @1699477101684904761 0x7f81e8bd1900 1256: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe)
fifo write: @1699477101685146964 0x7f81e8bd1500 824: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebe)
fifo write: @1699477101685499878 0x7f81e14acdd4 1096: java.math.BigInteger::<init>(int[], int) -> void
fifo write: @1699477101685549599 0x7f81e1ad247d 395: java.util.Objects::checkFromToIndex(int, int, int) -> int
fifo write: @1699477101685616740 0x7f81e14ac87d 298: jdk.internal.util.Preconditions::checkFromToIndex(int, int, int, java.util.function.BiFunction) -> int
fifo write: @1699477101685829182 0x7f81e14ac394 259: java.math.MutableBigInteger::<init>(int[]) -> void
fifo write: @1699477101686349779 0x7f81e927aa22 491: jdk.nio.zipfs.ZipFileSystem$ParentLookup::name(byte[], int) -> void
fifo write: @1699477101686747084 0x7f81e927a1bf 600: jdk.internal.util.ArraysSupport::mismatch(byte[], int, byte[], int, int) -> int
fifo write: @1699477101687275451 0x7f81e92797dd 618: jdk.nio.zipfs.ZipFileSystem$ParentLookup::equals(Object) -> boolean
fifo write: @1699477101687615715 0x7f81e92ccab3 940: java.util.Arrays::equals(byte[], int, int, byte[], int, int) -> boolean
fifo write: @1699477101689027903 0x7f81e18c7174 2: StackStreamFactory$FrameBuffer::curBatchFrameCount() -> int
fifo write: @1699477101689081414 0x7f81e14abf74 104: StackWalker::hasLocalsOperandsOption() -> boolean
fifo write: @1699477101689286276 0x7f81e92cb57d 2394: jdk.nio.zipfs.ZipFileSystem$IndexNode::<init>(byte[], int, int) -> void
fifo write: @1699477101689917405 0x7f81e1b2865f 3538: StackStreamFactory$FrameBuffer::setBatch(int, int, int) -> void
fifo write: @1699477101690216398 0x7f81e92791d4 143: sun.security.provider.SHA2::implCompress(byte[], int) -> void
fifo write: @1699477101690550453 0x7f81e1a784f4 5: arg::a() -> int
fifo write: @1699477101690641554 0x7f81e929becc 6: sa::c() -> java.util.Map
fifo write: @1699477101690788446 0x7f81e1b28114 55: rf::a(long, long) -> void
fifo write: @1699477101690902257 0x7f81e1b27659 1064: arg::read(byte[], int, int) -> int
fifo write: @1699477101690966078 0x7f81e92cb264 11: java.util.ArrayDeque::elementAt(Object[], int) -> Object
fifo write: @1699477101691017569 0x7f81e14ab994 418: rt::a(int) -> rs
fifo write: @1699477101693457930 0x7f81e92cadd1 186: sun.security.provider.DigestBase::implCompressMultiBlockCheck(byte[], int, int) -> void
fifo write: @1699477101693703973 0x7f81e1b27194 207: java.util.stream.ReferencePipeline$StatefulOp::<init>(java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int) -> void
fifo write: @1699477101694951300 0x7f81e1417e82 10112: java.util.jar.JarVerifier::processEntry(sun.security.util.ManifestEntryVerifier) -> void
fifo write: @1699477101695002630 0x7f81e14ab494 238: java.util.zip.Inflater::needsDictionary() -> boolean
fifo write: @1699477101695066131 0x7f81e92ca47d 722: sun.security.provider.DigestBase::implCompressMultiBlock(byte[], int, int) -> int
fifo write: @1699477101695300014 0x7f81e92c93ca 2153: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477101695953972 0x7f81e8bd3c00 504: I2C/C2I adapters(0xbbabbbab)
fifo write: @1699477101695972873 0x7f81e8bd1200 520: I2C/C2I adapters(0xbbabbbbab)
fifo write: @1699477101698243932 0x7f81e9290e90 2985: jdk.internal.loader.BuiltinClassLoader::findLoadedModule(String) -> jdk.internal.loader.BuiltinClassLoader$LoadedModule
fifo write: @1699477101698844870 0x7f81e928e6f5 3899: jdk.nio.zipfs.ZipFileSystem::makeParentDirs(jdk.nio.zipfs.ZipFileSystem$IndexNode, jdk.nio.zipfs.ZipFileSystem$IndexNode) -> void
fifo write: @1699477101700273388 0x7f81e1486417 1445: jdk.internal.jimage.ImageLocation::getAttribute(int) -> long
fifo write: @1699477101700503551 0x7f81e928e34c 6: java.time.zone.ZoneOffsetTransition::getOffsetAfter() -> java.time.ZoneOffset
fifo write: @1699477101700567732 0x7f81e928e04c 6: java.time.zone.ZoneOffsetTransition::getOffsetBefore() -> java.time.ZoneOffset
fifo write: @1699477101700860726 0x7f81e1aa0f74 44: java.util.concurrent.locks.ReentrantReadWriteLock::readLock() -> java.util.concurrent.locks.Lock
fifo write: @1699477101700900936 0x7f81e1af8a54 63: java.util.ArrayDeque::dec(int, int) -> int
fifo write: @1699477101701158820 0x7f81e14aaef4 413: java.nio.file.Files::provider(java.nio.file.Path) -> java.nio.file.spi.FileSystemProvider
fifo write: @1699477101701661766 0x7f81e14aa7d4 246: Math::floorMod(long, long) -> long
fifo write: @1699477101701734287 0x7f81e928dd4c 6: jdk.nio.zipfs.ZipPath::getFileSystem() -> jdk.nio.zipfs.ZipFileSystem
fifo write: @1699477101702616328 0x7f81e1485e94 221: java.util.concurrent.ConcurrentHashMap$Traverser::<init>(java.util.concurrent.ConcurrentHashMap$Node[], int, int, int) -> void
fifo write: @1699477101702699450 0x7f81e1485994 135: java.util.concurrent.ConcurrentHashMap$BaseIterator::<init>(java.util.concurrent.ConcurrentHashMap$Node[], int, int, int, java.util.concurrent.ConcurrentHashMap) -> void
fifo write: @1699477101703172876 0x7f81e928d8d0 159: java.util.RegularEnumSet::contains(Object) -> boolean
fifo write: @1699477101703529000 0x7f81e8bcf480 464: I2C/C2I adapters(0xbbbbabe)
fifo write: @1699477101703853444 0x7f81e9010d1d 5968: jdk.internal.loader.BuiltinClassLoader::loadClassOrNull(String, boolean) -> Class
fifo write: @1699477101707012925 0x7f81e900f720 1871: sun.security.provider.DigestBase::engineUpdate(byte[], int, int) -> void
fifo write: @1699477101707216808 0x7f81e92c904c 6: java.time.LocalDateTime::toLocalDate() -> java.time.LocalDate
fifo write: @1699477101707639133 0x7f81e1484c74 1900: com.mojang.serialization.Lifecycle::add(com.mojang.serialization.Lifecycle) -> com.mojang.serialization.Lifecycle
fifo write: @1699477101707661824 0x7f81e8b9e730 168: itable stub
fifo write: @1699477101707836546 0x7f81e92c8d35 17: java.util.regex.Pattern$$Lambda$19.0x800000029::is(int) -> boolean
fifo write: @1699477101707923077 0x7f81e921c688 2435: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477101707960917 0x7f81e92c8950 87: com.google.gson.stream.JsonReader::hasNext() -> boolean
fifo write: @1699477101708039588 0x7f81e92c85cf 132: com.google.gson.stream.JsonReader::peek() -> com.google.gson.stream.JsonToken
fifo write: @1699477101709349825 0x7f81e1d9dedc 22356: com.google.gson.stream.JsonReader::doPeek() -> int
fifo write: @1699477101711423972 0x7f81e900e7b0 1450: com.google.gson.internal.bind.TypeAdapters$28::tryBeginNesting(com.google.gson.stream.JsonReader, com.google.gson.stream.JsonToken) -> com.google.gson.JsonElement
fifo write: @1699477101713772633 0x7f81e92c814c 6: java.util.KeyValueHolder::getValue() -> Object
fifo write: @1699477101713860964 0x7f81e921b9f9 810: java.util.regex.Matcher::match(int, int) -> boolean
fifo write: @1699477101713916354 0x7f81e900e24c 6: hr$d::a() -> aev
fifo write: @1699477101713968545 0x7f81e921b6cc 6: hr$d::b() -> hq
fifo write: @1699477101714027926 0x7f81e921b3cc 6: java.util.KeyValueHolder::getKey() -> Object
fifo write: @1699477101716246094 0x7f81e9219e44 2220: java.lang.invoke.DirectMethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, java.lang.invoke.MemberName, boolean) -> void
fifo write: @1699477101718167879 0x7f81e8bd0f00 456: I2C/C2I adapters(0xbb6bb)
fifo write: @1699477101718184689 0x7f81e8bd0c00 464: I2C/C2I adapters(0xbbb6bb)
fifo write: @1699477101718592465 0x7f81e8bd0900 472: I2C/C2I adapters(0xbbb6bbb)
fifo write: @1699477101720661711 0x7f81e1484694 324: hr$d::<init>(aev, hq) -> void
fifo write: @1699477101720762703 0x7f81e1484114 163: java.util.ImmutableCollections$MapN$MapNIterator::nextIndex() -> int
fifo write: @1699477101720902765 0x7f81e1a716ca 431: hr$d::a(aev, hq) -> hr$d
fifo write: @1699477101720966625 0x7f81e1a70ab7 1515: hr$d::a(java.util.Map$Entry) -> hr$d
fifo write: @1699477101721678175 0x7f81e925502b 13153: jdk.internal.loader.BuiltinClassLoader::loadClass(String, boolean) -> Class
fifo write: @1699477101722369854 0x7f81e9217e5c 2622: java.security.MessageDigest::update(byte[], int, int) -> void
fifo write: @1699477101722440984 0x7f81e8bd0600 504: I2C/C2I adapters(0xbbbabbbb)
fifo write: @1699477101722983101 0x7f81e1a70694 31: java.io.DataInputStream::readChar() -> char
fifo write: @1699477101723424137 0x7f81e9267481 2811: sun.security.provider.SHA2::implCompress0(byte[], int) -> void
fifo write: @1699477101723769992 0x7f81e9216d56 109: java.io.DataInputStream::readChar() -> char
fifo write: @1699477101723806142 0x7f81e9266f3f 328: java.io.ByteArrayInputStream::read() -> int
fifo write: @1699477101723852953 0x7f81e921694c 6: java.nio.file.FileTreeWalker$Event::file() -> java.nio.file.Path
fifo write: @1699477101723928964 0x7f81e9266bcc 6: java.nio.file.FileTreeWalker$Event::type() -> java.nio.file.FileTreeWalker$EventType
fifo write: @1699477101724339399 0x7f81e92668cc 3: java.nio.file.FileTreeWalker$DirectoryNode::skipped() -> boolean
fifo write: @1699477101724374199 0x7f81e92665cc 6: java.nio.file.FileTreeWalker$DirectoryNode::iterator() -> java.util.Iterator
fifo write: @1699477101724655033 0x7f81e1a70114 356: jdk.internal.misc.Unsafe::getCharUnaligned(Object, long, boolean) -> char
fifo write: @1699477101724685813 0x7f81e9265e30 107: jdk.nio.zipfs.ZipConstants::SH(byte[], int) -> int
fifo write: @1699477101724714144 0x7f81e1a6fc74 257: jdk.internal.misc.Unsafe::convEndian(boolean, char) -> char
fifo write: @1699477101724774385 0x7f81e1a6f15f 1246: jdk.internal.misc.ScopedMemoryAccess::getCharUnaligned(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, boolean) -> char
fifo write: @1699477101724833815 0x7f81e18cd0b9 680: jdk.internal.misc.ScopedMemoryAccess::getCharUnalignedInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, boolean) -> char
fifo write: @1699477101724885406 0x7f81e18cc937 705: jdk.internal.misc.Unsafe::getCharUnaligned(Object, long) -> char
fifo write: @1699477101724913856 0x7f81e1a6eb94 238: java.util.zip.Inflater::finished() -> boolean
fifo write: @1699477101725176050 0x7f81e18cb73f 2234: java.nio.HeapByteBuffer::getChar() -> char
fifo write: @1699477101725610875 0x7f81e92657d5 66: jdk.internal.misc.Unsafe::getCharUnaligned(Object, long, boolean) -> char
fifo write: @1699477101726097852 0x7f81e9265250 179: java.nio.HeapByteBuffer::getChar() -> char
fifo write: @1699477101726200473 0x7f81e18cb114 334: java.util.Optional::get() -> Object
fifo write: @1699477101726702599 0x7f81e9263a95 2240: java.io.DataInputStream::readUnsignedShort() -> int
fifo write: @1699477101727002893 0x7f81e18cacf4 96: java.lang.invoke.Invokers::cachedInvoker(int) -> java.lang.invoke.MethodHandle
fifo write: @1699477101727570221 0x7f81e152b4b9 674: jdk.internal.misc.ScopedMemoryAccess::getIntUnalignedInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, boolean) -> int
fifo write: @1699477101727662682 0x7f81e152a9df 1190: jdk.internal.misc.ScopedMemoryAccess::getIntUnaligned(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, boolean) -> int
fifo write: @1699477101727746433 0x7f81e15297bf 2218: java.nio.HeapByteBuffer::getInt() -> int
fifo write: @1699477101727855374 0x7f81e92633cf 64: java.nio.Buffer::nextGetIndex(int) -> int
fifo write: @1699477101727936275 0x7f81e92630b0 16: java.util.Optional::orElse(Object) -> Object
fifo write: @1699477101728133788 0x7f81e1528d82 672: java.lang.invoke.LambdaFormEditor::filterArgumentForm(int, java.lang.invoke.LambdaForm$BasicType) -> java.lang.invoke.LambdaForm
fifo write: @1699477101728649325 0x7f81e9262a57 334: com.mojang.serialization.DataResult::flatMap(java.util.function.Function) -> com.mojang.serialization.DataResult
fifo write: @1699477101728684315 0x7f81e92624d0 175: java.nio.HeapByteBuffer::getInt() -> int
fifo write: @1699477101729431945 0x7f81e18ca614 176: com.google.gson.JsonObject::add(String, com.google.gson.JsonElement) -> void
fifo write: @1699477101729914471 0x7f81e1528894 185: com.mojang.serialization.DataResult$$Lambda$3723.0x00007f81607b4248::<init>(java.util.function.Function) -> void
fifo write: @1699477101730009782 0x7f81e1a6a506 595: com.mojang.datafixers.util.Either$Left::mapBoth(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477101730300416 0x7f81e1a67d7a 5816: com.google.gson.internal.bind.TypeAdapters$28::readTerminal(com.google.gson.stream.JsonReader, com.google.gson.stream.JsonToken) -> com.google.gson.JsonElement
fifo write: @1699477101730376317 0x7f81e1479c17 2014: com.mojang.serialization.DataResult::map(java.util.function.Function) -> com.mojang.serialization.DataResult
fifo write: @1699477101730475008 0x7f81e1a67594 47: java.util.LinkedList::add(Object) -> boolean
fifo write: @1699477101730532889 0x7f81e1479614 275: java.util.LinkedList$Node::<init>(java.util.LinkedList$Node, Object, java.util.LinkedList$Node) -> void
fifo write: @1699477101731107416 0x7f81e1478d3a 968: java.util.LinkedList::linkLast(Object) -> void
fifo write: @1699477101731175957 0x7f81e92617a0 612: java.lang.invoke.BoundMethodHandle::rebind() -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477101731208018 0x7f81e9261238 191: Character::digit(char, int) -> int
fifo write: @1699477101731371700 0x7f81e932d0b6 8989: java.util.zip.InflaterInputStream::read(byte[], int, int) -> int
fifo write: @1699477101731407330 0x7f81e9260f4c 6: java.time.zone.ZoneOffsetTransition::getDateTimeBefore() -> java.time.LocalDateTime
fifo write: @1699477101731468361 0x7f81e1478079 1423: jdk.nio.zipfs.ZipPath::<init>(jdk.nio.zipfs.ZipFileSystem, byte[], boolean) -> void
fifo write: @1699477101731562432 0x7f81e1477b14 230: java.time.LocalDateTime::<init>(java.time.LocalDate, java.time.LocalTime) -> void
fifo write: @1699477101731795835 0x7f81e1ac9357 1831: jdk.nio.zipfs.ZipPath::initOffsets() -> void
fifo write: @1699477101731940237 0x7f81e9260c4c 6: jdk.nio.zipfs.ZipFileSystem::provider() -> java.nio.file.spi.FileSystemProvider
fifo write: @1699477101732055099 0x7f81e1ac8b14 794: jdk.nio.zipfs.ZipConstants::LG(byte[], int) -> long
fifo write: @1699477101732104979 0x7f81e1477474 198: java.time.LocalDate::compareTo0(java.time.LocalDate) -> int
fifo write: @1699477101732152560 0x7f81e926094c 6: java.nio.file.FileTreeWalker$Event::ioeException() -> java.io.IOException
fifo write: @1699477101732193600 0x7f81e1ac8534 290: java.time.LocalDateTime::compareTo0(java.time.LocalDateTime) -> int
fifo write: @1699477101732245331 0x7f81e926064c 6: java.nio.file.FileTreeWalker$Event::attributes() -> java.nio.file.attribute.BasicFileAttributes
fifo write: @1699477101732257981 0x7f81e8bd0300 616: I2C/C2I adapters(0xbbaabbbbbbbbb)
fifo write: @1699477101732288402 0x7f81e926034c 3: jdk.nio.zipfs.ZipFileSystem$IndexNode::isDir() -> boolean
fifo write: @1699477101732315192 0x7f81e1ac8054 261: Math::floorDiv(long, long) -> long
fifo write: @1699477101732342812 0x7f81e1ac7c94 108: jdk.nio.zipfs.ZipPath::getNameCount() -> int
fifo write: @1699477101732561405 0x7f81e1ac75fd 502: java.time.LocalTime::create(int, int, int, int) -> java.time.LocalTime
fifo write: @1699477101732596376 0x7f81e1ac7114 249: jdk.nio.zipfs.ZipPath::isAbsolute() -> boolean
fifo write: @1699477101732651986 0x7f81e1481b17 541: java.time.LocalTime::ofNanoOfDay(long) -> java.time.LocalTime
fifo write: @1699477101732724527 0x7f81e14811d4 826: jdk.nio.zipfs.ZipPath::normalize(byte[]) -> byte[]
fifo write: @1699477101732763718 0x7f81e1ac6c94 188: StringBuilder::append(CharSequence) -> Appendable
fifo write: @1699477101732824378 0x7f81e1480754 1079: java.time.LocalDateTime::isBefore(java.time.chrono.ChronoLocalDateTime) -> boolean
fifo write: @1699477101732889469 0x7f81e926004c 6: aew::a() -> String
fifo write: @1699477101733085672 0x7f81e147fe74 663: java.util.concurrent.TimeUnit::convert(long, java.util.concurrent.TimeUnit) -> long
fifo write: @1699477101733474707 0x7f81e147fa16 37: jdk.nio.zipfs.ZipPath::<init>(jdk.nio.zipfs.ZipFileSystem, byte[]) -> void
fifo write: @1699477101733540838 0x7f81e147f414 315: jdk.nio.zipfs.ZipPath$1::hasNext() -> boolean
fifo write: @1699477101733618919 0x7f81e147eff4 14: java.time.LocalTime::toNanoOfDay() -> long
fifo write: @1699477101733665109 0x7f81e147ec17 60: java.time.LocalDateTime::plusSeconds(long) -> java.time.LocalDateTime
fifo write: @1699477101733715220 0x7f81e147e534 504: jdk.nio.zipfs.ZipPath::getResolved() -> byte[]
fifo write: @1699477101733800091 0x7f81e15dc63a 567: java.time.LocalDateTime::with(java.time.LocalDate, java.time.LocalTime) -> java.time.LocalDateTime
fifo write: @1699477101733838541 0x7f81e15dbeb7 521: jdk.nio.zipfs.ZipCoder$UTF8::toString(byte[]) -> String
fifo write: @1699477101733916192 0x7f81e15db734 596: aew::compareTo(Object) -> int
fifo write: @1699477101733947093 0x7f81e147df14 242: aew::a(aew) -> int
fifo write: @1699477101733980583 0x7f81e15db194 261: java.time.zone.ZoneOffsetTransition::isGap() -> boolean
fifo write: @1699477101734038494 0x7f81e15d9ddf 2300: java.time.LocalDate::plusDays(long) -> java.time.LocalDate
fifo write: @1699477101734082414 0x7f81e15d9714 315: java.time.zone.ZoneOffsetTransition::getDateTimeAfter() -> java.time.LocalDateTime
fifo write: @1699477101734112855 0x7f81e15d9214 173: java.time.zone.ZoneOffsetTransition::getDurationSeconds() -> int
fifo write: @1699477101734200226 0x7f81e199fc5f 2594: java.time.LocalDateTime::plusWithOverflow(java.time.LocalDate, long, long, long, long, int) -> java.time.LocalDateTime
fifo write: @1699477101734241906 0x7f81e199f074 1476: com.google.gson.stream.JsonReader::peek() -> com.google.gson.stream.JsonToken
fifo write: @1699477101734450689 0x7f81e932bb99 1798: com.google.gson.internal.LinkedTreeMap::rebalance(com.google.gson.internal.LinkedTreeMap$Node, boolean) -> void
fifo write: @1699477101735273840 0x7f81e15d8d74 301: com.mojang.serialization.DataResult::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.serialization.DataResult
fifo write: @1699477101735833017 0x7f81e932a814 1868: com.google.gson.stream.JsonReader::nextString() -> String
fifo write: @1699477101735845177 0x7f81e8b9e7e8 27: vtable stub
fifo write: @1699477101737798832 0x7f81e925fce3 46: com.mojang.datafixers.util.Either::left(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477101738166457 0x7f81e925f7d7 35: com.mojang.serialization.DataResult::result() -> java.util.Optional
fifo write: @1699477101738461350 0x7f81e932a16b 62: com.mojang.serialization.DataResult::create(com.mojang.datafixers.util.Either, com.mojang.serialization.Lifecycle) -> com.mojang.serialization.DataResult
fifo write: @1699477101738627293 0x7f81e199e917 516: com.mojang.serialization.DataResult::setLifecycle(com.mojang.serialization.Lifecycle) -> com.mojang.serialization.DataResult
fifo write: @1699477101739161899 0x7f81e9329a8c 471: com.mojang.serialization.DataResult::success(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101739298151 0x7f81e199e414 159: com.google.gson.internal.LinkedTreeMap::findByObject(Object) -> com.google.gson.internal.LinkedTreeMap$Node
fifo write: @1699477101739505714 0x7f81e932974c 6: org.apache.commons.lang3.mutable.MutableObject::getValue() -> Object
fifo write: @1699477101739626425 0x7f81e15d8994 31: String::split(String) -> String[]
fifo write: @1699477101739671296 0x7f81e199df94 185: com.mojang.serialization.codecs.PrimitiveCodec$$Lambda$3722.0x00007f81607b4000::<init>(com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477101739791898 0x7f81e199db14 240: com.mojang.serialization.Codec$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101739934489 0x7f81e199d694 243: java.util.Collections$UnmodifiableCollection::isEmpty() -> boolean
fifo write: @1699477101739993700 0x7f81e199ce37 802: com.mojang.serialization.codecs.PrimitiveCodec$$Lambda$3722.0x00007f81607b4000::apply(Object) -> Object
fifo write: @1699477101740070031 0x7f81e1538794 697: com.mojang.serialization.codecs.PrimitiveCodec::lambda$decode$0(com.mojang.serialization.DynamicOps, Object) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101740130532 0x7f81e1538394 164: com.mojang.serialization.JsonOps::empty() -> Object
fifo write: @1699477101740222443 0x7f81e1536c1f 3486: com.mojang.serialization.codecs.PrimitiveCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101740275224 0x7f81e1535857 2441: com.google.gson.JsonElement::getAsJsonPrimitive() -> com.google.gson.JsonPrimitive
fifo write: @1699477101740302474 0x7f81e932944c 6: aeu$a::b() -> hf
fifo write: @1699477101740331895 0x7f81e1535314 240: aeo::empty() -> Object
fifo write: @1699477101740386815 0x7f81e1534e94 185: com.mojang.serialization.Decoder$1$$Lambda$3812.0x00007f8160817b08::<init>(java.util.function.Function) -> void
fifo write: @1699477101740465266 0x7f81e93290cc 44: org.apache.commons.lang3.mutable.MutableObject::setValue(Object) -> void
fifo write: @1699477101740753030 0x7f81e1534314 1215: sun.security.ssl.SSLAlgorithmDecomposer::decompose(String) -> java.util.Set
fifo write: @1699477101740882992 0x7f81e1533bf4 159: java.util.LinkedList$ListItr::hasNext() -> boolean
fifo write: @1699477101740961143 0x7f81e1b38b14 185: com.mojang.serialization.Decoder$1$$Lambda$3813.0x00007f8160815208::<init>(com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477101741116355 0x7f81e1b360d7 6326: com.mojang.serialization.DataResult$Instance::ap2(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101741210786 0x7f81e1b342d7 4502: com.mojang.serialization.Decoder$1::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101741299777 0x7f81e1642337 3867: com.mojang.serialization.Decoder$1$$Lambda$3812.0x00007f8160817b08::apply(Object) -> Object
fifo write: @1699477101741416239 0x7f81e16409f7 3521: com.mojang.serialization.Decoder$1::lambda$decode$1(java.util.function.Function, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477101741450809 0x7f81e1b33d94 137: java.util.stream.Streams$AbstractStreamBuilderImpl::<init>() -> void
fifo write: @1699477101741547680 0x7f81e1b33697 562: com.mojang.serialization.Decoder$1::lambda$decode$0(com.mojang.datafixers.util.Pair, Object) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101741636161 0x7f81e1b32d3a 663: com.mojang.serialization.Decoder$1$$Lambda$3813.0x00007f8160815208::apply(Object) -> Object
fifo write: @1699477101741727823 0x7f81e16400b4 768: com.google.gson.JsonObject::get(String) -> com.google.gson.JsonElement
fifo write: @1699477101741794233 0x7f81e163fa34 424: com.google.gson.internal.LinkedTreeMap::get(Object) -> Object
fifo write: @1699477101741882075 0x7f81e163eed7 1311: com.mojang.serialization.JsonOps$1::get(String) -> Object
fifo write: @1699477101741976806 0x7f81e163ea14 240: com.mojang.serialization.MapCodec$1::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101742086127 0x7f81e163d637 2763: com.google.common.collect.ImmutableList::asImmutableList(Object[], int) -> com.google.common.collect.ImmutableList
fifo write: @1699477101742191719 0x7f81e1c04054 950: com.mojang.serialization.codecs.FieldDecoder::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101742301830 0x7f81e1c02dd7 2590: com.mojang.serialization.Decoder::parse(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101742347721 0x7f81e1c028f4 95: java.util.Optional::isEmpty() -> boolean
fifo write: @1699477101742365551 0x7f81e8bd0000 504: I2C/C2I adapters(0xbabaaabb)
fifo write: @1699477101742382041 0x7f81e8bcfd00 536: I2C/C2I adapters(0xabaaabbbbb)
fifo write: @1699477101742440742 0x7f81e1c02417 301: java.util.Optional::ifPresent(java.util.function.Consumer) -> void
fifo write: @1699477101742483322 0x7f81e9328acc 3: com.mojang.serialization.JsonOps::compressMaps() -> boolean
fifo write: @1699477101743016599 0x7f81e93693fe 478: com.mojang.datafixers.util.Either$Left::map(java.util.function.Function, java.util.function.Function) -> Object
fifo write: @1699477101743082160 0x7f81e1c01f97 237: com.mojang.serialization.Codec$16::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101743261192 0x7f81e1c01b14 240: aeo::getStringValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101743305923 0x7f81e1c01614 348: com.mojang.serialization.JsonOps::getStringValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101743357914 0x7f81e1c00ada 1278: com.mojang.serialization.DataResult$Instance::point(Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101743401654 0x7f81e1c00594 326: java.util.Optional::orElseGet(java.util.function.Supplier) -> Object
fifo write: @1699477101743535756 0x7f81e1bff1e0 2890: com.mojang.serialization.DataResult::apply2stable(java.util.function.BiFunction, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477101743569676 0x7f81e1bfec94 240: com.mojang.serialization.DataResult::error() -> java.util.Optional
fifo write: @1699477101743604397 0x7f81e1bfe359 786: com.google.common.collect.ImmutableList$Builder::getReadyToExpandTo(int) -> void
fifo write: @1699477101743653647 0x7f81e15c99be 908: com.google.common.collect.ImmutableList$Builder::add(Object) -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477101743701008 0x7f81e1bfde14 144: com.mojang.datafixers.util.Either$Left::right() -> java.util.Optional
fifo write: @1699477101743833150 0x7f81e15c9494 354: com.mojang.serialization.Decoder$$Lambda$3731.0x00007f81607b56b8::apply(Object) -> Object
fifo write: @1699477101743922431 0x7f81e15c8ff4 159: sun.security.util.math.intpoly.IntegerPolynomial$Element::isSummand() -> boolean
fifo write: @1699477101744028002 0x7f81e15c72df 4601: com.mojang.serialization.JsonOps::getStringValue(com.google.gson.JsonElement) -> com.mojang.serialization.DataResult
fifo write: @1699477101744067783 0x7f81e93287cc 6: bjj::c() -> String
fifo write: @1699477101744120333 0x7f81e15c6d17 122: com.mojang.serialization.codecs.ListCodec$$Lambda$3721.0x00007f81607afbb8::accept(Object) -> void
fifo write: @1699477101744181244 0x7f81e15c6894 185: com.mojang.serialization.codecs.ListCodec$$Lambda$3725.0x00007f81607b46c8::<init>(com.google.common.collect.ImmutableList$Builder) -> void
fifo write: @1699477101744240575 0x7f81e15c6394 230: com.mojang.serialization.codecs.ListCodec$$Lambda$3724.0x00007f81607b4490::<init>(java.util.stream.Stream$Builder, Object) -> void
fifo write: @1699477101744321166 0x7f81e15c5ef4 154: com.mojang.serialization.codecs.ListCodec::lambda$decode$1(com.google.common.collect.ImmutableList$Builder, com.mojang.datafixers.util.Unit, com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Unit
fifo write: @1699477101744387307 0x7f81e15c5734 749: com.mojang.serialization.codecs.ListCodec$$Lambda$3725.0x00007f81607b46c8::apply(Object, Object) -> Object
fifo write: @1699477101744474528 0x7f81e15c4cd7 999: com.google.gson.JsonArray::add(com.google.gson.JsonElement) -> void
fifo write: @1699477101744634790 0x7f81e15c3e97 1811: com.google.gson.stream.JsonReader::isLiteral(char) -> boolean
fifo write: @1699477101744689671 0x7f81e15c329a 1391: sun.security.util.math.intpoly.IntegerPolynomial25519::carryReduce(long[], long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477101744804972 0x7f81e1a3aa57 4084: com.mojang.serialization.codecs.ListCodec::lambda$decode$2(com.mojang.serialization.DynamicOps, java.util.stream.Stream$Builder, org.apache.commons.lang3.mutable.MutableObject, com.google.common.collect.ImmutableList$Builder, Object) -> void
fifo write: @1699477101744836013 0x7f81e15c2cf4 429: Long::stringSize(long) -> int
fifo write: @1699477101744853433 0x7f81e8b9e818 168: itable stub
fifo write: @1699477101744895644 0x7f81e15c28f4 92: java.util.ArrayDeque::isEmpty() -> boolean
fifo write: @1699477101744979535 0x7f81e15c2414 47: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setValue(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101745038605 0x7f81e1a3a414 279: com.mojang.datafixers.util.Either$Right::<init>(Object) -> void
fifo write: @1699477101745116016 0x7f81e1a38ad9 3341: com.google.gson.stream.JsonReader::peekNumber() -> int
fifo write: @1699477101745184207 0x7f81e1a38399 474: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setValue(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101745265748 0x7f81e1a375b9 1324: Long::getChars(long, int, byte[]) -> int
fifo write: @1699477101745316749 0x7f81e1a36cb4 993: aer$1::a(aev) -> java.util.Optional
fifo write: @1699477101745427340 0x7f81e1a3477f 4575: com.google.gson.stream.JsonReader::peekKeyword() -> int
fifo write: @1699477101745473741 0x7f81e1b19394 337: aeu$$Lambda$3948.0x00007f8160837b70::apply(Object) -> Object
fifo write: @1699477101745540522 0x7f81e1b18f94 47: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101745612443 0x7f81e1b18919 536: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101745708684 0x7f81e1b16aaa 3700: aew::b(String) -> com.mojang.serialization.DataResult
fifo write: @1699477101745789475 0x7f81e1b15a54 1730: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setSum(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101745858166 0x7f81e1b144d7 3120: aeu::b(aev) -> java.util.Optional
fifo write: @1699477101745919167 0x7f81e1b14014 47: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setDifference(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101745994298 0x7f81e1b13737 847: com.mojang.serialization.Codec$1::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101746060099 0x7f81e1b13314 47: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setSum(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101746118309 0x7f81e1b12d94 384: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setSquare() -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101746190190 0x7f81e1b12894 271: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setSquare() -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101746255711 0x7f81e1b1143c 3130: sun.security.util.math.intpoly.IntegerPolynomial25519::mult(long[], long[], long[]) -> void
fifo write: @1699477101746363362 0x7f81e149bb54 1730: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setDifference(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101746471814 0x7f81e149a397 3193: aew$$Lambda$283.0x00007f81601b25f8::apply(Object) -> Object
fifo write: @1699477101746516564 0x7f81e1b10d94 345: Integer::compareTo(Integer) -> int
fifo write: @1699477101746565275 0x7f81e1499c74 324: sun.security.util.math.intpoly.IntegerPolynomial::conditionalSwap(int, long[], long[]) -> void
fifo write: @1699477101746617066 0x7f81e1498ebc 1932: sun.security.util.math.intpoly.IntegerPolynomial25519::square(long[], long[]) -> void
fifo write: @1699477101746680207 0x7f81e1498994 348: com.mojang.serialization.JsonOps::getNumberValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101746720437 0x7f81e1498514 260: com.google.gson.JsonPrimitive::isNumber() -> boolean
fifo write: @1699477101746776198 0x7f81e1498094 240: aeo::getNumberValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101746829568 0x7f81e1497377 1947: com.google.gson.JsonPrimitive::getAsNumber() -> Number
fifo write: @1699477101746875109 0x7f81e1496e14 325: java.util.HashSet::remove(Object) -> boolean
fifo write: @1699477101746941280 0x7f81e1496814 383: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::conditionalSwapWith(sun.security.util.math.MutableIntegerModuloP, int) -> void
fifo write: @1699477101747019691 0x7f81e1496377 170: sun.security.ec.XECOperations::cswap(int, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP) -> void
fifo write: @1699477101747105282 0x7f81e1495514 1893: com.google.common.collect.ImmutableList::copyOf(java.util.Collection) -> com.google.common.collect.ImmutableList
fifo write: @1699477101747144383 0x7f81e1494f14 314: ThreadLocal::<init>() -> void
fifo write: @1699477101747179663 0x7f81e1494b05 92: ThreadLocal::nextHashCode() -> int
fifo write: @1699477101747227374 0x7f81e1494514 425: sun.security.util.math.intpoly.IntegerPolynomial::multByInt(long[], long) -> void
fifo write: @1699477101747274114 0x7f81e1493fb4 374: java.util.ArrayDeque::removeLast() -> Object
fifo write: @1699477101747318685 0x7f81e1436594 643: Long::toString(long) -> String
fifo write: @1699477101747380016 0x7f81e1435d34 774: java.util.ArrayDeque::pollLast() -> Object
fifo write: @1699477101747433826 0x7f81e1435439 827: com.google.gson.stream.JsonReader::push(int) -> void
fifo write: @1699477101747476967 0x7f81e1434e34 457: java.math.BigInteger::testBit(int) -> boolean
fifo write: @1699477101747546138 0x7f81e1434914 230: com.mojang.serialization.DataResult$PartialResult::<init>(java.util.function.Supplier, java.util.Optional) -> void
fifo write: @1699477101747592248 0x7f81e1434494 185: aes$$Lambda$3950.0x00007f8160832000::<init>(aev) -> void
fifo write: @1699477101747648279 0x7f81e1434014 185: aes$$Lambda$3951.0x00007f8160832228::<init>(com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477101747878412 0x7f81e142eb3f 14510: com.mojang.serialization.JsonOps::getNumberValue(com.google.gson.JsonElement) -> com.mojang.serialization.DataResult
fifo write: @1699477101747948853 0x7f81e142daf7 1528: aes$$Lambda$3949.0x00007f8160837db0::apply(Object) -> Object
fifo write: @1699477101748022334 0x7f81e1da7a17 562: aes::a(com.mojang.datafixers.util.Pair, he$c) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101748086035 0x7f81e1da8137 896: aes$$Lambda$3951.0x00007f8160832228::apply(Object) -> Object
fifo write: @1699477101748129315 0x7f81e1da8a14 185: hm$$Lambda$3958.0x00007f81608331c0::<init>(hm) -> void
fifo write: @1699477101748188646 0x7f81e1da8ef7 1617: hm::h(aev) -> he$c
fifo write: @1699477101748256377 0x7f81e1da9b77 1943: hm$2::b(aev) -> he$c
fifo write: @1699477101748312148 0x7f81e1daa994 505: aeq$$Lambda$2400.0x00007f816066eab0::apply(Object) -> Object
fifo write: @1699477101748382729 0x7f81e9368855 878: sun.security.util.math.intpoly.IntegerPolynomial25519::carryReduce(long[], long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477101748464970 0x7f81e1daaff9 872: com.google.gson.internal.LazilyParsedNumber::intValue() -> int
fifo write: @1699477101748568261 0x7f81e1dab937 718: com.mojang.datafixers.util.Pair::mapFirst(java.util.function.Function) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101748664412 0x7f81e1dac1d7 2808: hm$2::a(aev) -> java.util.Optional
fifo write: @1699477101748779154 0x7f81e1dad514 387: asp$$Lambda$158.0x00007f816013ccb8::apply(Object) -> Object
fifo write: @1699477101748860495 0x7f81e1dada54 1136: com.mojang.serialization.Codec$12$$Lambda$3814.0x00007f8160815450::apply(Object) -> Object
fifo write: @1699477101749034637 0x7f81e93282d0 55: com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator::hasNext() -> boolean
fifo write: @1699477101749155188 0x7f81e1dae4da 2600: com.mojang.serialization.Codec$12::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101749177749 0x7f81e8bcf780 1160: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebebebebebebebebebebebebe)
fifo write: @1699477101749198509 0x7f81e8bcb900 736: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebe)
fifo write: @1699477101749215999 0x7f81e8bcb380 1128: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebebebebebebebebebebebe)
fifo write: @1699477101749263120 0x7f81e1daf794 243: aeo::compressMaps() -> boolean
fifo write: @1699477101749356391 0x7f81e9367fb6 405: aew::d(String, String) -> String
fifo write: @1699477101749406152 0x7f81e1dafc17 362: java.math.MutableBigInteger::<init>() -> void
fifo write: @1699477101749478883 0x7f81e8bcee00 1472: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe)
fifo write: @1699477101749497033 0x7f81e8bce780 1440: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe)
fifo write: @1699477101749735746 0x7f81e1db0177 446: java.math.BigInteger::shiftRightImplWorker(int[], int[], int, int, int) -> void
fifo write: @1699477101749909048 0x7f81e1db0857 547: java.math.BigInteger::shiftRight(int) -> java.math.BigInteger
fifo write: @1699477101750010200 0x7f81e8bce400 768: I2C/C2I adapters(0xbbbebebebebebebebebebebebebebebe)
fifo write: @1699477101750398045 0x7f81e1db0fd4 553: java.math.BigInteger::mod(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477101750471115 0x7f81e1db1734 449: java.math.BigInteger::remainder(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477101750558057 0x7f81e1db1e19 315: java.math.BigInteger::longValue() -> long
fifo write: @1699477101750687718 0x7f81e142d696 37: java.math.MutableBigInteger::divideKnuth(java.math.MutableBigInteger, java.math.MutableBigInteger) -> java.math.MutableBigInteger
fifo write: @1699477101750976312 0x7f81e1db246d 1949: java.math.BigInteger::remainderKnuth(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477101751082063 0x7f81e1db3534 2292: sun.nio.ch.Util::getTemporaryDirectBuffer(int) -> java.nio.ByteBuffer
fifo write: @1699477101751139084 0x7f81e1db46b7 403: java.math.MutableBigInteger::toBigInteger(int) -> java.math.BigInteger
fifo write: @1699477101751355677 0x7f81e1db4e8b 5124: java.math.MutableBigInteger::divideKnuth(java.math.MutableBigInteger, java.math.MutableBigInteger, boolean) -> java.math.MutableBigInteger
fifo write: @1699477101751428968 0x7f81e1db73c3 386: com.mojang.datafixers.util.Either::right(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477101751863033 0x7f81e1db7c87 7980: aev$a::equals(Object) -> boolean
fifo write: @1699477101751915834 0x7f81e1dbb034 641: java.math.MutableBigInteger::normalize() -> void
fifo write: @1699477101752020885 0x7f81e1dbb814 141: com.mojang.serialization.Decoder$$Lambda$153.0x00007f81601392e8::get() -> Object
fifo write: @1699477101752354740 0x7f81e1dbc30f 22635: aes::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101752448641 0x7f81e93677b6 389: aew::c(String, String) -> String
fifo write: @1699477101752551352 0x7f81e1dc4a14 47: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.SmallValue) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101752655384 0x7f81e1dc4e14 525: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.SmallValue) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101752716294 0x7f81e93674cc 6: sun.security.ec.point.ProjectivePoint::getY() -> sun.security.util.math.IntegerModuloP
fifo write: @1699477101752776445 0x7f81e93671cc 6: sun.security.ec.point.ProjectivePoint::getX() -> sun.security.util.math.IntegerModuloP
fifo write: @1699477101752961628 0x7f81e1dc555a 3082: java.util.List::of(Object[]) -> java.util.List
fifo write: @1699477101753027318 0x7f81e9366ecc 6: sun.security.ec.point.ProjectivePoint::getZ() -> sun.security.util.math.IntegerModuloP
fifo write: @1699477101753047659 0x7f81e8b9e8d0 27: vtable stub
fifo write: @1699477101753741188 0x7f81e1dc6b1a 1055: sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0(long[], long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477101753820379 0x7f81e1dc751a 1737: sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce(long[], long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477101754145113 0x7f81e1dc8014 185: com.mojang.datafixers.util.Either$$Lambda$3730.0x00007f81607b5470::<init>(java.util.function.Function) -> void
fifo write: @1699477101754213614 0x7f81e1dc84b7 553: com.mojang.datafixers.util.Either$$Lambda$3729.0x00007f81607b5230::apply(Object) -> Object
fifo write: @1699477101754280345 0x7f81e1dc8b3c 3130: sun.security.util.math.intpoly.IntegerPolynomialP256::mult(long[], long[], long[]) -> void
fifo write: @1699477101754327875 0x7f81e1dc9f94 137: com.google.common.collect.ImmutableCollection$Builder::<init>() -> void
fifo write: @1699477101754392666 0x7f81e1dca3de 1118: java.util.Iterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477101754452037 0x7f81e1dcad9c 540: sun.security.util.math.intpoly.IntegerPolynomialP256::reduce(long[]) -> void
fifo write: @1699477101754541218 0x7f81e1dcb597 2167: com.mojang.datafixers.util.Either::mapRight(java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477101754594839 0x7f81e1dcc3f4 305: sun.security.util.math.intpoly.IntegerPolynomial::conditionalAssign(int, long[], long[]) -> void
fifo write: @1699477101754656620 0x7f81e1dcc99a 1028: sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce(long[], long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477101754817282 0x7f81e9365110 3515: aew::b(String, char) -> String[]
fifo write: @1699477101754866992 0x7f81e1dcd397 446: com.google.common.collect.ImmutableList$Builder::<init>(int) -> void
fifo write: @1699477101754920393 0x7f81e1dcd997 542: com.google.common.collect.ImmutableList$Builder::<init>() -> void
fifo write: @1699477101754990404 0x7f81e1dce014 377: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::conditionalSet(sun.security.util.math.IntegerModuloP, int) -> void
fifo write: @1699477101755056005 0x7f81e1dce594 47: com.google.common.collect.ImmutableList$Builder::build() -> com.google.common.collect.ImmutableList
fifo write: @1699477101755128896 0x7f81e1dce9e7 644: com.google.common.collect.ImmutableList::builder() -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477101755200287 0x7f81e1dcf114 376: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setReduced() -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101760977491 0x7f81e1dcf694 271: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setReduced() -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101761068542 0x7f81e1dcfb94 332: com.mojang.serialization.DataResult$$Lambda$3723.0x00007f81607b4248::apply(Object) -> Object
fifo write: @1699477101761147193 0x7f81e9364bf0 331: com.mojang.datafixers.util.Either$Left::mapBoth(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477101761219214 0x7f81e1dd0106 595: com.mojang.datafixers.util.Either$Right::mapBoth(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477101761289015 0x7f81e1dd0834 842: sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet(sun.security.ec.point.Point, int) -> sun.security.ec.point.ProjectivePoint$Mutable
fifo write: @1699477101761354686 0x7f81e1dd0f94 240: com.mojang.datafixers.util.Either$Right::map(java.util.function.Function, java.util.function.Function) -> Object
fifo write: @1699477101761442177 0x7f81e1dd14a1 2508: sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet(sun.security.ec.point.ProjectivePoint, int) -> sun.security.ec.point.ProjectivePoint$Mutable
fifo write: @1699477101761489668 0x7f81e1dd2794 185: com.mojang.serialization.DataResult$$Lambda$3728.0x00007f81607b4fe8::<init>(Object) -> void
fifo write: @1699477101761586339 0x7f81e1dd2ccd 2082: com.mojang.serialization.DataResult::lambda$map$6(java.util.function.Function, com.mojang.serialization.DataResult$PartialResult) -> com.mojang.serialization.DataResult$PartialResult
fifo write: @1699477101761637820 0x7f81e1dd3d3c 1932: sun.security.util.math.intpoly.IntegerPolynomialP256::square(long[], long[]) -> void
fifo write: @1699477101761700760 0x7f81e93641d8 635: sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0(long[], long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477101762143896 0x7f81e9360e18 3788: com.google.common.collect.MapMakerInternalMap::get(Object) -> Object
fifo write: @1699477101762335319 0x7f81e1dd4c17 3915: com.mojang.serialization.DataResult::setPartial(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101762389829 0x7f81e1dd6537 716: com.google.common.collect.SingletonImmutableList::iterator() -> java.util.Iterator
fifo write: @1699477101762474980 0x7f81e9360a4c 6: bfk$a::a() -> bfj
fifo write: @1699477101762510331 0x7f81e936074c 2: bfj::a() -> int
fifo write: @1699477101762562442 0x7f81e1dd6c99 351: arf$$Lambda$192.0x00007f816018a240::apply(Object) -> Object
fifo write: @1699477101762624952 0x7f81e1dd7214 707: java.nio.file.Files::newInputStream(java.nio.file.Path, java.nio.file.OpenOption[]) -> java.io.InputStream
fifo write: @1699477101762726264 0x7f81e1dd7aa0 3808: arf::a(int, int, java.util.function.Function, Integer) -> com.mojang.serialization.DataResult
fifo write: @1699477101762793225 0x7f81e1dd9717 3024: com.google.gson.stream.JsonReader::endObject() -> void
fifo write: @1699477101762851635 0x7f81e1ddaf7c 2514: com.google.gson.stream.JsonReader::beginObject() -> void
fifo write: @1699477101762912626 0x7f81e1ddc49c 2575: com.google.gson.stream.JsonReader::beginArray() -> void
fifo write: @1699477101762973317 0x7f81e1ddda77 2564: com.google.gson.stream.JsonReader::endArray() -> void
fifo write: @1699477101763037588 0x7f81e1ddef94 230: com.mojang.serialization.codecs.ListCodec$$Lambda$3720.0x00007f81607af970::<init>(com.mojang.serialization.codecs.ListCodec, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477101763093378 0x7f81e1ddf494 393: com.mojang.serialization.codecs.ListCodec$$Lambda$3720.0x00007f81607af970::apply(Object) -> Object
fifo write: @1699477101763443263 0x7f81e91854d8 4949: java.util.concurrent.ConcurrentMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477101763482463 0x7f81e1ddfa37 810: com.google.gson.JsonArray::<init>() -> void
fifo write: @1699477101763524664 0x7f81e1de0214 234: java.util.stream.Streams$StreamBuilderImpl::<init>() -> void
fifo write: @1699477101763573285 0x7f81e1de06c4 341: java.util.stream.Stream::builder() -> java.util.stream.Stream$Builder
fifo write: @1699477101763612445 0x7f81e1de0b94 252: com.google.gson.JsonElement::isJsonObject() -> boolean
fifo write: @1699477101763664266 0x7f81e1de1014 185: com.mojang.serialization.Decoder$2$$Lambda$3811.0x00007f81608178c0::<init>(java.util.function.Function) -> void
fifo write: @1699477101763746197 0x7f81e9184afe 557: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setSum(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101763808648 0x7f81e1de14b4 752: arf$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101763858968 0x7f81e936002f 444: sun.security.util.math.intpoly.IntegerPolynomial::conditionalAssign(int, long[], long[]) -> void
fifo write: @1699477101764200033 0x7f81e918134e 3923: aev::a(aew, aew) -> aev
fifo write: @1699477101764256823 0x7f81e1de1cd7 1188: com.mojang.serialization.Decoder$2$$Lambda$3811.0x00007f81608178c0::apply(Object) -> Object
fifo write: @1699477101764343345 0x7f81e1de2897 3515: com.mojang.serialization.Decoder$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101764418356 0x7f81e1de4141 2024: sun.nio.ch.IOUtil::read(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477101764516577 0x7f81e1de541f 5269: com.mojang.serialization.codecs.ListCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101764591338 0x7f81e91808d8 627: sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce(long[], long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477101764663199 0x7f81e1de7497 823: com.mojang.serialization.Decoder$2::lambda$decode$0(java.util.function.Function, com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101764743070 0x7f81e1de7df7 1467: com.mojang.serialization.Decoder$5::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101764809451 0x7f81e1de8ad7 2441: com.google.gson.JsonElement::getAsJsonObject() -> com.google.gson.JsonObject
fifo write: @1699477101764953302 0x7f81e1dea157 12538: com.mojang.serialization.codecs.ListCodec::lambda$decode$4(com.mojang.serialization.DynamicOps, java.util.function.Consumer) -> com.mojang.serialization.DataResult
fifo write: @1699477101765012043 0x7f81e1deed14 230: com.mojang.serialization.MapDecoder$$Lambda$3718.0x00007f81607ae588::<init>(com.mojang.serialization.MapDecoder, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477101765095384 0x7f81e917ffe0 583: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setDifference(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101765159595 0x7f81e1def214 167: com.mojang.serialization.MapDecoder::lambda$compressedDecode$1(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101765214806 0x7f81e1def6b4 850: com.mojang.serialization.MapDecoder$$Lambda$3718.0x00007f81607ae588::apply(Object) -> Object
fifo write: @1699477101765268427 0x7f81e1defe94 348: com.mojang.serialization.JsonOps::getMap(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101765354838 0x7f81e1df049f 3491: com.mojang.serialization.MapCodec$MapCodecCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101765409648 0x7f81e1df1c14 340: com.mojang.serialization.JsonOps$1::<init>(com.mojang.serialization.JsonOps, com.google.gson.JsonObject) -> void
fifo write: @1699477101765461369 0x7f81e1df2114 240: aeo::getMap(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101765683392 0x7f81e1df2c55 22868: sun.security.ec.ECOperations::setDouble(sun.security.ec.point.ProjectivePoint$Mutable, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP) -> void
fifo write: @1699477101765735323 0x7f81e1dfb639 941: java.util.Spliterators$ArraySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477101765808183 0x7f81e1dfc057 2698: com.mojang.serialization.JsonOps::getMap(com.google.gson.JsonElement) -> com.mojang.serialization.DataResult
fifo write: @1699477101765856314 0x7f81e1dfd3ba 1364: aev::a(aew, aew) -> aev
fifo write: @1699477101766010326 0x7f81e92724d9 3752: aew::<init>(String) -> void
fifo write: @1699477101766054367 0x7f81e917fccc 6: com.mojang.serialization.codecs.SimpleMapCodec::keyCodec() -> com.mojang.serialization.Codec
fifo write: @1699477101766104117 0x7f81e917f9cc 6: com.mojang.serialization.codecs.SimpleMapCodec::elementCodec() -> com.mojang.serialization.Codec
fifo write: @1699477101766228849 0x7f81e1dfe107 8922: com.mojang.serialization.MapDecoder::compressedDecode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101766681555 0x7f81e926ea4e 4203: aev::a(aev, aew) -> aev
fifo write: @1699477101766737135 0x7f81e926de72 810: sun.security.util.math.intpoly.IntegerPolynomial::multByInt(long[], long) -> void
fifo write: @1699477101766807726 0x7f81e1e0187c 2297: com.mojang.serialization.JsonOps::lambda$getList$21(com.google.gson.JsonElement, java.util.function.Consumer) -> void
fifo write: @1699477101766914758 0x7f81e1e02a1c 1787: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$7::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101766968078 0x7f81e1e03894 505: com.mojang.datafixers.kinds.Applicative$$Lambda$3918.0x00007f816082b868::apply(Object) -> Object
fifo write: @1699477101767025159 0x7f81e1e03e94 185: com.mojang.datafixers.util.Function4$$Lambda$3919.0x00007f816082baa8::<init>(com.mojang.datafixers.util.Function4) -> void
fifo write: @1699477101767090450 0x7f81e1e04314 275: com.mojang.datafixers.util.Function4$$Lambda$3920.0x00007f816082bce0::<init>(com.mojang.datafixers.util.Function4, Object, Object) -> void
fifo write: @1699477101767144541 0x7f81e1e048d7 1155: com.mojang.datafixers.util.Function4::curry2() -> java.util.function.BiFunction
fifo write: @1699477101767227592 0x7f81e1e05337 2358: com.mojang.serialization.DataResult$Instance::map(java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101767285763 0x7f81e1e0649a 343: com.mojang.datafixers.util.Function4$$Lambda$3920.0x00007f816082bce0::apply(Object, Object) -> Object
fifo write: @1699477101767348603 0x7f81e1e06a14 167: com.mojang.datafixers.util.Function4::lambda$curry2$2(Object, Object, Object, Object) -> Object
fifo write: @1699477101767416044 0x7f81e1e06ef7 1721: com.mojang.datafixers.util.Function4$$Lambda$3919.0x00007f816082baa8::apply(Object, Object) -> Object
fifo write: @1699477101767480435 0x7f81e1e07cd7 1390: com.mojang.datafixers.util.Function4::lambda$curry2$3(Object, Object) -> java.util.function.BiFunction
fifo write: @1699477101767537606 0x7f81e926d382 780: AbstractStringBuilder::appendChars(char[], int, int) -> void
fifo write: @1699477101767577796 0x7f81e917f4d0 47: java.util.Optional::get() -> Object
fifo write: @1699477101767758519 0x7f81e912b423 4344: com.google.common.collect.ImmutableMap$Builder::build() -> com.google.common.collect.ImmutableMap
fifo write: @1699477101767796969 0x7f81e1e08894 252: com.google.gson.JsonElement::isJsonArray() -> boolean
fifo write: @1699477101767910521 0x7f81e1e08d14 394: com.mojang.serialization.codecs.ListCodec$$Lambda$3727.0x00007f81607b4da0::apply(Object) -> Object
fifo write: @1699477101767965271 0x7f81e1e09214 240: aeo::getList(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101768019382 0x7f81e1e09694 185: com.mojang.serialization.JsonOps$$Lambda$3816.0x00007f81608158d0::<init>(com.google.gson.JsonElement) -> void
fifo write: @1699477101768071973 0x7f81e1e09b14 356: com.mojang.serialization.JsonOps$$Lambda$3816.0x00007f81608158d0::accept(Object) -> void
fifo write: @1699477101768125513 0x7f81e1e0a014 185: com.mojang.serialization.JsonOps$$Lambda$3817.0x00007f8160815b08::<init>(com.google.gson.JsonArray) -> void
fifo write: @1699477101768178264 0x7f81e1e0a494 240: aeo::createList(java.util.stream.Stream) -> Object
fifo write: @1699477101768230325 0x7f81e926cfb4 111: java.util.Optional::ofNullable(Object) -> java.util.Optional
fifo write: @1699477101768320006 0x7f81e1e0aa57 4822: com.mojang.serialization.JsonOps::getList(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101768390747 0x7f81e1e0c857 2572: com.mojang.serialization.JsonOps::createList(java.util.stream.Stream) -> Object
fifo write: @1699477101768463488 0x7f81e1e0db8b 2423: com.mojang.serialization.JsonOps::createList(java.util.stream.Stream) -> com.google.gson.JsonElement
fifo write: @1699477101768560619 0x7f81e1e0eddf 4500: com.mojang.serialization.JsonOps::getList(com.google.gson.JsonElement) -> com.mojang.serialization.DataResult
fifo write: @1699477101768661500 0x7f81e1e10994 365: com.mojang.serialization.codecs.ListCodec$$Lambda$3721.0x00007f81607afbb8::<init>(com.mojang.serialization.codecs.ListCodec, com.mojang.serialization.DynamicOps, java.util.stream.Stream$Builder, org.apache.commons.lang3.mutable.MutableObject, com.google.common.collect.ImmutableList$Builder) -> void
fifo write: @1699477101768717761 0x7f81e1e11054 697: java.util.stream.Streams$StreamBuilderImpl::build() -> java.util.stream.Stream
fifo write: @1699477101768803702 0x7f81e1e117f4 436: java.util.function.Function::identity() -> java.util.function.Function
fifo write: @1699477101768864303 0x7f81e1a34274 23: java.util.List::copyOf(java.util.Collection) -> java.util.List
fifo write: @1699477101768923804 0x7f81e1e11d34 1517: java.util.ImmutableCollections::listCopy(java.util.Collection) -> java.util.List
fifo write: @1699477101768997865 0x7f81e1e12814 253: com.mojang.serialization.codecs.RecordCodecBuilder$2::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101769058995 0x7f81e926c95b 104: com.mojang.serialization.Lifecycle::add(com.mojang.serialization.Lifecycle) -> com.mojang.serialization.Lifecycle
fifo write: @1699477101769123656 0x7f81e1e12cfa 508: com.mojang.serialization.MapCodec$MapCodecCodec::lambda$decode$0(Object, Object) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101769183877 0x7f81e1e133ba 610: com.mojang.serialization.MapCodec$MapCodecCodec$$Lambda$3732.0x00007f81607b58f8::apply(Object) -> Object
fifo write: @1699477101769288768 0x7f81e1e13cd7 5943: com.mojang.serialization.codecs.EitherCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101769332109 0x7f81e926c64c 6: java.time.LocalDateTime::toLocalTime() -> java.time.LocalTime
fifo write: @1699477101769386230 0x7f81e1e16217 672: hm::a(he$c) -> Object
fifo write: @1699477101769425740 0x7f81e926c2ec 26: java.io.InputStream::<init>() -> void
fifo write: @1699477101769473391 0x7f81e1e16a14 39: com.google.common.collect.ImmutableCollection::toArray() -> Object[]
fifo write: @1699477101769554732 0x7f81e926bccc 6: com.google.common.collect.RegularImmutableList::internalArray() -> Object[]
fifo write: @1699477101769628683 0x7f81e1e16f04 2916: com.google.common.collect.ImmutableCollection::toArray(Object[]) -> Object[]
fifo write: @1699477101769692634 0x7f81e1e18457 2441: com.google.gson.JsonElement::getAsJsonArray() -> com.google.gson.JsonArray
fifo write: @1699477101769739364 0x7f81e1e19734 724: hm::a(aew) -> Object
fifo write: @1699477101769881096 0x7f81e8b9e900 27: vtable stub
fifo write: @1699477101769946157 0x7f81e1e19e94 144: com.mojang.datafixers.util.Either$Right::left() -> java.util.Optional
fifo write: @1699477101770083639 0x7f81e1e1a330 1499: com.mojang.serialization.DataResult::error(java.util.function.Supplier, com.mojang.serialization.Lifecycle) -> com.mojang.serialization.DataResult
fifo write: @1699477101770201170 0x7f81e1e1afb7 553: com.mojang.serialization.codecs.EitherCodec$$Lambda$3935.0x00007f8160835ff8::apply(Object) -> Object
fifo write: @1699477101770288341 0x7f81e1e1b697 2022: com.mojang.serialization.codecs.EitherCodec$$Lambda$3934.0x00007f8160835db8::apply(Object) -> Object
fifo write: @1699477101770363412 0x7f81e1e1c5da 1681: com.mojang.serialization.codecs.EitherCodec::lambda$decode$1(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101770438133 0x7f81e1e1d394 275: com.mojang.serialization.DataResult$$Lambda$3758.0x00007f81607bc8d8::<init>(com.mojang.serialization.DataResult, java.util.function.Function, com.mojang.serialization.DataResult$PartialResult) -> void
fifo write: @1699477101770505434 0x7f81e1e1d914 230: com.mojang.serialization.DataResult$$Lambda$3759.0x00007f81607bcb20::<init>(com.mojang.serialization.DataResult, com.mojang.serialization.DataResult$PartialResult) -> void
fifo write: @1699477101770570595 0x7f81e1e1de67 526: hi::a(java.util.List) -> hi$a
fifo write: @1699477101770633076 0x7f81e1e1e577 1808: com.mojang.serialization.DataResult$$Lambda$3759.0x00007f81607bcb20::get() -> Object
fifo write: @1699477101770702947 0x7f81e1e1f4d0 1608: com.mojang.serialization.DataResult::lambda$flatMap$16(com.mojang.serialization.DataResult$PartialResult) -> com.mojang.serialization.DataResult
fifo write: @1699477101770745087 0x7f81e1e20214 279: hi$a::<init>(java.util.List) -> void
fifo write: @1699477101770812898 0x7f81e1e20714 185: aeq$$Lambda$3961.0x00007f8160833a80::<init>(hf) -> void
fifo write: @1699477101770849299 0x7f81e1e20b94 137: hi$b::<init>() -> void
fifo write: @1699477101770991940 0x7f81e1e21107 4968: com.mojang.serialization.DataResult::lambda$flatMap$17(java.util.function.Function, com.mojang.serialization.DataResult$PartialResult) -> com.mojang.serialization.DataResult
fifo write: @1699477101771034511 0x7f81e1e23194 185: aeq$$Lambda$3962.0x00007f8160833cc8::<init>(hf) -> void
fifo write: @1699477101771166933 0x7f81e1e23777 5343: com.mojang.serialization.DataResult$$Lambda$1041.0x00007f81604343a8::apply(Object) -> Object
fifo write: @1699477101771221543 0x7f81e1e25a17 303: java.util.stream.ReduceOps$1ReducingSink::accept(Object) -> void
fifo write: @1699477101771319605 0x7f81e1e25f7f 2116: aeq::a(hf, com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101771391236 0x7f81e1e27037 2470: aeq$$Lambda$3961.0x00007f8160833a80::apply(Object) -> Object
fifo write: @1699477101771556378 0x7f81e1e28274 1386: gy::a(aew) -> Object
fifo write: @1699477101771621779 0x7f81e1e28f63 1206: java.util.concurrent.ConcurrentMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477101772101325 0x7f81e1e29b77 6434: com.mojang.serialization.codecs.OptionalFieldCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101772246047 0x7f81e1e2c5a7 5640: hq::g(aew) -> com.mojang.serialization.DataResult
fifo write: @1699477101772343968 0x7f81e1e2eab7 6236: hq$$Lambda$511.0x00007f8160302098::apply(Object) -> Object
fifo write: @1699477101772399809 0x7f81e1e311da 1278: hq$$Lambda$3928.0x00007f8160835038::apply(Object) -> Object
fifo write: @1699477101772446829 0x7f81e1e31d14 230: hq$$Lambda$3929.0x00007f8160835278::<init>(hq, aew) -> void
fifo write: @1699477101772506390 0x7f81e1e32214 230: arf$3$$Lambda$3930.0x00007f81608354a0::<init>(com.mojang.serialization.DataResult, java.util.function.Function) -> void
fifo write: @1699477101772631862 0x7f81e1e32837 4153: com.mojang.serialization.Codec$4::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101772807934 0x7f81e1e3488f 11880: aeq::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101772897575 0x7f81e1e39014 488: hm::e(Object) -> com.mojang.serialization.Lifecycle
fifo write: @1699477101772998766 0x7f81e1e395d7 1490: arf$3$$Lambda$3930.0x00007f81608354a0::apply(Object) -> Object
fifo write: @1699477101773087527 0x7f81e1e3a23a 1141: arf$3::a(com.mojang.serialization.DataResult, java.util.function.Function, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477101773139978 0x7f81e1e3ad34 787: hq$$Lambda$515.0x00007f8160302978::apply(Object) -> Object
fifo write: @1699477101773261000 0x7f81e9129253 2380: com.google.gson.stream.JsonReader::doPeek() -> int
fifo write: @1699477101773353021 0x7f81e1e3b4da 965: com.mojang.datafixers.kinds.Applicative::ap4(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101773456032 0x7f81e1e3be9f 3625: arf$3::apply(com.mojang.serialization.DynamicOps, Object, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477101773507303 0x7f81e1e3d814 185: com.mojang.serialization.DataResult$$Lambda$3965.0x00007f8160838788::<init>(com.mojang.serialization.DataResult) -> void
fifo write: @1699477101773571364 0x7f81e1e3dc94 230: com.mojang.serialization.DataResult$$Lambda$3966.0x00007f81608389d0::<init>(com.mojang.serialization.DataResult, java.util.function.Consumer) -> void
fifo write: @1699477101773633025 0x7f81e1e3e210 912: com.mojang.serialization.DataResult::lambda$promotePartial$7(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101773694245 0x7f81e1e3eb5a 1106: com.mojang.serialization.DataResult$$Lambda$3965.0x00007f8160838788::apply(Object) -> Object
fifo write: @1699477101773742076 0x7f81e926b85c 115: java.nio.ByteBuffer::position(int) -> java.nio.Buffer
fifo write: @1699477101773815297 0x7f81e1e3f667 2978: com.mojang.serialization.DataResult::promotePartial(java.util.function.Consumer) -> com.mojang.serialization.DataResult
fifo write: @1699477101773874538 0x7f81e1e40a54 981: com.google.common.collect.MapMakerInternalMap::get(Object) -> Object
fifo write: @1699477101773959489 0x7f81e1e41577 3309: com.mojang.serialization.Decoder$3::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101775008662 0x7f81e1e42b94 492: java.util.concurrent.TimeUnit::toMillis(long) -> long
fifo write: @1699477101775582660 0x7f81e1e43214 348: asp$$Lambda$465.0x00007f816027ecf0::apply(Object) -> Object
fifo write: @1699477101775675441 0x7f81e1e4381c 3564: sun.nio.ch.IOUtil::readIntoNativeBuffer(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477101775737252 0x7f81e1e454c3 1319: asp::a(Enum[], java.util.function.Function, String) -> Enum
fifo write: @1699477101775796732 0x7f81e1e46014 240: asp$a::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101775844723 0x7f81e1e46494 185: arf$$Lambda$3956.0x00007f8160832d70::<init>(String) -> void
fifo write: @1699477101775993265 0x7f81e1e4695a 1278: arf$$Lambda$3955.0x00007f8160832b30::apply(Object) -> Object
fifo write: @1699477101776120557 0x7f81e1e474b9 866: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3953.0x00007f81608326b0::apply(Object, Object) -> Object
fifo write: @1699477101776192228 0x7f81e1e47d4b 2255: com.mojang.serialization.JsonOps$1::lambda$entries$0(java.util.Map$Entry) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101776261918 0x7f81e1e48d37 2720: com.mojang.serialization.JsonOps$1$$Lambda$3952.0x00007f8160832470::apply(Object) -> Object
fifo write: @1699477101776328119 0x7f81e1e49f14 230: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3968.0x00007f8160838e48::<init>(com.google.common.collect.ImmutableList$Builder, com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477101776389940 0x7f81e1e4a41a 508: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3967.0x00007f8160838c18::apply(Object, Object) -> Object
fifo write: @1699477101776448051 0x7f81e1e4aa94 185: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3969.0x00007f8160839080::<init>(com.google.common.collect.ImmutableMap$Builder) -> void
fifo write: @1699477101776530582 0x7f81e1e4aef4 338: com.mojang.serialization.codecs.BaseMapCodec::lambda$decode$1(com.google.common.collect.ImmutableMap$Builder, com.mojang.datafixers.util.Unit, com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Unit
fifo write: @1699477101776659994 0x7f81e1e4b637 5736: arf$$Lambda$245.0x00007f81601a1c70::apply(Object) -> Object
fifo write: @1699477101776719484 0x7f81e1e4dab4 941: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3969.0x00007f8160839080::apply(Object, Object) -> Object
fifo write: @1699477101776942887 0x7f81e1e4e47f 5494: arf::a(java.util.function.Function, String) -> com.mojang.serialization.DataResult
fifo write: @1699477101777022068 0x7f81e1e5087f 3366: arf::a(java.util.function.Function, java.util.Collection) -> com.mojang.serialization.DataResult
fifo write: @1699477101777157760 0x7f81e1e520b7 4735: com.mojang.serialization.codecs.BaseMapCodec::lambda$decode$2(com.mojang.serialization.DynamicOps, com.google.common.collect.ImmutableList$Builder, com.google.common.collect.ImmutableMap$Builder, com.mojang.serialization.DataResult, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477101777202660 0x7f81e1e54034 817: java.time.ZoneOffset::equals(Object) -> boolean
fifo write: @1699477101777736217 0x7f81e9126696 4277: com.google.common.collect.ImmutableMap$Builder::buildOrThrow() -> com.google.common.collect.ImmutableMap
fifo write: @1699477101777857239 0x7f81e1e54839 266: bfm::<init>(java.util.List) -> void
fifo write: @1699477101777905329 0x7f81e1e54de7 381: bfm::a(java.util.List) -> bfm
fifo write: @1699477101777943920 0x7f81e926b24c 2: java.time.LocalDate::getYear() -> int
fifo write: @1699477101777998671 0x7f81e1e55454 1583: bfl::a(java.util.List) -> int
fifo write: @1699477101778234794 0x7f81e9125a13 1078: com.mojang.serialization.DataResult::map(java.util.function.Function) -> com.mojang.serialization.DataResult
fifo write: @1699477101778666329 0x7f81e1e56321 5182: java.time.zone.ZoneRules::findOffsetInfo(java.time.LocalDateTime, java.time.zone.ZoneOffsetTransition) -> Object
fifo write: @1699477101778713750 0x7f81e9125560 197: com.google.common.collect.ImmutableMap$Builder::<init>() -> void
fifo write: @1699477101778871352 0x7f81e9124f89 382: com.mojang.serialization.DataResult::<init>(com.mojang.datafixers.util.Either, com.mojang.serialization.Lifecycle) -> void
fifo write: @1699477101778932512 0x7f81e1e58cd4 826: bfm$$Lambda$2931.0x00007f81606ea3e0::apply(Object) -> Object
fifo write: @1699477101780141638 0x7f81e1e59514 472: bfj::a(int) -> bfj
fifo write: @1699477101780181438 0x7f81e1e59b14 185: bfk$a::<init>(bfj) -> void
fifo write: @1699477101780316220 0x7f81e1e59f94 538: crf$c::<init>(biu, bfj, int, int) -> void
fifo write: @1699477101780560303 0x7f81e1e5a694 185: aeq$$Lambda$3963.0x00007f8160838300::<init>(hf) -> void
fifo write: @1699477101780615804 0x7f81e1e5ab14 356: arf$$Lambda$2401.0x00007f816066ecf0::apply(Object) -> Object
fifo write: @1699477101780755486 0x7f81e1e5b054 971: aeq$$Lambda$3964.0x00007f8160838548::apply(Object) -> Object
fifo write: @1699477101780879187 0x7f81e1e5b914 240: com.mojang.serialization.Codec$3::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101780956318 0x7f81e1e5be57 2886: aeq$$Lambda$3962.0x00007f8160833cc8::apply(Object) -> Object
fifo write: @1699477101781015999 0x7f81e1e5d134 815: bfj$$Lambda$2319.0x00007f816065f518::apply(Object) -> Object
fifo write: @1699477101781087090 0x7f81e1e5da27 2524: aeq::a(hf, com.mojang.datafixers.util.Either) -> hi
fifo write: @1699477101781170151 0x7f81e1e5eb8e 1169: crf$c$$Lambda$2929.0x00007f81606e9f50::apply(Object, Object, Object, Object) -> Object
fifo write: @1699477101781236282 0x7f81e1e5f514 185: com.mojang.serialization.MapDecoder$3$$Lambda$3974.0x00007f8160839be0::<init>(java.util.function.Function) -> void
fifo write: @1699477101781412264 0x7f81e1e5f9fa 1764: crf$c::a(crf$c) -> com.mojang.serialization.DataResult
fifo write: @1699477101781516175 0x7f81e1e608f7 2958: com.mojang.serialization.MapDecoder$3$$Lambda$3974.0x00007f8160839be0::apply(Object) -> Object
fifo write: @1699477101781602807 0x7f81e1e61e37 2105: crf$c$$Lambda$2930.0x00007f81606ea1a0::apply(Object) -> Object
fifo write: @1699477101781857880 0x7f81e1e62eb7 2861: com.mojang.serialization.MapDecoder$3::lambda$decode$0(java.util.function.Function, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101781942721 0x7f81e926add7 35: com.mojang.serialization.Codec$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101782124863 0x7f81e1e643d7 4502: com.mojang.serialization.MapDecoder$3::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101782183764 0x7f81e9124aef 268: com.google.gson.stream.JsonReader::peek() -> com.google.gson.stream.JsonToken
fifo write: @1699477101783223338 0x7f81e1e66057 1874: java.util.ImmutableCollections::listFromArray(Object[]) -> java.util.List
fifo write: @1699477101783645123 0x7f81e91247cc 4: Float::floatValue() -> float
fifo write: @1699477101784226480 0x7f81e91244cc 3: Thread::isInterrupted() -> boolean
fifo write: @1699477101784328042 0x7f81e1e66e14 39: StringBuilder::append(char[], int, int) -> StringBuilder
fifo write: @1699477101784675906 0x7f81e9123ed8 431: java.util.ArrayDeque::addLast(Object) -> void
fifo write: @1699477101784807198 0x7f81e1e672b7 2225: com.mojang.serialization.MapDecoder$4::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101785037861 0x7f81e1e683d9 1074: java.util.Spliterators$IteratorSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477101804431011 0x7f81e935479e 5311: com.google.gson.internal.LinkedTreeMap::find(Object, boolean) -> com.google.gson.internal.LinkedTreeMap$Node
fifo write: @1699477101804489652 0x7f81e9123bdc 11: com.mojang.serialization.DataResult::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.serialization.DataResult
fifo write: @1699477101804569283 0x7f81e1e68e3c 3436: java.util.IdentityHashMap::resize(int) -> boolean
fifo write: @1699477101804616244 0x7f81e1e6a534 919: bfj::b(int) -> void
fifo write: @1699477101804687885 0x7f81e93539f9 1530: java.lang.ref.ReferenceQueue::enqueue(java.lang.ref.Reference) -> boolean
fifo write: @1699477101804764766 0x7f81e93530fa 494: com.mojang.serialization.Decoder$1::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101804807586 0x7f81e1e6adf4 63: com.google.common.collect.RegularImmutableList::internalArrayEnd() -> int
fifo write: @1699477101804985578 0x7f81e9352273 1640: java.lang.ref.Reference::enqueueFromPending() -> void
fifo write: @1699477101805030379 0x7f81e1e6b194 326: jdk.nio.zipfs.ZipFileSystem::ensureOpen() -> void
fifo write: @1699477101805338523 0x7f81e1e6b779 1486: java.io.BufferedReader::read1(char[], int, int) -> int
fifo write: @1699477101805399504 0x7f81e1e6c656 2063: java.io.BufferedReader::read(char[], int, int) -> int
fifo write: @1699477101806253545 0x7f81e9350e40 1443: com.mojang.serialization.codecs.PrimitiveCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101806299965 0x7f81e9350a50 67: aeo::empty() -> Object
fifo write: @1699477101806541289 0x7f81e935074c 5: com.google.gson.stream.JsonReader::setLenient(boolean) -> void
fifo write: @1699477101806558839 0x7f81e8b9e930 168: itable stub
fifo write: @1699477101807110686 0x7f81e93502d4 127: com.mojang.serialization.Decoder$1$$Lambda$3813.0x00007f8160815208::apply(Object) -> Object
fifo write: @1699477101807725274 0x7f81e1e6d97c 1417: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$5::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101807860706 0x7f81e1e6e614 31: System$2::blockedOn(sun.nio.ch.Interruptible) -> void
fifo write: @1699477101807911256 0x7f81e1e6ea10 300: Thread::blockedOn(sun.nio.ch.Interruptible) -> void
fifo write: @1699477101807973367 0x7f81e1e6eff4 362: java.nio.channels.spi.AbstractInterruptibleChannel::blockedOn(sun.nio.ch.Interruptible) -> void
fifo write: @1699477101808416063 0x7f81e934f8d8 811: aew::equals(Object) -> boolean
fifo write: @1699477101809405476 0x7f81e934e510 1475: com.mojang.serialization.Decoder$1$$Lambda$3812.0x00007f8160817b08::apply(Object) -> Object
fifo write: @1699477101809597608 0x7f81e8bce100 480: I2C/C2I adapters(0xbaaaabeb)
fifo write: @1699477101809733870 0x7f81e8b9e9e8 27: vtable stub
fifo write: @1699477101810044214 0x7f81e1e6f5f2 746: java.util.Spliterators::spliterator(java.util.Collection, int) -> java.util.Spliterator
fifo write: @1699477101810101105 0x7f81e1e6fd94 300: java.util.Spliterators$IteratorSpliterator::<init>(java.util.Collection, int) -> void
fifo write: @1699477101810286927 0x7f81e1e70339 634: java.util.Spliterators$IteratorSpliterator::estimateSize() -> long
fifo write: @1699477101810352578 0x7f81e1e70a94 791: java.security.MessageDigest::isEqual(byte[], byte[]) -> boolean
fifo write: @1699477101810649562 0x7f81e934d117 1084: Integer::parseInt(String, int) -> int
fifo write: @1699477101810731113 0x7f81e1e713b9 911: java.util.LinkedList::indexOf(Object) -> int
fifo write: @1699477101810986986 0x7f81e1e71db7 677: java.util.Set::spliterator() -> java.util.Spliterator
fifo write: @1699477101811345441 0x7f81e1e724cb 550: com.google.common.collect.ImmutableMap::builder() -> com.google.common.collect.ImmutableMap$Builder
fifo write: @1699477101811554213 0x7f81e934b563 2051: com.mojang.serialization.DataResult$Instance::ap2(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101812175651 0x7f81e934b1d1 42: hm::g(aev) -> void
fifo write: @1699477101812893581 0x7f81e1e72b40 346: Float::valueOf(float) -> Float
fifo write: @1699477101812942201 0x7f81e1e73094 239: Float::<init>(float) -> void
fifo write: @1699477101815315682 0x7f81e1e735c3 2132: java.math.BigInteger::<init>(int, byte[], int, int) -> void
fifo write: @1699477101815382103 0x7f81e1e7479c 438: com.google.common.collect.RegularImmutableList::copyIntoArray(Object[], int) -> int
fifo write: @1699477101815454114 0x7f81e934a559 54: com.mojang.serialization.Decoder$$Lambda$3731.0x00007f81607b56b8::apply(Object) -> Object
fifo write: @1699477101815972450 0x7f81e1e74dd4 1174: jdk.nio.zipfs.ZipPath::checkPath(java.nio.file.Path) -> jdk.nio.zipfs.ZipPath
fifo write: @1699477101816186573 0x7f81e1e75794 259: com.google.gson.JsonPrimitive::isBoolean() -> boolean
fifo write: @1699477101816595438 0x7f81e1e75bf4 27: jdk.nio.zipfs.ZipPath::getFileSystem() -> java.nio.file.FileSystem
fifo write: @1699477101816684920 0x7f81e1e75f94 234: jdk.nio.zipfs.ZipFileSystem$IndexNode::as(byte[]) -> jdk.nio.zipfs.ZipFileSystem$IndexNode
fifo write: @1699477101816829511 0x7f81e1e764d4 671: jdk.nio.zipfs.ZipPath::getResolvedPath() -> byte[]
fifo write: @1699477101817035924 0x7f81e1e76df4 1492: jdk.nio.zipfs.ZipFileSystem::getInode(byte[]) -> jdk.nio.zipfs.ZipFileSystem$IndexNode
fifo write: @1699477101817103035 0x7f81e1e77adc 1547: jdk.nio.zipfs.ZipFileSystem$IndexNode::keyOf(byte[]) -> jdk.nio.zipfs.ZipFileSystem$IndexNode
fifo write: @1699477101817337498 0x7f81e9348f9c 1073: com.mojang.serialization.Decoder::parse(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101817433859 0x7f81e1e787db 835: AbstractStringBuilder::charAt(int) -> char
fifo write: @1699477101817548161 0x7f81e1e79194 230: jdk.internal.reflect.ClassFileAssembler::incStack() -> void
fifo write: @1699477101817721793 0x7f81e1e79694 31: StringBuilder::charAt(int) -> char
fifo write: @1699477101818618914 0x7f81e1e79ab9 2427: java.util.StringJoiner::add(CharSequence) -> java.util.StringJoiner
fifo write: @1699477101818688645 0x7f81e1e7af24 1588: sun.security.x509.X509AttributeName::<init>(String) -> void
fifo write: @1699477101818806907 0x7f81e1e7be34 803: sun.security.x509.X509CertInfo::attributeMap(String) -> int
fifo write: @1699477101819193262 0x7f81e92fd0c8 5122: com.google.gson.internal.bind.TypeAdapters$28::readTerminal(com.google.gson.stream.JsonReader, com.google.gson.stream.JsonToken) -> com.google.gson.JsonElement
fifo write: @1699477101819303403 0x7f81e1e7c74e 4582: jdk.internal.icu.impl.NormalizerImpl::decompose(CharSequence, int, int, jdk.internal.icu.impl.NormalizerImpl$ReorderingBuffer) -> int
fifo write: @1699477101819343114 0x7f81e1e7e9b4 605: sun.security.x509.RDN::toRFC2253String(boolean) -> String
fifo write: @1699477101819405935 0x7f81e1e7f094 542: jdk.internal.icu.text.NormalizerBase::normalize(String, java.text.Normalizer$Form) -> String
fifo write: @1699477101819463385 0x7f81e1e7f714 31: sun.security.x509.AVA::toKeyword(int, java.util.Map) -> String
fifo write: @1699477101820190855 0x7f81e1e7fc00 1801: sun.security.x509.RDN::toRFC2253StringInternal(boolean, java.util.Map) -> String
fifo write: @1699477101820316086 0x7f81e1e80d37 2037: jdk.internal.icu.text.NormalizerBase::toMode(java.text.Normalizer$Form) -> jdk.internal.icu.text.NormalizerBase$Mode
fifo write: @1699477101820486579 0x7f81e1e821b4 6142: sun.security.x509.X509CertInfo::get(String) -> Object
fifo write: @1699477101820556879 0x7f81e1e84ff7 426: jdk.internal.icu.text.NormalizerBase::normalize(String, jdk.internal.icu.text.NormalizerBase$Mode, int) -> String
fifo write: @1699477101820614510 0x7f81e9347cfe 1653: sun.security.util.DerValue::<init>(byte[], int, int, boolean, boolean) -> void
fifo write: @1699477101820656161 0x7f81e93478d7 67: java.lang.reflect.Constructor::newInstance(Object[]) -> Object
fifo write: @1699477101820696881 0x7f81e1e85594 364: jdk.internal.icu.text.NormalizerBase$NFKDMode::getNormalizer2(int) -> jdk.internal.icu.text.Normalizer2
fifo write: @1699477101820734132 0x7f81e1e85b14 317: jdk.internal.icu.impl.Norm2AllModes$DecomposeNormalizer2::spanQuickCheckYes(CharSequence) -> int
fifo write: @1699477101820762282 0x7f81e93474b1 130: sun.security.util.DerValue::isPrintableStringChar(char) -> boolean
fifo write: @1699477101820798253 0x7f81e1e86074 782: sun.security.x509.AVA::isDerString(sun.security.util.DerValue, boolean) -> boolean
fifo write: @1699477101820826553 0x7f81e1e86814 117: sun.security.util.DerValue::getDataBytes() -> byte[]
fifo write: @1699477101820867144 0x7f81e1e86d37 1443: sun.security.x509.AVAKeyword::isCompliant(int) -> boolean
fifo write: @1699477101820954665 0x7f81e1e87ca1 4065: jdk.internal.icu.text.Normalizer2::normalize(CharSequence) -> String
fifo write: @1699477101821004585 0x7f81e1e898b4 820: java.text.Normalizer::normalize(CharSequence, java.text.Normalizer$Form) -> String
fifo write: @1699477101821035086 0x7f81e1e8a114 188: StringBuilder::append(char) -> Appendable
fifo write: @1699477101821182048 0x7f81e1e8aa6f 10398: sun.security.x509.AVA::toRFC2253CanonicalString() -> String
fifo write: @1699477101821271349 0x7f81e1e8f8d4 1352: jdk.nio.zipfs.ZipFileSystem$IndexNode::equals(Object) -> boolean
fifo write: @1699477101821456811 0x7f81e1e90597 7643: sun.security.x509.AVAKeyword::getKeyword(sun.security.util.ObjectIdentifier, int, java.util.Map) -> String
fifo write: @1699477101821549432 0x7f81e92fc278 1253: StringBuilder::append(char) -> StringBuilder
fifo write: @1699477101821667634 0x7f81e1e93cd9 1092: AbstractStringBuilder::append(CharSequence, int, int) -> AbstractStringBuilder
fifo write: @1699477101821828266 0x7f81e1e94674 1142: sun.security.util.DerValue::isPrintableStringChar(char) -> boolean
fifo write: @1699477101821914847 0x7f81e92fb4f8 1277: AbstractStringBuilder::append(char) -> AbstractStringBuilder
fifo write: @1699477101822092749 0x7f81e1e95036 3726: AbstractStringBuilder::appendChars(String, int, int) -> void
fifo write: @1699477101822147130 0x7f81e1e96e54 90: StringLatin1::canEncode(int) -> boolean
fifo write: @1699477101822289562 0x7f81e93471d3 51: Boolean::equals(Object) -> boolean
fifo write: @1699477101822323542 0x7f81e1e97294 837: StringLatin1::indexOf(byte[], int, int) -> int
fifo write: @1699477101822370543 0x7f81e1e97bd4 889: String::substring(int, int) -> String
fifo write: @1699477101822554045 0x7f81e1e985ba 497: String::getBytes(byte[], int, byte) -> void
fifo write: @1699477101822585326 0x7f81e9346cb0 59: String::checkIndex(int, int) -> void
fifo write: @1699477101822653877 0x7f81e1e98cd9 525: AbstractStringBuilder::append(String) -> AbstractStringBuilder
fifo write: @1699477101822859559 0x7f81e1e994f9 994: sun.security.x509.X500Name::getRFC2253CanonicalName() -> String
fifo write: @1699477101823056662 0x7f81e1e9a0d4 1156: jdk.nio.zipfs.ZipPath::getFileName() -> jdk.nio.zipfs.ZipPath
fifo write: @1699477101823096742 0x7f81e1e9abf9 1255: jdk.nio.zipfs.ZipPath::resolve(byte[]) -> jdk.nio.zipfs.ZipPath
fifo write: @1699477101823149183 0x7f81e92faeb5 278: StringLatin1::indexOfChar(byte[], int, int, int) -> int
fifo write: @1699477101823425017 0x7f81e1e9b794 151: java.time.LocalTime::<init>(int, int, int, int) -> void
fifo write: @1699477101823510498 0x7f81e1e9bc9c 1877: jdk.nio.zipfs.ZipPath::resolve(java.nio.file.Path) -> jdk.nio.zipfs.ZipPath
fifo write: @1699477101823573848 0x7f81e1e9cb94 358: jdk.nio.zipfs.ZipPath::toString() -> String
fifo write: @1699477101823614599 0x7f81e1e9d114 47: jdk.nio.zipfs.ZipPath$1::next() -> Object
fifo write: @1699477101823771561 0x7f81e1e9d539 569: jdk.nio.zipfs.ZipPath$1::next() -> java.nio.file.Path
fifo write: @1699477101823987524 0x7f81e1e9e10f 10925: String::<init>(byte[], int, int, java.nio.charset.Charset) -> void
fifo write: @1699477101824158706 0x7f81e1ea2c53 5206: String::join(String, String, String, String[], int) -> String
fifo write: @1699477101824203787 0x7f81e1ea56fc 1225: jdk.nio.zipfs.ZipPath::getName(int) -> jdk.nio.zipfs.ZipPath
fifo write: @1699477101824248497 0x7f81e1ea63d4 1232: com.google.common.base.Joiner::toString(Object) -> CharSequence
fifo write: @1699477101824280178 0x7f81e1ea6d94 31: java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync::readerShouldBlock() -> boolean
fifo write: @1699477101824341538 0x7f81e1ea7114 723: java.nio.file.Files::readAttributes(java.nio.file.Path, Class, java.nio.file.LinkOption[]) -> java.nio.file.attribute.BasicFileAttributes
fifo write: @1699477101824381179 0x7f81e1ea7894 671: java.util.concurrent.locks.AbstractQueuedSynchronizer::apparentlyFirstQueuedIsExclusive() -> boolean
fifo write: @1699477101824425709 0x7f81e1ea7f94 307: java.util.ArrayDeque::peek() -> Object
fifo write: @1699477101824471830 0x7f81e1ea8539 621: String::hashCode() -> int
fifo write: @1699477101824530191 0x7f81e1ea8d14 1061: jdk.nio.zipfs.ZipFileSystemProvider::toZipPath(java.nio.file.Path) -> jdk.nio.zipfs.ZipPath
fifo write: @1699477101824590382 0x7f81e1ea9614 193: java.util.ArrayDeque::peekFirst() -> Object
fifo write: @1699477101824625322 0x7f81e1ea9a94 149: java.time.LocalDate::<init>(int, int, int) -> void
fifo write: @1699477101824653002 0x7f81e1ea9ef4 91: java.nio.file.FileTreeWalker::isOpen() -> boolean
fifo write: @1699477101824735043 0x7f81e1eaa314 320: java.nio.file.FileTreeWalker$Event::<init>(java.nio.file.FileTreeWalker$EventType, java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes, java.io.IOException) -> void
fifo write: @1699477101824780604 0x7f81e1eaa959 990: java.nio.file.FileTreeIterator::fetchNextIfNeeded() -> void
fifo write: @1699477101824816094 0x7f81e1eab3b4 431: StringBuilder::toString() -> String
fifo write: @1699477101824849285 0x7f81e1eaba3f 1011: java.time.LocalDate::toEpochDay() -> long
fifo write: @1699477101824901266 0x7f81e147ab54 58: java.util.ArrayDeque::sub(int, int, int) -> int
fifo write: @1699477101824960726 0x7f81e1eac414 219: java.util.ArrayDeque::size() -> int
fifo write: @1699477101825008667 0x7f81e1eac954 947: jdk.nio.zipfs.ZipPath::equalsNameAt(jdk.nio.zipfs.ZipPath, int) -> boolean
fifo write: @1699477101825043897 0x7f81e1ead5b4 726: sun.util.calendar.ZoneInfo::clone() -> Object
fifo write: @1699477101825129038 0x7f81e1eadd14 326: java.util.TimeZone::clone() -> Object
fifo write: @1699477101825171059 0x7f81e1eae285 105: java.util.TimeZone::getDefaultRef() -> java.util.TimeZone
fifo write: @1699477101825224750 0x7f81e1eae6b4 1061: java.util.TimeZone::getDefault() -> java.util.TimeZone
fifo write: @1699477101825267250 0x7f81e92fa74f 408: String::endsWith(String) -> boolean
fifo write: @1699477101825387102 0x7f81e1eaf1bc 3488: java.nio.file.FileTreeWalker::next() -> java.nio.file.FileTreeWalker$Event
fifo write: @1699477101825428312 0x7f81e14daa94 156: java.util.TimeZone::toZoneId() -> java.time.ZoneId
fifo write: @1699477101825478613 0x7f81e1eb0bf4 11: java.time.LocalTime::toSecondOfDay() -> int
fifo write: @1699477101825639605 0x7f81e1558dbc 652: java.time.LocalDate::of(int, int, int) -> java.time.LocalDate
fifo write: @1699477101825696326 0x7f81e1558554 734: java.time.ZoneRegion::getRules() -> java.time.zone.ZoneRules
fifo write: @1699477101825794327 0x7f81e1582d74 27: java.time.LocalDateTime::toLocalDate() -> java.time.chrono.ChronoLocalDate
fifo write: @1699477101825893368 0x7f81e15acdbb 4178: java.time.LocalDate::create(int, int, int) -> java.time.LocalDate
fifo write: @1699477101825936389 0x7f81e1557ade 963: java.time.chrono.ChronoLocalDateTime::toEpochSecond(java.time.ZoneOffset) -> long
fifo write: @1699477101826211182 0x7f81e1634ed4 1405: java.time.ZoneId::systemDefault() -> java.time.ZoneId
fifo write: @1699477101826300553 0x7f81e1eb10a1 3933: java.nio.file.FileTreeWalker::getAttributes(java.nio.file.Path, boolean) -> java.nio.file.attribute.BasicFileAttributes
fifo write: @1699477101826385524 0x7f81e92f8f18 2266: String::toLowerCase(java.util.Locale) -> String
fifo write: @1699477101826436185 0x7f81e1eb2ba3 2454: java.time.zone.ZoneRules::findTransitionArray(int) -> java.time.zone.ZoneOffsetTransition[]
fifo write: @1699477101826517066 0x7f81e1eb3f04 4039: java.time.zone.ZoneRules::getOffsetInfo(java.time.LocalDateTime) -> Object
fifo write: @1699477101826574627 0x7f81e1633894 384: jdk.nio.zipfs.ZipFileSystem$Entry::<init>(jdk.nio.zipfs.ZipFileSystem, jdk.nio.zipfs.ZipFileSystem$IndexNode) -> void
fifo write: @1699477101826647328 0x7f81e1557414 390: java.nio.file.FileTreeWalker$Event::<init>(java.nio.file.FileTreeWalker$EventType, java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) -> void
fifo write: @1699477101826679708 0x7f81e16213f4 414: jdk.nio.zipfs.ZipConstants::CENVER(byte[], int) -> int
fifo write: @1699477101826708388 0x7f81e1620ef4 278: jdk.nio.zipfs.ZipConstants::CENVEM_FA(byte[], int) -> int
fifo write: @1699477101826742079 0x7f81e1eb6117 891: jdk.nio.zipfs.ZipConstants::CENTIM(byte[], int) -> long
fifo write: @1699477101826842160 0x7f81e16c4241 843: sun.security.util.DerOutputStream::write(byte, byte[]) -> void
fifo write: @1699477101826878581 0x7f81e15c1f94 220: java.util.TreeMap::get(Object) -> Object
fifo write: @1699477101827554449 0x7f81e1eb713f 24273: jdk.internal.math.FloatingDecimal::readJavaFormatString(String) -> jdk.internal.math.FloatingDecimal$ASCIIToBinaryConverter
fifo write: @1699477101827589610 0x7f81e16cd914 371: jdk.nio.zipfs.ZipDirectoryStream$1::hasNext() -> boolean
fifo write: @1699477101827656651 0x7f81e16c37d9 1190: jdk.nio.zipfs.ZipFileSystemProvider::readAttributes(java.nio.file.Path, Class, java.nio.file.LinkOption[]) -> java.nio.file.attribute.BasicFileAttributes
fifo write: @1699477101827702921 0x7f81e17c717c 1866: jdk.nio.zipfs.ZipPath::compareTo(java.nio.file.Path) -> int
fifo write: @1699477101827754122 0x7f81e16c2bd4 847: jdk.nio.zipfs.ZipPath::readAttributes() -> jdk.nio.zipfs.ZipFileAttributes
fifo write: @1699477101827783262 0x7f81e15ac7f4 156: jdk.nio.zipfs.ZipFileSystem$Entry::isDirectory() -> boolean
fifo write: @1699477101827813703 0x7f81e17d4834 433: jdk.nio.zipfs.ZipFileSystem::beginRead() -> void
fifo write: @1699477101827932864 0x7f81e16d4e1f 2672: jdk.nio.zipfs.ZipPath::readAttributes(Class) -> java.nio.file.attribute.BasicFileAttributes
fifo write: @1699477101827967004 0x7f81e16d4454 786: jdk.nio.zipfs.ZipFileSystem::endRead() -> void
fifo write: @1699477101828005925 0x7f81e17c65d4 1126: jdk.nio.zipfs.ZipDirectoryStream$1::next() -> Object
fifo write: @1699477101828153497 0x7f81e17925e5 883: jdk.nio.zipfs.ZipDirectoryStream$1::next() -> java.nio.file.Path
fifo write: @1699477101828343419 0x7f81e17c5d34 684: java.nio.file.FileTreeIterator::hasNext() -> boolean
fifo write: @1699477101828373090 0x7f81e16d3ef4 247: jdk.nio.zipfs.ZipFileSystem$Entry::isRegularFile() -> boolean
fifo write: @1699477101828660893 0x7f81e1ec3809 9680: jdk.nio.zipfs.ZipFileSystem$Entry::readCEN(jdk.nio.zipfs.ZipFileSystem, jdk.nio.zipfs.ZipFileSystem$IndexNode) -> void
fifo write: @1699477101828697524 0x7f81e1620994 390: java.time.chrono.IsoChronology::isLeapYear(long) -> boolean
fifo write: @1699477101828709324 0x7f81e8bcde00 480: I2C/C2I adapters(0xaaabbba)
fifo write: @1699477101828720514 0x7f81e8bcdb00 520: I2C/C2I adapters(0xabaaaabba)
fifo write: @1699477101828756755 0x7f81e16cd114 185: anl$$Lambda$3810.0x00007f8160816e50::<init>(java.nio.file.Path) -> void
fifo write: @1699477101828788845 0x7f81e1792194 47: java.nio.file.FileTreeIterator::next() -> Object
fifo write: @1699477101828828665 0x7f81e19b14b4 685: java.nio.file.Files$$Lambda$3906.0x00007f81607f38f8::test(Object) -> boolean
fifo write: @1699477101828869766 0x7f81e17917b7 1182: anl::create(java.nio.file.Path) -> anl
fifo write: @1699477101828912937 0x7f81e19e4bd4 902: java.nio.file.FileTreeIterator::next() -> java.nio.file.FileTreeWalker$Event
fifo write: @1699477101829028538 0x7f81e1ec7a07 6834: jdk.nio.zipfs.ZipFileSystem::getFileAttributes(byte[]) -> jdk.nio.zipfs.ZipFileAttributes
fifo write: @1699477101829069089 0x7f81e1790fb4 881: amj$$Lambda$3904.0x00007f816082f4e8::test(Object, Object) -> boolean
fifo write: @1699477101829163390 0x7f81e19e4474 304: java.nio.file.Files::lambda$find$2(java.util.function.BiPredicate, java.nio.file.FileTreeWalker$Event) -> boolean
fifo write: @1699477101829224311 0x7f81e1782b54 101: java.nio.file.Files::lambda$find$3(java.nio.file.FileTreeWalker$Event) -> java.nio.file.Path
fifo write: @1699477101829283441 0x7f81e1790af4 235: amj::a(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) -> boolean
fifo write: @1699477101829321302 0x7f81e1790599 391: amj$$Lambda$3908.0x00007f816082f738::accept(Object) -> void
fifo write: @1699477101829375793 0x7f81e1790014 445: java.nio.file.Files$$Lambda$3907.0x00007f81607f3b50::apply(Object) -> Object
fifo write: @1699477101829426743 0x7f81e1ecae34 494: com.google.common.base.Joiner::appendTo(StringBuilder, java.util.Iterator) -> StringBuilder
fifo write: @1699477101829471054 0x7f81e1ecb496 603: ank$$Lambda$3910.0x00007f816082fdb8::accept(Object, Object) -> void
fifo write: @1699477101829735567 0x7f81e92f7f1c 943: aew::<init>(String, String) -> void
fifo write: @1699477101829778708 0x7f81e92f7556 737: jdk.nio.zipfs.ZipPath::normalize(byte[]) -> byte[]
fifo write: @1699477101829852689 0x7f81e1ecbbab 1109: ank::a(amh, aew, anl, anl) -> anr
fifo write: @1699477101829925740 0x7f81e1ecc696 662: ank::a(aew, amh, anl) -> anl
fifo write: @1699477101830061101 0x7f81e1eccfe4 4867: java.nio.file.FileTreeWalker::visit(java.nio.file.Path, boolean, boolean) -> java.nio.file.FileTreeWalker$Event
fifo write: @1699477101830146062 0x7f81e92f62f7 1797: jdk.nio.zipfs.ZipPath::initOffsets() -> void
fifo write: @1699477101833803960 0x7f81e1ecf414 275: anr::<init>(amh, anl, anl) -> void
fifo write: @1699477101833878861 0x7f81e1ecf994 431: java.util.Collections$SynchronizedCollection::remove(Object) -> boolean
fifo write: @1699477101833938231 0x7f81e1ecfff4 374: java.math.BigInteger::shiftLeftImplWorker(int[], int[], int, int, int) -> void
fifo write: @1699477101834146524 0x7f81e1ed073f 3272: ank::d(aew) -> aew
fifo write: @1699477101834241475 0x7f81e1ed2101 3286: java.util.TreeMap::buildFromSorted(int, int, int, int, java.util.Iterator, java.io.ObjectInputStream, Object) -> java.util.TreeMap$Entry
fifo write: @1699477101834386087 0x7f81e1ed3a37 4347: ank::a(java.util.Map, java.util.Map, aew, ank$a) -> void
fifo write: @1699477101834440368 0x7f81e92f5a50 336: com.google.gson.JsonObject::add(String, com.google.gson.JsonElement) -> void
fifo write: @1699477101834481698 0x7f81e92f54b0 291: java.math.BigInteger::mulAdd(int[], int[], int, int, int) -> int
fifo write: @1699477101834535369 0x7f81e92f4fd5 314: com.google.gson.internal.LinkedTreeMap::put(Object, Object) -> Object
fifo write: @1699477101840588447 0x7f81e92f49f2 349: StringLatin1::indexOfChar(byte[], int, int, int) -> int
fifo write: @1699477101840622768 0x7f81e19b1074 103: java.math.MutableBigInteger::unsignedLongCompare(long, long) -> boolean
fifo write: @1699477101840655388 0x7f81e92f4533 180: java.math.BigInteger::implMulAddCheck(int[], int[], int, int, int) -> void
fifo write: @1699477101840688009 0x7f81e92f3fb3 232: java.math.BigInteger::addOne(int[], int, int, int) -> int
fifo write: @1699477101840814210 0x7f81e92f364f 352: java.util.IdentityHashMap::get(Object) -> Object
fifo write: @1699477101840853681 0x7f81e1ed5b37 420: String::toUpperCase(java.util.Locale) -> String
fifo write: @1699477101840908671 0x7f81e1ed61b4 964: java.time.zone.ZoneRules::getOffset(java.time.LocalDateTime) -> java.time.ZoneOffset
fifo write: @1699477101840970742 0x7f81e1ed69e3 1083: java.time.LocalTime::of(int, int, int) -> java.time.LocalTime
fifo write: @1699477101841040743 0x7f81e1ed760c 1217: java.time.LocalDateTime::of(int, int, int, int, int, int) -> java.time.LocalDateTime
fifo write: @1699477101841072464 0x7f81e178fb94 240: java.io.DataInputStream::read(byte[], int, int) -> int
fifo write: @1699477101841102414 0x7f81e1ed8345 258: java.io.ByteArrayInputStream::read() -> int
fifo write: @1699477101841133484 0x7f81e1ed8914 288: java.util.zip.Inflater::getBytesWritten() -> long
fifo write: @1699477101841165665 0x7f81e92f3350 43: java.io.BufferedInputStream::getBufIfOpen() -> byte[]
fifo write: @1699477101841237866 0x7f81e92f2d70 223: com.mojang.serialization.JsonOps$1::get(String) -> Object
fifo write: @1699477101841272416 0x7f81e1ed8e94 550: java.io.DataInputStream::readLong() -> long
fifo write: @1699477101841400108 0x7f81e1ed98b7 8230: java.io.DataInputStream::readUTF(java.io.DataInput) -> String
fifo write: @1699477101841462039 0x7f81e1edd414 185: sun.security.util.Cache$EqualByteArray::<init>(byte[]) -> void
fifo write: @1699477101841502469 0x7f81e1edd894 230: sun.security.util.Cache$EqualByteArray::hashCode() -> int
fifo write: @1699477101841546000 0x7f81e1edde19 2430: sun.security.util.MemoryCache::emptyQueue() -> void
fifo write: @1699477101841605260 0x7f81e1edf14a 1698: sun.security.util.MemoryCache::get(Object) -> Object
fifo write: @1699477101841666431 0x7f81e1edffa1 1008: sun.security.provider.X509Factory::readFully(java.io.InputStream, java.io.ByteArrayOutputStream, int) -> int
fifo write: @1699477101841699832 0x7f81e1ee0914 474: java.util.Hashtable$Enumerator::hasMoreElements() -> boolean
fifo write: @1699477101841744382 0x7f81e1ee1014 149: java.security.cert.CertificateFactory::generateCertificate(java.io.InputStream) -> java.security.cert.Certificate
fifo write: @1699477101841911434 0x7f81e1ee14d4 1143: java.util.Hashtable$Enumerator::nextElement() -> Object
fifo write: @1699477101842186598 0x7f81e1ee21d7 7931: com.mojang.serialization.DataResult$Instance::ap3(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101842234679 0x7f81e92f28dc 131: aev$$Lambda$389.0x00007f8160248668::apply(Object) -> Object
fifo write: @1699477101842278209 0x7f81e1ee57a5 470: sun.security.provider.X509Factory::getFromCache(sun.security.util.Cache, byte[]) -> Object
fifo write: @1699477101842640564 0x7f81e1ee5f37 2790: java.lang.invoke.VarHandle::checkExactAccessMode(java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477101842717245 0x7f81e1ee74f7 4695: sun.security.provider.X509Factory::engineGenerateCertificate(java.io.InputStream) -> java.security.cert.Certificate
fifo write: @1699477101842742365 0x7f81e92f24fd 34: StringBuffer::length() -> int
fifo write: @1699477101842778136 0x7f81e1ee9914 371: String::contains(CharSequence) -> boolean
fifo write: @1699477101842906517 0x7f81e1eea068 5673: jdk.internal.event.EventHelper::isLoggingSecurity() -> boolean
fifo write: @1699477101842945248 0x7f81e92f21cc 6: com.mojang.serialization.MapCodec$MapCodecCodec::codec() -> com.mojang.serialization.MapCodec
fifo write: @1699477101843028219 0x7f81e1eec68a 925: java.util.Hashtable::containsKey(Object) -> boolean
fifo write: @1699477101843110400 0x7f81e1eed094 185: com.mojang.serialization.DataResult$$Lambda$3973.0x00007f8160839998::<init>(java.util.function.UnaryOperator) -> void
fifo write: @1699477101843427794 0x7f81e1eed8dc 11097: sun.security.provider.X509Factory::readOneBlock(java.io.InputStream) -> byte[]
fifo write: @1699477101843565736 0x7f81e1ef2ca1 12452: sun.security.provider.X509Factory::readBERInternal(java.io.InputStream, java.io.ByteArrayOutputStream, int) -> int
fifo write: @1699477101843771138 0x7f81e1ef8897 3995: com.mojang.serialization.DataResult::mapError(java.util.function.UnaryOperator) -> com.mojang.serialization.DataResult
fifo write: @1699477101844045392 0x7f81e1efa1f4 244: sun.security.provider.SHA5::lf_delta1(long) -> long
fifo write: @1699477101844102703 0x7f81e1efa714 127: sun.security.provider.SHA5::lf_sigma1(long) -> long
fifo write: @1699477101844150903 0x7f81e1efab94 127: sun.security.provider.SHA5::lf_sigma0(long) -> long
fifo write: @1699477101844198744 0x7f81e1efaff4 244: sun.security.provider.SHA5::lf_delta0(long) -> long
fifo write: @1699477101844363036 0x7f81e1efb817 9917: sun.security.jca.JCAUtil::tryCommitCertEvent(java.security.cert.Certificate) -> void
fifo write: @1699477101844552818 0x7f81e92f1ed7 35: com.mojang.serialization.MapCodec$1::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101845265908 0x7f81e1effe74 85: aev::a(aev, aew) -> aev
fifo write: @1699477101845471440 0x7f81e1f0037f 3369: java.math.BigInteger::shiftRightImpl(int) -> java.math.BigInteger
fifo write: @1699477101845569532 0x7f81e92f1994 187: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101845669053 0x7f81e92f1476 201: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setValue(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101845745544 0x7f81e92f0e55 369: com.mojang.serialization.MapCodec::of(com.mojang.serialization.MapEncoder, com.mojang.serialization.MapDecoder, java.util.function.Supplier) -> com.mojang.serialization.MapCodec
fifo write: @1699477101845936416 0x7f81e1f01e94 255: com.google.common.collect.ImmutableMap::isEmpty() -> boolean
fifo write: @1699477101846226840 0x7f81e92f0976 201: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setValue(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101846328171 0x7f81e92f0414 187: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101846476113 0x7f81e1f025a7 7280: com.google.gson.internal.bind.TypeAdapters$28::read(com.google.gson.stream.JsonReader) -> com.google.gson.JsonElement
fifo write: @1699477101846687216 0x7f81e1f054e2 1018: sun.security.ec.ECOperations::lookup4(sun.security.ec.point.ProjectivePoint$Immutable[], int, sun.security.ec.point.ProjectivePoint$Mutable, sun.security.util.math.IntegerModuloP) -> void
fifo write: @1699477101847344715 0x7f81e8bcd800 488: I2C/C2I adapters(0xbbbabebebe)
fifo write: @1699477101847703279 0x7f81e92ef970 838: java.util.Optional::orElseGet(java.util.function.Supplier) -> Object
fifo write: @1699477101847768400 0x7f81e92eee82 1547: sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce(long[], long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477101848116574 0x7f81e1f05f34 688: java.math.MutableBigInteger::compare(java.math.MutableBigInteger) -> int
fifo write: @1699477101848303177 0x7f81e92ed481 2143: com.mojang.serialization.DataResult$Instance::ap2(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101848352988 0x7f81e1f06814 255: java.math.MutableBigInteger::clear() -> void
fifo write: @1699477101848419808 0x7f81e92ed0cc 6: sun.security.ec.point.AffinePoint::getX() -> sun.security.util.math.ImmutableIntegerModuloP
fifo write: @1699477101848479749 0x7f81e92ecdcc 6: sun.security.ec.point.AffinePoint::getY() -> sun.security.util.math.ImmutableIntegerModuloP
fifo write: @1699477101848915615 0x7f81e1f06d94 275: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3931.0x00007f81608356e8::<init>(com.mojang.serialization.codecs.KeyDispatchCodec, com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> void
fifo write: @1699477101848987726 0x7f81e1f07319 372: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3931.0x00007f81608356e8::apply(Object) -> Object
fifo write: @1699477101849057647 0x7f81e1f078b4 763: java.util.function.Function$$Lambda$289.0x00007f81601c27c8::apply(Object) -> Object
fifo write: @1699477101849132958 0x7f81e1f08014 416: java.util.function.Function::lambda$andThen$1(java.util.function.Function, Object) -> Object
fifo write: @1699477101849244089 0x7f81e1f08594 275: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3932.0x00007f8160835930::<init>(com.mojang.serialization.codecs.KeyDispatchCodec, com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> void
fifo write: @1699477101849313410 0x7f81e1f08b19 404: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3932.0x00007f8160835930::apply(Object) -> Object
fifo write: @1699477101849390281 0x7f81e1f090f7 1556: com.mojang.serialization.Codec$$Lambda$521.0x00007f8160306000::apply(Object) -> Object
fifo write: @1699477101849440692 0x7f81e1f09d39 355: java.math.MutableBigInteger::getMagnitudeArray() -> int[]
fifo write: @1699477101849579443 0x7f81e1f0a414 289: sun.security.util.math.intpoly.IntegerPolynomial$Element::<init>(sun.security.util.math.intpoly.IntegerPolynomial, long[], int) -> void
fifo write: @1699477101849941608 0x7f81e1f0aa87 4962: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$decode$4(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477101850024249 0x7f81e1f0c994 260: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setAdditiveInverse() -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101850142971 0x7f81e1f0d04f 5362: com.mojang.serialization.codecs.KeyDispatchCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101850210592 0x7f81e1f0f2a5 1976: java.math.MutableBigInteger::divideOneWord(int, java.math.MutableBigInteger) -> int
fifo write: @1699477101850279482 0x7f81e92ec4fb 572: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setSum(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101850384394 0x7f81e92eb33d 1604: com.mojang.serialization.Codec$16::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101850423934 0x7f81e1f10734 993: hm::b(aev) -> java.util.Optional
fifo write: @1699477101850489515 0x7f81e1f1105c 1199: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$3::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101850636547 0x7f81e92eae5d 138: sun.security.util.math.intpoly.IntegerPolynomialP256::reduce(long[]) -> void
fifo write: @1699477101850937711 0x7f81e1f11f47 12967: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$decode$3(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.serialization.Decoder) -> com.mojang.serialization.DataResult
fifo write: @1699477101851054672 0x7f81e1f16bb5 336: sun.security.ec.ECOperations::double4(sun.security.ec.point.ProjectivePoint$Mutable, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP) -> void
fifo write: @1699477101851098663 0x7f81e1f17114 47: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setAdditiveInverse() -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101851151204 0x7f81e1f17519 50: java.lang.invoke.LambdaForm::<init>(int, java.lang.invoke.LambdaForm$Name[], int, java.lang.invoke.LambdaForm$Kind) -> void
fifo write: @1699477101851613630 0x7f81e8bcd500 520: I2C/C2I adapters(0xbbaabbbaa)
fifo write: @1699477101851625130 0x7f81e8bcd200 536: I2C/C2I adapters(0xbbaabbbbaa)
fifo write: @1699477101851636090 0x7f81e8bccf00 504: I2C/C2I adapters(0xbbaabbaa)
fifo write: @1699477101851895503 0x7f81e8bccc00 544: I2C/C2I adapters(0xbabaabbbbb)
fifo write: @1699477101851906663 0x7f81e8bcc900 480: I2C/C2I adapters(0xbbbabaa)
fifo write: @1699477101852135196 0x7f81e1f178f4 106: jdk.internal.misc.Unsafe::convEndian(boolean, long) -> long
fifo write: @1699477101852217377 0x7f81e1f17d14 253: jdk.internal.misc.Unsafe::getLongUnaligned(Object, long, boolean) -> long
fifo write: @1699477101852308109 0x7f81e92ea260 583: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setDifference(sun.security.util.math.IntegerModuloP) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477101852404300 0x7f81e1f18274 1380: java.nio.channels.spi.AbstractInterruptibleChannel::begin() -> void
fifo write: @1699477101852444770 0x7f81e1f18ef4 1075: java.nio.channels.spi.AbstractInterruptibleChannel::end(boolean) -> void
fifo write: @1699477101852509711 0x7f81e1f19974 345: java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::index(byte[], int) -> int
fifo write: @1699477101852721254 0x7f81e1f19fa6 1572: sun.nio.ch.FileChannelImpl::read(java.nio.ByteBuffer, long) -> int
fifo write: @1699477101852779405 0x7f81e1f1ae74 1296: jdk.nio.zipfs.ZipFileSystem::readFullyAt(java.nio.ByteBuffer, long) -> long
fifo write: @1699477101852843976 0x7f81e1f1ba94 39: sun.nio.ch.FileDispatcherImpl::pread(java.io.FileDescriptor, long, int, long) -> int
fifo write: @1699477101852959927 0x7f81e1f1bf77 3724: jdk.nio.zipfs.ZipUtils::dosToJavaTime(long) -> long
fifo write: @1699477101852988507 0x7f81e92e9b4c 3: com.google.gson.stream.JsonReader::isLenient() -> boolean
fifo write: @1699477101853076909 0x7f81e94b9182 781: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.SmallValue) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477101853114709 0x7f81e1f1db34 689: Integer::compareTo(Object) -> int
fifo write: @1699477101853144459 0x7f81e1f1e2b4 328: jdk.nio.zipfs.ZipFileSystem$2::available() -> int
fifo write: @1699477101853201360 0x7f81e1f1e986 2415: sun.nio.ch.FileChannelImpl::readInternal(java.nio.ByteBuffer, long) -> int
fifo write: @1699477101853212960 0x7f81e8bcc600 640: I2C/C2I adapters(0xbbaabbbaaaabaa)
fifo write: @1699477101853243331 0x7f81e1f20094 269: jdk.nio.zipfs.ZipFileSystem$EntryInputStream::close() -> void
fifo write: @1699477101853573775 0x7f81e94b9c4c 6: dgm$a::b() -> Comparable
fifo write: @1699477101853648386 0x7f81e1f20939 1132: java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::get(java.lang.invoke.VarHandle, Object, int) -> long
fifo write: @1699477101853689876 0x7f81e94ba26a 2605: sun.security.util.math.intpoly.IntegerPolynomialP256::mult(long[], long[], long[]) -> void
fifo write: @1699477101854502167 0x7f81e1f21cb5 31571: sun.security.ec.ECOperations::setSum(sun.security.ec.point.ProjectivePoint$Mutable, sun.security.ec.point.ProjectivePoint$Mutable, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP, sun.security.util.math.MutableIntegerModuloP) -> void
fifo write: @1699477101854563028 0x7f81e1f2da94 469: com.mojang.serialization.MapCodec$3::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101854697939 0x7f81e1f2e302 7310: java.lang.invoke.VarHandleGuards::guard_LI_J(java.lang.invoke.VarHandle, Object, int, java.lang.invoke.VarHandle$AccessDescriptor) -> long
fifo write: @1699477101854731720 0x7f81e94bb74c 6: dfl::C() -> com.google.common.collect.ImmutableMap
fifo write: @1699477101854760380 0x7f81e8bcc300 504: I2C/C2I adapters(0xbbbbabaa)
fifo write: @1699477101855046784 0x7f81e94bbb15 2217: com.mojang.serialization.DataResult::apply2stable(java.util.function.BiFunction, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477101855434089 0x7f81e1f31214 39: StringBuilder::append(String) -> StringBuilder
fifo write: @1699477101855764243 0x7f81e8bcc000 488: I2C/C2I adapters(0xbbbaaba)
fifo write: @1699477101856067017 0x7f81e8bcbc80 480: I2C/C2I adapters(0xb7e7e7e7e7ea)
fifo write: @1699477101856374121 0x7f81e8be3480 448: I2C/C2I adapters(0xa7e7e7e)
fifo write: @1699477101856384931 0x7f81e8be3180 480: I2C/C2I adapters(0xbaaa7e7e7eb)
fifo write: @1699477101856395511 0x7f81e8be2e80 488: I2C/C2I adapters(0xbaaa7e7e7e7e)
fifo write: @1699477101857721338 0x7f81e94bda19 1170: com.mojang.serialization.codecs.FieldDecoder::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101858377347 0x7f81e1f31614 285: hq$2::a() -> hg$c
fifo write: @1699477101858429118 0x7f81e1f31b14 579: hg$c$a::a(aev) -> java.util.Optional
fifo write: @1699477101858557209 0x7f81e1f32257 1231: hm$1::a(aev) -> java.util.Optional
fifo write: @1699477101858694201 0x7f81e94be953 106: com.mojang.serialization.DataResult::setLifecycle(com.mojang.serialization.Lifecycle) -> com.mojang.serialization.DataResult
fifo write: @1699477101858895514 0x7f81e1f32cf4 251: com.mojang.serialization.Codec::lambda$optionalFieldOf$2(Object, java.util.Optional) -> Object
fifo write: @1699477101858931534 0x7f81e94bed58 15: java.util.Objects::checkIndex(int, int) -> int
fifo write: @1699477101858997565 0x7f81e1f33214 588: com.mojang.serialization.Codec$$Lambda$236.0x00007f81601a0298::apply(Object) -> Object
fifo write: @1699477101859642323 0x7f81e1f33937 870: com.mojang.serialization.codecs.OptionalFieldCodec$$Lambda$3733.0x00007f81607b5b40::apply(Object) -> Object
fifo write: @1699477101861096682 0x7f81e1f3425a 2600: com.mojang.serialization.Codec$14::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101861184013 0x7f81e1f35514 348: com.mojang.serialization.Codec$$Lambda$2340.0x00007f8160662100::apply(Object) -> Object
fifo write: @1699477101861486247 0x7f81e1f35abf 2814: com.mojang.serialization.Codec::lambda$checkRange$11(Number, Number, Number) -> com.mojang.serialization.DataResult
fifo write: @1699477101862143876 0x7f81e94bf04c 6: dsc::a() -> com.mojang.serialization.Codec
fifo write: @1699477101862648752 0x7f81e1f36df4 353: Float::parseFloat(String) -> float
fifo write: @1699477101862708873 0x7f81e1f37334 943: com.mojang.serialization.Codec$14$$Lambda$3925.0x00007f8160834990::apply(Object) -> Object
fifo write: @1699477101862753083 0x7f81e1f37bb4 450: com.google.gson.internal.LazilyParsedNumber::floatValue() -> float
fifo write: @1699477101862798914 0x7f81e1f38174 256: jdk.internal.math.FloatingDecimal::parseFloat(String) -> float
fifo write: @1699477101863679205 0x7f81e94bf34c 6: dnw::a() -> com.mojang.serialization.Codec
fifo write: @1699477101864018430 0x7f81e1f3871a 4031: com.mojang.serialization.MapCodec::unit(java.util.function.Supplier) -> com.mojang.serialization.MapCodec
fifo write: @1699477101864056620 0x7f81e94bf650 67: aeo::compressMaps() -> boolean
fifo write: @1699477101864108311 0x7f81e1f3a194 31: dfl$$Lambda$519.0x00007f8160303a10::apply(Object) -> Object
fifo write: @1699477101864172302 0x7f81e1f3a594 338: dfj$$Lambda$517.0x00007f8160303590::apply(Object) -> Object
fifo write: @1699477101864250213 0x7f81e1f3aa74 27: com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$LinkedWeakKeyDummyValueEntry::getNext() -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477101864335274 0x7f81e1f3ae14 324: aqh::<init>(aev, aew) -> void
fifo write: @1699477101864397215 0x7f81e1f3b39a 930: aqh::a(aev, aew) -> aqh
fifo write: @1699477101864606277 0x7f81e1f3bc77 3683: com.mojang.serialization.Codec::unit(java.util.function.Supplier) -> com.mojang.serialization.Codec
fifo write: @1699477101865228415 0x7f81e94bf9d2 693: java.util.TreeMap$PrivateEntryIterator::nextEntry() -> java.util.TreeMap$Entry
fifo write: @1699477101865504879 0x7f81e1f3d594 275: com.mojang.serialization.codecs.PairMapCodec$$Lambda$4002.0x00007f816083f680::<init>(com.mojang.serialization.codecs.PairMapCodec, com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> void
fifo write: @1699477101865782783 0x7f81e1f3ded7 14034: dfl::a(java.util.function.Function, Object) -> com.mojang.serialization.Codec
fifo write: @1699477101865876134 0x7f81e1f431de 1110: com.google.common.collect.RegularImmutableSet::contains(Object) -> boolean
fifo write: @1699477101866001435 0x7f81e1f43d9f 3625: com.mojang.serialization.codecs.PairMapCodec$$Lambda$4002.0x00007f816083f680::apply(Object) -> Object
fifo write: @1699477101866141367 0x7f81e1f456f7 1556: dgm$$Lambda$4003.0x00007f816083f8c8::apply(Object) -> Object
fifo write: @1699477101866243279 0x7f81e1f4641f 3491: com.mojang.serialization.codecs.PairMapCodec::lambda$decode$1(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101866388260 0x7f81e1f47cdf 4636: com.mojang.serialization.codecs.PairMapCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101866435461 0x7f81e1f49a14 230: dgm$$Lambda$4004.0x00007f816083fb08::<init>(dgm, String) -> void
fifo write: @1699477101866482832 0x7f81e1f49f6a 106: dgm::b(Comparable) -> dgm$a
fifo write: @1699477101866535782 0x7f81e1f4a3b4 703: dgm$$Lambda$480.0x00007f816028f228::apply(Object) -> Object
fifo write: @1699477101866586873 0x7f81e1f4aad4 1180: dgm$a::<init>(dgm, Comparable) -> void
fifo write: @1699477101866699914 0x7f81e1f4b697 5697: dgm$$Lambda$478.0x00007f816028eb88::apply(Object) -> Object
fifo write: @1699477101866922667 0x7f81e1f4db87 5178: dgm::a(String) -> com.mojang.serialization.DataResult
fifo write: @1699477101866968918 0x7f81e1f4fcbc 730: java.util.ArrayList::fastRemove(Object[], int) -> void
fifo write: @1699477101867081339 0x7f81e1f504d9 107: sun.nio.cs.StreamDecoder::forInputStreamReader(java.io.InputStream, Object, java.nio.charset.Charset) -> sun.nio.cs.StreamDecoder
fifo write: @1699477101867240761 0x7f81e1f50957 1226: sun.nio.cs.StreamDecoder::<init>(java.io.InputStream, Object, java.nio.charset.Charset) -> void
fifo write: @1699477101867390873 0x7f81e1f51a94 641: java.nio.charset.CharsetDecoder::onMalformedInput(java.nio.charset.CodingErrorAction) -> java.nio.charset.CharsetDecoder
fifo write: @1699477101867451864 0x7f81e1f52114 641: java.nio.charset.CharsetDecoder::onUnmappableCharacter(java.nio.charset.CodingErrorAction) -> java.nio.charset.CharsetDecoder
fifo write: @1699477101867500255 0x7f81e1f527b7 538: java.util.ArrayList::remove(int) -> Object
fifo write: @1699477101867573766 0x7f81e1f52f5c 1046: java.io.InputStreamReader::<init>(java.io.InputStream, java.nio.charset.Charset) -> void
fifo write: @1699477101868099412 0x7f81e1f53997 1807: com.mojang.serialization.MapCodec$6::apply(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477101868185094 0x7f81e1f548c3 684: java.util.stream.ReferencePipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477101868792811 0x7f81e94c03c0 2344: com.google.common.base.Equivalence$Equals::doHash(Object) -> int
fifo write: @1699477101868891163 0x7f81e1f55057 1728: com.google.gson.stream.JsonReader::<init>(java.io.Reader) -> void
fifo write: @1699477101868984054 0x7f81e1f55d94 47: com.google.gson.internal.bind.TypeAdapters$28::read(com.google.gson.stream.JsonReader) -> Object
fifo write: @1699477101869168296 0x7f81e1f561b9 570: jdk.nio.zipfs.ZipFileSystem$2::close() -> void
fifo write: @1699477101869355059 0x7f81e1f56914 252: com.google.gson.JsonElement::isJsonNull() -> boolean
fifo write: @1699477101869415229 0x7f81e1f56dd7 646: jdk.nio.zipfs.ZipFileSystem::readFullyAt(byte[], int, long, long) -> long
fifo write: @1699477101869693413 0x7f81e1f57594 112: java.io.InputStreamReader::ready() -> boolean
fifo write: @1699477101869787384 0x7f81e1f57994 431: sun.nio.cs.StreamDecoder::implReady() -> boolean
fifo write: @1699477101869948036 0x7f81e1f58054 1277: sun.nio.cs.StreamDecoder::ready() -> boolean
fifo write: @1699477101870000467 0x7f81e1f58d54 1055: anl$$Lambda$3810.0x00007f8160816e50::get() -> Object
fifo write: @1699477101870070488 0x7f81e1f596d9 1190: jdk.nio.zipfs.ZipFileSystemProvider::newInputStream(java.nio.file.Path, java.nio.file.OpenOption[]) -> java.io.InputStream
fifo write: @1699477101870132999 0x7f81e1f5a154 778: jdk.nio.zipfs.ZipPath::newInputStream(java.nio.file.OpenOption[]) -> java.io.InputStream
fifo write: @1699477101870189219 0x7f81e1f5aab4 958: anl::a(java.nio.file.Path) -> java.io.InputStream
fifo write: @1699477101870231420 0x7f81e1f5b374 47: Boolean::parseBoolean(String) -> boolean
fifo write: @1699477101870340811 0x7f81e94c2334 1082: java.util.stream.ReferencePipeline::collect(java.util.stream.Collector) -> Object
fifo write: @1699477101870398042 0x7f81e1f5b774 1362: jdk.nio.zipfs.ZipFileSystem::getEntry(byte[]) -> jdk.nio.zipfs.ZipFileSystem$Entry
fifo write: @1699477101870539494 0x7f81e1f5c2d4 1178: jdk.nio.zipfs.ZipFileSystem::getInflater() -> java.util.zip.Inflater
fifo write: @1699477101870612945 0x7f81e1f5ce74 1181: jdk.nio.zipfs.ZipFileSystem$EntryInputStream::<init>(jdk.nio.zipfs.ZipFileSystem, jdk.nio.zipfs.ZipFileSystem$Entry) -> void
fifo write: @1699477101870695686 0x7f81e1f5da14 93: Float::compareTo(Float) -> int
fifo write: @1699477101870801287 0x7f81e1f5de14 431: Float::compareTo(Object) -> int
fifo write: @1699477101870934449 0x7f81e1f5e581 3895: jdk.nio.zipfs.ZipFileSystem::newInputStream(byte[]) -> java.io.InputStream
fifo write: @1699477101871029650 0x7f81e1f606df 4342: jdk.nio.zipfs.ZipFileSystem::getInputStream(jdk.nio.zipfs.ZipFileSystem$Entry) -> java.io.InputStream
fifo write: @1699477101871078931 0x7f81e1f625b4 1280: Float::compare(float, float) -> int
fifo write: @1699477101871147062 0x7f81e1f63154 732: jdk.nio.zipfs.ZipFileSystem$2::fill() -> void
fifo write: @1699477101871201623 0x7f81e1f63a59 795: com.google.gson.stream.JsonReader::consumeNonExecutePrefix() -> void
fifo write: @1699477101871269643 0x7f81e1f643f4 1465: com.google.gson.internal.Streams::parse(com.google.gson.stream.JsonReader) -> com.google.gson.JsonElement
fifo write: @1699477101871328834 0x7f81e1f651f4 1007: aep::b(aew) -> aew
fifo write: @1699477101871371425 0x7f81e1f65d94 488: anr::d() -> java.io.InputStream
fifo write: @1699477101871587668 0x7f81e1f663d7 1823: com.google.gson.JsonParser::parseReader(java.io.Reader) -> com.google.gson.JsonElement
fifo write: @1699477101871643838 0x7f81e1f674f6 1788: anr::e() -> java.io.BufferedReader
fifo write: @1699477101872057474 0x7f81e1f685dc 7498: jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer::floatValue() -> float
fifo write: @1699477101872106544 0x7f81e1f6c314 361: aet$$Lambda$4015.0x00007f8160880480::apply(Object) -> Object
fifo write: @1699477101872161425 0x7f81e1f6c894 230: aet$$Lambda$4015.0x00007f8160880480::<init>(aet, java.util.Optional) -> void
fifo write: @1699477101872261996 0x7f81e1f6cf3c 4060: com.google.gson.JsonParser::parseReader(com.google.gson.stream.JsonReader) -> com.google.gson.JsonElement
fifo write: @1699477101872310207 0x7f81e1f6f214 185: aet$$Lambda$4018.0x00007f8160880b30::<init>(com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477101872358007 0x7f81e1f6f694 185: aet$$Lambda$4017.0x00007f8160880908::<init>(aew) -> void
fifo write: @1699477101872434958 0x7f81e1f6fb77 1528: aet$$Lambda$4016.0x00007f81608806c8::apply(Object) -> Object
fifo write: @1699477101872502449 0x7f81e1f70797 562: aet::a(com.mojang.datafixers.util.Pair, he$c) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101872580770 0x7f81e1f70eb7 913: aet$$Lambda$4018.0x00007f8160880b30::apply(Object) -> Object
fifo write: @1699477101873509972 0x7f81e1f71a5f 9609: aet::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101873560633 0x7f81e94c3750 123: java.time.temporal.ValueRange::checkValidValue(long, java.time.temporal.TemporalField) -> long
fifo write: @1699477101873612183 0x7f81e94c3b57 112: java.util.stream.ReferencePipeline$2$1::accept(Object) -> void
fifo write: @1699477101873662914 0x7f81e1f755b4 1085: jdk.nio.zipfs.ZipPath::equals(Object) -> boolean
fifo write: @1699477101873724755 0x7f81e1f75ef7 1136: com.google.common.base.Joiner::join(Iterable) -> String
fifo write: @1699477101873970098 0x7f81e1f76c9f 10087: aet::a(java.util.Optional, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477101874012799 0x7f81e1f7aae7 347: jdk.nio.zipfs.ZipPath::iterator() -> java.util.Iterator
fifo write: @1699477101874159760 0x7f81e94c4005 1933: java.util.stream.AbstractPipeline::copyIntoWithCancel(java.util.stream.Sink, java.util.Spliterator) -> boolean
fifo write: @1699477101874202821 0x7f81e1f7b014 247: jdk.nio.zipfs.ZipPath$1::<init>(jdk.nio.zipfs.ZipPath) -> void
fifo write: @1699477101874318572 0x7f81e1f7b517 1338: com.google.common.base.Joiner::join(java.util.Iterator) -> String
fifo write: @1699477101874444594 0x7f81e1f7c2e6 4698: com.google.common.base.Joiner::appendTo(Appendable, java.util.Iterator) -> Appendable
fifo write: @1699477101874515005 0x7f81e1f7e0f7 1657: aew::a(String, String) -> aew
fifo write: @1699477101874709767 0x7f81e1f7f2bc 5400: jdk.nio.zipfs.ZipPath::relativize(java.nio.file.Path) -> java.nio.file.Path
fifo write: @1699477101874895490 0x7f81e1f81e8f 6007: amj::a(java.nio.file.Path, String, amh$a, java.nio.file.Path) -> void
fifo write: @1699477101874964481 0x7f81e1f84619 664: ank$$Lambda$3902.0x00007f816082f060::accept(Object, Object) -> void
fifo write: @1699477101875026121 0x7f81e1f84d34 736: ank::b(aew) -> boolean
fifo write: @1699477101875079522 0x7f81e1f85594 328: ank$a::<init>(amh, anl, int) -> void
fifo write: @1699477101875192704 0x7f81e1f85b57 1116: aep$$Lambda$3901.0x00007f816082ec08::test(Object) -> boolean
fifo write: @1699477101875247524 0x7f81e1f866d4 754: aep::d(aew) -> boolean
fifo write: @1699477101875360256 0x7f81e1f870df 3174: ank::a(java.util.function.Predicate, java.util.Map, amh, int, java.util.Map, aew, anl) -> void
fifo write: @1699477101875917363 0x7f81e8be2b80 480: I2C/C2I adapters(0xbabbabb)
fifo write: @1699477101876157796 0x7f81e94c6056 450: jdk.nio.zipfs.ZipCoder$UTF8::toString(byte[]) -> String
fifo write: @1699477101877627345 0x7f81e94c67e0 389: java.nio.Buffer::<init>(int, int, int, int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477101878111361 0x7f81e94c6dd3 368: it.unimi.dsi.fastutil.objects.ObjectArrayList::set(int, Object) -> Object
fifo write: @1699477101878792100 0x7f81e94c739d 779: aew$$Lambda$283.0x00007f81601b25f8::apply(Object) -> Object
fifo write: @1699477101879128494 0x7f81e94c7d4c 6: dks$a::c() -> String
fifo write: @1699477101879651731 0x7f81e1f88814 141: duq$$Lambda$3004.0x00007f81606fb8d8::codec() -> com.mojang.serialization.Codec
fifo write: @1699477101879774292 0x7f81e1f88c14 599: dup$$Lambda$2516.0x00007f816068eaf8::apply(Object) -> Object
fifo write: @1699477101880144887 0x7f81e94c8073 1256: it.unimi.dsi.fastutil.objects.ObjectArrayList::size(int) -> void
fifo write: @1699477101880540032 0x7f81e94c8dcc 2: bga::a() -> int
fifo write: @1699477101880581093 0x7f81e94c90cc 2: bga::b() -> int
fifo write: @1699477101882474567 0x7f81e94c9494 3879: com.mojang.serialization.Codec$1::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101883224187 0x7f81e94cbdd0 111: com.google.gson.stream.JsonReader::push(int) -> void
fifo write: @1699477101883375029 0x7f81e1f892de 819: jdk.nio.zipfs.ZipFileSystem::releaseInflater(java.util.zip.Inflater) -> void
fifo write: @1699477101883934296 0x7f81e1f89d34 788: com.mojang.serialization.DataResult$Instance::ap(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101884002807 0x7f81e1f8a494 185: com.mojang.serialization.DataResult$$Lambda$3987.0x00007f816083b440::<init>(com.mojang.serialization.DataResult) -> void
fifo write: @1699477101884042217 0x7f81e1f8a914 431: java.util.Collections$SynchronizedCollection::add(Object) -> boolean
fifo write: @1699477101884083098 0x7f81e1f8af94 185: com.mojang.serialization.DataResult$$Lambda$3986.0x00007f816083b1f8::<init>(com.mojang.serialization.DataResult) -> void
fifo write: @1699477101884184889 0x7f81e1f8b3f4 417: jdk.nio.zipfs.ZipConstants::LOCNAM(byte[]) -> int
fifo write: @1699477101884332391 0x7f81e1f8b9f4 417: jdk.nio.zipfs.ZipConstants::LOCEXT(byte[]) -> int
fifo write: @1699477101884374762 0x7f81e1f8c077 1614: jdk.nio.zipfs.ZipFileSystem$EntryInputStream::initDataPos() -> void
fifo write: @1699477101884482783 0x7f81e1f8cf1f 3635: com.mojang.serialization.DataResult::ap(com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477101884530604 0x7f81e1f8e84a 1880: jdk.nio.zipfs.ZipFileSystem$EntryInputStream::read(byte[], int, int) -> int
fifo write: @1699477101884589385 0x7f81e1f8f914 185: com.mojang.serialization.DataResult$$Lambda$3988.0x00007f816083b688::<init>(com.mojang.serialization.DataResult$PartialResult) -> void
fifo write: @1699477101884634315 0x7f81e1f8fd94 185: com.mojang.serialization.DataResult$$Lambda$3989.0x00007f816083b8d0::<init>(com.mojang.serialization.DataResult$PartialResult) -> void
fifo write: @1699477101884931239 0x7f81e94cc216 2881: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::rehash(int) -> void
fifo write: @1699477101884972659 0x7f81e1f90214 191: com.mojang.serialization.DataResult$$Lambda$3940.0x00007f8160836b28::<init>(java.util.function.Consumer, boolean) -> void
fifo write: @1699477101885091681 0x7f81e1f9077f 3465: com.mojang.serialization.DataResult::lambda$ap$27(com.mojang.serialization.DataResult, com.mojang.serialization.DataResult$PartialResult) -> com.mojang.datafixers.util.Either
fifo write: @1699477101885132502 0x7f81e1f91e14 137: com.mojang.serialization.DataResult$$Lambda$3939.0x00007f81608368e8::apply(Object) -> Object
fifo write: @1699477101885217073 0x7f81e1f92317 3819: com.mojang.serialization.DataResult$$Lambda$3987.0x00007f816083b440::apply(Object) -> Object
fifo write: @1699477101885271913 0x7f81e1f93b94 243: anr::c() -> boolean
fifo write: @1699477101885331314 0x7f81e1f94097 1972: com.mojang.serialization.DataResult::getOrThrow(boolean, java.util.function.Consumer) -> Object
fifo write: @1699477101885563497 0x7f81e1f951f7 11042: arf$g::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101885607928 0x7f81e1f99537 553: com.mojang.serialization.codecs.EitherCodec$$Lambda$3942.0x00007f8160836fb0::apply(Object) -> Object
fifo write: @1699477101885631608 0x7f81e1f99b94 137: dup::<init>() -> void
fifo write: @1699477101885686849 0x7f81e1f9a017 2022: com.mojang.serialization.codecs.EitherCodec$$Lambda$3927.0x00007f8160834df8::apply(Object) -> Object
fifo write: @1699477101885774180 0x7f81e1f9af5a 1681: com.mojang.serialization.codecs.EitherCodec::lambda$decode$0(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101886512929 0x7f81e94cdb58 213: java.util.Optional::map(java.util.function.Function) -> java.util.Optional
fifo write: @1699477101886878684 0x7f81e1f9bd34 1260: bgd::a(com.mojang.datafixers.util.Either) -> bgd
fifo write: @1699477101886920705 0x7f81e1f9c6f4 1598: bgd$$Lambda$543.0x00007f8160313c58::apply(Object) -> Object
fifo write: @1699477101887861247 0x7f81e94ce053 216: java.util.ArrayDeque::pollLast() -> Object
fifo write: @1699477101888169321 0x7f81e1f9d214 275: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$1$$Lambda$3819.0x00007f8160814800::<init>(com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> void
fifo write: @1699477101888235422 0x7f81e1f9d794 185: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$1$$Lambda$3820.0x00007f8160814a48::<init>(Object) -> void
fifo write: @1699477101888315613 0x7f81e1f9dbf7 237: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$1::lambda$decode$0(Object, java.util.function.Function) -> Object
fifo write: @1699477101888391284 0x7f81e1f9e094 610: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$1$$Lambda$3820.0x00007f8160814a48::apply(Object) -> Object
fifo write: @1699477101888698648 0x7f81e1f9e7ff 3496: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$1::lambda$decode$1(com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101888811829 0x7f81e1fa009f 3617: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$1$$Lambda$3819.0x00007f8160814800::apply(Object) -> Object
fifo write: @1699477101888855780 0x7f81e1fa1994 137: bgd::<init>() -> void
fifo write: @1699477101889020332 0x7f81e1fa1edf 4769: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$1::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101889097443 0x7f81e94ce589 382: aew::<init>(String, String, aew$a) -> void
fifo write: @1699477101890006724 0x7f81e94cead3 977: com.google.common.collect.ImmutableList$Builder::getReadyToExpandTo(int) -> void
fifo write: @1699477101890710714 0x7f81e94cf45d 1427: com.google.common.collect.ImmutableList$Builder::add(Object) -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477101890900176 0x7f81e1fa3d54 1397: java.util.stream.MatchOps$MatchOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477101892044831 0x7f81e94d01f0 1668: com.mojang.serialization.codecs.ListCodec$$Lambda$3725.0x00007f81607b46c8::apply(Object, Object) -> Object
fifo write: @1699477101892256554 0x7f81e1fa4894 324: dum::<init>(he, java.util.List) -> void
fifo write: @1699477101892301654 0x7f81e1fa4e8a 989: dum$$Lambda$2518.0x00007f816068ef78::apply(Object, Object) -> Object
fifo write: @1699477101892892462 0x7f81e1fa5714 340: bgd$$Lambda$545.0x00007f8160317118::apply(Object) -> Object
fifo write: @1699477101893183155 0x7f81e1fa5cd7 2783: bgd::a(int, int, bgd) -> com.mojang.serialization.DataResult
fifo write: @1699477101895426114 0x7f81e94d11d0 47: he$c::a() -> Object
fifo write: @1699477101895478335 0x7f81e1fa7014 185: com.mojang.datafixers.kinds.Applicative$$Lambda$3985.0x00007f816083afb0::<init>(java.util.function.BiFunction) -> void
fifo write: @1699477101895561066 0x7f81e1fa74d7 925: com.mojang.datafixers.kinds.Applicative::ap2(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477101895610857 0x7f81e1fa7d14 356: com.mojang.serialization.DataResult$$Lambda$3988.0x00007f816083b688::apply(Object) -> Object
fifo write: @1699477101895674798 0x7f81e1fa8237 1249: com.mojang.datafixers.kinds.Applicative::lambda$ap2$10(java.util.function.BiFunction) -> java.util.function.Function
fifo write: @1699477101895725278 0x7f81e1fa8c94 332: com.mojang.serialization.DataResult$$Lambda$3989.0x00007f816083b8d0::apply(Object) -> Object
fifo write: @1699477101895779709 0x7f81e1fa9194 185: com.mojang.serialization.DataResult$$Lambda$3991.0x00007f816083bd40::<init>(com.mojang.serialization.DataResult$PartialResult) -> void
fifo write: @1699477101895850690 0x7f81e1fa9614 230: com.mojang.serialization.DataResult$$Lambda$3990.0x00007f816083bb18::<init>(com.mojang.serialization.DataResult$PartialResult, com.mojang.serialization.DataResult$PartialResult) -> void
fifo write: @1699477101895909581 0x7f81e1fa9b77 1625: com.mojang.datafixers.kinds.Applicative$$Lambda$3984.0x00007f816083ad70::apply(Object) -> Object
fifo write: @1699477101896005442 0x7f81e1faa84d 2082: com.mojang.serialization.DataResult::lambda$ap$22(com.mojang.serialization.DataResult$PartialResult, java.util.function.Function) -> com.mojang.serialization.DataResult$PartialResult
fifo write: @1699477101896068283 0x7f81e1fab8f4 1567: java.util.Optional::flatMap(java.util.function.Function) -> java.util.Optional
fifo write: @1699477101896185754 0x7f81e1fac6b5 3045: com.mojang.serialization.DataResult::lambda$ap$26(com.mojang.serialization.DataResult$PartialResult, com.mojang.serialization.DataResult$PartialResult) -> com.mojang.serialization.DataResult$PartialResult
fifo write: @1699477101897699554 0x7f81e94d14d4 1007: java.util.zip.Inflater::reset() -> void
fifo write: @1699477101898275241 0x7f81e94d1f11 470: com.mojang.serialization.DataResult::success(Object, com.mojang.serialization.Lifecycle) -> com.mojang.serialization.DataResult
fifo write: @1699477101898312392 0x7f81e94d25d0 87: java.time.LocalDate::compareTo0(java.time.LocalDate) -> int
fifo write: @1699477101899091072 0x7f81e1fadc14 334: java.util.IdentityHashMap$EntryIterator$Entry::checkIndexForEntryUse() -> void
fifo write: @1699477101899305505 0x7f81e1fae194 373: java.util.IdentityHashMap$IdentityHashMapIterator::hasNext() -> boolean
fifo write: @1699477101899401476 0x7f81e94d2a31 1689: java.util.zip.InflaterInputStream::<init>(java.io.InputStream, java.util.zip.Inflater, int) -> void
fifo write: @1699477101899497227 0x7f81e1fae834 846: java.util.IdentityHashMap$IdentityHashMapIterator::nextIndex() -> int
fifo write: @1699477101899810231 0x7f81e94d38be 37: java.util.IdentityHashMap::unmaskNull(Object) -> Object
fifo write: @1699477101899880642 0x7f81e1faf194 47: java.util.IdentityHashMap$EntryIterator::next() -> Object
fifo write: @1699477101899922323 0x7f81e1faf594 243: java.util.IdentityHashMap$EntryIterator$Entry::<init>(java.util.IdentityHashMap$EntryIterator, int) -> void
fifo write: @1699477101899959353 0x7f81e1fafa34 666: java.util.IdentityHashMap$EntryIterator::next() -> java.util.Map$Entry
fifo write: @1699477101900021754 0x7f81e1fb0197 237: com.mojang.serialization.Codec$9::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101900074984 0x7f81e1fb0634 677: java.util.IdentityHashMap$EntryIterator$Entry::getKey() -> Object
fifo write: @1699477101900114525 0x7f81e1fb0e34 500: java.util.IdentityHashMap$EntryIterator$Entry::getValue() -> Object
fifo write: @1699477101900156746 0x7f81e1fb1514 348: com.mojang.serialization.JsonOps::getBooleanValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101900185016 0x7f81e94d3bcc 6: dko$b::c() -> String
fifo write: @1699477101900224116 0x7f81e1fb1a14 240: aeo::getBooleanValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101900440069 0x7f81e1fb1f97 2738: com.google.gson.stream.JsonReader::nextBoolean() -> boolean
fifo write: @1699477101900668992 0x7f81e1fb3670 784: java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock() -> boolean
fifo write: @1699477101900781634 0x7f81e1fb4037 5618: com.mojang.serialization.JsonOps::getBooleanValue(com.google.gson.JsonElement) -> com.mojang.serialization.DataResult
fifo write: @1699477101901068807 0x7f81e1fb6394 257: com.google.gson.internal.LinkedTreeMap$Node::<init>(boolean) -> void
fifo write: @1699477101901571214 0x7f81e94d3ed0 239: com.mojang.serialization.MapDecoder$$Lambda$3718.0x00007f81607ae588::apply(Object) -> Object
fifo write: @1699477101901729626 0x7f81e94d43b0 42: Long::reverseBytes(long) -> long
fifo write: @1699477101901794557 0x7f81e1fb6914 925: com.sun.crypto.provider.GHASH::blockMult(long[], long[]) -> void
fifo write: @1699477101903429368 0x7f81e1fb731c 3126: com.sun.crypto.provider.AESCrypt::implEncryptBlock(byte[], int, byte[], int) -> void
fifo write: @1699477101904871416 0x7f81e94d4795 3115: com.mojang.serialization.codecs.ListCodec$$Lambda$3721.0x00007f81607afbb8::accept(Object) -> void
fifo write: @1699477101905018738 0x7f81e94d6c98 1392: com.google.common.collect.MapMakerInternalMap$Segment::setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry, Object) -> void
fifo write: @1699477101905506495 0x7f81e94d7bf4 4964: sun.nio.ch.IOUtil::read(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477101906021841 0x7f81e94db9d0 335: java.util.concurrent.locks.ReentrantLock::unlock() -> void
fifo write: @1699477101906698530 0x7f81e94dbfd0 171: com.google.gson.stream.JsonReader::beginObject() -> void
fifo write: @1699477101907228117 0x7f81e94dc4f0 794: aeo::getMap(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101907309378 0x7f81e1fb9014 141: com.mojang.serialization.Codec$$Lambda$1466.0x00007f81605618a0::get() -> Object
fifo write: @1699477101907391309 0x7f81e1fb93f7 528: bga::a(int) -> bga
fifo write: @1699477101907727073 0x7f81e1fb9a14 141: dyw$$Lambda$1699.0x00007f81605c86a0::codec() -> com.mojang.serialization.Codec
fifo write: @1699477101907792134 0x7f81e1fb9e14 599: dyv$$Lambda$1697.0x00007f81605c8240::apply(Object) -> Object
fifo write: @1699477101907853385 0x7f81e94dcf53 216: java.util.ArrayDeque::removeLast() -> Object
fifo write: @1699477101907961726 0x7f81e94dd439 1: java.util.ArrayDeque::isEmpty() -> boolean
fifo write: @1699477101908229210 0x7f81e1fba47a 508: com.mojang.serialization.codecs.PairMapCodec::lambda$decode$0(Object, Object) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101908311921 0x7f81e1fbab3a 610: com.mojang.serialization.codecs.PairMapCodec$$Lambda$4005.0x00007f816083fd30::apply(Object) -> Object
fifo write: @1699477101908395182 0x7f81e1fbb2d4 1446: dfk$$Lambda$531.0x00007f816030a408::apply(Object) -> Object
fifo write: @1699477101908428562 0x7f81e94dd753 288: com.google.gson.stream.JsonReader::endObject() -> void
fifo write: @1699477101908473123 0x7f81e1fbbe14 1076: dfk::a(dgm, com.mojang.datafixers.util.Pair) -> dfl
fifo write: @1699477101908761467 0x7f81e1fbc9a7 7752: com.google.gson.internal.bind.TypeAdapters$28::read(com.google.gson.stream.JsonReader) -> com.google.gson.JsonElement
fifo write: @1699477101909016460 0x7f81e1fbfa74 298: Boolean::valueOf(String) -> Boolean
fifo write: @1699477101909333464 0x7f81e1fc0157 6000: com.mojang.serialization.MapCodec$5::apply(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477101909368704 0x7f81e1fc2714 422: java.util.ArrayDeque::peek() -> Object
fifo write: @1699477101909992193 0x7f81e94ddf85 12917: hm::a(int, aev, Object, com.mojang.serialization.Lifecycle) -> he$c
fifo write: @1699477101910024063 0x7f81e1fc2d14 139: Class::isAnnotation() -> boolean
fifo write: @1699477101910201595 0x7f81e1fc329c 4008: java.nio.file.FileTreeWalker::next() -> java.nio.file.FileTreeWalker$Event
fifo write: @1699477101910365607 0x7f81e1fc50e4 5227: java.nio.file.FileTreeWalker::visit(java.nio.file.Path, boolean, boolean) -> java.nio.file.FileTreeWalker$Event
fifo write: @1699477101910633241 0x7f81e1fc76b9 681: java.lang.reflect.ProxyGenerator$ProxyMethod::codeClassForName(jdk.internal.org.objectweb.asm.MethodVisitor, Class) -> void
fifo write: @1699477101911427791 0x7f81e94e5ef5 3444: com.mojang.serialization.MapCodec$MapCodecCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101912074089 0x7f81e94e83cc 6: com.google.gson.reflect.TypeToken::getRawType() -> Class
fifo write: @1699477101912230071 0x7f81e8be5580 640: I2C/C2I adapters(0xbbbbaaababbbaa)
fifo write: @1699477101913018002 0x7f81e1fc7eb4 1115: jdk.internal.org.objectweb.asm.Frame::addInitializedType(int) -> void
fifo write: @1699477101913244554 0x7f81e94e86ed 706: jdk.nio.zipfs.ZipPath::getResolved() -> byte[]
fifo write: @1699477101913290695 0x7f81e94e904c 6: dwr$a::c() -> String
fifo write: @1699477101913377076 0x7f81e94e9373 738: sun.reflect.generics.parser.SignatureParser::skipIdentifier() -> void
fifo write: @1699477101913528458 0x7f81e94ea0fc 1569: StringBuilder::append(String) -> AbstractStringBuilder
fifo write: @1699477101913962304 0x7f81e1fc8936 308: Class::getMethod0(String, Class[]) -> java.lang.reflect.Method
fifo write: @1699477101914029295 0x7f81e1fc8eb4 553: PublicMethods$MethodList::getMostSpecific() -> java.lang.reflect.Method
fifo write: @1699477101914151396 0x7f81e1fc96b4 901: sun.reflect.generics.parser.SignatureParser::parseTypeSignature() -> sun.reflect.generics.tree.TypeSignature
fifo write: @1699477101914196537 0x7f81e94eb256 17: com.google.gson.stream.JsonReader::isLiteral(char) -> boolean
fifo write: @1699477101915110469 0x7f81e94eb571 1630: jdk.nio.zipfs.ZipPath::<init>(jdk.nio.zipfs.ZipFileSystem, byte[], boolean) -> void
fifo write: @1699477101915198990 0x7f81e1fc9f39 2431: java.util.concurrent.ConcurrentHashMap::get(Object) -> Object
fifo write: @1699477101915367752 0x7f81e94ec696 1703: AbstractStringBuilder::append(CharSequence) -> AbstractStringBuilder
fifo write: @1699477101915603575 0x7f81e94ed950 99: java.util.Optional::ifPresent(java.util.function.Consumer) -> void
fifo write: @1699477101916103711 0x7f81e1fcb294 538: it.unimi.dsi.fastutil.objects.ObjectArrayList::add(Object) -> boolean
fifo write: @1699477101916270234 0x7f81e1fcb9d9 1258: it.unimi.dsi.fastutil.objects.ObjectArrayList::grow(int) -> void
fifo write: @1699477101916841581 0x7f81e94edd88 499: java.nio.charset.CharsetDecoder::decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean) -> java.nio.charset.CoderResult
fifo write: @1699477101918204108 0x7f81e1fcc594 141: dwq$$Lambda$3542.0x00007f8160776660::codec() -> com.mojang.serialization.Codec
fifo write: @1699477101918272329 0x7f81e1fcc994 599: dwp$$Lambda$2952.0x00007f81606f0d80::apply(Object) -> Object
fifo write: @1699477101918338200 0x7f81e1fcd014 191: dwp::<init>(dwr$a) -> void
fifo write: @1699477101918483932 0x7f81e1fcd4b4 803: dwo$$Lambda$3535.0x00007f8160775268::apply(Object) -> Object
fifo write: @1699477101918539492 0x7f81e1fcdc94 375: dwo::<init>(com.mojang.datafixers.util.Either, he, dwr$a) -> void
fifo write: @1699477101918690334 0x7f81e1fce32a 1265: dwo$$Lambda$3541.0x00007f8160776420::apply(Object, Object, Object) -> Object
fifo write: @1699477101919070919 0x7f81e94ee78c 923: String::decodeASCII(byte[], int, char[], int, int) -> int
fifo write: @1699477101919255732 0x7f81e94ef250 71: com.google.gson.JsonPrimitive::getAsNumber() -> Number
fifo write: @1699477101919522825 0x7f81e1fced94 453: com.google.common.collect.MapMakerInternalMap$Segment::copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry, com.google.common.collect.MapMakerInternalMap$InternalEntry) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477101919603166 0x7f81e1fcf374 324: com.google.common.collect.MapMakerInternalMap$Segment::isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> boolean
fifo write: @1699477101919779518 0x7f81e1fcf8e1 1100: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment, com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry, com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry
fifo write: @1699477101920289745 0x7f81e94ef618 1746: jdk.internal.util.jar.JarIndex::get(String) -> java.util.LinkedList
fifo write: @1699477101920449087 0x7f81e94f0a5f 41: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry::access$402(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry, com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> com.google.common.collect.MapMakerInternalMap$WeakValueReference
fifo write: @1699477101921253747 0x7f81e94f0d53 80: com.google.common.collect.MapMakerInternalMap::segmentFor(int) -> com.google.common.collect.MapMakerInternalMap$Segment
fifo write: @1699477101921328398 0x7f81e94f10dd 140: com.mojang.datafixers.util.Pair::mapFirst(java.util.function.Function) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101922725546 0x7f81e1fd0394 469: dwm::<init>(com.mojang.datafixers.util.Either, he, dwr$a) -> void
fifo write: @1699477101922814137 0x7f81e1fd0aad 1362: dwm$$Lambda$3551.0x00007f81607724a8::apply(Object, Object, Object) -> Object
fifo write: @1699477101922944359 0x7f81e94f1573 1348: com.google.gson.stream.JsonReader::peekNumber() -> int
fifo write: @1699477101923063360 0x7f81e1fd165f 3002: dwr::<init>(he, java.util.List) -> void
fifo write: @1699477101923499946 0x7f81e1fd2b94 279: he$a::<init>(Object) -> void
fifo write: @1699477101923542327 0x7f81e1fd30c3 386: he::a(Object) -> he
fifo write: @1699477101923589227 0x7f81e1fd36b7 553: aes$$Lambda$4014.0x00007f8160880240::apply(Object) -> Object
fifo write: @1699477101923785110 0x7f81e1fd3d5a 1681: aes::b(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101923847461 0x7f81e1fd4b97 2022: aes$$Lambda$4013.0x00007f8160880000::apply(Object) -> Object
fifo write: @1699477101924468289 0x7f81e94f2729 7290: com.google.common.collect.MapMakerInternalMap$Segment::put(Object, int, Object, boolean) -> Object
fifo write: @1699477101924976055 0x7f81e94f72b7 1465: com.mojang.serialization.JsonOps::getNumberValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101925831256 0x7f81e1fd5a94 185: dyz::<init>(java.util.List) -> void
fifo write: @1699477101925918287 0x7f81e1fd5f14 137: arf$$Lambda$4030.0x00007f8160883808::apply(Object) -> Object
fifo write: @1699477101926010298 0x7f81e94f8310 1564: aeo::getNumberValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101926100660 0x7f81e1fd6363 570: dza$$Lambda$2543.0x00007f8160692218::apply(Object) -> Object
fifo write: @1699477101926146410 0x7f81e1fd69b4 1012: arf::a(com.mojang.datafixers.util.Either) -> Object
fifo write: @1699477101926192161 0x7f81e1fd7254 1206: arf$$Lambda$187.0x00007f816018cf10::apply(Object) -> Object
fifo write: @1699477101926567146 0x7f81e94f9485 1076: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper::newEntry(com.google.common.collect.MapMakerInternalMap$Segment, Object, int, com.google.common.collect.MapMakerInternalMap$InternalEntry) -> com.google.common.collect.MapMakerInternalMap$InternalEntry
fifo write: @1699477101926606226 0x7f81e94f9fb3 144: ro::a(String) -> ro
fifo write: @1699477101926760978 0x7f81e94fa45c 251: arf$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101927394996 0x7f81e94faa57 593: com.mojang.serialization.Decoder$5::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101927427777 0x7f81e94fb18e 5: java.util.ArrayDeque::inc(int, int) -> int
fifo write: @1699477101927471087 0x7f81e1fd7bd4 1006: java.util.ArrayDeque::addLast(Object) -> void
fifo write: @1699477101928173726 0x7f81e1fd85d9 3341: com.google.gson.stream.JsonReader::peekNumber() -> int
fifo write: @1699477101928906396 0x7f81e1fd9f77 1335: hm$$Lambda$3958.0x00007f81608331c0::apply(Object) -> Object
fifo write: @1699477101928935606 0x7f81e94fb4cc 4: Double::doubleValue() -> double
fifo write: @1699477101928978607 0x7f81e1fdab54 971: hm::i(aev) -> he$c
fifo write: @1699477101931131415 0x7f81e94fbacc 6: he$a::a() -> Object
fifo write: @1699477101932555643 0x7f81e1fdb5da 2600: com.mojang.serialization.Codec$15::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101933146751 0x7f81e1fdc8d4 962: com.google.gson.JsonPrimitive::getAsBoolean() -> boolean
fifo write: @1699477101933525856 0x7f81e94fbdd0 135: com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry::getValue() -> Object
fifo write: @1699477101933674057 0x7f81e1fdd194 512: jdk.internal.math.FDBigInteger::trimLeadingZeros() -> void
fifo write: @1699477101933774029 0x7f81e94fc19d 1930: sun.security.provider.DigestBase::engineUpdate(byte[], int, int) -> void
fifo write: @1699477101933999722 0x7f81e94fd757 1891: Long::toString(long) -> String
fifo write: @1699477101934111463 0x7f81e1fdd8c4 346: Double::valueOf(double) -> Double
fifo write: @1699477101934141813 0x7f81e1fdde14 239: Double::<init>(double) -> void
fifo write: @1699477101934460248 0x7f81e1fde274 256: jdk.internal.math.FloatingDecimal::parseDouble(String) -> double
fifo write: @1699477101934496188 0x7f81e1fde6f4 353: Double::parseDouble(String) -> double
fifo write: @1699477101934723881 0x7f81e1fdec34 1024: java.util.HashMap::keysToArray(Object[]) -> Object[]
fifo write: @1699477101935292618 0x7f81e1fdf614 185: com.mojang.datafixers.util.Function5$$Lambda$3999.0x00007f816083efc0::<init>(com.mojang.datafixers.util.Function5) -> void
fifo write: @1699477101935343109 0x7f81e1fdfa94 505: com.mojang.datafixers.kinds.Applicative$$Lambda$1738.0x00007f81605d4460::apply(Object) -> Object
fifo write: @1699477101935446260 0x7f81e1fe0094 275: com.mojang.datafixers.util.Function5$$Lambda$4006.0x00007f816083d000::<init>(com.mojang.datafixers.util.Function5, Object, Object) -> void
fifo write: @1699477101935521741 0x7f81e1fe0637 947: com.mojang.serialization.Codec$15$$Lambda$3917.0x00007f816082b628::apply(Object) -> Object
fifo write: @1699477101935560582 0x7f81e1fe0eb4 450: com.google.gson.internal.LazilyParsedNumber::doubleValue() -> double
fifo write: @1699477101935641763 0x7f81e1fe14d7 1155: com.mojang.datafixers.util.Function5::curry2() -> java.util.function.BiFunction
fifo write: @1699477101935846815 0x7f81e1fe1ef7 1721: com.mojang.datafixers.util.Function5$$Lambda$3999.0x00007f816083efc0::apply(Object, Object) -> Object
fifo write: @1699477101935913186 0x7f81e1fe2cd7 1390: com.mojang.datafixers.util.Function5::lambda$curry2$3(Object, Object) -> com.mojang.datafixers.util.Function3
fifo write: @1699477101936038708 0x7f81e1fe3874 480: dfk::a(java.util.function.Function, Object) -> dfl
fifo write: @1699477101936083839 0x7f81e1fe3e14 585: dfk$$Lambda$507.0x00007f81602f8d80::get() -> Object
fifo write: @1699477101936135199 0x7f81e1fe4474 490: dfl::a(dfl, java.util.Optional) -> dfl
fifo write: @1699477101936322852 0x7f81e94feb3d 1785: com.mojang.serialization.Codec$16::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101936379332 0x7f81e1fe4ab4 841: dfl$$Lambda$4000.0x00007f816083f1f8::apply(Object) -> Object
fifo write: @1699477101937646709 0x7f81e1fe561c 8955: jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer::doubleValue() -> double
fifo write: @1699477101938036044 0x7f81e1fe9d14 338: csv$$Lambda$505.0x00007f81602fd7a8::apply(Object) -> Object
fifo write: @1699477101938820324 0x7f81e1fea214 296: jdk.internal.math.FDBigInteger::<init>(int[], int) -> void
fifo write: @1699477101938859764 0x7f81e1fea794 324: dlj$x::<init>(dlj$f, dlj$o) -> void
fifo write: @1699477101938913265 0x7f81e1fead8a 989: dlj$x$$Lambda$3450.0x00007f816075f240::apply(Object, Object) -> Object
fifo write: @1699477101939191929 0x7f81e1feb6fc 3252: jdk.internal.math.FDBigInteger::rightInplaceSub(jdk.internal.math.FDBigInteger) -> jdk.internal.math.FDBigInteger
fifo write: @1699477101939270370 0x7f81e1fed294 1719: jdk.internal.math.FDBigInteger::cmp(jdk.internal.math.FDBigInteger) -> int
fifo write: @1699477101939347381 0x7f81e1fee294 167: com.mojang.datafixers.util.Function5::lambda$curry2$2(Object, Object, Object, Object, Object) -> Object
fifo write: @1699477101939420122 0x7f81e1fee71d 356: com.mojang.datafixers.util.Function5$$Lambda$4006.0x00007f816083d000::apply(Object, Object, Object) -> Object
fifo write: @1699477101939540193 0x7f81e1feed5c 3194: jdk.internal.math.FDBigInteger::leftShift(int) -> jdk.internal.math.FDBigInteger
fifo write: @1699477101940010499 0x7f81e94fffde 1560: com.mojang.serialization.JsonOps::getStringValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101940158951 0x7f81e9501230 1670: aeo::getStringValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101941339786 0x7f81e950271e 10449: com.google.common.collect.MapMakerInternalMap::putIfAbsent(Object, Object) -> Object
fifo write: @1699477101941440538 0x7f81e9509730 1344: arf$3$$Lambda$3930.0x00007f81608354a0::apply(Object) -> Object
fifo write: @1699477101941482408 0x7f81e1ff07b7 1333: Double::compare(double, double) -> int
fifo write: @1699477101941518449 0x7f81e1ff1394 431: Double::compareTo(Object) -> int
fifo write: @1699477101941552399 0x7f81e1ff1994 93: Double::compareTo(Double) -> int
fifo write: @1699477101941644770 0x7f81e950a8c7 1531: com.mojang.serialization.JsonOps::getStringValue(com.google.gson.JsonElement) -> com.mojang.serialization.DataResult
fifo write: @1699477101942396300 0x7f81e1ff1de7 355: dlj$d$$Lambda$3443.0x00007f816075ddb0::apply(Object) -> Object
fifo write: @1699477101942432771 0x7f81e1ff2314 279: dlj$r::<init>(dfj) -> void
fifo write: @1699477101942507461 0x7f81e1ff2814 324: dlj$d::<init>(dfj, dlj$r) -> void
fifo write: @1699477101942544282 0x7f81e1ff2dba 889: dlj$d::<init>(dfj) -> void
fifo write: @1699477101942728844 0x7f81e950baf5 2110: com.mojang.serialization.Codec$4::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101942863286 0x7f81e950d5f0 903: com.mojang.serialization.DataResult$$Lambda$3723.0x00007f81607b4248::apply(Object) -> Object
fifo write: @1699477101942911907 0x7f81e1ff3721 1203: java.util.HashSet::<init>(java.util.Collection) -> void
fifo write: @1699477101943401293 0x7f81e950e050 211: com.mojang.serialization.Decoder$2$$Lambda$3811.0x00007f81608178c0::apply(Object) -> Object
fifo write: @1699477101943736787 0x7f81e1ff41f4 1198: jdk.internal.math.FDBigInteger::cmpPow52(int, int) -> int
fifo write: @1699477101943972500 0x7f81e1ff4d34 523: aev$$Lambda$1457.0x00007f8160551c20::apply(Object) -> Object
fifo write: @1699477101944029271 0x7f81e1ff5374 174: aev::b(aev, aew) -> aev
fifo write: @1699477101944202213 0x7f81e1ff597b 5225: jdk.internal.math.FDBigInteger::valueOfMulPow52(long, int, int) -> jdk.internal.math.FDBigInteger
fifo write: @1699477101944466987 0x7f81e950e5f7 638: com.mojang.serialization.Codec$$Lambda$521.0x00007f8160306000::apply(Object) -> Object
fifo write: @1699477101945105585 0x7f81e950edd0 163: hm::a(aew) -> Object
fifo write: @1699477101945442429 0x7f81e1ff8014 279: dkm$j::<init>(he) -> void
fifo write: @1699477101945603461 0x7f81e1ff8583 664: dkl$$Lambda$3363.0x00007f8160747550::apply(Object) -> Object
fifo write: @1699477101946112898 0x7f81e1ff8cf4 1650: dkm$$Lambda$3361.0x00007f8160746e10::apply(Object) -> Object
fifo write: @1699477101946174759 0x7f81e1ff98b4 1304: dkm::a(com.mojang.datafixers.util.Either) -> dkl
fifo write: @1699477101946811667 0x7f81e950f357 1380: com.mojang.serialization.Codec$12$$Lambda$3814.0x00007f8160815450::apply(Object) -> Object
fifo write: @1699477101948347707 0x7f81e1ffa317 1559: dga::b(String) -> java.util.Optional
fifo write: @1699477101948730752 0x7f81e951094c 6: dud::c() -> String
fifo write: @1699477101949101587 0x7f81e9510cba 2244: com.mojang.serialization.Decoder$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101949625873 0x7f81e95124b0 1413: hq$$Lambda$511.0x00007f8160302098::apply(Object) -> Object
fifo write: @1699477101950464644 0x7f81e1ffafb4 1304: dlm::a(com.mojang.datafixers.util.Either) -> dlm
fifo write: @1699477101950530505 0x7f81e1ffb9f4 1578: dlm$$Lambda$2366.0x00007f8160664c00::apply(Object) -> Object
fifo write: @1699477101951415046 0x7f81e1ffc574 990: dkm$j::b() -> double
fifo write: @1699477101951457677 0x7f81e1ffcef4 990: dkm$j::a() -> double
fifo write: @1699477101951738351 0x7f81e1ffd7f4 551: Math::min(double, double) -> double
fifo write: @1699477101951780891 0x7f81e1ffdef4 552: Math::max(double, double) -> double
fifo write: @1699477101951915353 0x7f81e9513650 71: com.mojang.serialization.codecs.RecordCodecBuilder$2::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101951961234 0x7f81e95139cc 4: jdk.internal.math.FloatingDecimal$PreparedASCIIToBinaryBuffer::doubleValue() -> double
fifo write: @1699477101953321911 0x7f81e9513e91 8459: com.google.gson.internal.bind.TypeAdapters$28::read(com.google.gson.stream.JsonReader) -> com.google.gson.JsonElement
fifo write: @1699477101953386622 0x7f81e1ffe5f4 222: jdk.internal.math.FDBigInteger::big5pow(int) -> jdk.internal.math.FDBigInteger
fifo write: @1699477101953687586 0x7f81e9518bf0 2444: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3932.0x00007f8160835930::apply(Object) -> Object
fifo write: @1699477101953739186 0x7f81e1ffeb14 549: java.util.HashSet::toArray() -> Object[]
fifo write: @1699477101953791627 0x7f81e1fff0fc 367: jdk.internal.math.FDBigInteger::leftShift(int[], int, int[], int, int, int) -> void
fifo write: @1699477101954186222 0x7f81e951ad59 3300: com.mojang.serialization.codecs.KeyDispatchCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477101954281073 0x7f81e951d56f 875: java.util.function.Function$$Lambda$289.0x00007f81601c27c8::apply(Object) -> Object
fifo write: @1699477101955364737 0x7f81e951df53 104: java.nio.CharBuffer::position(int) -> java.nio.Buffer
fifo write: @1699477101956016206 0x7f81e1fff85c 3144: jdk.internal.math.FDBigInteger::leftInplaceSub(jdk.internal.math.FDBigInteger) -> jdk.internal.math.FDBigInteger
fifo write: @1699477101956390311 0x7f81e951e39a 1634: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$decode$4(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477101956626344 0x7f81e951f5b0 1664: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3931.0x00007f81608356e8::apply(Object) -> Object
fifo write: @1699477101957668107 0x7f81e95209f7 5232: com.mojang.serialization.Codec$12::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101957812349 0x7f81e2001294 95: dlt::f() -> int
fifo write: @1699477101957859420 0x7f81e20016b9 195: dls::a() -> long
fifo write: @1699477101958043482 0x7f81e2001c83 1516: dlt::a(int) -> int
fifo write: @1699477101958552199 0x7f81e9525453 576: jdk.nio.zipfs.ZipPath::getResolved() -> byte[]
fifo write: @1699477101959147876 0x7f81e9525cb0 60: dls::a() -> long
fifo write: @1699477101959631323 0x7f81e95260ff 2233: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$decode$3(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.serialization.Decoder) -> com.mojang.serialization.DataResult
fifo write: @1699477101959686573 0x7f81e2002a57 1446: java.util.stream.AbstractPipeline::<init>(java.util.stream.AbstractPipeline, int) -> void
fifo write: @1699477101959716174 0x7f81e9527fd3 200: dlt::a(int) -> int
fifo write: @1699477101959918036 0x7f81e2003694 109: it.unimi.dsi.fastutil.ints.IntRBTreeSet$Entry::black(boolean) -> void
fifo write: @1699477101959947297 0x7f81e2003af4 96: it.unimi.dsi.fastutil.ints.IntRBTreeSet$Entry::succ() -> boolean
fifo write: @1699477101959994987 0x7f81e2003f14 583: it.unimi.dsi.fastutil.ints.IntRBTreeSet::compare(int, int) -> int
fifo write: @1699477101960590395 0x7f81e2004614 129: dlt::c(int) -> long
fifo write: @1699477101960626025 0x7f81e2004ab4 230: dlt::j() -> double
fifo write: @1699477101960930739 0x7f81e200503e 1709: dzn::<init>(asc) -> void
fifo write: @1699477101961623448 0x7f81e952854c 4: dkm$a::a() -> double
fifo write: @1699477101961649149 0x7f81e952884c 4: dkm$a::b() -> double
fifo write: @1699477101962587611 0x7f81e9528b4c 4: jdk.internal.math.FloatingDecimal$PreparedASCIIToBinaryBuffer::floatValue() -> float
fifo write: @1699477101962699302 0x7f81e9528e4c 4: ara$c::b() -> float
fifo write: @1699477101962730303 0x7f81e952914c 4: ara$c::c() -> float
fifo write: @1699477101962913145 0x7f81e2005e74 553: Math::min(float, float) -> float
fifo write: @1699477101963108197 0x7f81e20065b4 718: arf$c::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477101963131258 0x7f81e952944c 4: ara$a::a() -> float
fifo write: @1699477101963153328 0x7f81e952974c 4: ara$e::c() -> float
fifo write: @1699477101963176228 0x7f81e9529a4c 4: ara$e::b() -> float
fifo write: @1699477101963201479 0x7f81e9529d4c 6: ara$a::b() -> ara
fifo write: @1699477101963226189 0x7f81e952a04c 4: ara$a::c() -> float
fifo write: @1699477101963505663 0x7f81e2006cf4 288: ara$e::a(float, float[], float, float[], int) -> float
fifo write: @1699477101964149851 0x7f81e20072b4 1287: ara::a(com.mojang.datafixers.util.Either) -> ara
fifo write: @1699477101964191601 0x7f81e2007c74 1625: ara$$Lambda$3522.0x00007f816076eb20::apply(Object) -> Object
fifo write: @1699477101964221212 0x7f81e2008794 289: ara$a::<init>(float, ara, float) -> void
fifo write: @1699477101964270262 0x7f81e2008cb4 928: ara$$Lambda$3517.0x00007f816076dfe8::apply(Object, Object, Object) -> Object
fifo write: @1699477101964303633 0x7f81e2009547 396: ara::a(float, ara, float) -> ara$a
fifo write: @1699477101964493425 0x7f81e2009b14 239: ara$c::<init>(float) -> void
fifo write: @1699477101964544176 0x7f81e200a003 630: ara$$Lambda$4053.0x00007f816088bef8::apply(Object) -> Object
fifo write: @1699477101965313896 0x7f81e200a759 1111: ara$e::a(float[], java.util.List, float[]) -> void
fifo write: @1699477101965700971 0x7f81e952a350 59: he$c::b() -> boolean
fifo write: @1699477101966057955 0x7f81e200b286 1618: jdk.internal.math.FDBigInteger::<init>(long, char[], int, int) -> void
fifo write: @1699477101966121896 0x7f81e200c23f 1978: jdk.internal.math.FDBigInteger::multByPow52(int, int) -> jdk.internal.math.FDBigInteger
fifo write: @1699477101966666263 0x7f81e200d4b7 2337: arf$$Lambda$2137.0x00007f8160634348::apply(Object) -> Object
fifo write: @1699477101966802255 0x7f81e952a6f2 1421: com.google.gson.stream.JsonReader::peekNumber() -> int
fifo write: @1699477101966904296 0x7f81e200e617 1975: arf::a(java.util.List) -> com.mojang.serialization.DataResult
fifo write: @1699477101967554724 0x7f81e200f603 664: dkm$w$a$$Lambda$3510.0x00007f816076c9a8::apply(Object) -> Object
fifo write: @1699477101967609985 0x7f81e200fd14 279: dkm$w$a::<init>(he) -> void
fifo write: @1699477101967727176 0x7f81e2010214 637: ara$$Lambda$3521.0x00007f816076e8f0::apply(Object, Object) -> Object
fifo write: @1699477101967785727 0x7f81e20108f4 994: dkm$w$a::b() -> float
fifo write: @1699477101967841258 0x7f81e2011274 994: dkm$w$a::c() -> float
fifo write: @1699477101967951009 0x7f81e2011b94 387: ara$$Lambda$4054.0x00007f816088c138::apply(Object) -> Object
fifo write: @1699477101967998470 0x7f81e952b7cc 4: dkm$h::b() -> double
fifo write: @1699477101968043940 0x7f81e952bacc 4: dkm$h::a() -> double
fifo write: @1699477101968120471 0x7f81e20120b4 531: ara$e::<init>(asv, float[], java.util.List, float[], float, float) -> void
fifo write: @1699477101968221253 0x7f81e20128c7 2855: ara::a(asv, java.util.List) -> ara$e
fifo write: @1699477101968943772 0x7f81e20140eb 8639: ara$e::a(asv, float[], java.util.List, float[]) -> ara$e
fifo write: @1699477101969027643 0x7f81e952bdd7 39: com.mojang.datafixers.util.Either$Right::map(java.util.function.Function, java.util.function.Function) -> Object
fifo write: @1699477101971151430 0x7f81e952c5e0 25379: hm::a(aev, Object, com.mojang.serialization.Lifecycle) -> he$c
fifo write: @1699477101971282452 0x7f81e953bdf8 1807: aev$a::equals(Object) -> boolean
fifo write: @1699477101971335823 0x7f81e953d4b3 1281: StringLatin1::trim(byte[]) -> String
fifo write: @1699477101971443044 0x7f81e953e25c 3960: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477101971569346 0x7f81e954080e 1302: com.mojang.datafixers.util.Either$Right::mapBoth(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477101972480878 0x7f81e20182a7 7752: com.google.gson.internal.bind.TypeAdapters$28::read(com.google.gson.stream.JsonReader) -> com.google.gson.JsonElement
fifo write: @1699477101973010744 0x7f81e201b397 36: com.google.gson.internal.LinkedTreeMap::<init>(boolean) -> void
fifo write: @1699477101973075925 0x7f81e201b7b4 549: com.google.gson.JsonObject::<init>() -> void
fifo write: @1699477101973184217 0x7f81e201beba 882: com.google.gson.internal.LinkedTreeMap::<init>(java.util.Comparator, boolean) -> void
fifo write: @1699477101973511891 0x7f81e201c814 237: java.util.ArrayList$ArrayListSpliterator::estimateSize() -> long
fifo write: @1699477101973683813 0x7f81e954164c 2: dti::a() -> int
fifo write: @1699477101973822815 0x7f81e201ccf4 91: dti::b() -> dfj
fifo write: @1699477101975060121 0x7f81e954199f 420: com.mojang.serialization.Dynamic::<init>(com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477101975132542 0x7f81e201d114 396: com.google.gson.internal.LinkedTreeMap::containsKey(Object) -> boolean
fifo write: @1699477101975177172 0x7f81e201d734 509: com.google.gson.JsonObject::has(String) -> boolean
fifo write: @1699477101975540837 0x7f81e201de14 93: com.google.gson.JsonObject::entrySet() -> java.util.Set
fifo write: @1699477101975606878 0x7f81e201e214 428: com.google.gson.internal.LinkedTreeMap$EntrySet::<init>(com.google.gson.internal.LinkedTreeMap) -> void
fifo write: @1699477101975671349 0x7f81e201e7b7 748: com.google.gson.internal.LinkedTreeMap::entrySet() -> java.util.Set
fifo write: @1699477101975740020 0x7f81e201efeb 250: com.google.gson.internal.LinkedTreeMap$EntrySet::iterator() -> java.util.Iterator
fifo write: @1699477101975797620 0x7f81e201f514 187: com.google.gson.internal.LinkedTreeMap$EntrySet$1::<init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> void
fifo write: @1699477101975854941 0x7f81e201f994 341: com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator::<init>(com.google.gson.internal.LinkedTreeMap) -> void
fifo write: @1699477101975960763 0x7f81e201ff94 185: com.mojang.serialization.JsonOps$$Lambda$3970.0x00007f81608392b8::<init>(com.google.gson.JsonObject) -> void
fifo write: @1699477101976005803 0x7f81e20203f4 63: com.google.gson.internal.LinkedTreeMap$EntrySet::size() -> int
fifo write: @1699477101976067934 0x7f81e2020774 104: com.google.gson.internal.bind.JsonTreeReader::peekStack() -> Object
fifo write: @1699477101976191216 0x7f81e2020c37 2192: com.mojang.serialization.JsonOps::createMap(java.util.stream.Stream) -> Object
fifo write: @1699477101976223466 0x7f81e9541fa9 22: com.google.gson.JsonPrimitive::<init>(String) -> void
fifo write: @1699477101976250036 0x7f81e95422d0 51: com.google.gson.JsonPrimitive::isString() -> boolean
fifo write: @1699477101976393638 0x7f81e2021d0b 1976: com.mojang.serialization.JsonOps::createMap(java.util.stream.Stream) -> com.google.gson.JsonElement
fifo write: @1699477101978913591 0x7f81e9542bcc 3: crc$b::a() -> long
fifo write: @1699477101978952071 0x7f81e9542ecc 3: crc$b::b() -> long
fifo write: @1699477101979368167 0x7f81e95432ae 893: System$2::decodeASCII(byte[], int, char[], int, int) -> int
fifo write: @1699477101979387067 0x7f81e8be5280 512: I2C/C2I adapters(0xbbbbbbb6b)
fifo write: @1699477101979783042 0x7f81e2022f94 242: crc$b::<init>(long, long) -> void
fifo write: @1699477101979904943 0x7f81e20233f8 27: crc$b::a(float) -> crc$b
fifo write: @1699477101980004045 0x7f81e2023794 481: crh$$Lambda$4076.0x00007f816088f498::apply(Object) -> Object
fifo write: @1699477101980056665 0x7f81e2023df7 1065: crc$b::a(float, float) -> crc$b
fifo write: @1699477101980130876 0x7f81e20247b4 529: crc$d::<init>(crc$b, crc$b, crc$b, crc$b, crc$b, crc$b, long) -> void
fifo write: @1699477101980210177 0x7f81e2025022 262: crc::a(crc$b, crc$b, crc$b, crc$b, crc$b, crc$b, float) -> crc$d
fifo write: @1699477101980288498 0x7f81e202553a 718: com.mojang.datafixers.util.Pair::mapSecond(java.util.function.Function) -> com.mojang.datafixers.util.Pair
fifo write: @1699477101980355309 0x7f81e2025d57 1355: crh$a$$Lambda$4081.0x00007f8160891070::accept(Object) -> void
fifo write: @1699477101980455441 0x7f81e202693a 1006: crh$a::a(com.google.common.collect.ImmutableList$Builder, java.util.function.Function, com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477101980570402 0x7f81e20272bd 883: crc$b::a(crc$b, crc$b) -> crc$b
fifo write: @1699477101980687454 0x7f81e2027cdf 1963: crj::a(java.util.function.Consumer, crc$b, crc$b, crc$b, crc$b, crc$b, float, aev) -> void
fifo write: @1699477101980894916 0x7f81e2028cb4 551: crj::a(int, int, crc$b) -> aev
fifo write: @1699477101981047028 0x7f81e2029534 159: crj::b(int, int, crc$b) -> aev
fifo write: @1699477101981171190 0x7f81e2029a14 297: crj::a(int, int, crc$b, aev) -> aev
fifo write: @1699477101981227131 0x7f81e9543d74 259: hm$2::b(aev) -> he$c
fifo write: @1699477101981494434 0x7f81e2029f34 421: crj::e(int, int, crc$b) -> aev
fifo write: @1699477101981624496 0x7f81e202a6d4 659: crj::c(int, int, crc$b) -> aev
fifo write: @1699477101981802648 0x7f81e95443a9 171: crc::a(crc$b, crc$b, crc$b, crc$b, crc$b, crc$b, float) -> crc$d
fifo write: @1699477101981885909 0x7f81e954487c 243: crc$b::a(float, float) -> crc$b
fifo write: @1699477101982082372 0x7f81e202ae94 513: java.util.stream.Collectors$$Lambda$317.0x00007f81601c4eb8::accept(Object, Object) -> void
fifo write: @1699477101982133692 0x7f81e202b4b7 797: crc$e$b::<init>(java.util.List) -> void
fifo write: @1699477101982184463 0x7f81e202bcba 547: crc$d::a() -> java.util.List
fifo write: @1699477101982386526 0x7f81e202c49d 3376: com.google.common.collect.ImmutableList::of(Object, Object, Object, Object, Object, Object, Object) -> com.google.common.collect.ImmutableList
fifo write: @1699477101982462506 0x7f81e202d90a 1417: crc$e::a(com.mojang.datafixers.util.Pair) -> crc$e$a
fifo write: @1699477101982544248 0x7f81e202e577 1841: crc$e$$Lambda$4077.0x00007f8160890000::apply(Object) -> Object
fifo write: @1699477101982608428 0x7f81e202f3d4 1000: crc$e$a::<init>(crc$d, Object) -> void
fifo write: @1699477101982693839 0x7f81e9544fd0 35: com.google.common.collect.RegularImmutableList::internalArrayEnd() -> int
fifo write: @1699477101983075774 0x7f81e95452f0 383: crh$$Lambda$4076.0x00007f816088f498::apply(Object) -> Object
fifo write: @1699477101985374524 0x7f81e9545a3d 900: com.google.common.collect.ImmutableList::asImmutableList(Object[], int) -> com.google.common.collect.ImmutableList
fifo write: @1699477101985585437 0x7f81e95466da 1122: java.util.Arrays::copyOfRange(Object[], int, int, Class) -> Object[]
fifo write: @1699477101985817250 0x7f81e95472f9 985: crc$d::<init>(crc$b, crc$b, crc$b, crc$b, crc$b, crc$b, long) -> void
fifo write: @1699477101986075073 0x7f81e202fd34 913: java.util.Comparator$$Lambda$3560.0x00007f81601e4bb8::compare(Object, Object) -> int
fifo write: @1699477101986147074 0x7f81e20305b4 558: java.util.Comparator::lambda$thenComparing$36697e65$1(java.util.Comparator, Object, Object) -> int
fifo write: @1699477101986202265 0x7f81e2030c14 348: crc$e$$Lambda$4082.0x00007f81608912a8::applyAsLong(Object) -> long
fifo write: @1699477101986287276 0x7f81e20310f4 220: Long::compare(long, long) -> int
fifo write: @1699477101986375127 0x7f81e2031614 758: java.util.Comparator::lambda$comparingLong$6043328a$1(java.util.function.ToLongFunction, Object, Object) -> int
fifo write: @1699477101986427958 0x7f81e2031d74 466: crc$e::a(int, boolean, crc$e$b) -> long
fifo write: @1699477101986496559 0x7f81e20324d7 870: java.util.Comparator$$Lambda$4080.0x00007f81608741d0::compare(Object, Object) -> int
fifo write: @1699477101986912204 0x7f81e9547d90 1012: com.google.common.collect.ImmutableCollection::toArray(Object[]) -> Object[]
fifo write: @1699477101987305039 0x7f81e9548a1c 433: com.google.common.collect.ImmutableList::of(Object, Object, Object, Object, Object, Object, Object) -> com.google.common.collect.ImmutableList
fifo write: @1699477101987788035 0x7f81e9549150 199: crc$e$$Lambda$4082.0x00007f81608912a8::applyAsLong(Object) -> long
fifo write: @1699477101988212611 0x7f81e95496b0 2156: crh$a$$Lambda$4081.0x00007f8160891070::accept(Object) -> void
fifo write: @1699477101988258751 0x7f81e954acb0 139: crc$e::a(int, boolean, crc$e$b) -> long
fifo write: @1699477101988744528 0x7f81e954b150 639: crc$d::a() -> java.util.List
fifo write: @1699477101992312554 0x7f81e954c1bf 37860: ClassLoader::loadClass(String) -> Class
fifo write: @1699477101992463336 0x7f81e9566113 5937: sun.nio.cs.UTF_8$Decoder::decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) -> java.nio.charset.CoderResult
fifo write: @1699477101992529196 0x7f81e9569ef0 503: java.util.Comparator$$Lambda$4080.0x00007f81608741d0::compare(Object, Object) -> int
fifo write: @1699477101992622118 0x7f81e956a805 1964: java.util.stream.Collectors$$Lambda$317.0x00007f81601c4eb8::accept(Object, Object) -> void
fifo write: @1699477101992680498 0x7f81e2032d8f 2586: java.util.TimSort::gallopRight(Object, Object[], int, int, int, java.util.Comparator) -> int
fifo write: @1699477101992824850 0x7f81e956ba55 6858: jdk.internal.math.FloatingDecimal::readJavaFormatString(String) -> jdk.internal.math.FloatingDecimal$ASCIIToBinaryConverter
fifo write: @1699477101992881341 0x7f81e203420f 2535: java.util.TimSort::gallopLeft(Object, Object[], int, int, int, java.util.Comparator) -> int
fifo write: @1699477101992939392 0x7f81e956ff00 848: crc$e$$Lambda$4077.0x00007f8160890000::apply(Object) -> Object
fifo write: @1699477101993441178 0x7f81e9570c99 2946: java.util.Comparator$$Lambda$3560.0x00007f81601e4bb8::compare(Object, Object) -> int
fifo write: @1699477101993500939 0x7f81e203577c 8995: java.util.TimSort::mergeLo(int, int, int, int) -> void
fifo write: @1699477101994368710 0x7f81e2038f80 9207: java.util.TimSort::mergeHi(int, int, int, int) -> void
fifo write: @1699477101994618703 0x7f81e203c6bd 941: crc$b::b(crc$b) -> crc$b
fifo write: @1699477101995458874 0x7f81e957315c 151: crc$b::b(crc$b) -> crc$b
fifo write: @1699477101996224324 0x7f81e203d0bd 941: crc$b::b(crc$b) -> crc$b
fifo write: @1699477101997206917 0x7f81e9573bd8 147: crc$b::b(crc$b) -> crc$b
fifo write: @1699477101999356915 0x7f81e203dad9 1076: java.util.TimSort::mergeCollapse() -> void
fifo write: @1699477101999424605 0x7f81e203e777 3689: crc$e::c(java.util.List) -> java.util.List
fifo write: @1699477101999494176 0x7f81e204009e 1193: java.util.TimSort::mergeAt(int) -> void
fifo write: @1699477102000887474 0x7f81e2041017 5477: crc$e::c(java.util.List) -> java.util.List
fifo write: @1699477102005823178 0x7f81e9574129 1695: crc$e::c(java.util.List) -> java.util.List
fifo write: @1699477102015397071 0x7f81e9575550 387: java.util.TimSort::countRunAndMakeAscending(Object[], int, int, java.util.Comparator) -> int
fifo write: @1699477102017410207 0x7f81e9575ba0 3692: crc$e::c(java.util.List) -> java.util.List
fifo write: @1699477102018339999 0x7f81e95782f8 5351: java.util.TimSort::mergeHi(int, int, int, int) -> void
fifo write: @1699477102018617082 0x7f81e20435f4 466: crc$e::a(int, boolean, crc$e$b) -> long
fifo write: @1699477102018806975 0x7f81e2043d14 348: crc$e$$Lambda$4082.0x00007f81608912a8::applyAsLong(Object) -> long
fifo write: @1699477102018874896 0x7f81e2044234 913: java.util.Comparator$$Lambda$3560.0x00007f81601e4bb8::compare(Object, Object) -> int
fifo write: @1699477102019003217 0x7f81e2044ad7 870: java.util.Comparator$$Lambda$4080.0x00007f81608741d0::compare(Object, Object) -> int
fifo write: @1699477102019604565 0x7f81e957ad30 143: crc$e::a(int, boolean, crc$e$b) -> long
fifo write: @1699477102019810518 0x7f81e957b150 319: crc$e$$Lambda$4082.0x00007f81608912a8::applyAsLong(Object) -> long
fifo write: @1699477102020754320 0x7f81e957b6f0 747: java.util.Comparator$$Lambda$4080.0x00007f81608741d0::compare(Object, Object) -> int
fifo write: @1699477102021012713 0x7f81e957c2e3 4204: java.util.TimSort::mergeLo(int, int, int, int) -> void
fifo write: @1699477102021250576 0x7f81e2045359 1183: java.util.TimSort::ensureCapacity(int) -> Object[]
fifo write: @1699477102021544830 0x7f81e957e650 51: java.util.Arrays$ArrayItr::hasNext() -> boolean
fifo write: @1699477102021682832 0x7f81e204601f 1435: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, int, int) -> Object
fifo write: @1699477102021800264 0x7f81e957e950 111: java.util.Arrays$ArrayItr::next() -> Object
fifo write: @1699477102023779239 0x7f81e957f060 11661: aes::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102023880820 0x7f81e9588059 1643: crc$e::c(java.util.List) -> java.util.List
fifo write: @1699477102024011142 0x7f81e2046d77 8786: crc$e::b(java.util.List) -> java.util.List
fifo write: @1699477102025119856 0x7f81e204a457 9999: crc$e::b(java.util.List) -> java.util.List
fifo write: @1699477102025409110 0x7f81e9589419 3838: java.util.Comparator$$Lambda$3560.0x00007f81601e4bb8::compare(Object, Object) -> int
fifo write: @1699477102026056248 0x7f81e204e194 185: java.util.Comparator$$Lambda$4080.0x00007f81608741d0::<init>(java.util.function.ToLongFunction) -> void
fifo write: @1699477102026105849 0x7f81e204e614 146: crc$e$$Lambda$4082.0x00007f81608912a8::<init>(int, boolean) -> void
fifo write: @1699477102026286251 0x7f81e204ea7c 2214: java.util.Comparator::comparingLong(java.util.function.ToLongFunction) -> java.util.Comparator
fifo write: @1699477102026403783 0x7f81e204f994 332: crc$e$$Lambda$4079.0x00007f8160890658::applyAsLong(Object) -> long
fifo write: @1699477102026512534 0x7f81e204fea0 615: crc$e::a(int, crc$e$b) -> long
fifo write: @1699477102026585525 0x7f81e2050694 230: java.util.Comparator$$Lambda$3560.0x00007f81601e4bb8::<init>(java.util.Comparator, java.util.Comparator) -> void
fifo write: @1699477102026666306 0x7f81e2050c57 3242: crc$e::a(int, boolean) -> java.util.Comparator
fifo write: @1699477102026883369 0x7f81e2052227 2325: java.util.Comparator::thenComparing(java.util.Comparator) -> java.util.Comparator
fifo write: @1699477102026984010 0x7f81e20531f4 510: crc$e::a(crc$b[]) -> long
fifo write: @1699477102028420419 0x7f81e958c194 1071: java.util.Comparator$$Lambda$4080.0x00007f81608741d0::compare(Object, Object) -> int
fifo write: @1699477102029837537 0x7f81e958cf87 1036: java.util.Comparator::lambda$comparingLong$6043328a$1(java.util.function.ToLongFunction, Object, Object) -> int
fifo write: @1699477102033226901 0x7f81e958dcd3 1112: java.util.ArrayList::toArray(Object[]) -> Object[]
fifo write: @1699477102033345243 0x7f81e2053914 1132: java.util.TimSort::reverseRange(Object[], int, int) -> void
fifo write: @1699477102033455414 0x7f81e20542dc 1600: crc$e$c::<init>(java.util.List, java.util.List) -> void
fifo write: @1699477102033515425 0x7f81e2054efc 1724: crc$e$c::<init>(java.util.List) -> void
fifo write: @1699477102034655490 0x7f81e2055bfc 1422: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, int) -> Object
fifo write: @1699477102035287938 0x7f81e2056694 31: java.util.Arrays$ArrayList::sort(java.util.Comparator) -> void
fifo write: @1699477102035350188 0x7f81e2056a97 253: java.util.Arrays::sort(Object[], java.util.Comparator) -> void
fifo write: @1699477102036133939 0x7f81e958e6d2 1462: java.util.ArrayList::toArray(Object[]) -> Object[]
fifo write: @1699477102036369652 0x7f81e958f2bd 6150: java.util.TimSort::countRunAndMakeAscending(Object[], int, int, java.util.Comparator) -> int
fifo write: @1699477102037199172 0x7f81e9592ff5 4349: crc$e::c(java.util.List) -> java.util.List
fifo write: @1699477102037328894 0x7f81e9595cae 1745: crc$e$b::<init>(java.util.List) -> void
fifo write: @1699477102038254126 0x7f81e9596d12 2285: java.util.TimSort::binarySort(Object[], int, int, int, java.util.Comparator) -> void
fifo write: @1699477102039013576 0x7f81e9597f37 540: crc$e::a(int, crc$e$b) -> long
fifo write: @1699477102039216488 0x7f81e2056f74 246: java.util.TimSort::minRunLength(int) -> int
fifo write: @1699477102039325180 0x7f81e2057419 460: java.util.TimSort::mergeForceCollapse() -> void
fifo write: @1699477102039543543 0x7f81e2057cb5 7173: crc$e::a(java.util.List, int, int, boolean) -> void
fifo write: @1699477102039615424 0x7f81e205a879 2283: java.util.TimSort::<init>(Object[], java.util.Comparator, Object[], int, int) -> void
fifo write: @1699477102039738085 0x7f81e8b9ea18 168: itable stub
fifo write: @1699477102039941408 0x7f81e205ba14 47: StrictMath::floor(double) -> double
fifo write: @1699477102040876340 0x7f81e205be37 1136: crc$e::a(int, crc$e$c) -> crc$e$b
fifo write: @1699477102040928470 0x7f81e205c8f7 1474: crc$e$$Lambda$4083.0x00007f81608914c8::apply(Object) -> Object
fifo write: @1699477102041211004 0x7f81e959865e 1317: java.util.TimSort::countRunAndMakeAscending(Object[], int, int, java.util.Comparator) -> int
fifo write: @1699477102041442867 0x7f81e205d8a6 12288: crc$e::a(int, java.util.List) -> crc$e$b
fifo write: @1699477102042227687 0x7f81e9599552 673: java.util.ArrayList$ArrayListSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477102044179262 0x7f81e9599f45 2110: java.util.TimSort::binarySort(Object[], int, int, int, java.util.Comparator) -> void
fifo write: @1699477102046611574 0x7f81e959b0d1 142: StrictMath::floorOrCeil(double, double, double, double) -> double
fifo write: @1699477102047505425 0x7f81e959b4b0 467: crc$e::a(crc$b[]) -> long
fifo write: @1699477102049617503 0x7f81e959bc89 12468: java.util.TimSort::mergeLo(int, int, int, int) -> void
fifo write: @1699477102050004078 0x7f81e95a1f5d 1898: java.util.TimSort::countRunAndMakeAscending(Object[], int, int, java.util.Comparator) -> int
fifo write: @1699477102050171240 0x7f81e95a32e5 2458: java.util.TimSort::binarySort(Object[], int, int, int, java.util.Comparator) -> void
fifo write: @1699477102055363237 0x7f81e95a470d 2454: java.util.TimSort::binarySort(Object[], int, int, int, java.util.Comparator) -> void
fifo write: @1699477102058820661 0x7f81e95a5ade 2165: java.util.TimSort::countRunAndMakeAscending(Object[], int, int, java.util.Comparator) -> int
fifo write: @1699477102060858527 0x7f81e95a6fdc 155: java.util.Comparator::thenComparing(java.util.Comparator) -> java.util.Comparator
fifo write: @1699477102061426324 0x7f81e95a74e7 2488: java.util.TimSort::binarySort(Object[], int, int, int, java.util.Comparator) -> void
fifo write: @1699477102062237385 0x7f81e95a8a88 12137: java.util.TimSort::mergeHi(int, int, int, int) -> void
fifo write: @1699477102063878426 0x7f81e95aeede 1633: java.util.TimSort::countRunAndMakeAscending(Object[], int, int, java.util.Comparator) -> int
fifo write: @1699477102068623497 0x7f81e95b01a6 8154: crc$e::b(java.util.List) -> java.util.List
fifo write: @1699477102068740909 0x7f81e95b43ea 7495: java.util.TimSort::mergeLo(int, int, int, int) -> void
fifo write: @1699477102069413477 0x7f81e2062208 1082: java.util.stream.Collectors::toList() -> java.util.stream.Collector
fifo write: @1699477102069450618 0x7f81e2062b37 387: java.util.ArrayList::sort(java.util.Comparator) -> void
fifo write: @1699477102072651859 0x7f81e2063204 497: java.util.stream.Collectors$$Lambda$58.0x00007f816003cca0::get() -> Object
fifo write: @1699477102079670580 0x7f81e95b7de3 8038: java.util.TimSort::mergeHi(int, int, int, int) -> void
fifo write: @1699477102082649878 0x7f81e95bbb59 154: hm$$Lambda$3591.0x00007f816077ce50::test(Object) -> boolean
fifo write: @1699477102082694649 0x7f81e95bc05c 249: he$c::b(Object) -> void
fifo write: @1699477102082802100 0x7f81e95bc460 295: hm$$Lambda$3590.0x00007f816077cc20::accept(Object, Object) -> void
fifo write: @1699477102083149665 0x7f81e20637f4 90: java.util.ImmutableCollections$MapN$MapNIterator::hasNext() -> boolean
fifo write: @1699477102083203765 0x7f81e2063c14 47: java.util.ImmutableCollections$MapN$MapNIterator::next() -> Object
fifo write: @1699477102083267846 0x7f81e2064059 1035: java.util.KeyValueHolder::<init>(Object, Object) -> void
fifo write: @1699477102083336737 0x7f81e20649f7 1888: hr$c$$Lambda$3838.0x00007f816081c318::apply(Object) -> Object
fifo write: @1699477102083487039 0x7f81e2065794 697: hl::a(java.util.Map, hr$d) -> void
fifo write: @1699477102083537290 0x7f81e2065fd4 1035: hl$$Lambda$3844.0x00007f816081d938::accept(Object) -> void
fifo write: @1699477102083590930 0x7f81e20669d7 1139: hr$$Lambda$3839.0x00007f816081c558::apply(Object) -> Object
fifo write: @1699477102083655371 0x7f81e206749c 1891: java.util.ImmutableCollections$MapN$MapNIterator::next() -> java.util.Map$Entry
fifo write: @1699477102083701992 0x7f81e95bc94c 6: hm::d() -> com.mojang.serialization.Lifecycle
fifo write: @1699477102083767353 0x7f81e20684f7 434: com.google.common.collect.CollectSpliterators$1::lambda$forEachRemaining$1(java.util.function.Consumer, java.util.function.Function, Object) -> void
fifo write: @1699477102083815993 0x7f81e2068ab4 526: com.google.common.collect.CollectSpliterators$1$$Lambda$3847.0x00007f816081f350::accept(Object) -> void
fifo write: @1699477102083878874 0x7f81e2069114 434: com.google.common.collect.Maps$12::<init>(java.util.Map$Entry, com.google.common.collect.Maps$EntryTransformer) -> void
fifo write: @1699477102084004506 0x7f81e20696fc 1419: com.google.common.collect.Maps$13::apply(java.util.Map$Entry) -> java.util.Map$Entry
fifo write: @1699477102084063957 0x7f81e206a2f7 1826: com.google.common.collect.Maps$13::apply(Object) -> Object
fifo write: @1699477102084115187 0x7f81e206b0f7 1888: hr$1$$Lambda$3846.0x00007f816081f110::apply(Object) -> Object
fifo write: @1699477102084176508 0x7f81e206c09c 5825: hm::l() -> hq
fifo write: @1699477102084238619 0x7f81e206e6c1 1314: com.google.common.collect.Maps::transformEntry(com.google.common.collect.Maps$EntryTransformer, java.util.Map$Entry) -> java.util.Map$Entry
fifo write: @1699477102085033539 0x7f81e95bcc85 1126: java.util.TimSort::gallopRight(Object, Object[], int, int, int, java.util.Comparator) -> int
fifo write: @1699477102085246502 0x7f81e206f1f4 1653: java.util.Base64$Decoder::decodedOutLength(byte[], int, int) -> int
fifo write: @1699477102085789279 0x7f81e20700b9 636: qw$1::e(java.io.DataInput, rf) -> String
fifo write: @1699477102085953761 0x7f81e95bdbea 7639: java.util.TimSort::mergeLo(int, int, int, int) -> void
fifo write: @1699477102086001242 0x7f81e2070874 175: com.mojang.serialization.DataResult::error(java.util.function.Supplier) -> com.mojang.serialization.DataResult
fifo write: @1699477102087170587 0x7f81e8b9ead0 168: itable stub
fifo write: @1699477102088741747 0x7f81e2070c94 248: com.mojang.serialization.Dynamic::asString() -> com.mojang.serialization.DataResult
fifo write: @1699477102088897429 0x7f81e2071194 591: com.mojang.serialization.OptionalDynamic$$Lambda$1042.0x00007f81604345f0::apply(Object) -> Object
fifo write: @1699477102089276874 0x7f81e2071947 3953: com.mojang.serialization.Dynamic::lambda$get$11(String, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102090066014 0x7f81e95c19ed 8244: crc$e::b(java.util.List) -> java.util.List
fifo write: @1699477102090158665 0x7f81e95c62f0 352: com.mojang.serialization.OptionalDynamic::asString() -> com.mojang.serialization.DataResult
fifo write: @1699477102090392928 0x7f81e8be4f80 520: I2C/C2I adapters(0xbbabbbbbb)
fifo write: @1699477102090410468 0x7f81e8be4a80 1152: I2C/C2I adapters(0xbbabaaaa6bebeaaaaaaaabaabbbbbbbbbb)
fifo write: @1699477102090769123 0x7f81e8be4780 448: I2C/C2I adapters(0xb7e7ebe)
fifo write: @1699477102090888865 0x7f81e8be4480 512: I2C/C2I adapters(0xb7e7e7e7eaa7ebe7e)
fifo write: @1699477102092462325 0x7f81e95c6a99 1572: aeo::getNumberValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102093037412 0x7f81e95c7d58 5439: java.util.TimSort::mergeHi(int, int, int, int) -> void
fifo write: @1699477102093180344 0x7f81e207360f 8376: java.util.concurrent.ConcurrentHashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477102093435558 0x7f81e95ca822 1413: java.security.MessageDigest::update(byte[], int, int) -> void
fifo write: @1699477102093741902 0x7f81e95cba90 1545: aeo::getMap(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102094129327 0x7f81e8be4180 520: I2C/C2I adapters(0xbaaaabbbb)
fifo write: @1699477102094363760 0x7f81e8b9eb88 168: itable stub
fifo write: @1699477102095059469 0x7f81e2077594 337: hr$c$$Lambda$3841.0x00007f816081c9d8::apply(Object) -> Object
fifo write: @1699477102095119179 0x7f81e2077a94 337: hr$c$$Lambda$3840.0x00007f816081c798::apply(Object) -> Object
fifo write: @1699477102095199180 0x7f81e2077ff9 1912: java.util.HashMap$EntrySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477102095277761 0x7f81e2079094 240: com.google.common.collect.Maps$9::transformEntry(Object, Object) -> Object
fifo write: @1699477102095336432 0x7f81e2079514 240: com.google.common.collect.Maps$12::getKey() -> Object
fifo write: @1699477102095400023 0x7f81e20799b4 829: com.google.common.collect.Maps$12::getValue() -> Object
fifo write: @1699477102095478594 0x7f81e207a234 798: hm$$Lambda$3845.0x00007f816081db70::apply(Object) -> Object
fifo write: @1699477102096475417 0x7f81e95ccdcc 6: java.util.concurrent.atomic.AtomicReference::get() -> Object
fifo write: @1699477102097960186 0x7f81e95cd0d4 1529: java.util.ArrayList::toArray(Object[]) -> Object[]
fifo write: @1699477102098948239 0x7f81e207aa97 252: java.util.IdentityHashMap::init(int) -> void
fifo write: @1699477102099921051 0x7f81e95cdcc0 2221: com.mojang.serialization.codecs.PrimitiveCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102100708431 0x7f81e95cf510 3951: com.mojang.serialization.Dynamic::get(String) -> com.mojang.serialization.OptionalDynamic
fifo write: @1699477102100745302 0x7f81e95d19c8 686: com.google.common.collect.AbstractIterator::tryToComputeNext() -> boolean
fifo write: @1699477102100891804 0x7f81e95d2152 189: java.util.ArrayDeque::pollFirst() -> Object
fifo write: @1699477102101270149 0x7f81e207af19 516: StringLatin1::indexOf(byte[], int, int) -> int
fifo write: @1699477102102058319 0x7f81e95d266a 299: com.mojang.serialization.MapDecoder$Implementation::<init>() -> void
fifo write: @1699477102106200902 0x7f81e207b614 159: java.util.ArrayDeque::add(Object) -> boolean
fifo write: @1699477102107825003 0x7f81e95d2e7d 1628: AbstractStringBuilder::append(String) -> AbstractStringBuilder
fifo write: @1699477102109258561 0x7f81e8be3e80 472: I2C/C2I adapters(0xbbbbb7eb)
fifo write: @1699477102109711007 0x7f81e207bad4 1514: jdk.internal.loader.Resource::getByteBuffer() -> java.nio.ByteBuffer
fifo write: @1699477102111712733 0x7f81e95d3fcc 6: com.mojang.brigadier.tree.LiteralCommandNode::getName() -> String
fifo write: @1699477102111752733 0x7f81e95d42cc 6: com.mojang.brigadier.tree.ArgumentCommandNode::getName() -> String
fifo write: @1699477102112515073 0x7f81e8be3b80 480: I2C/C2I adapters(0xbabbbaa)
fifo write: @1699477102112528503 0x7f81e8be3780 456: I2C/C2I adapters(0xaabbaa)
fifo write: @1699477102113703558 0x7f81e207c614 159: java.util.ArrayDeque::poll() -> Object
fifo write: @1699477102115649534 0x7f81e8becc00 448: I2C/C2I adapters(0xbb7ea)
fifo write: @1699477102118022724 0x7f81e95d54cc 6: com.mojang.brigadier.builder.ArgumentBuilder::getCommand() -> com.mojang.brigadier.Command
fifo write: @1699477102118067945 0x7f81e95d57cc 6: com.mojang.brigadier.builder.ArgumentBuilder::getRequirement() -> java.util.function.Predicate
fifo write: @1699477102118112665 0x7f81e95d5acc 6: com.mojang.brigadier.builder.ArgumentBuilder::getRedirect() -> com.mojang.brigadier.tree.CommandNode
fifo write: @1699477102118145916 0x7f81e95d5dcc 3: com.mojang.brigadier.builder.ArgumentBuilder::isFork() -> boolean
fifo write: @1699477102118185476 0x7f81e95d60cc 6: com.mojang.brigadier.builder.ArgumentBuilder::getRedirectModifier() -> com.mojang.brigadier.RedirectModifier
fifo write: @1699477102118232117 0x7f81e95d63d4 131: java.lang.invoke.MethodHandles$Lookup::checkSecurityManager(Class, java.lang.invoke.MemberName) -> void
fifo write: @1699477102118347848 0x7f81e207cb20 2049: com.mojang.brigadier.tree.CommandNode::<init>(com.mojang.brigadier.Command, java.util.function.Predicate, com.mojang.brigadier.tree.CommandNode, com.mojang.brigadier.RedirectModifier, boolean) -> void
fifo write: @1699477102118464870 0x7f81e207dc81 5750: com.mojang.brigadier.tree.CommandNode::addChild(com.mojang.brigadier.tree.CommandNode) -> void
fifo write: @1699477102119910979 0x7f81e207fe94 240: com.mojang.brigadier.tree.CommandNode::getChildren() -> java.util.Collection
fifo write: @1699477102120034270 0x7f81e95d6acc 6: com.mojang.brigadier.builder.RequiredArgumentBuilder::getName() -> String
fifo write: @1699477102120080821 0x7f81e95d6dcc 6: com.mojang.brigadier.builder.RequiredArgumentBuilder::getSuggestionsProvider() -> com.mojang.brigadier.suggestion.SuggestionProvider
fifo write: @1699477102120124331 0x7f81e2080334 861: com.mojang.brigadier.builder.ArgumentBuilder::<init>() -> void
fifo write: @1699477102120155162 0x7f81e2080bd4 890: com.mojang.brigadier.tree.RootCommandNode::<init>() -> void
fifo write: @1699477102120197362 0x7f81e95d70cc 6: com.mojang.brigadier.builder.RequiredArgumentBuilder::getType() -> com.mojang.brigadier.arguments.ArgumentType
fifo write: @1699477102120283743 0x7f81e2081714 478: com.mojang.brigadier.builder.ArgumentBuilder::getArguments() -> java.util.Collection
fifo write: @1699477102120325754 0x7f81e95d73cc 6: com.mojang.brigadier.builder.LiteralArgumentBuilder::getLiteral() -> String
fifo write: @1699477102120394165 0x7f81e2081d54 888: com.mojang.brigadier.builder.ArgumentBuilder::then(com.mojang.brigadier.builder.ArgumentBuilder) -> com.mojang.brigadier.builder.ArgumentBuilder
fifo write: @1699477102120407935 0x7f81e8b9ec40 27: vtable stub
fifo write: @1699477102123643227 0x7f81e2082614 160: com.mojang.brigadier.builder.LiteralArgumentBuilder::getThis() -> com.mojang.brigadier.builder.ArgumentBuilder
fifo write: @1699477102123692487 0x7f81e2082a14 160: com.mojang.brigadier.builder.RequiredArgumentBuilder::getThis() -> com.mojang.brigadier.builder.ArgumentBuilder
fifo write: @1699477102124569969 0x7f81e95d76d3 417: String::hashCode() -> int
fifo write: @1699477102127800810 0x7f81e95d815b 1556: java.lang.invoke.MemberName::<init>(byte, Class, String, Object) -> void
fifo write: @1699477102128243926 0x7f81e2083174 428: du::a(String) -> com.mojang.brigadier.builder.LiteralArgumentBuilder
fifo write: @1699477102128344197 0x7f81e20837d7 944: com.mojang.brigadier.builder.LiteralArgumentBuilder::<init>(String) -> void
fifo write: @1699477102128407918 0x7f81e2084197 1052: com.mojang.brigadier.builder.LiteralArgumentBuilder::literal(String) -> com.mojang.brigadier.builder.LiteralArgumentBuilder
fifo write: @1699477102128671382 0x7f81e2084bdc 761: com.mojang.brigadier.tree.LiteralCommandNode::<init>(String, com.mojang.brigadier.Command, java.util.function.Predicate, com.mojang.brigadier.tree.CommandNode, com.mojang.brigadier.RedirectModifier, boolean) -> void
fifo write: @1699477102128744133 0x7f81e20855fa 2755: com.mojang.brigadier.builder.LiteralArgumentBuilder::build() -> com.mojang.brigadier.tree.LiteralCommandNode
fifo write: @1699477102128803193 0x7f81e2086894 47: com.mojang.brigadier.builder.LiteralArgumentBuilder::build() -> com.mojang.brigadier.tree.CommandNode
fifo write: @1699477102128975156 0x7f81e2086c97 515: du::a(String, com.mojang.brigadier.arguments.ArgumentType) -> com.mojang.brigadier.builder.RequiredArgumentBuilder
fifo write: @1699477102129037446 0x7f81e2087394 47: com.mojang.brigadier.builder.RequiredArgumentBuilder::build() -> com.mojang.brigadier.tree.CommandNode
fifo write: @1699477102129160738 0x7f81e2087794 229: com.mojang.brigadier.tree.ArgumentCommandNode::<init>(String, com.mojang.brigadier.arguments.ArgumentType, com.mojang.brigadier.Command, java.util.function.Predicate, com.mojang.brigadier.tree.CommandNode, com.mojang.brigadier.RedirectModifier, boolean, com.mojang.brigadier.suggestion.SuggestionProvider) -> void
fifo write: @1699477102129234679 0x7f81e2087d57 1023: com.mojang.brigadier.builder.RequiredArgumentBuilder::<init>(String, com.mojang.brigadier.arguments.ArgumentType) -> void
fifo write: @1699477102129316930 0x7f81e2088823 1133: com.mojang.brigadier.builder.RequiredArgumentBuilder::argument(String, com.mojang.brigadier.arguments.ArgumentType) -> com.mojang.brigadier.builder.RequiredArgumentBuilder
fifo write: @1699477102129390691 0x7f81e2089382 2902: com.mojang.brigadier.builder.RequiredArgumentBuilder::build() -> com.mojang.brigadier.tree.ArgumentCommandNode
fifo write: @1699477102129447702 0x7f81e208a694 215: com.mojang.brigadier.builder.ArgumentBuilder::executes(com.mojang.brigadier.Command) -> com.mojang.brigadier.builder.ArgumentBuilder
fifo write: @1699477102129732225 0x7f81e95d8fdc 75: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object, Object, Object) -> Object
fifo write: @1699477102129992229 0x7f81e208ab14 143: com.mojang.brigadier.arguments.IntegerArgumentType::<init>(int, int) -> void
fifo write: @1699477102130056840 0x7f81e208af4a 254: com.mojang.brigadier.arguments.IntegerArgumentType::integer(int, int) -> com.mojang.brigadier.arguments.IntegerArgumentType
fifo write: @1699477102130112960 0x7f81e208b3f7 428: com.mojang.brigadier.arguments.IntegerArgumentType::integer(int) -> com.mojang.brigadier.arguments.IntegerArgumentType
fifo write: @1699477102130142581 0x7f81e208ba14 137: ej::<init>() -> void
fifo write: @1699477102130209081 0x7f81e208bdf7 526: com.mojang.brigadier.arguments.IntegerArgumentType::integer() -> com.mojang.brigadier.arguments.IntegerArgumentType
fifo write: @1699477102130241712 0x7f81e208c4c0 247: ej::a() -> ej
fifo write: @1699477102130290563 0x7f81e95d9353 548: java.util.LinkedHashMap$LinkedValueIterator::next() -> Object
fifo write: @1699477102130584186 0x7f81e95d9a52 397: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, Object, Object, Object) -> Object
fifo write: @1699477102131892873 0x7f81e8bec900 440: I2C/C2I adapters(0x7eb7e)
fifo write: @1699477102132521631 0x7f81e95da14b 2620: java.lang.invoke.MemberName::hashCode() -> int
fifo write: @1699477102141972413 0x7f81e95dba47 344: StringLatin1::indexOf(byte[], int, int) -> int
fifo write: @1699477102143068808 0x7f81e95dbf75 226: java.lang.invoke.MethodHandle::setVarargs(java.lang.invoke.MemberName) -> java.lang.invoke.MethodHandle
fifo write: @1699477102146291639 0x7f81e8bec600 496: I2C/C2I adapters(0xbbbb6aab)
fifo write: @1699477102147815018 0x7f81e95dc539 1343: String::newStringUTF8NoRepl(byte[], int, int) -> String
fifo write: @1699477102149521700 0x7f81e95dd244 5065: java.lang.invoke.DirectMethodHandle::preparedLambdaForm(java.lang.invoke.MemberName, boolean) -> java.lang.invoke.LambdaForm
fifo write: @1699477102151425795 0x7f81e95e0201 3326: com.mojang.brigadier.tree.CommandNode::<init>(com.mojang.brigadier.Command, java.util.function.Predicate, com.mojang.brigadier.tree.CommandNode, com.mojang.brigadier.RedirectModifier, boolean) -> void
fifo write: @1699477102151877170 0x7f81e8bec300 480: I2C/C2I adapters(0xbabbebab)
fifo write: @1699477102153116266 0x7f81e208cc14 337: ty::<init>(tm, java.util.List, uh) -> void
fifo write: @1699477102153175867 0x7f81e208d291 1144: ty::a(tm) -> ty
fifo write: @1699477102156048164 0x7f81e8bec000 528: I2C/C2I adapters(0xb7ebb7e7e7e7eaba)
fifo write: @1699477102156063924 0x7f81e8bebd00 472: I2C/C2I adapters(0xbb66aab)
fifo write: @1699477102156078945 0x7f81e8beba00 448: I2C/C2I adapters(0xabb7e)
fifo write: @1699477102158399775 0x7f81e208dd14 428: uv::<init>(String, String, Object[]) -> void
fifo write: @1699477102159649861 0x7f81e95e1a99 7103: com.mojang.brigadier.tree.CommandNode::addChild(com.mojang.brigadier.tree.CommandNode) -> void
fifo write: @1699477102161940470 0x7f81e8beb700 512: I2C/C2I adapters(0xbbb7e7e7eb66b)
fifo write: @1699477102164564694 0x7f81e95e6f50 187: jdk.internal.org.objectweb.asm.MethodVisitor::visitMethodInsn(int, String, String, String, boolean) -> void
fifo write: @1699477102165087361 0x7f81e8beb400 432: I2C/C2I adapters(0x7ebe)
fifo write: @1699477102165104841 0x7f81e8beb100 440: I2C/C2I adapters(0xb7ebe)
fifo write: @1699477102171341512 0x7f81e208e461 3175: jdk.internal.reflect.Reflection::filter(java.lang.reflect.Member[], java.util.Set) -> java.lang.reflect.Member[]
fifo write: @1699477102171410393 0x7f81e208fb34 602: java.lang.reflect.Proxy::<init>(java.lang.reflect.InvocationHandler) -> void
fifo write: @1699477102171504324 0x7f81e2090246 858: java.lang.reflect.Proxy::newProxyInstance(ClassLoader, Class[], java.lang.reflect.InvocationHandler) -> Object
fifo write: @1699477102171559055 0x7f81e2090b74 435: java.util.Objects::equals(Object, Object) -> boolean
fifo write: @1699477102171688976 0x7f81e20911bc 2806: java.lang.reflect.Proxy::newProxyInstance(Class, java.lang.reflect.Constructor, java.lang.reflect.InvocationHandler) -> Object
fifo write: @1699477102171738237 0x7f81e20926f4 107: jdk.internal.org.objectweb.asm.SymbolTable::hash(int, String, int) -> int
fifo write: @1699477102172037411 0x7f81e2092c5f 5522: java.lang.reflect.Proxy::getProxyConstructor(Class, ClassLoader, Class[]) -> java.lang.reflect.Constructor
fifo write: @1699477102172125812 0x7f81e2094e7c 2214: sun.reflect.annotation.AnnotationInvocationHandler::<init>(Class, java.util.Map) -> void
fifo write: @1699477102172188303 0x7f81e2096308 1156: jdk.internal.org.objectweb.asm.SymbolTable::addUninitializedType(String, int) -> int
fifo write: @1699477102172389915 0x7f81e2096f94 495: java.util.Collections$UnmodifiableCollection$1::<init>(java.util.Collections$UnmodifiableCollection) -> void
fifo write: @1699477102172447726 0x7f81e2097687 600: java.util.Collections$UnmodifiableCollection::iterator() -> java.util.Iterator
fifo write: @1699477102172935242 0x7f81e2097dd4 1626: jdk.internal.loader.AbstractClassLoaderValue$Sub::equals(Object) -> boolean
fifo write: @1699477102174067757 0x7f81e2098a74 375: Character::isJavaIdentifierPart(char) -> boolean
fifo write: @1699477102174320080 0x7f81e2099314 31: Long::hashCode() -> int
fifo write: @1699477102174568503 0x7f81e2099734 550: Throwable::<init>(String) -> void
fifo write: @1699477102175010289 0x7f81e95e73d6 105: java.io.DataInputStream::readUnsignedShort() -> int
fifo write: @1699477102175296283 0x7f81e95e77b3 356: jdk.internal.reflect.UTF8::utf8Length(String) -> int
fifo write: @1699477102175362514 0x7f81e95e7ed4 18: java.io.DataInputStream::readUTF() -> String
fifo write: @1699477102175611047 0x7f81e95e823f 316: java.io.ByteArrayInputStream::read() -> int
fifo write: @1699477102175736798 0x7f81e2099fc1 4680: jdk.jfr.internal.MetadataLoader$FieldElement::<init>(java.io.DataInputStream) -> void
fifo write: @1699477102176167464 0x7f81e95e8762 273: java.io.DataInputStream::readFully(byte[], int, int) -> void
fifo write: @1699477102176525009 0x7f81e95e8d4c 3: jdk.jfr.ValueDescriptor::isArray() -> boolean
fifo write: @1699477102176627650 0x7f81e209c094 240: java.util.Collections$UnmodifiableCollection::size() -> int
fifo write: @1699477102177135437 0x7f81e209c65f 4192: jdk.jfr.internal.Type::isValidJavaIdentifier(String) -> boolean
fifo write: @1699477102177270048 0x7f81e209e8b9 773: jdk.jfr.internal.Type::getFields() -> java.util.List
fifo write: @1699477102177326179 0x7f81e209f094 240: java.util.Collections$UnmodifiableList::get(int) -> Object
fifo write: @1699477102177386090 0x7f81e209f505 259: jdk.jfr.internal.PrivateAccess::getInstance() -> jdk.jfr.internal.PrivateAccess
fifo write: @1699477102177446391 0x7f81e209f994 468: jdk.jfr.AnnotationElement::checkType(Class) -> void
fifo write: @1699477102177511641 0x7f81e209ffd4 760: jdk.jfr.internal.Utils::unboxType(Class) -> Class
fifo write: @1699477102177595132 0x7f81e20a086a 106: jdk.jfr.FlightRecorderPermission$InternalAccess::newAnnotation(jdk.jfr.internal.Type, java.util.List, boolean) -> jdk.jfr.AnnotationElement
fifo write: @1699477102177684364 0x7f81e20a0cb4 667: jdk.jfr.internal.MetadataLoader::newAnnotation(jdk.jfr.internal.Type, Object) -> jdk.jfr.AnnotationElement
fifo write: @1699477102177731184 0x7f81e20a1494 314: CharacterDataLatin1::isJavaIdentifierStart(int) -> boolean
fifo write: @1699477102177818185 0x7f81e95e9055 1170: jdk.internal.reflect.UTF8::encode(String) -> byte[]
fifo write: @1699477102177893726 0x7f81e20a1a37 727: java.util.LinkedHashMap::keySet() -> java.util.Set
fifo write: @1699477102177942247 0x7f81e923a2cc 6: jdk.jfr.internal.Type::getName() -> String
fifo write: @1699477102178043238 0x7f81e20a2194 322: jdk.jfr.internal.AnnotationConstruct::<init>(java.util.List) -> void
fifo write: @1699477102178251561 0x7f81e20a284f 2716: Class::getMethod(String, Class[]) -> java.lang.reflect.Method
fifo write: @1699477102178884349 0x7f81e20a412b 9410: jdk.jfr.AnnotationElement::<init>(jdk.jfr.internal.Type, java.util.List, boolean) -> void
fifo write: @1699477102178943270 0x7f81e20a81b4 599: jdk.jfr.internal.Type::add(jdk.jfr.ValueDescriptor) -> void
fifo write: @1699477102179472637 0x7f81e20a88f6 118: jdk.jfr.FlightRecorderPermission$InternalAccess::newValueDescriptor(String, jdk.jfr.internal.Type, java.util.List, int, boolean, String) -> jdk.jfr.ValueDescriptor
fifo write: @1699477102179699110 0x7f81e20a8d9c 2234: jdk.jfr.internal.Type::getKnownType(String) -> jdk.jfr.internal.Type
fifo write: @1699477102179843091 0x7f81e95e9f76 2245: jdk.internal.reflect.ClassFileAssembler::emitConstantPoolUTF8(String) -> void
fifo write: @1699477102179948093 0x7f81e20a9ed2 2463: jdk.jfr.ValueDescriptor::<init>(jdk.jfr.internal.Type, String, java.util.List, int, boolean, String) -> void
fifo write: @1699477102180013494 0x7f81e9239b53 548: java.util.LinkedHashMap$LinkedKeyIterator::next() -> Object
fifo write: @1699477102180052684 0x7f81e95ebccc 3: jdk.jfr.internal.Type::getId() -> long
fifo write: @1699477102180281067 0x7f81e20ab174 690: jdk.jfr.internal.TypeLibrary::lambda$getInstance$4(jdk.jfr.internal.Type, jdk.jfr.internal.Type) -> int
fifo write: @1699477102180351998 0x7f81e20ab934 1283: jdk.jfr.internal.TypeLibrary$$Lambda$4811.0x00007f816087e618::compare(Object, Object) -> int
fifo write: @1699477102180672682 0x7f81e17f5a54 92: java.util.ArrayList::elementAt(Object[], int) -> Object
fifo write: @1699477102180870745 0x7f81e17f5614 224: java.util.ArrayDeque$$Lambda$4814.0x00007f816087ed30::accept(Object) -> void
fifo write: @1699477102180959696 0x7f81e95ebfcc 6: jdk.jfr.internal.AnnotationConstruct::getUnmodifiableAnnotationElements() -> java.util.List
fifo write: @1699477102181050917 0x7f81e95ec2cc 6: jdk.jfr.AnnotationElement::getType() -> jdk.jfr.internal.Type
fifo write: @1699477102181111288 0x7f81e17f4f8b 508: java.util.ImmutableCollections$AbstractImmutableList::iterator() -> java.util.Iterator
fifo write: @1699477102181166539 0x7f81e17f4a94 199: java.util.ImmutableCollections$ListItr::<init>(java.util.List, int) -> void
fifo write: @1699477102181225489 0x7f81e17f4614 185: java.util.ArrayDeque$$Lambda$4814.0x00007f816087ed30::<init>(java.util.ArrayDeque) -> void
fifo write: @1699477102181336301 0x7f81e17f41f4 91: jdk.jfr.internal.Type::getAnnotationElements() -> java.util.List
fifo write: @1699477102181389941 0x7f81e17f3c94 332: jdk.jfr.AnnotationElement::getAnnotationElements() -> java.util.List
fifo write: @1699477102181495863 0x7f81e17f31f7 1338: java.util.ArrayDeque::copyElements(java.util.Collection) -> void
fifo write: @1699477102181659145 0x7f81e17f13d7 4539: jdk.jfr.FlightRecorderPermission$InternalAccess::getType(Object) -> jdk.jfr.internal.Type
fifo write: @1699477102181794477 0x7f81e17f0b34 705: java.util.Collections$UnmodifiableList::<init>(java.util.List) -> void
fifo write: @1699477102181853177 0x7f81e17f0334 802: java.util.Collections$UnmodifiableRandomAccessList::<init>(java.util.List) -> void
fifo write: @1699477102181925868 0x7f81e20ac447 2663: java.util.ArrayDeque::addAll(java.util.Collection) -> boolean
fifo write: @1699477102182002839 0x7f81e20ad89f 2501: java.util.Collections::unmodifiableList(java.util.List) -> java.util.List
fifo write: @1699477102182051510 0x7f81e95ec5d2 189: java.util.ArrayDeque::poll() -> Object
fifo write: @1699477102182386434 0x7f81e95ecdd8 428: java.util.ArrayDeque::add(Object) -> boolean
fifo write: @1699477102182460105 0x7f81e20ae9f4 91: jdk.jfr.ValueDescriptor::getAnnotationElements() -> java.util.List
fifo write: @1699477102182577377 0x7f81e20aee7c 1684: java.util.ArrayDeque::grow(int) -> void
fifo write: @1699477102182658038 0x7f81e95ed458 424: java.util.ArrayDeque::addLast(Object) -> void
fifo write: @1699477102182803220 0x7f81e20aff12 6162: jdk.jfr.internal.TypeLibrary::visitAnnotations(java.util.Queue, java.util.List) -> void
fifo write: @1699477102182858800 0x7f81e20b2797 609: java.util.ArrayDeque::<init>(int) -> void
fifo write: @1699477102183029323 0x7f81e20b2f47 2292: java.util.ArrayDeque::<init>(java.util.Collection) -> void
fifo write: @1699477102183472058 0x7f81e95eda4c 6: jdk.jfr.internal.PlatformEventType::getAllSettings() -> java.util.List
fifo write: @1699477102183767612 0x7f81e95edd50 255: java.util.ImmutableCollections$ListItr::next() -> Object
fifo write: @1699477102184023505 0x7f81e95ee2d9 94: jdk.jfr.FlightRecorderPermission$InternalAccess::getType(Object) -> jdk.jfr.internal.Type
fifo write: @1699477102184067386 0x7f81e20b3f94 763: Long::equals(Object) -> boolean
fifo write: @1699477102184127057 0x7f81e20b4734 1032: jdk.jfr.internal.TypeLibrary$$Lambda$4812.0x00007f816087e8b0::test(Object) -> boolean
fifo write: @1699477102184184038 0x7f81e20b5094 691: jdk.jfr.internal.TypeLibrary::lambda$new$0(jdk.jfr.internal.Type) -> boolean
fifo write: @1699477102184316319 0x7f81e95ee9ea 326: java.util.ImmutableCollections$AbstractImmutableList::iterator() -> java.util.Iterator
fifo write: @1699477102184522322 0x7f81e95eefb0 12: Long::hashCode() -> int
fifo write: @1699477102184778985 0x7f81e95ef308 342: Iterable::forEach(java.util.function.Consumer) -> void
fifo write: @1699477102184845496 0x7f81e95ef9d9 102: Long::equals(Object) -> boolean
fifo write: @1699477102185066389 0x7f81e95efdb5 158: Long::valueOf(long) -> Long
fifo write: @1699477102185164470 0x7f81e20b5834 1498: java.util.LinkedHashMap::afterNodeAccess(java.util.HashMap$Node) -> void
fifo write: @1699477102185448404 0x7f81e95f01cf 445: java.util.ArrayDeque$$Lambda$4814.0x00007f816087ed30::accept(Object) -> void
fifo write: @1699477102185511995 0x7f81e95f08f7 274: jdk.jfr.internal.TypeLibrary$$Lambda$4812.0x00007f816087e8b0::test(Object) -> boolean
fifo write: @1699477102185946990 0x7f81e20b64f7 3453: sun.reflect.annotation.AnnotationParser$1::run() -> java.lang.annotation.Annotation
fifo write: @1699477102186160843 0x7f81e20b7db4 594: java.util.ImmutableCollections$SetN::contains(Object) -> boolean
fifo write: @1699477102186234414 0x7f81e20b84f9 2202: jdk.jfr.internal.Type::getKnownType(Class) -> jdk.jfr.internal.Type
fifo write: @1699477102186895743 0x7f81e20b9494 245: jdk.internal.reflect.ClassFileAssembler::getLength() -> short
fifo write: @1699477102187700503 0x7f81e20b9994 223: java.util.StringJoiner::toString() -> String
fifo write: @1699477102187834925 0x7f81e20b9fcb 2094: java.util.StringJoiner::<init>(CharSequence, CharSequence, CharSequence) -> void
fifo write: @1699477102187962286 0x7f81e20bb014 334: java.util.Collections$1::next() -> Object
fifo write: @1699477102188022807 0x7f81e20bb5c7 351: java.util.Collections::singletonIterator(Object) -> java.util.Iterator
fifo write: @1699477102188070508 0x7f81e20bbb14 244: java.util.Collections$1::<init>(Object) -> void
fifo write: @1699477102188284140 0x7f81e20bbf94 517: jdk.jfr.internal.Type::getTypeId(Class) -> long
fifo write: @1699477102188360601 0x7f81e20bc679 2140: java.lang.reflect.ProxyGenerator::typeNames(java.util.List) -> String[]
fifo write: @1699477102188400072 0x7f81e20bd5f4 226: jdk.jfr.AnnotationElement::getTypeId() -> long
fifo write: @1699477102188649295 0x7f81e95f139d 5075: java.io.DataInputStream::readUTF(java.io.DataInput) -> String
fifo write: @1699477102188813437 0x7f81e20bda74 226: jdk.jfr.AnnotationElement::getTypeName() -> String
fifo write: @1699477102189048820 0x7f81e95f403a 49: jdk.jfr.internal.PrivateAccess::getInstance() -> jdk.jfr.internal.PrivateAccess
fifo write: @1699477102189092361 0x7f81e95f434c 6: jdk.jfr.ValueDescriptor::getName() -> String
fifo write: @1699477102189179822 0x7f81e20bdf14 225: jdk.jfr.internal.AnnotationConstruct::setAnnotationElements(java.util.List) -> void
fifo write: @1699477102189229023 0x7f81e20be414 327: jdk.jfr.internal.Type::setAnnotations(java.util.List) -> void
fifo write: @1699477102189500706 0x7f81e20be994 93: jdk.jfr.internal.Type::getAnnotation(Class) -> Object
fifo write: @1699477102189902201 0x7f81e20beedc 4006: jdk.jfr.internal.AnnotationConstruct::getAnnotationElement(Class) -> jdk.jfr.AnnotationElement
fifo write: @1699477102190001642 0x7f81e20c0c41 2986: jdk.jfr.internal.EventControl::remove(jdk.jfr.internal.PlatformEventType, java.util.List, Class) -> void
fifo write: @1699477102190073503 0x7f81e20c22b4 974: jdk.jfr.EventType::getAnnotation(Class) -> java.lang.annotation.Annotation
fifo write: @1699477102190176215 0x7f81e20c2c7f 3455: jdk.jfr.internal.AnnotationConstruct::getAnnotation(Class) -> Object
fifo write: @1699477102190224255 0x7f81e95f4650 43: jdk.jfr.internal.Type::getAnnotationElements() -> java.util.List
fifo write: @1699477102190264746 0x7f81e95f494c 3: jdk.jfr.internal.PlatformEventType::hasPeriod() -> boolean
fifo write: @1699477102190341757 0x7f81e20c465e 1051: jdk.jfr.internal.Type::indexOf(String) -> int
fifo write: @1699477102190910114 0x7f81e20c4ff4 31: java.lang.invoke.MethodType::methodType(Class, Class[]) -> java.lang.invoke.MethodType
fifo write: @1699477102191764655 0x7f81e95f4c4c 5: jdk.jfr.internal.PlatformEventType::setHasDuration(boolean) -> void
fifo write: @1699477102191802175 0x7f81e95f4f4c 5: jdk.jfr.internal.PlatformEventType::setHasThrottle(boolean) -> void
fifo write: @1699477102191844396 0x7f81e95f524c 5: jdk.jfr.internal.PlatformEventType::setHasStackTrace(boolean) -> void
fifo write: @1699477102191891956 0x7f81e95f5550 79: java.util.ImmutableCollections$List12::get(int) -> Object
fifo write: @1699477102191928697 0x7f81e95f58cc 5: jdk.jfr.internal.PlatformEventType::setHasCutoff(boolean) -> void
fifo write: @1699477102191965147 0x7f81e95f5bcc 5: jdk.jfr.internal.PlatformEventType::setHasPeriod(boolean) -> void
fifo write: @1699477102192006468 0x7f81e95f5ecc 3: jdk.jfr.internal.PlatformEventType::hasDuration() -> boolean
fifo write: @1699477102192041988 0x7f81e95f61cc 3: jdk.jfr.internal.PlatformEventType::hasCutoff() -> boolean
fifo write: @1699477102192077139 0x7f81e95f64cc 3: jdk.jfr.internal.PlatformEventType::hasStackTrace() -> boolean
fifo write: @1699477102192111639 0x7f81e95f67cc 3: jdk.jfr.internal.PlatformEventType::hasThrottle() -> boolean
fifo write: @1699477102192159500 0x7f81e20c53b4 679: jdk.jfr.AnnotationElement::hasValue(String) -> boolean
fifo write: @1699477102192214870 0x7f81e20c5b5e 984: java.util.ArrayList::remove(Object) -> boolean
fifo write: @1699477102192557945 0x7f81e20c65ee 110: jdk.jfr.FlightRecorderPermission$InternalAccess::newSettingDescriptor(jdk.jfr.internal.Type, String, String, java.util.List) -> jdk.jfr.SettingDescriptor
fifo write: @1699477102192649286 0x7f81e20c6a34 599: jdk.jfr.internal.PlatformEventType::add(jdk.jfr.SettingDescriptor) -> void
fifo write: @1699477102192809248 0x7f81e20c7134 665: jdk.jfr.internal.settings.JDKSettingControl::<init>() -> void
fifo write: @1699477102192939640 0x7f81e20c7834 568: jdk.jfr.SettingControl::<init>() -> void
fifo write: @1699477102193054661 0x7f81e20c7f57 3331: java.lang.reflect.Method::getTypeParameters() -> java.lang.reflect.TypeVariable[]
fifo write: @1699477102193150242 0x7f81e20c96ee 2444: jdk.jfr.SettingDescriptor::<init>(jdk.jfr.internal.Type, String, String, java.util.List) -> void
fifo write: @1699477102193290464 0x7f81e20caadf 4592: jdk.jfr.internal.AnnotationConstruct$AnnotationInvokationHandler::invoke(Object, java.lang.reflect.Method, Object[]) -> Object
fifo write: @1699477102193391136 0x7f81e20cccc1 4043: jdk.jfr.AnnotationElement::getValue(String) -> Object
fifo write: @1699477102193431596 0x7f81e95f6acc 3: jdk.jfr.internal.PlatformEventType::isJVM() -> boolean
fifo write: @1699477102193481067 0x7f81e20ceaf4 63: WeakPairMap$Pair::hashCode(Object, Object) -> int
fifo write: @1699477102193534127 0x7f81e20cef14 529: java.util.Collections$SingletonList::iterator() -> java.util.Iterator
fifo write: @1699477102193580628 0x7f81e20cf594 488: java.lang.reflect.Method::getExceptionTypes() -> Class[]
fifo write: @1699477102193649169 0x7f81e20cfb83 2042: jdk.jfr.internal.Control::<init>(jdk.jfr.SettingControl, String) -> void
fifo write: @1699477102194706123 0x7f81e20d0d94 85: java.lang.reflect.ReflectAccess::copyField(java.lang.reflect.Field) -> java.lang.reflect.Field
fifo write: @1699477102194785104 0x7f81e20d1194 275: jdk.internal.reflect.ReflectionFactory::copyField(java.lang.reflect.Field) -> java.lang.reflect.Field
fifo write: @1699477102194862475 0x7f81e20d1714 498: java.lang.reflect.Field::<init>(Class, String, Class, int, boolean, int, String, byte[]) -> void
fifo write: @1699477102194927105 0x7f81e20d1ebc 859: java.lang.reflect.Field::copy() -> java.lang.reflect.Field
fifo write: @1699477102195007916 0x7f81e95f755b 692: jdk.jfr.internal.Type::getKnownType(Class) -> jdk.jfr.internal.Type
fifo write: @1699477102195069327 0x7f81e20d2794 225: WeakPairMap$Pair$Lookup::hashCode() -> int
fifo write: @1699477102195195219 0x7f81e20d2cd9 995: java.lang.reflect.Field::declaredAnnotations() -> java.util.Map
fifo write: @1699477102195474482 0x7f81e20d3914 2719: java.security.AccessControlContext::combine(java.security.ProtectionDomain[], java.security.ProtectionDomain[]) -> java.security.ProtectionDomain[]
fifo write: @1699477102195966659 0x7f81e95f8078 696: jdk.internal.org.objectweb.asm.MethodWriter::visitTypeInsn(int, String) -> void
fifo write: @1699477102197473698 0x7f81e8bdfd80 456: I2C/C2I adapters(0xbbebebbe)
fifo write: @1699477102197488438 0x7f81e8bdfa80 456: I2C/C2I adapters(0xbbebebb)
fifo write: @1699477102197503129 0x7f81e8bdf780 520: I2C/C2I adapters(0xbbebebbabebea)
fifo write: @1699477102197517529 0x7f81e8bdf480 464: I2C/C2I adapters(0xbbebebbea)
fifo write: @1699477102197532419 0x7f81e8bdf180 456: I2C/C2I adapters(0xbbebeba)
fifo write: @1699477102197546579 0x7f81e8bdee80 480: I2C/C2I adapters(0xbbebebbabe)
fifo write: @1699477102197560769 0x7f81e8bdeb80 520: I2C/C2I adapters(0xbbebeaaaabb)
fifo write: @1699477102197665741 0x7f81e95f8c7c 1569: StringBuilder::append(String) -> StringBuilder
fifo write: @1699477102198007915 0x7f81e95f9e35 3823: java.util.ArrayDeque::addAll(java.util.Collection) -> boolean
fifo write: @1699477102198306999 0x7f81e20d4df4 173: WeakPairMap$Pair$Weak::first() -> Object
fifo write: @1699477102198571042 0x7f81e20d51f4 240: WeakPairMap$Pair$Weak::second() -> Object
fifo write: @1699477102199294412 0x7f81e95fc383 8270: java.util.TimSort::mergeHi(int, int, int, int) -> void
fifo write: @1699477102199573355 0x7f81e20d5699 699: WeakPairMap$Pair::equals(Object, Object, WeakPairMap$Pair) -> boolean
fifo write: @1699477102199698907 0x7f81e8be2880 488: I2C/C2I adapters(0xbbebebaba)
fifo write: @1699477102199955230 0x7f81e20d5ea6 2888: java.lang.reflect.ProxyGenerator$ProxyMethod::codeFieldInitialization(jdk.internal.org.objectweb.asm.MethodVisitor, String) -> void
fifo write: @1699477102200063422 0x7f81e20d75d4 1509: WeakPairMap$Pair$Lookup::equals(Object) -> boolean
fifo write: @1699477102200267314 0x7f81e20d830f 5301: java.lang.reflect.ProxyGenerator::computeUniqueCatchList(Class[]) -> java.util.List
fifo write: @1699477102200328635 0x7f81e20daa20 1577: java.lang.reflect.Constructor::setAccessible(boolean) -> void
fifo write: @1699477102200376746 0x7f81e20db794 101: jdk.internal.org.objectweb.asm.Type::getInternalName() -> String
fifo write: @1699477102200538298 0x7f81e20dbeff 9893: java.lang.reflect.ProxyGenerator::checkReturnTypes(java.util.List) -> void
fifo write: @1699477102200591849 0x7f81e20e0194 622: java.lang.reflect.AccessibleObject::checkPermission() -> void
fifo write: @1699477102200756441 0x7f81e20e0caf 11860: java.lang.reflect.ProxyGenerator$ProxyMethod::generateMethod(jdk.internal.org.objectweb.asm.ClassWriter, String) -> void
fifo write: @1699477102200896722 0x7f81e9600384 1241: jdk.internal.org.objectweb.asm.Frame::merge(jdk.internal.org.objectweb.asm.SymbolTable, int, int[], int) -> boolean
fifo write: @1699477102200989944 0x7f81e20e5a9f 2482: Class::copyMethods(java.lang.reflect.Method[]) -> java.lang.reflect.Method[]
fifo write: @1699477102201062905 0x7f81e20e6ec0 3236: java.util.HashMap::putMapEntries(java.util.Map, boolean) -> void
fifo write: @1699477102201312388 0x7f81e8be2580 504: I2C/C2I adapters(0xbbebebbeabea)
fifo write: @1699477102201382789 0x7f81e20e86f9 1417: WeakPairMap::expungeStaleAssociations() -> void
fifo write: @1699477102201766804 0x7f81e20e961e 6157: sun.reflect.annotation.AnnotationParser::parseConst(int, java.nio.ByteBuffer, jdk.internal.reflect.ConstantPool) -> Object
fifo write: @1699477102201886575 0x7f81e20ec35e 828: java.lang.reflect.Method::invoke(Object, Object[]) -> Object
fifo write: @1699477102202565214 0x7f81e20ecc74 159: java.util.concurrent.CopyOnWriteArrayList$COWIterator::hasNext() -> boolean
fifo write: @1699477102204908754 0x7f81e9030a55 4712: java.lang.invoke.MethodType::toMethodDescriptorString() -> String
fifo write: @1699477102205948818 0x7f81e14e90eb 535: tl::c(String) -> ty
fifo write: @1699477102208588132 0x7f81e92e560c 1511: jdk.internal.org.objectweb.asm.ClassWriter::<init>(jdk.internal.org.objectweb.asm.ClassReader, int) -> void
fifo write: @1699477102214165344 0x7f81e93f79a0 1399: jdk.internal.org.objectweb.asm.ClassWriter::visit(int, int, String, String, String, String[]) -> void
fifo write: @1699477102214937244 0x7f81e913e8f7 2013: java.lang.invoke.MethodType::dropParameterTypes(int, int) -> java.lang.invoke.MethodType
fifo write: @1699477102248509876 0x7f81e914e72f 13496: sun.net.util.URLUtil::urlNoFragString(java.net.URL) -> String
fifo write: @1699477102258355623 0x7f81e14c0d14 137: java.util.concurrent.ForkJoinTask::<init>() -> void
fifo write: @1699477102260776085 0x7f81e1575714 259: java.lang.invoke.MethodType::equals(java.lang.invoke.MethodType) -> boolean
fifo write: @1699477102261418783 0x7f81e1529794 2665: java.lang.invoke.MethodType::equals(Object) -> boolean
fifo write: @1699477102261690267 0x7f81e1494514 370: java.lang.invoke.MethodTypeForm::findForm(java.lang.invoke.MethodType) -> java.lang.invoke.MethodTypeForm
fifo write: @1699477102261741157 0x7f81e140c314 269: java.util.TreeMap::<init>() -> void
fifo write: @1699477102261851519 0x7f81e142abdb 1662: java.lang.invoke.VarHandleReferences$Array::getAcquire(java.lang.invoke.VarHandle, Object, int) -> Object
fifo write: @1699477102261898839 0x7f81e144b8d4 83: ThreadLocal$ThreadLocalMap::nextIndex(int, int) -> int
fifo write: @1699477102262053291 0x7f81e1477494 481: java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node) -> void
fifo write: @1699477102262101682 0x7f81e150f997 440: java.util.ArrayDeque::<init>() -> void
fifo write: @1699477102262302944 0x7f81e1c214d7 2762: java.util.concurrent.ForkJoinPool$WorkQueue::getSlot(java.util.concurrent.ForkJoinTask[], int) -> java.util.concurrent.ForkJoinTask
fifo write: @1699477102262577258 0x7f81e9167543 600: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite::set(java.lang.invoke.VarHandle, Object, Object) -> void
fifo write: @1699477102262644249 0x7f81e147f014 92: java.util.HashMap$ValueIterator::next() -> Object
fifo write: @1699477102262815491 0x7f81e920d9e8 559: java.lang.invoke.MethodHandles$Lookup$ClassDefiner::<init>(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MethodHandles$Lookup$ClassFile, int) -> void
fifo write: @1699477102262948633 0x7f81e14bbd6e 6598: java.util.concurrent.ConcurrentHashMap::putVal(Object, Object, boolean) -> Object
fifo write: @1699477102262974613 0x7f81e8b9ec70 168: itable stub
fifo write: @1699477102262997923 0x7f81e8b9ed28 168: itable stub
fifo write: @1699477102263372338 0x7f81e903037a 214: ThreadLocal::get() -> Object
fifo write: @1699477102263488870 0x7f81e14e3999 640: ank$$Lambda$4882.0x00007f8160923d88::accept(Object, Object) -> void
fifo write: @1699477102263552341 0x7f81e1531c94 474: java.util.stream.AbstractPipeline::close() -> void
fifo write: @1699477102263574711 0x7f81e8b9ede0 168: itable stub
fifo write: @1699477102263663222 0x7f81e943133f 671: Throwable::fillInStackTrace() -> Throwable
fifo write: @1699477102263755223 0x7f81e15e0bc7 2153: jdk.nio.zipfs.ZipCoder$UTF8::getBytes(String) -> byte[]
fifo write: @1699477102263821044 0x7f81e9215de3 576: aew::compareTo(Object) -> int
fifo write: @1699477102263981216 0x7f81e151060f 6090: amj::a(java.nio.file.Path, String, amh$a, java.nio.file.Path) -> void
fifo write: @1699477102264053117 0x7f81e141f914 324: ank$e::<init>(amh, anl) -> void
fifo write: @1699477102264111828 0x7f81e146ee6b 359: ank$$Lambda$4890.0x00007f81609257f0::apply(Object) -> Object
fifo write: @1699477102264215979 0x7f81e16cdfd7 1092: aep$$Lambda$4880.0x00007f81609238f8::test(Object) -> boolean
fifo write: @1699477102264346111 0x7f81e156ba94 414: ank$b::<init>(aew, aew, java.util.List, java.util.Map) -> void
fifo write: @1699477102264437142 0x7f81e14811d4 754: aep::c(aew) -> boolean
fifo write: @1699477102264562774 0x7f81e16b2bbe 964: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::get(Object) -> Object
fifo write: @1699477102264679875 0x7f81e910639b 672: java.lang.invoke.MethodHandles$Lookup$ClassOption::optionsToFlag(java.util.Set) -> int
fifo write: @1699477102264855987 0x7f81e1a9d157 4003: ank::a(java.util.function.Predicate, java.util.Map, amh, aew, anl) -> void
fifo write: @1699477102264906988 0x7f81e8ff794c 3: arf$f::b() -> boolean
fifo write: @1699477102265014689 0x7f81e147805e 1339: java.util.HashMap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477102265068490 0x7f81e8ffab4c 6: arf$f::a() -> aew
fifo write: @1699477102265127781 0x7f81e1498994 324: arf$$Lambda$208.0x00007f8160194a88::apply(Object) -> Object
fifo write: @1699477102265505056 0x7f81e188d774 1597: aqf$$Lambda$4927.0x00007f816092e000::apply(Object) -> Object
fifo write: @1699477102265720619 0x7f81e1538fb4 1115: aqf::a(com.mojang.datafixers.util.Either) -> aqf
fifo write: @1699477102265884411 0x7f81e15a6367 5186: ank$b::<init>(aew) -> void
fifo write: @1699477102265943601 0x7f81e1424914 460: sun.nio.ch.NativeThreadSet::remove(int) -> void
fifo write: @1699477102266024642 0x7f81e1ad338f 2884: ThreadLocal$ThreadLocalMap::set(ThreadLocal, Object) -> void
fifo write: @1699477102266129294 0x7f81e1465859 1273: sun.nio.ch.NativeThreadSet::add() -> int
fifo write: @1699477102266214235 0x7f81e14562b4 793: aqf$$Lambda$4944.0x00007f816092d6c0::apply(Object) -> Object
fifo write: @1699477102266387747 0x7f81e9596ca3 1602: StringBuilder::append(CharSequence) -> Appendable
fifo write: @1699477102266453718 0x7f81e159ea94 285: arf$f::<init>(aew, boolean) -> void
fifo write: @1699477102266705171 0x7f81e1493f94 267: aqf::<init>(arf$f, boolean) -> void
fifo write: @1699477102266856183 0x7f81e15b3394 348: aqi$$Lambda$4966.0x00007f8160931ac8::accept(Object) -> void
fifo write: @1699477102266923804 0x7f81e158ed47 372: aqf::a(arf$f) -> aqf
fifo write: @1699477102267050636 0x7f81e14efa14 324: aqi$a::<init>(aqf, String) -> void
fifo write: @1699477102267144697 0x7f81e158858e 284: com.mojang.serialization.MapDecoder$$Lambda$3718.0x00007f81607ae588::apply(Object) -> Object
fifo write: @1699477102267224448 0x7f81e9147de3 488: jdk.nio.zipfs.ZipPath::compareTo(java.nio.file.Path) -> int
fifo write: @1699477102267280659 0x7f81e1660447 386: arf::a(aew) -> arf$f
fifo write: @1699477102267354350 0x7f81e14ee5b4 807: arf$$Lambda$4937.0x00007f816092f678::apply(Object) -> Object
fifo write: @1699477102267510062 0x7f81e1555637 839: java.util.stream.MatchOps$$Lambda$715.0x00007f81601dec50::get() -> Object
fifo write: @1699477102267727364 0x7f81e91340dc 18: java.lang.ref.Reference::refersTo(Object) -> boolean
fifo write: @1699477102267794705 0x7f81e177bf97 365: aqf::a(java.util.function.Consumer) -> void
fifo write: @1699477102267868266 0x7f81e15c571d 813: aqi::a(java.util.List, String, aqf) -> void
fifo write: @1699477102267970458 0x7f81e94b80f3 1757: jdk.nio.zipfs.ZipPath::getFileName() -> jdk.nio.zipfs.ZipPath
fifo write: @1699477102268070679 0x7f81e14d8101 1279: java.util.ArrayList::forEach(java.util.function.Consumer) -> void
fifo write: @1699477102268198171 0x7f81e14973a1 2155: java.lang.invoke.MethodType$ConcurrentWeakInternSet::get(Object) -> Object
fifo write: @1699477102268287542 0x7f81e9598672 1065: jdk.nio.zipfs.ZipPath::equalsNameAt(jdk.nio.zipfs.ZipPath, int) -> boolean
fifo write: @1699477102268457914 0x7f81e91c12cc 6: com.mojang.serialization.Dynamic::getValue() -> Object
fifo write: @1699477102269028071 0x7f81e91f63df 80: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object, Object, Object, Object) -> Object
fifo write: @1699477102269140923 0x7f81e15e4434 837: aqi$b$$Lambda$4971.0x00007f8160932c60::accept(Object) -> void
fifo write: @1699477102269196323 0x7f81e1732474 491: aqi$b::b(java.util.function.Consumer, aqi$a) -> void
fifo write: @1699477102269255434 0x7f81e92c85cc 6: com.mojang.serialization.DynamicLike::getOps() -> com.mojang.serialization.DynamicOps
fifo write: @1699477102269303375 0x7f81e17b4cb4 424: com.google.common.collect.Maps::capacity(int) -> int
fifo write: @1699477102269366826 0x7f81e1785897 365: aqf::b(java.util.function.Consumer) -> void
fifo write: @1699477102269442377 0x7f81e165dcb4 837: aqi$b$$Lambda$4985.0x00007f8160935440::accept(Object) -> void
fifo write: @1699477102269462167 0x7f81e8be0780 696: I2C/C2I adapters(0xbbbbbabbbbabbbbb)
fifo write: @1699477102269473797 0x7f81e8be0480 544: I2C/C2I adapters(0xbbbbbabbbb)
fifo write: @1699477102269520298 0x7f81e1733674 491: aqi$b::a(java.util.function.Consumer, aqi$a) -> void
fifo write: @1699477102269543798 0x7f81e9422e4c 3: aqg::b() -> boolean
fifo write: @1699477102269607009 0x7f81e153a83f 2102: java.util.concurrent.ConcurrentHashMap::addCount(long, int) -> void
fifo write: @1699477102269794071 0x7f81e910ef57 416: java.lang.invoke.LambdaForm$DMH.0x00007f8160100c00::newInvokeSpecial(Object, Object, Object, Object, Object) -> Object
fifo write: @1699477102269842202 0x7f81e900d04c 6: aqi$a::a() -> aqf
fifo write: @1699477102269925053 0x7f81e92881cc 6: aqg::a() -> java.util.List
fifo write: @1699477102269988444 0x7f81e1777bb9 874: com.google.common.collect.ImmutableSet$Builder::copyIfNecessary() -> void
fifo write: @1699477102270043094 0x7f81e15b5bf4 242: v::d(String) -> boolean
fifo write: @1699477102270150266 0x7f81e1479c21 1936: com.google.common.collect.ImmutableSet$Builder::add(Object) -> com.google.common.collect.ImmutableSet$Builder
fifo write: @1699477102270223247 0x7f81e155c294 2077: ThreadLocal::setInitialValue() -> Object
fifo write: @1699477102270301698 0x7f81e151e514 185: aqi$$Lambda$5002.0x00007f8160938000::<init>(com.google.common.collect.ImmutableSet$Builder) -> void
fifo write: @1699477102270378669 0x7f81e1ac93bf 2088: aqi$$Lambda$5002.0x00007f8160938000::accept(Object) -> void
fifo write: @1699477102270448670 0x7f81e14679d9 1071: ThreadLocal$ThreadLocalMap::cleanSomeSlots(int, int) -> boolean
fifo write: @1699477102270533301 0x7f81e18cb280 3466: java.lang.invoke.LambdaForm$MH.0x00007f816043d800::invoke(Object, Object, int) -> Object
fifo write: @1699477102270640532 0x7f81e17db7b9 2414: aqf::a(aqf$a, java.util.function.Consumer) -> boolean
fifo write: @1699477102270734333 0x7f81e18c35e4 384: java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter::initialValue() -> java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter
fifo write: @1699477102270795344 0x7f81e17d4eb4 707: aqi$1::a(aew) -> Object
fifo write: @1699477102270883945 0x7f81e1bfde77 1788: aqj$$Lambda$4876.0x00007f8160922e10::apply(Object) -> Object
fifo write: @1699477102270991187 0x7f81e1655afe 1273: ThreadLocal$ThreadLocalMap::getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry) -> ThreadLocal$ThreadLocalMap$Entry
fifo write: @1699477102271078798 0x7f81e9123ef4 280: com.mojang.serialization.codecs.PrimitiveCodec$$Lambda$3722.0x00007f81607b4000::apply(Object) -> Object
fifo write: @1699477102271328351 0x7f81e1c162bf 11151: arf::f(String) -> com.mojang.serialization.DataResult
fifo write: @1699477102271417982 0x7f81e16b66b7 1434: aqj::a(hq, aev, aew) -> java.util.Optional
fifo write: @1699477102271505923 0x7f81e93474ac 30: com.google.common.collect.AbstractMapBasedMultimap::access$000(com.google.common.collect.AbstractMapBasedMultimap) -> java.util.Map
fifo write: @1699477102271612205 0x7f81e92a8e6b 725: aew::b(String) -> com.mojang.serialization.DataResult
fifo write: @1699477102271674205 0x7f81e1893214 277: java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter::<init>() -> void
fifo write: @1699477102271851418 0x7f81e18c7997 558: java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter::initialValue() -> Object
fifo write: @1699477102271971079 0x7f81e16c70fe 1198: ThreadLocal$ThreadLocalMap::remove(ThreadLocal) -> void
fifo write: @1699477102272049990 0x7f81e19936b4 3483: ThreadLocal$ThreadLocalMap::expungeStaleEntry(int) -> int
fifo write: @1699477102272141131 0x7f81e1abcb14 440: com.mojang.serialization.Decoder::decode(com.mojang.serialization.Dynamic) -> com.mojang.serialization.DataResult
fifo write: @1699477102272218722 0x7f81e18cd814 354: com.mojang.serialization.Decoder$$Lambda$3734.0x00007f81607b5d80::apply(Object) -> Object
fifo write: @1699477102272264253 0x7f81e1532d94 185: aqi$$Lambda$4957.0x00007f8160930d78::<init>(org.slf4j.Logger) -> void
fifo write: @1699477102272310774 0x7f81e1547d94 240: anr::b() -> String
fifo write: @1699477102272395385 0x7f81e17baa8a 959: aqg$$Lambda$4934.0x00007f816092efc8::apply(Object, Object) -> Object
fifo write: @1699477102272470816 0x7f81e15bbfde 1150: com.google.common.collect.ImmutableList::forEach(java.util.function.Consumer) -> void
fifo write: @1699477102272527726 0x7f81e1e12814 230: aqi$$Lambda$4966.0x00007f8160931ac8::<init>(java.util.List, String) -> void
fifo write: @1699477102272579607 0x7f81e17b9194 285: aqg::<init>(java.util.List, boolean) -> void
fifo write: @1699477102272626288 0x7f81e1786fb7 918: aqi$$Lambda$4904.0x00007f8160928770::apply(Object) -> Object
fifo write: @1699477102272664268 0x7f81e19f0664 497: aqi::a(aew) -> java.util.List
fifo write: @1699477102272710109 0x7f81e9569f23 521: java.util.concurrent.locks.AbstractQueuedSynchronizer::release(int) -> boolean
fifo write: @1699477102272789680 0x7f81e1c016d7 2590: com.mojang.serialization.Decoder::parse(com.mojang.serialization.Dynamic) -> com.mojang.serialization.DataResult
fifo write: @1699477102273715742 0x7f81e153554f 6259: jdk.nio.zipfs.ZipFileSystem::iteratorOf(jdk.nio.zipfs.ZipPath, java.nio.file.DirectoryStream$Filter) -> java.util.Iterator
fifo write: @1699477102273888424 0x7f81e942d5be 1533: com.mojang.serialization.codecs.FieldDecoder::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102274257159 0x7f81e91e5060 2325: com.mojang.serialization.codecs.PrimitiveCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102274435161 0x7f81e94ed956 85: Math::floorMod(long, long) -> long
fifo write: @1699477102274536572 0x7f81e1a84f94 384: java.util.HashSet::isEmpty() -> boolean
fifo write: @1699477102274789616 0x7f81e1476079 1674: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection::refreshIfEmpty() -> void
fifo write: @1699477102274832606 0x7f81e9116253 92: Math::floorDiv(long, long) -> long
fifo write: @1699477102275278092 0x7f81e1dc4e17 484: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::<init>(int) -> void
fifo write: @1699477102275377233 0x7f81e1593899 908: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::review() -> com.google.common.collect.ImmutableSet$SetBuilderImpl
fifo write: @1699477102275429094 0x7f81e2030c14 219: java.util.HashMap$KeySpliterator::characteristics() -> int
fifo write: @1699477102275504235 0x7f81e90871f0 1013: StringBuilder::toString() -> String
fifo write: @1699477102275557436 0x7f81e14eb7d7 635: java.util.HashSet::<init>(int) -> void
fifo write: @1699477102275629336 0x7f81e15d8d94 167: com.google.common.collect.AbstractMapBasedMultimap::createCollection(Object) -> java.util.Collection
fifo write: @1699477102275691597 0x7f81e15c1726 789: com.google.common.collect.Sets::newHashSetWithExpectedSize(int) -> java.util.HashSet
fifo write: @1699477102275786558 0x7f81e1a384a1 4402: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::fullTryAcquireShared(Thread) -> int
fifo write: @1699477102275910380 0x7f81e1bff21f 3396: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::build() -> com.google.common.collect.ImmutableSet
fifo write: @1699477102275977081 0x7f81e909693a 381: java.time.LocalTime::ofNanoOfDay(long) -> java.time.LocalTime
fifo write: @1699477102276054392 0x7f81e162ec14 167: com.google.common.collect.AbstractSetMultimap::get(Object) -> java.util.Collection
fifo write: @1699477102276138613 0x7f81e15b6997 1165: com.google.common.collect.HashMultimap::createCollection() -> java.util.Collection
fifo write: @1699477102276203394 0x7f81e17ed1f7 1068: com.google.common.collect.HashMultimap::createCollection() -> java.util.Set
fifo write: @1699477102276271195 0x7f81e1da9b5d 1684: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::rebuildHashTable(int, Object[], int) -> Object[]
fifo write: @1699477102276345626 0x7f81e187705a 976: com.google.common.collect.Platform::newHashSetWithExpectedSize(int) -> java.util.Set
fifo write: @1699477102276410997 0x7f81e18a83b4 977: com.google.common.collect.AbstractMapBasedMultimap::get(Object) -> java.util.Collection
fifo write: @1699477102276460737 0x7f81e18c5f54 1341: com.google.common.collect.AbstractSetMultimap::get(Object) -> java.util.Set
fifo write: @1699477102276604369 0x7f81e1a0a6b4 942: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection::<init>(com.google.common.collect.AbstractMapBasedMultimap, Object, java.util.Collection, com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> void
fifo write: @1699477102276694580 0x7f81e1dcc49f 2032: com.google.common.collect.HashMultimap::get(Object) -> java.util.Set
fifo write: @1699477102276790351 0x7f81e16fac16 85: com.google.common.collect.AbstractMapBasedMultimap$WrappedSet::<init>(com.google.common.collect.AbstractMapBasedMultimap, Object, java.util.Set) -> void
fifo write: @1699477102276855452 0x7f81e147e534 536: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator::validateIterator() -> void
fifo write: @1699477102276921103 0x7f81e1ac14f5 397: com.google.common.collect.AbstractSetMultimap::wrapCollection(Object, java.util.Collection) -> java.util.Collection
fifo write: @1699477102276989944 0x7f81e15c2459 833: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator::hasNext() -> boolean
fifo write: @1699477102277056405 0x7f81e1d4e114 605: aqi$$Lambda$4891.0x00007f8160925a30::accept(Object, Object) -> void
fifo write: @1699477102277254627 0x7f81e9263a8f 1937: java.lang.invoke.VarHandleGuards::guard_LLL_Z(java.lang.invoke.VarHandle, Object, Object, Object, java.lang.invoke.VarHandle$AccessDescriptor) -> boolean
fifo write: @1699477102277316528 0x7f81e1afc694 253: arc::a(Object, arc$a) -> arc
fifo write: @1699477102277360709 0x7f81e1b52c94 279: aqi$b::<init>(java.util.List) -> void
fifo write: @1699477102277476050 0x7f81e1a22877 2978: arc::a(com.google.common.collect.Multimap, java.util.Set, Object, java.util.function.BiConsumer) -> void
fifo write: @1699477102277551291 0x7f81e197ed9a 823: aqi::a(arc, aew, java.util.List) -> void
fifo write: @1699477102277610362 0x7f81e1b75714 327: java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire(int) -> void
fifo write: @1699477102277679023 0x7f81e17f7c34 1112: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::hashFloodingDetected(Object[]) -> boolean
fifo write: @1699477102277757634 0x7f81e1ed8314 230: arc$$Lambda$4968.0x00007f81609325b8::<init>(com.google.common.collect.Multimap, Object) -> void
fifo write: @1699477102277815835 0x7f81e1734194 185: aqi$b$$Lambda$4971.0x00007f8160932c60::<init>(java.util.function.Consumer) -> void
fifo write: @1699477102277867015 0x7f81e16af494 293: java.util.HashMap$KeySpliterator::<init>(java.util.HashMap, int, int, int, int) -> void
fifo write: @1699477102277921566 0x7f81e17aa06f 133: java.util.HashSet::spliterator() -> java.util.Spliterator
fifo write: @1699477102278004107 0x7f81e2052277 3520: arc$$Lambda$4907.0x00007f81609289b0::accept(Object, Object) -> void
fifo write: @1699477102278064048 0x7f81e18e1ef7 1522: aqi$b::a(java.util.function.Consumer) -> void
fifo write: @1699477102278154139 0x7f81e1dc6bb7 3022: arc::b(com.google.common.collect.Multimap, Object, arc$a) -> void
fifo write: @1699477102278241070 0x7f81e16d08f9 1635: java.util.HashMap$KeySpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477102278313171 0x7f81e18ca614 230: arc$$Lambda$4977.0x00007f81609341a0::<init>(com.google.common.collect.Multimap, Object) -> void
fifo write: @1699477102278376552 0x7f81e18dc094 185: aqi$b$$Lambda$4985.0x00007f8160935440::<init>(java.util.function.Consumer) -> void
fifo write: @1699477102278450643 0x7f81e1a209d9 878: com.google.common.collect.ImmutableSet$Builder::build() -> com.google.common.collect.ImmutableSet
fifo write: @1699477102278510564 0x7f81e15dbee7 607: com.google.common.collect.ImmutableSet::builder() -> com.google.common.collect.ImmutableSet$Builder
fifo write: @1699477102278552794 0x7f81e1aec2f7 1522: aqi$b::b(java.util.function.Consumer) -> void
fifo write: @1699477102278611895 0x7f81e1935947 2800: arc::a(com.google.common.collect.Multimap, Object, Object) -> boolean
fifo write: @1699477102278676036 0x7f81e1df0477 3600: arc$$Lambda$4911.0x00007f81609296e8::accept(Object, Object) -> void
fifo write: @1699477102278794677 0x7f81e910c070 2240: jdk.nio.zipfs.ZipPath$1::hasNext() -> boolean
fifo write: @1699477102278827238 0x7f81e191a434 497: com.google.common.collect.ImmutableSet$Builder::<init>() -> void
fifo write: @1699477102278876638 0x7f81e19237b4 1173: com.google.common.collect.AbstractMapBasedMultimap::access$100(java.util.Collection) -> java.util.Iterator
fifo write: @1699477102278915839 0x7f81e1943194 427: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection::contains(Object) -> boolean
fifo write: @1699477102278960509 0x7f81e1f31b14 230: arc$$Lambda$4978.0x00007f8160934888::<init>(com.google.common.collect.Multimap, Object) -> void
fifo write: @1699477102279000740 0x7f81e207af14 416: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection::spliterator() -> java.util.Spliterator
fifo write: @1699477102279036420 0x7f81e1a142da 1273: com.google.common.collect.ImmutableSet$Builder::<init>(int) -> void
fifo write: @1699477102279069301 0x7f81e1939855 575: ThreadLocal::set(Object) -> void
fifo write: @1699477102279129712 0x7f81e1678db7 3222: arc::a(com.google.common.collect.Multimap, Object, arc$a) -> void
fifo write: @1699477102279298414 0x7f81e1598b9f 6711: aqi::a(aqf$a, java.util.List) -> com.mojang.datafixers.util.Either
fifo write: @1699477102279371225 0x7f81e91662ef 548: jdk.nio.zipfs.ZipPath::toString() -> String
fifo write: @1699477102279553417 0x7f81e19ae692 586: com.google.common.collect.ImmutableSet$EmptySetBuilderImpl::add(Object) -> com.google.common.collect.ImmutableSet$SetBuilderImpl
fifo write: @1699477102279681889 0x7f81e202e574 1946: com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection::iterator() -> java.util.Iterator
fifo write: @1699477102279733139 0x7f81e196f317 250: com.mojang.datafixers.util.Either$Right::ifRight(java.util.function.Consumer) -> com.mojang.datafixers.util.Either
fifo write: @1699477102279776310 0x7f81e199daf4 232: aqi::a(java.util.Map, aew, java.util.Collection) -> void
fifo write: @1699477102279814791 0x7f81e1af4c94 230: aqi$$Lambda$5018.0x00007f8160939aa0::<init>(java.util.Map, aew) -> void
fifo write: @1699477102279850121 0x7f81e1dcad94 626: aqi$$Lambda$5018.0x00007f8160939aa0::accept(Object) -> void
fifo write: @1699477102279884761 0x7f81e19f4f17 114: arc$$Lambda$4914.0x00007f816092a208::accept(Object) -> void
fifo write: @1699477102279939862 0x7f81e1579119 34: arc::a(com.google.common.collect.Multimap, java.util.Set, java.util.function.BiConsumer, Object) -> void
fifo write: @1699477102280009873 0x7f81e94bd9fc 1132: java.util.HashMap::removeNode(int, Object, Object, boolean, boolean) -> java.util.HashMap$Node
fifo write: @1699477102280094534 0x7f81e203e797 3797: aqi$$Lambda$4897.0x00007f8160926bc0::accept(Object, Object) -> void
fifo write: @1699477102280294217 0x7f81e9570ce7 3888: com.mojang.serialization.Codec$16::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102281575103 0x7f81e9601daa 35141: java.lang.invoke.MethodHandleNatives::linkMethodHandleConstant(Class, int, Class, String, Object) -> java.lang.invoke.MethodHandle
fifo write: @1699477102281622064 0x7f81e92a8454 63: java.time.LocalDate::plusDays(long) -> java.time.LocalDate
fifo write: @1699477102283703230 0x7f81e94f1575 1194: java.time.LocalDateTime::plusSeconds(long) -> java.time.LocalDateTime
fifo write: @1699477102284613922 0x7f81e94f82fd 1350: java.time.LocalDateTime::plusWithOverflow(java.time.LocalDate, long, long, long, long, int) -> java.time.LocalDateTime
fifo write: @1699477102284983026 0x7f81e930eed1 102: java.time.ZoneOffset::equals(Object) -> boolean
fifo write: @1699477102285531613 0x7f81e9372735 94: java.time.LocalTime::create(int, int, int, int) -> java.time.LocalTime
fifo write: @1699477102288634624 0x7f81e901524c 2: com.google.gson.reflect.TypeToken::hashCode() -> int
fifo write: @1699477102295174538 0x7f81e9599f7e 1248: java.util.HashMap::remove(Object) -> Object
fifo write: @1699477102295619124 0x7f81e9181375 5783: com.mojang.serialization.MapCodec$MapCodecCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102295858447 0x7f81e914beb5 3342: java.time.zone.ZoneRules::findOffsetInfo(java.time.LocalDateTime, java.time.zone.ZoneOffsetTransition) -> Object
fifo write: @1699477102296011049 0x7f81e9142a82 7176: String::<init>(byte[], int, int, java.nio.charset.Charset) -> void
fifo write: @1699477102296052549 0x7f81e1e19714 368: ThreadLocal::remove() -> void
fifo write: @1699477102296548356 0x7f81e1523ff4 30: jdk.internal.misc.Unsafe::weakCompareAndSetLong(Object, long, long, long) -> boolean
fifo write: @1699477102296727618 0x7f81e19dddb2 327: jdk.internal.misc.Unsafe::getAndAddLong(Object, long, long) -> long
fifo write: @1699477102298227717 0x7f81e957bcb9 4500: jdk.nio.zipfs.ZipPath::getName(int) -> jdk.nio.zipfs.ZipPath
fifo write: @1699477102298305578 0x7f81e18aa779 1234: com.google.gson.reflect.TypeToken::<init>(java.lang.reflect.Type) -> void
fifo write: @1699477102298364509 0x7f81e1a024b4 748: com.google.gson.reflect.TypeToken::equals(Object) -> boolean
fifo write: @1699477102298501121 0x7f81e1dd97f7 7616: com.google.gson.internal.$Gson$Types::canonicalize(java.lang.reflect.Type) -> java.lang.reflect.Type
fifo write: @1699477102298805905 0x7f81e157eac7 101: com.google.gson.reflect.TypeToken::get(Class) -> com.google.gson.reflect.TypeToken
fifo write: @1699477102299022908 0x7f81e1b1355c 8251: com.google.gson.internal.$Gson$Types::getRawType(java.lang.reflect.Type) -> Class
fifo write: @1699477102299422763 0x7f81e16decd7 15617: com.google.gson.internal.$Gson$Types::equals(java.lang.reflect.Type, java.lang.reflect.Type) -> boolean
fifo write: @1699477102299494024 0x7f81e1dab937 313: com.google.gson.Gson::getAdapter(Class) -> com.google.gson.TypeAdapter
fifo write: @1699477102299582345 0x7f81e1def694 358: arn::b(com.google.gson.Gson, java.io.Reader, Class, boolean) -> Object
fifo write: @1699477102299663936 0x7f81e1a30549 962: arn::a(com.google.gson.Gson, java.io.Reader, Class, boolean) -> Object
fifo write: @1699477102299734337 0x7f81e16cd576 29: arn::a(com.google.gson.Gson, java.io.Reader, Class) -> Object
fifo write: @1699477102299856458 0x7f81e15c3401 2949: com.google.gson.internal.bind.TypeAdapters$34$1::read(com.google.gson.stream.JsonReader) -> Object
fifo write: @1699477102300387515 0x7f81e92052d4 7428: jdk.nio.zipfs.ZipPath$1::next() -> Object
fifo write: @1699477102300795281 0x7f81e1a182e7 9108: com.google.gson.Gson::getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.TypeAdapter
fifo write: @1699477102300975543 0x7f81e9325df6 537: java.util.concurrent.TimeUnit::convert(long, java.util.concurrent.TimeUnit) -> long
fifo write: @1699477102301151215 0x7f81e9204dd0 75: java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync::readerShouldBlock() -> boolean
fifo write: @1699477102301337338 0x7f81e92da6d0 75: java.util.concurrent.locks.AbstractQueuedSynchronizer::apparentlyFirstQueuedIsExclusive() -> boolean
fifo write: @1699477102304879013 0x7f81e91dbe54 7428: jdk.nio.zipfs.ZipPath$1::next() -> java.nio.file.Path
fifo write: @1699477102318616141 0x7f81e93616e0 4265: jdk.nio.zipfs.ZipFileSystem$IndexNode::keyOf(byte[]) -> jdk.nio.zipfs.ZipFileSystem$IndexNode
fifo write: @1699477102319154318 0x7f81e94d3ed3 116: java.nio.Buffer::limit(int) -> java.nio.Buffer
fifo write: @1699477102319516562 0x7f81e93b2290 4499: jdk.nio.zipfs.ZipFileSystem::getInode(byte[]) -> jdk.nio.zipfs.ZipFileSystem$IndexNode
fifo write: @1699477102320445234 0x7f81e9175fba 597: Thread::blockedOn(sun.nio.ch.Interruptible) -> void
fifo write: @1699477102322328319 0x7f81e914b5e2 643: java.nio.ByteBuffer::<init>(int, int, int, int, byte[], int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477102325616851 0x7f81e916a748 623: java.util.concurrent.ConcurrentHashMap::get(Object) -> Object
fifo write: @1699477102326223538 0x7f81e954915c 139: java.nio.ByteBuffer::limit(int) -> java.nio.Buffer
fifo write: @1699477102328262394 0x7f81e949351e 7629: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::tryAcquireShared(int) -> int
fifo write: @1699477102332397638 0x7f81e929a270 1324: java.util.HashSet::remove(Object) -> boolean
fifo write: @1699477102334140810 0x7f81e9266ed0 243: com.google.gson.stream.JsonReader::beginArray() -> void
fifo write: @1699477102334685857 0x7f81e9445c50 147: com.google.gson.stream.JsonReader::endArray() -> void
fifo write: @1699477102336103446 0x7f81e91fad78 2065: java.util.Collections$SynchronizedCollection::remove(Object) -> boolean
fifo write: @1699477102337838318 0x7f81e9293553 708: java.util.TreeMap$EntryIterator::next() -> Object
fifo write: @1699477102338251783 0x7f81e957b6dd 318: jdk.nio.zipfs.ZipFileSystem$IndexNode::equals(Object) -> boolean
fifo write: @1699477102340160758 0x7f81e929b451 554: java.nio.ByteBuffer::wrap(byte[], int, int) -> java.nio.ByteBuffer
fifo write: @1699477102340620134 0x7f81e92eb70e 1075: aew::c(String) -> aew
fifo write: @1699477102341347023 0x7f81e94fa453 185: sun.nio.cs.StreamDecoder::inReady() -> boolean
fifo write: @1699477102342083213 0x7f81e9576088 8270: com.google.gson.internal.bind.TypeAdapters$28::read(com.google.gson.stream.JsonReader) -> com.google.gson.JsonElement
fifo write: @1699477102342294626 0x7f81e9210e36 2012: java.time.zone.ZoneRules::getOffsetInfo(java.time.LocalDateTime) -> Object
fifo write: @1699477102342375707 0x7f81e906066b 812: java.nio.HeapByteBuffer::<init>(byte[], int, int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477102345259104 0x7f81e90991a1 5199: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::tryReleaseShared(int) -> boolean
fifo write: @1699477102345555718 0x7f81e92eb2ba 129: java.time.LocalDate::create(int, int, int) -> java.time.LocalDate
fifo write: @1699477102345761760 0x7f81e9575b3a 41: java.util.TimeZone::getDefaultRef() -> java.util.TimeZone
fifo write: @1699477102346350658 0x7f81e91db1d3 900: jdk.nio.zipfs.ZipPath::getResolvedPath() -> byte[]
fifo write: @1699477102347725226 0x7f81e9360d55 618: java.time.chrono.ChronoLocalDateTime::toEpochSecond(java.time.ZoneOffset) -> long
fifo write: @1699477102348226512 0x7f81e93b1b54 471: java.util.zip.Inflater::getBytesWritten() -> long
fifo write: @1699477102348294483 0x7f81e8ff4573 1194: String::substring(int, int) -> String
fifo write: @1699477102349163254 0x7f81e94dc4e5 582: java.nio.channels.spi.AbstractInterruptibleChannel::end(boolean) -> void
fifo write: @1699477102349914544 0x7f81e9269951 602: jdk.nio.zipfs.ZipFileSystem$2::available() -> int
fifo write: @1699477102350711464 0x7f81e15c94f1 1114: com.mojang.serialization.Codec$4::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102351285552 0x7f81e19f9b93 162: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3931.0x00007f81608356e8::apply(Object) -> Object
fifo write: @1699477102351459654 0x7f81e1e98c91 429: arf$3$$Lambda$3930.0x00007f81608354a0::apply(Object) -> Object
fifo write: @1699477102351778198 0x7f81e1484c71 1244: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$decode$4(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477102352789891 0x7f81e94feb04 1312: java.time.LocalDateTime::of(int, int, int, int, int, int) -> java.time.LocalDateTime
fifo write: @1699477102353110135 0x7f81e900f713 2014: jdk.nio.zipfs.ZipFileSystem$EntryInputStream::close() -> void
fifo write: @1699477102353197926 0x7f81e204feae 141: arf$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102354931959 0x7f81e1a316c9 1333: com.mojang.serialization.codecs.KeyDispatchCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102355414495 0x7f81e90e5a18 10446: java.util.TreeMap::put(Object, Object) -> Object
fifo write: @1699477102356842923 0x7f81e91371a3 10195: java.util.TreeMap::put(Object, Object, boolean) -> Object
fifo write: @1699477102356888714 0x7f81e2030074 251: arf::a(Object, java.util.Optional) -> Object
fifo write: @1699477102356931104 0x7f81e1779194 588: arf$$Lambda$1546.0x00007f8160598480::apply(Object) -> Object
fifo write: @1699477102357017476 0x7f81e17d2ad7 4383: arf$d::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102357062466 0x7f81e1922c8e 313: com.mojang.serialization.Codec$12$$Lambda$3814.0x00007f8160815450::apply(Object) -> Object
fifo write: @1699477102357116907 0x7f81e913d2d5 1163: java.nio.channels.spi.AbstractInterruptibleChannel::begin() -> void
fifo write: @1699477102357695694 0x7f81e15fbe39 3072: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$decode$3(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.serialization.Decoder) -> com.mojang.serialization.DataResult
fifo write: @1699477102362679899 0x7f81e926f5d8 5315: sun.nio.ch.FileChannelImpl::read(java.nio.ByteBuffer, long) -> int
fifo write: @1699477102362987623 0x7f81e90b25d0 5423: jdk.nio.zipfs.ZipFileSystem::readFullyAt(java.nio.ByteBuffer, long) -> long
fifo write: @1699477102363026053 0x7f81e92695d0 47: java.time.ZoneRegion::getRules() -> java.time.zone.ZoneRules
fifo write: @1699477102363662251 0x7f81e90b19da 573: java.time.LocalTime::of(int, int, int) -> java.time.LocalTime
fifo write: @1699477102363725902 0x7f81e9136b51 370: java.time.LocalDate::toEpochDay() -> long
fifo write: @1699477102363794563 0x7f81e926f1d3 60: java.time.chrono.IsoChronology::isLeapYear(long) -> boolean
fifo write: @1699477102364086797 0x7f81e946e090 2500: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3932.0x00007f8160835930::apply(Object) -> Object
fifo write: @1699477102364900997 0x7f81e926e953 420: java.nio.HeapByteBuffer::compact() -> java.nio.ByteBuffer
fifo write: @1699477102365090550 0x7f81e924e458 559: com.google.gson.stream.JsonReader::fillBuffer(int) -> boolean
fifo write: @1699477102365270112 0x7f81e924dfd3 106: com.mojang.serialization.MapCodec$MapCodecCodec$$Lambda$3732.0x00007f81607b58f8::apply(Object) -> Object
fifo write: @1699477102366688710 0x7f81e958dde2 9083: jdk.nio.zipfs.ZipUtils::dosToJavaTime(long) -> long
fifo write: @1699477102366756741 0x7f81e9501214 1175: sun.nio.cs.StreamDecoder::readBytes() -> int
fifo write: @1699477102367800885 0x7f81e957fcdb 16942: java.lang.invoke.MethodType::makeImpl(Class, Class[], boolean) -> java.lang.invoke.MethodType
fifo write: @1699477102367942247 0x7f81e91868de 4837: sun.nio.ch.FileChannelImpl::readInternal(java.nio.ByteBuffer, long) -> int
fifo write: @1699477102370564770 0x7f81e9514aa4 14335: java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireShared(int) -> void
fifo write: @1699477102374111695 0x7f81e951e9b1 11263: jdk.nio.zipfs.ZipFileSystem$Entry::readCEN(jdk.nio.zipfs.ZipFileSystem, jdk.nio.zipfs.ZipFileSystem$IndexNode) -> void
fifo write: @1699477102374152216 0x7f81e94917d3 320: java.util.zip.CRC32::update(byte[], int, int) -> void
fifo write: @1699477102376765560 0x7f81e95b5495 11343: jdk.nio.zipfs.ZipFileSystem$Entry::<init>(jdk.nio.zipfs.ZipFileSystem, jdk.nio.zipfs.ZipFileSystem$IndexNode) -> void
fifo write: @1699477102382987160 0x7f81e951e353 50: java.util.Optional::ifPresent(java.util.function.Consumer) -> void
fifo write: @1699477102383203373 0x7f81e95144d0 67: com.mojang.serialization.DataResult::error() -> java.util.Optional
fifo write: @1699477102383643399 0x7f81e1ae3837 870: arf$d$$Lambda$5036.0x00007f8160912728::apply(Object) -> Object
fifo write: @1699477102383683659 0x7f81e95141cc 6: edk::a() -> com.mojang.serialization.Codec
fifo write: @1699477102385660985 0x7f81e2025d74 1651: egl$$Lambda$5040.0x00007f816093d3c0::apply(Object) -> Object
fifo write: @1699477102385711305 0x7f81e1657534 2770: efr::a(java.util.List) -> java.util.function.Predicate
fifo write: @1699477102385752146 0x7f81e1725934 1305: egl::a(com.mojang.datafixers.util.Either) -> egk
fifo write: @1699477102386035139 0x7f81e20238b7 4717: eef::a(java.util.List) -> java.util.function.BiFunction
fifo write: @1699477102386329863 0x7f81e15d60f4 51: java.util.stream.ReduceOps$1ReducingSink::begin(long) -> void
fifo write: @1699477102386393144 0x7f81e1e97294 579: java.util.stream.ReduceOps$1::<init>(java.util.stream.StreamShape, java.util.function.BinaryOperator, java.util.function.BiFunction, Object) -> void
fifo write: @1699477102386447525 0x7f81e1a70494 534: java.util.stream.ReduceOps$1ReducingSink::<init>(Object, java.util.function.BiFunction, java.util.function.BinaryOperator) -> void
fifo write: @1699477102386497155 0x7f81e957f3e0 247: com.mojang.serialization.codecs.EitherCodec$$Lambda$3927.0x00007f8160834df8::apply(Object) -> Object
fifo write: @1699477102386538396 0x7f81e1b32d8b 662: java.util.stream.ReduceOps$1::makeSink() -> java.util.stream.ReduceOps$1ReducingSink
fifo write: @1699477102386606357 0x7f81e156556c 1544: java.util.stream.ReduceOps::makeRef(Object, java.util.function.BiFunction, java.util.function.BinaryOperator) -> java.util.stream.TerminalOp
fifo write: @1699477102386765279 0x7f81e1d31994 239: egi::<init>(float) -> void
fifo write: @1699477102386861310 0x7f81e1bb7783 630: egi$$Lambda$1940.0x00007f816060ca40::apply(Object) -> Object
fifo write: @1699477102387488218 0x7f81e1b97642 1061: com.google.common.collect.ImmutableList::copyIntoArray(Object[], int) -> int
fifo write: @1699477102388090646 0x7f81e154cada 2512: com.mojang.serialization.Codec$12::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102388150447 0x7f81e1b18d94 574: hq$$Lambda$1975.0x00007f8160615c20::apply(Object) -> Object
fifo write: @1699477102388201367 0x7f81e1ab9ff4 344: com.google.common.collect.Hashing::smearedHash(Object) -> int
fifo write: @1699477102388299199 0x7f81e1ab9894 230: hq$$Lambda$5038.0x00007f8160913918::<init>(hq, aew) -> void
fifo write: @1699477102388362679 0x7f81e1dcffb4 971: hq::b(he) -> com.mojang.serialization.Lifecycle
fifo write: @1699477102388427240 0x7f81e1de7dd4 1583: hq$$Lambda$1977.0x00007f81606160b0::apply(Object) -> Object
fifo write: @1699477102388496461 0x7f81e1e395f7 1528: hq$$Lambda$5037.0x00007f8160912ba8::apply(Object) -> Object
fifo write: @1699477102388950597 0x7f81e164a294 47: java.util.stream.ReduceOps$1::makeSink() -> java.util.stream.ReduceOps$AccumulatingSink
fifo write: @1699477102389133089 0x7f81e1de1667 6800: hq::d(aew) -> com.mojang.serialization.DataResult
fifo write: @1699477102389196870 0x7f81e17e1194 479: com.google.common.collect.Platform::newArray(Object[], int) -> Object[]
fifo write: @1699477102389563465 0x7f81e17e0b14 337: edh$$Lambda$1899.0x00007f81606048b8::apply(Object) -> Object
fifo write: @1699477102389668656 0x7f81e18c8f14 273: edj::<init>(java.util.List) -> void
fifo write: @1699477102389762928 0x7f81e957f0cc 6: eee::a() -> com.mojang.serialization.Codec
fifo write: @1699477102389857859 0x7f81e1b18914 240: edl$c::<init>(edl) -> void
fifo write: @1699477102389922600 0x7f81e1a9785c 1249: edl::<init>(int, int, java.util.List, java.util.List) -> void
fifo write: @1699477102389965010 0x7f81e18c8794 434: edl$1::<init>(edl) -> void
fifo write: @1699477102390042671 0x7f81e957ed4c 6: efq::a() -> com.mojang.serialization.Codec
fifo write: @1699477102390135402 0x7f81e1d0ab39 1511: edg$$Lambda$2262.0x00007f816064e318::apply(Object, Object, Object, Object, Object) -> Object
fifo write: @1699477102390195383 0x7f81e1dd0f94 110: edg::<init>(he, int, int, java.util.List, java.util.List) -> void
fifo write: @1699477102390677399 0x7f81e9350a9a 1946: com.mojang.serialization.MapDecoder$4::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102391211476 0x7f81e9296615 3071: java.util.Set::of(Object[]) -> java.util.Set
fifo write: @1699477102391310758 0x7f81e95b438f 976: hq$$Lambda$515.0x00007f8160302978::apply(Object) -> Object
fifo write: @1699477102391907195 0x7f81e15cf3d4 1454: java.util.stream.AbstractPipeline::exactOutputSizeIfKnown(java.util.Spliterator) -> long
fifo write: @1699477102391948716 0x7f81e1f079f4 486: ej::a(char) -> boolean
fifo write: @1699477102393015510 0x7f81e951004c 6: egj::a() -> com.mojang.serialization.Codec
fifo write: @1699477102393547216 0x7f81e1f07314 320: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3953.0x00007f81608326b0::<init>(com.mojang.serialization.codecs.BaseMapCodec, com.mojang.serialization.DynamicOps, com.google.common.collect.ImmutableList$Builder, com.google.common.collect.ImmutableMap$Builder) -> void
fifo write: @1699477102393606397 0x7f81e1df2114 185: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3971.0x00007f81608394f0::<init>(java.util.Map) -> void
fifo write: @1699477102393756089 0x7f81e165ef94 79: java.util.stream.ReferencePipeline::reduce(Object, java.util.function.BiFunction, java.util.function.BinaryOperator) -> Object
fifo write: @1699477102393819690 0x7f81e14f1494 394: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3971.0x00007f81608394f0::apply(Object) -> Object
fifo write: @1699477102393875241 0x7f81e2022f94 185: com.mojang.serialization.codecs.BaseMapCodec$$Lambda$3972.0x00007f8160839738::<init>(Object) -> void
fifo write: @1699477102393935691 0x7f81e16313d4 1007: com.mojang.serialization.JsonOps$1::entries() -> java.util.stream.Stream
fifo write: @1699477102394043163 0x7f81e950fd03 46: com.mojang.datafixers.util.Either$$Lambda$3729.0x00007f81607b5230::apply(Object) -> Object
fifo write: @1699477102394200745 0x7f81e164231a 3748: java.util.stream.Nodes$FixedNodeBuilder::accept(Object) -> void
fifo write: @1699477102394632780 0x7f81e950f957 92: java.util.stream.Streams$StreamBuilderImpl::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477102395038256 0x7f81e1630fb4 39: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::<init>() -> void
fifo write: @1699477102395396020 0x7f81e14b84bc 2025: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::<init>(int, float) -> void
fifo write: @1699477102395631213 0x7f81e950f2d0 371: com.mojang.serialization.MapDecoder$$Lambda$3718.0x00007f81607ae588::apply(Object) -> Object
fifo write: @1699477102395972788 0x7f81e1d0d94a 19660: com.mojang.serialization.codecs.BaseMapCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102397037861 0x7f81e14f0f94 337: efr$$Lambda$1906.0x00007f8160607458::apply(Object) -> Object
fifo write: @1699477102397374806 0x7f81e9185d60 643: com.mojang.serialization.JsonOps::lambda$getList$21(com.google.gson.JsonElement, java.util.function.Consumer) -> void
fifo write: @1699477102397717850 0x7f81e1ea8035 1497: ecx$$Lambda$4167.0x00007f81608a2480::apply(Object, Object, Object, Object, Object) -> Object
fifo write: @1699477102397803441 0x7f81e1bf4039 552: ecx::<init>(java.util.List, java.util.List, java.util.List, egk, egk) -> void
fifo write: @1699477102398140356 0x7f81e1cf8cbd 948: com.google.common.collect.HashBiMap::seekByKey(Object, int) -> com.google.common.collect.HashBiMap$BiEntry
fifo write: @1699477102398654292 0x7f81e92cfbbe 4526: com.mojang.serialization.codecs.EitherCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102398693253 0x7f81e1bf3a94 337: eef$$Lambda$2101.0x00007f816062cb88::apply(Object) -> Object
fifo write: @1699477102398725763 0x7f81e1a3d494 273: eec::<init>(java.util.List) -> void
fifo write: @1699477102398773604 0x7f81e1a3cdb4 401: ecy::<init>(eez, java.util.Optional, java.util.List, java.util.List) -> void
fifo write: @1699477102398811334 0x7f81e1947894 324: efa$$Lambda$4142.0x00007f81608a4000::apply(Object) -> Object
fifo write: @1699477102398889725 0x7f81e1946d54 881: com.google.common.collect.HashBiMap::get(Object) -> Object
fifo write: @1699477102398999017 0x7f81e18949f4 326: com.google.common.collect.Maps::valueOrNull(java.util.Map$Entry) -> Object
fifo write: @1699477102399131258 0x7f81e199e9b7 2535: ect$$Lambda$5016.0x00007f8160939cd8::accept(Object, Object) -> void
fifo write: @1699477102399192209 0x7f81e2001767 2517: ecv::a(aew, com.google.gson.JsonElement) -> java.util.Optional
fifo write: @1699477102399265240 0x7f81e1894594 185: efa$$Lambda$5035.0x00007f81609134a8::<init>(aew) -> void
fifo write: @1699477102399353001 0x7f81e1894094 230: ecv$$Lambda$5042.0x00007f816093d840::<init>(ecv, aew) -> void
fifo write: @1699477102399408012 0x7f81e1f090f7 1528: efa$$Lambda$5034.0x00007f8160912068::apply(Object) -> Object
fifo write: @1699477102399490573 0x7f81e1f0aa4f 4431: ect::a(ecv, java.util.Map, aew, com.google.gson.JsonElement) -> void
fifo write: @1699477102399557094 0x7f81e19df9ae 1588: ecy$$Lambda$4170.0x00007f81608a2b60::apply(Object, Object, Object, Object) -> Object
fifo write: @1699477102399602815 0x7f81e91858d0 211: java.util.stream.AbstractPipeline::sourceStageSpliterator() -> java.util.Spliterator
fifo write: @1699477102399645755 0x7f81e1f08b14 230: ect$$Lambda$5043.0x00007f816093da78::<init>(java.util.Map, aew) -> void
fifo write: @1699477102399684846 0x7f81e19df217 342: ect$$Lambda$5043.0x00007f816093da78::accept(Object) -> void
fifo write: @1699477102399727006 0x7f81e1dc9af4 232: ect::a(java.util.Map, aew, Object) -> void
fifo write: @1699477102399965759 0x7f81e1f0297f 6779: efa::a(aew) -> com.mojang.serialization.DataResult
fifo write: @1699477102400587197 0x7f81e1dc9514 473: java.util.ImmutableCollections$ListN::<init>(Object[], boolean) -> void
fifo write: @1699477102400778900 0x7f81e9574073 2132: java.util.ImmutableCollections::listCopy(java.util.Collection) -> java.util.List
fifo write: @1699477102400870851 0x7f81e9374cbd 1195: com.google.common.collect.MapMakerInternalMap$Segment::get(Object, int) -> Object
fifo write: @1699477102401001793 0x7f81e922e8d3 388: java.util.stream.ReferencePipeline$Head::forEach(java.util.function.Consumer) -> void
fifo write: @1699477102401888974 0x7f81e1756dc4 1977: java.util.stream.AbstractPipeline::evaluate(java.util.Spliterator, boolean, java.util.function.IntFunction) -> java.util.stream.Node
fifo write: @1699477102403524145 0x7f81e922e1f7 244: com.mojang.serialization.Codec$14$$Lambda$3925.0x00007f8160834990::apply(Object) -> Object
fifo write: @1699477102403870380 0x7f81e16de514 31: java.util.stream.ReferencePipeline::makeNodeBuilder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477102404107633 0x7f81e9118e70 2160: arf$3$$Lambda$3930.0x00007f81608354a0::apply(Object) -> Object
fifo write: @1699477102404166993 0x7f81e17ebe3a 1305: java.util.stream.Nodes::builder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477102404486988 0x7f81e91853fc 11: asp$$Lambda$158.0x00007f816013ccb8::apply(Object) -> Object
fifo write: @1699477102406037498 0x7f81e922decc 6: com.mojang.brigadier.StringReader::getString() -> String
fifo write: @1699477102406464743 0x7f81e903aaff 280: arf$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102407288854 0x7f81e91583ab 5307: com.mojang.serialization.Codec$14::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102407371245 0x7f81e922dad0 83: arf$$Lambda$1546.0x00007f8160598480::apply(Object) -> Object
fifo write: @1699477102407670359 0x7f81e94e5f59 2959: com.mojang.serialization.Codec$4::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102408954695 0x7f81e9039d8c 629: com.mojang.serialization.codecs.ListCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102409290310 0x7f81e95ac875 3044: arf$d::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102410072690 0x7f81e934b9b0 1718: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3931.0x00007f81608356e8::apply(Object) -> Object
fifo write: @1699477102410512195 0x7f81e17eb734 433: eeo::<init>(java.util.List, egk, boolean) -> void
fifo write: @1699477102410623527 0x7f81e1e177b1 1389: eeo$$Lambda$2107.0x00007f816062e740::apply(Object, Object, Object) -> Object
fifo write: @1699477102410765929 0x7f81e928a3de 1309: com.mojang.serialization.codecs.KeyDispatchCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102410846760 0x7f81e1756714 337: egl$$Lambda$1935.0x00007f816060d440::apply(Object) -> Object
fifo write: @1699477102411017162 0x7f81e92ce83a 1592: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$decode$4(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477102411106723 0x7f81e1e16e8a 989: egn$$Lambda$1945.0x00007f8160610920::apply(Object, Object) -> Object
fifo write: @1699477102411172394 0x7f81e1dc8f94 324: egn::<init>(egk, egk) -> void
fifo write: @1699477102411332206 0x7f81e950caef 636: com.mojang.serialization.JsonOps$$Lambda$3816.0x00007f81608158d0::accept(Object) -> void
fifo write: @1699477102412295038 0x7f81e937eed6 5170: java.util.concurrent.ConcurrentMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477102412366699 0x7f81e934b4cc 6: com.mojang.serialization.codecs.UnboundedMapCodec::keyCodec() -> com.mojang.serialization.Codec
fifo write: @1699477102412435990 0x7f81e928a04c 6: com.mojang.serialization.codecs.UnboundedMapCodec::elementCodec() -> com.mojang.serialization.Codec
fifo write: @1699477102412581982 0x7f81e950bab4 1506: com.mojang.serialization.JsonOps::getList(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102412696544 0x7f81e946baab 865: com.mojang.serialization.JsonOps::createList(java.util.stream.Stream) -> Object
fifo write: @1699477102415352257 0x7f81e946af74 1295: com.google.common.base.Suppliers$NonSerializableMemoizingSupplier::get() -> Object
fifo write: @1699477102416349080 0x7f81e1cf20b4 312: java.util.stream.ReferencePipeline::toArray(java.util.function.IntFunction) -> Object[]
fifo write: @1699477102416445121 0x7f81e1cf157e 1189: java.util.stream.AbstractPipeline::evaluateToArrayNode(java.util.function.IntFunction) -> java.util.stream.Node
fifo write: @1699477102416610033 0x7f81e14d9b97 1909: java.util.stream.Nodes::flatten(java.util.stream.Node, java.util.function.IntFunction) -> java.util.stream.Node
fifo write: @1699477102416671664 0x7f81e1dc8b08 159: jdk.internal.access.SharedSecrets::getJavaUtilCollectionAccess() -> jdk.internal.access.JavaUtilCollectionAccess
fifo write: @1699477102416722815 0x7f81e175fe94 31: java.util.ImmutableCollections$Access$1::listFromTrustedArrayNullsAllowed(Object[]) -> java.util.List
fifo write: @1699477102416773825 0x7f81e1446e74 1050: java.util.stream.ReferencePipeline::toList() -> java.util.List
fifo write: @1699477102416826786 0x7f81e14466d4 715: java.util.stream.ReferencePipeline::toArray() -> Object[]
fifo write: @1699477102416891817 0x7f81e14dd99a 796: java.util.ImmutableCollections::listFromTrustedArrayNullsAllowed(Object[]) -> java.util.List
fifo write: @1699477102417305552 0x7f81e95a91b8 3979: com.google.common.collect.MapMakerInternalMap::get(Object) -> Object
fifo write: @1699477102417351243 0x7f81e946aacc 6: com.google.common.collect.RegularImmutableSortedSet::unsafeComparator() -> java.util.Comparator
fifo write: @1699477102417686667 0x7f81e9289acc 6: efo::d() -> java.util.Optional
fifo write: @1699477102417732868 0x7f81e95a8dcc 6: efo::c() -> he
fifo write: @1699477102418147163 0x7f81e9157479 1614: arf$c::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102418444657 0x7f81e9377d1c 2594: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$5::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102418787531 0x7f81e92ce253 220: java.util.stream.Streams$StreamBuilderImpl::build() -> java.util.stream.Stream
fifo write: @1699477102419310778 0x7f81e95a8950 71: com.mojang.serialization.codecs.ListCodec$$Lambda$3727.0x00007f81607b4da0::apply(Object) -> Object
fifo write: @1699477102419971477 0x7f81e92cdf4c 6: edt$a::c() -> String
fifo write: @1699477102420174329 0x7f81e9156b03 945: com.mojang.serialization.codecs.ListCodec$$Lambda$3721.0x00007f81607afbb8::<init>(com.mojang.serialization.codecs.ListCodec, com.mojang.serialization.DynamicOps, java.util.stream.Stream$Builder, org.apache.commons.lang3.mutable.MutableObject, com.google.common.collect.ImmutableList$Builder) -> void
fifo write: @1699477102420804677 0x7f81e9156555 126: StrictMath::ceil(double) -> double
fifo write: @1699477102421670989 0x7f81e1799dd4 205: java.util.stream.ReferencePipeline::lambda$toArray$0(int) -> Object[]
fifo write: @1699477102421718979 0x7f81e1446194 296: java.util.stream.ReferencePipeline$$Lambda$4.0x00007f8160046c40::apply(int) -> Object
fifo write: @1699477102426360659 0x7f81e937b34e 4203: aev::a(aew, aew) -> aev
fifo write: @1699477102427143199 0x7f81e14f0bf4 2: Integer::longValue() -> long
fifo write: @1699477102428426826 0x7f81e9218b3f 1467: com.mojang.serialization.JsonOps::getMap(com.google.gson.JsonElement) -> com.mojang.serialization.DataResult
fifo write: @1699477102428643509 0x7f81e14dd134 967: java.util.stream.Nodes$ArrayNode::<init>(long, java.util.function.IntFunction) -> void
fifo write: @1699477102428849251 0x7f81e921e767 1564: com.mojang.serialization.JsonOps::getMap(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102430983289 0x7f81e159703f 2280: ej::b(com.mojang.brigadier.StringReader) -> String
fifo write: @1699477102432006502 0x7f81e14dca94 505: com.mojang.datafixers.kinds.Applicative$$Lambda$288.0x00007f81601b6ae0::apply(Object) -> Object
fifo write: @1699477102432142944 0x7f81e1cf1014 185: com.mojang.datafixers.util.Function8$$Lambda$3922.0x00007f8160834298::<init>(com.mojang.datafixers.util.Function8) -> void
fifo write: @1699477102432323036 0x7f81e14d9414 365: com.mojang.datafixers.util.Function8$$Lambda$3923.0x00007f81608344f0::<init>(com.mojang.datafixers.util.Function8, Object, Object, Object, Object) -> void
fifo write: @1699477102432394307 0x7f81e1736594 325: com.mojang.datafixers.util.Function8$$Lambda$3922.0x00007f8160834298::apply(Object, Object, Object, Object) -> Object
fifo write: @1699477102432449698 0x7f81e1735bd7 1155: com.mojang.datafixers.util.Function8::curry4() -> com.mojang.datafixers.util.Function4
fifo write: @1699477102432549449 0x7f81e1735714 215: com.mojang.datafixers.util.Function8::lambda$curry4$6(Object, Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477102432624190 0x7f81e1436720 409: com.mojang.datafixers.util.Function8$$Lambda$3923.0x00007f81608344f0::apply(Object, Object, Object, Object) -> Object
fifo write: @1699477102432703611 0x7f81e1435d57 1181: com.mojang.datafixers.util.Function8::lambda$curry4$7(Object, Object, Object, Object) -> com.mojang.datafixers.util.Function4
fifo write: @1699477102433228788 0x7f81e90c9418 4585: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$3::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102434536075 0x7f81e143579c 364: ect$$Lambda$5198.0x00007f816099d8c8::accept(Object, Object) -> void
fifo write: @1699477102434612366 0x7f81e19cab1f 1772: com.google.common.collect.ImmutableMultimap$Builder::put(Object, Object) -> com.google.common.collect.ImmutableMultimap$Builder
fifo write: @1699477102434692197 0x7f81e19c9f9a 888: ect::a(com.google.common.collect.ImmutableMap$Builder, ecv, com.google.common.collect.ImmutableMultimap$Builder, aew, Object) -> void
fifo write: @1699477102434731107 0x7f81e16c9994 324: ecs::<init>(ecv, aew) -> void
fifo write: @1699477102435757111 0x7f81e16c89ee 2206: java.lang.invoke.LambdaForm$MH.0x00007f8160259800::invoke(Object, Object, Object) -> int
fifo write: @1699477102436474260 0x7f81e149a47f 5753: ecs::hashCode() -> int
fifo write: @1699477102437022117 0x7f81e17cc934 899: java.lang.invoke.BoundMethodHandle$Species_LLL::copyWithExtendL(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477102437399932 0x7f81e1a67887 7780: ecs::equals(Object) -> boolean
fifo write: @1699477102438642958 0x7f81e17cc197 675: com.google.common.base.Preconditions::checkNotNull(Object, Object) -> Object
fifo write: @1699477102438728129 0x7f81e17cbb14 365: ecz::<init>(com.google.common.collect.Multimap, java.util.function.Supplier, eez, ecu, java.util.Set) -> void
fifo write: @1699477102439310086 0x7f81e95a1430 9666: com.mojang.serialization.codecs.ListCodec$$Lambda$3720.0x00007f81607af970::apply(Object) -> Object
fifo write: @1699477102439367387 0x7f81e16c8514 61: com.google.common.collect.AbstractIterator::endOfData() -> Object
fifo write: @1699477102439443438 0x7f81e1b69e14 230: ecz$$Lambda$5202.0x00007f81609a0228::<init>(ecz, String) -> void
fifo write: @1699477102439529059 0x7f81e1b68ef5 1797: ecz::b(String) -> ecz
fifo write: @1699477102439592800 0x7f81e1b68914 328: com.google.common.collect.Sets$SetView::<init>() -> void
fifo write: @1699477102439669361 0x7f81e1fd9994 422: com.google.common.collect.Sets$SetView::<init>(com.google.common.collect.Sets$1) -> void
fifo write: @1699477102439729832 0x7f81e17cb717 98: ecz::a(ecr) -> void
fifo write: @1699477102439788963 0x7f81e1fd9494 222: ecr::a(ecz) -> void
fifo write: @1699477102439836673 0x7f81e937ae4c 6: ecs::a() -> ecv
fifo write: @1699477102439919314 0x7f81e1fd8d34 716: com.google.common.collect.Sets$3::<init>(java.util.Set, java.util.Set) -> void
fifo write: @1699477102439974215 0x7f81e1fd8814 251: com.google.common.collect.Sets$3::isEmpty() -> boolean
fifo write: @1699477102440030726 0x7f81e1a08f14 144: ecr::a() -> java.util.Set
fifo write: @1699477102440098707 0x7f81e921db84 545: java.util.AbstractCollection::containsAll(java.util.Collection) -> boolean
fifo write: @1699477102440174558 0x7f81e1beee07 2040: com.google.common.collect.Sets::difference(java.util.Set, java.util.Set) -> com.google.common.collect.Sets$SetView
fifo write: @1699477102440225098 0x7f81e92186bc 99: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long, Object) -> long
fifo write: @1699477102440279019 0x7f81e921833c 83: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object) -> Object
fifo write: @1699477102440351140 0x7f81e155e9bf 3891: eez::a(ecz, ecr) -> void
fifo write: @1699477102441184651 0x7f81e92c244c 6: ecy::a() -> eez
fifo write: @1699477102441241041 0x7f81e92c214c 6: ecs::b() -> aew
fifo write: @1699477102441609056 0x7f81e1ecd007 5377: edj::a(ecz) -> void
fifo write: @1699477102441712827 0x7f81e92c1773 914: com.google.common.collect.AbstractIterator::hasNext() -> boolean
fifo write: @1699477102441844999 0x7f81e17e51a7 5409: edl::a(ecz) -> void
fifo write: @1699477102442157663 0x7f81e92c0c38 1027: StringConcatHelper::prepend(long, byte[], String, String) -> long
fifo write: @1699477102442308415 0x7f81e1eaff19 1641: com.google.common.collect.Sets$1$1::computeNext() -> Object
fifo write: @1699477102442888403 0x7f81e1bee259 962: com.google.common.collect.ImmutableCollection$Builder::addAll(Iterable) -> com.google.common.collect.ImmutableCollection$Builder
fifo write: @1699477102443001994 0x7f81e1eaf4d9 1036: com.google.common.collect.ImmutableSet$Builder::addAll(Iterable) -> com.google.common.collect.ImmutableSet$Builder
fifo write: @1699477102443082145 0x7f81e1596314 230: ecz$$Lambda$5201.0x00007f81609a0000::<init>(ecz, String) -> void
fifo write: @1699477102443218077 0x7f81e1595aba 843: ect$$Lambda$5200.0x00007f816099cc00::accept(Object, Object) -> void
fifo write: @1699477102443312818 0x7f81e15953fd 486: ect::b(ecz, ecs, Object) -> void
fifo write: @1699477102443397089 0x7f81e1594bfa 389: ect::a(ecz, ecs, Object) -> void
fifo write: @1699477102443597032 0x7f81e163d427 5608: eec::a(ecz) -> void
fifo write: @1699477102443679323 0x7f81e162c714 240: ecv::a(ecz, ecs, Object) -> void
fifo write: @1699477102443906296 0x7f81e1b6224f 5647: ecz::a(String, ecs) -> ecz
fifo write: @1699477102444165539 0x7f81e162b787 2040: com.google.common.collect.Sets::union(java.util.Set, java.util.Set) -> com.google.common.collect.Sets$SetView
fifo write: @1699477102444260870 0x7f81e162afb4 716: com.google.common.collect.Sets$1::<init>(java.util.Set, java.util.Set) -> void
fifo write: @1699477102444333611 0x7f81e1cb9217 302: com.google.common.collect.Sets$1::iterator() -> java.util.Iterator
fifo write: @1699477102444428502 0x7f81e9527b39 178: java.lang.invoke.LambdaForm$MH.0x00007f81600d8400::invoke(Object, long, Object, Object) -> long
fifo write: @1699477102444503053 0x7f81e1cb8deb 105: com.google.common.collect.Sets$1::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477102444657685 0x7f81e1cb83d9 1100: com.google.common.collect.Sets$1$1::<init>(com.google.common.collect.Sets$1) -> void
fifo write: @1699477102445126131 0x7f81e16eb5c7 16516: ecx::a(ecz) -> void
fifo write: @1699477102445197862 0x7f81e1b92257 878: efl::a() -> java.util.Set
fifo write: @1699477102445269263 0x7f81e1b91954 996: java.util.ImmutableCollections$Set12::<init>(Object) -> void
fifo write: @1699477102445317044 0x7f81e1cb7b92 510: ecz::a(eez) -> ecz
fifo write: @1699477102445624178 0x7f81e1e33be7 13834: ecv::a(ecz, ecs, ecy) -> void
fifo write: @1699477102445868191 0x7f81e1a0d822 14192: ecv$$Lambda$4171.0x00007f81608a2db0::run(ecz, ecs, Object) -> void
fifo write: @1699477102446009473 0x7f81e1bb2907 10503: ecy::a(ecz) -> void
fifo write: @1699477102446047883 0x7f81e1b91494 240: eeo::a() -> java.util.Set
fifo write: @1699477102446216426 0x7f81e1a0bfd7 2539: egn::a() -> java.util.Set
fifo write: @1699477102447514442 0x7f81e96161d6 9983: com.mojang.serialization.codecs.ListCodec::lambda$decode$4(com.mojang.serialization.DynamicOps, java.util.function.Consumer) -> com.mojang.serialization.DataResult
fifo write: @1699477102448182081 0x7f81e95260b5 2567: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::ensureTableCapacity(int) -> void
fifo write: @1699477102448284212 0x7f81e92c08d0 47: com.google.common.collect.SingletonImmutableList::get(int) -> Object
fifo write: @1699477102448406014 0x7f81e9396952 445: String::getBytes(byte[], int, byte) -> void
fifo write: @1699477102449913123 0x7f81e939653c 95: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long, int) -> long
fifo write: @1699477102450144106 0x7f81e1c03269 3300: com.google.common.collect.ImmutableSet::construct(int, int, Object[]) -> com.google.common.collect.ImmutableSet
fifo write: @1699477102450202647 0x7f81e939613c 119: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long, Object, int, Object) -> long
fifo write: @1699477102450953707 0x7f81e93953ee 1377: ecz::b(String) -> ecz
fifo write: @1699477102451106259 0x7f81e93d0957 1313: com.google.common.collect.ImmutableSet$SetBuilderImpl::addDedupedElement(Object) -> void
fifo write: @1699477102452367745 0x7f81e1e33137 553: arf$g$$Lambda$3992.0x00007f816083e000::apply(Object) -> Object
fifo write: @1699477102452605248 0x7f81e166ba17 2022: arf$g$$Lambda$3981.0x00007f816083a6c0::apply(Object) -> Object
fifo write: @1699477102452685279 0x7f81e166abda 1681: arf$g::b(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477102452778950 0x7f81e93cf5e8 1727: StringConcatHelper::prepend(long, byte[], int, String) -> long
fifo write: @1699477102453086274 0x7f81e93cf214 35: org.apache.commons.lang3.Validate::notNull(Object) -> Object
fifo write: @1699477102453167925 0x7f81e9395050 75: com.mojang.serialization.DataResult::error() -> java.util.Optional
fifo write: @1699477102453296057 0x7f81e1e32734 634: java.util.HashMap::remove(Object) -> Object
fifo write: @1699477102453444349 0x7f81e1a152ab 4967: java.util.HashMap::removeNode(int, Object, Object, boolean, boolean) -> java.util.HashMap$Node
fifo write: @1699477102453543550 0x7f81e1b90e94 339: java.util.stream.Nodes$ArrayNode::asArray(java.util.function.IntFunction) -> Object[]
fifo write: @1699477102453716022 0x7f81e1a7c014 325: java.util.HashSet::remove(Object) -> boolean
fifo write: @1699477102453833454 0x7f81e1a7a41a 3741: java.util.stream.Nodes$FixedNodeBuilder::begin(long) -> void
fifo write: @1699477102453959236 0x7f81e1dade3a 4346: java.util.stream.Nodes$FixedNodeBuilder::end() -> void
fifo write: @1699477102454043557 0x7f81e91988b9 102: arn::a(com.google.gson.JsonElement, String) -> String
fifo write: @1699477102454078387 0x7f81e1a73074 90: cja::o() -> boolean
fifo write: @1699477102454177188 0x7f81e15c723a 4346: java.util.stream.Nodes$FixedNodeBuilder::build() -> java.util.stream.Node
fifo write: @1699477102454241859 0x7f81e9394ccc 6: cly::c() -> String
fifo write: @1699477102454646034 0x7f81e19309ff 2915: cjf::<init>(cpu, int) -> void
fifo write: @1699477102454881367 0x7f81e15c6d14 31: cjf::<init>(cpu) -> void
fifo write: @1699477102455013709 0x7f81e1930314 456: java.util.Arrays$ArrayList::set(int, Object) -> Object
fifo write: @1699477102455106810 0x7f81e192fc94 505: com.mojang.datafixers.kinds.Applicative$$Lambda$1776.0x00007f81605ddb70::apply(Object) -> Object
fifo write: @1699477102455203302 0x7f81e166a714 185: com.mojang.datafixers.util.Function6$$Lambda$3944.0x00007f8160837468::<init>(com.mojang.datafixers.util.Function6) -> void
fifo write: @1699477102455260662 0x7f81e1f0ed14 279: cmg$a::<init>(cjf) -> void
fifo write: @1699477102455340773 0x7f81e1f0e357 1155: com.mojang.datafixers.util.Function6::curry3() -> com.mojang.datafixers.util.Function3
fifo write: @1699477102455446625 0x7f81e1f0d777 1488: com.mojang.datafixers.util.Function6$$Lambda$3944.0x00007f8160837468::apply(Object, Object, Object) -> Object
fifo write: @1699477102455577866 0x7f81e16635b7 2038: hn::set(int, Object) -> Object
fifo write: @1699477102455645997 0x7f81e1f0d19d 364: com.mojang.datafixers.util.Function6$$Lambda$3945.0x00007f81608376b0::apply(Object, Object, Object) -> Object
fifo write: @1699477102455727738 0x7f81e1c02d14 183: com.mojang.datafixers.util.Function6::lambda$curry3$4(Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477102455799609 0x7f81e1662f14 320: com.mojang.datafixers.util.Function6$$Lambda$3945.0x00007f81608376b0::<init>(com.mojang.datafixers.util.Function6, Object, Object, Object) -> void
fifo write: @1699477102455891360 0x7f81e16620f7 1451: com.mojang.datafixers.util.Function6::lambda$curry3$5(Object, Object, Object) -> com.mojang.datafixers.util.Function3
fifo write: @1699477102455953751 0x7f81e91982cc 6: cmk::b() -> cmj
fifo write: @1699477102456269675 0x7f81e17ea694 302: java.util.stream.SpinedBuffer::capacity() -> long
fifo write: @1699477102456514958 0x7f81e17e9b74 1625: cmg$c$$Lambda$1560.0x00007f816059a940::apply(Object) -> Object
fifo write: @1699477102456615830 0x7f81e17e91b4 1287: cmg$c::a(com.mojang.datafixers.util.Either) -> cmg$c
fifo write: @1699477102456670780 0x7f81e17e8bef 455: cma$$Lambda$1551.0x00007f8160598fc0::apply(Object) -> Object
fifo write: @1699477102456748151 0x7f81e1b5f194 387: cmg$c$$Lambda$5212.0x00007f81609a1ab8::apply(Object) -> Object
fifo write: @1699477102456807582 0x7f81e1b5e37a 1783: cma::a(cja) -> com.mojang.serialization.DataResult
fifo write: @1699477102456870323 0x7f81e1b5d337 2124: cma$$Lambda$1550.0x00007f8160598d80::apply(Object) -> Object
fifo write: @1699477102457281268 0x7f81e91979b3 1124: java.util.Arrays::fill(Object[], Object) -> void
fifo write: @1699477102457336739 0x7f81e1950203 636: cmg$a$$Lambda$1554.0x00007f8160599680::apply(Object) -> Object
fifo write: @1699477102457579942 0x7f81e194fd14 185: cmg::<init>(cmg$c[]) -> void
fifo write: @1699477102457675023 0x7f81e194f1f4 1597: cmg$$Lambda$1564.0x00007f816059b778::apply(Object) -> Object
fifo write: @1699477102457766734 0x7f81e194e934 881: com.mojang.datafixers.util.Either$Right::right() -> java.util.Optional
fifo write: @1699477102457852415 0x7f81e1e30834 1259: cmg::a(com.mojang.datafixers.util.Either) -> cmg
fifo write: @1699477102457934897 0x7f81e194e414 356: cmg$$Lambda$5217.0x00007f81609a25f8::apply(Object) -> Object
fifo write: @1699477102458015048 0x7f81e1e301b7 553: arf$b$$Lambda$5215.0x00007f81609a2178::apply(Object) -> Object
fifo write: @1699477102458082918 0x7f81e1e2f9ea 857: cmg::a(cmg$c) -> cmg
fifo write: @1699477102458140149 0x7f81e91976cc 6: arf$e::keyCodec() -> com.mojang.serialization.Codec
fifo write: @1699477102458181230 0x7f81e91973cc 6: arf$e::elementCodec() -> com.mojang.serialization.Codec
fifo write: @1699477102458247861 0x7f81e1e2ec5a 1592: arf$b::a(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477102458309711 0x7f81e1d1fe97 2022: arf$b$$Lambda$5214.0x00007f81609a1f38::apply(Object) -> Object
fifo write: @1699477102458990420 0x7f81e1900ed7 9068: arf$b::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102459155642 0x7f81e1d1e441 3735: java.util.stream.SpinedBuffer::ensureCapacity(long) -> void
fifo write: @1699477102459484236 0x7f81e202c1dc 2976: arn::i(com.google.gson.JsonObject, String) -> String
fifo write: @1699477102459528857 0x7f81e202b454 1563: java.util.stream.SpinedBuffer::clear() -> void
fifo write: @1699477102460110364 0x7f81e203317f 1769: cmp::b(String) -> int
fifo write: @1699477102460206255 0x7f81e20321df 1729: cmp::a(String) -> int
fifo write: @1699477102460273156 0x7f81e202ae94 334: java.util.Optional::orElseThrow() -> Object
fifo write: @1699477102460381918 0x7f81e2031637 1106: arn::m(com.google.gson.JsonElement, String) -> com.google.gson.JsonObject
fifo write: @1699477102460452979 0x7f81e18e8714 185: cml$$Lambda$5210.0x00007f81609a1650::<init>(String) -> void
fifo write: @1699477102460498649 0x7f81e18e8194 324: cmk::<init>(aew, cmj) -> void
fifo write: @1699477102460529290 0x7f81e18e7cf4 157: cmg::c() -> boolean
fifo write: @1699477102460592970 0x7f81e18e7534 725: hq::b(aew) -> java.util.Optional
fifo write: @1699477102460673471 0x7f81e18e6039 2924: ac::a(com.mojang.serialization.DataResult, java.util.function.Function) -> Object
fifo write: @1699477102461049326 0x7f81e14353f4 19: java.util.stream.Nodes$SpinedNodeBuilder::end() -> void
fifo write: @1699477102461123217 0x7f81e1735374 15: java.util.stream.Nodes$SpinedNodeBuilder::build() -> java.util.stream.Node
fifo write: @1699477102461252979 0x7f81e18e5914 239: java.util.stream.Nodes$SpinedNodeBuilder::begin(long) -> void
fifo write: @1699477102461337280 0x7f81e1cf8894 47: java.util.stream.Nodes$SpinedNodeBuilder::asArray(java.util.function.IntFunction) -> Object[]
fifo write: @1699477102461408671 0x7f81e1dcfb94 47: java.util.stream.Nodes$SpinedNodeBuilder::copyInto(Object[], int) -> void
fifo write: @1699477102461494832 0x7f81e1fbef57 1333: java.util.stream.SpinedBuffer::asArray(java.util.function.IntFunction) -> Object[]
fifo write: @1699477102461554883 0x7f81e1fbdd29 2371: java.util.stream.SpinedBuffer::copyInto(Object[], int) -> void
fifo write: @1699477102462096170 0x7f81e14d3367 10311: cml::a(aew, com.google.gson.JsonObject) -> cmk
fifo write: @1699477102462424934 0x7f81e1fbd794 324: cmp$a$$Lambda$1765.0x00007f81605db518::apply(Object) -> Object
fifo write: @1699477102462618126 0x7f81e1fbd11a 508: arf$e$$Lambda$5223.0x00007f81609a3778::apply(Object, Object) -> Object
fifo write: @1699477102462714768 0x7f81e1fbc812 638: cma$$Lambda$1549.0x00007f8160598b50::apply(Object, Object) -> Object
fifo write: @1699477102462761738 0x7f81e207f894 425: hn::<init>(java.util.List, Object) -> void
fifo write: @1699477102462837259 0x7f81e207e4d7 2670: cmp$a::b(String) -> com.mojang.serialization.DataResult
fifo write: @1699477102462905220 0x7f81e207d437 2124: cma$$Lambda$1543.0x00007f8160597ba8::apply(Object) -> Object
fifo write: @1699477102462970111 0x7f81e1dba1fa 1783: cma::b(cja) -> com.mojang.serialization.DataResult
fifo write: @1699477102464039055 0x7f81e207cdf4 350: cmq$a::a(cmg) -> boolean
fifo write: @1699477102464089875 0x7f81e1db9a14 694: cmq$a$$Lambda$5218.0x00007f81609a2838::test(Object) -> boolean
fifo write: @1699477102464673953 0x7f81e90c80b4 1127: com.google.gson.internal.LazilyParsedNumber::intValue() -> int
fifo write: @1699477102465493154 0x7f81e961c112 9845: jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer::floatValue() -> float
fifo write: @1699477102465613085 0x7f81e14b099f 6190: cmp::a(java.util.List) -> String[]
fifo write: @1699477102465654786 0x7f81e14b0394 167: com.google.common.collect.ImmutableMap::keySet() -> java.util.Set
fifo write: @1699477102465703336 0x7f81e14afe14 335: com.google.common.collect.ImmutableMap::keySet() -> com.google.common.collect.ImmutableSet
fifo write: @1699477102466114582 0x7f81e1db9494 293: com.google.common.collect.RegularImmutableMap$KeySet::get(int) -> Object
fifo write: @1699477102466376445 0x7f81e1db8f94 230: arf$e$$Lambda$5222.0x00007f81609a3530::<init>(arf$e, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477102466451266 0x7f81e1db8994 477: arf$e$$Lambda$5222.0x00007f81609a3530::apply(Object) -> Object
fifo write: @1699477102466721469 0x7f81e1c1ba1f 9338: cmp$a::a(cmp$a$a) -> com.mojang.serialization.DataResult
fifo write: @1699477102466800830 0x7f81e1db8514 185: arf$e$$Lambda$5224.0x00007f81609a39a8::<init>(Object) -> void
fifo write: @1699477102466915382 0x7f81e1eaf094 31: arf$e::a(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102467000333 0x7f81e1db7cb7 887: arf$e$$Lambda$5224.0x00007f81609a39a8::apply(Object) -> Object
fifo write: @1699477102467062274 0x7f81e189aa7a 508: arf$e::a(Object, java.util.Map) -> com.mojang.datafixers.util.Pair
fifo write: @1699477102467108794 0x7f81e189a594 356: cmp$a$$Lambda$1763.0x00007f81605db098::apply(Object) -> Object
fifo write: @1699477102467170825 0x7f81e1899e94 479: cmp$a$a::<init>(String, cly, java.util.Map, java.util.List, cjf, boolean) -> void
fifo write: @1699477102467271077 0x7f81e189ce77 5867: cmp$a::a(java.util.List) -> com.mojang.serialization.DataResult
fifo write: @1699477102467353598 0x7f81e189c0bd 1703: cmp$a$a$$Lambda$1775.0x00007f81605dd900::apply(Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477102467614871 0x7f81e20416ca 9409: arf$e::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102467655382 0x7f81e2040e94 172: com.google.common.collect.RegularImmutableMap$KeySet::size() -> int
fifo write: @1699477102467979976 0x7f81e1f72227 8514: arf$e::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102468035046 0x7f81e90c7d4c 6: clx::c() -> String
fifo write: @1699477102468691735 0x7f81e90c783f 160: com.google.common.collect.RegularImmutableMap::checkNoConflictInKeyBucket(Object, Object, com.google.common.collect.ImmutableMapEntry, boolean) -> com.google.common.collect.ImmutableMapEntry
fifo write: @1699477102469926061 0x7f81e90c754c 6: cmv$a::a() -> com.mojang.serialization.Codec
fifo write: @1699477102469995632 0x7f81e189b897 615: rb::a(int) -> rb
fifo write: @1699477102470036792 0x7f81e90c724c 6: cmv::e() -> cmn
fifo write: @1699477102470541569 0x7f81e1f71b14 240: com.google.common.collect.IndexedImmutableSet$1::get(int) -> Object
fifo write: @1699477102470659030 0x7f81e1899814 349: cmp::<init>(String, cly, int, int, hn, cjf, boolean) -> void
fifo write: @1699477102470766542 0x7f81e90c6290 1302: com.mojang.serialization.DataResult$$Lambda$1041.0x00007f81604343a8::apply(Object) -> Object
fifo write: @1699477102470813832 0x7f81e1899314 324: cmp$a$$Lambda$1777.0x00007f81605dddb0::apply(Object) -> Object
fifo write: @1699477102470929934 0x7f81e1897bf7 3377: hn::a(int, Object) -> hn
fifo write: @1699477102472008328 0x7f81e90c58f0 778: com.mojang.serialization.DataResult$$Lambda$3759.0x00007f81607bcb20::get() -> Object
fifo write: @1699477102472709627 0x7f81e1b38157 1172: com.google.common.collect.SingletonImmutableBiMap::createKeySet() -> com.google.common.collect.ImmutableSet
fifo write: @1699477102474520410 0x7f81e90c554c 59: java.lang.reflect.Array::newInstance(Class, int) -> Object
fifo write: @1699477102475367531 0x7f81e1b37b34 516: com.google.common.collect.IndexedImmutableSet::<init>() -> void
fifo write: @1699477102475473712 0x7f81e1b3730a 765: com.google.common.collect.RegularImmutableMap::createKeySet() -> com.google.common.collect.ImmutableSet
fifo write: @1699477102475584474 0x7f81e1b36bb7 658: com.google.common.collect.RegularImmutableMap$KeySet::<init>(com.google.common.collect.RegularImmutableMap) -> void
fifo write: @1699477102475658615 0x7f81e1b36614 284: com.google.common.collect.IndexedImmutableSet$1::size() -> int
fifo write: @1699477102475726476 0x7f81e1b35f06 726: com.google.common.collect.IndexedImmutableSet::createAsList() -> com.google.common.collect.ImmutableList
fifo write: @1699477102475783046 0x7f81e1b357b4 616: com.google.common.collect.IndexedImmutableSet$1::<init>(com.google.common.collect.IndexedImmutableSet) -> void
fifo write: @1699477102475846617 0x7f81e1b34bda 1616: com.google.common.collect.IndexedImmutableSet::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477102475909648 0x7f81e1f15e7a 1841: com.google.common.collect.IndexedImmutableSet::iterator() -> java.util.Iterator
fifo write: @1699477102476009359 0x7f81e95a07fc 641: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$1::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102477659801 0x7f81e90c514c 6: org.apache.logging.log4j.core.LoggerContext::getConfiguration() -> org.apache.logging.log4j.core.config.Configuration
fifo write: @1699477102477702161 0x7f81e90c4d4c 6: org.apache.logging.log4j.spi.AbstractLogger::getName() -> String
fifo write: @1699477102477754152 0x7f81e95a04cc 6: org.apache.logging.log4j.core.config.AppenderControlArraySet::get() -> org.apache.logging.log4j.core.config.AppenderControl[]
fifo write: @1699477102480617739 0x7f81e9622abd 13406: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::add(Object) -> com.google.common.collect.ImmutableSet$SetBuilderImpl
fifo write: @1699477102480634189 0x7f81e8be0080 472: I2C/C2I adapters(0xbbb66ab)
fifo write: @1699477102480647739 0x7f81e8be2280 464: I2C/C2I adapters(0xbbb66a)
fifo write: @1699477102480661179 0x7f81e8be1f80 464: I2C/C2I adapters(0xbb66ab)
fifo write: @1699477102481636842 0x7f81e1b34517 534: java.util.IdentityHashMap::<init>() -> void
fifo write: @1699477102487641100 0x7f81e1f130dc 7264: com.google.gson.internal.bind.JsonTreeReader::peek() -> com.google.gson.stream.JsonToken
fifo write: @1699477102488334208 0x7f81e959f372 1095: java.security.Provider$ServiceKey::hashCode() -> int
fifo write: @1699477102489038918 0x7f81e1f02374 104: com.google.gson.JsonArray::size() -> int
fifo write: @1699477102489214170 0x7f81e959eebc 139: java.lang.invoke.LambdaForm$MH.0x00007f81600d9400::invoke(Object, long) -> Object
fifo write: @1699477102490207273 0x7f81e959e639 734: StringConcatHelper::newArrayWithSuffix(String, long) -> byte[]
fifo write: @1699477102490492836 0x7f81e1f12a74 90: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet$SetIterator::hasNext() -> boolean
fifo write: @1699477102490709069 0x7f81e1f11bc1 2216: cb$$Lambda$2022.0x00007f816061d480::apply(Object, Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477102490812790 0x7f81e19d0bb4 620: cb::<init>(java.util.Optional, java.util.Optional, cl$d, cl$d, java.util.List, java.util.List, java.util.Optional, java.util.Optional) -> void
fifo write: @1699477102490919672 0x7f81e959e150 175: com.google.gson.JsonObject::get(String) -> com.google.gson.JsonElement
fifo write: @1699477102491011283 0x7f81e19d0257 954: com.google.gson.JsonArray::get(int) -> com.google.gson.JsonElement
fifo write: @1699477102491272026 0x7f81e19cf5d4 1139: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet$SetIterator::next() -> Object
fifo write: @1699477102491674452 0x7f81e19cebb7 1106: arn::n(com.google.gson.JsonElement, String) -> com.google.gson.JsonArray
fifo write: @1699477102491844544 0x7f81e19cd6bc 2722: arn::a(com.google.gson.JsonObject, String, com.google.gson.JsonObject) -> com.google.gson.JsonObject
fifo write: @1699477102491978526 0x7f81e204c797 4080: cl$d::a(com.google.gson.JsonElement) -> cl$d
fifo write: @1699477102492044226 0x7f81e959dcbb 132: java.lang.invoke.LambdaForm$MH.0x00007f816011b000::invoke(Object, int) -> long
fifo write: @1699477102492091807 0x7f81e19cd194 185: com.mojang.serialization.codecs.ListCodec::<init>(com.mojang.serialization.Codec) -> void
fifo write: @1699477102492162078 0x7f81e19ccc43 292: com.mojang.serialization.Codec::list(com.mojang.serialization.Codec) -> com.mojang.serialization.Codec
fifo write: @1699477102492253789 0x7f81e204b1bc 2722: arn::a(com.google.gson.JsonObject, String, com.google.gson.JsonArray) -> com.google.gson.JsonArray
fifo write: @1699477102492302370 0x7f81e959d9cc 6: com.google.gson.reflect.TypeToken::getType() -> java.lang.reflect.Type
fifo write: @1699477102492503802 0x7f81e19cc617 459: com.mojang.serialization.Codec::listOf() -> com.mojang.serialization.Codec
fifo write: @1699477102492708255 0x7f81e959c773 2286: com.google.common.collect.ImmutableCollection::toArray(Object[]) -> Object[]
fifo write: @1699477102493234372 0x7f81e204ab94 411: java.util.HashMap$KeySet::contains(Object) -> boolean
fifo write: @1699477102493458235 0x7f81e2049a9e 2001: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::add(Object) -> boolean
fifo write: @1699477102493560806 0x7f81e2049037 934: bq::a(com.google.gson.JsonObject, String, bg) -> java.util.Optional
fifo write: @1699477102493882850 0x7f81e9629c1c 7395: java.util.WeakHashMap::put(Object, Object) -> Object
fifo write: @1699477102494028622 0x7f81e204795c 2968: arn::u(com.google.gson.JsonObject, String) -> com.google.gson.JsonObject
fifo write: @1699477102494107643 0x7f81e2046b5c 1271: al::a(aew) -> ao
fifo write: @1699477102494249995 0x7f81e18f38d9 3055: bq::a(String, bg, com.google.gson.JsonElement) -> java.util.Optional
fifo write: @1699477102494327116 0x7f81e19cc214 31: cw::a(com.google.gson.JsonObject, bg) -> ap
fifo write: @1699477102494490508 0x7f81e18f1a4f 4210: am::a(com.google.gson.JsonObject, bg, ao) -> am
fifo write: @1699477102494558319 0x7f81e18f1494 185: at::<init>(java.util.Optional) -> void
fifo write: @1699477102494666550 0x7f81e18f0977 1191: cw::b(com.google.gson.JsonObject, bg) -> cw$a
fifo write: @1699477102494728511 0x7f81e18f0394 324: am::<init>(ao, ap) -> void
fifo write: @1699477102494779352 0x7f81e18efe94 269: com.google.gson.JsonArray::isEmpty() -> boolean
fifo write: @1699477102494830452 0x7f81e959c44c 2: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::size() -> int
fifo write: @1699477102494951344 0x7f81e18eee97 1940: uh$b::a(com.google.gson.JsonObject, String) -> Boolean
fifo write: @1699477102495038675 0x7f81e959bfb9 178: java.lang.invoke.LambdaForm$MH.0x00007f816011a400::invoke(Object, long, Object, int) -> long
fifo write: @1699477102495182007 0x7f81e203b877 5471: bq::a(com.google.gson.JsonElement) -> java.util.Optional
fifo write: @1699477102495400390 0x7f81e20387da 6412: am::a(com.google.gson.JsonObject, bg) -> am
fifo write: @1699477102495910136 0x7f81e959bb3d 178: StringConcatHelper::mix(long, int) -> long
fifo write: @1699477102496466773 0x7f81e180b46f 16136: bc::a(String, bg, com.google.gson.JsonElement, eez) -> java.util.Optional
fifo write: @1699477102496551375 0x7f81e962d4d0 87: com.google.gson.JsonObject::has(String) -> boolean
fifo write: @1699477102496591505 0x7f81e962d8d0 35: java.util.HashMap$EntrySet::size() -> int
fifo write: @1699477102496647216 0x7f81e962dbd6 69: java.lang.invoke.Invokers$Holder::linkToTargetMethod(int, Object) -> Object
fifo write: @1699477102496901659 0x7f81e962df50 79: com.mojang.brigadier.StringReader::canRead(int) -> boolean
fifo write: @1699477102497138782 0x7f81e1893cf4 63: java.util.HashMap$KeySet::size() -> int
fifo write: @1699477102497307144 0x7f81e180a6d4 971: cb$$Lambda$1996.0x00007f8160619eb8::apply(Object) -> Object
fifo write: @1699477102497890792 0x7f81e1809cb7 1114: arn::c(com.google.gson.JsonElement, String) -> boolean
fifo write: @1699477102498150175 0x7f81e18ed93c 2738: arn::a(com.google.gson.JsonObject, String, boolean) -> boolean
fifo write: @1699477102498297027 0x7f81e962e2ea 283: com.google.gson.JsonArray::<init>() -> void
fifo write: @1699477102498790053 0x7f81e18ed414 234: java.util.ImmutableCollections$AbstractImmutableMap::<init>() -> void
fifo write: @1699477102498980256 0x7f81e962e74c 6: ty::a() -> uh
fifo write: @1699477102499079697 0x7f81e18ed014 31: bz::b(com.google.gson.JsonObject, java.util.Optional, bg) -> cw$a
fifo write: @1699477102499198979 0x7f81e1809594 459: bz$a::<init>(java.util.Optional, cl$d, cl$d, cl$d, java.util.List) -> void
fifo write: @1699477102499361561 0x7f81e2037bb4 1238: java.util.Map::copyOf(java.util.Map) -> java.util.Map
fifo write: @1699477102499492653 0x7f81e18ecb34 39: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::<init>() -> void
fifo write: @1699477102499778386 0x7f81e203617c 3947: java.util.Map::ofEntries(java.util.Map$Entry[]) -> java.util.Map
fifo write: @1699477102500037380 0x7f81e1dc2981 4579: java.util.ImmutableCollections$MapN::<init>(Object[]) -> void
fifo write: @1699477102500301183 0x7f81e1dbf2a7 7567: bz::a(com.google.gson.JsonObject, java.util.Optional, bg) -> bz$a
fifo write: @1699477102500524886 0x7f81e19d8eda 9905: cb::b(com.google.gson.JsonElement) -> java.util.List
fifo write: @1699477102500662538 0x7f81e1dbd59f 3941: am::b(com.google.gson.JsonObject, bg) -> java.util.Map
fifo write: @1699477102500727038 0x7f81e1809094 279: ai::<init>(String[]) -> void
fifo write: @1699477102500867910 0x7f81e1dbc53c 1848: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::<init>(int, float) -> void
fifo write: @1699477102500928081 0x7f81e2035b94 230: bg::<init>(aew, ect) -> void
fifo write: @1699477102501009102 0x7f81e1dbbe16 616: afi$$Lambda$5231.0x00007f81609a4d80::accept(Object, Object) -> void
fifo write: @1699477102501078803 0x7f81e1dbb814 278: aj::<init>(int, aew[], aew[], dp$a) -> void
fifo write: @1699477102501164664 0x7f81e19d7609 2845: afi::a(com.google.common.collect.ImmutableMap$Builder, aew, com.google.gson.JsonElement) -> void
fifo write: @1699477102501233155 0x7f81e19d66fc 1582: arn::a(com.google.gson.JsonObject, String, int) -> int
fifo write: @1699477102502716894 0x7f81e19d4dc6 3208: rr::a(String) -> qw
fifo write: @1699477102503231411 0x7f81e1c09187 21888: ai::a(com.google.gson.JsonArray, java.util.Set) -> ai
fifo write: @1699477102503610446 0x7f81e1eb8e07 24845: ae::a(com.google.gson.JsonObject, bg) -> ae
fifo write: @1699477102504208683 0x7f81e2035594 31: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.objects.ObjectOpenHashSet, it.unimi.dsi.fastutil.objects.ObjectOpenHashSet$1) -> void
fifo write: @1699477102504290974 0x7f81e1c08417 399: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::iterator() -> java.util.Iterator
fifo write: @1699477102504376166 0x7f81e1c07f6f 198: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477102504442946 0x7f81e1eb79f4 1471: java.util.AbstractSet::equals(Object) -> boolean
fifo write: @1699477102504500637 0x7f81e1c07794 280: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.objects.ObjectOpenHashSet) -> void
fifo write: @1699477102504587048 0x7f81e1eb71b4 530: ae::<init>(java.util.Optional, java.util.Optional, aj, java.util.Map, ai, boolean, java.util.Optional) -> void
fifo write: @1699477102504669949 0x7f81e19d43b4 621: uh::<init>(uj, Boolean, Boolean, Boolean, Boolean, Boolean, tj, tq, String, aew) -> void
fifo write: @1699477102505239787 0x7f81e20edb3f 29840: aj::a(com.google.gson.JsonObject) -> aj
fifo write: @1699477102505325588 0x7f81e1eb6d94 47: cu::b(com.google.gson.JsonObject, java.util.Optional, bg) -> cw$a
fifo write: @1699477102505371308 0x7f81e19d3e14 324: cu$a::<init>(java.util.Optional, aew) -> void
fifo write: @1699477102505861984 0x7f81e1da63ff 3248: ae::<init>(java.util.Optional, java.util.Optional, aj, java.util.Map, ai, boolean) -> void
fifo write: @1699477102505953046 0x7f81e19d36f4 600: com.mojang.brigadier.StringReader::isAllowedInUnquotedString(char) -> boolean
fifo write: @1699477102506150488 0x7f81e1da3bd2 5393: cu::a(com.google.gson.JsonObject, java.util.Optional, bg) -> cu$a
fifo write: @1699477102506338611 0x7f81e1808cf4 44: ty::b(uh) -> ty
fifo write: @1699477102507794349 0x7f81e962ee83 945: ecz::<init>(com.google.common.collect.Multimap, java.util.function.Supplier, eez, ecu, java.util.Set) -> void
fifo write: @1699477102507929831 0x7f81e19d3137 366: com.google.gson.Gson::fromJson(com.google.gson.JsonElement, com.google.gson.reflect.TypeToken) -> Object
fifo write: @1699477102508019952 0x7f81e1da3134 884: com.google.gson.internal.bind.JsonTreeReader::<init>(com.google.gson.JsonElement) -> void
fifo write: @1699477102508185164 0x7f81e1da2757 1078: cjf::w() -> qw
fifo write: @1699477102508254005 0x7f81e1da1cd4 1076: cjf::k() -> int
fifo write: @1699477102508512178 0x7f81e1d9ffdc 3029: com.google.gson.Gson::fromJson(com.google.gson.stream.JsonReader, com.google.gson.reflect.TypeToken) -> Object
fifo write: @1699477102508631810 0x7f81e1d9e9bc 2730: arn::a(com.google.gson.JsonObject, String, String) -> String
fifo write: @1699477102508713501 0x7f81e1d9ddf4 1316: com.google.gson.internal.bind.TreeTypeAdapter::read(com.google.gson.stream.JsonReader) -> Object
fifo write: @1699477102508775422 0x7f81e20f9f37 2359: cjf::b(int) -> void
fifo write: @1699477102508818032 0x7f81e962f7d0 87: com.google.gson.internal.bind.JsonTreeReader::peekStack() -> Object
fifo write: @1699477102508906153 0x7f81e20fb217 2623: com.google.gson.internal.bind.JsonTreeReader::nextJsonElement() -> com.google.gson.JsonElement
fifo write: @1699477102508950924 0x7f81e19d2914 474: com.google.gson.internal.bind.JsonTreeReader::popStack() -> Object
fifo write: @1699477102509011225 0x7f81e20fc779 734: com.google.gson.internal.bind.JsonTreeReader::skipValue() -> void
fifo write: @1699477102510017628 0x7f81e962fb4c 6: ty::b() -> tm
fifo write: @1699477102510053108 0x7f81e962fe4c 6: ty::c() -> java.util.List
fifo write: @1699477102511185983 0x7f81e963014c 6: uh::a() -> uj
fifo write: @1699477102511516407 0x7f81e20fd0f9 1510: com.google.gson.internal.bind.JsonTreeReader::push(Object) -> void
fifo write: @1699477102511569108 0x7f81e963044c 6: ecq$b::a() -> eey
fifo write: @1699477102512179236 0x7f81e9630750 443: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet$SetIterator::next() -> Object
fifo write: @1699477102512872574 0x7f81e9630fd4 87: java.util.regex.Pattern$BitClass::is(int) -> boolean
fifo write: @1699477102514261202 0x7f81e9631373 324: com.mojang.brigadier.StringReader::skipWhitespace() -> void
fifo write: @1699477102514317033 0x7f81e9631b4c 6: ecq$b::c() -> String
fifo write: @1699477102514484675 0x7f81e1eb6994 137: com.google.common.collect.AbstractMultimap::<init>() -> void
fifo write: @1699477102514628417 0x7f81e9631e4c 2: com.google.common.collect.AbstractMapBasedMultimap::size() -> int
fifo write: @1699477102514676218 0x7f81e963214c 6: com.google.common.collect.ImmutableMultimap::asMap() -> com.google.common.collect.ImmutableMap
fifo write: @1699477102514889330 0x7f81e1d9d894 332: aqh$$Lambda$2246.0x00007f816064b770::apply(Object) -> Object
fifo write: @1699477102515505448 0x7f81e20fde1a 1001: com.google.common.collect.ImmutableSet::of(Object, Object) -> com.google.common.collect.ImmutableSet
fifo write: @1699477102515645490 0x7f81e9632473 100: com.mojang.datafixers.kinds.Applicative$$Lambda$3918.0x00007f816082b868::apply(Object) -> Object
fifo write: @1699477102515809762 0x7f81e20fe6be 878: com.google.common.collect.AbstractMapBasedMultimap::<init>(java.util.Map) -> void
fifo write: @1699477102515908494 0x7f81e20fef5e 967: com.google.common.collect.AbstractSetMultimap::<init>(java.util.Map) -> void
fifo write: @1699477102516017005 0x7f81e20ff837 423: com.google.common.collect.Platform::newHashMapWithExpectedSize(int) -> java.util.Map
fifo write: @1699477102516170827 0x7f81e20fff13 2187: com.google.common.collect.HashMultimap::create() -> com.google.common.collect.HashMultimap
fifo write: @1699477102516242228 0x7f81e2101093 242: com.google.common.collect.Maps::newHashMapWithExpectedSize(int) -> java.util.HashMap
fifo write: @1699477102516322439 0x7f81e210165f 2065: com.google.common.collect.HashMultimap::<init>() -> void
fifo write: @1699477102516379610 0x7f81e21026e1 1061: com.google.common.collect.HashMultimapGwtSerializationDependencies::<init>(java.util.Map) -> void
fifo write: @1699477102516601383 0x7f81e210327f 7543: aqh::a(aev, String) -> com.mojang.serialization.DataResult
fifo write: @1699477102516715314 0x7f81e21064e9 2244: com.google.common.collect.HashMultimap::<init>(int, int) -> void
fifo write: @1699477102516795995 0x7f81e2107614 505: com.mojang.datafixers.kinds.Applicative$$Lambda$2359.0x00007f81606676d0::apply(Object) -> Object
fifo write: @1699477102516961797 0x7f81e9632823 1960: com.mojang.serialization.DataResult$Instance::map(java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477102517017138 0x7f81e2107c57 1155: com.mojang.datafixers.util.Function7::curry3() -> com.mojang.datafixers.util.Function3
fifo write: @1699477102517069959 0x7f81e2108614 185: com.mojang.datafixers.util.Function7$$Lambda$3913.0x00007f816082ad28::<init>(com.mojang.datafixers.util.Function7) -> void
fifo write: @1699477102517123169 0x7f81e2108b0a 1108: java.util.Set::of(Object) -> java.util.Set
fifo write: @1699477102517245231 0x7f81e9633d5e 1381: com.mojang.serialization.codecs.KeyDispatchCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102517332532 0x7f81e2109494 320: com.mojang.datafixers.util.Function7$$Lambda$3916.0x00007f816082b3d0::<init>(com.mojang.datafixers.util.Function7, Object, Object, Object) -> void
fifo write: @1699477102517410653 0x7f81e2109af7 1488: com.mojang.datafixers.util.Function7$$Lambda$3913.0x00007f816082ad28::apply(Object, Object, Object) -> Object
fifo write: @1699477102517485894 0x7f81e210a6f7 1451: com.mojang.datafixers.util.Function7::lambda$curry3$5(Object, Object, Object) -> com.mojang.datafixers.util.Function4
fifo write: @1699477102517524385 0x7f81e1d9d497 36: java.util.regex.Pattern$$Lambda$253.0x00007f81601c1fd8::is(int) -> boolean
fifo write: @1699477102517811958 0x7f81e210b3d4 1940: java.util.regex.Pattern::lambda$CIRange$12(int, int, int) -> boolean
fifo write: @1699477102520394742 0x7f81e210c347 101: com.google.gson.reflect.TypeToken::get(java.lang.reflect.Type) -> com.google.gson.reflect.TypeToken
fifo write: @1699477102520511523 0x7f81e9635075 822: java.util.regex.Matcher::matches() -> boolean
fifo write: @1699477102521281383 0x7f81e9635d97 1475: com.mojang.serialization.JsonOps::getList(com.google.gson.JsonElement) -> com.mojang.serialization.DataResult
fifo write: @1699477102522777922 0x7f81e9637050 35: java.util.HashMap$KeySet::size() -> int
fifo write: @1699477102523387060 0x7f81e963735c 18: com.mojang.datafixers.util.Function4::lambda$curry2$2(Object, Object, Object, Object) -> Object
fifo write: @1699477102523428391 0x7f81e210c714 125: efs::a() -> java.util.Set
fifo write: @1699477102523551272 0x7f81e9637683 46: com.mojang.datafixers.util.Function4::curry2() -> java.util.function.BiFunction
fifo write: @1699477102527541764 0x7f81e963819c 35183: java.nio.file.FileTreeIterator::fetchNextIfNeeded() -> void
fifo write: @1699477102527648845 0x7f81e964e156 201: com.mojang.datafixers.util.Function4$$Lambda$3920.0x00007f816082bce0::apply(Object, Object) -> Object
fifo write: @1699477102527729596 0x7f81e210cb94 293: com.google.common.collect.RegularImmutableMap$Values::get(int) -> Object
fifo write: @1699477102527830718 0x7f81e964e5d9 242: com.mojang.datafixers.util.Function4$$Lambda$3919.0x00007f816082baa8::apply(Object, Object) -> Object
fifo write: @1699477102527885498 0x7f81e964eb4c 6: af::b() -> ae
fifo write: @1699477102527947709 0x7f81e964ee4c 6: ae::c() -> java.util.Optional
fifo write: @1699477102527999780 0x7f81e210d114 348: ak$$Lambda$5252.0x00007f81609b67d8::test(Object) -> boolean
fifo write: @1699477102528043480 0x7f81e210d694 185: ak$$Lambda$5253.0x00007f81609b6c70::<init>(java.util.Map) -> void
fifo write: @1699477102528107971 0x7f81e210db9e 1713: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::get(Object) -> Object
fifo write: @1699477102528154222 0x7f81e210eb14 481: ak$$Lambda$5253.0x00007f81609b6c70::apply(Object) -> Object
fifo write: @1699477102528239853 0x7f81e210f307 6187: ak::b(af) -> boolean
fifo write: @1699477102528285273 0x7f81e964f164 11: java.util.ArrayList::elementAt(Object[], int) -> Object
fifo write: @1699477102528324404 0x7f81e2111d34 833: ag::equals(Object) -> boolean
fifo write: @1699477102528362934 0x7f81e2112534 857: af::equals(Object) -> boolean
fifo write: @1699477102528398415 0x7f81e2112d74 209: java.util.ArrayList::isClear(long[], int) -> boolean
fifo write: @1699477102528434405 0x7f81e2113234 402: ag::hashCode() -> int
fifo write: @1699477102528478926 0x7f81e2113934 300: af::hashCode() -> int
fifo write: @1699477102528520056 0x7f81e2113f14 328: it.unimi.dsi.fastutil.objects.AbstractReferenceSet::<init>() -> void
fifo write: @1699477102528574217 0x7f81e2114434 39: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet::<init>() -> void
fifo write: @1699477102528882391 0x7f81e964f5d5 7958: com.mojang.serialization.MapCodec$MapCodecCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102528928402 0x7f81e2114814 234: it.unimi.dsi.fastutil.objects.AbstractReferenceCollection::<init>() -> void
fifo write: @1699477102528972522 0x7f81e2114c54 122: java.util.ArrayList::setBit(long[], int) -> void
fifo write: @1699477102529056263 0x7f81e2115144 2379: it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet::add(Object) -> boolean
fifo write: @1699477102529117164 0x7f81e2116579 1423: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet::add(Object) -> boolean
fifo write: @1699477102529174245 0x7f81e211733c 1848: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet::<init>(int, float) -> void
fifo write: @1699477102529357667 0x7f81e8be1c80 448: I2C/C2I adapters(0xb6a6)
fifo write: @1699477102529810553 0x7f81e9653ecc 6: ae::d() -> java.util.Optional
fifo write: @1699477102529982475 0x7f81e2118274 91: ag::a() -> ae
fifo write: @1699477102530028396 0x7f81e2118674 90: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet$SetIterator::hasNext() -> boolean
fifo write: @1699477102530389931 0x7f81e96541e8 45: com.google.common.collect.Lists::newArrayList() -> java.util.ArrayList
fifo write: @1699477102531110350 0x7f81e2118ab7 1575: java.util.Set::copyOf(java.util.Collection) -> java.util.Set
fifo write: @1699477102531288742 0x7f81e2119657 1178: hm$$Lambda$5261.0x00007f81609b9b30::accept(Object) -> void
fifo write: @1699477102531348923 0x7f81e211a01d 826: hm::a(java.util.Map, he$c) -> void
fifo write: @1699477102531466545 0x7f81e211a87a 1878: java.util.Set::of(Object[]) -> java.util.Set
fifo write: @1699477102531542285 0x7f81e211b75a 1687: he$c::a(java.util.Collection) -> void
fifo write: @1699477102531664547 0x7f81e211c497 2622: hm$$Lambda$5264.0x00007f81609ba1d8::accept(Object, Object) -> void
fifo write: @1699477102532038472 0x7f81e211d574 87: hh::a(hh) -> boolean
fifo write: @1699477102532099593 0x7f81e211d994 243: he$c::a(hh) -> boolean
fifo write: @1699477102532737131 0x7f81e211de81 1408: java.util.IdentityHashMap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477102532842222 0x7f81e965453c 99: java.lang.invoke.DirectMethodHandle$Holder::invokeSpecial(Object, Object, Object) -> Object
fifo write: @1699477102533193407 0x7f81e9654a07 5206: com.mojang.serialization.MapDecoder::compressedDecode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477102533246827 0x7f81e96579cc 2: java.util.IdentityHashMap::size() -> int
fifo write: @1699477102533335829 0x7f81e9657cd0 1015: com.google.common.collect.Platform::copy(Object[], int, int, Object[]) -> Object[]
fifo write: @1699477102533635353 0x7f81e211ee87 7812: aqh::equals(Object) -> boolean
fifo write: @1699477102533765924 0x7f81e9658530 1561: java.util.Collections$SetFromMap::add(Object) -> boolean
fifo write: @1699477102533873586 0x7f81e9659714 574: java.util.stream.Collectors$$Lambda$108.0x00007f8160171838::accept(Object, Object) -> void
fifo write: @1699477102533936466 0x7f81e965a0cc 6: com.google.common.collect.RegularImmutableSet::internalArray() -> Object[]
fifo write: @1699477102534030198 0x7f81e1897774 63: com.google.common.collect.RegularImmutableSet::internalArrayEnd() -> int
fifo write: @1699477102534104679 0x7f81e2122114 521: afg::a(aev, java.util.Map$Entry) -> aqh
fifo write: @1699477102534181840 0x7f81e2122754 991: afg$$Lambda$5260.0x00007f81609b98f0::apply(Object) -> Object
fifo write: @1699477102534312151 0x7f81e965a709 585: java.util.stream.Collectors::lambda$uniqKeysMapAccumulator$1(java.util.function.Function, java.util.function.Function, java.util.Map, Object) -> void
fifo write: @1699477102534388462 0x7f81e2122fb4 891: afg$$Lambda$5259.0x00007f81609b96a8::apply(Object) -> Object
fifo write: @1699477102534459293 0x7f81e2123794 621: afg::a(java.util.Map$Entry) -> java.util.List
fifo write: @1699477102534555654 0x7f81e2123f06 3294: hm::b(java.util.Map, aqh, java.util.List) -> void
fifo write: @1699477102534633595 0x7f81e2125516 640: hm$$Lambda$5262.0x00007f81609b9d68::accept(Object, Object) -> void
fifo write: @1699477102534704596 0x7f81e2125bb4 477: hi$c::<init>(hh, aqh) -> void
fifo write: @1699477102534771787 0x7f81e212628a 744: hm::d(aqh) -> hi$c
fifo write: @1699477102534837218 0x7f81e2126a94 185: hm$$Lambda$5265.0x00007f81609ba408::<init>(hm) -> void
fifo write: @1699477102534899749 0x7f81e2126f14 225: hi$c::b(java.util.List) -> void
fifo write: @1699477102534969200 0x7f81e2127457 1187: hm$$Lambda$5265.0x00007f81609ba408::apply(Object) -> Object
fifo write: @1699477102535036001 0x7f81e965b0de 606: java.util.ImmutableCollections$Set12::<init>(Object, Object) -> void
fifo write: @1699477102535098881 0x7f81e965b7ba 1183: java.util.Arrays::copyOfRange(Object[], int, int, Class) -> Object[]
fifo write: @1699477102535166812 0x7f81e2127fb7 2650: hm$$Lambda$5263.0x00007f81609b9fa0::accept(Object, Object) -> void
fifo write: @1699477102535220463 0x7f81e965c2d5 618: java.util.HashMap::keysToArray(Object[]) -> Object[]
fifo write: @1699477102535282734 0x7f81e2129297 1994: hm::a(java.util.Map, aqh, java.util.List) -> void
fifo write: @1699477102535357065 0x7f81e212a2a1 3182: java.util.ImmutableCollections$SetN::<init>(Object[]) -> void
fifo write: @1699477102535951912 0x7f81e212ba94 576: com.google.common.collect.ObjectArrays::newArray(Object[], int) -> Object[]
fifo write: @1699477102536521990 0x7f81e965cafa 1973: com.google.common.collect.ImmutableCollection::toArray(Object[]) -> Object[]
fifo write: @1699477102536672462 0x7f81e212c217 633: java.util.HashMap::values() -> java.util.Collection
fifo write: @1699477102538833510 0x7f81e965dd7b 25793: com.google.common.collect.ImmutableSet$Builder::add(Object) -> com.google.common.collect.ImmutableSet$Builder
fifo write: @1699477102538931551 0x7f81e966b984 517: java.util.AbstractCollection::addAll(java.util.Collection) -> boolean
fifo write: @1699477102539012352 0x7f81e212c977 1751: dfi::g(dfj, cpb, gw) -> int
fifo write: @1699477102539105823 0x7f81e212d73d 2703: dfi$a::i(cpb, gw) -> boolean
fifo write: @1699477102539164614 0x7f81e966c319 50: ha$a::values() -> ha$a[]
fifo write: @1699477102539439017 0x7f81e966c9ef 912: java.util.function.Function$$Lambda$289.0x00007f81601c27c8::apply(Object) -> Object
fifo write: @1699477102539605650 0x7f81e966d4b0 904: java.util.HashSet::<init>(java.util.Collection) -> void
fifo write: @1699477102540099936 0x7f81e212eea7 13816: dfi$a$a::<init>(dfj) -> void
fifo write: @1699477102540210927 0x7f81e966e173 2096: java.util.List::copyOf(java.util.Collection) -> java.util.List
fifo write: @1699477102540964247 0x7f81e2134814 473: csw$$Lambda$5266.0x00007f81609ba650::accept(Object) -> void
fifo write: @1699477102541048308 0x7f81e2134d94 232: hk$$Lambda$5267.0x00007f81609ba880::apply(Object) -> boolean
fifo write: @1699477102541147159 0x7f81e213525e 1075: com.google.common.collect.Iterators$5::computeNext() -> Object
fifo write: @1699477102541723037 0x7f81e966f873 1219: aqh::hashCode() -> int
fifo write: @1699477102545933461 0x7f81e9670b95 3059: java.util.Set::of(Object[]) -> java.util.Set
fifo write: @1699477102548218371 0x7f81e9672921 4054: java.util.IdentityHashMap::put(Object, Object) -> Object
fifo write: @1699477102548375413 0x7f81e9674c3a 923: java.util.stream.MatchOps::makeRef(java.util.function.Predicate, java.util.stream.MatchOps$MatchKind) -> java.util.stream.TerminalOp
fifo write: @1699477102551011406 0x7f81e9675723 2577: eid::a(eig, ha) -> eig
fifo write: @1699477102558378191 0x7f81e96776cd 10567: com.mojang.datafixers.kinds.Applicative::ap4(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477102560700981 0x7f81e967f136 1343: com.google.common.cache.LocalCache$LoadingValueReference::loadFuture(Object, com.google.common.cache.CacheLoader) -> com.google.common.util.concurrent.ListenableFuture
fifo write: @1699477102562747608 0x7f81e9680838 9494: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$7::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477102562855029 0x7f81e2135c34 457: java.util.concurrent.locks.ReentrantLock::unlock() -> void
fifo write: @1699477102565239950 0x7f81e9688253 2778: com.google.common.cache.LocalCache$Segment::loadSync(Object, int, com.google.common.cache.LocalCache$LoadingValueReference, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477102567703702 0x7f81e968a754 18: com.google.common.cache.LocalCache$Segment::preWriteCleanup(long) -> void
fifo write: @1699477102568220588 0x7f81e968aa50 131: com.google.common.cache.LocalCache$Segment::postWriteCleanup() -> void
fifo write: @1699477102569387983 0x7f81e968af59 162: dfi$a::i(cpb, gw) -> boolean
fifo write: @1699477102571578942 0x7f81e968b44f 440: java.util.concurrent.locks.ReentrantLock::lock() -> void
fifo write: @1699477102572911759 0x7f81e2136294 623: dfi$a::a(csv) -> boolean
fifo write: @1699477102572979000 0x7f81e2136957 819: cwy::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102574283456 0x7f81e968bad0 135: java.util.stream.MatchOps$$Lambda$715.0x00007f81601dec50::get() -> Object
fifo write: @1699477102578208647 0x7f81e968c27e 377: dfi::g(dfj, cpb, gw) -> int
fifo write: @1699477102578543161 0x7f81e968cad3 408: com.google.common.collect.Iterators$5::computeNext() -> Object
fifo write: @1699477102579523434 0x7f81e21371b7 703: dbs::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102580815151 0x7f81e968d496 9240: dfi$a$a::<init>(dfj) -> void
fifo write: @1699477102580856491 0x7f81e2137917 569: dae::b_(dfj, cpb, gw) -> eig
fifo write: @1699477102581597901 0x7f81e9693035 1144: java.util.stream.MatchOps$MatchOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477102581664332 0x7f81e2138017 569: ctg::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102584512629 0x7f81e96941dd 2380: csw$$Lambda$5266.0x00007f81609ba650::accept(Object) -> void
fifo write: @1699477102585163517 0x7f81e96965bf 8984: com.google.common.cache.LocalCache$Segment::lockedGetOrLoad(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477102592655174 0x7f81e2138774 1806: cwc::c_(dfj) -> eam
fifo write: @1699477102598111683 0x7f81e2139537 632: cvg::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102614467444 0x7f81e2139c7a 1382: cyf::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102615340916 0x7f81e213a8d7 906: cwn::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102616970967 0x7f81e213b214 298: dgn::b() -> boolean
fifo write: @1699477102617228830 0x7f81e213b774 2090: csl::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102632030621 0x7f81e969dcea 2143: dap::c_(dfj) -> eam
fifo write: @1699477102632078082 0x7f81e969f7d0 75: dap::e_(dfj) -> boolean
fifo write: @1699477102648955459 0x7f81e213c69f 1765: cyi::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102650972315 0x7f81e213d437 761: czs::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102728840459 0x7f81e213dc14 31: cwf::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102729555048 0x7f81e213e037 632: cwz::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102737128766 0x7f81e213e757 1264: dbt::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102737284008 0x7f81e1a700f4 70: cue::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477102762525103 0x7f81e213f2f4 1806: czr::c_(dfj) -> eam
fifo write: @1699477102772108857 0x7f81e2140097 607: cwi::e_(dfj) -> boolean
fifo write: @1699477102800612394 0x7f81e96a0150 91: aeo::empty() -> Object
fifo write: @1699477102801943652 0x7f81e8be1980 448: I2C/C2I adapters(0xaaabb)
fifo write: @1699477102803162307 0x7f81e8be1680 504: I2C/C2I adapters(0xbbebeabeaaa)
fifo write: @1699477102803182918 0x7f81e8be1380 520: I2C/C2I adapters(0xbbebaabeaaa)
fifo write: @1699477102803199998 0x7f81e8be1080 520: I2C/C2I adapters(0xbbebeabaaaa)
fifo write: @1699477102803216628 0x7f81e8be0b00 536: I2C/C2I adapters(0xbbebaabaaaa)
fifo write: @1699477102803500872 0x7f81e21407f4 949: Class::desiredAssertionStatus() -> boolean
fifo write: @1699477102803859006 0x7f81e2141274 69: java.io.DataOutputStream::incCount(int) -> void
fifo write: @1699477102804167200 0x7f81e2141732 1476: java.io.BufferedOutputStream::write(byte[], int, int) -> void
fifo write: @1699477102804559875 0x7f81e8beae00 432: I2C/C2I adapters(0xaabe)
fifo write: @1699477102805082372 0x7f81e2142667 7956: java.io.DataOutputStream::writeUTF(String, java.io.DataOutput) -> int
fifo write: @1699477102806233027 0x7f81e214609f 2285: java.lang.invoke.Invokers::basicInvoker() -> java.lang.invoke.MethodHandle
fifo write: @1699477102807057468 0x7f81e96a0ecc 6: org.apache.logging.slf4j.SLF4JServiceProvider::getLoggerFactory() -> org.slf4j.ILoggerFactory
fifo write: @1699477102807108128 0x7f81e96a11cc 6: org.apache.logging.log4j.core.AbstractLifeCycle::getState() -> org.apache.logging.log4j.core.LifeCycle$State
fifo write: @1699477102808500666 0x7f81e1c8e914 23: java.util.stream.ReferencePipeline::dropWhile(java.util.function.Predicate) -> java.util.stream.Stream
fifo write: @1699477102808628708 0x7f81e2147514 55: java.util.stream.WhileOps$1Op::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477102808773720 0x7f81e2147917 399: java.util.stream.WhileOps$1Op::<init>(java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int, java.util.function.Predicate) -> void
fifo write: @1699477102808908211 0x7f81e2147f54 1178: java.util.stream.WhileOps$1Op$1OpSink::<init>(java.util.stream.WhileOps$1Op, java.util.stream.Sink, boolean) -> void
fifo write: @1699477102808990533 0x7f81e21489b8 1292: java.util.stream.WhileOps$1Op::opWrapSink(java.util.stream.Sink, boolean) -> java.util.stream.WhileOps$DropWhileSink
fifo write: @1699477102809039653 0x7f81e2149434 541: StackStreamFactory$AbstractStackWalker::getNextBatchSize() -> int
fifo write: @1699477102809089784 0x7f81e96a17cc 2: StackWalker::estimateDepth() -> int
fifo write: @1699477102809178565 0x7f81e2149b3f 985: java.util.stream.WhileOps::makeDropWhileRef(java.util.stream.AbstractPipeline, java.util.function.Predicate) -> java.util.stream.Stream
fifo write: @1699477102809255356 0x7f81e214a4d9 1026: org.apache.logging.log4j.spi.LoggerRegistry::getLogger(String, org.apache.logging.log4j.message.MessageFactory) -> org.apache.logging.log4j.spi.ExtendedLogger
fifo write: @1699477102812454657 0x7f81e8beab00 544: I2C/C2I adapters(0xbbbbbbbbba)
fifo write: @1699477102813068025 0x7f81e96a1acc 6: java.util.logging.Logger::getName() -> String
fifo write: @1699477102817611304 0x7f81e214aeb9 422: java.util.Locale::hashCode() -> int
fifo write: @1699477102819342036 0x7f81e1e6adf4 23: java.math.BigInteger::bitLengthForInt(int) -> int
fifo write: @1699477102819833642 0x7f81e214b5b4 597: java.math.MutableBigInteger::getLowestSetBit() -> int
fifo write: @1699477102819872172 0x7f81e214bd74 658: java.math.MutableBigInteger::divWord(long, int) -> long
fifo write: @1699477102821824757 0x7f81e214c5ba 1945: java.util.Arrays::copyOfRange(int[], int, int) -> int[]
fifo write: @1699477102822838641 0x7f81e214d6f7 2381: java.math.MutableBigInteger::add(java.math.MutableBigInteger) -> void
fifo write: @1699477102822913711 0x7f81e214eb97 499: java.math.MutableBigInteger::mulsubBorrow(int[], int[], int, int, int) -> int
fifo write: @1699477102823632351 0x7f81e214f4e6 7988: java.math.MutableBigInteger::divideMagnitude(java.math.MutableBigInteger, java.math.MutableBigInteger, boolean) -> java.math.MutableBigInteger
fifo write: @1699477102823677141 0x7f81e96a1dd2 729: java.math.MutableBigInteger::mulsub(int[], int[], int, int, int) -> int
fifo write: @1699477102824076136 0x7f81e2153894 212: java.math.BitSieve::set(int) -> void
fifo write: @1699477102824329520 0x7f81e96a29ea 45: java.math.BitSieve::bit(int) -> long
fifo write: @1699477102824566053 0x7f81e96a2cea 37: java.math.BitSieve::unitIndex(int) -> int
fifo write: @1699477102824658534 0x7f81e2153d94 279: java.math.BitSieve::get(int) -> boolean
fifo write: @1699477102824692754 0x7f81e2154327 263: java.math.BitSieve::sieveSingle(int, int, int) -> void
fifo write: @1699477102824828826 0x7f81e215483d 459: java.math.BitSieve::sieveSearch(int, int) -> int
fifo write: @1699477102825188981 0x7f81e96a2fdc 123: java.math.BitSieve::set(int) -> void
fifo write: @1699477102825889580 0x7f81e96a3a50 107: java.math.BitSieve::get(int) -> boolean
fifo write: @1699477102826364866 0x7f81e2154ee9 928: java.math.BigInteger::montReduce(int[], int[], int, int) -> int[]
fifo write: @1699477102826631459 0x7f81e215594c 949: java.math.BigInteger::implSquareToLen(int[], int, int[], int) -> int[]
fifo write: @1699477102826908763 0x7f81e2156494 512: java.math.BigInteger::intArrayCmpToLen(int[], int[], int) -> int
fifo write: @1699477102826961214 0x7f81e2156b74 333: java.math.BigInteger::materialize(int[], int) -> int[]
fifo write: @1699477102827140386 0x7f81e2157074 95: java.math.BigInteger::implMontgomerySquare(int[], int[], int, long, int[]) -> int[]
fifo write: @1699477102827194077 0x7f81e21574f4 461: java.math.BigInteger::squareToLen(int[], int, int[]) -> int[]
fifo write: @1699477102827251927 0x7f81e2157bc5 728: java.math.BigInteger::montgomerySquare(int[], int[], int, long, int[]) -> int[]
fifo write: @1699477102827317858 0x7f81e2158439 1093: java.math.BigInteger::primitiveLeftShift(int[], int, int) -> void
fifo write: @1699477102827604862 0x7f81e21590bf 4166: java.math.BigInteger::implMontgomeryMultiplyChecks(int[], int[], int[], int, int[]) -> void
fifo write: @1699477102827802745 0x7f81e215b274 372: java.math.BigInteger::subN(int[], int[], int) -> int
fifo write: @1699477102827869815 0x7f81e215b8bd 1557: java.math.BigInteger::implMultiplyToLen(int[], int, int[], int, int[]) -> int[]
fifo write: @1699477102828100138 0x7f81e215cb83 7387: java.math.BigInteger::implSquareToLenChecks(int[], int, int[], int) -> void
fifo write: @1699477102828231410 0x7f81e21603f4 231: java.util.Arrays::fill(int[], int) -> void
fifo write: @1699477102828288801 0x7f81e216093a 1336: java.math.BigInteger::implMultiplyToLen(int[], int, int[], int, int[]) -> int[]
fifo write: @1699477102828421793 0x7f81e2161714 768: java.math.BigInteger::multiplyToLenCheck(int[], int) -> void
fifo write: @1699477102829182972 0x7f81e2161f77 100: java.math.BigInteger::implMontgomeryMultiply(int[], int[], int[], int, long, int[]) -> int[]
fifo write: @1699477102829217853 0x7f81e216244c 745: java.math.BigInteger::montgomeryMultiply(int[], int[], int[], int, long, int[]) -> int[]
fifo write: @1699477102829289074 0x7f81e2162d98 1610: java.math.BigInteger::multiplyToLen(int[], int, int[], int, int[]) -> int[]
fifo write: @1699477102829518707 0x7f81e2163b74 238: java.util.Arrays::fill(byte[], byte) -> void
fifo write: @1699477102832932871 0x7f81e216409a 1225: java.math.BigInteger::subtract(int[], int[]) -> int[]
fifo write: @1699477102833325936 0x7f81e96a4178 1984: java.math.MutableBigInteger::divideOneWord(int, java.math.MutableBigInteger) -> int
fifo write: @1699477102833379877 0x7f81e2164cdd 1196: java.math.BigInteger::multiplyByInt(int[], int, int) -> java.math.BigInteger
fifo write: @1699477102833442067 0x7f81e2165a19 1136: java.math.BigInteger::add(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477102833491268 0x7f81e2166614 31: java.math.BigInteger::multiply(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477102833964364 0x7f81e2166b44 2831: java.math.BigInteger::multiply(java.math.BigInteger, boolean) -> java.math.BigInteger
fifo write: @1699477102834006325 0x7f81e2168294 31: java.math.BigInteger::square() -> java.math.BigInteger
fifo write: @1699477102834235298 0x7f81e216873c 1458: java.math.BigInteger::square(boolean) -> java.math.BigInteger
fifo write: @1699477102834282128 0x7f81e21694d4 1942: java.math.BigInteger::add(int[], int[]) -> int[]
fifo write: @1699477102834335459 0x7f81e216a6bc 1457: java.math.BigInteger::subtract(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477102835162030 0x7f81e216b514 267: java.math.MutableBigInteger::<init>(java.math.MutableBigInteger) -> void
fifo write: @1699477102836410516 0x7f81e96a578b 10933: java.net.URLStreamHandler::toExternalForm(java.net.URL) -> String
fifo write: @1699477102841431511 0x7f81e96ab723 924: java.math.BigInteger::shiftLeftImplWorker(int[], int[], int, int, int) -> void
fifo write: @1699477102841504801 0x7f81e216bad4 1222: java.math.BigInteger::equals(Object) -> boolean
fifo write: @1699477102843741670 0x7f81e96ac1fe 2013: java.math.BigInteger::implMultiplyToLen(int[], int, int[], int, int[]) -> int[]
fifo write: @1699477102843854282 0x7f81e216c69a 2430: sun.security.provider.SHA::implCompress0(byte[], int) -> void
fifo write: @1699477102843912673 0x7f81e96ad5af 264: java.util.Arrays::fill(int[], int) -> void
fifo write: @1699477102844043144 0x7f81e216dc74 503: sun.security.provider.SecureRandom::updateState(byte[], byte[]) -> void
fifo write: @1699477102844233947 0x7f81e96adad3 420: java.math.MutableBigInteger::normalize() -> void
fifo write: @1699477102845650385 0x7f81e96ae261 462: java.math.BitSieve::sieveSearch(int, int) -> int
fifo write: @1699477102847113494 0x7f81e96ae9e1 2866: java.math.BigInteger::implSquareToLen(int[], int, int[], int) -> int[]
fifo write: @1699477102847980315 0x7f81e96b0732 421: java.math.BigInteger::subN(int[], int[], int) -> int
fifo write: @1699477102848222478 0x7f81e96b0e38 1248: java.math.BigInteger::subtract(int[], int[]) -> int[]
fifo write: @1699477102848674414 0x7f81e96b1baf 252: java.math.MutableBigInteger::divWord(long, int) -> long
fifo write: @1699477102848867487 0x7f81e96b211c 68: Integer::bitCount(int) -> int
fifo write: @1699477102848940847 0x7f81e96b24d2 1109: java.math.BigInteger::implMultiplyToLen(int[], int, int[], int, int[]) -> int[]
fifo write: @1699477102849081799 0x7f81e96b30b4 243: java.math.BigInteger::intArrayCmpToLen(int[], int[], int) -> int
fifo write: @1699477102849590246 0x7f81e96b35bd 266: java.math.BigInteger::implMontgomeryMultiplyChecks(int[], int[], int[], int, int[]) -> void
fifo write: @1699477102849904000 0x7f81e96b3b39 554: java.math.BigInteger::squareToLen(int[], int, int[]) -> int[]
fifo write: @1699477102850113103 0x7f81e96b4242 157: java.math.BigInteger::implSquareToLenChecks(int[], int, int[], int) -> void
fifo write: @1699477102851208117 0x7f81e96b464d 730: java.math.BigInteger::montgomerySquare(int[], int[], int, long, int[]) -> int[]
fifo write: @1699477102852065718 0x7f81e96b4fd8 295: java.math.BigInteger::<init>(int[], int) -> void
fifo write: @1699477102852867758 0x7f81e216e37a 529: java.util.Arrays::copyOf(int[], int) -> int[]
fifo write: @1699477102852926539 0x7f81e216ea19 501: java.security.MessageDigest::update(byte[]) -> void
fifo write: @1699477102854475499 0x7f81e96b54e5 1918: java.math.BigInteger::multiplyByInt(int[], int, int) -> java.math.BigInteger
fifo write: @1699477102854789403 0x7f81e96b6858 3227: java.math.BigInteger::montReduce(int[], int[], int, int) -> int[]
fifo write: @1699477102855111317 0x7f81e96b89b4 599: java.math.BigInteger::primitiveLeftShift(int[], int, int) -> void
fifo write: @1699477102855204558 0x7f81e96b91d0 171: java.math.BigInteger::getInt(int) -> int
fifo write: @1699477102855291999 0x7f81e96b9643 1997: java.math.BigInteger::implMultiplyToLen(int[], int, int[], int, int[]) -> int[]
fifo write: @1699477102856318733 0x7f81e96baa42 589: java.math.BigInteger::multiplyToLen(int[], int, int[], int, int[]) -> int[]
fifo write: @1699477102857973154 0x7f81e216f367 10841: java.math.BigInteger::oddModPow(java.math.BigInteger, java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477102858032285 0x7f81e2174194 258: sun.security.provider.SHA::resetHashes() -> void
fifo write: @1699477102858097486 0x7f81e2174734 730: sun.security.provider.SHA::implCompressCheck(byte[], int) -> void
fifo write: @1699477102858168377 0x7f81e96bb153 792: java.math.BigInteger::montgomeryMultiply(int[], int[], int[], int, long, int[]) -> int[]
fifo write: @1699477102858236007 0x7f81e2174f65 850: sun.security.provider.SHA::implCompress(byte[], int) -> void
fifo write: @1699477102858290288 0x7f81e2175814 143: sun.security.provider.SHA::implReset() -> void
fifo write: @1699477102858995847 0x7f81e2175e50 4547: sun.security.provider.SHA::implDigest(byte[], int) -> void
fifo write: @1699477102859056998 0x7f81e2177f94 240: java.io.FilterInputStream::read(byte[], int, int) -> int
fifo write: @1699477102859254201 0x7f81e21784a1 1342: sun.security.provider.NativePRNG$RandomIO::implNextBytes(byte[]) -> void
fifo write: @1699477102859522654 0x7f81e21795db 5035: sun.security.provider.SecureRandom::engineNextBytes(byte[]) -> void
fifo write: @1699477102860712109 0x7f81e96bbb35 650: java.util.Arrays::copyOfRange(int[], int, int) -> int[]
fifo write: @1699477102861637141 0x7f81e96bc1b3 476: java.math.BigInteger::trustedStripLeadingZeroInts(int[]) -> int[]
fifo write: @1699477102862194728 0x7f81e96bc852 441: java.math.MutableBigInteger::getLowestSetBit() -> int
fifo write: @1699477102862276349 0x7f81e217b997 467: java.math.MutableBigInteger::toIntArray() -> int[]
fifo write: @1699477102862336840 0x7f81e96bcfd0 163: java.math.BitSieve::sieveSingle(int, int, int) -> void
fifo write: @1699477102862530773 0x7f81e96bd453 1973: java.math.BigInteger::add(int[], int[]) -> int[]
fifo write: @1699477102862796146 0x7f81e96be7d7 204: java.math.BigInteger::testBit(int) -> boolean
fifo write: @1699477102864462447 0x7f81e96becf3 296: java.util.Arrays::fill(byte[], byte) -> void
fifo write: @1699477102864821262 0x7f81e217bfd4 149: java.math.MutableBigInteger::inverseMod64(long) -> long
fifo write: @1699477102864949273 0x7f81e217c45c 1231: java.math.BigInteger::leftShift(int[], int, int) -> int[]
fifo write: @1699477102865042765 0x7f81e217d034 272: java.math.MutableBigInteger::divide(java.math.MutableBigInteger, java.math.MutableBigInteger, boolean) -> java.math.MutableBigInteger
fifo write: @1699477102865173156 0x7f81e217d617 1684: java.math.BigInteger::<init>(int, int[]) -> void
fifo write: @1699477102866783057 0x7f81e217e414 422: java.math.MutableBigInteger::primitiveRightShift(int) -> void
fifo write: @1699477102866945889 0x7f81e96bf21e 821: java.math.BigInteger::stripLeadingZeroBytes(byte[], int, int) -> int[]
fifo write: @1699477102866998410 0x7f81e217ead9 584: java.math.MutableBigInteger::rightShift(int) -> void
fifo write: @1699477102867157632 0x7f81e96bfc82 3913: java.math.BigInteger::implMontgomerySquare(int[], int[], int, long, int[]) -> int[]
fifo write: @1699477102868084864 0x7f81e96c23cf 2748: java.math.BigInteger::montReduce(int[], int[], int, int) -> int[]
fifo write: @1699477102868132604 0x7f81e96c402f 248: java.util.Arrays::fill(byte[], byte) -> void
fifo write: @1699477102868242126 0x7f81e217f359 584: java.math.MutableBigInteger::rightShift(int) -> void
fifo write: @1699477102868291507 0x7f81e96c45a9 342: java.math.BigInteger::shiftRightImplWorker(int[], int[], int, int, int) -> void
fifo write: @1699477102868385498 0x7f81e217fb94 428: java.math.MutableBigInteger::primitiveLeftShift(int) -> void
fifo write: @1699477102868527560 0x7f81e21801f4 90: java.math.MutableBigInteger::isZero() -> boolean
fifo write: @1699477102868609731 0x7f81e2180677 1686: java.math.MutableBigInteger::subtract(java.math.MutableBigInteger) -> int
fifo write: @1699477102868656661 0x7f81e2181694 252: java.math.MutableBigInteger::isOne() -> boolean
fifo write: @1699477102868975165 0x7f81e2181bb4 503: java.math.SignedMutableBigInteger::signedAdd(java.math.SignedMutableBigInteger) -> void
fifo write: @1699477102869032956 0x7f81e96c4bd0 267: java.math.BigInteger::compareMagnitude(java.math.BigInteger) -> int
fifo write: @1699477102869100207 0x7f81e21822d4 2402: java.math.MutableBigInteger::leftShift(int) -> void
fifo write: @1699477102869157768 0x7f81e21837b4 504: java.math.SignedMutableBigInteger::signedSubtract(java.math.SignedMutableBigInteger) -> void
fifo write: @1699477102869308190 0x7f81e96c51d3 328: java.math.MutableBigInteger::compare(java.math.MutableBigInteger) -> int
fifo write: @1699477102870287402 0x7f81e8bea800 480: I2C/C2I adapters(0xabeaaaabe)
fifo write: @1699477102870304813 0x7f81e8bea500 448: I2C/C2I adapters(0xaabaa)
fifo write: @1699477102870322033 0x7f81e8bea200 448: I2C/C2I adapters(0xabeabebe)
fifo write: @1699477102870600996 0x7f81e2183df4 379: org.apache.logging.log4j.util.Strings::isEmpty(CharSequence) -> boolean
fifo write: @1699477102871230504 0x7f81e2184394 31: java.util.concurrent.ConcurrentHashMap$ValueIterator::<init>(java.util.concurrent.ConcurrentHashMap$Node[], int, int, int, java.util.concurrent.ConcurrentHashMap) -> void
fifo write: @1699477102871291595 0x7f81e2184794 330: java.util.concurrent.ConcurrentHashMap$ValuesView::iterator() -> java.util.Iterator
fifo write: @1699477102871348716 0x7f81e2184db7 613: java.util.concurrent.ConcurrentHashMap::values() -> java.util.Collection
fifo write: @1699477102872825325 0x7f81e96c586d 2602: sun.security.provider.SHA::implCompress0(byte[], int) -> void
fifo write: @1699477102874834561 0x7f81e96c6f7e 1651: ClassNotFoundException::<init>(String) -> void
fifo write: @1699477102878092243 0x7f81e8be9f00 440: I2C/C2I adapters(0xbebabe)
fifo write: @1699477102878116073 0x7f81e8be9c00 448: I2C/C2I adapters(0xbababe)
fifo write: @1699477102878850753 0x7f81e8be9900 456: I2C/C2I adapters(0xbbebbebe)
fifo write: @1699477102881210863 0x7f81e21854f4 111: java.util.stream.FindOps::makeRef(boolean) -> java.util.stream.TerminalOp
fifo write: @1699477102881271524 0x7f81e2185914 234: java.util.stream.FindOps$FindSink$OfRef::<init>() -> void
fifo write: @1699477102881350755 0x7f81e2185dd7 1109: java.util.stream.FindOps$FindSink$OfRef::get() -> Object
fifo write: @1699477102881480937 0x7f81e21867d4 1007: java.util.stream.FindOps$FindSink$OfRef::get() -> java.util.Optional
fifo write: @1699477102888472807 0x7f81e96c7fa0 8647: java.math.MutableBigInteger::divideKnuth(java.math.MutableBigInteger, java.math.MutableBigInteger, boolean) -> java.math.MutableBigInteger
fifo write: @1699477102888496587 0x7f81e8be9600 448: I2C/C2I adapters(0xabaabe)
fifo write: @1699477102888635839 0x7f81e8be9300 448: I2C/C2I adapters(0xaaabea)
fifo write: @1699477102888656569 0x7f81e8be9000 456: I2C/C2I adapters(0xaaabaa)
fifo write: @1699477102888677060 0x7f81e8be8d00 496: I2C/C2I adapters(0xaabeabaaa)
fifo write: @1699477102888698070 0x7f81e8be8a00 448: I2C/C2I adapters(0xbbeaba)
fifo write: @1699477102888718190 0x7f81e8be8700 456: I2C/C2I adapters(0xbbeabaa)
fifo write: @1699477102888738450 0x7f81e8be8400 448: I2C/C2I adapters(0xabeaab)
fifo write: @1699477102888758661 0x7f81e8be8100 520: I2C/C2I adapters(0xaabeaabaaa)
fifo write: @1699477102888779111 0x7f81e8be7e00 456: I2C/C2I adapters(0xbbeaaba)
fifo write: @1699477102888799361 0x7f81e8be7b00 480: I2C/C2I adapters(0xbbeaabaa)
fifo write: @1699477102888819312 0x7f81e8be7800 448: I2C/C2I adapters(0xabaab)
fifo write: @1699477102888839302 0x7f81e8be7500 520: I2C/C2I adapters(0xaabaabaaa)
fifo write: @1699477102888859282 0x7f81e8be7200 480: I2C/C2I adapters(0xaabbaab)
fifo write: @1699477102888879252 0x7f81e8be6f00 448: I2C/C2I adapters(0xaabab)
fifo write: @1699477102890700356 0x7f81e96cdf41 12290: java.math.MutableBigInteger::divideMagnitude(java.math.MutableBigInteger, java.math.MutableBigInteger, boolean) -> java.math.MutableBigInteger
fifo write: @1699477102891779850 0x7f81e96d4e35 2282: java.util.zip.ZipFile$ZipFileInflaterInputStream::close() -> void
fifo write: @1699477102892664811 0x7f81e96d6433 500: sun.net.www.ParseUtil::encodePath(String, boolean) -> String
fifo write: @1699477102893681064 0x7f81e96d6e3d 9163: java.util.zip.ZipFile::getInputStream(java.util.zip.ZipEntry) -> java.io.InputStream
fifo write: @1699477102895344836 0x7f81e96dbcd7 6319: java.math.BigInteger::add(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477102895367836 0x7f81e8be6c00 504: I2C/C2I adapters(0xbabbbbbb)
fifo write: @1699477102897288651 0x7f81e96df9f8 2626: ClassLoader::addClass(Class) -> void
fifo write: @1699477102898760900 0x7f81e96e138c 29065: java.util.jar.JarFile::getInputStream(java.util.zip.ZipEntry) -> java.io.InputStream
fifo write: @1699477102898830861 0x7f81e2187116 37: StackStreamFactory$AbstractStackWalker::<init>(StackWalker, int) -> void
fifo write: @1699477102898897812 0x7f81e2187514 349: StackStreamFactory$AbstractStackWalker::<init>(StackWalker, int, int) -> void
fifo write: @1699477102898962052 0x7f81e2187b3c 824: StackStreamFactory$AbstractStackWalker::beginStackWalk() -> Object
fifo write: @1699477102899030133 0x7f81e21883b4 757: StackStreamFactory$AbstractStackWalker::toStackWalkMode(StackWalker, int) -> int
fifo write: @1699477102899091324 0x7f81e2188c34 409: StackStreamFactory$AbstractStackWalker::walk() -> Object
fifo write: @1699477102899155495 0x7f81e2189239 440: StackStreamFactory$AbstractStackWalker::doStackWalk(long, int, int, int, int) -> Object
fifo write: @1699477102899205736 0x7f81e207ca74 13: StackStreamFactory$AbstractStackWalker::close() -> void
fifo write: @1699477102899274587 0x7f81e21899b7 1565: StackStreamFactory$FrameBuffer::<init>(int) -> void
fifo write: @1699477102899341807 0x7f81e218a8d7 1597: StackStreamFactory$FrameBuffer::check(int) -> void
fifo write: @1699477102899430859 0x7f81e96f07f8 883: java.security.SecureClassLoader$CodeSourceKey::equals(Object) -> boolean
fifo write: @1699477102899665352 0x7f81e218b7f7 1586: org.apache.logging.log4j.core.util.NameUtil::getSubName(String) -> String
fifo write: @1699477102904620436 0x7f81e96f147c 385: java.security.SecureClassLoader::getProtectionDomain(java.security.CodeSource) -> java.security.ProtectionDomain
fifo write: @1699477102905459596 0x7f81e96f1b78 1175: java.security.CodeSource::<init>(java.net.URL, java.security.CodeSigner[]) -> void
fifo write: @1699477102905652969 0x7f81e96f2750 496: java.security.SecureClassLoader$CodeSourceKey::hashCode() -> int
fifo write: @1699477102911198400 0x7f81e96f33d3 28302: jdk.internal.loader.URLClassPath$JarLoader$2::getInputStream() -> java.io.InputStream
fifo write: @1699477102914191578 0x7f81e97020da 14475: java.math.BigInteger::remainder(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477102919256824 0x7f81e970a18a 4569: java.util.concurrent.ConcurrentHashMap::transfer(java.util.concurrent.ConcurrentHashMap$Node[], java.util.concurrent.ConcurrentHashMap$Node[]) -> void
fifo write: @1699477102953716628 0x7f81e218c677 310: io.netty.util.internal.ObjectUtil::checkNotNull(Object, String) -> Object
fifo write: @1699477102960854870 0x7f81e970cbdd 21426: java.math.BigInteger::mod(java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477102996991606 0x7f81e97185cc 2: io.netty.channel.unix.FileDescriptor::intValue() -> int
fifo write: @1699477102997826867 0x7f81e218cf17 52: java.nio.ByteBuffer::<init>(int, int, int, int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477102997890988 0x7f81e218d314 277: java.nio.MappedByteBuffer::position(int) -> java.nio.Buffer
fifo write: @1699477102997957159 0x7f81e218d814 277: java.nio.MappedByteBuffer::limit(int) -> java.nio.Buffer
fifo write: @1699477102998801439 0x7f81e97188cc 2: java.util.Calendar::getFirstDayOfWeek() -> int
fifo write: @1699477102998870000 0x7f81e9718bcc 2: java.util.Calendar::getMinimalDaysInFirstWeek() -> int
fifo write: @1699477102998934011 0x7f81e218dd14 31: StringBuilder::setLength(int) -> void
fifo write: @1699477103007100416 0x7f81e9718f37 780: jdk.internal.loader.Resource::getByteBuffer() -> java.nio.ByteBuffer
fifo write: @1699477103009480697 0x7f81e97196f0 555: jdk.internal.loader.URLClassPath$JarLoader$2::getCodeSigners() -> java.security.CodeSigner[]
fifo write: @1699477103010549441 0x7f81e218e0d4 1039: java.security.AccessController::doPrivileged(java.security.PrivilegedExceptionAction) -> Object
fifo write: @1699477103016794851 0x7f81e8be6900 552: I2C/C2I adapters(0xbaaaaaaaaaa)
fifo write: @1699477103016815812 0x7f81e8be6600 536: I2C/C2I adapters(0xbaaaaaaaaa)
fifo write: @1699477103018226340 0x7f81e8be6300 464: I2C/C2I adapters(0xbbbbeab)
fifo write: @1699477103018246350 0x7f81e8be6000 488: I2C/C2I adapters(0xbbbeabba)
fifo write: @1699477103018739786 0x7f81e8be5d00 480: I2C/C2I adapters(0xbbbbbeab)
fifo write: @1699477103019350984 0x7f81e218ea94 137: java.util.concurrent.locks.AbstractOwnableSynchronizer::<init>() -> void
fifo write: @1699477103019413985 0x7f81e218ee94 234: java.util.concurrent.locks.AbstractQueuedSynchronizer::<init>() -> void
fifo write: @1699477103019832210 0x7f81e218f2f4 507: io.netty.buffer.SizeClasses::sizeOf(short[], int) -> int
fifo write: @1699477103019897331 0x7f81e218f974 171: io.netty.buffer.SizeClasses::alignSizeIfNeeded(int, int) -> int
fifo write: @1699477103019937592 0x7f81e218fdf4 23: io.netty.buffer.PoolThreadCache::log2(int) -> int
fifo write: @1699477103020085414 0x7f81e2190194 328: java.util.concurrent.locks.ReentrantLock$Sync::<init>() -> void
fifo write: @1699477103020153415 0x7f81e2190694 422: java.util.concurrent.locks.ReentrantLock$NonfairSync::<init>() -> void
fifo write: @1699477103020238846 0x7f81e2190c14 1448: io.netty.buffer.SizeClasses::newSizeClass(int, int, int, int, int) -> short[]
fifo write: @1699477103020284556 0x7f81e21919b7 752: java.util.concurrent.locks.ReentrantLock::<init>() -> void
fifo write: @1699477103020327207 0x7f81e2192174 194: io.netty.buffer.PoolArena::newSubpagePoolHead() -> io.netty.buffer.PoolSubpage
fifo write: @1699477103020445098 0x7f81e21926da 1195: io.netty.buffer.PoolSubpage::<init>() -> void
fifo write: @1699477103021278869 0x7f81e9719f54 75: io.netty.buffer.SizeClasses::sizeOf(short[], int) -> int
fifo write: @1699477103021366350 0x7f81e2193174 60: io.netty.buffer.PoolChunkList::prevList(io.netty.buffer.PoolChunkList) -> void
fifo write: @1699477103021401951 0x7f81e2193574 218: io.netty.buffer.PoolChunkList::minUsage0(int) -> int
fifo write: @1699477103021488332 0x7f81e21939f4 477: io.netty.buffer.PoolChunkList::calculateMaxCapacity(int, int) -> int
fifo write: @1699477103021547173 0x7f81e2194094 639: io.netty.buffer.PoolChunkList::<init>(io.netty.buffer.PoolArena, io.netty.buffer.PoolChunkList, int, int, int) -> void
fifo write: @1699477103021883007 0x7f81e2194854 139: io.netty.util.internal.PlatformDependent::javaVersion() -> int
fifo write: @1699477103021918117 0x7f81e2194c14 234: java.util.concurrent.atomic.Striped64::<init>() -> void
fifo write: @1699477103021952968 0x7f81e2195094 328: java.util.concurrent.atomic.LongAdder::<init>() -> void
fifo write: @1699477103021991288 0x7f81e2195594 422: io.netty.util.internal.LongAdderCounter::<init>() -> void
fifo write: @1699477103022041849 0x7f81e2195b14 811: io.netty.util.internal.PlatformDependent::newLongCounter() -> io.netty.util.internal.LongCounter
fifo write: @1699477103023346386 0x7f81e219629a 768: io.netty.buffer.SizeClasses::newSize2idxTab(int, short[]) -> int[]
fifo write: @1699477103023416947 0x7f81e2196b01 527: io.netty.buffer.SizeClasses::newIdx2SizeTab(short[], int[], int) -> int[]
fifo write: @1699477103023491868 0x7f81e2197222 674: io.netty.buffer.SizeClasses::newPageIdx2sizeTab(short[], int[], int, int) -> int[]
fifo write: @1699477103023706511 0x7f81e971a2bd 455: io.netty.buffer.SizeClasses::newSizeClass(int, int, int, int, int) -> short[]
fifo write: @1699477103023827802 0x7f81e2197baa 3165: io.netty.buffer.SizeClasses::<init>(int, int, int, int) -> void
fifo write: @1699477103025261571 0x7f81e2199b27 15852: io.netty.buffer.PoolArena::<init>(io.netty.buffer.PooledByteBufAllocator, int, int, int, int) -> void
fifo write: @1699477103025368452 0x7f81e21a0014 144: java.util.Collections$EmptyMap::entrySet() -> java.util.Set
fifo write: @1699477103025481683 0x7f81e21a0554 2010: java.lang.reflect.Method::toShortSignature() -> String
fifo write: @1699477103026236193 0x7f81e21a1907 5772: java.lang.reflect.ProxyGenerator::addProxyMethod(java.lang.reflect.Method, Class) -> void
fifo write: @1699477103030884113 0x7f81e8be5880 488: I2C/C2I adapters(0xbb7e7e7e7ebb)
fifo write: @1699477103031222238 0x7f81e21a40f4 95: java.util.Calendar::internalGet(int) -> int
fifo write: @1699477103031585462 0x7f81e21a44f4 16: sun.util.calendar.BaseCalendar$Date::setCache(int, long, int) -> void
fifo write: @1699477103031645073 0x7f81e971aa4c 6: java.util.Calendar::getZone() -> java.util.TimeZone
fifo write: @1699477103031743154 0x7f81e971ad11 30: StringUTF16::length(byte[]) -> int
fifo write: @1699477103032150120 0x7f81e971b051 334: String::indexOf(int) -> int
fifo write: @1699477103033689279 0x7f81e21a48d4 856: com.google.gson.internal.Primitives::wrap(Class) -> Class
fifo write: @1699477103034432949 0x7f81e21a51f4 786: sun.util.locale.LocaleUtils::isAlphaNumeric(char) -> boolean
fifo write: @1699477103034614171 0x7f81e971b5d0 75: java.util.Calendar::internalSet(int, int) -> void
fifo write: @1699477103034936035 0x7f81e8bde880 472: I2C/C2I adapters(0xbeaaa7e7e7e)
fifo write: @1699477103038231158 0x7f81e971bb13 11252: jdk.internal.loader.Resource::getBytes() -> byte[]
fifo write: @1699477103038287599 0x7f81e9722983 825: String::encode(java.nio.charset.Charset, byte, byte[]) -> byte[]
fifo write: @1699477103038768635 0x7f81e8bde580 528: I2C/C2I adapters(0xbb7e7e7ea7e7e7e7e)
fifo write: @1699477103038782305 0x7f81e8bde280 560: I2C/C2I adapters(0xbbba7e7e7ea7e7e7e7e)
fifo write: @1699477103038795405 0x7f81e8bddf80 472: I2C/C2I adapters(0xbba7e7e7eb)
fifo write: @1699477103038808515 0x7f81e8bddc80 488: I2C/C2I adapters(0xbbbbb66be)
fifo write: @1699477103038821606 0x7f81e8bdd980 624: I2C/C2I adapters(0xbbbbbbbbabebab)
fifo write: @1699477103041176356 0x7f81e9723511 11174: java.security.SecureClassLoader::defineClass(String, byte[], int, int, java.security.CodeSource) -> Class
fifo write: @1699477103044112543 0x7f81e8bdd680 464: I2C/C2I adapters(0xbbbbebbe)
fifo write: @1699477103046137999 0x7f81e21a5a1f 2381: StackStreamFactory$StackFrameTraverser$StackFrameBuffer::resize(int, int) -> void
fifo write: @1699477103047552468 0x7f81e972a37b 5891: java.util.concurrent.ConcurrentHashMap::transfer(java.util.concurrent.ConcurrentHashMap$Node[], java.util.concurrent.ConcurrentHashMap$Node[]) -> void
fifo write: @1699477103053489864 0x7f81e8bdd380 640: I2C/C2I adapters(0xbbbbbbbbbbbbaa)
fifo write: @1699477103053744598 0x7f81e972d84c 6: StackStreamFactory$CallerClassFinder$ClassBuffer::frames() -> Class[]
fifo write: @1699477103053831699 0x7f81e21a6c39 447: StackStreamFactory$AbstractStackWalker::nextFrame() -> Class
fifo write: @1699477103053887739 0x7f81e21a7294 416: StackStreamFactory::isMethodHandleFrame(Class) -> boolean
fifo write: @1699477103056943059 0x7f81e8bdd080 520: I2C/C2I adapters(0xbbbbabbbb)
fifo write: @1699477103056960459 0x7f81e8bdcd80 496: I2C/C2I adapters(0xbabbbaaa)
fifo write: @1699477103057595567 0x7f81e21a7ae0 7131: java.lang.invoke.VarHandleGuards::guard_LI_I(java.lang.invoke.VarHandle, Object, int, java.lang.invoke.VarHandle$AccessDescriptor) -> int
fifo write: @1699477103057699149 0x7f81e972de60 18: jdk.internal.org.objectweb.asm.SymbolTable::addConstantFieldref(String, String, String) -> jdk.internal.org.objectweb.asm.Symbol
fifo write: @1699477103057763499 0x7f81e21aa914 391: jdk.internal.misc.Unsafe::getIntUnaligned(Object, long, boolean) -> int
fifo write: @1699477103057899221 0x7f81e21aaeb9 1036: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle::get(java.lang.invoke.VarHandle, Object, int) -> int
fifo write: @1699477103058012253 0x7f81e972e134 75: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle::index(byte[], int) -> int
fifo write: @1699477103058098674 0x7f81e21ac617 360: jdk.internal.misc.Unsafe::putIntUnaligned(Object, long, int, boolean) -> void
fifo write: @1699477103059649474 0x7f81e21acbd4 1172: java.lang.invoke.MethodType::changeParameterType(int, Class) -> java.lang.invoke.MethodType
fifo write: @1699477103059892507 0x7f81e21ad614 358: java.nio.ByteBuffer::order(java.nio.ByteOrder) -> java.nio.ByteBuffer
fifo write: @1699477103060046529 0x7f81e21adc46 2463: java.lang.invoke.MethodHandles::filterArgument(java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle) -> java.lang.invoke.MethodHandle
fifo write: @1699477103060259972 0x7f81e21af094 496: java.lang.invoke.BoundMethodHandle::makeReinvoker(java.lang.invoke.MethodHandle) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477103060473274 0x7f81e972f33d 230: java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle::set(java.lang.invoke.VarHandle, Object, int, int) -> void
fifo write: @1699477103060950121 0x7f81e91b071d 954: jdk.internal.org.objectweb.asm.MethodWriter::visitFieldInsn(int, String, String, String) -> void
fifo write: @1699477103062082375 0x7f81e95bd7b1 54: java.util.Objects::equals(Object, Object) -> boolean
fifo write: @1699477103063479743 0x7f81e95bd4cc 6: java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle::intrinsicName() -> java.lang.invoke.MethodHandleImpl$Intrinsic
fifo write: @1699477103063618475 0x7f81e16590bd 2064: jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn(int, int) -> void
fifo write: @1699477103064563617 0x7f81e164b937 2167: dkm$j::hashCode() -> int
fifo write: @1699477103064652998 0x7f81e17f21b7 2167: he$a::hashCode() -> int
fifo write: @1699477103064794810 0x7f81e95bd190 35: com.google.common.base.Preconditions::checkState(boolean, Object) -> void
fifo write: @1699477103064979983 0x7f81e16520d4 915: java.lang.invoke.MethodHandles$Lookup::checkField(byte, Class, java.lang.invoke.MemberName) -> void
fifo write: @1699477103065072674 0x7f81e17f4f14 1354: java.lang.invoke.BootstrapMethodInvoker::maybeReBox(Object) -> Object
fifo write: @1699477103065130294 0x7f81e16259f4 378: Double::doubleToLongBits(double) -> long
fifo write: @1699477103065326617 0x7f81e1656b16 1184: java.lang.invoke.DirectMethodHandle$Holder::getDouble(Object, Object) -> double
fifo write: @1699477103065510209 0x7f81e19525f1 262: java.lang.invoke.BoundMethodHandle$Species_L::copyWith(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477103065649101 0x7f81e972f8a5 1370: dzn::<init>(asc) -> void
fifo write: @1699477103065730852 0x7f81e17f1800 1009: java.lang.invoke.LambdaForm$MH.0x00007f8160a3d000::invoke(Object, Object) -> int
fifo write: @1699477103065810633 0x7f81e16586dc 674: java.lang.invoke.LambdaForm$DMH.0x00007f8160250c00::invokeStatic(Object, double) -> int
fifo write: @1699477103065874504 0x7f81e21af6f7 480: Double::hashCode(double) -> int
fifo write: @1699477103066044866 0x7f81e973088e 1910: java.lang.invoke.VarHandleGuards::guard_LII_V(java.lang.invoke.VarHandle, Object, int, int, java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477103066183978 0x7f81e21afebf 4920: dkm$l::hashCode() -> int
fifo write: @1699477103066246589 0x7f81e1770c94 185: dlg$a$$Lambda$5355.0x00007f8160a3e8b8::<init>(dlg$a) -> void
fifo write: @1699477103066315840 0x7f81e21b1f77 1661: dlg$a::apply(dkl) -> dkl
fifo write: @1699477103066366810 0x7f81e1631cf4 87: jdk.internal.misc.Unsafe::bool2byte(boolean) -> byte
fifo write: @1699477103066607494 0x7f81e21b2cb7 1735: dkm$h::hashCode() -> int
fifo write: @1699477103066875387 0x7f81e21b3c37 4936: dkl$c::hashCode() -> int
fifo write: @1699477103067193801 0x7f81e21b5ee7 6170: he$a::equals(Object) -> boolean
fifo write: @1699477103067277602 0x7f81e21b8882 3438: dkm$j::a(dkl$f) -> dkl
fifo write: @1699477103067425174 0x7f81e21ba167 6556: dkm$j::equals(Object) -> boolean
fifo write: @1699477103067565396 0x7f81e21bcde7 6556: dkm$l::equals(Object) -> boolean
fifo write: @1699477103067629257 0x7f81e1b26a94 379: dkm$a::<init>(dkm$y$a, dkl, dkl, double, double) -> void
fifo write: @1699477103067680167 0x7f81e9731ccc 6: dkm$l::j() -> dkm$l$a
fifo write: @1699477103067765139 0x7f81e21bf917 3007: dkm$s::hashCode() -> int
fifo write: @1699477103067815079 0x7f81e9731fcc 6: dkm$l::k() -> dkl
fifo write: @1699477103067870140 0x7f81e1656674 111: java.lang.runtime.ObjectMethods::eq(double, double) -> boolean
fifo write: @1699477103067947311 0x7f81e21c0eb6 1131: java.lang.invoke.LambdaForm$MH.0x00007f8160a3dc00::invoke(Object, Object, Object) -> int
fifo write: @1699477103068013032 0x7f81e21c18ff 671: java.lang.invoke.LambdaForm$DMH.0x00007f816024fc00::invokeStatic(Object, double, double) -> int
fifo write: @1699477103068091883 0x7f81e21c2097 3007: dkm$t::hashCode() -> int
fifo write: @1699477103068197474 0x7f81e21c3747 6577: dkm$y::a(dkm$y$a, dkl, dkl) -> dkm$y
fifo write: @1699477103068634710 0x7f81e1edb59f 4433: dkm$v::hashCode() -> int
fifo write: @1699477103068713861 0x7f81e1ed9dbf 3157: dkm$k::hashCode() -> int
fifo write: @1699477103068787952 0x7f81e21c64bf 3157: dkm$a::hashCode() -> int
fifo write: @1699477103068844472 0x7f81e1ed9614 324: dkm$l::<init>(dkm$l$a, dkl) -> void
fifo write: @1699477103068895183 0x7f81e97322cc 6: dkl$c::b() -> he
fifo write: @1699477103069069325 0x7f81e21c7e07 8038: dkm$s::equals(Object) -> boolean
fifo write: @1699477103069702494 0x7f81e97325d0 123: dkm$j::hashCode() -> int
fifo write: @1699477103069948507 0x7f81e20ac462 2802: dkm$m::a(dkl$f) -> dkl
fifo write: @1699477103070294491 0x7f81e9732ad0 123: he$a::hashCode() -> int
fifo write: @1699477103070907109 0x7f81e21cb24e 2212: java.lang.invoke.MethodHandles::filterArguments(java.lang.invoke.MethodHandle, int, java.lang.invoke.MethodHandle[]) -> java.lang.invoke.MethodHandle
fifo write: @1699477103071116482 0x7f81e1fd8034 907: java.lang.invoke.BoundMethodHandle$Species_LLLL::copyWithExtendL(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477103071277064 0x7f81e2098ff4 372: Float::floatToIntBits(float) -> int
fifo write: @1699477103071370945 0x7f81e20b8b80 1009: java.lang.invoke.LambdaForm$MH.0x00007f8160a43400::invoke(Object, Object) -> int
fifo write: @1699477103071440896 0x7f81e20b4a5c 562: java.lang.invoke.LambdaForm$DMH.0x00007f8160250800::invokeStatic(Object, float) -> int
fifo write: @1699477103071495017 0x7f81e20b8474 463: Float::hashCode(float) -> int
fifo write: @1699477103071574128 0x7f81e20b3fe9 1029: java.lang.invoke.DirectMethodHandle$Holder::getFloat(Object, Object) -> float
fifo write: @1699477103071660489 0x7f81e9733fa4 36: Double::hashCode(double) -> int
fifo write: @1699477103071865961 0x7f81e21cc637 2171: ara$c::hashCode() -> int
fifo write: @1699477103072038264 0x7f81e21cd6d9 983: java.util.ImmutableCollections$AbstractImmutableList::hashCode() -> int
fifo write: @1699477103072418639 0x7f81e21ce037 2167: dkm$w$a::hashCode() -> int
fifo write: @1699477103072802504 0x7f81e21cf157 4003: ara$e::hashCode() -> int
fifo write: @1699477103073150888 0x7f81e21d0c94 270: java.util.AbstractList$Itr::<init>(java.util.AbstractList) -> void
fifo write: @1699477103073216759 0x7f81e97342cc 6: java.lang.invoke.MethodType::rtype() -> Class
fifo write: @1699477103073276550 0x7f81e17f4214 101: java.util.Arrays$ArrayList::toArray() -> Object[]
fifo write: @1699477103073361881 0x7f81e17f1277 237: ara$e::a(ara$d, ara) -> ara
fifo write: @1699477103073432992 0x7f81e21d1194 610: ara$e$$Lambda$5357.0x00007f8160a3ef28::apply(Object) -> Object
fifo write: @1699477103073491942 0x7f81e21d1814 324: dkl$c::<init>(he, dzp) -> void
fifo write: @1699477103073591164 0x7f81e97345d4 235: dkm$l::hashCode() -> int
fifo write: @1699477103073637014 0x7f81e9734ccc 4: dkm$k::a() -> double
fifo write: @1699477103073680835 0x7f81e9734fcc 4: dkm$k::b() -> double
fifo write: @1699477103073744216 0x7f81e21d1e54 1508: dkm$k::a(dkm$k$a, double) -> double
fifo write: @1699477103073928948 0x7f81e97352d4 167: Math::max(float, float) -> float
fifo write: @1699477103073973529 0x7f81e97356cc 4: dzp::a() -> double
fifo write: @1699477103074186361 0x7f81e21d2b97 1800: dkl$d::a(dkl$f) -> dkl
fifo write: @1699477103074255172 0x7f81e97359b9 78: java.lang.invoke.DirectMethodHandle$Holder::getDouble(Object, Object) -> double
fifo write: @1699477103074466675 0x7f81e21d3b67 6124: dkm$h::equals(Object) -> boolean
fifo write: @1699477103074537316 0x7f81e21d64f7 1318: he$c::e() -> java.util.Optional
fifo write: @1699477103074597767 0x7f81e21d7094 230: dlg$$Lambda$5353.0x00007f8160a3e208::<init>(dlg, aev) -> void
fifo write: @1699477103074806639 0x7f81e21d77e7 6124: dkm$a::equals(Object) -> boolean
fifo write: @1699477103074871100 0x7f81e21da177 1752: dlg::a(aev) -> dzp
fifo write: @1699477103075382537 0x7f81e21daf3f 2274: dkm$a::a(dkl$f) -> dkl
fifo write: @1699477103075493428 0x7f81e21dc297 7530: dlg$a::a(dkl$c) -> dkl$c
fifo write: @1699477103075685631 0x7f81e9735d54 227: dkl$c::hashCode() -> int
fifo write: @1699477103075725971 0x7f81e21df2b4 232: dkl$c::a() -> double
fifo write: @1699477103076101016 0x7f81e21dfa87 7812: dkl$c::equals(Object) -> boolean
fifo write: @1699477103076167137 0x7f81e9736454 167: Math::min(float, float) -> float
fifo write: @1699477103076228968 0x7f81e9736831 60: dkm$h::hashCode() -> int
fifo write: @1699477103076311969 0x7f81e21e2d14 467: java.util.AbstractList$ListItr::<init>(java.util.AbstractList, int) -> void
fifo write: @1699477103076406670 0x7f81e21e33e0 1329: java.util.AbstractList::listIterator(int) -> java.util.ListIterator
fifo write: @1699477103076508121 0x7f81e21e3ff7 1542: java.lang.invoke.MethodType::parameterList() -> java.util.List
fifo write: @1699477103076753725 0x7f81e21e4ce0 1710: java.util.AbstractList::rangeCheckForAdd(int) -> void
fifo write: @1699477103076802675 0x7f81e1fd7b94 175: java.util.AbstractList::listIterator() -> java.util.ListIterator
fifo write: @1699477103076852906 0x7f81e21e5b54 1023: java.util.AbstractList$SubList$1::next() -> Object
fifo write: @1699477103076901136 0x7f81e21e6514 513: java.util.AbstractList$SubList::<init>(java.util.AbstractList, int, int) -> void
fifo write: @1699477103076963207 0x7f81e1f311f4 39: java.lang.invoke.MethodHandleImpl::profile(java.lang.invoke.MethodHandle) -> java.lang.invoke.MethodHandle
fifo write: @1699477103077015058 0x7f81e21e6bb7 610: java.util.AbstractList$RandomAccessSubList::<init>(java.util.AbstractList, int, int) -> void
fifo write: @1699477103077065909 0x7f81e21e72f7 1536: java.util.AbstractList::subList(int, int) -> java.util.List
fifo write: @1699477103077118869 0x7f81e9737259 194: java.lang.invoke.LambdaForm$MH.0x00007f8160a3d000::invoke(Object, Object) -> int
fifo write: @1699477103077230551 0x7f81e207b619 66: java.lang.invoke.MethodHandleImpl$Makers$1::apply(java.lang.invoke.MethodHandle) -> java.lang.invoke.LambdaForm
fifo write: @1699477103077278371 0x7f81e21e7f94 348: java.lang.invoke.MethodHandleImpl$Makers$1::apply(Object) -> Object
fifo write: @1699477103077340532 0x7f81e21e8494 441: java.lang.invoke.MethodHandleImpl::makeBlockInliningWrapper(java.lang.invoke.MethodHandle) -> java.lang.invoke.MethodHandle
fifo write: @1699477103077885339 0x7f81e97377b1 35: ara$c::hashCode() -> int
fifo write: @1699477103078146703 0x7f81e9737b4c 6: ara$e::f() -> java.util.List
fifo write: @1699477103078226614 0x7f81e21e8ab4 324: dkm$v::b() -> double
fifo write: @1699477103079417659 0x7f81e21e9307 8038: dkm$t::equals(Object) -> boolean
fifo write: @1699477103079583721 0x7f81e21ec987 8038: dkm$v::equals(Object) -> boolean
fifo write: @1699477103080349531 0x7f81e9737ede 6296: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477103080997669 0x7f81e973b4d4 540: dkm$a::hashCode() -> int
fifo write: @1699477103081205132 0x7f81e21efd14 334: dkm$k::<init>(dkm$k$a, dkl, double, double) -> void
fifo write: @1699477103081362484 0x7f81e21f0327 1955: dkm$k::a(dkm$k$a, dkl) -> dkm$k
fifo write: @1699477103081510326 0x7f81e973c050 251: dkm$s::hashCode() -> int
fifo write: @1699477103081559046 0x7f81e973c863 308: java.util.ImmutableCollections$AbstractImmutableList::hashCode() -> int
fifo write: @1699477103081598607 0x7f81e21f1314 280: dkm$k::b(dkl$f) -> dkm$k
fifo write: @1699477103081657738 0x7f81e973ce50 251: dkm$t::hashCode() -> int
fifo write: @1699477103081697608 0x7f81e21f1834 377: dkm$k::a(dkl$f) -> dkl
fifo write: @1699477103081943721 0x7f81e973d654 391: dkm$k::hashCode() -> int
fifo write: @1699477103082784182 0x7f81e21f2067 5898: dkm$k::equals(Object) -> boolean
fifo write: @1699477103082828213 0x7f81e207c614 240: dkm$l::b() -> double
fifo write: @1699477103082880083 0x7f81e209f514 240: dkm$l::a() -> double
fifo write: @1699477103082929814 0x7f81e973dfcc 3: dlh$a::c() -> long
fifo write: @1699477103082982964 0x7f81e21f4814 242: dlh$a::<init>(long, long) -> void
fifo write: @1699477103083021675 0x7f81e973e2cc 3: dlh$a::b() -> long
fifo write: @1699477103083136616 0x7f81e973e5d4 175: dkm$j::equals(Object) -> boolean
fifo write: @1699477103083185467 0x7f81e21f4cb4 686: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher::checkNotDone() -> void
fifo write: @1699477103083455230 0x7f81e21f58fc 1705: sun.security.provider.ByteArrayAccess::i2bLittle4(int, byte[], int) -> void
fifo write: @1699477103083537872 0x7f81e973eda1 710: java.lang.invoke.LambdaForm$MH.0x00007f8160259800::invoke(Object, Object, Object) -> int
fifo write: @1699477103083643233 0x7f81e21f6714 424: dkm$v::<init>(dkl, dkl, dkl, double, double, dkl$c) -> void
fifo write: @1699477103083932777 0x7f81e973f8f5 945: dkm$v::hashCode() -> int
fifo write: @1699477103083996807 0x7f81e21f6d94 279: dkm$s::<init>(dkl$c) -> void
fifo write: @1699477103084057708 0x7f81e21f7294 279: dkm$t::<init>(dkl$c) -> void
fifo write: @1699477103084145269 0x7f81e21f7794 442: dkm$w$$Lambda$5356.0x00007f8160a3ed00::visit(Object) -> Object
fifo write: @1699477103084194330 0x7f81e21f7d77 90: dkm$w::a(dkl$f, dkm$w$a) -> dkm$w$a
fifo write: @1699477103084293291 0x7f81e21f8242 2409: dkm$s::a(dkl$f) -> dkl
fifo write: @1699477103084363742 0x7f81e21f944b 1538: dkm$w$a::a(dkl$f) -> dkm$w$a
fifo write: @1699477103084446123 0x7f81e21fa142 2409: dkm$t::a(dkl$f) -> dkl
fifo write: @1699477103084501834 0x7f81e21fb2d4 390: dkm$v::a() -> double
fifo write: @1699477103084576885 0x7f81e21fb894 185: ara$e$$Lambda$5357.0x00007f8160a3ef28::<init>(ara$d) -> void
fifo write: @1699477103084626125 0x7f81e21fbcf4 111: java.lang.runtime.ObjectMethods::eq(float, float) -> boolean
fifo write: @1699477103084686856 0x7f81e21fc200 1209: java.lang.invoke.LambdaForm$MH.0x00007f8160a44000::invoke(Object, Object, Object) -> int
fifo write: @1699477103084755577 0x7f81e21fcd07 2785: dkm$v::a(dkl$f) -> dkl
fifo write: @1699477103084810368 0x7f81e21fe17f 671: java.lang.invoke.LambdaForm$DMH.0x00007f816024f400::invokeStatic(Object, float, float) -> int
fifo write: @1699477103084883969 0x7f81e97409b9 78: java.lang.invoke.DirectMethodHandle$Holder::getFloat(Object, Object) -> float
fifo write: @1699477103084933479 0x7f81e21fe7f4 95: it.unimi.dsi.fastutil.ints.IntRBTreeSet$SetIterator::hasNext() -> boolean
fifo write: @1699477103084998210 0x7f81e21febf4 20: java.util.stream.ReduceOps$CountingSink$OfRef::accept(Object) -> void
fifo write: @1699477103085052281 0x7f81e21fef74 93: it.unimi.dsi.fastutil.ints.IntRBTreeSet$Entry::black() -> boolean
fifo write: @1699477103085107202 0x7f81e21ff374 96: it.unimi.dsi.fastutil.ints.IntRBTreeSet$Entry::pred() -> boolean
fifo write: @1699477103085181343 0x7f81e21ff8e7 3680: ara$e::a(ara$d) -> ara
fifo write: @1699477103085720690 0x7f81e9740d50 123: dkm$w$a::hashCode() -> int
fifo write: @1699477103085876722 0x7f81e9741254 195: he$a::equals(Object) -> boolean
fifo write: @1699477103087250529 0x7f81e9741a58 251: dkm$l::equals(Object) -> boolean
fifo write: @1699477103087357731 0x7f81e22013d9 2776: java.util.ImmutableCollections$AbstractImmutableList::equals(Object) -> boolean
fifo write: @1699477103087516183 0x7f81e97423f4 601: ara$e::hashCode() -> int
fifo write: @1699477103087749296 0x7f81e2202654 90: java.lang.reflect.Modifier::isVolatile(int) -> boolean
fifo write: @1699477103088382624 0x7f81e2202ce7 5946: ara$e::equals(Object) -> boolean
fifo write: @1699477103088434565 0x7f81e97430b9 86: java.lang.invoke.LambdaForm$DMH.0x00007f8160250c00::invokeStatic(Object, double) -> int
fifo write: @1699477103088548876 0x7f81e22056e7 6170: dkm$w$a::equals(Object) -> boolean
fifo write: @1699477103089883393 0x7f81e2208037 2167: dkm$w::hashCode() -> int
fifo write: @1699477103089958444 0x7f81e2209014 369: dlg$a$$Lambda$5355.0x00007f8160a3e8b8::apply(Object) -> Object
fifo write: @1699477103090462381 0x7f81e22096da 3521: dlg$a::a(dkl) -> dkl
fifo write: @1699477103090539812 0x7f81e220b23f 3157: dkm$o::hashCode() -> int
fifo write: @1699477103090621633 0x7f81e220c894 185: dku::<init>(asc) -> void
fifo write: @1699477103090904896 0x7f81e974382e 1259: dkm$j::a(dkl$f) -> dkl
fifo write: @1699477103090937877 0x7f81e9744612 133: Double::compare(double, double) -> int
fifo write: @1699477103091235491 0x7f81e9744a62 1717: dzn::<init>(asc) -> void
fifo write: @1699477103091963310 0x7f81e9745e3c 83: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, int) -> int
fifo write: @1699477103092284794 0x7f81e97461d9 194: java.lang.invoke.LambdaForm$MH.0x00007f816041a000::invoke(Object, Object) -> int
fifo write: @1699477103092609398 0x7f81e220ce3f 3157: dkm$aa::hashCode() -> int
fifo write: @1699477103093977916 0x7f81e220e497 237: dkl$d::a(dkl$f) -> dkl
fifo write: @1699477103094032567 0x7f81e220e93a 856: dkm$t::a(dkl$f) -> dkl
fifo write: @1699477103094674145 0x7f81e220f194 185: dlg$1$$Lambda$5358.0x00007f8160a3f5c0::<init>(dlg$1) -> void
fifo write: @1699477103094811627 0x7f81e220f65a 1202: dkm$m::a(dkl$f) -> dkl
fifo write: @1699477103094912138 0x7f81e22100f7 1589: dlg$1::apply(dkl) -> dkl
fifo write: @1699477103095059770 0x7f81e2210d14 475: java.util.AbstractList$RandomAccessSpliterator::get(java.util.List, int) -> Object
fifo write: @1699477103095365054 0x7f81e2211334 706: dkm$a::a(dkl$f) -> dkl
fifo write: @1699477103095411045 0x7f81e9746dcc 4: dkm$n::a() -> double
fifo write: @1699477103095448065 0x7f81e97470cc 4: dkm$n::b() -> double
fifo write: @1699477103095546416 0x7f81e2211c3f 3157: dkm$n::hashCode() -> int
fifo write: @1699477103095735429 0x7f81e97473b2 149: java.lang.runtime.ObjectMethods::eq(double, double) -> boolean
fifo write: @1699477103096692931 0x7f81e2213294 509: java.util.stream.DistinctOps$1$2::accept(Object) -> void
fifo write: @1699477103096741172 0x7f81e2213894 337: crg$$Lambda$5363.0x00007f8160a46918::apply(Object) -> Object
fifo write: @1699477103097119057 0x7f81e9747b59 54: crg$$Lambda$5363.0x00007f8160a46918::apply(Object) -> Object
fifo write: @1699477103097646373 0x7f81e9747f4e 1529: dkm$j::a(dkl$f) -> dkl
fifo write: @1699477103097698834 0x7f81e8bdca80 464: I2C/C2I adapters(0xbbbbeba)
fifo write: @1699477103098057659 0x7f81e9748ff9 418: java.util.stream.DistinctOps$1$2::accept(Object) -> void
fifo write: @1699477103098376813 0x7f81e2213d94 47: StrictMath::ceil(double) -> double
fifo write: @1699477103098500655 0x7f81e2214197 920: StrictMath::floorOrCeil(double, double, double, double) -> double
fifo write: @1699477103098542145 0x7f81e2214a94 450: java.util.stream.IntPipeline$1$1::accept(int) -> void
fifo write: @1699477103098598736 0x7f81e9749775 548: java.util.Spliterators$ArraySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477103100691803 0x7f81e974a64c 2: java.util.concurrent.atomic.AtomicInteger::get() -> int
fifo write: @1699477103102014120 0x7f81e8bd8900 464: I2C/C2I adapters(0xbbebaaa)
fifo write: @1699477103102258433 0x7f81e974a9f5 1965: java.util.stream.MatchOps$MatchOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477103104801496 0x7f81e8bd8600 480: I2C/C2I adapters(0xbbebeaaaa)
fifo write: @1699477103104814976 0x7f81e8bd8300 456: I2C/C2I adapters(0xbbebeaa)
fifo write: @1699477103105740378 0x7f81e8bd8000 456: I2C/C2I adapters(0xbba6a)
fifo write: @1699477103111051767 0x7f81e2215094 395: java.util.AbstractList$RandomAccessSpliterator::getFence() -> int
fifo write: @1699477103111582303 0x7f81e974caf4 156: java.lang.invoke.InfoFromMemberName::<init>(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MemberName, byte) -> void
fifo write: @1699477103111653444 0x7f81e2215694 137: java.util.concurrent.CompletableFuture::<init>() -> void
fifo write: @1699477103111733975 0x7f81e2215a54 27: java.util.concurrent.ThreadLocalRandom::getProbe() -> int
fifo write: @1699477103111831117 0x7f81e2215df4 301: Math::round(double) -> long
fifo write: @1699477103112122030 0x7f81e22162f4 199: dzs::a(int[], double, double, double) -> double
fifo write: @1699477103112194381 0x7f81e2216774 101: dzn::a(int, double, double, double) -> double
fifo write: @1699477103112270752 0x7f81e2216b74 108: dzn::a(int) -> int
fifo write: @1699477103112411504 0x7f81e974cec8 1555: java.lang.invoke.MethodHandles$Lookup::revealDirect(java.lang.invoke.MethodHandle) -> java.lang.invoke.MethodHandleInfo
fifo write: @1699477103112446625 0x7f81e2216f94 55: dzq::b(double) -> double
fifo write: @1699477103112480145 0x7f81e2217374 153: arw::b(double) -> long
fifo write: @1699477103112631567 0x7f81e2217817 156: arw::a(double, double, double, double, double, double) -> double
fifo write: @1699477103112956231 0x7f81e974e359 62: dzs::a(int[], double, double, double) -> double
fifo write: @1699477103112997982 0x7f81e974e6d0 71: dzn::a(int) -> int
fifo write: @1699477103113046352 0x7f81e2218417 228: arw::a(double, double, double, double, double, double, double, double, double, double, double) -> double
fifo write: @1699477103113069133 0x7f81e8bd7a80 448: I2C/C2I adapters(0x6bab)
fifo write: @1699477103113253015 0x7f81e2218a14 234: java.util.concurrent.CompletableFuture$Completion::<init>() -> void
fifo write: @1699477103113334186 0x7f81e2218f00 795: dzn::a(double, double, double, double, double) -> double
fifo write: @1699477103113366056 0x7f81e974f04c 2: dkl$e::c() -> int
fifo write: @1699477103113398797 0x7f81e974f34c 2: dkl$e::a() -> int
fifo write: @1699477103113500138 0x7f81e2219a7f 3333: dzn::a(int, int, int, double, double, double, double) -> double
fifo write: @1699477103113541639 0x7f81e8bdc780 448: I2C/C2I adapters(0xb6ba)
fifo write: @1699477103113608580 0x7f81e221c150 1085: dzq::a(double, double, double, double, double, boolean) -> double
fifo write: @1699477103113679780 0x7f81e221cd94 39: dzq::a(double, double, double) -> double
fifo write: @1699477103114227078 0x7f81e975053e 117: dzn::a(int, double, double, double) -> double
fifo write: @1699477103114402630 0x7f81e221d30e 4410: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477103114425780 0x7f81e8bdc480 440: I2C/C2I adapters(0x6bb)
fifo write: @1699477103114524391 0x7f81e221f440 1243: java.lang.invoke.VarHandleInts$FieldInstanceReadWrite::compareAndSet(java.lang.invoke.VarHandle, Object, int, int) -> boolean
fifo write: @1699477103114570712 0x7f81e221ff94 230: dkl$c::a(double, double, double) -> double
fifo write: @1699477103114620103 0x7f81e22204dc 292: dzp::a(double, double, double) -> double
fifo write: @1699477103114832005 0x7f81e2220a7a 270: java.lang.invoke.DirectMethodHandle::make(Class, java.lang.invoke.MemberName) -> java.lang.invoke.DirectMethodHandle
fifo write: @1699477103114875156 0x7f81e9750ea7 34: arw::a(double) -> int
fifo write: @1699477103114912776 0x7f81e97511cc 2: dkl$e::b() -> int
fifo write: @1699477103115040088 0x7f81e2221167 5428: java.util.concurrent.CompletableFuture::tryPushStack(java.util.concurrent.CompletableFuture$Completion) -> boolean
fifo write: @1699477103115135579 0x7f81e22236fc 2118: StackStreamFactory$FrameBuffer::next() -> Class
fifo write: @1699477103115186170 0x7f81e97514dc 123: dzq::b(double) -> double
fifo write: @1699477103115481244 0x7f81e9751ecc 6: dkm$t::j() -> dkl$c
fifo write: @1699477103115684716 0x7f81e2224c0a 7321: java.lang.invoke.VarHandleGuards::guard_LII_Z(java.lang.invoke.VarHandle, Object, int, int, java.lang.invoke.VarHandle$AccessDescriptor) -> boolean
fifo write: @1699477103115724217 0x7f81e97521cc 6: dkm$s::j() -> dkl$c
fifo write: @1699477103115759617 0x7f81e2227b54 336: dkm$u::a(double, double, double) -> double
fifo write: @1699477103115797958 0x7f81e97524cc 6: dkm$n::aw_() -> dkl
fifo write: @1699477103116148392 0x7f81e22280c1 511: crc$e$b::a(long[]) -> long
fifo write: @1699477103117148645 0x7f81e2228814 321: ara$e$$Lambda$5391.0x00007f8160a5edd8::test(int) -> boolean
fifo write: @1699477103117245727 0x7f81e97527b1 279: java.lang.invoke.LambdaForm::internArgument(java.lang.invoke.LambdaForm$Name) -> java.lang.invoke.LambdaForm$Name
fifo write: @1699477103117288787 0x7f81e2228d74 218: ara$e::a(float, float[], int) -> boolean
fifo write: @1699477103117304007 0x7f81e8bdc180 568: I2C/C2I adapters(0xbbbbbbbbbbeb)
fifo write: @1699477103117365938 0x7f81e22292e1 1476: crc$e$c::a(long[], crc$e$a, crc$a) -> crc$e$a
fifo write: @1699477103117404189 0x7f81e222a034 600: dkm$p::a(dkl$b) -> double
fifo write: @1699477103117447409 0x7f81e222a694 358: crc$b::a(long) -> long
fifo write: @1699477103117492020 0x7f81e222ac97 229: crc$c$$Lambda$5408.0x00007f8160a6c000::distance(crc$e$b, long[]) -> long
fifo write: @1699477103117776303 0x7f81e9752d78 783: java.lang.invoke.MethodType::equals(Object) -> boolean
fifo write: @1699477103118051467 0x7f81e9753d24 11: arw::a(double, double, double, double, double, double) -> double
fifo write: @1699477103118421112 0x7f81e9754350 67: java.lang.invoke.MethodHandles$Lookup::ensureDefineClassPermission() -> void
fifo write: @1699477103118931338 0x7f81e222b0f4 4: dkm$h::a(dkl$b) -> double
fifo write: @1699477103118991679 0x7f81e222b494 434: dkm$t::a(dkl$b) -> double
fifo write: @1699477103119056070 0x7f81e222bae1 1129: dkm$v::a(dkl$b) -> double
fifo write: @1699477103119110151 0x7f81e222c614 434: dkm$s::a(dkl$b) -> double
fifo write: @1699477103119151591 0x7f81e97546b3 21: crc$b::a(long) -> long
fifo write: @1699477103119197122 0x7f81e97549cc 6: dkm$w$b::a() -> dkl$b
fifo write: @1699477103119244042 0x7f81e9754ccc 6: dkm$k::aw_() -> dkl
fifo write: @1699477103120553399 0x7f81e222cc14 473: dkm$n::a(double) -> double
fifo write: @1699477103120829113 0x7f81e97550dd 2626: java.lang.invoke.AbstractValidatingLambdaMetafactory::isAdaptableToAsReturn(Class, Class) -> boolean
fifo write: @1699477103121584013 0x7f81e222d274 4: ara$c::a(Object) -> float
fifo write: @1699477103121939677 0x7f81e222d614 459: java.util.stream.ReferencePipeline::findFirst() -> java.util.Optional
fifo write: @1699477103122191860 0x7f81e222dbe4 341: java.util.stream.FindOps$FindSink$OfRef$$Lambda$38.0x800000049::get() -> Object
fifo write: @1699477103122234301 0x7f81e8bdbe80 456: I2C/C2I adapters(0xbb7e7ebe)
fifo write: @1699477103123301765 0x7f81e222e1f9 2611: dkm$a::a(dkl$b) -> double
fifo write: @1699477103123348245 0x7f81e222f5b4 743: dkm$w$a::a(dkm$w$b) -> float
fifo write: @1699477103123436616 0x7f81e222fd14 190: ara$e$$Lambda$5391.0x00007f8160a5edd8::<init>(float, float[]) -> void
fifo write: @1699477103123520758 0x7f81e2230367 6108: ara$e::a(Object) -> float
fifo write: @1699477103123559018 0x7f81e2232a94 31: dkm$k::a(double) -> double
fifo write: @1699477103128818575 0x7f81e2232ed7 1200: ara$e::a(float[], float) -> int
fifo write: @1699477103129018658 0x7f81e9757c38 3763: java.lang.invoke.MethodType$ConcurrentWeakInternSet::get(Object) -> Object
fifo write: @1699477103129126519 0x7f81e9759e98 3215: dzn::a(double, double, double, double, double) -> double
fifo write: @1699477103129446303 0x7f81e975c4f8 3671: java.lang.invoke.AbstractValidatingLambdaMetafactory::checkDescriptor(java.lang.invoke.MethodType) -> void
fifo write: @1699477103133326573 0x7f81e2233ab6 1260: java.lang.invoke.LambdaForm$DMH.0x00007f8160188400::newInvokeSpecial(Object, float, Object) -> Object
fifo write: @1699477103133368434 0x7f81e975f7cc 6: crh::a() -> crc$c
fifo write: @1699477103133544416 0x7f81e9760112 1717: ehq$$Lambda$598.0x00007f8160327c20::merge(int, int, int) -> boolean
fifo write: @1699477103133582887 0x7f81e97578cc 2: it.unimi.dsi.fastutil.doubles.DoubleArrayList$1::nextIndex() -> int
fifo write: @1699477103133617897 0x7f81e2234534 367: dkh::j() -> double
fifo write: @1699477103136215131 0x7f81e8bd9900 448: I2C/C2I adapters(0xbaa7eb)
fifo write: @1699477103136728397 0x7f81e976221a 1249: dzq::a(double, double, double, double, double, boolean) -> double
fifo write: @1699477103136782858 0x7f81e9763253 148: crc$e$b::a(long[]) -> long
fifo write: @1699477103136874339 0x7f81e2234e76 495: java.lang.invoke.LambdaForm$MH.0x00007f8160a63c00::linkToTargetMethod(float, Object, Object) -> Object
fifo write: @1699477103136911390 0x7f81e9763a34 59: arw::a(double, double, double, double, double, double, double, double, double, double, double) -> double
fifo write: @1699477103137005431 0x7f81e9763e57 3044: dzn::a(int, int, int, double, double, double, double) -> double
fifo write: @1699477103137061592 0x7f81e2235434 1089: dkm$w$a::a(Object) -> float
fifo write: @1699477103137113972 0x7f81e2235d94 213: dkm$aa::a(dkl$b) -> double
fifo write: @1699477103137165053 0x7f81e223633c 2063: crc$f::a(int, int, int) -> crc$h
fifo write: @1699477103137218784 0x7f81e22373d4 1123: crg::d() -> crc$c
fifo write: @1699477103137305155 0x7f81e2238034 604: crc$c::a(crc$h) -> Object
fifo write: @1699477103137376686 0x7f81e2238734 902: crg$$Lambda$5362.0x00007f8160a466d8::apply(Object) -> Object
fifo write: @1699477103141126064 0x7f81e2238f37 720: dkm$w::a(dkl$b) -> double
fifo write: @1699477103141189955 0x7f81e2239797 897: crc::a(float, float, float, float, float, float) -> crc$h
fifo write: @1699477103141234675 0x7f81e223a014 273: crc$h::<init>(long, long, long, long, long, long) -> void
fifo write: @1699477103141290196 0x7f81e223a5b4 507: crc$c::c(crc$h) -> Object
fifo write: @1699477103141345407 0x7f81e223ac14 93: crc$c::a(crc$h, crc$a) -> Object
fifo write: @1699477103141395417 0x7f81e223aff4 515: crg::b(he) -> crc$c
fifo write: @1699477103141435608 0x7f81e223b5f4 79: arw::a(double, double, double, double, double) -> double
fifo write: @1699477103141552219 0x7f81e9766062 1601: ehq::a(ehr, ehw, int, int, ehw, int, int, ehq, int, int, int[], boolean[], int, int, int) -> boolean
fifo write: @1699477103141598330 0x7f81e223ba77 269: crc$h::a() -> long[]
fifo write: @1699477103141642921 0x7f81e223c014 279: dkm$w$b::<init>(dkl$b) -> void
fifo write: @1699477103141697971 0x7f81e223c514 516: dhh$$Lambda$5383.0x00007f8160a571b8::test(Object) -> boolean
fifo write: @1699477103141739762 0x7f81e223cb17 240: hi$c::a(he) -> boolean
fifo write: @1699477103141780902 0x7f81e223cf94 243: he$c::a(aqh) -> boolean
fifo write: @1699477103141840733 0x7f81e223d459 964: crc$e::a(crc$h, crc$a) -> Object
fifo write: @1699477103141880434 0x7f81e223dd94 244: dkl$e::<init>(int, int, int) -> void
fifo write: @1699477103141940285 0x7f81e223e274 387: java.util.AbstractList$RandomAccessSpliterator::checkAbstractListModCount(java.util.AbstractList, int) -> void
fifo write: @1699477103147242593 0x7f81e223e89e 1596: java.util.AbstractList$RandomAccessSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477103147296934 0x7f81e223f694 137: it.unimi.dsi.fastutil.longs.AbstractLong2ObjectFunction::<init>() -> void
fifo write: @1699477103147424035 0x7f81e223fa94 234: it.unimi.dsi.fastutil.longs.AbstractLong2ObjectMap::<init>() -> void
fifo write: @1699477103147472146 0x7f81e223ff34 39: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::<init>() -> void
fifo write: @1699477103147557137 0x7f81e22403dc 2388: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::<init>(int, float) -> void
fifo write: @1699477103147606538 0x7f81e2241594 328: it.unimi.dsi.fastutil.longs.AbstractLong2ObjectSortedMap::<init>() -> void
fifo write: @1699477103147665428 0x7f81e2241ab4 394: akb$$Lambda$5367.0x00007f8160a3fdd8::apply(int) -> Object
fifo write: @1699477103147732199 0x7f81e22420f4 209: akb::a(int) -> it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap
fifo write: @1699477103147836701 0x7f81e97675ce 769: arw::a(int, int, java.util.function.IntPredicate) -> int
fifo write: @1699477103147918602 0x7f81e2242657 2614: crg::getNoiseBiome(int, int, int, crc$f) -> he
fifo write: @1699477103148056503 0x7f81e224381c 274: arw::b(double, double, double) -> double
fifo write: @1699477103148132094 0x7f81e2243e37 2160: crg::a(crc$h) -> he
fifo write: @1699477103148622911 0x7f81e97682f7 6324: java.lang.invoke.InnerClassLambdaMetafactory::generateConstructor() -> void
fifo write: @1699477103148715292 0x7f81e976d0fc 795: dkh::a(int) -> int
fifo write: @1699477103148869454 0x7f81e976dd50 195: crc$c$$Lambda$5408.0x00007f8160a6c000::distance(crc$e$b, long[]) -> long
fifo write: @1699477103148912795 0x7f81e2244d14 147: hy::<init>(int, int, int) -> void
fifo write: @1699477103149410731 0x7f81e976e345 2578: dzn::<init>(asc) -> void
fifo write: @1699477103149713665 0x7f81e97700a7 1156: dzq::a(double, double, double) -> double
fifo write: @1699477103150961941 0x7f81e977101b 2264: crc$e$c::a(long[], crc$e$a, crc$a) -> crc$e$a
fifo write: @1699477103151751831 0x7f81e9772da8 739: eig$$Lambda$600.0x00007f81603232b0::<init>(eid$a, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList) -> void
fifo write: @1699477103152560362 0x7f81e977391e 91: crc$h::a() -> long[]
fifo write: @1699477103152877476 0x7f81e9773e09 578: dkm$p::a(dkl$b) -> double
fifo write: @1699477103153696936 0x7f81e9774bb6 2917: dkl$c::a(double, double, double) -> double
fifo write: @1699477103153840308 0x7f81e9776eb6 2921: dzp::a(double, double, double) -> double
fifo write: @1699477103154006240 0x7f81e9779099 150: dkm$s::a(dkl$b) -> double
fifo write: @1699477103154443036 0x7f81e9779550 131: dkm$n::a(double) -> double
fifo write: @1699477103154607848 0x7f81e9779a19 150: dkm$t::a(dkl$b) -> double
fifo write: @1699477103154815041 0x7f81e977a1d0 95: ara$e$$Lambda$5391.0x00007f8160a5edd8::test(int) -> boolean
fifo write: @1699477103158290686 0x7f81e977a5b0 331: dkm$k::a(dkm$k$a, double) -> double
fifo write: @1699477103158482388 0x7f81e977ad6c 3031: dkm$u::a(double, double, double) -> double
fifo write: @1699477103158552979 0x7f81e977d0a7 368: java.util.ImmutableCollections$SetN::probe(Object) -> int
fifo write: @1699477103158665260 0x7f81e977d8fd 1046: dkm$w$a::a(Object) -> float
fifo write: @1699477103160681046 0x7f81e977ea50 335: dkm$k::a(double) -> double
fifo write: @1699477103160751117 0x7f81e977f140 659: dkm$a::a(dkl$b) -> double
fifo write: @1699477103160802828 0x7f81e2245194 244: gw::<init>(int, int, int) -> void
fifo write: @1699477103166811526 0x7f81e977fb58 999: aqh::equals(Object) -> boolean
fifo write: @1699477103166925667 0x7f81e9780b7f 1906: ThreadLocal::set(Object) -> void
fifo write: @1699477103169235327 0x7f81e9781fd7 500: java.util.ImmutableCollections$SetN::contains(Object) -> boolean
fifo write: @1699477103169384379 0x7f81e97828fa 1884: ThreadLocal$ThreadLocalMap::set(ThreadLocal, Object) -> void
fifo write: @1699477103182430426 0x7f81e9784046 9349: dkm$v::a(dkl$b) -> double
fifo write: @1699477103185788610 0x7f81e978a630 3189: dhh$$Lambda$5383.0x00007f8160a571b8::test(Object) -> boolean
fifo write: @1699477103185831630 0x7f81e978d069 323: crc::a(float, float, float, float, float, float) -> crc$h
fifo write: @1699477103185959692 0x7f81e978d773 4145: crc$f::a(int, int, int) -> crc$h
fifo write: @1699477103186139764 0x7f81e9790b79 242: dkm$aa::a(dkl$b) -> double
fifo write: @1699477103195007119 0x7f81e9791412 13865: ara$e::a(Object) -> float
fifo write: @1699477103195984531 0x7f81e9799634 17456: java.lang.invoke.InnerClassLambdaMetafactory::<init>(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MethodType, String, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean, Class[], java.lang.invoke.MethodType[]) -> void
fifo write: @1699477103196063092 0x7f81e97a2bd9 106: crg$$Lambda$5362.0x00007f8160a466d8::apply(Object) -> Object
fifo write: @1699477103197277938 0x7f81e97a3058 171: arw::a(double, double, double, double, double) -> double
fifo write: @1699477103197329739 0x7f81e97a34b0 15: crc$h::<init>(long, long, long, long, long, long) -> void
fifo write: @1699477103197378039 0x7f81e97a37d6 161: arw::b(double, double, double) -> double
fifo write: @1699477103197808285 0x7f81e97a3c30 3165: hi$c::a(he) -> boolean
fifo write: @1699477103205067899 0x7f81e97a6634 2901: he$c::a(aqh) -> boolean
fifo write: @1699477103215175999 0x7f81e22457b7 5520: cqx::a(int, int, int, int, int, java.util.function.Predicate, asc, boolean, crc$f) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103215696945 0x7f81e97a962e 11506: dkm$w::a(dkl$b) -> double
fifo write: @1699477103228591412 0x7f81e2247e91 218: dkm$w::a(dkl$b) -> double
fifo write: @1699477103228793444 0x7f81e22484c7 4847: cqx::a(int, int, int, int, int, java.util.function.Predicate, asc, boolean, crc$f) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103228885025 0x7f81e97afb33 164: ara$e::a(float[], float) -> int
fifo write: @1699477103229031397 0x7f81e97b045e 153: ara$e::a(float, float[], float, float[], int) -> float
fifo write: @1699477103247047950 0x7f81e97b0a06 7067: crc$e::a(crc$h, crc$a) -> Object
fifo write: @1699477103248130384 0x7f81e97b58a1 12010: crg::getNoiseBiome(int, int, int, crc$f) -> he
fifo write: @1699477103260733906 0x7f81e97be012 14525: ara$e::a(Object) -> float
fifo write: @1699477103260928478 0x7f81e97c66b3 3483: cqx::a(int, int, int, int, int, java.util.function.Predicate, asc, boolean, crc$f) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103270018266 0x7f81e97c85a3 2107: cqx::a(int, int, int, int, int, java.util.function.Predicate, asc, boolean, crc$f) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103285317933 0x7f81e97ca0ce 14745: dkm$w::a(dkl$b) -> double
fifo write: @1699477103296628349 0x7f81e224aa86 4861: java.util.concurrent.CompletableFuture$BiRelay::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103308576143 0x7f81e224cca1 1588: ara$e::a(Object) -> float
fifo write: @1699477103369169634 0x7f81e97d2753 428: jdk.internal.ref.PhantomCleanable::isListEmpty() -> boolean
fifo write: @1699477103369331816 0x7f81e97d2cd4 18: java.lang.invoke.MethodHandleNatives$CallSiteContext::run() -> void
fifo write: @1699477103381142639 0x7f81e97d3626 27325: java.lang.invoke.LambdaMetafactory::metafactory(java.lang.invoke.MethodHandles$Lookup, String, java.lang.invoke.MethodType, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType) -> java.lang.invoke.CallSite
fifo write: @1699477103387027414 0x7f81e224dfb7 720: dkm$w::a(dkl$b) -> double
fifo write: @1699477103403659218 0x7f81e97e4410 32361: eig::b(eid$a) -> void
fifo write: @1699477103406128760 0x7f81e97fc432 15281: ara$e::a(Object) -> float
fifo write: @1699477103414066493 0x7f81e224e6d4 142: hw::a(int, int) -> int
fifo write: @1699477103416915560 0x7f81e98054cc 6: dlg::b() -> crc$f
fifo write: @1699477103416977070 0x7f81e224eb14 328: it.unimi.dsi.fastutil.longs.AbstractLongSet::<init>() -> void
fifo write: @1699477103417035421 0x7f81e224f014 234: it.unimi.dsi.fastutil.longs.AbstractLongCollection::<init>() -> void
fifo write: @1699477103417773481 0x7f81e980579a 47: it.unimi.dsi.fastutil.HashCommon::maxFill(int, float) -> int
fifo write: @1699477103418669612 0x7f81e224f494 422: it.unimi.dsi.fastutil.longs.AbstractLongSortedSet::<init>() -> void
fifo write: @1699477103418755723 0x7f81e224fadc 2254: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::<init>(int, float) -> void
fifo write: @1699477103418812444 0x7f81e2250c14 79: eac$1::<init>(eac, int, float, int) -> void
fifo write: @1699477103420397715 0x7f81e9805acc 4: dzq::a() -> double
fifo write: @1699477103424907063 0x7f81e22510da 1167: dkt::<init>(long) -> void
fifo write: @1699477103424964224 0x7f81e2251b34 422: dkt::b(long) -> void
fifo write: @1699477103425019374 0x7f81e2252214 234: java.util.concurrent.atomic.AtomicLong::<init>() -> void
fifo write: @1699477103425060065 0x7f81e2252674 3: dku::a() -> void
fifo write: @1699477103427555557 0x7f81e2252a14 345: com.google.common.collect.CollectCollectors$$Lambda$258.0x00007f81601a6f30::accept(Object, Object) -> void
fifo write: @1699477103428191165 0x7f81e2252f14 516: dhh$$Lambda$5364.0x00007f8160a46b58::test(Object) -> boolean
fifo write: @1699477103428346697 0x7f81e9806c1c 477: ehq::a(ehz, ehr, ehw, int, ehw, int, ehq, int, int[], boolean[], int, int, int) -> boolean
fifo write: @1699477103428504159 0x7f81e9805ddc 716: ehq$$Lambda$597.0x00007f81603279f8::merge(int, int, int) -> boolean
fifo write: @1699477103429043316 0x7f81e9807626 1280: ehq$$Lambda$598.0x00007f8160327c20::<init>(ehr, ehw, int, int, ehw, int, int, ehq, int, int, int[], boolean[]) -> void
fifo write: @1699477103430318842 0x7f81e980827d 717: com.google.common.collect.ImmutableList::iterator() -> java.util.Iterator
fifo write: @1699477103430375993 0x7f81e9808c57 35: java.util.stream.Sink$ChainedReference::cancellationRequested() -> boolean
fifo write: @1699477103432269877 0x7f81e8bd9600 472: I2C/C2I adapters(0x7e7e7e7ebb)
fifo write: @1699477103433671685 0x7f81e2253514 138: Character::hashCode() -> int
fifo write: @1699477103436944007 0x7f81e980985c 592: ehq$$Lambda$596.0x00007f81603277d0::merge(int, int, int) -> boolean
fifo write: @1699477103438494497 0x7f81e980a191 6: arw::a(int, int, int) -> int
fifo write: @1699477103438579668 0x7f81e22540d4 1130: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::get(long) -> byte
fifo write: @1699477103438634169 0x7f81e2254c94 396: dzy::a(int, int) -> int
fifo write: @1699477103439382309 0x7f81e22555f4 97: akd::a(long) -> boolean
fifo write: @1699477103439522271 0x7f81e2255a14 285: akw::c(long) -> int
fifo write: @1699477103439559871 0x7f81e980a49a 19: it.unimi.dsi.fastutil.HashCommon::mix(long) -> long
fifo write: @1699477103439763604 0x7f81e225605c 4739: dzy::a(long, long, int, int, int, boolean) -> void
fifo write: @1699477103439833285 0x7f81e2258454 885: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::find(long) -> int
fifo write: @1699477103440016287 0x7f81e980a8f2 3387: dzn::<init>(asc) -> void
fifo write: @1699477103440087908 0x7f81e2258ef7 2622: dzy::b(long, long, int, boolean) -> void
fifo write: @1699477103440133029 0x7f81e225a314 258: akd::b(long, long, int) -> int
fifo write: @1699477103440258960 0x7f81e225a839 343: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::put(long, byte) -> byte
fifo write: @1699477103440451593 0x7f81e225ae34 507: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::insert(int, long, byte) -> void
fifo write: @1699477103440742106 0x7f81e225b5fc 1463: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::add(long) -> boolean
fifo write: @1699477103441028740 0x7f81e225c4f0 1117: akd::a(long, int, boolean) -> void
fifo write: @1699477103441130041 0x7f81e225cff4 90: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::isEmpty() -> boolean
fifo write: @1699477103441281503 0x7f81e225d3f4 92: eac::b() -> boolean
fifo write: @1699477103441499346 0x7f81e225d834 713: eac::a() -> long
fifo write: @1699477103441818290 0x7f81e225e0b9 1005: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477103441907561 0x7f81e225ebd9 1120: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::shiftKeys(int) -> void
fifo write: @1699477103442069504 0x7f81e225f6b4 637: akw::a(long, int) -> void
fifo write: @1699477103442185135 0x7f81e225fe74 989: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::remove(long) -> byte
fifo write: @1699477103442250666 0x7f81e22609b4 602: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::removeEntry(int) -> byte
fifo write: @1699477103442350977 0x7f81e22611d4 1276: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::removeFirstLong() -> long
fifo write: @1699477103443827426 0x7f81e980d250 511: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::get(long) -> byte
fifo write: @1699477103444576496 0x7f81e2261f14 469: aka$a::b(long) -> ajy
fifo write: @1699477103444653507 0x7f81e22625d4 1132: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::get(long) -> Object
fifo write: @1699477103444701538 0x7f81e2263194 359: aka::a(long) -> ajy
fifo write: @1699477103444743368 0x7f81e2263714 256: aka$a::a(long) -> boolean
fifo write: @1699477103444779889 0x7f81e980da4c 2: ajy::m() -> int
fifo write: @1699477103444834249 0x7f81e2263c54 795: it.unimi.dsi.fastutil.longs.LongOpenHashSet::contains(long) -> boolean
fifo write: @1699477103444886450 0x7f81e22645d7 1154: aki$a::c(long) -> int
fifo write: @1699477103444928080 0x7f81e2265114 155: cpc::<init>(long) -> void
fifo write: @1699477103445010202 0x7f81e980dd43 600: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite::setRelease(java.lang.invoke.VarHandle, Object, Object) -> void
fifo write: @1699477103445047842 0x7f81e980e44c 2: dis::n() -> int
fifo write: @1699477103445311055 0x7f81e226575f 7177: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477103445355296 0x7f81e2268794 487: cpv::C_() -> dis
fifo write: @1699477103445394026 0x7f81e2268cd4 87: ajz::e(int) -> boolean
fifo write: @1699477103445539858 0x7f81e980e74c 2: dis::o() -> int
fifo write: @1699477103445586769 0x7f81e2269134 805: cpy::H_() -> int
fifo write: @1699477103445630400 0x7f81e2269917 549: java.util.BitSet::<init>() -> void
fifo write: @1699477103445733191 0x7f81e226a06a 2117: java.util.concurrent.CompletableFuture::completedFuture(Object) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103445771711 0x7f81e980ea4c 2: ajy::a(int) -> void
fifo write: @1699477103445854892 0x7f81e226b15c 2427: java.util.concurrent.CompletableFuture::<init>(Object) -> void
fifo write: @1699477103445902803 0x7f81e226c397 344: java.util.concurrent.atomic.AtomicReferenceArray::<init>(int) -> void
fifo write: @1699477103446344679 0x7f81e226c914 367: cpx::aj() -> int
fifo write: @1699477103446448720 0x7f81e226ceb4 805: cpy::I_() -> int
fifo write: @1699477103446500471 0x7f81e226d694 109: aka$a::a(long, int, ajy, int) -> ajy
fifo write: @1699477103446552991 0x7f81e226db7f 1175: aki$a::a(long, int) -> void
fifo write: @1699477103446643543 0x7f81e226e794 367: cpx::ak() -> int
fifo write: @1699477103446728584 0x7f81e226ed54 885: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::find(long) -> int
fifo write: @1699477103446764734 0x7f81e226f714 312: cpx::am() -> int
fifo write: @1699477103446829285 0x7f81e226fc74 964: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::remove(long) -> Object
fifo write: @1699477103446866265 0x7f81e2270794 308: cpx::al() -> int
fifo write: @1699477103446942826 0x7f81e2270d6b 2827: aka::a(long, int, ajy, int) -> ajy
fifo write: @1699477103447010257 0x7f81e22723b9 682: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::put(long, Object) -> Object
fifo write: @1699477103447047358 0x7f81e980ed5b 48: akd::a(long) -> boolean
fifo write: @1699477103447135419 0x7f81e2272bd4 1061: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::insert(int, long, Object) -> void
fifo write: @1699477103447236030 0x7f81e980f05e 65: akd::b(long, long, int) -> int
fifo write: @1699477103447506284 0x7f81e2273737 987: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::fixPointers(int, int) -> void
fifo write: @1699477103448202113 0x7f81e2274686 10777: ajy::<init>(cpc, int, cpx, eab, ajy$c, ajy$d) -> void
fifo write: @1699477103448898812 0x7f81e980f3d4 199: it.unimi.dsi.fastutil.longs.LongOpenHashSet::contains(long) -> boolean
fifo write: @1699477103449352638 0x7f81e980f8d2 465: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::get(long) -> Object
fifo write: @1699477103449929345 0x7f81e981010a 1874: java.lang.invoke.VarHandleGuards::guard_LL_V(java.lang.invoke.VarHandle, Object, Object, java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477103450337080 0x7f81e981155e 305: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::find(long) -> int
fifo write: @1699477103450485902 0x7f81e2278886 2366: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::rehash(int) -> void
fifo write: @1699477103450853877 0x7f81e9811bf3 892: aki$a::c(long) -> int
fifo write: @1699477103451816349 0x7f81e98129f3 758: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::put(long, byte) -> byte
fifo write: @1699477103452073063 0x7f81e98135f7 740: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::add(long) -> boolean
fifo write: @1699477103453623423 0x7f81e2279dd7 2542: java.util.concurrent.CompletableFuture::completeValue(Object) -> boolean
fifo write: @1699477103454037228 0x7f81e98147d7 2304: dzy::a(long, long, int, int, int, boolean) -> void
fifo write: @1699477103454239001 0x7f81e227b0b7 736: java.lang.invoke.MethodType::invokers() -> java.lang.invoke.Invokers
fifo write: @1699477103454279971 0x7f81e227b894 264: IncompatibleClassChangeError::<init>(String) -> void
fifo write: @1699477103454309812 0x7f81e9816d4c 6: Thread::getThreadGroup() -> ThreadGroup
fifo write: @1699477103456286117 0x7f81e981734c 2: dhk::c() -> int
fifo write: @1699477103456358348 0x7f81e227bd74 329: java.util.concurrent.CompletableFuture::screenExecutor(java.util.concurrent.Executor) -> java.util.concurrent.Executor
fifo write: @1699477103456444979 0x7f81e981764c 6: dhk::d() -> dhk
fifo write: @1699477103456628442 0x7f81e227c2b4 602: java.util.concurrent.CompletableFuture$BiCompletion::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103456699282 0x7f81e227ca14 463: java.util.concurrent.CompletableFuture$UniCompletion::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103456746333 0x7f81e227d0de 1056: java.util.concurrent.CompletableFuture::unipush(java.util.concurrent.CompletableFuture$Completion) -> void
fifo write: @1699477103456785624 0x7f81e227da64 247: java.util.concurrent.CompletableFuture::newIncompleteFuture() -> java.util.concurrent.CompletableFuture
fifo write: @1699477103456909505 0x7f81e227dfa6 1512: java.util.concurrent.CompletableFuture::bipush(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture$BiCompletion) -> void
fifo write: @1699477103456935485 0x7f81e981794c 6: ajy::l() -> cpc
fifo write: @1699477103457974619 0x7f81e227ec34 602: java.util.concurrent.CompletableFuture$UniApply::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.Function) -> void
fifo write: @1699477103458007449 0x7f81e227f394 761: dhk::a(int) -> dhk
fifo write: @1699477103458030000 0x7f81e9817c4c 3: dhk::f() -> boolean
fifo write: @1699477103458057770 0x7f81e227fb74 111: ajz::a(int) -> dhk
fifo write: @1699477103458156301 0x7f81e2280020 2004: java.util.concurrent.CompletableFuture::uniApplyStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103458232782 0x7f81e2281294 231: dhk::b(dhk) -> boolean
fifo write: @1699477103458266513 0x7f81e2281774 3: java.nio.DirectIntBufferS::ix(int) -> long
fifo write: @1699477103458300693 0x7f81e2281ad4 179: java.nio.Bits::swap(int) -> int
fifo write: @1699477103458364304 0x7f81e9817f3c 99: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object) -> Object
fifo write: @1699477103458484875 0x7f81e2281f1a 41: java.util.concurrent.CompletableFuture::thenCombine(java.util.concurrent.CompletionStage, java.util.function.BiFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103458515856 0x7f81e2282314 109: dik::a(int, int) -> void
fifo write: @1699477103458660638 0x7f81e2282780 1136: java.util.BitSet::set(int, int) -> void
fifo write: @1699477103458719649 0x7f81e98182d1 74: jdk.internal.misc.ScopedMemoryAccess::getInt(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long) -> int
fifo write: @1699477103458773999 0x7f81e22834bf 2364: java.nio.DirectIntBufferS::get(int) -> int
fifo write: @1699477103458834450 0x7f81e2284797 36: java.util.concurrent.CompletableFuture::thenApply(java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103458944701 0x7f81e2284bb7 744: java.util.concurrent.CompletableFuture$BiApply::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.BiFunction) -> void
fifo write: @1699477103459005022 0x7f81e981864c 2: dhk::e() -> int
fifo write: @1699477103459081113 0x7f81e22854b4 466: java.util.concurrent.CompletableFuture::thenApplyAsync(java.util.function.Function, java.util.concurrent.Executor) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103459177964 0x7f81e2285bba 2319: java.util.concurrent.CompletableFuture::biApplyStage(java.util.concurrent.Executor, java.util.concurrent.CompletionStage, java.util.function.BiFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103459207745 0x7f81e981894c 6: net.minecraft.server.MinecraftServer::aM() -> bdp
fifo write: @1699477103459245535 0x7f81e2286d94 114: java.util.concurrent.CompletableFuture::getNow(Object) -> Object
fifo write: @1699477103459321286 0x7f81e22873af 4495: aka::a(ajy, dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103459373357 0x7f81e22894fe 980: qw::a(rs, String, java.io.DataInput, rf) -> rq
fifo write: @1699477103459421538 0x7f81e2289fb7 611: aka$$Lambda$5471.0x00007f8160a7e4b0::apply(int) -> Object
fifo write: @1699477103459470818 0x7f81e228a834 372: aka::a(dhk, int) -> dhk
fifo write: @1699477103459509879 0x7f81e228aeb4 461: aka::b(dhk, int) -> dhk
fifo write: @1699477103459556799 0x7f81e228b5df 958: ajy::a(java.util.concurrent.CompletableFuture, String) -> void
fifo write: @1699477103459583990 0x7f81e228bfb7 420: rf::b() -> void
fifo write: @1699477103459609120 0x7f81e228c614 334: rf::c() -> void
fifo write: @1699477103459709591 0x7f81e228cbca 447: bfq::a(String, java.util.function.Consumer) -> bfq
fifo write: @1699477103459755442 0x7f81e228d1b7 649: ro$1::d(java.io.DataInput, rf) -> String
fifo write: @1699477103459797742 0x7f81e228da14 340: bfq$1::<init>(String, java.util.function.Consumer) -> void
fifo write: @1699477103459909634 0x7f81e228df14 448: bfr::f() -> boolean
fifo write: @1699477103460005715 0x7f81e228e594 181: bft$a::b() -> boolean
fifo write: @1699477103460041206 0x7f81e228ea79 1275: bfr::i() -> void
fifo write: @1699477103460135517 0x7f81e228f694 188: bft$b::<init>(int, Runnable) -> void
fifo write: @1699477103460187187 0x7f81e228fb3e 423: bfr::d() -> boolean
fifo write: @1699477103460529942 0x7f81e22901b7 675: java.util.concurrent.CompletableFuture$BiRelay::<init>(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103460581613 0x7f81e2290994 143: cpc::<init>(int, int) -> void
fifo write: @1699477103460670414 0x7f81e2290eb0 3330: java.util.concurrent.CompletableFuture::andTree(java.util.concurrent.CompletableFuture[], int, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103460801085 0x7f81e2292877 7700: dhk::toString() -> String
fifo write: @1699477103460871556 0x7f81e2295977 1132: qw$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103460941797 0x7f81e2296541 2142: qw$1::d(java.io.DataInput, rf) -> qw
fifo write: @1699477103461090319 0x7f81e22976f4 968: qw$1::a(java.io.DataInput, rf) -> qw
fifo write: @1699477103461128540 0x7f81e2298194 39: cpc::a() -> long
fifo write: @1699477103461205631 0x7f81e22985f7 1333: ro$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103461276462 0x7f81e2299277 1247: ro$1::a(java.io.DataInput, rf) -> ro
fifo write: @1699477103461348712 0x7f81e2299d94 238: rl::<init>(short) -> void
fifo write: @1699477103461431134 0x7f81e229a294 660: it.unimi.dsi.fastutil.ints.IntArrayList::getInt(int) -> int
fifo write: @1699477103461500634 0x7f81e229abdf 950: ajy::a(String, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103461578345 0x7f81e9819bd8 71: java.lang.invoke.Invokers$Holder::linkToTargetMethod(int, int, Object) -> Object
fifo write: @1699477103461741958 0x7f81e229b720 5927: java.util.concurrent.CompletableFuture::uniComposeStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103461811448 0x7f81e229dd77 1171: rl$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103462013971 0x7f81e229ebce 11380: aka::a(ajy, int, java.util.function.IntFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103462067722 0x7f81e22a3977 296: rl$1::d(java.io.DataInput, rf) -> short
fifo write: @1699477103462114562 0x7f81e22a3e97 616: rl::a(short) -> rl
fifo write: @1699477103462154833 0x7f81e9819f53 68: rf::b(long) -> void
fifo write: @1699477103462612859 0x7f81e22a4c4f 18651: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103462655169 0x7f81e981a2d8 127: arg::read() -> int
fifo write: @1699477103462703100 0x7f81e981a6df 396: arg::read(byte[], int, int) -> int
fifo write: @1699477103462771641 0x7f81e22ac7d7 1058: rl$1::a(java.io.DataInput, rf) -> rl
fifo write: @1699477103462815971 0x7f81e981add6 109: java.io.DataInputStream::readShort() -> short
fifo write: @1699477103462914163 0x7f81e22ad2a7 3689: rc$1::d(java.io.DataInput, rf) -> rc
fifo write: @1699477103463161606 0x7f81e981b362 5397: dzy::b(long, long, int, boolean) -> void
fifo write: @1699477103463236307 0x7f81e981f23c 119: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long, Object, Object, Object) -> long
fifo write: @1699477103463379379 0x7f81e22af0b7 5729: cpc::toString() -> String
fifo write: @1699477103463445330 0x7f81e22b17f4 1000: rc$1::a(java.io.DataInput, rf) -> rc
fifo write: @1699477103463520220 0x7f81e22b22f7 1116: rc$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103464238190 0x7f81e981fb6e 20903: dkm$w::a(dkl$b) -> double
fifo write: @1699477103464307571 0x7f81e982b639 142: java.lang.invoke.DelegatingMethodHandle$Holder::reinvoke_L(Object, long, Object) -> long
fifo write: @1699477103464372421 0x7f81e982ba4f 560: aka::a(long) -> ajy
fifo write: @1699477103464412732 0x7f81e982c316 49: Thread::interrupted() -> boolean
fifo write: @1699477103464454153 0x7f81e22b2e14 335: qv::<init>() -> void
fifo write: @1699477103464606665 0x7f81e22b352f 6215: aka::b(ajy, dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103464671905 0x7f81e982c63c 83: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, long) -> Object
fifo write: @1699477103464734556 0x7f81e22b5e39 955: rd$1::d(java.io.DataInput, rf) -> long[]
fifo write: @1699477103464818877 0x7f81e982c9d7 513: java.util.concurrent.CompletableFuture::tryPushStack(java.util.concurrent.CompletableFuture$Completion) -> boolean
fifo write: @1699477103464901728 0x7f81e22b67d8 814: java.util.concurrent.CompletableFuture::postFire(java.util.concurrent.CompletableFuture, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103464954849 0x7f81e982d0d4 375: java.io.DataInputStream::readLong() -> long
fifo write: @1699477103465000400 0x7f81e22b7094 327: bft$a::a(Object) -> boolean
fifo write: @1699477103465048580 0x7f81e22b7594 288: bfr::a(Object) -> void
fifo write: @1699477103465093471 0x7f81e22b7a54 107: qu::a(byte) -> qu
fifo write: @1699477103465146831 0x7f81e22b7df7 312: qu$1::d(java.io.DataInput, rf) -> byte
fifo write: @1699477103465221652 0x7f81e22b8377 1398: qw::a(String, String) -> void
fifo write: @1699477103465334274 0x7f81e22b8fb4 546: qu$1::a(java.io.DataInput, rf) -> qu
fifo write: @1699477103465416985 0x7f81e982d870 421: rl$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103465484006 0x7f81e982e0d9 74: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, int, Object) -> Object
fifo write: @1699477103465548857 0x7f81e22b96b4 651: qu$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103465592957 0x7f81e982e457 56: java.io.DataInputStream::readByte() -> byte
fifo write: @1699477103465674538 0x7f81e982e7dc 575: java.util.concurrent.CompletableFuture::unipush(java.util.concurrent.CompletableFuture$Completion) -> void
fifo write: @1699477103465817410 0x7f81e22b9f27 3916: java.util.concurrent.ForkJoinPool$WorkQueue::casSlotToNull(java.util.concurrent.ForkJoinTask[], int, java.util.concurrent.ForkJoinTask) -> boolean
fifo write: @1699477103465858761 0x7f81e982ef50 75: rf::a(long, long) -> void
fifo write: @1699477103465911111 0x7f81e22bbbb4 810: qw::d(String) -> byte
fifo write: @1699477103466015593 0x7f81e22bc457 4608: bft$a::a(bft$b) -> boolean
fifo write: @1699477103466061573 0x7f81e982f2ba 109: dhk::a(int) -> dhk
fifo write: @1699477103466125844 0x7f81e22be45a 1427: java.util.concurrent.ForkJoinPool::execute(Runnable) -> void
fifo write: @1699477103466216265 0x7f81e22bf019 1640: java.util.concurrent.ForkJoinPool::externalSubmit(java.util.concurrent.ForkJoinTask) -> java.util.concurrent.ForkJoinTask
fifo write: @1699477103466332977 0x7f81e22bfe34 2109: java.util.concurrent.CompletableFuture::reportJoin(Object) -> Object
fifo write: @1699477103466381147 0x7f81e982f6d0 95: it.unimi.dsi.fastutil.ints.IntArrayList::getInt(int) -> int
fifo write: @1699477103466672831 0x7f81e22c0cff 2892: java.util.concurrent.ForkJoinTask::doExec() -> int
fifo write: @1699477103466885664 0x7f81e22c21f4 226: akq$$Lambda$5339.0x00007f8160a27d88::get() -> Object
fifo write: @1699477103466950315 0x7f81e22c271a 1557: java.util.concurrent.ForkJoinPool$WorkQueue::tryLock() -> boolean
fifo write: @1699477103467235978 0x7f81e982fa50 299: aka$$Lambda$5471.0x00007f8160a7e4b0::apply(int) -> Object
fifo write: @1699477103467425411 0x7f81e22c34df 2851: dij::a(cpc) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103467481042 0x7f81e22c4814 230: dij$$Lambda$5461.0x00007f8160a7cc08::<init>(dij, cpc) -> void
fifo write: @1699477103467702994 0x7f81e22c4df7 2985: dih::e(cpc) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103467886767 0x7f81e22c637f 4935: aka::j(cpc) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103467962478 0x7f81e22c8377 1481: dij::a(java.util.function.Supplier) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103468030499 0x7f81e22c8f14 230: dij$$Lambda$5462.0x00007f8160a7ce30::<init>(dij, java.util.function.Supplier) -> void
fifo write: @1699477103468088549 0x7f81e22c9414 393: dij$$Lambda$5462.0x00007f8160a7ce30::apply(Object) -> Object
fifo write: @1699477103468148390 0x7f81e22c9994 185: bfq$$Lambda$5463.0x00007f8160a7d078::<init>(java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103468218271 0x7f81e22c9e14 275: dij$$Lambda$5464.0x00007f8160a7d2b0::<init>(dij, bfq, java.util.function.Supplier) -> void
fifo write: @1699477103468267502 0x7f81e22ca394 185: aka$$Lambda$5466.0x00007f8160a7d6f8::<init>(aka) -> void
fifo write: @1699477103468418204 0x7f81e9830303 945: java.util.concurrent.CompletableFuture$BiApply::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.BiFunction) -> void
fifo write: @1699477103468515125 0x7f81e22ca917 2263: bfq::c(java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103468584086 0x7f81e22cb994 185: aka$$Lambda$5467.0x00007f8160a7d940::<init>(cpc) -> void
fifo write: @1699477103468639857 0x7f81e22cbe14 230: aka$$Lambda$5468.0x00007f8160a7db88::<init>(aka, cpc) -> void
fifo write: @1699477103468721908 0x7f81e22cc314 230: aka$$Lambda$5469.0x00007f8160a7ddd0::<init>(aka, cpc) -> void
fifo write: @1699477103468817209 0x7f81e22cc834 466: java.util.concurrent.CompletableFuture::exceptionallyAsync(java.util.function.Function, java.util.concurrent.Executor) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103468894160 0x7f81e22ccf55 1796: dij::a(java.util.function.Supplier, bfq) -> bft$b
fifo write: @1699477103468980041 0x7f81e22cdd34 602: java.util.concurrent.CompletableFuture$UniExceptionally::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.Function) -> void
fifo write: @1699477103469020742 0x7f81e22ce477 268: java.util.concurrent.locks.LockSupport::setBlocker(Thread, Object) -> void
fifo write: @1699477103469145693 0x7f81e9831014 1218: com.mojang.datafixers.types.templates.Product$ProductType::hashCode() -> int
fifo write: @1699477103469203114 0x7f81e22ce954 1415: qw::b(String, int) -> boolean
fifo write: @1699477103469476677 0x7f81e22cf806 11666: java.util.concurrent.ForkJoinPool$WorkQueue::nextLocalTask(int) -> java.util.concurrent.ForkJoinTask
fifo write: @1699477103469588179 0x7f81e22d4280 3337: java.util.concurrent.CompletableFuture::uniExceptionallyStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103469744541 0x7f81e9831fe0 1880: java.util.concurrent.CompletableFuture::bipush(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture$BiCompletion) -> void
fifo write: @1699477103469916943 0x7f81e22d5c47 9944: aka::f(cpc) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103469978934 0x7f81e22d98d4 15: sun.invoke.util.Wrapper::forceType(Class, Class) -> Class
fifo write: @1699477103470026174 0x7f81e22d9c94 474: rd::<init>(long[]) -> void
fifo write: @1699477103470088355 0x7f81e22da2dd 852: rd$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103470181076 0x7f81e22dac0d 659: rd$1::a(java.io.DataInput, rf) -> rd
fifo write: @1699477103470284898 0x7f81e22db49c 2119: sun.invoke.util.Wrapper::wrapperType(Class) -> Class
fifo write: @1699477103470325738 0x7f81e22dc714 342: arg::b() -> void
fifo write: @1699477103470370279 0x7f81e22dcc88 309: aa::b() -> ad
fifo write: @1699477103470428760 0x7f81e22dd1d9 946: java.util.zip.InflaterInputStream::fill() -> void
fifo write: @1699477103470511781 0x7f81e9833641 798: java.lang.invoke.LambdaForm$MH.0x00007f816043d800::invoke(Object, Object, int) -> Object
fifo write: @1699477103470631652 0x7f81e98344c4 791: java.util.concurrent.CompletableFuture$BiRelay::<init>(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103470901066 0x7f81e22ddd27 5741: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477103471080008 0x7f81e22e0594 365: aka$$Lambda$5475.0x00007f8160a7f028::<init>(aka, cpc, ajy, dhk, java.util.concurrent.Executor) -> void
fifo write: @1699477103471721496 0x7f81e22e0bf4 103: java.util.concurrent.locks.LockSupport::unpark(Thread) -> void
fifo write: @1699477103472415705 0x7f81e22e0ff7 306: rb$1::d(java.io.DataInput, rf) -> int
fifo write: @1699477103472641488 0x7f81e22e1577 1164: rb$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103472688239 0x7f81e22e2057 1051: rb$1::a(java.io.DataInput, rf) -> rb
fifo write: @1699477103473333837 0x7f81e9835483 2339: java.util.concurrent.CompletableFuture::biApplyStage(java.util.concurrent.Executor, java.util.concurrent.CompletionStage, java.util.function.BiFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103474002516 0x7f81e9836bbc 255: qw$1::e(java.io.DataInput, rf) -> String
fifo write: @1699477103474936237 0x7f81e22e29f4 23: org.apache.commons.lang3.tuple.Triple::of(Object, Object, Object) -> org.apache.commons.lang3.tuple.Triple
fifo write: @1699477103475383733 0x7f81e983724c 6: com.mojang.datafixers.View::function() -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103475487634 0x7f81e983754c 6: com.mojang.datafixers.functions.Id::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103475540995 0x7f81e983784c 6: com.mojang.datafixers.RewriteResult::view() -> com.mojang.datafixers.View
fifo write: @1699477103475585146 0x7f81e9837b4c 2: com.mojang.datafixers.TypeRewriteRule$Seq::hashCode() -> int
fifo write: @1699477103477466570 0x7f81e9837e4c 2: com.mojang.datafixers.TypeRewriteRule$IfSame::hashCode() -> int
fifo write: @1699477103477513440 0x7f81e983814c 6: com.mojang.datafixers.types.Func::second() -> com.mojang.datafixers.types.Type
fifo write: @1699477103477544871 0x7f81e22e2d94 31: com.mojang.datafixers.functions.PointFreeRule$Seq::hashCode() -> int
fifo write: @1699477103477587131 0x7f81e22e3174 435: com.google.common.base.Objects::equal(Object, Object) -> boolean
fifo write: @1699477103477632862 0x7f81e22e3714 324: com.mojang.datafixers.RewriteResult::<init>(com.mojang.datafixers.View, java.util.BitSet) -> void
fifo write: @1699477103477674502 0x7f81e22e3c94 279: com.mojang.datafixers.View::<init>(com.mojang.datafixers.functions.PointFree) -> void
fifo write: @1699477103477713813 0x7f81e22e4194 240: com.mojang.datafixers.View::funcType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103477825474 0x7f81e98384cb 732: rd$1::d(java.io.DataInput, rf) -> long[]
fifo write: @1699477103477864215 0x7f81e9838f4c 6: com.mojang.datafixers.types.Func::first() -> com.mojang.datafixers.types.Type
fifo write: @1699477103477893735 0x7f81e983924c 2: com.mojang.datafixers.TypeRewriteRule$Everywhere::hashCode() -> int
fifo write: @1699477103477968996 0x7f81e22e4614 723: com.mojang.datafixers.DataFixUtils::orElse(java.util.Optional, Object) -> Object
fifo write: @1699477103478060207 0x7f81e22e4f57 4084: com.mojang.datafixers.functions.PointFreeRule$Everywhere::hashCode() -> int
fifo write: @1699477103478121448 0x7f81e22e69d4 252: com.mojang.datafixers.functions.Functions::isId(com.mojang.datafixers.functions.PointFree) -> boolean
fifo write: @1699477103478161869 0x7f81e22e6e94 424: com.mojang.datafixers.View::isNop() -> boolean
fifo write: @1699477103478202889 0x7f81e983954c 2: com.mojang.datafixers.TypeRewriteRule$OrElse::hashCode() -> int
fifo write: @1699477103478242620 0x7f81e983984c 2: com.mojang.datafixers.TypeRewriteRule$All::hashCode() -> int
fifo write: @1699477103478303451 0x7f81e22e7434 612: com.mojang.datafixers.View::newType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103478392952 0x7f81e22e7b54 1215: com.mojang.datafixers.functions.PointFreeRule::rewriteOrNop(com.mojang.datafixers.functions.PointFree) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103478465813 0x7f81e22e8594 324: com.mojang.datafixers.types.Func::<init>(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477103478506483 0x7f81e22e8b14 137: com.mojang.datafixers.functions.PointFree::<init>() -> void
fifo write: @1699477103478591714 0x7f81e22e8f4e 431: com.mojang.datafixers.DSL::func(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.Type
fifo write: @1699477103478671135 0x7f81e22e95ca 431: com.mojang.datafixers.RewriteResult::create(com.mojang.datafixers.View, java.util.BitSet) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103478847198 0x7f81e9839b83 3071: ajy::a(String, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103478896318 0x7f81e22e9c74 1891: com.mojang.datafixers.TypeRewriteRule$OrElse::equals(Object) -> boolean
fifo write: @1699477103478938869 0x7f81e22eab54 1471: com.mojang.datafixers.TypeRewriteRule$All::equals(Object) -> boolean
fifo write: @1699477103479197452 0x7f81e983b7bb 7544: akd::a(long, int, boolean) -> void
fifo write: @1699477103479239963 0x7f81e22eb714 279: com.mojang.datafixers.functions.Id::<init>(com.mojang.datafixers.types.Type) -> void
fifo write: @1699477103479374384 0x7f81e984039a 3575: rc$1::d(java.io.DataInput, rf) -> rc
fifo write: @1699477103479432515 0x7f81e22ebc8d 1062: com.mojang.datafixers.functions.Functions::id(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103479501846 0x7f81e22ec70d 2974: com.mojang.datafixers.RewriteResult::nop(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103479555717 0x7f81e22edc29 1632: com.mojang.datafixers.View::nopView(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.View
fifo write: @1699477103479664768 0x7f81e22ee8d4 112: com.mojang.datafixers.TypeRewriteRule::everywhere(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean) -> com.mojang.datafixers.TypeRewriteRule
fifo write: @1699477103479710309 0x7f81e22eed14 287: java.util.concurrent.TimeUnit::toNanos(long) -> long
fifo write: @1699477103479785790 0x7f81e22ef297 261: com.mojang.datafixers.TypeRewriteRule$Everywhere::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103479852741 0x7f81e22ef81a 2636: com.mojang.datafixers.TypeRewriteRule$Everywhere::<init>(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean) -> void
fifo write: @1699477103479908131 0x7f81e22f093a 1359: com.google.common.collect.ImmutableList::of(Object, Object) -> com.google.common.collect.ImmutableList
fifo write: @1699477103479932442 0x7f81e9842c50 59: rf::b() -> void
fifo write: @1699477103479964312 0x7f81e22f13b9 807: com.google.common.collect.ImmutableList::hashCode() -> int
fifo write: @1699477103480029823 0x7f81e22f1c57 2771: com.mojang.datafixers.functions.PointFreeRule$CompRewrite::rewrite(com.mojang.datafixers.functions.PointFree) -> java.util.Optional
fifo write: @1699477103480066523 0x7f81e22f2fb9 459: com.mojang.datafixers.TypeRewriteRule$Seq::<init>(java.util.List) -> void
fifo write: @1699477103480124514 0x7f81e22f364a 106: com.mojang.datafixers.TypeRewriteRule::orElse(com.mojang.datafixers.TypeRewriteRule, java.util.function.Supplier) -> com.mojang.datafixers.TypeRewriteRule
fifo write: @1699477103480173665 0x7f81e22f3a67 574: com.mojang.datafixers.TypeRewriteRule::seq(java.util.List) -> com.mojang.datafixers.TypeRewriteRule
fifo write: @1699477103480221745 0x7f81e9842fec 175: qw::a(rs, String, java.io.DataInput, rf) -> rq
fifo write: @1699477103480271926 0x7f81e22f41cd 111: com.mojang.datafixers.TypeRewriteRule::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.TypeRewriteRule
fifo write: @1699477103480324497 0x7f81e22f45da 1434: com.mojang.datafixers.TypeRewriteRule$OrElse::<init>(com.mojang.datafixers.TypeRewriteRule, java.util.function.Supplier) -> void
fifo write: @1699477103480373047 0x7f81e22f50fa 2129: com.mojang.datafixers.TypeRewriteRule$All::<init>(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> void
fifo write: @1699477103480460928 0x7f81e22f607c 3562: com.mojang.datafixers.TypeRewriteRule::seq(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.TypeRewriteRule) -> com.mojang.datafixers.TypeRewriteRule
fifo write: @1699477103480572220 0x7f81e22f79d7 4356: com.mojang.datafixers.types.Type::everywhere(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean) -> java.util.Optional
fifo write: @1699477103480619420 0x7f81e22f9794 185: com.mojang.datafixers.TypeRewriteRule$Seq$$Lambda$5517.0x00007f8160a8c0e8::<init>(com.mojang.datafixers.RewriteResult) -> void
fifo write: @1699477103480698281 0x7f81e22f9ce1 3084: com.mojang.datafixers.RewriteResult::compose(com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103480744302 0x7f81e22fb394 442: com.mojang.datafixers.TypeRewriteRule$Seq$$Lambda$5517.0x00007f8160a8c0e8::apply(Object) -> Object
fifo write: @1699477103480778382 0x7f81e98434cc 6: com.mojang.datafixers.RewriteResult::recData() -> java.util.BitSet
fifo write: @1699477103480838013 0x7f81e22fb977 90: com.mojang.datafixers.TypeRewriteRule$Seq::lambda$cap1$0(com.mojang.datafixers.RewriteResult, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103480930614 0x7f81e22fbe3a 2701: com.mojang.datafixers.View::compose(com.mojang.datafixers.View) -> com.mojang.datafixers.View
fifo write: @1699477103481079236 0x7f81e22fd35f 8136: com.mojang.datafixers.types.Type::rewrite(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule) -> java.util.Optional
fifo write: @1699477103481194738 0x7f81e2300997 3596: com.mojang.datafixers.TypeRewriteRule$Seq::cap1(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.RewriteResult) -> java.util.Optional
fifo write: @1699477103481249679 0x7f81e2302339 2431: java.util.concurrent.ConcurrentHashMap::get(Object) -> Object
fifo write: @1699477103481313039 0x7f81e23036e7 1268: java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite::compareAndExchange(java.lang.invoke.VarHandle, Object, long, long) -> long
fifo write: @1699477103481346180 0x7f81e9843bd3 742: java.util.ArrayList::<init>(int) -> void
fifo write: @1699477103481391210 0x7f81e230431f 1984: java.util.concurrent.ForkJoinPool::compareAndExchangeCtl(long, long) -> long
fifo write: @1699477103481497792 0x7f81e2305214 185: com.mojang.datafixers.types.Type$$Lambda$5521.0x00007f8160a8ca00::<init>(com.mojang.datafixers.types.Type) -> void
fifo write: @1699477103481553732 0x7f81e23056b4 904: com.mojang.datafixers.DataFixUtils::orElseGet(java.util.Optional, java.util.function.Supplier) -> Object
fifo write: @1699477103481618823 0x7f81e230605f 2587: com.mojang.datafixers.types.Type::rewriteOrNop(com.mojang.datafixers.TypeRewriteRule) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103481743035 0x7f81e230750b 7312: java.lang.invoke.VarHandleGuards::guard_LJJ_J(java.lang.invoke.VarHandle, Object, long, long, java.lang.invoke.VarHandle$AccessDescriptor) -> long
fifo write: @1699477103481784925 0x7f81e230a414 304: com.mojang.datafixers.types.Type::template() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477103481809266 0x7f81e984464c 2: rb::g() -> int
fifo write: @1699477103482057849 0x7f81e98449b0 3778: cpc::toString() -> String
fifo write: @1699477103482118000 0x7f81e230a9f7 1832: com.mojang.datafixers.types.templates.Product$ProductType::buildTemplate() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477103482171010 0x7f81e230b857 1221: com.mojang.datafixers.types.templates.Tag$TagType::buildTemplate() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477103482224271 0x7f81e230c377 1832: com.mojang.datafixers.types.templates.Sum$SumType::buildTemplate() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477103482260302 0x7f81e230d16e 78: java.io.FilterInputStream::<init>(java.io.InputStream) -> void
fifo write: @1699477103482329573 0x7f81e984746b 62: com.mojang.datafixers.DSL::and(com.mojang.datafixers.types.templates.TypeTemplate, com.mojang.datafixers.types.templates.TypeTemplate) -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477103482369103 0x7f81e230d5d4 1213: com.mojang.datafixers.TypeRewriteRule$Seq::equals(Object) -> boolean
fifo write: @1699477103482414994 0x7f81e230e079 2008: com.mojang.datafixers.TypeRewriteRule$Everywhere::equals(Object) -> boolean
fifo write: @1699477103482449044 0x7f81e230ef94 23: com.google.common.collect.ImmutableList::equals(Object) -> boolean
fifo write: @1699477103482491775 0x7f81e230f314 324: com.mojang.datafixers.TypedOptic::<init>(java.util.Set, java.util.List) -> void
fifo write: @1699477103482572146 0x7f81e230f894 459: com.mojang.datafixers.TypedOptic$Element::<init>(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.optics.Optic) -> void
fifo write: @1699477103482718178 0x7f81e23101e7 6138: com.mojang.datafixers.types.templates.Sum::equals(Object) -> boolean
fifo write: @1699477103482774318 0x7f81e2312b7c 3946: com.google.common.collect.Lists::equalsImpl(java.util.List, Object) -> boolean
fifo write: @1699477103482906250 0x7f81e23146c6 8043: java.util.concurrent.CompletableFuture$UniApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103482964341 0x7f81e2317e57 1289: com.mojang.datafixers.functions.PointFreeRule$Seq::rewrite(com.mojang.datafixers.functions.PointFree) -> java.util.Optional
fifo write: @1699477103483062432 0x7f81e23189da 1273: com.mojang.datafixers.TypedOptic::<init>(com.google.common.reflect.TypeToken, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.optics.Optic) -> void
fifo write: @1699477103483158213 0x7f81e23195a3 2308: com.mojang.datafixers.TypedOptic::<init>(java.util.Set, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.optics.Optic) -> void
fifo write: @1699477103483210244 0x7f81e231a637 566: com.mojang.datafixers.functions.PointFree::all(com.mojang.datafixers.functions.PointFreeRule) -> java.util.Optional
fifo write: @1699477103483275675 0x7f81e231adbc 2412: com.mojang.datafixers.functions.PointFreeRule$Everywhere::rewrite(com.mojang.datafixers.functions.PointFree) -> java.util.Optional
fifo write: @1699477103483373266 0x7f81e231c07a 3730: com.mojang.datafixers.types.Type::opticView(com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult, com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103483418167 0x7f81e231da3a 683: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntrySet::iterator() -> java.util.Iterator
fifo write: @1699477103483481567 0x7f81e231e1d9 1267: com.mojang.datafixers.types.Type::ifSame(com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> java.util.Optional
fifo write: @1699477103483556588 0x7f81e231ec7a 1539: com.mojang.datafixers.TypeRewriteRule$IfSame::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103483625649 0x7f81e231f957 3369: com.mojang.datafixers.functions.PointFreeRule$AppNest::rewrite(com.mojang.datafixers.functions.PointFree) -> java.util.Optional
fifo write: @1699477103483691640 0x7f81e2320f47 343: com.mojang.datafixers.types.Type::lambda$rewrite$12(org.apache.commons.lang3.mutable.MutableObject, org.apache.commons.lang3.tuple.Triple) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103483794741 0x7f81e9847833 2398: rd$1::d(java.io.DataInput, rf) -> long[]
fifo write: @1699477103483842552 0x7f81e2321534 752: com.mojang.datafixers.types.Type$$Lambda$5514.0x00007f8160a8b5e0::apply(Object) -> Object
fifo write: @1699477103483908163 0x7f81e2321d14 367: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$EntryIterator::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap, it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$1) -> void
fifo write: @1699477103483989744 0x7f81e2322316 491: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntrySet::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477103484028774 0x7f81e984944c 2: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::hashCode() -> int
fifo write: @1699477103484144776 0x7f81e2322b9f 6633: com.mojang.datafixers.TypeRewriteRule$Seq::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103484208597 0x7f81e23257ba 2547: com.mojang.datafixers.View::rewrite(com.mojang.datafixers.functions.PointFreeRule) -> java.util.Optional
fifo write: @1699477103484257347 0x7f81e2326994 270: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$EntryIterator::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap) -> void
fifo write: @1699477103484319408 0x7f81e23271b4 826: com.mojang.datafixers.types.families.RecursiveTypeFamily::equals(Object) -> boolean
fifo write: @1699477103484381669 0x7f81e98497b0 1143: java.io.DataInputStream::readInt() -> int
fifo write: @1699477103484469310 0x7f81e23279e0 1421: it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap::findKey(int) -> it.unimi.dsi.fastutil.ints.Int2ObjectAVLTreeMap$Entry
fifo write: @1699477103484604092 0x7f81e23287b7 3761: com.mojang.datafixers.types.Type$$Lambda$5518.0x00007f8160a8c330::apply(Object) -> Object
fifo write: @1699477103484653693 0x7f81e984a9b5 262: ro$1::d(java.io.DataInput, rf) -> String
fifo write: @1699477103484882095 0x7f81e984b139 1710: qw$1::d(java.io.DataInput, rf) -> qw
fifo write: @1699477103485340391 0x7f81e232a214 144: com.mojang.datafixers.types.Type$$Lambda$5516.0x00007f8160a8ba70::get() -> Object
fifo write: @1699477103485689416 0x7f81e232a659 1202: com.mojang.datafixers.TypeRewriteRule$OrElse::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103485743237 0x7f81e232b0da 1080: com.mojang.datafixers.TypeRewriteRule$All::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103485781727 0x7f81e984ca59 286: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::find(int) -> int
fifo write: @1699477103485872368 0x7f81e232bb87 2932: java.util.concurrent.SynchronousQueue$TransferStack::casHead(java.util.concurrent.SynchronousQueue$TransferStack$SNode, java.util.concurrent.SynchronousQueue$TransferStack$SNode) -> boolean
fifo write: @1699477103485927849 0x7f81e984d0f5 398: ro$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103485965559 0x7f81e984d9b2 269: java.util.Objects::hash(Object[]) -> int
fifo write: @1699477103486014070 0x7f81e232d1b7 990: com.mojang.datafixers.types.Type$$Lambda$5520.0x00007f8160a8c7b8::apply(Object) -> Object
fifo write: @1699477103486074061 0x7f81e232db1a 642: com.mojang.datafixers.types.Type::lambda$rewrite$13(com.mojang.datafixers.RewriteResult, com.mojang.datafixers.View) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103486126282 0x7f81e232e2d4 905: com.mojang.datafixers.TypeRewriteRule$Nop::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103486345684 0x7f81e232ece1 3714: java.lang.invoke.AbstractValidatingLambdaMetafactory::checkDescriptor(java.lang.invoke.MethodType) -> void
fifo write: @1699477103486775190 0x7f81e2330e03 637: com.mojang.datafixers.View$$Lambda$5519.0x00007f8160a8c578::apply(Object) -> Object
fifo write: @1699477103486840391 0x7f81e233159a 1661: java.util.concurrent.ForkJoinTask::casStatus(int, int) -> boolean
fifo write: @1699477103486939682 0x7f81e2332354 862: qw::h(String) -> int
fifo write: @1699477103487130864 0x7f81e984df65 814: java.util.zip.Inflater::setInput(byte[], int, int) -> void
fifo write: @1699477103487395578 0x7f81e984e7cc 6: com.mojang.datafixers.TypedOptic::elements() -> java.util.List
fifo write: @1699477103487684892 0x7f81e984eb5a 1957: qw$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103487734422 0x7f81e2332c34 39: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::<init>(int) -> void
fifo write: @1699477103487824313 0x7f81e985088a 919: com.mojang.datafixers.types.templates.Sum$SumType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103487896494 0x7f81e2333054 1151: com.mojang.datafixers.types.templates.List$ListType::buildTemplate() -> com.mojang.datafixers.types.templates.TypeTemplate
fifo write: @1699477103488020536 0x7f81e98514db 544: com.mojang.datafixers.types.templates.Tag$TagType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103488229359 0x7f81e2333a94 240: it.unimi.dsi.fastutil.objects.Object2ObjectMaps$1::<init>(it.unimi.dsi.fastutil.objects.ObjectSet) -> void
fifo write: @1699477103488313070 0x7f81e2333f14 983: it.unimi.dsi.fastutil.objects.Object2ObjectMaps::fastIterable(it.unimi.dsi.fastutil.objects.Object2ObjectMap) -> it.unimi.dsi.fastutil.objects.ObjectIterable
fifo write: @1699477103488421441 0x7f81e9851d2a 1275: com.mojang.datafixers.types.templates.Product$ProductType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103488475922 0x7f81e9852d31 4: com.mojang.datafixers.types.constant.EmptyPart::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103488654434 0x7f81e9853055 145: rc$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103488860337 0x7f81e98535d0 307: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477103488909867 0x7f81e2334794 727: dhk::a(int) -> dhk
fifo write: @1699477103488952978 0x7f81e9853cd0 47: he$c::g() -> aev
fifo write: @1699477103489020999 0x7f81e2334f54 145: com.mojang.datafixers.DataFixUtils::makeKey(int) -> int
fifo write: @1699477103489347983 0x7f81e9853fcc 6: com.mojang.datafixers.functions.Apply::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103489558446 0x7f81e98542d4 283: com.mojang.datafixers.functions.PointFreeRule$Everywhere::hashCode() -> int
fifo write: @1699477103489656717 0x7f81e98549e0 123: com.mojang.datafixers.functions.PointFreeRule::rewriteOrNop(com.mojang.datafixers.functions.PointFree) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103490461777 0x7f81e2335a19 1644: com.mojang.datafixers.types.templates.Sum$SumType::mergeViews(com.mojang.datafixers.RewriteResult, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103490547289 0x7f81e2336937 866: com.mojang.datafixers.types.templates.Sum$SumType::fixLeft(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103490623310 0x7f81e2337330 1579: com.mojang.datafixers.TypedOptic::inj1(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103490697201 0x7f81e2338019 1644: com.mojang.datafixers.types.templates.Product$ProductType::mergeViews(com.mojang.datafixers.RewriteResult, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103490826902 0x7f81e2338f37 866: com.mojang.datafixers.types.templates.Product$ProductType::fixLeft(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103491019745 0x7f81e2339d47 5394: com.mojang.datafixers.types.templates.Sum$SumType::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103491136886 0x7f81e233c037 866: com.mojang.datafixers.types.templates.Product$ProductType::fixRight(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103491299678 0x7f81e233ccb7 866: com.mojang.datafixers.types.templates.Sum$SumType::fixRight(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103491452690 0x7f81e233d7c7 5394: com.mojang.datafixers.types.templates.Product$ProductType::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103491555132 0x7f81e233fb30 1579: com.mojang.datafixers.TypedOptic::inj2(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103491659523 0x7f81e2340830 1579: com.mojang.datafixers.TypedOptic::proj1(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103491716454 0x7f81e2341494 487: com.mojang.datafixers.TypedOptic::outermostElement() -> com.mojang.datafixers.TypedOptic$Element
fifo write: @1699477103491766094 0x7f81e9854dd0 283: com.mojang.datafixers.functions.PointFreeRule$Seq::hashCode() -> int
fifo write: @1699477103491832955 0x7f81e98553a6 837: java.util.concurrent.ConcurrentHashMap::addCount(long, int) -> void
fifo write: @1699477103491887146 0x7f81e98561d5 441: org.apache.commons.lang3.tuple.Triple::hashCode() -> int
fifo write: @1699477103491942737 0x7f81e98568cc 6: com.mojang.datafixers.TypedOptic$Element::tType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103492027438 0x7f81e9856bcc 6: com.mojang.datafixers.TypedOptic$Element::sType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103492186070 0x7f81e9856ecc 6: com.mojang.datafixers.TypedOptic$Element::bType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103492239970 0x7f81e98571cc 6: com.mojang.datafixers.TypedOptic$Element::aType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103492295191 0x7f81e2341a14 185: com.mojang.datafixers.schemas.Schema$$Lambda$1290.0x00007f816047c638::<init>(String) -> void
fifo write: @1699477103492352352 0x7f81e2341eb4 679: com.mojang.datafixers.TypedOptic::innermostElement() -> com.mojang.datafixers.TypedOptic$Element
fifo write: @1699477103492395042 0x7f81e2342594 240: com.google.common.reflect.TypeToken::hashCode() -> int
fifo write: @1699477103492674336 0x7f81e2342b17 3644: com.mojang.datafixers.schemas.Schema::getType(com.mojang.datafixers.DSL$TypeReference) -> com.mojang.datafixers.types.Type
fifo write: @1699477103492909539 0x7f81e234439f 3822: com.mojang.datafixers.types.templates.Tag$TagType::wrap(com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103492985060 0x7f81e2345f62 2742: com.mojang.datafixers.types.templates.Tag$TagType::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103493069681 0x7f81e2347354 1124: com.mojang.datafixers.types.templates.Check$CheckType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103493462786 0x7f81e2347cf4 93: java.util.concurrent.CompletableFuture::allOf(java.util.concurrent.CompletableFuture[]) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103493497307 0x7f81e2348114 231: bfr$$Lambda$5371.0x00007f8160a45438::get(int) -> boolean
fifo write: @1699477103493522657 0x7f81e2348554 87: bfr::b(int) -> boolean
fifo write: @1699477103493587888 0x7f81e98574f3 846: com.mojang.datafixers.types.templates.Sum$SumType::hashCode() -> int
fifo write: @1699477103493708479 0x7f81e2348994 185: ac$$Lambda$5385.0x00007f8160a57ab8::<init>(java.util.List) -> void
fifo write: @1699477103493827761 0x7f81e2348ec9 575: java.lang.invoke.LambdaForm$MH.0x00007f8160a82000::linkToTargetMethod(Object, int, int, int, Object) -> Object
fifo write: @1699477103493876522 0x7f81e2349514 196: aka$$Lambda$5487.0x00007f8160a85188::<init>(aka, int, int, int) -> void
fifo write: @1699477103493939252 0x7f81e2349b03 1538: java.lang.invoke.LambdaForm$DMH.0x00007f8160730400::newInvokeSpecial(Object, Object, int, int, int) -> Object
fifo write: @1699477103494105165 0x7f81e9858195 1327: com.mojang.datafixers.types.Type::equals(Object) -> boolean
fifo write: @1699477103494151925 0x7f81e234a694 273: com.mojang.datafixers.types.templates.Check$CheckType::hashCode() -> int
fifo write: @1699477103494288867 0x7f81e234ac3c 2429: com.mojang.datafixers.functions.Apply::all(com.mojang.datafixers.functions.PointFreeRule) -> java.util.Optional
fifo write: @1699477103494358928 0x7f81e98591d5 668: com.mojang.datafixers.types.templates.Tag$TagType::hashCode() -> int
fifo write: @1699477103494624591 0x7f81e9859c00 335: com.mojang.datafixers.functions.PointFreeRule$CompRewrite::rewrite(com.mojang.datafixers.functions.PointFree) -> java.util.Optional
fifo write: @1699477103494655872 0x7f81e234bd54 86: java.util.concurrent.ThreadPoolExecutor::runStateAtLeast(int, int) -> boolean
fifo write: @1699477103494892255 0x7f81e234c35f 5892: ac::b(java.util.List) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103495105657 0x7f81e234e9b0 1579: com.mojang.datafixers.TypedOptic::proj2(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103495304530 0x7f81e234f617 669: re::a(long) -> re
fifo write: @1699477103495857157 0x7f81e234fcf7 306: re$1::d(java.io.DataInput, rf) -> long
fifo write: @1699477103496174771 0x7f81e23501d4 87: java.util.concurrent.ThreadPoolExecutor::isRunning(int) -> boolean
fifo write: @1699477103496647027 0x7f81e985a2f3 62: com.mojang.datafixers.DSL::func(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.Type
fifo write: @1699477103496694778 0x7f81e985a65a 233: com.mojang.datafixers.TypeRewriteRule$OrElse::equals(Object) -> boolean
fifo write: @1699477103496866940 0x7f81e235068d 659: qt$1::a(java.io.DataInput, rf) -> qt
fifo write: @1699477103496912321 0x7f81e2350e5d 852: qt$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103496949151 0x7f81e2351719 730: qt$1::d(java.io.DataInput, rf) -> byte[]
fifo write: @1699477103496977712 0x7f81e2351e94 474: qt::<init>(byte[]) -> void
fifo write: @1699477103497075733 0x7f81e23524b4 527: re$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103497219715 0x7f81e2352bd7 1105: re$1::a(java.io.DataInput, rf) -> re
fifo write: @1699477103497257815 0x7f81e985ac31 4: com.mojang.datafixers.types.constant.EmptyPartPassthrough::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103498185507 0x7f81e23535f4 26: java.util.concurrent.atomic.AtomicInteger::compareAndSet(int, int) -> boolean
fifo write: @1699477103498623403 0x7f81e985af5a 241: com.mojang.datafixers.TypeRewriteRule$All::equals(Object) -> boolean
fifo write: @1699477103499336312 0x7f81e985b614 9460: java.util.concurrent.CompletableFuture::andTree(java.util.concurrent.CompletableFuture[], int, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103499436643 0x7f81e98607eb 1690: com.mojang.datafixers.RewriteResult::nop(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103499487684 0x7f81e23539b4 620: com.mojang.datafixers.TypedOptic::tType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103499568215 0x7f81e2354161 3039: com.google.common.collect.ImmutableList$Builder::addAll(Iterable) -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477103499675026 0x7f81e98617d0 51: com.mojang.datafixers.View::isNop() -> boolean
fifo write: @1699477103499812548 0x7f81e23555b4 620: com.mojang.datafixers.TypedOptic::sType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103501002964 0x7f81e9861abd 170: org.apache.commons.lang3.tuple.ImmutableTriple::of(Object, Object, Object) -> org.apache.commons.lang3.tuple.ImmutableTriple
fifo write: @1699477103501252427 0x7f81e2355d7d 3019: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::everywhere(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean) -> java.util.Optional
fifo write: @1699477103501342818 0x7f81e9861f57 55: com.mojang.datafixers.TypeRewriteRule$Everywhere::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103501504630 0x7f81e2357617 250: com.mojang.datafixers.util.Either$Left::ifLeft(java.util.function.Consumer) -> com.mojang.datafixers.util.Either
fifo write: @1699477103501615881 0x7f81e98622f9 838: com.mojang.datafixers.View::compose(com.mojang.datafixers.View) -> com.mojang.datafixers.View
fifo write: @1699477103502691165 0x7f81e2358796 38816: java.util.concurrent.SynchronousQueue$TransferStack::transfer(Object, boolean, long) -> Object
fifo write: @1699477103502759926 0x7f81e9862d10 43: com.mojang.datafixers.DataFixUtils::orElse(java.util.Optional, Object) -> Object
fifo write: @1699477103502824247 0x7f81e2367f94 487: com.mojang.datafixers.types.families.ListAlgebra::apply(int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103502888608 0x7f81e2368534 804: com.mojang.datafixers.TypedOptic::aType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103502947389 0x7f81e2368d34 804: com.mojang.datafixers.TypedOptic::bType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103503014970 0x7f81e2369534 1002: java.util.concurrent.ForkJoinPool$WorkQueue::lockedPush(java.util.concurrent.ForkJoinTask) -> boolean
fifo write: @1699477103503117331 0x7f81e2369fff 5144: com.mojang.datafixers.functions.ProfunctorTransformer::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103503222092 0x7f81e98630b9 1480: com.mojang.datafixers.RewriteResult::compose(com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103503418665 0x7f81e236c3bf 5544: java.util.concurrent.ForkJoinPool::submissionQueue() -> java.util.concurrent.ForkJoinPool$WorkQueue
fifo write: @1699477103504598960 0x7f81e236e99d 500: java.io.DataInputStream::skipBytes(int) -> int
fifo write: @1699477103505334690 0x7f81e9864348 643: java.util.concurrent.ConcurrentHashMap::get(Object) -> Object
fifo write: @1699477103505453831 0x7f81e236f014 340: com.mojang.datafixers.types.templates.Check$CheckType::everywhere(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean) -> java.util.Optional
fifo write: @1699477103505704814 0x7f81e9864df3 684: com.google.common.collect.ImmutableList::copyOf(java.util.Collection) -> com.google.common.collect.ImmutableList
fifo write: @1699477103505744875 0x7f81e236f574 424: ro::a(java.io.DataInput) -> void
fifo write: @1699477103505893257 0x7f81e9865932 3: java.nio.Buffer::remaining() -> int
fifo write: @1699477103506354053 0x7f81e236fb97 2104: java.util.concurrent.ForkJoinTask::compareAndSetForkJoinTaskTag(short, short) -> boolean
fifo write: @1699477103506428044 0x7f81e9865c60 247: com.google.common.collect.ImmutableList::hashCode() -> int
fifo write: @1699477103506621546 0x7f81e2370c39 670: com.mojang.datafixers.types.templates.Hook$HookType::hashCode() -> int
fifo write: @1699477103509402052 0x7f81e98662cc 6: com.mojang.datafixers.TypedOptic$Element::optic() -> com.mojang.datafixers.optics.Optic
fifo write: @1699477103509743316 0x7f81e98665d7 1088: com.mojang.datafixers.TypeRewriteRule::everywhere(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean) -> com.mojang.datafixers.TypeRewriteRule
fifo write: @1699477103509781317 0x7f81e23716b4 486: java.util.ArrayDeque::removeFirst() -> Object
fifo write: @1699477103510220553 0x7f81e98676db 1550: com.mojang.datafixers.TypeRewriteRule$Everywhere::<init>(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean) -> void
fifo write: @1699477103510264323 0x7f81e2371cb4 439: java.util.zip.Inflater$InflaterZStreamRef::<init>(java.util.zip.Inflater, long) -> void
fifo write: @1699477103510651858 0x7f81e23723e2 2734: com.mojang.datafixers.types.templates.Named$NamedType::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103510735919 0x7f81e237383c 2220: com.mojang.datafixers.types.templates.Named$NamedType::fix(com.mojang.datafixers.types.templates.Named$NamedType, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103510778920 0x7f81e2374994 279: com.mojang.datafixers.functions.ProfunctorTransformer::<init>(com.mojang.datafixers.TypedOptic) -> void
fifo write: @1699477103511714842 0x7f81e9868c78 7743: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103511851174 0x7f81e23750e7 6170: com.mojang.datafixers.types.templates.CompoundList::equals(Object) -> boolean
fifo write: @1699477103512005226 0x7f81e986e0a1 6992: java.util.concurrent.ConcurrentHashMap::putVal(Object, Object, boolean) -> Object
fifo write: @1699477103512042216 0x7f81e2377994 263: com.mojang.datafixers.types.Type::equals(Object) -> boolean
fifo write: @1699477103512099737 0x7f81e9871f50 405: com.mojang.datafixers.functions.PointFreeRule$Seq::rewrite(com.mojang.datafixers.functions.PointFree) -> java.util.Optional
fifo write: @1699477103512147537 0x7f81e2377e94 680: com.google.common.collect.ImmutableList::builderWithExpectedSize(int) -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477103512189058 0x7f81e2378654 1230: com.mojang.datafixers.types.templates.Sum$SumType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103512230589 0x7f81e23790d4 1230: com.mojang.datafixers.types.templates.Product$ProductType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103512369910 0x7f81e2379d67 6138: com.mojang.datafixers.types.templates.Tag::equals(Object) -> boolean
fifo write: @1699477103512455271 0x7f81e237c764 3849: com.mojang.datafixers.TypedOptic::compose(com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103513020139 0x7f81e98727ba 7693: aka::a(ajy, int, java.util.function.IntFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103513126100 0x7f81e237e567 6138: com.mojang.datafixers.types.templates.Product::equals(Object) -> boolean
fifo write: @1699477103513178121 0x7f81e2380e47 386: com.mojang.datafixers.functions.Functions::profunctorTransformer(com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103513867599 0x7f81e9877bd1 1054: com.mojang.datafixers.TypeRewriteRule::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.TypeRewriteRule
fifo write: @1699477103514179513 0x7f81e98788ee 859: com.mojang.datafixers.TypeRewriteRule$OrElse::<init>(com.mojang.datafixers.TypeRewriteRule, java.util.function.Supplier) -> void
fifo write: @1699477103514521028 0x7f81e2381414 240: java.io.FilterInputStream::close() -> void
fifo write: @1699477103515348638 0x7f81e2381894 331: com.mojang.datafixers.types.templates.Check$CheckType::<init>(String, int, int, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477103515487430 0x7f81e2381e14 23: com.mojang.datafixers.types.Type::lambda$rewriteOrNop$0() -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103515527890 0x7f81e2382194 180: com.mojang.datafixers.types.Type$$Lambda$5521.0x00007f8160a8ca00::get() -> Object
fifo write: @1699477103515697653 0x7f81e9879279 326: com.mojang.datafixers.types.templates.Sum::equals(Object) -> boolean
fifo write: @1699477103516073537 0x7f81e9879dd0 1565: com.mojang.datafixers.TypeRewriteRule$Seq$$Lambda$5517.0x00007f8160a8c0e8::apply(Object) -> Object
fifo write: @1699477103516133928 0x7f81e23829d4 850: com.mojang.datafixers.types.templates.List$ListType::fix(com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103516201139 0x7f81e23833ad 1375: com.mojang.datafixers.TypedOptic::list(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103516375951 0x7f81e2384042 3606: com.mojang.datafixers.types.templates.List$ListType::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103516449492 0x7f81e987b155 1208: com.mojang.datafixers.TypeRewriteRule$All::<init>(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> void
fifo write: @1699477103516498033 0x7f81e2385a57 1367: com.mojang.datafixers.functions.In::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103516757416 0x7f81e987bfd9 202: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103516895418 0x7f81e238665a 875: java.util.zip.Inflater::<init>(boolean) -> void
fifo write: @1699477103517430175 0x7f81e2386fb7 1165: java.io.DataInputStream::<init>(java.io.InputStream) -> void
fifo write: @1699477103517706508 0x7f81e2387943 386: com.mojang.datafixers.View::create(com.mojang.datafixers.functions.PointFree) -> com.mojang.datafixers.View
fifo write: @1699477103517789239 0x7f81e987c5da 329: org.apache.commons.lang3.tuple.Triple::equals(Object) -> boolean
fifo write: @1699477103517835130 0x7f81e2387f14 31: bft$a::a() -> Object
fifo write: @1699477103517877071 0x7f81e2388314 184: bfr::g() -> boolean
fifo write: @1699477103517938241 0x7f81e23887be 692: bfr::a(it.unimi.dsi.fastutil.ints.Int2BooleanFunction) -> int
fifo write: @1699477103518011182 0x7f81e987cdfd 371: com.mojang.datafixers.types.templates.List$ListType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103518049493 0x7f81e2388f94 240: bft$b::run() -> void
fifo write: @1699477103518109814 0x7f81e2389405 279: ac::a(String, Runnable) -> Runnable
fifo write: @1699477103518162614 0x7f81e2389959 889: bft$a::d() -> Runnable
fifo write: @1699477103518246045 0x7f81e238a29e 314: bfr::e() -> void
fifo write: @1699477103518294846 0x7f81e238a874 1443: bfr::h() -> boolean
fifo write: @1699477103518346957 0x7f81e238b519 1318: bfr::run() -> void
fifo write: @1699477103518543189 0x7f81e238c145 150: java.util.zip.Inflater$InflaterZStreamRef::run() -> void
fifo write: @1699477103518590940 0x7f81e238c694 240: bfq$1::a(Object) -> void
fifo write: @1699477103518644951 0x7f81e238cb34 746: java.util.zip.Inflater$InflaterZStreamRef::clean() -> void
fifo write: @1699477103518756312 0x7f81e238d3c7 2059: com.google.common.collect.ImmutableSet$Builder::add(Object) -> com.google.common.collect.ImmutableCollection$Builder
fifo write: @1699477103518810773 0x7f81e238e3b4 833: com.google.common.reflect.TypeToken::equals(Object) -> boolean
fifo write: @1699477103519163607 0x7f81e238eb74 90: java.util.concurrent.atomic.AtomicBoolean::get() -> boolean
fifo write: @1699477103519198788 0x7f81e238ef74 76: java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease(int) -> boolean
fifo write: @1699477103519232668 0x7f81e238f394 360: java.util.concurrent.ThreadPoolExecutor$Worker::unlock() -> void
fifo write: @1699477103519880356 0x7f81e987da3c 8465: java.util.concurrent.ConcurrentHashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477103519935897 0x7f81e238f957 1150: java.util.zip.Inflater::end() -> void
fifo write: @1699477103520033828 0x7f81e2390914 31: java.util.concurrent.ThreadPoolExecutor$Worker::lock() -> void
fifo write: @1699477103520129410 0x7f81e2391094 227: java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire(int) -> boolean
fifo write: @1699477103520185850 0x7f81e2391639 601: java.util.concurrent.SynchronousQueue::offer(Object) -> boolean
fifo write: @1699477103520254501 0x7f81e2391d14 144: rf::<init>(long, int) -> void
fifo write: @1699477103520310852 0x7f81e2392117 635: arg::<init>(java.io.InputStream) -> void
fifo write: @1699477103520361393 0x7f81e2392817 539: arg::<init>(java.io.InputStream, int) -> void
fifo write: @1699477103520445834 0x7f81e2392f79 3447: java.util.concurrent.ThreadPoolExecutor::getTask() -> Runnable
fifo write: @1699477103520483714 0x7f81e2394994 240: arg::close() -> void
fifo write: @1699477103520559335 0x7f81e9882cd5 668: com.mojang.datafixers.types.templates.Named$NamedType::hashCode() -> int
fifo write: @1699477103520606146 0x7f81e2394e4c 268: rf::a() -> rf
fifo write: @1699477103520683437 0x7f81e2395357 891: java.util.concurrent.SynchronousQueue::poll(long, java.util.concurrent.TimeUnit) -> Object
fifo write: @1699477103520747448 0x7f81e2395cbe 840: rh::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103520817199 0x7f81e2396561 1668: rh::a(java.io.DataInput, rf) -> qw
fifo write: @1699477103520922190 0x7f81e2397319 2884: java.util.concurrent.ThreadPoolExecutor::execute(Runnable) -> void
fifo write: @1699477103521035761 0x7f81e2398b07 2861: java.util.concurrent.SynchronousQueue$TransferStack$SNode::tryMatch(java.util.concurrent.SynchronousQueue$TransferStack$SNode) -> boolean
fifo write: @1699477103521090802 0x7f81e239a097 228: java.util.concurrent.locks.LockSupport::parkNanos(Object, long) -> void
fifo write: @1699477103521171863 0x7f81e239a67b 1366: rh::a(java.io.DataInput, rf, byte) -> rq
fifo write: @1699477103521210774 0x7f81e239b3f4 2: cpc::h() -> int
fifo write: @1699477103521246874 0x7f81e239b774 2: cpc::i() -> int
fifo write: @1699477103521442917 0x7f81e239bb54 972: dij::a(bfq, java.util.function.Supplier) -> void
fifo write: @1699477103521478557 0x7f81e239c494 101: dij$$Lambda$5461.0x00007f8160a7cc08::get() -> Object
fifo write: @1699477103521522278 0x7f81e239c8d4 1098: dij$$Lambda$5464.0x00007f8160a7d2b0::run() -> void
fifo write: @1699477103521806541 0x7f81e239d399 1258: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::getAndMoveToFirst(long) -> Object
fifo write: @1699477103521939173 0x7f81e239e134 544: dil::g(cpc) -> int
fifo write: @1699477103522120835 0x7f81e239e917 3718: dij::b(cpc) -> com.mojang.datafixers.util.Either
fifo write: @1699477103522214557 0x7f81e98836dc 639: com.google.common.collect.Lists::equalsImpl(java.util.List, Object) -> boolean
fifo write: @1699477103522323578 0x7f81e23a03b7 3472: dim::a(cpc) -> qw
fifo write: @1699477103522366849 0x7f81e23a1d74 2: cpc::k() -> int
fifo write: @1699477103522408469 0x7f81e23a20f4 2: cpc::j() -> int
fifo write: @1699477103522461740 0x7f81e23a2474 259: dil::h(cpc) -> int
fifo write: @1699477103522505090 0x7f81e23a2954 93: dil::a(byte) -> boolean
fifo write: @1699477103522575401 0x7f81e23a2d94 185: bfq$$Lambda$5482.0x00007f8160a84670::<init>(java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103522652442 0x7f81e98840cc 6: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::family() -> com.mojang.datafixers.types.families.RecursiveTypeFamily
fifo write: @1699477103523054017 0x7f81e23a3307 3666: bfq::a(java.util.concurrent.CompletableFuture, com.mojang.datafixers.util.Either) -> void
fifo write: @1699477103523162139 0x7f81e23a4bb7 4028: bfq$$Lambda$5463.0x00007f8160a7d078::accept(Object) -> void
fifo write: @1699477103523290001 0x7f81e9884400 1107: com.mojang.datafixers.functions.PointFreeRule$AppNest::rewrite(com.mojang.datafixers.functions.PointFree) -> java.util.Optional
fifo write: @1699477103523517383 0x7f81e23a683f 8580: dim::b(cpc) -> dil
fifo write: @1699477103523699016 0x7f81e23aa55b 10128: dil::a(cpc) -> java.io.DataInputStream
fifo write: @1699477103524922542 0x7f81e23ae682 2932: com.mojang.datafixers.types.templates.Check$CheckType::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103525084384 0x7f81e9885084 707: com.mojang.datafixers.TypedOptic::<init>(java.util.Set, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.optics.Optic) -> void
fifo write: @1699477103525144704 0x7f81e23afb94 462: com.mojang.datafixers.types.templates.CompoundList$CompoundListType::hashCode() -> int
fifo write: @1699477103525334357 0x7f81e9885902 1108: com.mojang.datafixers.TypedOptic::<init>(com.google.common.reflect.TypeToken, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.optics.Optic) -> void
fifo write: @1699477103525655081 0x7f81e23b02e5 4254: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103526405961 0x7f81e98865e6 4390: java.util.concurrent.ConcurrentHashMap::replaceNode(Object, Object, Object) -> Object
fifo write: @1699477103526578913 0x7f81e9889138 1689: com.mojang.datafixers.functions.PointFreeRule$Everywhere::rewrite(com.mojang.datafixers.functions.PointFree) -> java.util.Optional
fifo write: @1699477103526638654 0x7f81e988a5d5 451: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477103526942808 0x7f81e988ac51 158: com.mojang.datafixers.TypeRewriteRule$Seq::equals(Object) -> boolean
fifo write: @1699477103527237321 0x7f81e988b15a 353: com.mojang.datafixers.TypeRewriteRule$Everywhere::equals(Object) -> boolean
fifo write: @1699477103527421824 0x7f81e988b903 46: com.mojang.datafixers.functions.PointFree::all(com.mojang.datafixers.functions.PointFreeRule) -> java.util.Optional
fifo write: @1699477103527668947 0x7f81e988bc54 143: java.util.Optional::flatMap(java.util.function.Function) -> java.util.Optional
fifo write: @1699477103527967291 0x7f81e988c0f8 615: com.google.common.collect.ImmutableList::equals(Object) -> boolean
fifo write: @1699477103528384936 0x7f81e988caea 270: com.mojang.datafixers.View$$Lambda$5519.0x00007f8160a8c578::apply(Object) -> Object
fifo write: @1699477103528559559 0x7f81e988cfd3 334: com.mojang.datafixers.TypeRewriteRule$IfSame::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103528609939 0x7f81e988d5cc 2: com.mojang.datafixers.types.families.RecursiveTypeFamily::size() -> int
fifo write: @1699477103528821252 0x7f81e23b1fb4 623: com.mojang.datafixers.functions.PointFreeRule$AppNest::cap(com.mojang.datafixers.functions.ProfunctorTransformer, com.mojang.datafixers.functions.ProfunctorTransformer) -> Object
fifo write: @1699477103528889053 0x7f81e988d8d9 122: com.mojang.datafixers.View::newType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103529152396 0x7f81e988e14b 844: java.io.ByteArrayInputStream::read(byte[], int, int) -> int
fifo write: @1699477103529988397 0x7f81e988ead3 298: com.mojang.datafixers.TypeRewriteRule$All::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103530059548 0x7f81e988f04f 381: com.mojang.datafixers.types.Type$$Lambda$5514.0x00007f8160a8b5e0::apply(Object) -> Object
fifo write: @1699477103530276161 0x7f81e23b2794 23: com.mojang.datafixers.types.Type::all(com.mojang.datafixers.TypeRewriteRule, boolean, boolean) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103530804388 0x7f81e988f5cc 6: com.mojang.datafixers.functions.FunctionWrapper::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103531145582 0x7f81e23b2b77 1920: com.mojang.datafixers.functions.PointFreeRule$AppNest::compose(com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.functions.PointFree) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103531307474 0x7f81e23b3994 349: java.util.ArrayDeque::peekLast() -> Object
fifo write: @1699477103531737770 0x7f81e23b3f14 369: com.mojang.datafixers.functions.Apply::<init>(com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477103532077914 0x7f81e23b4537 967: com.mojang.datafixers.functions.Apply::<init>(com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.functions.PointFree) -> void
fifo write: @1699477103533159148 0x7f81e23b5127 7971: com.mojang.datafixers.types.families.RecursiveTypeFamily::buildMuType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.families.RecursiveTypeFamily) -> com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType
fifo write: @1699477103533413901 0x7f81e23b8714 304: com.mojang.datafixers.types.Type::codec() -> com.mojang.serialization.Codec
fifo write: @1699477103533660024 0x7f81e9891a1c 2990: com.mojang.datafixers.types.Type::opticView(com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult, com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103533932168 0x7f81e23b8c94 230: com.mojang.serialization.codecs.PairCodec::<init>(com.mojang.serialization.Codec, com.mojang.serialization.Codec) -> void
fifo write: @1699477103534024339 0x7f81e23b91ca 337: com.mojang.serialization.Codec::pair(com.mojang.serialization.Codec, com.mojang.serialization.Codec) -> com.mojang.serialization.Codec
fifo write: @1699477103534457125 0x7f81e98936e9 220: com.mojang.datafixers.types.templates.Sum$SumType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103534643177 0x7f81e23b9794 477: rc::<init>(java.util.List, byte) -> void
fifo write: @1699477103535530749 0x7f81e9893fd0 175: com.mojang.datafixers.types.Type$$Lambda$5520.0x00007f8160a8c7b8::apply(Object) -> Object
fifo write: @1699477103536403390 0x7f81e98944cc 3: rc::f() -> byte
fifo write: @1699477103536673363 0x7f81e9894819 2383: com.mojang.datafixers.TypeRewriteRule$OrElse::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103536826225 0x7f81e23ba194 240: rc::size() -> int
fifo write: @1699477103537160420 0x7f81e23ba614 144: ri::empty() -> Object
fifo write: @1699477103537246811 0x7f81e23baa11 267: com.mojang.serialization.codecs.PrimitiveCodec$$Lambda$3722.0x00007f81607b4000::apply(Object) -> Object
fifo write: @1699477103537297321 0x7f81e23baf94 515: rc::k(int) -> rq
fifo write: @1699477103538510747 0x7f81e23bb637 2235: com.mojang.datafixers.types.templates.Named$NamedType$1$$Lambda$5612.0x00007f8160aa06c8::apply(Object) -> Object
fifo write: @1699477103538614158 0x7f81e23bc794 230: com.mojang.serialization.codecs.PairCodec$$Lambda$5543.0x00007f8160a967d8::<init>(com.mojang.serialization.codecs.PairCodec, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103538738640 0x7f81e23bcdad 2849: com.mojang.serialization.Codec$20::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103538895552 0x7f81e23be37f 4515: com.mojang.datafixers.types.templates.Named$NamedType$1::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103539033174 0x7f81e23c0297 3655: com.mojang.serialization.codecs.PairCodec$$Lambda$5543.0x00007f8160a967d8::apply(Object) -> Object
fifo write: @1699477103539151935 0x7f81e23c1c54 1261: ri$f::a(Iterable) -> ri$f
fifo write: @1699477103539357238 0x7f81e23c27df 4421: com.mojang.serialization.codecs.PairCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103539434909 0x7f81e23c4414 185: ri$f$$Lambda$3726.0x00007f81607b4b58::<init>(java.util.stream.Stream) -> void
fifo write: @1699477103539823824 0x7f81e23c4894 244: java.util.Spliterators$1Adapter::<init>(java.util.Spliterator) -> void
fifo write: @1699477103539943526 0x7f81e23c4d14 324: java.util.Spliterators$1Adapter::hasNext() -> boolean
fifo write: @1699477103540037017 0x7f81e23c5214 185: com.mojang.datafixers.types.templates.Named$NamedType$1$$Lambda$5632.0x00007f8160aa28e8::<init>(com.mojang.datafixers.types.templates.Named$NamedType$1) -> void
fifo write: @1699477103540116418 0x7f81e23c5727 1780: ri$f::a(java.util.stream.Stream) -> ri$f
fifo write: @1699477103540216569 0x7f81e23c6557 2430: java.util.stream.AbstractPipeline::spliterator() -> java.util.Spliterator
fifo write: @1699477103540276390 0x7f81e23c77eb 360: java.util.AbstractList::iterator() -> java.util.Iterator
fifo write: @1699477103540431022 0x7f81e23c7d14 356: ri::getList(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103540516183 0x7f81e23c8214 792: java.util.Spliterators::iterator(java.util.Spliterator) -> java.util.Iterator
fifo write: @1699477103540606204 0x7f81e23c89d4 1041: java.util.stream.ReferencePipeline::iterator() -> java.util.Iterator
fifo write: @1699477103540673375 0x7f81e23c9314 240: ri$f$$Lambda$3726.0x00007f81607b4b58::iterator() -> java.util.Iterator
fifo write: @1699477103540777176 0x7f81e23c97b9 720: java.util.stream.Streams$StreamBuilderImpl::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477103540929138 0x7f81e23c9fda 1252: rc::<init>() -> void
fifo write: @1699477103540985209 0x7f81e23caaca 1351: ri$d::a() -> rq
fifo write: @1699477103541113491 0x7f81e23cb63f 2283: ri::createList(java.util.stream.Stream) -> Object
fifo write: @1699477103541336963 0x7f81e23cc6bf 2186: ri::b(java.util.stream.Stream) -> rq
fifo write: @1699477103541602597 0x7f81e23cd70a 1982: aew::a(String) -> aew
fifo write: @1699477103541894691 0x7f81e23ceada 2512: baf$1::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103541984012 0x7f81e23cfd57 1434: ri::a(rc, java.util.function.Consumer) -> void
fifo write: @1699477103542046143 0x7f81e23d0894 185: ri$$Lambda$5556.0x00007f8160a99468::<init>(rc) -> void
fifo write: @1699477103542118124 0x7f81e23d0d14 185: ri$$Lambda$5580.0x00007f8160a9b888::<init>(java.util.function.Consumer) -> void
fifo write: @1699477103542159624 0x7f81e23d1194 185: ri$$Lambda$3719.0x00007f81607af738::<init>(rc) -> void
fifo write: @1699477103542341016 0x7f81e23d18f7 9841: ri::g(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103542471318 0x7f81e9895f8c 690: com.mojang.serialization.MapDecoder::compressedDecode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103542581400 0x7f81e23d5214 604: rc::get(int) -> Object
fifo write: @1699477103542624090 0x7f81e23d5894 505: ri$$Lambda$3719.0x00007f81607af738::accept(Object) -> void
fifo write: @1699477103542684271 0x7f81e23d5e94 185: com.mojang.datafixers.types.templates.Named$NamedType$1$$Lambda$5612.0x00007f8160aa06c8::<init>(com.mojang.datafixers.types.templates.Named$NamedType$1) -> void
fifo write: @1699477103542911434 0x7f81e23d6577 8098: baf::a(String) -> String
fifo write: @1699477103542984835 0x7f81e23d9977 1820: ri$$Lambda$5556.0x00007f8160a99468::accept(Object) -> void
fifo write: @1699477103543074526 0x7f81e23da697 528: com.mojang.datafixers.types.templates.Named$NamedType$1::lambda$decode$0(Object) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103543188587 0x7f81e9896de1 90: java.lang.invoke.Invokers$Holder::linkToTargetMethod(Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477103543397300 0x7f81e23db017 7862: baf$1$$Lambda$5601.0x00007f8160a9d9e0::apply(Object) -> Object
fifo write: @1699477103543437561 0x7f81e23de294 240: qw::f() -> int
fifo write: @1699477103543491511 0x7f81e23de73a 640: com.mojang.datafixers.types.templates.Named$NamedType$1$$Lambda$5632.0x00007f8160aa28e8::apply(Object) -> Object
fifo write: @1699477103543547212 0x7f81e23def77 1958: ri$$Lambda$5580.0x00007f8160a9b888::accept(Object) -> void
fifo write: @1699477103543594403 0x7f81e23dfdd4 1580: ri::a(java.util.function.Consumer, rq) -> void
fifo write: @1699477103543634883 0x7f81e23e0a39 1069: ri::a(qw) -> rq
fifo write: @1699477103543680224 0x7f81e23e1394 185: com.mojang.serialization.codecs.PairCodec$$Lambda$5647.0x00007f8160aa51d0::<init>(com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477103543718164 0x7f81e98971cc 6: com.mojang.datafixers.functions.Comp::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103545465577 0x7f81e23e189f 1868: com.mojang.datafixers.types.templates.Named$NamedType$1::lambda$decode$1(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103545572868 0x7f81e23e27b7 1187: com.mojang.serialization.codecs.PairCodec::lambda$decode$0(com.mojang.datafixers.util.Pair, com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103545665419 0x7f81e23e32d7 1538: com.mojang.serialization.codecs.PairCodec$$Lambda$5647.0x00007f8160aa51d0::apply(Object) -> Object
fifo write: @1699477103545757111 0x7f81e98974dc 443: java.lang.invoke.LambdaForm$DMH.0x00007f8160191400::newInvokeSpecial(Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477103545873122 0x7f81e23e4097 3280: com.mojang.serialization.codecs.PairCodec::lambda$decode$1(com.mojang.serialization.DynamicOps, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477103546261157 0x7f81e9897bef 2735: com.mojang.datafixers.types.Type$$Lambda$5518.0x00007f8160a8c330::apply(Object) -> Object
fifo write: @1699477103546364388 0x7f81e9899d09 382: com.mojang.serialization.MapDecoder$$Lambda$3718.0x00007f81607ae588::<init>(com.mojang.serialization.MapDecoder, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103546486240 0x7f81e989a1f0 940: com.google.common.collect.ImmutableList$Builder::build() -> com.google.common.collect.ImmutableList
fifo write: @1699477103546913745 0x7f81e23e5794 534: java.io.ByteArrayInputStream::<init>(byte[], int, int) -> void
fifo write: @1699477103546973866 0x7f81e23e5e74 362: din::a(int) -> din
fifo write: @1699477103547050917 0x7f81e23e6394 488: din::a(java.io.InputStream) -> java.io.InputStream
fifo write: @1699477103547264470 0x7f81e989acc0 2162: com.mojang.serialization.codecs.PrimitiveCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103547330781 0x7f81e23e6914 332: din$$Lambda$5478.0x00007f8160a7fad8::wrap(Object) -> Object
fifo write: @1699477103547381222 0x7f81e23e6e14 31: java.util.zip.Inflater::<init>() -> void
fifo write: @1699477103547451922 0x7f81e23e7239 553: java.util.zip.InflaterInputStream::<init>(java.io.InputStream) -> void
fifo write: @1699477103547518933 0x7f81e23e7954 1108: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::get(int) -> Object
fifo write: @1699477103547600914 0x7f81e989c388 262: com.google.common.collect.ImmutableList::builder() -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477103547688185 0x7f81e23e85ae 1483: din::c(java.io.InputStream) -> java.io.InputStream
fifo write: @1699477103547761346 0x7f81e23e9317 1886: dij::b() -> void
fifo write: @1699477103547841037 0x7f81e989c868 37: java.util.stream.Stream::builder() -> java.util.stream.Stream$Builder
fifo write: @1699477103547914008 0x7f81e23ea1b4 717: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::moveIndexToFirst(int) -> void
fifo write: @1699477103548048400 0x7f81e23eab16 37: java.util.zip.InflaterInputStream::<init>(java.io.InputStream, java.util.zip.Inflater) -> void
fifo write: @1699477103548142071 0x7f81e23eaf9a 753: dil::a(java.nio.ByteBuffer, int) -> java.io.ByteArrayInputStream
fifo write: @1699477103548791020 0x7f81e989cff0 4722: com.mojang.datafixers.TypeRewriteRule$Seq::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103548925671 0x7f81e23eb917 3163: bfq$$Lambda$5482.0x00007f8160a84670::accept(Object) -> void
fifo write: @1699477103549065293 0x7f81e23ed0b7 2697: dil::a(cpc, byte, java.io.InputStream) -> java.io.DataInputStream
fifo write: @1699477103549144024 0x7f81e98a0150 219: qu$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103549211605 0x7f81e23ee394 185: com.mojang.datafixers.FunctionType$$Lambda$5705.0x00007f8160ab3da0::<init>(java.util.function.Function) -> void
fifo write: @1699477103549299746 0x7f81e23ee814 230: java.util.function.Function$$Lambda$5737.0x00007f8160959b60::<init>(java.util.function.Function, java.util.function.Function) -> void
fifo write: @1699477103549357927 0x7f81e98a0750 47: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::hashCode() -> int
fifo write: @1699477103549439108 0x7f81e23eecf4 329: com.mojang.datafixers.FunctionType::unbox(com.mojang.datafixers.kinds.App2) -> java.util.function.Function
fifo write: @1699477103549517179 0x7f81e23ef197 429: java.util.function.Function::lambda$compose$0(java.util.function.Function, Object) -> Object
fifo write: @1699477103549589500 0x7f81e23ef734 763: java.util.function.Function$$Lambda$5737.0x00007f8160959b60::apply(Object) -> Object
fifo write: @1699477103549669581 0x7f81e23efe74 420: com.mojang.datafixers.optics.Optics::getFunc(com.mojang.datafixers.kinds.App2) -> java.util.function.Function
fifo write: @1699477103549741832 0x7f81e23f0394 240: com.mojang.datafixers.FunctionType$$Lambda$5705.0x00007f8160ab3da0::apply(Object) -> Object
fifo write: @1699477103549795163 0x7f81e98a0ad0 123: com.mojang.datafixers.types.templates.List$ListType::hashCode() -> int
fifo write: @1699477103549893394 0x7f81e23f0887 1779: java.util.function.Function::compose(java.util.function.Function) -> java.util.function.Function
fifo write: @1699477103549989875 0x7f81e23f15dc 1663: com.mojang.datafixers.FunctionType::create(java.util.function.Function) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103550168598 0x7f81e23f24df 7105: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477103550268089 0x7f81e98a0e54 283: com.mojang.serialization.DataResult::setPartial(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103551165090 0x7f81e98a15da 2803: com.mojang.serialization.MapCodec$MapCodecCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103551556815 0x7f81e23f54f4 507: com.mojang.datafixers.optics.Optic$CompositionOptic::applyUnchecked(java.util.function.Function, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103551610936 0x7f81e23f5a94 606: com.mojang.datafixers.functions.PointFree::evalCached() -> java.util.function.Function
fifo write: @1699477103551937350 0x7f81e23f6257 1217: com.mojang.datafixers.FunctionType$Instance::dimap(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103552070932 0x7f81e23f6d97 2178: com.mojang.datafixers.optics.profunctors.Profunctor::dimap(com.mojang.datafixers.kinds.App2, java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103552148273 0x7f81e23f7c94 230: com.mojang.datafixers.FunctionType$Instance$$Lambda$5724.0x00007f8160ab69a0::<init>(java.util.function.Function, java.util.function.Function) -> void
fifo write: @1699477103552302985 0x7f81e23f81b3 112: java.nio.HeapByteBuffer::put(java.nio.ByteBuffer) -> java.nio.ByteBuffer
fifo write: @1699477103552623189 0x7f81e23f87b7 2490: com.mojang.datafixers.FunctionType$Instance::lambda$dimap$0(java.util.function.Function, java.util.function.Function, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103552724391 0x7f81e23f99d7 2868: com.mojang.datafixers.FunctionType$Instance$$Lambda$5724.0x00007f8160ab69a0::apply(Object) -> Object
fifo write: @1699477103553488190 0x7f81e98a348b 1874: com.mojang.datafixers.TypeRewriteRule$Nop::rewrite(com.mojang.datafixers.types.Type) -> java.util.Optional
fifo write: @1699477103555279003 0x7f81e23facf4 104: CharacterDataLatin1::getPropertiesEx(int) -> int
fifo write: @1699477103555869701 0x7f81e23fb1e0 977: java.lang.invoke.DirectMethodHandle$Holder::invokeStatic(Object, Object, Object, Object, long) -> Object
fifo write: @1699477103555971482 0x7f81e23fba14 279: java.lang.invoke.BoundMethodHandle$Species_LJ::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, long) -> void
fifo write: @1699477103556137365 0x7f81e23fbfdf 260: java.lang.invoke.BoundMethodHandle$Species_LJ::make(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, Object, long) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477103556216446 0x7f81e23fc5b4 408: java.lang.invoke.LambdaFormEditor::bindArgumentJ(java.lang.invoke.BoundMethodHandle, int, long) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477103556306327 0x7f81e23fcbd7 949: java.lang.invoke.BoundMethodHandle::bindArgumentJ(int, long) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477103556432148 0x7f81e23fd637 2609: java.lang.invoke.BoundMethodHandle$Species_L::copyWithExtendJ(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, long) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477103556586340 0x7f81e23feb96 37: sun.invoke.util.Wrapper::convert(Object, Class) -> Object
fifo write: @1699477103556614131 0x7f81e8b9ee98 27: vtable stub
fifo write: @1699477103556670771 0x7f81e98a4ecc 2: java.util.Formatter$FormatSpecifier::index() -> int
fifo write: @1699477103557845236 0x7f81e98a5440 12540: com.mojang.datafixers.types.Type::rewrite(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule) -> java.util.Optional
fifo write: @1699477103557946818 0x7f81e23fefb4 1299: java.lang.invoke.StringConcatFactory::prepender(String, Class) -> java.lang.invoke.MethodHandle
fifo write: @1699477103558097890 0x7f81e98ad398 1972: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::computeIfAbsent(int, it.unimi.dsi.fastutil.ints.Int2ObjectFunction) -> Object
fifo write: @1699477103558257632 0x7f81e23ffbdc 4224: sun.invoke.util.Wrapper::convert(Object, Class, boolean) -> Object
fifo write: @1699477103558359403 0x7f81e2401d83 1565: java.lang.invoke.LambdaForm$DMH.0x00007f81606a0000::newInvokeSpecial(Object, Object, Object, Object, Object, int) -> Object
fifo write: @1699477103558408414 0x7f81e2402914 279: com.mojang.datafixers.types.Type$FieldNotFoundException::<init>(String) -> void
fifo write: @1699477103558453944 0x7f81e2402e14 185: com.mojang.datafixers.types.Type$TypeError::<init>(String) -> void
fifo write: @1699477103559114752 0x7f81e98aea1c 2803: it.unimi.dsi.fastutil.ints.Int2ObjectMaps$SynchronizedMap::computeIfAbsent(int, it.unimi.dsi.fastutil.ints.Int2ObjectFunction) -> Object
fifo write: @1699477103559175523 0x7f81e2403294 39: StringBuilder::append(CharSequence, int, int) -> StringBuilder
fifo write: @1699477103559371256 0x7f81e98b06ba 2740: com.mojang.datafixers.types.families.RecursiveTypeFamily::apply(int) -> com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType
fifo write: @1699477103559532098 0x7f81e240374c 676: java.lang.invoke.LambdaForm$MH.0x00007f8160ae4400::linkToTargetMethod(Object, Object, Object, Object, int, Object) -> Object
fifo write: @1699477103559604479 0x7f81e2403e19 396: com.mojang.datafixers.types.Type$$Lambda$6030.0x00007f8160ae2ad8::apply(Object) -> Object
fifo write: @1699477103559724750 0x7f81e2404414 327: com.mojang.datafixers.types.Type$$Lambda$6030.0x00007f8160ae2ad8::<init>(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> void
fifo write: @1699477103559880022 0x7f81e2404a5a 1082: com.mojang.datafixers.types.Type::lambda$findType$17(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean, com.mojang.datafixers.types.Type$FieldNotFoundException) -> com.mojang.datafixers.util.Either
fifo write: @1699477103559936453 0x7f81e2405374 283: Character::isUpperCase(int) -> boolean
fifo write: @1699477103560005094 0x7f81e2405894 293: java.util.Formatter$FixedString::<init>(java.util.Formatter, String, int, int) -> void
fifo write: @1699477103560068205 0x7f81e2405d94 188: StringBuilder::append(CharSequence, int, int) -> Appendable
fifo write: @1699477103560117045 0x7f81e2406214 309: CharacterDataLatin1::isUpperCase(int) -> boolean
fifo write: @1699477103560220297 0x7f81e98b23bc 135: java.lang.invoke.LambdaForm$MH.0x00007f81600da400::invoke(Object, Object) -> long
fifo write: @1699477103560274307 0x7f81e2406794 233: java.util.Formatter::ensureOpen() -> void
fifo write: @1699477103560348208 0x7f81e2406c96 267: java.util.Formatter$FixedString::print(Object, java.util.Locale) -> void
fifo write: @1699477103560424819 0x7f81e98b2863 46: com.mojang.datafixers.util.Either::right(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103560553761 0x7f81e24071d4 15: java.lang.invoke.StringConcatFactory::objectStringifier() -> java.lang.invoke.MethodHandle
fifo write: @1699477103560794354 0x7f81e98b323a 2740: com.mojang.datafixers.types.families.RecursiveTypeFamily::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477103560882295 0x7f81e2407647 2208: com.mojang.datafixers.types.Type::findType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103560914935 0x7f81e24085d4 1877: java.util.Formatter$Conversion::isValid(char) -> boolean
fifo write: @1699477103560975506 0x7f81e2409094 390: com.mojang.datafixers.types.Type$Continue::<init>() -> void
fifo write: @1699477103562448725 0x7f81e98b584c 6: com.mojang.datafixers.types.templates.Tag$TagType::name() -> String
fifo write: @1699477103562956222 0x7f81e98b5b59 66: com.mojang.datafixers.View::funcType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103564079196 0x7f81e24097c6 5775: java.lang.invoke.MethodHandles::insertArgumentPrimitive(java.lang.invoke.BoundMethodHandle, int, Class, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477103564258919 0x7f81e240c15f 6851: java.lang.invoke.MethodHandle::spreadArrayChecks(Class, int) -> void
fifo write: @1699477103564552192 0x7f81e240f1b4 774: com.mojang.datafixers.DSL::taggedChoiceType(String, com.mojang.datafixers.types.Type, java.util.Map) -> com.mojang.datafixers.types.Type
fifo write: @1699477103565165850 0x7f81e240f914 240: jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke(Object, Object[]) -> Object
fifo write: @1699477103565610236 0x7f81e98b62c2 713: java.lang.invoke.LambdaForm$MH.0x00007f8160100800::invoke(Object, Object, Object) -> Object
fifo write: @1699477103566574689 0x7f81e240fdb4 699: com.mojang.datafixers.optics.profunctors.Profunctor::dimap(com.mojang.datafixers.kinds.App2, java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103567167906 0x7f81e2410aec 22400: com.mojang.datafixers.FieldFinder$Matcher::match(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.util.Either
fifo write: @1699477103567286998 0x7f81e2418f14 275: com.mojang.datafixers.optics.Traversal$Instance$$Lambda$6199.0x00007f8160afd478::<init>(com.mojang.datafixers.optics.Traversal$Instance, java.util.function.Function, java.util.function.Function) -> void
fifo write: @1699477103567491590 0x7f81e2419494 540: com.mojang.datafixers.optics.Traversal$Instance$1::<init>(com.mojang.datafixers.optics.Traversal$Instance, java.util.function.Function, com.mojang.datafixers.kinds.App2, java.util.function.Function) -> void
fifo write: @1699477103567575331 0x7f81e2419a99 404: com.mojang.datafixers.optics.Traversal$Instance$$Lambda$6199.0x00007f8160afd478::apply(Object) -> Object
fifo write: @1699477103567655502 0x7f81e241a037 624: com.mojang.datafixers.functions.Fold::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103567753434 0x7f81e241a7d4 1380: com.mojang.datafixers.types.templates.Tag$TagType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103567872235 0x7f81e241b471 647: com.mojang.datafixers.optics.Traversal$Instance::lambda$dimap$0(java.util.function.Function, java.util.function.Function, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103567940466 0x7f81e241bb14 185: com.mojang.datafixers.optics.Lens$$Lambda$5759.0x00007f8160ab96d0::<init>(com.mojang.datafixers.optics.Lens) -> void
fifo write: @1699477103568042987 0x7f81e241bfd7 1302: com.mojang.datafixers.optics.Traversal$Instance::dimap(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103568139129 0x7f81e241cb97 2004: com.mojang.datafixers.functions.Comp::<init>(com.mojang.datafixers.functions.PointFree[]) -> void
fifo write: @1699477103568219020 0x7f81e241db94 185: com.mojang.datafixers.optics.Lens$$Lambda$5786.0x00007f8160abcb48::<init>(com.mojang.datafixers.optics.Lens) -> void
fifo write: @1699477103568365132 0x7f81e98b71e3 878: java.util.concurrent.CompletableFuture::uniApplyStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103568443403 0x7f81e241e014 185: com.mojang.datafixers.types.templates.Const$$Lambda$5996.0x00007f8160addf50::<init>(com.mojang.datafixers.types.templates.Const) -> void
fifo write: @1699477103568510383 0x7f81e241e494 31: com.mojang.datafixers.types.templates.Const::lambda$hmap$4(int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103568582534 0x7f81e241e894 188: com.mojang.datafixers.types.templates.Const$$Lambda$5996.0x00007f8160addf50::apply(int) -> Object
fifo write: @1699477103568731726 0x7f81e241edf7 3380: com.mojang.datafixers.optics.Lens$$Lambda$5701.0x00007f8160ab3468::apply(Object) -> Object
fifo write: @1699477103568998330 0x7f81e2420457 1051: com.mojang.datafixers.types.templates.Const::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477103569130872 0x7f81e2420edf 2760: com.mojang.datafixers.optics.Lens::lambda$eval$2(com.mojang.datafixers.optics.profunctors.Cartesian, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103569162662 0x7f81e98b7ccc 2: aku::b() -> int
fifo write: @1699477103569322244 0x7f81e2422174 329: com.mojang.datafixers.optics.Traversal::unbox(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.optics.Traversal
fifo write: @1699477103570067134 0x7f81e2422617 76: com.mojang.datafixers.optics.Traversal$Instance$1$$Lambda$6278.0x00007f8160b09300::apply(Object) -> Object
fifo write: @1699477103570213885 0x7f81e2422a94 365: com.mojang.datafixers.optics.Traversal$Instance$1$$Lambda$6278.0x00007f8160b09300::<init>(com.mojang.datafixers.kinds.Applicative, java.util.function.Function, com.mojang.datafixers.kinds.App2, com.mojang.datafixers.FunctionType, java.util.function.Function) -> void
fifo write: @1699477103570329657 0x7f81e2423157 1301: com.mojang.datafixers.optics.Traversal$Instance$1::wander(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103570487989 0x7f81e2423cfa 6838: com.mojang.datafixers.functions.Functions::comp(com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.functions.PointFree) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103570568540 0x7f81e24265b4 700: com.mojang.datafixers.optics.Lens::lambda$eval$0(Object) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103570652031 0x7f81e2426db7 1039: com.mojang.datafixers.optics.Lens$$Lambda$5759.0x00007f8160ab96d0::apply(Object) -> Object
fifo write: @1699477103570822593 0x7f81e2427734 1490: com.mojang.datafixers.optics.Traversal$Instance$1::lambda$wander$0(com.mojang.datafixers.kinds.Applicative, java.util.function.Function, com.mojang.datafixers.kinds.App2, com.mojang.datafixers.FunctionType, java.util.function.Function, Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103572189401 0x7f81e2428277 484: ri::a(String, String) -> boolean
fifo write: @1699477103572280072 0x7f81e24288d7 1602: ri$$Lambda$6353.0x00007f8160b14520::accept(Object) -> void
fifo write: @1699477103572350023 0x7f81e2429534 836: ri$$Lambda$6341.0x00007f8160b124b0::test(Object) -> boolean
fifo write: @1699477103572423024 0x7f81e2429db4 1248: ri::a(qw, qw, String) -> void
fifo write: @1699477103573433187 0x7f81e242a86a 447: com.mojang.datafixers.types.templates.Check::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477103573570399 0x7f81e242ae14 340: com.mojang.datafixers.types.templates.Check$1::<init>(com.mojang.datafixers.types.templates.Check, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477103573738621 0x7f81e242b314 275: com.mojang.datafixers.types.templates.Product$$Lambda$6012.0x00007f8160adfa38::<init>(com.mojang.datafixers.types.templates.Product, com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> void
fifo write: @1699477103573807882 0x7f81e242b8da 1368: com.mojang.datafixers.types.templates.Check$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477103573912143 0x7f81e242c4d7 1302: com.mojang.datafixers.types.templates.Sum::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477103574047475 0x7f81e242d014 345: com.mojang.datafixers.types.templates.Product::cap(com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103574168997 0x7f81e242d514 275: com.mojang.datafixers.types.templates.Sum$$Lambda$5991.0x00007f8160adcc18::<init>(com.mojang.datafixers.types.templates.Sum, com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> void
fifo write: @1699477103574239907 0x7f81e242da97 106: com.mojang.datafixers.types.templates.Product$$Lambda$6012.0x00007f8160adfa38::apply(int) -> Object
fifo write: @1699477103574321009 0x7f81e242df17 106: com.mojang.datafixers.types.templates.Sum$$Lambda$5991.0x00007f8160adcc18::apply(int) -> Object
fifo write: @1699477103574368309 0x7f81e242e394 185: com.mojang.datafixers.kinds.IdF::<init>(Object) -> void
fifo write: @1699477103574448950 0x7f81e242e857 1302: com.mojang.datafixers.types.templates.Product::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477103574530381 0x7f81e242f374 101: com.mojang.datafixers.optics.Proj2::view(com.mojang.datafixers.util.Pair) -> Object
fifo write: @1699477103574630263 0x7f81e242f7b7 832: com.mojang.datafixers.kinds.IdF$Instance::map(java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103578964598 0x7f81e24300bc 2425: com.mojang.datafixers.types.templates.Sum::lambda$hmap$4(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103579090990 0x7f81e2431214 328: com.mojang.datafixers.optics.Lens::lambda$eval$1(com.mojang.datafixers.util.Pair) -> Object
fifo write: @1699477103579174081 0x7f81e24317b4 908: com.mojang.datafixers.optics.Lens$$Lambda$5786.0x00007f8160abcb48::apply(Object) -> Object
fifo write: @1699477103579348293 0x7f81e2431ff4 301: com.mojang.datafixers.util.Pair::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103579450275 0x7f81e2432494 425: com.mojang.datafixers.optics.Proj2::view(Object) -> Object
fifo write: @1699477103579584306 0x7f81e2432abc 2425: com.mojang.datafixers.types.templates.Product::lambda$hmap$4(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103579638307 0x7f81e2433bd4 129: java.util.Formatter$Conversion::isText(char) -> boolean
fifo write: @1699477103579687798 0x7f81e2433ff4 375: Character::isUpperCase(char) -> boolean
fifo write: @1699477103579784119 0x7f81e2434619 1713: java.util.Formatter$FormatSpecifier::appendJustified(Appendable, CharSequence) -> void
fifo write: @1699477103579858420 0x7f81e2435414 185: com.mojang.datafixers.util.Either$$Lambda$6071.0x00007f8160ae96d0::<init>(java.util.function.Function) -> void
fifo write: @1699477103579962221 0x7f81e2435994 2147: java.util.Formatter$FormatSpecifier::print(Object, java.util.Locale) -> void
fifo write: @1699477103580089853 0x7f81e2436be7 2288: java.util.Formatter$FormatSpecifier::print(String, java.util.Locale) -> void
fifo write: @1699477103580152354 0x7f81e2438057 1602: ri$$Lambda$6395.0x00007f8160b1a208::accept(Object) -> void
fifo write: @1699477103580200864 0x7f81e2438cb4 1248: ri::c(qw, qw, String) -> void
fifo write: @1699477103580290876 0x7f81e24398a6 4407: java.util.Formatter::format(java.util.Locale, String, Object[]) -> java.util.Formatter
fifo write: @1699477103580363647 0x7f81e243be17 1959: com.mojang.datafixers.util.Either::mapLeft(java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477103580428097 0x7f81e243cc14 425: com.mojang.datafixers.TypedOptic$$Lambda$5699.0x00007f8160aad400::apply(Object) -> Object
fifo write: @1699477103580502938 0x7f81e243d219 1702: java.util.Formatter$FormatSpecifier::<init>(java.util.Formatter, char) -> void
fifo write: @1699477103580960944 0x7f81e98b80f0 6865: com.mojang.serialization.codecs.ListCodec$$Lambda$3720.0x00007f81607af970::apply(Object) -> Object
fifo write: @1699477103581327219 0x7f81e98bc496 7146: com.mojang.serialization.codecs.ListCodec::lambda$decode$4(com.mojang.serialization.DynamicOps, java.util.function.Consumer) -> com.mojang.serialization.DataResult
fifo write: @1699477103581388670 0x7f81e98c08d9 116: java.lang.ref.SoftReference::get() -> Object
fifo write: @1699477103581483351 0x7f81e243e14f 3636: java.util.Formatter$FormatSpecifier::printString(Object, java.util.Locale) -> void
fifo write: @1699477103581587162 0x7f81e243fdb7 5259: com.mojang.datafixers.types.templates.List$ListType::toString() -> String
fifo write: @1699477103581660173 0x7f81e2441ed4 84: com.mojang.datafixers.TypedOptic::lambda$upCast$1(com.mojang.datafixers.TypedOptic$Element) -> com.mojang.datafixers.optics.Optic
fifo write: @1699477103581908966 0x7f81e244263a 10471: java.util.Formatter::parse(String) -> java.util.List
fifo write: @1699477103582017738 0x7f81e2447237 562: com.mojang.datafixers.optics.Proj2::update(Object, com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103582110429 0x7f81e2447994 167: com.mojang.datafixers.optics.Lens::eval(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477103582203780 0x7f81e2447e3a 889: com.mojang.datafixers.optics.Proj2::update(Object, Object) -> Object
fifo write: @1699477103582427103 0x7f81e98c0cef 2820: rd$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103582542885 0x7f81e2448714 230: com.mojang.datafixers.optics.Lens$$Lambda$5701.0x00007f8160ab3468::<init>(com.mojang.datafixers.optics.Lens, com.mojang.datafixers.optics.profunctors.Cartesian) -> void
fifo write: @1699477103582637626 0x7f81e2448c7e 1349: java.util.HashMap$KeySet::forEach(java.util.function.Consumer) -> void
fifo write: @1699477103582742177 0x7f81e98c2c6b 62: com.mojang.datafixers.RewriteResult::create(com.mojang.datafixers.View, java.util.BitSet) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103582851769 0x7f81e24499f4 1788: java.util.Locale::getDefault(java.util.Locale$Category) -> java.util.Locale
fifo write: @1699477103583012171 0x7f81e244a987 2827: com.mojang.datafixers.types.templates.Product$ProductType::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103583108962 0x7f81e244bcf4 329: com.mojang.datafixers.optics.profunctors.Cartesian::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.optics.profunctors.Cartesian
fifo write: @1699477103583197433 0x7f81e244c1b7 834: com.mojang.datafixers.util.Either$$Lambda$6071.0x00007f8160ae96d0::apply(Object) -> Object
fifo write: @1699477103583373015 0x7f81e244cc77 7825: com.mojang.datafixers.types.templates.Product$ProductType::toString() -> String
fifo write: @1699477103583479817 0x7f81e244fd14 737: com.mojang.datafixers.util.Either::lambda$mapLeft$0(java.util.function.Function, Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103583620089 0x7f81e24505a6 968: com.mojang.datafixers.types.Type::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103583721620 0x7f81e2450ef7 1536: com.mojang.datafixers.optics.Lens::eval(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103583814671 0x7f81e2451b14 185: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6109.0x00007f8160aef3f0::<init>(com.mojang.datafixers.types.templates.Product$ProductType) -> void
fifo write: @1699477103583983113 0x7f81e24521f7 7642: com.mojang.datafixers.types.templates.Tag$TagType::toString() -> String
fifo write: @1699477103584085645 0x7f81e2455194 185: com.mojang.datafixers.util.Pair$Instance$$Lambda$6309.0x00007f8160b0e600::<init>(com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477103584229116 0x7f81e2455614 327: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6122.0x00007f8160af0920::<init>(com.mojang.datafixers.types.templates.Product$ProductType, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> void
fifo write: @1699477103584345428 0x7f81e2455c14 340: com.mojang.datafixers.optics.profunctors.TraversalP$1::<init>(com.mojang.datafixers.optics.profunctors.TraversalP, com.mojang.datafixers.kinds.Traversable) -> void
fifo write: @1699477103584431769 0x7f81e98c2fcc 6: com.google.common.reflect.TypeToken::getType() -> java.lang.reflect.Type
fifo write: @1699477103584487840 0x7f81e98c32ea 291: qw::<init>() -> void
fifo write: @1699477103584552521 0x7f81e2456114 137: com.mojang.datafixers.util.Pair$Instance::<init>() -> void
fifo write: @1699477103584646432 0x7f81e2456514 275: com.mojang.datafixers.optics.profunctors.TraversalP$1$$Lambda$6301.0x00007f8160b0d560::<init>(com.mojang.datafixers.kinds.Traversable, com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> void
fifo write: @1699477103584806594 0x7f81e2456cf7 7657: com.mojang.datafixers.types.templates.Sum$SumType::toString() -> String
fifo write: @1699477103585211639 0x7f81e2459ff4 232: com.mojang.datafixers.optics.profunctors.TraversalP$1::lambda$wander$0(com.mojang.datafixers.kinds.Traversable, com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103585291540 0x7f81e245a494 387: com.mojang.datafixers.optics.profunctors.TraversalP$$Lambda$6229.0x00007f8160b06b70::apply(Object) -> Object
fifo write: @1699477103585384021 0x7f81e245a999 637: com.mojang.datafixers.optics.profunctors.TraversalP$1$$Lambda$6301.0x00007f8160b0d560::apply(Object) -> Object
fifo write: @1699477103585505523 0x7f81e245b0bd 706: com.mojang.datafixers.optics.profunctors.TraversalP::traverse(com.mojang.datafixers.kinds.Traversable, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103585678965 0x7f81e245b877 1377: com.mojang.datafixers.optics.profunctors.TraversalP$1::wander(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103585786497 0x7f81e245c414 440: com.mojang.datafixers.optics.Traversal$Instance$2::<init>(com.mojang.datafixers.optics.Traversal$Instance, com.mojang.datafixers.optics.Wander, com.mojang.datafixers.kinds.App2) -> void
fifo write: @1699477103585894938 0x7f81e245c9ed 547: com.mojang.datafixers.optics.Traversal$Instance::wander(com.mojang.datafixers.optics.Wander, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103585978669 0x7f81e245d014 185: com.mojang.datafixers.types.templates.Sum$SumType$$Lambda$6059.0x00007f8160ae8490::<init>(com.mojang.datafixers.types.templates.Sum$SumType) -> void
fifo write: @1699477103586114711 0x7f81e245d517 2247: com.mojang.datafixers.util.Pair$Instance::traverse(com.mojang.datafixers.kinds.Applicative, java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103586187962 0x7f81e245e519 396: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6122.0x00007f8160af0920::apply(Object) -> Object
fifo write: @1699477103586526906 0x7f81e245ee3f 10566: com.mojang.datafixers.types.templates.Sum$SumType::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103586623557 0x7f81e2462d77 1334: com.mojang.datafixers.optics.profunctors.TraversalP::first(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103586699878 0x7f81e2463794 667: com.mojang.datafixers.optics.profunctors.TraversalP$$Lambda$6245.0x00007f8160b07470::apply(Object) -> Object
fifo write: @1699477103586836510 0x7f81e98c3826 871: java.util.stream.ForEachOps$ForEachOp$OfRef::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477103586993772 0x7f81e2463e14 275: com.mojang.datafixers.types.templates.RecursivePoint$$Lambda$6055.0x00007f8160ae5c90::<init>(com.mojang.datafixers.types.templates.RecursivePoint, java.util.function.IntFunction, com.mojang.datafixers.types.families.TypeFamily) -> void
fifo write: @1699477103587119654 0x7f81e98c44f8 609: qw::a(String, rq) -> rq
fifo write: @1699477103587223915 0x7f81e24643b4 823: com.mojang.datafixers.optics.Traversal$Instance$2::wander(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103587323296 0x7f81e2464b94 167: com.mojang.datafixers.kinds.Applicative::ap(java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103587415448 0x7f81e2465014 185: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6134.0x00007f8160af3918::<init>(com.mojang.datafixers.types.templates.Product$ProductType) -> void
fifo write: @1699477103587551609 0x7f81e2465514 1382: jdk.internal.reflect.GeneratedMethodAccessor3::invoke(Object, Object[]) -> Object
fifo write: @1699477103587567650 0x7f81e8b9eec8 168: itable stub
fifo write: @1699477103587667481 0x7f81e2466257 1302: com.mojang.datafixers.types.templates.RecursivePoint::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477103587715501 0x7f81e98c51cc 6: com.mojang.datafixers.FieldFinder::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103587775692 0x7f81e98c54cf 98: com.google.common.collect.SingletonImmutableSet::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477103587840733 0x7f81e2466dfe 1549: java.util.Spliterators$IteratorSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477103587900384 0x7f81e2467ae3 877: com.google.common.collect.Sets::newHashSet() -> java.util.HashSet
fifo write: @1699477103587975035 0x7f81e98c590b 62: com.mojang.datafixers.types.templates.List::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477103588046426 0x7f81e24683bf 2088: com.google.common.reflect.TypeToken$4::visitClass(Class) -> void
fifo write: @1699477103588110607 0x7f81e98c5d0b 549: com.mojang.datafixers.types.templates.Product$ProductType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103588194528 0x7f81e2469479 1498: com.mojang.datafixers.types.templates.Product$ProductType::capRight(com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103588310119 0x7f81e246a3f7 7642: com.mojang.datafixers.types.templates.Named$NamedType::toString() -> String
fifo write: @1699477103588372850 0x7f81e246d3ba 622: com.mojang.datafixers.util.Pair$Instance$$Lambda$6309.0x00007f8160b0e600::apply(Object) -> Object
fifo write: @1699477103588448751 0x7f81e246db79 1920: java.util.HashMap$KeySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477103588506482 0x7f81e246ec43 292: com.mojang.datafixers.kinds.IdF::create(Object) -> com.mojang.datafixers.kinds.IdF
fifo write: @1699477103588648263 0x7f81e98c66b0 1416: rb$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103588725484 0x7f81e246f217 1862: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6134.0x00007f8160af3918::apply(Object) -> Object
fifo write: @1699477103588760945 0x7f81e98c797c 95: it.unimi.dsi.fastutil.HashCommon::arraySize(int, float) -> int
fifo write: @1699477103588806286 0x7f81e98c7d52 182: com.mojang.datafixers.types.templates.List$1::apply(int) -> com.mojang.datafixers.types.Type
fifo write: @1699477103588854136 0x7f81e2470114 240: qw::e() -> java.util.Set
fifo write: @1699477103588954587 0x7f81e247062d 979: com.mojang.serialization.Dynamic::map(java.util.function.Function) -> com.mojang.serialization.Dynamic
fifo write: @1699477103589107809 0x7f81e2471161 6640: com.google.common.reflect.TypeVisitor::visit(java.lang.reflect.Type[]) -> void
fifo write: @1699477103589189850 0x7f81e98c8252 555: java.nio.ByteBuffer::allocate(int) -> java.nio.ByteBuffer
fifo write: @1699477103589290352 0x7f81e2473c77 521: com.mojang.datafixers.util.Pair$Instance::lambda$traverse$0(com.mojang.datafixers.util.Pair, Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103589350593 0x7f81e2474394 230: ri$$Lambda$6353.0x00007f8160b14520::<init>(qw, qw) -> void
fifo write: @1699477103589436674 0x7f81e2474894 230: com.mojang.serialization.Dynamic$$Lambda$6332.0x00007f8160b11240::<init>(com.mojang.serialization.Dynamic, String) -> void
fifo write: @1699477103589697967 0x7f81e2474d74 313: com.mojang.datafixers.kinds.IdF::get(com.mojang.datafixers.kinds.App) -> Object
fifo write: @1699477103589822289 0x7f81e2475297 245: com.mojang.serialization.Dynamic::lambda$remove$12(String, Object) -> Object
fifo write: @1699477103589961300 0x7f81e2475714 358: com.mojang.serialization.Dynamic$$Lambda$6332.0x00007f8160b11240::apply(Object) -> Object
fifo write: @1699477103590057002 0x7f81e2475d3f 1939: com.mojang.datafixers.types.Type::findType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103590129553 0x7f81e2476b94 356: ri::remove(Object, String) -> Object
fifo write: @1699477103590194373 0x7f81e24770ef 133: java.util.HashMap$KeySet::spliterator() -> java.util.Spliterator
fifo write: @1699477103590262534 0x7f81e2477514 185: ri$$Lambda$6341.0x00007f8160b124b0::<init>(String) -> void
fifo write: @1699477103590371606 0x7f81e24779b4 691: com.mojang.datafixers.kinds.Applicative::ap(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103590736900 0x7f81e2478094 185: com.mojang.datafixers.kinds.IdF$Instance$$Lambda$6743.0x00007f8160b4c8c8::<init>(com.mojang.datafixers.kinds.App) -> void
fifo write: @1699477103590826132 0x7f81e2478577 1161: com.mojang.serialization.Dynamic::remove(String) -> com.mojang.serialization.Dynamic
fifo write: @1699477103590960043 0x7f81e2479014 214: com.mojang.datafixers.optics.Adapter$$Lambda$5711.0x00007f8160ab4980::apply(Object) -> Object
fifo write: @1699477103591047454 0x7f81e2479557 1174: com.mojang.datafixers.kinds.IdF$Instance::lift1(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477103591145056 0x7f81e98c8d64 397: com.mojang.datafixers.kinds.IdF$Instance::map(java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103591251077 0x7f81e2479fb4 1618: com.mojang.datafixers.kinds.IdF$Instance::lambda$lift1$0(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103591351418 0x7f81e247ac34 875: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry::<init>(java.util.Map$Entry) -> void
fifo write: @1699477103592033417 0x7f81e98c96f8 3501: it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap::putAll(java.util.Map) -> void
fifo write: @1699477103592197099 0x7f81e247b414 243: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1::hasNext() -> boolean
fifo write: @1699477103592360041 0x7f81e247b894 240: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry::getValue() -> Object
fifo write: @1699477103592629885 0x7f81e98cc0ea 946: java.nio.HeapByteBuffer::<init>(int, int, jdk.internal.access.foreign.MemorySegmentProxy) -> void
fifo write: @1699477103592762497 0x7f81e247bd7a 1626: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1::next() -> Object
fifo write: @1699477103592949949 0x7f81e98cccd7 43: com.mojang.datafixers.types.Type::equals(Object) -> boolean
fifo write: @1699477103593222633 0x7f81e247ca4d 1701: com.mojang.serialization.Dynamic::convert(com.mojang.serialization.DynamicOps) -> com.mojang.serialization.Dynamic
fifo write: @1699477103593344164 0x7f81e98cd098 843: java.util.BitSet::clone() -> Object
fifo write: @1699477103594234206 0x7f81e247e93f 9501: ri$h::a(qw, rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103594482269 0x7f81e247d877 1996: com.mojang.datafixers.kinds.IdF$Instance$$Lambda$6743.0x00007f8160b4c8c8::apply(Object) -> Object
fifo write: @1699477103594655321 0x7f81e24823ff 4808: ri::a(rq, String) -> rq
fifo write: @1699477103594823383 0x7f81e2484357 1047: ri$h::initBuilder() -> Object
fifo write: @1699477103595081127 0x7f81e2484c94 275: com.mojang.serialization.codecs.EitherCodec$$Lambda$6781.0x00007f8160b52420::<init>(com.mojang.serialization.codecs.EitherCodec, com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477103595255659 0x7f81e2485214 332: com.mojang.serialization.codecs.EitherCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103595479932 0x7f81e2485717 400: com.mojang.serialization.codecs.PairCodec$$Lambda$6779.0x00007f8160b521d8::apply(Object) -> Object
fifo write: @1699477103595630914 0x7f81e2485e3d 2610: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::<init>(com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103596245632 0x7f81e98cd9f0 855: java.util.Optional::orElseGet(java.util.function.Supplier) -> Object
fifo write: @1699477103596823939 0x7f81e248742f 8215: com.mojang.serialization.codecs.ListCodec::encode(java.util.List, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103598954777 0x7f81e98ce4cc 951: java.util.HashMap::putMapEntries(java.util.Map, boolean) -> void
fifo write: @1699477103599038498 0x7f81e248a819 369: com.mojang.serialization.codecs.EitherCodec$$Lambda$6781.0x00007f8160b52420::apply(Object) -> Object
fifo write: @1699477103599184500 0x7f81e98cf5cc 987: com.google.common.collect.Maps::newHashMap(java.util.Map) -> java.util.HashMap
fifo write: @1699477103599239470 0x7f81e98d0450 83: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1::hasNext() -> boolean
fifo write: @1699477103599280891 0x7f81e98d07d0 67: rc::size() -> int
fifo write: @1699477103599382282 0x7f81e248af2d 2915: ri::mapBuilder() -> com.mojang.serialization.RecordBuilder
fifo write: @1699477103599444733 0x7f81e98d0b53 275: com.mojang.datafixers.types.Type::codec() -> com.mojang.serialization.Codec
fifo write: @1699477103599511724 0x7f81e98d0fd0 75: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry::getValue() -> Object
fifo write: @1699477103599570284 0x7f81e248c414 185: ri$$Lambda$5303.0x00007f81609c2728::<init>(rq) -> void
fifo write: @1699477103599779887 0x7f81e248cbf7 12617: ri$d::a(rq) -> ri$f
fifo write: @1699477103599803137 0x7f81e8b9ef80 168: itable stub
fifo write: @1699477103599894659 0x7f81e2491617 2026: ri$$Lambda$5302.0x00007f81609c1dd8::apply(Object) -> Object
fifo write: @1699477103599981910 0x7f81e2492514 230: com.mojang.serialization.ListBuilder$Builder$$Lambda$5301.0x00007f81609c1b90::<init>(com.mojang.serialization.ListBuilder$Builder, Object) -> void
fifo write: @1699477103600511017 0x7f81e2492a57 1215: ri::a(String) -> rq
fifo write: @1699477103600689939 0x7f81e249350e 191: com.mojang.serialization.DynamicLike::asString(String) -> String
fifo write: @1699477103600920992 0x7f81e2493c5f 6246: com.mojang.serialization.ListBuilder$Builder::build(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103601097024 0x7f81e24963b4 781: com.mojang.serialization.ListBuilder$Builder$$Lambda$5301.0x00007f81609c1b90::apply(Object) -> Object
fifo write: @1699477103601369308 0x7f81e2497314 214: com.mojang.datafixers.optics.Adapter$$Lambda$5716.0x00007f8160ab5748::apply(Object) -> Object
fifo write: @1699477103601533060 0x7f81e2497837 740: com.mojang.datafixers.Typed$$Lambda$6265.0x00007f8160b00800::apply(Object) -> Object
fifo write: @1699477103601628451 0x7f81e2498014 643: com.mojang.datafixers.Typed::lambda$updateCap$9(java.util.function.Function, Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103601789483 0x7f81e2498a97 459: com.mojang.datafixers.kinds.IdF$Instance::point(Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103603176331 0x7f81e2499157 2614: aum::a(com.mojang.serialization.Dynamic) -> com.mojang.serialization.Dynamic
fifo write: @1699477103603306052 0x7f81e98d135d 1522: PublicMethods$MethodList::filter(java.lang.reflect.Method[], String, Class[], boolean) -> PublicMethods$MethodList
fifo write: @1699477103604643319 0x7f81e98d2602 14202: aka::a(ajy, int, java.util.function.IntFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103604750661 0x7f81e249a494 356: com.mojang.serialization.codecs.ListCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103604800931 0x7f81e98db750 147: java.util.AbstractList$Itr::hasNext() -> boolean
fifo write: @1699477103608580280 0x7f81e249ab1f 5024: ri::mergeToList(Object, java.util.List) -> com.mojang.serialization.DataResult
fifo write: @1699477103608681901 0x7f81e249cc8d 2303: com.mojang.serialization.DynamicOps::listBuilder() -> com.mojang.serialization.ListBuilder
fifo write: @1699477103608762642 0x7f81e249dd97 575: baf$1::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477103608870794 0x7f81e249e417 429: com.mojang.serialization.codecs.PrimitiveCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103608953045 0x7f81e249e9d7 1277: ri::createString(String) -> Object
fifo write: @1699477103609029776 0x7f81e249f597 237: baf$1::a(com.mojang.serialization.DynamicOps, String) -> Object
fifo write: @1699477103609107387 0x7f81e249fa14 230: com.mojang.datafixers.kinds.Applicative$$Lambda$6752.0x00007f8160b4db08::<init>(java.util.function.BiFunction, Object) -> void
fifo write: @1699477103609217128 0x7f81e249ffdf 2464: com.mojang.serialization.DynamicOps::mergeToPrimitive(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103609298549 0x7f81e24a1214 345: com.mojang.datafixers.optics.ListTraversal$$Lambda$5952.0x00007f8160ad69e0::apply(Object, Object) -> Object
fifo write: @1699477103609456491 0x7f81e24a16f4 232: com.mojang.datafixers.kinds.Applicative::lambda$ap2$8(java.util.function.BiFunction, Object, Object) -> Object
fifo write: @1699477103609536342 0x7f81e24a1b97 342: com.mojang.datafixers.kinds.Applicative$$Lambda$6752.0x00007f8160b4db08::apply(Object) -> Object
fifo write: @1699477103609639124 0x7f81e24a2217 2952: aum$$Lambda$6719.0x00007f8160b48920::apply(Object) -> Object
fifo write: @1699477103609725775 0x7f81e24a3777 1405: com.mojang.datafixers.kinds.Applicative$$Lambda$3985.0x00007f816083afb0::apply(Object) -> Object
fifo write: @1699477103609775925 0x7f81e98dbbcc 6: ri$b::a() -> rq
fifo write: @1699477103609821526 0x7f81e98dbecc 6: ri$c::a() -> rq
fifo write: @1699477103609897697 0x7f81e24a4337 553: com.mojang.datafixers.util.Either$$Lambda$6096.0x00007f8160aeb6c0::apply(Object) -> Object
fifo write: @1699477103610041379 0x7f81e98dc1e0 1531: PublicMethods$MethodList::filter(java.lang.reflect.Method[], String, Class[], boolean) -> PublicMethods$MethodList
fifo write: @1699477103610214361 0x7f81e24a4a97 3436: com.mojang.datafixers.types.templates.Product$ProductType::lambda$findTypeInChildren$8(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean, com.mojang.datafixers.types.Type$FieldNotFoundException) -> com.mojang.datafixers.util.Either
fifo write: @1699477103610875580 0x7f81e24a6114 240: com.mojang.datafixers.types.templates.Tag::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477103610941860 0x7f81e24a65b4 577: com.mojang.datafixers.TypedOptic$$Lambda$5698.0x00007f8160aad800::test(Object) -> boolean
fifo write: @1699477103611005751 0x7f81e24a6c97 117: com.google.common.reflect.TypeToken::isSupertypeOf(com.google.common.reflect.TypeToken) -> boolean
fifo write: @1699477103611104493 0x7f81e24a715a 1380: com.google.common.reflect.TypeToken$4::<init>(com.google.common.reflect.TypeToken, com.google.common.collect.ImmutableSet$Builder) -> void
fifo write: @1699477103611213054 0x7f81e98dd31f 671: ri::getMap(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103611307505 0x7f81e24a7cd4 1615: com.mojang.datafixers.optics.Optic$CompositionOptic::lambda$eval$0(java.util.List, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103611467597 0x7f81e24a895a 1645: ri::a(java.util.List, ri$f) -> com.mojang.serialization.DataResult
fifo write: @1699477103611543498 0x7f81e98ddef5 938: java.util.HashMap$KeySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477103611597809 0x7f81e24a96da 1186: com.google.common.reflect.TypeVisitor::<init>() -> void
fifo write: @1699477103611673690 0x7f81e24aa0f4 228: com.mojang.datafixers.TypedOptic::lambda$instanceOf$2(com.google.common.reflect.TypeToken, com.google.common.reflect.TypeToken) -> boolean
fifo write: @1699477103611711550 0x7f81e98deb50 67: qw::f() -> int
fifo write: @1699477103612174006 0x7f81e24aa679 1178: com.google.common.reflect.TypeToken::someRawTypeIsSubclassOf(Class) -> boolean
fifo write: @1699477103612909736 0x7f81e24ab0f4 232: com.mojang.datafixers.functions.Comp::applyUnchecked(java.util.function.Function, Object) -> Object
fifo write: @1699477103614469426 0x7f81e98df200 15360: com.mojang.datafixers.types.Type::everywhere(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean) -> java.util.Optional
fifo write: @1699477103617247762 0x7f81e24ab881 11090: com.google.common.reflect.TypeToken::isSubtypeOf(java.lang.reflect.Type) -> boolean
fifo write: @1699477103617478575 0x7f81e24af637 1316: com.mojang.datafixers.kinds.Applicative::lambda$ap2$9(java.util.function.BiFunction, Object) -> java.util.function.Function
fifo write: @1699477103617607027 0x7f81e98ea036 697: PublicMethods$Key::matches(java.lang.reflect.Method, String, Class[]) -> boolean
fifo write: @1699477103617689688 0x7f81e24b0154 1269: com.mojang.datafixers.functions.Apply::lambda$eval$0(com.mojang.serialization.DynamicOps) -> Object
fifo write: @1699477103617850200 0x7f81e24b0cf7 3586: com.google.common.reflect.TypeToken::getRawTypes() -> com.google.common.collect.ImmutableSet
fifo write: @1699477103617930101 0x7f81e24b2514 356: com.mojang.datafixers.optics.Optic$CompositionOptic$$Lambda$5702.0x00007f8160ab36c8::apply(Object) -> Object
fifo write: @1699477103618003852 0x7f81e24b2a14 185: com.mojang.datafixers.optics.Adapter$$Lambda$5711.0x00007f8160ab4980::<init>(com.mojang.datafixers.optics.Adapter) -> void
fifo write: @1699477103618810022 0x7f81e98eac37 10697: sun.nio.ch.IOUtil::read(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477103618911103 0x7f81e24b2f77 3120: com.mojang.datafixers.optics.Adapter$$Lambda$5700.0x00007f8160ab3208::apply(Object) -> Object
fifo write: @1699477103619655633 0x7f81e98f1c53 8444: java.lang.invoke.AbstractValidatingLambdaMetafactory::validateMetafactoryArgs() -> void
fifo write: @1699477103619804175 0x7f81e98f8c0a 1446: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1::next() -> Object
fifo write: @1699477103619896916 0x7f81e8ff3264 140: com.google.common.collect.ImmutableCollection$Builder::addAll(Iterable) -> com.google.common.collect.ImmutableCollection$Builder
fifo write: @1699477103620019888 0x7f81e98f9c8e 977: com.mojang.serialization.Codec$20::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103620085769 0x7f81e98fa8a9 22: java.util.Collections$UnmodifiableCollection::<init>(java.util.Collection) -> void
fifo write: @1699477103620321372 0x7f81e98fac34 2449: com.mojang.serialization.Dynamic::hashCode() -> int
fifo write: @1699477103620397563 0x7f81e24b4414 422: com.mojang.datafixers.functions.ProfunctorTransformer$$Lambda$5704.0x00007f8160ab3b58::apply(Object) -> Object
fifo write: @1699477103620455863 0x7f81e24b4994 159: java.util.concurrent.ConcurrentLinkedQueue::add(Object) -> boolean
fifo write: @1699477103620527224 0x7f81e24b4e0e 21: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry::getKey() -> Object
fifo write: @1699477103620617255 0x7f81e98fcaf5 565: java.util.AbstractList$Itr::next() -> Object
fifo write: @1699477103620694966 0x7f81e24b51fd 566: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1::next() -> java.util.Map$Entry
fifo write: @1699477103620779947 0x7f81e24b590e 77: com.mojang.serialization.Encoder::encodeStart(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103620838588 0x7f81e98fd4a4 250: ri$h::initBuilder() -> Object
fifo write: @1699477103621657639 0x7f81e24b5e1d 2193: com.mojang.serialization.ListBuilder$Builder::<init>(com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103621789801 0x7f81e98fda14 11: com.mojang.datafixers.optics.Traversal::unbox(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.optics.Traversal
fifo write: @1699477103622636671 0x7f81e98fdd00 706: ri::e(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103622841974 0x7f81e98fe5d0 275: rc::get(int) -> Object
fifo write: @1699477103623221759 0x7f81e98feb75 743: com.mojang.datafixers.optics.Traversal$Instance$1$$Lambda$6278.0x00007f8160b09300::apply(Object) -> Object
fifo write: @1699477103623460252 0x7f81e24b6ed4 1242: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103623568574 0x7f81e24b7994 185: com.mojang.datafixers.optics.Adapter$$Lambda$5716.0x00007f8160ab5748::<init>(com.mojang.datafixers.optics.Adapter) -> void
fifo write: @1699477103623841737 0x7f81e24b7edf 2484: com.mojang.datafixers.optics.Adapter::lambda$eval$0(com.mojang.datafixers.optics.profunctors.Profunctor, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103624897711 0x7f81e24b90f7 2839: com.mojang.datafixers.FunctionType$Instance::first(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103625075553 0x7f81e98ff579 784: qw::a(String, rq) -> rq
fifo write: @1699477103625373817 0x7f81e24ba414 185: com.mojang.datafixers.FunctionType$Instance$$Lambda$5745.0x00007f8160ab8000::<init>(com.mojang.datafixers.kinds.App2) -> void
fifo write: @1699477103625538739 0x7f81e24babf4 1652: com.mojang.datafixers.functions.Apply$$Lambda$5696.0x00007f8160aaefd8::apply(Object) -> Object
fifo write: @1699477103625640400 0x7f81e24bb8b4 1224: com.mojang.datafixers.FunctionType$Instance::lambda$first$1(com.mojang.datafixers.kinds.App2, com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103625979925 0x7f81e24bc457 2863: com.mojang.datafixers.functions.ProfunctorTransformer$$Lambda$5703.0x00007f8160ab3910::apply(Object) -> Object
fifo write: @1699477103626190927 0x7f81e99000b0 1309: ri$$Lambda$6353.0x00007f8160b14520::accept(Object) -> void
fifo write: @1699477103626318809 0x7f81e24bd717 399: com.google.common.collect.ImmutableCollection::spliterator() -> java.util.Spliterator
fifo write: @1699477103626383830 0x7f81e24bdd14 240: com.mojang.datafixers.types.templates.Const$PrimitiveType::toString() -> String
fifo write: @1699477103626539772 0x7f81e9901183 945: com.mojang.datafixers.optics.Traversal$Instance$1$$Lambda$6278.0x00007f8160b09300::<init>(com.mojang.datafixers.kinds.Applicative, java.util.function.Function, com.mojang.datafixers.kinds.App2, com.mojang.datafixers.FunctionType, java.util.function.Function) -> void
fifo write: @1699477103626616623 0x7f81e24be18e 239: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1::<init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet) -> void
fifo write: @1699477103626675574 0x7f81e24be6e1 187: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet::iterator() -> java.util.Iterator
fifo write: @1699477103626732724 0x7f81e24bec0e 334: java.util.Collections$UnmodifiableSet::<init>(java.util.Set) -> void
fifo write: @1699477103627041808 0x7f81e24bf171 531: java.util.Collections::unmodifiableMap(java.util.Map) -> java.util.Map
fifo write: @1699477103627155290 0x7f81e24bf8a7 2469: com.mojang.datafixers.functions.ProfunctorTransformer::lambda$eval$0(java.util.function.Function, java.util.function.Function) -> java.util.function.Function
fifo write: @1699477103627320752 0x7f81e9901ad4 143: com.mojang.datafixers.types.templates.Named$NamedType$1$$Lambda$5632.0x00007f8160aa28e8::apply(Object) -> Object
fifo write: @1699477103627384533 0x7f81e24c098e 334: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet::<init>(java.util.Set) -> void
fifo write: @1699477103627637686 0x7f81e24c0f14 185: com.mojang.datafixers.optics.Prism$$Lambda$5833.0x00007f8160ac3248::<init>(com.mojang.datafixers.optics.Prism) -> void
fifo write: @1699477103627740437 0x7f81e9901f6e 703: com.mojang.serialization.Dynamic::convert(com.mojang.serialization.DynamicOps) -> com.mojang.serialization.Dynamic
fifo write: @1699477103628747070 0x7f81e990280c 640: com.mojang.datafixers.optics.Traversal$Instance$1::lambda$wander$0(com.mojang.datafixers.kinds.Applicative, java.util.function.Function, com.mojang.datafixers.kinds.App2, com.mojang.datafixers.FunctionType, java.util.function.Function, Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103628814641 0x7f81e24c138e 534: qw::i() -> java.util.Map
fifo write: @1699477103629482460 0x7f81e99030d0 395: ri$$Lambda$6341.0x00007f8160b124b0::test(Object) -> boolean
fifo write: @1699477103629593521 0x7f81e24c1a94 185: com.mojang.datafixers.optics.Prism$$Lambda$5814.0x00007f8160ac16e8::<init>(com.mojang.datafixers.optics.Prism) -> void
fifo write: @1699477103629673752 0x7f81e9903ccc 6: com.mojang.datafixers.types.families.RecursiveTypeFamily::name() -> String
fifo write: @1699477103686991611 0x7f81e24c1f77 1578: com.mojang.datafixers.FunctionType$Instance$$Lambda$5745.0x00007f8160ab8000::apply(Object) -> Object
fifo write: @1699477103687116663 0x7f81e24c2c14 185: com.mojang.datafixers.FunctionType$Instance$$Lambda$5802.0x00007f8160ac0260::<init>(com.mojang.datafixers.kinds.App2) -> void
fifo write: @1699477103697389055 0x7f81e9903fd9 150: com.mojang.datafixers.optics.Traversal$Instance$1::wander(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103697622828 0x7f81e24c3177 2839: com.mojang.datafixers.FunctionType$Instance::right(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103697687519 0x7f81e24c4494 185: com.mojang.datafixers.optics.Prism$$Lambda$5945.0x00007f8160ad4a30::<init>(com.mojang.datafixers.optics.Prism) -> void
fifo write: @1699477103697771410 0x7f81e99044d0 331: com.mojang.datafixers.types.templates.Named$NamedType$1$$Lambda$5612.0x00007f8160aa06c8::apply(Object) -> Object
fifo write: @1699477103697809870 0x7f81e9904bcc 6: cpv::ac() -> aev
fifo write: @1699477103697895411 0x7f81e9904ef0 463: ri$$Lambda$5580.0x00007f8160a9b888::accept(Object) -> void
fifo write: @1699477103697966152 0x7f81e9905693 688: ri$f::a(Iterable) -> ri$f
fifo write: @1699477103698048453 0x7f81e24c4997 1701: com.mojang.datafixers.optics.Prism::lambda$eval$0(com.mojang.datafixers.util.Either) -> Object
fifo write: @1699477103698137355 0x7f81e24c5737 2297: com.mojang.datafixers.optics.Prism$$Lambda$5833.0x00007f8160ac3248::apply(Object) -> Object
fifo write: @1699477103698214006 0x7f81e99061d0 307: com.mojang.serialization.codecs.PairCodec$$Lambda$5647.0x00007f8160aa51d0::apply(Object) -> Object
fifo write: @1699477103698265816 0x7f81e9906850 47: java.util.HashMap$KeySpliterator::characteristics() -> int
fifo write: @1699477103698332577 0x7f81e24c6739 602: java.util.Collections$UnmodifiableMap::entrySet() -> java.util.Set
fifo write: @1699477103698443509 0x7f81e24c6f5f 2480: com.mojang.datafixers.optics.Prism::lambda$eval$1(com.mojang.datafixers.optics.profunctors.Cocartesian, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103698495639 0x7f81e24c810e 334: java.util.Collections$UnmodifiableMap::<init>(java.util.Map) -> void
fifo write: @1699477103698583790 0x7f81e9906b5c 264: com.mojang.datafixers.util.Either::mapRight(java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477103698789813 0x7f81e990725e 2665: com.mojang.datafixers.types.templates.Named$NamedType$1::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103698854884 0x7f81e9908eb9 54: com.mojang.datafixers.kinds.IdF::get(com.mojang.datafixers.kinds.App) -> Object
fifo write: @1699477103698896034 0x7f81e24c86e0 222: ri$h::a() -> qw
fifo write: @1699477103698955315 0x7f81e24c8c14 240: com.mojang.datafixers.optics.Prism$$Lambda$5814.0x00007f8160ac16e8::apply(Object) -> Object
fifo write: @1699477103699037566 0x7f81e24c908e 119: com.mojang.serialization.Codec$20::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103699142128 0x7f81e24c9577 3100: com.mojang.datafixers.optics.Prism$$Lambda$5800.0x00007f8160abfb30::apply(Object) -> Object
fifo write: @1699477103699204608 0x7f81e24caa34 852: com.mojang.datafixers.optics.Traversal$$Lambda$5801.0x00007f8160ac0000::apply(Object) -> Object
fifo write: @1699477103699254809 0x7f81e9909250 275: qw::c(String) -> rq
fifo write: @1699477103699355670 0x7f81e9909780 573: com.mojang.serialization.codecs.PairCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103699515782 0x7f81e24cb4f5 7566: java.util.concurrent.ConcurrentLinkedQueue::offer(Object) -> boolean
fifo write: @1699477103699586583 0x7f81e163278e 132: com.mojang.serialization.ListBuilder$Builder$$Lambda$5300.0x00007f81609c1960::apply(Object, Object) -> Object
fifo write: @1699477103699697825 0x7f81e24ce877 3014: com.mojang.datafixers.FunctionType$Instance::wander(com.mojang.datafixers.optics.Wander, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103699811006 0x7f81e24cfd17 2672: com.mojang.datafixers.FunctionType$Instance::lambda$right$6(com.mojang.datafixers.kinds.App2, com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477103699969548 0x7f81e24d0ed7 1166: com.mojang.datafixers.functions.Comp::lambda$eval$3(com.mojang.serialization.DynamicOps) -> java.util.function.Function
fifo write: @1699477103700040249 0x7f81e24d1914 230: com.mojang.datafixers.functions.Comp$$Lambda$5693.0x00007f8160aae900::<init>(com.mojang.datafixers.functions.Comp, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103700103690 0x7f81e24d1e17 237: com.mojang.datafixers.optics.Traversal::lambda$eval$0(com.mojang.datafixers.optics.profunctors.TraversalP, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103700135460 0x7f81e24d228e 101: rc::b(int, rq) -> boolean
fifo write: @1699477103700168691 0x7f81e24d2733 180: rc::a(rq) -> boolean
fifo write: @1699477103700233052 0x7f81e24d2d11 144: com.mojang.serialization.ListBuilder$Builder::add(com.mojang.serialization.DataResult) -> com.mojang.serialization.ListBuilder
fifo write: @1699477103700278242 0x7f81e24d31df 801: java.util.ArrayList::add(int, Object) -> void
fifo write: @1699477103700318363 0x7f81e24d3c71 527: java.util.ArrayList::rangeCheckForAdd(int) -> void
fifo write: @1699477103700392524 0x7f81e990a153 556: com.mojang.serialization.codecs.EitherCodec$$Lambda$6781.0x00007f8160b52420::<init>(com.mojang.serialization.codecs.EitherCodec, com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477103700462875 0x7f81e17fd9d7 3018: com.mojang.datafixers.FunctionType$Instance$$Lambda$5802.0x00007f8160ac0260::apply(Object) -> Object
fifo write: @1699477103700495505 0x7f81e17fd17a 529: java.util.Arrays::copyOf(long[], int) -> long[]
fifo write: @1699477103700595116 0x7f81e17edc70 553: com.mojang.datafixers.TypedOptic::tagged(com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType, Object, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103700702958 0x7f81e18c3fc1 2903: com.mojang.serialization.Codec$20::encode(com.mojang.serialization.Dynamic, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103700754328 0x7f81e1800bf7 1554: com.mojang.datafixers.functions.Comp$$Lambda$5690.0x00007f8160aae248::apply(Object) -> Object
fifo write: @1699477103700793389 0x7f81e1800614 185: com.mojang.datafixers.optics.InjTagged::<init>(Object) -> void
fifo write: @1699477103702388669 0x7f81e990aad0 20931: java.lang.invoke.MethodHandleNatives::linkCallSiteImpl(Class, java.lang.invoke.MethodHandle, String, java.lang.invoke.MethodType, Object, Object[]) -> java.lang.invoke.MemberName
fifo write: @1699477103702452200 0x7f81e173328e 69: java.util.AbstractList::add(Object) -> boolean
fifo write: @1699477103702612472 0x7f81e99169b8 1179: com.mojang.datafixers.optics.profunctors.Profunctor::dimap(com.mojang.datafixers.kinds.App2, java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103702843535 0x7f81e99179b0 2410: com.mojang.serialization.codecs.PairCodec$$Lambda$5543.0x00007f8160a967d8::apply(Object) -> Object
fifo write: @1699477103702926746 0x7f81e24d45b9 1749: rc::c(int, rq) -> void
fifo write: @1699477103702979007 0x7f81e1732e8e 146: rc::add(int, Object) -> void
fifo write: @1699477103703252411 0x7f81e991938b 1732: ri::mapBuilder() -> com.mojang.serialization.RecordBuilder
fifo write: @1699477103703315121 0x7f81e24d5634 425: java.util.stream.ReferencePipeline::allMatch(java.util.function.Predicate) -> boolean
fifo write: @1699477103703404523 0x7f81e24d5c14 185: com.mojang.datafixers.TypedOptic$$Lambda$5698.0x00007f8160aad800::<init>(com.google.common.reflect.TypeToken) -> void
fifo write: @1699477103703522164 0x7f81e24d606e 197: com.mojang.serialization.Dynamic::convert(com.mojang.serialization.DynamicOps, com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477103703604135 0x7f81e991a3d4 18: com.google.common.collect.ImmutableSet$Builder::add(Object) -> com.google.common.collect.ImmutableCollection$Builder
fifo write: @1699477103703650546 0x7f81e991a6d0 103: com.google.common.reflect.TypeToken::hashCode() -> int
fifo write: @1699477103703728007 0x7f81e24d6617 106: com.mojang.datafixers.types.families.RecursiveTypeFamily$$Lambda$5522.0x00007f8160a92af8::apply(int) -> Object
fifo write: @1699477103703920889 0x7f81e24d6adc 1559: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::elementResult(Object, com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103704196823 0x7f81e24d7994 3455: com.mojang.datafixers.TypedOptic::replaceTagged(com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType, Object, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.types.Type
fifo write: @1699477103704350165 0x7f81e24d9255 480: com.mojang.datafixers.functions.Functions::fold(com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.types.families.Algebra, int) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103704440006 0x7f81e24d999c 2057: com.mojang.datafixers.TypedOptic::instanceOf(java.util.Collection, com.google.common.reflect.TypeToken) -> boolean
fifo write: @1699477103704584318 0x7f81e24da997 1912: com.mojang.datafixers.types.families.RecursiveTypeFamily::lambda$fold$0(com.mojang.datafixers.types.families.Algebra, com.mojang.datafixers.types.families.RecursiveTypeFamily, int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103704710419 0x7f81e24db914 373: com.mojang.datafixers.functions.Fold::<init>(com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.types.families.Algebra, int) -> void
fifo write: @1699477103704816551 0x7f81e24dbf37 534: com.mojang.datafixers.types.templates.RecursivePoint::lambda$hmap$1(java.util.function.IntFunction, com.mojang.datafixers.types.families.TypeFamily, int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103704937922 0x7f81e991aa55 183: com.mojang.datafixers.types.templates.RecursivePoint::apply(com.mojang.datafixers.types.families.TypeFamily) -> com.mojang.datafixers.types.families.TypeFamily
fifo write: @1699477103705019873 0x7f81e24dc5b4 655: com.mojang.datafixers.types.templates.RecursivePoint$$Lambda$6055.0x00007f8160ae5c90::apply(int) -> Object
fifo write: @1699477103705187336 0x7f81e24dcf07 6331: com.mojang.datafixers.TypedOptic::upCast(com.google.common.reflect.TypeToken) -> java.util.Optional
fifo write: @1699477103705246116 0x7f81e24df6f4 288: org.apache.commons.lang3.ObjectUtils::isArray(Object) -> boolean
fifo write: @1699477103705364158 0x7f81e991af73 2660: java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements() -> void
fifo write: @1699477103705506280 0x7f81e24dfd27 3479: com.mojang.datafixers.types.templates.RecursivePoint::cap(com.mojang.datafixers.types.families.TypeFamily, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103705698722 0x7f81e24e16af 3885: com.mojang.datafixers.types.families.RecursiveTypeFamily::foldUnchecked(com.mojang.datafixers.types.families.RecursiveTypeFamily, com.mojang.datafixers.types.families.RecursiveTypeFamily, com.mojang.datafixers.types.families.Algebra, int) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103705807814 0x7f81e24e3157 1227: com.mojang.datafixers.types.templates.List::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477103705936575 0x7f81e991c537 819: com.mojang.datafixers.types.Type$$Lambda$6030.0x00007f8160ae2ad8::<init>(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> void
fifo write: @1699477103706007206 0x7f81e991cdcf 304: com.mojang.datafixers.types.Type$$Lambda$6030.0x00007f8160ae2ad8::apply(Object) -> Object
fifo write: @1699477103706195049 0x7f81e24e3c94 275: com.mojang.datafixers.types.templates.List$$Lambda$6046.0x00007f8160ae6ff8::<init>(com.mojang.datafixers.types.templates.List, com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> void
fifo write: @1699477103706346291 0x7f81e24e44bc 5833: org.apache.commons.lang3.ObjectUtils::clone(Object) -> Object
fifo write: @1699477103706456532 0x7f81e24e76fa 3218: com.mojang.datafixers.optics.Optic$CompositionOptic::eval(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477103706570743 0x7f81e24e8ed7 1201: com.mojang.datafixers.types.templates.List::cap(com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103706611274 0x7f81e991d3b0 91: AbstractStringBuilder::checkRange(int, int, int) -> void
fifo write: @1699477103706690865 0x7f81e24e9a14 275: com.mojang.datafixers.Typed::<init>(com.mojang.datafixers.types.Type, com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477103706746326 0x7f81e24e9f97 106: com.mojang.datafixers.types.templates.List$$Lambda$6046.0x00007f8160ae6ff8::apply(int) -> Object
fifo write: @1699477103706882167 0x7f81e991d76c 140: com.mojang.datafixers.types.Type::lambda$findType$17(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean, com.mojang.datafixers.types.Type$FieldNotFoundException) -> com.mojang.datafixers.util.Either
fifo write: @1699477103706951718 0x7f81e24ea454 1462: com.mojang.datafixers.optics.Inj1::match(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103707089180 0x7f81e24eb01f 3352: com.mojang.datafixers.types.templates.List::lambda$hmap$1(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103707174791 0x7f81e24ec8a7 3557: ri$c::a(rq) -> ri$f
fifo write: @1699477103707241062 0x7f81e24edff4 84: com.mojang.datafixers.optics.Proj1::view(com.mojang.datafixers.util.Pair) -> Object
fifo write: @1699477103707299903 0x7f81e24ee414 425: com.mojang.datafixers.optics.Proj1::view(Object) -> Object
fifo write: @1699477103707375584 0x7f81e24ee9d7 1121: com.mojang.datafixers.optics.Inj1::match(com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477103707449775 0x7f81e991dbf5 374: com.mojang.datafixers.optics.Lens$$Lambda$5759.0x00007f8160ab96d0::apply(Object) -> Object
fifo write: @1699477103707543156 0x7f81e24ef28e 119: com.mojang.datafixers.types.templates.Named$NamedType$1::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103708136904 0x7f81e24ef6ba 889: com.mojang.datafixers.optics.Proj1::update(Object, Object) -> Object
fifo write: @1699477103708237485 0x7f81e991e2f0 551: com.mojang.datafixers.optics.Lens$$Lambda$5786.0x00007f8160abcb48::apply(Object) -> Object
fifo write: @1699477103708320606 0x7f81e24effb4 823: com.mojang.serialization.Dynamic::castTyped(com.mojang.serialization.DynamicOps) -> com.mojang.serialization.Dynamic
fifo write: @1699477103708494188 0x7f81e24f0879 934: com.mojang.datafixers.types.templates.Named$NamedType$1::encode(com.mojang.datafixers.util.Pair, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103708587659 0x7f81e24f14b4 936: com.mojang.serialization.Dynamic::cast(com.mojang.serialization.DynamicOps) -> Object
fifo write: @1699477103708680871 0x7f81e24f1db7 545: com.mojang.datafixers.optics.Proj1::update(Object, com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103708765522 0x7f81e24f24f4 329: com.mojang.datafixers.optics.profunctors.Profunctor::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.optics.profunctors.Profunctor
fifo write: @1699477103708811262 0x7f81e24f296e 169: ri$b::a(qw) -> boolean
fifo write: @1699477103708901384 0x7f81e1f84114 230: com.mojang.datafixers.optics.Adapter$$Lambda$5700.0x00007f8160ab3208::<init>(com.mojang.datafixers.optics.Adapter, com.mojang.datafixers.optics.profunctors.Profunctor) -> void
fifo write: @1699477103708979535 0x7f81e1f834d9 1000: ri$b::a(rq) -> ri$f
fifo write: @1699477103709061096 0x7f81e1f827f7 1554: com.mojang.datafixers.functions.Fold$$Lambda$5978.0x00007f8160ada208::apply(Object) -> Object
fifo write: @1699477103709173427 0x7f81e24f2ef7 1536: com.mojang.datafixers.optics.Adapter::eval(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103709240108 0x7f81e1f81cb1 817: ri$b::b(rq) -> rq
fifo write: @1699477103709307399 0x7f81e24f3b37 553: com.mojang.datafixers.optics.Inj1$$Lambda$5862.0x00007f8160ac8920::apply(Object) -> Object
fifo write: @1699477103709412450 0x7f81e24f4194 230: com.mojang.datafixers.functions.Fold$$Lambda$5979.0x00007f8160ada698::<init>(com.mojang.datafixers.functions.Fold, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103709494801 0x7f81e991ebd8 127: java.util.function.Function::compose(java.util.function.Function) -> java.util.function.Function
fifo write: @1699477103709596153 0x7f81e24f468e 134: com.mojang.serialization.codecs.PairCodec$$Lambda$6779.0x00007f8160b521d8::<init>(com.mojang.serialization.codecs.PairCodec, com.mojang.datafixers.util.Pair, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103709650323 0x7f81e991f053 334: java.util.HashMap::keySet() -> java.util.Set
fifo write: @1699477103709732564 0x7f81e24f4bd7 1166: com.mojang.datafixers.functions.Fold::lambda$eval$3(com.mojang.serialization.DynamicOps) -> java.util.function.Function
fifo write: @1699477103709821675 0x7f81e24f5677 1822: com.mojang.datafixers.optics.Adapter::eval(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477103709953017 0x7f81e24f6471 1179: com.mojang.serialization.codecs.PairCodec::encode(com.mojang.datafixers.util.Pair, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103710058388 0x7f81e24f710e 83: com.mojang.serialization.codecs.PairCodec::lambda$encode$2(com.mojang.datafixers.util.Pair, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103710142030 0x7f81e24f74ee 89: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5287.0x00007f81609bea18::<init>(com.mojang.serialization.RecordBuilder$AbstractBuilder, Object) -> void
fifo write: @1699477103710321352 0x7f81e24f7bd7 6639: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::toString() -> String
fifo write: @1699477103710393433 0x7f81e24fa78e 91: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5287.0x00007f81609bea18::apply(Object) -> Object
fifo write: @1699477103710465874 0x7f81e24fac0e 203: ri$h::build(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103710543755 0x7f81e24fb091 26: com.mojang.serialization.RecordBuilder$AbstractBuilder::lambda$build$0(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103710613756 0x7f81e991f560 143: com.mojang.datafixers.optics.Proj2::update(Object, Object) -> Object
fifo write: @1699477103710699787 0x7f81e24fb46e 89: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$5304.0x00007f81609c2950::<init>(com.mojang.serialization.RecordBuilder$AbstractStringBuilder, String) -> void
fifo write: @1699477103723265639 0x7f81e24fb90e 134: com.mojang.serialization.codecs.EitherCodec$$Lambda$6792.0x00007f8160b53418::<init>(com.mojang.serialization.codecs.EitherCodec, com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477103723385681 0x7f81e24fbe2e 242: com.mojang.serialization.MapEncoder::compressedBuilder(com.mojang.serialization.DynamicOps) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477103723487072 0x7f81e24fc411 82: com.mojang.serialization.codecs.FieldEncoder::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477103723653784 0x7f81e24fc8e9 928: com.mojang.serialization.codecs.EitherCodec::encode(com.mojang.datafixers.util.Either, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103723766945 0x7f81e24fd2f1 1236: com.mojang.serialization.codecs.PairCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103723850557 0x7f81e991f9d8 117: com.mojang.datafixers.optics.profunctors.TraversalP$1::wander(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103723945098 0x7f81e24fe091 332: ri$h::append(String, Object, Object) -> Object
fifo write: @1699477103724079049 0x7f81e24fe611 364: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$5304.0x00007f81609c2950::apply(Object, Object) -> Object
fifo write: @1699477103724196401 0x7f81e24fed19 1668: com.mojang.serialization.RecordBuilder$AbstractBuilder::build(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103724348353 0x7f81e24ffd79 2236: com.mojang.serialization.MapCodec$MapCodecCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103724458454 0x7f81e2501394 31: com.mojang.serialization.codecs.EitherCodec::lambda$encode$2(com.mojang.serialization.DynamicOps, Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103724553446 0x7f81e250178e 21: com.mojang.serialization.MapCodec$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477103724615666 0x7f81e2501b8e 178: ri$h::a(String, rq, qw) -> qw
fifo write: @1699477103724796369 0x7f81e250228f 8350: java.util.concurrent.ConcurrentHashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477103724897970 0x7f81e2506191 343: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::lambda$add$1(String, Object, Object) -> Object
fifo write: @1699477103724975331 0x7f81e2506794 117: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry::right() -> it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry
fifo write: @1699477103725037402 0x7f81e1732b0e 21: java.util.Collections$UnmodifiableMap::size() -> int
fifo write: @1699477103725130673 0x7f81e2506c39 507: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::add(String, com.mojang.serialization.DataResult) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477103725201994 0x7f81e991fe4c 6: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::getName() -> String
fifo write: @1699477103725264625 0x7f81e992014c 6: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::getKeyType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103725370346 0x7f81e992047a 726: com.mojang.datafixers.optics.Traversal$Instance$2::wander(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103725422037 0x7f81e250738e 21: qw::e(String) -> boolean
fifo write: @1699477103725489358 0x7f81e2507714 185: com.mojang.datafixers.Typed$$Lambda$6265.0x00007f8160b00800::<init>(java.util.function.Function) -> void
fifo write: @1699477103725552869 0x7f81e2507b94 137: com.mojang.datafixers.util.Either$$Lambda$6165.0x00007f8160af8000::apply(Object) -> Object
fifo write: @1699477103725636720 0x7f81e2507fb1 538: com.mojang.serialization.RecordBuilder$AbstractBuilder::<init>(com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103725701630 0x7f81e2508854 850: com.mojang.datafixers.util.Either::orThrow() -> Object
fifo write: @1699477103725810712 0x7f81e9920f61 444: com.mojang.datafixers.kinds.Applicative::ap(java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103725937213 0x7f81e2509014 159: com.mojang.datafixers.types.Type::findTypeCached(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103726007654 0x7f81e25094b7 881: ri$h::<init>(ri) -> void
fifo write: @1699477103726078785 0x7f81e99215d9 62: com.mojang.datafixers.optics.Proj2::view(Object) -> Object
fifo write: @1699477103726135806 0x7f81e2509eee 44: ri$$Lambda$5302.0x00007f81609c1dd8::<init>(java.util.List) -> void
fifo write: @1699477103726248808 0x7f81e250a28e 131: com.mojang.serialization.ListBuilder$Builder::lambda$build$3(Object, com.google.common.collect.ImmutableList$Builder) -> com.mojang.serialization.DataResult
fifo write: @1699477103726345029 0x7f81e250a7ba 647: com.mojang.datafixers.optics.Inj1::build(Object) -> Object
fifo write: @1699477103726400869 0x7f81e9921f4f 98: com.google.common.collect.SingletonImmutableList::iterator() -> java.util.Iterator
fifo write: @1699477103726511261 0x7f81e250af76 1008: ri::a(rq, java.util.List) -> com.mojang.serialization.DataResult
fifo write: @1699477103726585952 0x7f81e9922350 75: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry::getKey() -> Object
fifo write: @1699477103726672073 0x7f81e250bcb7 553: com.mojang.datafixers.optics.Inj1::build(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103726851595 0x7f81e250c4ef 6361: com.mojang.datafixers.Typed::updateCap(com.mojang.datafixers.TypedOptic, java.util.function.Function) -> com.mojang.datafixers.Typed
fifo write: @1699477103726937416 0x7f81e250ec14 185: com.mojang.datafixers.functions.Apply$$Lambda$5696.0x00007f8160aaefd8::<init>(com.mojang.datafixers.functions.Apply) -> void
fifo write: @1699477103727018277 0x7f81e250f094 185: com.mojang.datafixers.functions.ProfunctorTransformer$$Lambda$5703.0x00007f8160ab3910::<init>(java.util.function.Function) -> void
fifo write: @1699477103727129479 0x7f81e250f651 4755: ri::k(rq) -> java.util.Optional
fifo write: @1699477103727288001 0x7f81e99226f0 1788: aew::toString() -> String
fifo write: @1699477103727364492 0x7f81e2511914 185: com.mojang.datafixers.functions.ProfunctorTransformer$$Lambda$5704.0x00007f8160ab3b58::<init>(java.util.function.Function) -> void
fifo write: @1699477103727462493 0x7f81e9923e5f 96: com.mojang.serialization.Encoder::encodeStart(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103727538514 0x7f81e2511dd7 1016: com.mojang.datafixers.functions.Apply::eval() -> java.util.function.Function
fifo write: @1699477103727602585 0x7f81e2512714 279: com.mojang.datafixers.optics.Optic$CompositionOptic::<init>(java.util.List) -> void
fifo write: @1699477103727678246 0x7f81e2512c14 185: com.mojang.datafixers.optics.Optic$CompositionOptic$$Lambda$5702.0x00007f8160ab36c8::<init>(java.util.List) -> void
fifo write: @1699477103727726787 0x7f81e992424c 2: asm::size() -> int
fifo write: @1699477103727815808 0x7f81e992454c 3: aku::a(long) -> void
fifo write: @1699477103727913529 0x7f81e9924b4c 6: com.mojang.datafixers.Typed::getValue() -> Object
fifo write: @1699477103727978230 0x7f81e9924e4c 6: com.mojang.datafixers.Typed::getType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103728052351 0x7f81e2513454 1230: com.mojang.datafixers.types.templates.CompoundList$CompoundListType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103728153392 0x7f81e2513f97 3323: com.mojang.datafixers.functions.ProfunctorTransformer::eval() -> java.util.function.Function
fifo write: @1699477103728298264 0x7f81e251573f 4751: java.util.concurrent.ForkJoinPool$WorkQueue::tryPoll() -> java.util.concurrent.ForkJoinTask
fifo write: @1699477103728387985 0x7f81e2517914 167: com.mojang.datafixers.optics.Prism::eval(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477103728485186 0x7f81e2517d74 329: com.mojang.datafixers.optics.profunctors.Cocartesian::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.optics.profunctors.Cocartesian
fifo write: @1699477103728598548 0x7f81e2518214 230: com.mojang.datafixers.optics.Prism$$Lambda$5800.0x00007f8160abfb30::<init>(com.mojang.datafixers.optics.Prism, com.mojang.datafixers.optics.profunctors.Cocartesian) -> void
fifo write: @1699477103728747260 0x7f81e2518777 1536: com.mojang.datafixers.optics.Prism::eval(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103728846081 0x7f81e25193f7 1824: com.mojang.datafixers.optics.InjTagged::match(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Either
fifo write: @1699477103728917772 0x7f81e251a2ce 758: java.lang.invoke.MethodType::equals(Object) -> boolean
fifo write: @1699477103729010373 0x7f81e251ad97 2173: com.mojang.datafixers.optics.InjTagged::match(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103729152795 0x7f81e251bf4b 5651: java.util.concurrent.ConcurrentHashMap::replaceNode(Object, Object, Object) -> Object
fifo write: @1699477103729247336 0x7f81e251ebde 1225: com.mojang.datafixers.functions.Comp::lambda$eval$2(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477103729331627 0x7f81e251f79f 1494: java.util.concurrent.ForkJoinPool::signalWork() -> void
fifo write: @1699477103729426218 0x7f81e25204f4 329: com.mojang.datafixers.optics.profunctors.TraversalP::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.optics.profunctors.TraversalP
fifo write: @1699477103729506679 0x7f81e2520994 167: com.mojang.datafixers.optics.Traversal::eval(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477103729601171 0x7f81e2520e14 230: com.mojang.datafixers.optics.Traversal$$Lambda$5801.0x00007f8160ac0000::<init>(com.mojang.datafixers.optics.Traversal, com.mojang.datafixers.optics.profunctors.TraversalP) -> void
fifo write: @1699477103729679422 0x7f81e2521317 106: com.mojang.datafixers.functions.Comp$$Lambda$5693.0x00007f8160aae900::apply(Object) -> Object
fifo write: @1699477103729794733 0x7f81e25217f7 1699: com.mojang.datafixers.optics.Traversal::eval(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103729883274 0x7f81e2522514 240: com.mojang.datafixers.optics.Prism$$Lambda$5945.0x00007f8160ad4a30::apply(Object) -> Object
fifo write: @1699477103729979415 0x7f81e25229b7 834: com.mojang.datafixers.util.Either$$Lambda$3730.0x00007f81607b5470::apply(Object) -> Object
fifo write: @1699477103730043966 0x7f81e2523214 737: com.mojang.datafixers.util.Either::lambda$mapRight$1(java.util.function.Function, Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103730099687 0x7f81e9210354 997: java.util.Collections$UnmodifiableMap::entrySet() -> java.util.Set
fifo write: @1699477103730184918 0x7f81e2523aa1 2155: java.lang.invoke.MethodType$ConcurrentWeakInternSet::get(Object) -> Object
fifo write: @1699477103730339310 0x7f81e2524cfa 4416: com.mojang.datafixers.types.templates.Named$NamedType::wrapOptic(String, com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103730441551 0x7f81e9547d8a 1055: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet::iterator() -> java.util.Iterator
fifo write: @1699477103730509552 0x7f81e8ff7657 35: com.mojang.datafixers.FunctionType$$Lambda$5705.0x00007f8160ab3da0::apply(Object) -> Object
fifo write: @1699477103730638724 0x7f81e928a3d5 1311: com.mojang.datafixers.functions.ProfunctorTransformer::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103730710345 0x7f81e968cad4 792: com.mojang.datafixers.functions.PointFree::evalCached() -> java.util.function.Function
fifo write: @1699477103730778356 0x7f81e8ff51d0 199: java.util.function.Function$$Lambda$5737.0x00007f8160959b60::apply(Object) -> Object
fifo write: @1699477103730852846 0x7f81e9156554 127: com.mojang.datafixers.util.Pair$Instance$$Lambda$6309.0x00007f8160b0e600::apply(Object) -> Object
fifo write: @1699477103730933277 0x7f81e91a6b94 35: java.util.concurrent.CompletableFuture::screenExecutor(java.util.concurrent.Executor) -> java.util.concurrent.Executor
fifo write: @1699477103731010148 0x7f81e14acdb7 1119: com.mojang.datafixers.optics.Inj1::lambda$match$0(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103731086879 0x7f81e1484f5a 1213: com.mojang.datafixers.optics.Inj1$$Lambda$5878.0x00007f8160acad28::apply(Object) -> Object
fifo write: @1699477103731220091 0x7f81e1423699 2183: com.mojang.datafixers.types.templates.Check$CheckType::fix(com.mojang.datafixers.types.templates.Check$CheckType, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103731293302 0x7f81e95144fc 11: com.mojang.datafixers.optics.profunctors.TraversalP$$Lambda$6245.0x00007f8160b07470::apply(Object) -> Object
fifo write: @1699477103731380883 0x7f81e160107e 1066: java.util.concurrent.ForkJoinPool$WorkQueue::topLevelExec(java.util.concurrent.ForkJoinTask, java.util.concurrent.ForkJoinPool$WorkQueue) -> void
fifo write: @1699477103731445014 0x7f81e161b1f4 223: java.util.concurrent.locks.LockSupport::setCurrentBlocker(Object) -> void
fifo write: @1699477103731586266 0x7f81e9509724 1004: com.mojang.datafixers.util.Pair$Instance::traverse(com.mojang.datafixers.kinds.Applicative, java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103731734548 0x7f81e9177e8f 1254: com.mojang.datafixers.optics.profunctors.TraversalP$1$$Lambda$6301.0x00007f8160b0d560::apply(Object) -> Object
fifo write: @1699477103731810409 0x7f81e91c5159 46: com.mojang.datafixers.optics.profunctors.TraversalP$$Lambda$6229.0x00007f8160b06b70::apply(Object) -> Object
fifo write: @1699477103731864359 0x7f81e9078b5b 524: com.mojang.datafixers.types.templates.Tag$TagType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477103731938270 0x7f81e1771117 106: com.mojang.datafixers.types.templates.Named$$Lambda$5994.0x00007f8160add4d0::apply(int) -> Object
fifo write: @1699477103732033981 0x7f81e1588594 275: com.mojang.datafixers.types.templates.Named$$Lambda$5994.0x00007f8160add4d0::<init>(com.mojang.datafixers.types.templates.Named, com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> void
fifo write: @1699477103732117203 0x7f81e1954a17 154: ata::a(com.mojang.datafixers.DataFixer, com.mojang.serialization.Dynamic, int, int) -> com.mojang.serialization.Dynamic
fifo write: @1699477103732216384 0x7f81e1c3f357 1302: com.mojang.datafixers.types.templates.Named::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477103732260054 0x7f81e9343b1f 24: com.google.common.collect.ImmutableSet$Builder::<init>(int) -> void
fifo write: @1699477103732322875 0x7f81e1e11d54 1112: rj::b(qw, int) -> int
fifo write: @1699477103732458897 0x7f81e151445f 2591: com.mojang.datafixers.types.templates.Named::lambda$hmap$2(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103732592569 0x7f81e1be4d17 1867: com.mojang.datafixers.types.templates.Named::cap(com.mojang.datafixers.types.families.TypeFamily, int, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477103732705820 0x7f81e199df94 185: com.mojang.datafixers.functions.Comp$$Lambda$5690.0x00007f8160aae248::<init>(com.mojang.datafixers.functions.Comp) -> void
fifo write: @1699477103732764991 0x7f81e1e9a0e0 1277: ata::a(com.mojang.datafixers.DataFixer, qw, int, int) -> qw
fifo write: @1699477103732835302 0x7f81e157a057 1051: com.mojang.datafixers.functions.Comp::eval() -> java.util.function.Function
fifo write: @1699477103732890962 0x7f81e1481b14 545: ata::a() -> int
fifo write: @1699477103732941663 0x7f81e94db9d3 148: arg::b() -> void
fifo write: @1699477103733031744 0x7f81e15d9dd7 2868: hm::c(Object) -> java.util.Optional
fifo write: @1699477103733195616 0x7f81e173d6e7 7580: com.mojang.datafixers.DataFixerUpper::update(com.mojang.datafixers.DSL$TypeReference, com.mojang.serialization.Dynamic, int, int) -> com.mojang.serialization.Dynamic
fifo write: @1699477103733249967 0x7f81e19f9b94 185: dih$$Lambda$5486.0x00007f8160a84f50::<init>(qw) -> void
fifo write: @1699477103733400869 0x7f81e929a274 1296: com.mojang.datafixers.TypedOptic::proj2(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103733517991 0x7f81e1fc9f5f 2656: aka::a(java.util.Optional) -> java.util.Optional
fifo write: @1699477103733716383 0x7f81e96b6bc3 3366: com.google.common.collect.ImmutableList$Builder::addAll(Iterable) -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477103733811334 0x7f81e19aee77 3226: dhg::b() -> java.util.Optional
fifo write: @1699477103733848255 0x7f81e1a92c94 175: java.util.concurrent.CompletableFuture$Completion::exec() -> boolean
fifo write: @1699477103733903966 0x7f81e14c2a39 709: ata::a(com.mojang.datafixers.DataFixer, qw, int) -> qw
fifo write: @1699477103733951096 0x7f81e15d0594 345: aka$$Lambda$5485.0x00007f8160a84d08::apply(Object) -> Object
fifo write: @1699477103734007577 0x7f81e1ac6c94 185: aka$$Lambda$5485.0x00007f8160a84d08::<init>(aka) -> void
fifo write: @1699477103734133938 0x7f81e1c2f077 3039: aka$$Lambda$5466.0x00007f8160a7d6f8::apply(Object) -> Object
fifo write: @1699477103734184049 0x7f81e1434e14 353: dih::a(qw) -> int
fifo write: @1699477103734238180 0x7f81e1a01297 2480: aka::c(qw) -> qw
fifo write: @1699477103734294741 0x7f81e90984dd 624: ri::getStringValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103734342891 0x7f81e16338b4 803: com.mojang.datafixers.types.Type$$Lambda$6000.0x00007f8160adecb8::apply(Object) -> Object
fifo write: @1699477103734503173 0x7f81e15e977f 8278: dih::a(qw, aev) -> void
fifo write: @1699477103734640715 0x7f81e17d2aff 3376: dih::a(aev, java.util.function.Supplier, qw, java.util.Optional) -> qw
fifo write: @1699477103734709966 0x7f81e1555640 840: com.mojang.datafixers.FieldFinder::findType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103734766677 0x7f81e161f114 275: com.mojang.datafixers.FieldFinder$Matcher::<init>(String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477103734988110 0x7f81e14df3b6 11156: dih::a(qw, aev, java.util.Optional) -> void
fifo write: @1699477103735060740 0x7f81e161c1d9 1074: java.util.Optional::filter(java.util.function.Predicate) -> java.util.Optional
fifo write: @1699477103735114741 0x7f81e142d694 31: com.mojang.datafixers.types.templates.Named$NamedType::lambda$findTypeInChildren$2(com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103735163702 0x7f81e147f414 437: com.mojang.datafixers.types.templates.Named$NamedType$$Lambda$6161.0x00007f8160af61e8::apply(Object) -> Object
fifo write: @1699477103735213422 0x7f81e1ac8094 185: com.mojang.datafixers.types.templates.Named$NamedType$$Lambda$6161.0x00007f8160af61e8::<init>(com.mojang.datafixers.types.templates.Named$NamedType) -> void
fifo write: @1699477103735275683 0x7f81e15e8f14 445: com.mojang.datafixers.optics.ListTraversal$$Lambda$5928.0x00007f8160ad35f0::apply(Object) -> Object
fifo write: @1699477103735345474 0x7f81e1620994 380: com.mojang.datafixers.optics.ListTraversal$$Lambda$5911.0x00007f8160acf5a8::apply(Object) -> Object
fifo write: @1699477103735423245 0x7f81e17f8714 515: com.mojang.datafixers.DataFix$NamedFunctionWrapper::apply(com.mojang.serialization.DynamicOps) -> java.util.function.Function
fifo write: @1699477103735468216 0x7f81e1bcce94 240: qw::r(String) -> void
fifo write: @1699477103735532487 0x7f81e1c39db4 885: com.mojang.datafixers.DataFix$NamedFunctionWrapper::apply(Object) -> Object
fifo write: @1699477103735587867 0x7f81e1bfec94 185: aka$$Lambda$5491.0x00007f8160a86d08::<init>(cpc) -> void
fifo write: @1699477103735725239 0x7f81e1e97c87 3564: com.mojang.datafixers.optics.ListTraversal::lambda$wander$0(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType, java.util.List) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103735785910 0x7f81e15708b4 693: aka$$Lambda$5491.0x00007f8160a86d08::test(Object) -> boolean
fifo write: @1699477103735834780 0x7f81e1893cf4 67: ako$b::au() -> Thread
fifo write: @1699477103735946002 0x7f81e1f18317 3436: com.mojang.datafixers.types.templates.Named$NamedType::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103736001993 0x7f81e1647597 357: aka::b(cpc, qw) -> boolean
fifo write: @1699477103736063563 0x7f81e16bcef9 1512: bfo::execute(Runnable) -> void
fifo write: @1699477103736115284 0x7f81e14aa834 612: bfo::i(Runnable) -> void
fifo write: @1699477103736190855 0x7f81e1438e14 230: com.mojang.datafixers.optics.ListTraversal$$Lambda$5911.0x00007f8160acf5a8::<init>(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> void
fifo write: @1699477103736238786 0x7f81e1447874 104: aka::b(qw) -> boolean
fifo write: @1699477103736326627 0x7f81e1f11057 1265: com.mojang.datafixers.optics.ListTraversal::wander(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103736408198 0x7f81e15e251f 2305: aka::b(cpc, java.util.Optional) -> java.util.Optional
fifo write: @1699477103736470029 0x7f81e1496e14 240: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet::spliterator() -> java.util.Spliterator
fifo write: @1699477103736603220 0x7f81e14ac394 296: com.mojang.datafixers.Typed::update(com.mojang.datafixers.OpticFinder, java.util.function.Function) -> com.mojang.datafixers.Typed
fifo write: @1699477103736753122 0x7f81e1f68f77 8066: dih$$Lambda$5486.0x00007f8160a84f50::accept(Object) -> void
fifo write: @1699477103736886144 0x7f81e1b16acd 4649: com.mojang.serialization.OptionalDynamic::get(String) -> com.mojang.serialization.OptionalDynamic
fifo write: @1699477103736958695 0x7f81e14b5194 185: com.mojang.datafixers.FunctionType$Instance$$Lambda$5892.0x00007f8160acd468::<init>(com.mojang.datafixers.kinds.App2) -> void
fifo write: @1699477103737033106 0x7f81e160fef7 1612: aka$$Lambda$5467.0x00007f8160a7d940::apply(Object) -> Object
fifo write: @1699477103737151037 0x7f81e1815c14 320: com.mojang.datafixers.DataFix$$Lambda$5962.0x00007f8160ad7518::<init>(java.util.function.Function, com.mojang.datafixers.types.Type, com.mojang.serialization.DynamicOps, com.mojang.datafixers.types.Type) -> void
fifo write: @1699477103737224558 0x7f81e14cb397 68: com.mojang.datafixers.DataFix$$Lambda$5962.0x00007f8160ad7518::apply(Object) -> Object
fifo write: @1699477103737347330 0x7f81e16060fa 1592: com.mojang.datafixers.Typed::update(com.mojang.datafixers.OpticFinder, com.mojang.datafixers.types.Type, java.util.function.Function) -> com.mojang.datafixers.Typed
fifo write: @1699477103737429951 0x7f81e19cf5f7 1468: com.mojang.datafixers.DataFix$$Lambda$5494.0x00007f8160a886a8::apply(Object) -> Object
fifo write: @1699477103737519262 0x7f81e1e672b7 2385: com.mojang.datafixers.FunctionType$Instance$$Lambda$5857.0x00007f8160ac7b48::apply(Object) -> Object
fifo write: @1699477103737584003 0x7f81e14deb14 185: com.mojang.serialization.OptionalDynamic$$Lambda$3717.0x00007f81607ae340::<init>(String) -> void
fifo write: @1699477103737641304 0x7f81e1ad2c94 470: com.mojang.serialization.OptionalDynamic$$Lambda$3717.0x00007f81607ae340::apply(Object) -> Object
fifo write: @1699477103737705615 0x7f81e147ebf7 102: com.mojang.serialization.OptionalDynamic::lambda$get$0(String, com.mojang.serialization.Dynamic) -> com.mojang.serialization.DataResult
fifo write: @1699477103737802926 0x7f81e1b74ad7 1390: com.mojang.datafixers.DataFix::lambda$checked$4(java.util.function.Function, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.serialization.DynamicOps) -> java.util.function.Function
fifo write: @1699477103737984318 0x7f81e214ba28 4270: com.mojang.datafixers.DataFix::lambda$checked$3(java.util.function.Function, com.mojang.datafixers.types.Type, com.mojang.serialization.DynamicOps, com.mojang.datafixers.types.Type, Object) -> Object
fifo write: @1699477103738100760 0x7f81e1479bf7 2280: com.mojang.datafixers.FunctionType$Instance::lambda$wander$4(com.mojang.datafixers.optics.Wander, com.mojang.datafixers.kinds.App2, Object) -> Object
fifo write: @1699477103738173671 0x7f81e14d1854 1247: com.mojang.datafixers.util.Either::swap() -> com.mojang.datafixers.util.Either
fifo write: @1699477103738280952 0x7f81e1787814 234: it.unimi.dsi.fastutil.ints.AbstractIntCollection::<init>() -> void
fifo write: @1699477103738464024 0x7f81e1e7664f 5186: com.mojang.serialization.codecs.KeyDispatchCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477103738529115 0x7f81e207bab7 1650: java.util.ImmutableCollections$List12::toArray() -> Object[]
fifo write: @1699477103738618226 0x7f81e1932f57 1265: com.mojang.datafixers.optics.Inj2::match(com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477103738700707 0x7f81e197fc74 302: com.mojang.datafixers.util.Either::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.util.Either
fifo write: @1699477103738778808 0x7f81e1eac974 1606: com.mojang.datafixers.optics.Inj2::match(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103738860620 0x7f81e16183ad 906: com.mojang.serialization.DynamicLike::createString(String) -> com.mojang.serialization.Dynamic
fifo write: @1699477103739047392 0x7f81e20182f7 7745: com.mojang.datafixers.types.templates.CompoundList$CompoundListType::toString() -> String
fifo write: @1699477103739449127 0x7f81e917aeaa 6129: ri$h::a(qw, rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103739510778 0x7f81e199c154 885: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::find(long) -> int
fifo write: @1699477103739579959 0x7f81e1e6d986 1153: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2ObjectFunction) -> Object
fifo write: @1699477103739703220 0x7f81e9220aca 3089: StringBuilder::append(CharSequence, int, int) -> Appendable
fifo write: @1699477103739826982 0x7f81e953e9b0 2871: java.util.Formatter$FixedString::print(Object, java.util.Locale) -> void
fifo write: @1699477103740191767 0x7f81e929664a 3045: AbstractStringBuilder::append(CharSequence, int, int) -> AbstractStringBuilder
fifo write: @1699477103740702433 0x7f81e923d1cf 76: java.util.HashMap$HashMapSpliterator::getFence() -> int
fifo write: @1699477103741232330 0x7f81e9220555 86: java.util.HashMap$HashMapSpliterator::estimateSize() -> long
fifo write: @1699477103741890389 0x7f81e1ab3694 197: akj::a(akj) -> boolean
fifo write: @1699477103742150942 0x7f81e1ddf4fe 1349: java.util.HashMap$Values::forEach(java.util.function.Consumer) -> void
fifo write: @1699477103742418425 0x7f81e93fbf92 777: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::review() -> com.google.common.collect.ImmutableSet$SetBuilderImpl
fifo write: @1699477103742542687 0x7f81e1fa1f07 4846: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477103742692759 0x7f81e9123f2c 1: java.util.concurrent.CompletableFuture::newIncompleteFuture() -> java.util.concurrent.CompletableFuture
fifo write: @1699477103742860451 0x7f81e2190c74 1842: ri$$Lambda$4109.0x00007f8160897680::accept(Object) -> void
fifo write: @1699477103743274737 0x7f81e1dad514 185: ri$$Lambda$4109.0x00007f8160897680::<init>(qw) -> void
fifo write: @1699477103743793063 0x7f81e1db248b 2247: ri::a(java.util.stream.Stream) -> rq
fifo write: @1699477103743896025 0x7f81e1557b37 2452: ri::createMap(java.util.stream.Stream) -> Object
fifo write: @1699477103743988656 0x7f81e959c79d 1438: AbstractStringBuilder::appendChars(String, int, int) -> void
fifo write: @1699477103744225779 0x7f81e97437f5 1433: com.google.common.collect.ImmutableSet$RegularSetBuilderImpl::build() -> com.google.common.collect.ImmutableSet
fifo write: @1699477103744406251 0x7f81e1e6ea14 369: com.mojang.datafixers.types.templates.Hook$HookType::<init>(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.templates.Hook$HookFunction, com.mojang.datafixers.types.templates.Hook$HookFunction) -> void
fifo write: @1699477103744559233 0x7f81e189fcd1 476: com.mojang.datafixers.DSL::hook(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.templates.Hook$HookFunction, com.mojang.datafixers.types.templates.Hook$HookFunction) -> com.mojang.datafixers.types.Type
fifo write: @1699477103744634424 0x7f81e91bae75 453: java.util.stream.AbstractPipeline::spliterator() -> java.util.Spliterator
fifo write: @1699477103744898287 0x7f81e1f52f54 1225: com.mojang.serialization.DynamicOps::createMap(java.util.Map) -> Object
fifo write: @1699477103745780459 0x7f81e96a29ee 322: java.util.stream.ReferencePipeline$2::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477103745962401 0x7f81e152ecb7 706: ri::a(int) -> rq
fifo write: @1699477103746034592 0x7f81e1defe94 117: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry::left() -> it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry
fifo write: @1699477103746200104 0x7f81e2162cbf 9501: ri$h::a(qw, rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103746332916 0x7f81e94bda25 929: com.mojang.serialization.Codec$20::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103747599612 0x7f81e95a17d5 8396: com.mojang.serialization.codecs.PairCodec$$Lambda$6779.0x00007f8160b521d8::apply(Object) -> Object
fifo write: @1699477103747676133 0x7f81e1dbb03a 820: ri::createInt(int) -> Object
fifo write: @1699477103747740394 0x7f81e987c028 249: ri$d::a() -> rq
fifo write: @1699477103747975107 0x7f81e982f30b 62: java.util.AbstractList::iterator() -> java.util.Iterator
fifo write: @1699477103748258151 0x7f81e14ee014 350: com.mojang.serialization.OptionalDynamic::result() -> java.util.Optional
fifo write: @1699477103748742147 0x7f81e1e08d14 230: ri$$Lambda$6395.0x00007f8160b1a208::<init>(qw, qw) -> void
fifo write: @1699477103749371525 0x7f81e165872d 906: com.mojang.serialization.DynamicLike::createInt(int) -> com.mojang.serialization.Dynamic
fifo write: @1699477103749562278 0x7f81e972fb75 897: com.mojang.serialization.Codec$20::encode(com.mojang.serialization.Dynamic, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103749850181 0x7f81e160fa17 106: com.mojang.serialization.Dynamic$$Lambda$6425.0x00007f8160b1e3c8::apply(Object) -> Object
fifo write: @1699477103749948643 0x7f81e187cd77 1305: com.mojang.serialization.Dynamic::update(String, java.util.function.Function) -> com.mojang.serialization.Dynamic
fifo write: @1699477103750203216 0x7f81e1923294 230: com.mojang.serialization.Dynamic$$Lambda$6435.0x00007f8160b1fce0::<init>(com.mojang.serialization.Dynamic, java.util.function.Function) -> void
fifo write: @1699477103750271387 0x7f81e95a1251 74: java.util.stream.Streams$StreamBuilderImpl::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477103750353868 0x7f81e18148d4 947: com.mojang.serialization.DynamicOps::set(Object, String, Object) -> Object
fifo write: @1699477103750439349 0x7f81e18a4214 275: com.mojang.serialization.Dynamic$$Lambda$6425.0x00007f8160b1e3c8::<init>(com.mojang.serialization.Dynamic, String, java.util.function.Function) -> void
fifo write: @1699477103750502540 0x7f81e1e09b14 230: com.mojang.serialization.DynamicOps$$Lambda$6463.0x00007f8160b23d40::<init>(Object, Object) -> void
fifo write: @1699477103750630501 0x7f81e15db734 926: ri::mergeToMap(Object, Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103750713793 0x7f81e1ff36d7 1259: com.mojang.serialization.DynamicOps$$Lambda$5183.0x00007f816099eef8::apply(Object) -> Object
fifo write: @1699477103750788144 0x7f81e1922414 375: com.mojang.serialization.DynamicOps::get(Object, String) -> com.mojang.serialization.DataResult
fifo write: @1699477103750845484 0x7f81e151ffd4 1224: ri$1::get(Object) -> Object
fifo write: @1699477103750970776 0x7f81e951d570 539: ri$f$$Lambda$3726.0x00007f81607b4b58::iterator() -> java.util.Iterator
fifo write: @1699477103751167718 0x7f81e1ea56f7 1633: com.mojang.serialization.Dynamic::lambda$update$15(String, java.util.function.Function, Object) -> Object
fifo write: @1699477103751274670 0x7f81e985819d 1372: ri::g(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103752895331 0x7f81e99254a2 21633: java.lang.invoke.MethodHandleNatives::linkCallSite(Object, int, Object, Object, Object, Object, Object[]) -> java.lang.invoke.MemberName
fifo write: @1699477103753036743 0x7f81e98d139d 1380: ri::getList(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103753098753 0x7f81e9865c50 384: qw::e() -> java.util.Set
fifo write: @1699477103753164424 0x7f81e18c69b4 838: ri$1::a(rq) -> rq
fifo write: @1699477103753218865 0x7f81e96b6857 43: java.util.stream.ReferencePipeline$2$1::begin(long) -> void
fifo write: @1699477103753291976 0x7f81e1abc594 230: com.mojang.serialization.DynamicOps$$Lambda$6479.0x00007f8160b26a68::<init>(Object, Object) -> void
fifo write: @1699477103753376697 0x7f81e988a8d0 71: com.mojang.datafixers.functions.ProfunctorTransformer$$Lambda$5704.0x00007f8160ab3b58::apply(Object) -> Object
fifo write: @1699477103753491578 0x7f81e1893714 320: com.mojang.serialization.DynamicOps$$Lambda$6487.0x00007f8160b28d90::<init>(com.mojang.serialization.DynamicOps, Object, String, java.util.function.Function) -> void
fifo write: @1699477103753626130 0x7f81e1400667 4478: com.mojang.serialization.DynamicOps::update(Object, String, java.util.function.Function) -> Object
fifo write: @1699477103753740492 0x7f81e1de57e7 4680: com.mojang.serialization.DynamicOps::getGeneric(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103753883113 0x7f81e193d337 6191: com.mojang.serialization.DynamicOps$$Lambda$6463.0x00007f8160b23d40::apply(Object) -> Object
fifo write: @1699477103754034075 0x7f81e1983287 5789: com.mojang.serialization.DynamicOps::lambda$getGeneric$26(Object, Object, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477103754117416 0x7f81e18e40da 1213: com.mojang.datafixers.optics.Inj2$$Lambda$6407.0x00007f8160b1cab8::apply(Object) -> Object
fifo write: @1699477103754388970 0x7f81e1b049b7 1119: com.mojang.datafixers.optics.Inj2::lambda$match$0(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103789446282 0x7f81e94476d0 287: com.mojang.datafixers.functions.ProfunctorTransformer$$Lambda$5703.0x00007f8160ab3910::apply(Object) -> Object
fifo write: @1699477103789600254 0x7f81e18e9fa7 7119: ri::a(rq, rq, rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103789645884 0x7f81e1450297 52: asm::c(Object) -> int
fifo write: @1699477103789747936 0x7f81e18b10f4 168: java.util.Arrays::binarySearch(Object[], int, int, Object, java.util.Comparator) -> int
fifo write: @1699477103789831107 0x7f81e1c47114 233: aku::<init>(akv, int, Object) -> void
fifo write: @1699477103789954248 0x7f81e1469c3d 777: asm::a(Object, int) -> void
fifo write: @1699477103790006569 0x7f81e18c5ac7 206: asm::a(int) -> asm
fifo write: @1699477103790117010 0x7f81e98c44db 872: java.util.stream.AbstractPipeline::<init>(java.util.stream.AbstractPipeline, int) -> void
fifo write: @1699477103790172301 0x7f81e14d0754 1128: asm::c(int) -> void
fifo write: @1699477103790236992 0x7f81e16498da 1122: asm::<init>(int, java.util.Comparator) -> void
fifo write: @1699477103790307993 0x7f81e18da1b4 657: aki::g(long) -> asm
fifo write: @1699477103790385044 0x7f81e1ad1a94 1028: aki::a(asm) -> int
fifo write: @1699477103790444975 0x7f81e1b56a67 109: java.util.ImmutableCollections$MapN$1::iterator() -> java.util.Iterator
fifo write: @1699477103790510406 0x7f81e1452283 535: java.util.ImmutableCollections$MapN::entrySet() -> java.util.Set
fifo write: @1699477103790619567 0x7f81e969300b 1642: com.mojang.serialization.DynamicOps::listBuilder() -> com.mojang.serialization.ListBuilder
fifo write: @1699477103790701398 0x7f81e16cb2f7 3066: aki::a(long, aku) -> void
fifo write: @1699477103790751919 0x7f81e1aa6f39 486: asm::a(Object) -> Object
fifo write: @1699477103791936614 0x7f81e1cdf1bc 931: dzy::a(long, long, int, boolean) -> void
fifo write: @1699477103792144917 0x7f81e1b65c9d 182: akd::b(long, int, boolean) -> void
fifo write: @1699477103792795305 0x7f81e1d501d4 1194: com.mojang.datafixers.optics.profunctors.Cocartesian::right(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103793383733 0x7f81e1de0694 185: com.mojang.datafixers.util.Either$Instance$$Lambda$6712.0x00007f8160b479c8::<init>(com.mojang.datafixers.kinds.Applicative) -> void
fifo write: @1699477103793438603 0x7f81e1487214 137: com.mojang.datafixers.util.Either$Instance::<init>() -> void
fifo write: @1699477103793576015 0x7f81e1fd2b94 388: com.mojang.datafixers.optics.profunctors.TraversalP$$Lambda$6621.0x00007f8160b3c0f0::apply(Object) -> Object
fifo write: @1699477103793692297 0x7f81e18cef14 320: com.mojang.datafixers.Typed$$Lambda$6602.0x00007f8160b38248::<init>(com.mojang.datafixers.Typed, java.util.function.Function, com.mojang.datafixers.OpticFinder, com.mojang.datafixers.TypedOptic) -> void
fifo write: @1699477103794816991 0x7f81e9617157 7962: com.mojang.serialization.codecs.EitherCodec$$Lambda$6781.0x00007f8160b52420::apply(Object) -> Object
fifo write: @1699477103794890042 0x7f81e150b2b7 553: com.mojang.datafixers.util.Either$$Lambda$6689.0x00007f8160b44c80::apply(Object) -> Object
fifo write: @1699477103794959373 0x7f81e1575094 668: com.mojang.datafixers.optics.profunctors.TraversalP$$Lambda$6649.0x00007f8160b3f030::apply(Object) -> Object
fifo write: @1699477103795089775 0x7f81e92ef977 873: java.util.stream.ReferencePipeline::filter(java.util.function.Predicate) -> java.util.stream.Stream
fifo write: @1699477103795229786 0x7f81e1ad337f 3648: com.mojang.datafixers.util.Either$Instance::traverse(com.mojang.datafixers.kinds.Applicative, java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103797167731 0x7f81e93dd103 8199: com.mojang.serialization.codecs.EitherCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103797238542 0x7f81e14d2c14 144: aka$$Lambda$5536.0x00007f8160a94c28::apply(int) -> Object
fifo write: @1699477103797311933 0x7f81e1660a37 553: com.mojang.datafixers.util.Either$$Lambda$6682.0x00007f8160b44380::apply(Object) -> Object
fifo write: @1699477103797402314 0x7f81e15609f7 1478: com.mojang.datafixers.optics.profunctors.TraversalP::left(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103797510816 0x7f81e92d327a 2358: java.util.ArrayList::add(int, Object) -> void
fifo write: @1699477103797658808 0x7f81e1ccec54 1590: com.mojang.datafixers.optics.profunctors.Cocartesian$$Lambda$6672.0x00007f8160b41680::apply(Object) -> Object
fifo write: @1699477103797788459 0x7f81e199fc5f 2897: com.mojang.datafixers.Typed::updateTyped(com.mojang.datafixers.OpticFinder, com.mojang.datafixers.types.Type, java.util.function.Function) -> com.mojang.datafixers.Typed
fifo write: @1699477103797848710 0x7f81e953e58f 54: java.util.HashMap$KeySet::spliterator() -> java.util.Spliterator
fifo write: @1699477103797927591 0x7f81e1dce5d4 1590: com.mojang.datafixers.optics.profunctors.Cocartesian$$Lambda$6653.0x00007f8160b3fdb0::apply(Object) -> Object
fifo write: @1699477103798077813 0x7f81e93abb30 2800: com.mojang.datafixers.functions.Apply$$Lambda$5696.0x00007f8160aaefd8::apply(Object) -> Object
fifo write: @1699477103798161124 0x7f81e93dca05 144: com.mojang.datafixers.FunctionType$Instance::right(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103798254145 0x7f81e1ff804a 227: com.mojang.datafixers.TypedOptic::adapter(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103798354167 0x7f81e93dc583 46: com.mojang.datafixers.types.templates.Const::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477103800920480 0x7f81e17cbb37 553: com.mojang.datafixers.optics.Inj2$$Lambda$6433.0x00007f8160b20b68::apply(Object) -> Object
fifo write: @1699477103802220247 0x7f81e94fd770 1829: com.mojang.datafixers.types.templates.Const$$Lambda$5996.0x00007f8160addf50::apply(int) -> Object
fifo write: @1699477103802444510 0x7f81e9633cf6 1973: java.util.zip.InflaterInputStream::fill() -> void
fifo write: @1699477103802936436 0x7f81e93f6650 117: com.mojang.datafixers.functions.Fold::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477103804470766 0x7f81e946e670 2495: com.mojang.datafixers.optics.Lens$$Lambda$5701.0x00007f8160ab3468::apply(Object) -> Object
fifo write: @1699477103804601497 0x7f81e1e54034 761: hm$$Lambda$5282.0x00007f81609bdee8::apply(Object) -> Object
fifo write: @1699477103804873441 0x7f81e946dfd0 119: java.util.Spliterators$1Adapter::hasNext() -> boolean
fifo write: @1699477103805393438 0x7f81e18958f4 23: java.util.concurrent.ConcurrentHashMap::resizeStamp(int) -> int
fifo write: @1699477103807397694 0x7f81e22ee894 185: com.mojang.datafixers.functions.Fold$$Lambda$5978.0x00007f8160ada208::<init>(com.mojang.datafixers.functions.Fold) -> void
fifo write: @1699477103807597046 0x7f81e1f68357 1051: com.mojang.datafixers.functions.Fold::eval() -> java.util.function.Function
fifo write: @1699477103808393866 0x7f81e189b13a 647: com.mojang.datafixers.optics.Inj2::build(Object) -> Object
fifo write: @1699477103808473467 0x7f81e17e8537 553: com.mojang.datafixers.optics.Inj2::build(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103808569729 0x7f81e2377994 328: it.unimi.dsi.fastutil.ints.AbstractIntSet::<init>() -> void
fifo write: @1699477103808624989 0x7f81e1c65894 422: it.unimi.dsi.fastutil.ints.AbstractIntSortedSet::<init>() -> void
fifo write: @1699477103809500151 0x7f81e23de297 106: com.mojang.datafixers.functions.Fold$$Lambda$5979.0x00007f8160ada698::apply(Object) -> Object
fifo write: @1699477103809553581 0x7f81e1c9fc94 315: com.mojang.datafixers.types.families.ListAlgebra::hashCode() -> int
fifo write: @1699477103809655153 0x7f81e1daafd4 864: com.mojang.datafixers.functions.Fold::cap(com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477103809768674 0x7f81e9851370 2306: com.mojang.datafixers.optics.Prism$$Lambda$5800.0x00007f8160abfb30::apply(Object) -> Object
fifo write: @1699477103809938376 0x7f81e90a36e1 3917: ri::a(rq, String) -> rq
fifo write: @1699477103810538694 0x7f81e15acd8c 4641: com.mojang.datafixers.functions.Fold::lambda$eval$2(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477103810631955 0x7f81e93f5fd0 195: com.mojang.serialization.Dynamic$$Lambda$6332.0x00007f8160b11240::apply(Object) -> Object
fifo write: @1699477103811442046 0x7f81e9599fdd 1607: ri::createList(java.util.stream.Stream) -> Object
fifo write: @1699477103812931995 0x7f81e94988e4 3926: ri::remove(Object, String) -> Object
fifo write: @1699477103813464962 0x7f81e1556314 590: com.mojang.datafixers.TypedOptic$Element::castOuterUnchecked(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic$Element
fifo write: @1699477103813852787 0x7f81e22ec742 2631: com.mojang.datafixers.TypedOptic::castOuterUnchecked(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103814457085 0x7f81e9198d8e 4841: com.mojang.serialization.Dynamic::remove(String) -> com.mojang.serialization.Dynamic
fifo write: @1699477103815787742 0x7f81e946af5c 1075: java.util.BitSet::set(int) -> void
fifo write: @1699477103816019185 0x7f81e1471534 958: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::findCheckedType(int) -> java.util.Optional
fifo write: @1699477103816165857 0x7f81e988a5d7 35: com.mojang.datafixers.optics.Prism$$Lambda$5814.0x00007f8160ac16e8::apply(Object) -> Object
fifo write: @1699477103816374309 0x7f81e1d593d7 1183: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::findChoiceType(String, int) -> java.util.Optional
fifo write: @1699477103816445150 0x7f81e1c4cafe 1366: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap::containsKey(Object) -> boolean
fifo write: @1699477103816584482 0x7f81e22985f4 1617: com.mojang.datafixers.schemas.Schema::findChoiceType(com.mojang.datafixers.DSL$TypeReference) -> com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType
fifo write: @1699477103816865486 0x7f81e95cdcba 1463: ri::mergeToList(Object, java.util.List) -> com.mojang.serialization.DataResult
fifo write: @1699477103817937909 0x7f81e19eca87 3022: com.mojang.datafixers.schemas.Schema::getChoiceType(com.mojang.datafixers.DSL$TypeReference, String) -> com.mojang.datafixers.types.Type
fifo write: @1699477103818136182 0x7f81e932bbb0 1321: ri$$Lambda$5302.0x00007f81609c1dd8::apply(Object) -> Object
fifo write: @1699477103818901562 0x7f81e93fff83 46: com.mojang.datafixers.kinds.IdF$Instance::lift1(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477103819216556 0x7f81e9546b50 287: com.mojang.datafixers.optics.Prism$$Lambda$5833.0x00007f8160ac3248::apply(Object) -> Object
fifo write: @1699477103819623351 0x7f81e14bbe07 7631: baf::getChoiceType(com.mojang.datafixers.DSL$TypeReference, String) -> com.mojang.datafixers.types.Type
fifo write: @1699477103819867214 0x7f81e91e5040 2294: com.mojang.datafixers.kinds.Applicative::ap(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103819973015 0x7f81e9850870 452: com.mojang.datafixers.FunctionType$Instance$$Lambda$5802.0x00007f8160ac0260::apply(Object) -> Object
fifo write: @1699477103820018856 0x7f81e93ffbcf 76: CharacterDataLatin1::isUpperCase(int) -> boolean
fifo write: @1699477103820362490 0x7f81e1dafc14 356: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$EntrySpliterator::acceptOnIndex(Object, int) -> void
fifo write: @1699477103820521232 0x7f81e2090b99 399: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType$$Lambda$6873.0x00007f8160b64490::apply(Object) -> Object
fifo write: @1699477103820624423 0x7f81e1b0b63d 629: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$EntrySpliterator::acceptOnIndex(java.util.function.Consumer, int) -> void
fifo write: @1699477103820646524 0x7f81e8bda100 504: I2C/C2I adapters(0xbaabbbbb)
fifo write: @1699477103820959308 0x7f81e1915514 733: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::lambda$findTypeInChildren$14(com.mojang.datafixers.util.Pair) -> boolean
fifo write: @1699477103821020279 0x7f81e227d0b4 1074: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType$$Lambda$6880.0x00007f8160b64ff8::test(Object) -> boolean
fifo write: @1699477103821125460 0x7f81e246db97 2285: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType$$Lambda$6890.0x00007f8160b65dd8::apply(Object) -> Object
fifo write: @1699477103821213601 0x7f81e1fdec54 1204: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType$$Lambda$6893.0x00007f8160b66da8::apply(Object) -> Object
fifo write: @1699477103821366553 0x7f81e22b22b7 1394: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::lambda$findTypeInChildren$13(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean, java.util.Map$Entry) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103821716288 0x7f81e93af9f0 2627: com.mojang.serialization.ListBuilder$Builder$$Lambda$5301.0x00007f81609c1b90::apply(Object) -> Object
fifo write: @1699477103821903680 0x7f81e1640094 866: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::lambda$findTypeInChildren$15(com.mojang.datafixers.util.Either) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103822136593 0x7f81e9003211 38: java.util.Formatter$Conversion::isValid(char) -> boolean
fifo write: @1699477103822153583 0x7f81e8bd9c00 504: I2C/C2I adapters(0xbbbaabbb)
fifo write: @1699477103822266025 0x7f81e164b8f7 2323: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::lambda$findTypeInChildren$16(com.mojang.datafixers.util.Pair) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103822318105 0x7f81e216b514 361: NoSuchMethodError::<init>(String) -> void
fifo write: @1699477103822486568 0x7f81e1a84999 469: akc$$Lambda$5460.0x00007f8160a7c9d0::accept(Object) -> void
fifo write: @1699477103822603539 0x7f81e165fbfd 116: akc::a(int, cpc, int, akb) -> void
fifo write: @1699477103822975934 0x7f81e147fe34 721: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::insert(int, long, Object) -> void
fifo write: @1699477103823072585 0x7f81e2295a41 4077: akb::a(int, cpc, int) -> void
fifo write: @1699477103826068374 0x7f81e975c48e 4998: com.mojang.serialization.Dynamic::map(java.util.function.Function) -> com.mojang.serialization.Dynamic
fifo write: @1699477103826228936 0x7f81e93b5190 2266: com.mojang.datafixers.kinds.IdF$Instance$$Lambda$6743.0x00007f8160b4c8c8::apply(Object) -> Object
fifo write: @1699477103826274686 0x7f81e9002ed7 52: java.io.DataInputStream::readUnsignedByte() -> int
fifo write: @1699477103826315267 0x7f81e90029cc 6: com.mojang.datafixers.TypedOptic::bounds() -> java.util.Set
fifo write: @1699477103826456659 0x7f81e9744a10 1785: java.util.Formatter$FormatSpecifier::appendJustified(Appendable, CharSequence) -> void
fifo write: @1699477103826859694 0x7f81e217cff4 269: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType::lambda$findTypeInChildren$17(java.util.Set, com.mojang.datafixers.TypedOptic) -> void
fifo write: @1699477103826932685 0x7f81e1b73bb4 615: com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType$$Lambda$6920.0x00007f8160b6eb68::accept(Object) -> void
fifo write: @1699477103826997346 0x7f81e18d5094 471: it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap$MapEntry::setValue(Object) -> Object
fifo write: @1699477103828192141 0x7f81e916a72f 652: java.util.Formatter$FormatSpecifier::<init>(java.util.Formatter, char) -> void
fifo write: @1699477103828680657 0x7f81e9616bd7 96: com.mojang.datafixers.TypedOptic::tType() -> com.mojang.datafixers.types.Type
fifo write: @1699477103829788612 0x7f81e23b8760 148: com.mojang.datafixers.util.Either$Right::mapBoth(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477103856391985 0x7f81e93c88f0 1864: java.util.Formatter$FormatSpecifier::print(String, java.util.Locale) -> void
fifo write: @1699477103856834761 0x7f81e2162419 369: com.mojang.serialization.codecs.EitherCodec$$Lambda$6792.0x00007f8160b53418::apply(Object) -> Object
fifo write: @1699477103856947962 0x7f81e96167e4 155: com.mojang.datafixers.optics.profunctors.Profunctor::dimap(com.mojang.datafixers.kinds.App2, java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103856993813 0x7f81e96164cc 6: com.mojang.serialization.RecordBuilder$AbstractBuilder::ops() -> com.mojang.serialization.DynamicOps
fifo write: @1699477103857057054 0x7f81e1a09a9a 250: com.mojang.serialization.codecs.EitherCodec::lambda$encode$3(com.mojang.serialization.DynamicOps, Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103857489569 0x7f81e153a837 2500: ri$1::a(qw, String) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103857582041 0x7f81e21c2037 2819: ri$1$$Lambda$4105.0x00007f8160896d70::apply(Object) -> Object
fifo write: @1699477103858277140 0x7f81e93d412e 11154: com.mojang.serialization.codecs.ListCodec::encode(java.util.List, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103858641324 0x7f81e964f8e5 7906: ri$d::a(rq) -> ri$f
fifo write: @1699477103858695935 0x7f81e16c8114 31: aka$$Lambda$5459.0x00007f8160a7c7b0::apply(int) -> Object
fifo write: @1699477103858891578 0x7f81e917a570 517: com.mojang.datafixers.optics.Lens$$Lambda$5701.0x00007f8160ab3468::apply(Object) -> Object
fifo write: @1699477103859186711 0x7f81e93d38ec 255: com.mojang.datafixers.optics.Lens::lambda$eval$2(com.mojang.datafixers.optics.profunctors.Cartesian, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103859875860 0x7f81e917a094 167: rc::a(rq) -> boolean
fifo write: @1699477103861628473 0x7f81e9655d10 2281: com.mojang.datafixers.types.templates.Tag$TagType::toString() -> String
fifo write: @1699477103861893846 0x7f81e1ac75f4 220: ajz::a(dhk) -> int
fifo write: @1699477103861943387 0x7f81e1acac74 378: aki::i(long) -> asm
fifo write: @1699477103861998267 0x7f81e1b578b4 467: aki$$Lambda$5453.0x00007f8160a7a270::get(long) -> Object
fifo write: @1699477103862059858 0x7f81e1506bb7 787: aki::a(akv, cpc, int, Object) -> void
fifo write: @1699477103863127982 0x7f81e1d30bea 447: com.mojang.serialization.Decoder::map(java.util.function.Function) -> com.mojang.serialization.Decoder
fifo write: @1699477103863200233 0x7f81e1dc8494 340: com.mojang.serialization.Decoder$2::<init>(com.mojang.serialization.Decoder, java.util.function.Function) -> void
fifo write: @1699477103863434816 0x7f81e9654f04 1472: com.mojang.serialization.ListBuilder$Builder$$Lambda$5300.0x00007f81609c1960::apply(Object, Object) -> Object
fifo write: @1699477103863621758 0x7f81e1ecf9b7 553: com.mojang.datafixers.util.Either$Instance$$Lambda$6774.0x00007f8160b51438::apply(Object) -> Object
fifo write: @1699477103863829361 0x7f81e16b8eb4 1096: com.mojang.datafixers.util.Either$Instance::lambda$traverse$6(java.util.function.Function, com.mojang.datafixers.kinds.Applicative, Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103863899141 0x7f81e19eb8d4 1201: com.mojang.datafixers.util.Either$Instance$$Lambda$6697.0x00007f8160b46308::apply(Object) -> Object
fifo write: @1699477103863978862 0x7f81e1bca5c6 578: java.lang.invoke.LambdaForm$MH.0x00007f8160468c00::linkToTargetMethod(Object, int, int, Object) -> Object
fifo write: @1699477103864661601 0x7f81e1ed8957 1460: com.mojang.datafixers.types.templates.Sum$SumType::buildCodec() -> com.mojang.serialization.Codec
fifo write: @1699477103864755632 0x7f81e1fab911 1820: java.util.Map::of(Object, Object, Object, Object) -> java.util.Map
fifo write: @1699477103864865224 0x7f81e218f371 123: it.unimi.dsi.fastutil.ints.IntAVLTreeSet::subSet(int, int) -> it.unimi.dsi.fastutil.ints.IntSortedSet
fifo write: @1699477103864911644 0x7f81e228bf94 347: it.unimi.dsi.fastutil.ints.IntAVLTreeSet::firstInt() -> int
fifo write: @1699477103864961245 0x7f81e17791d4 925: com.mojang.datafixers.DataFixerUpper::getLowestFixSameVersion(int) -> int
fifo write: @1699477103865145547 0x7f81e1ea78b4 363: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Subset::lastInt() -> int
fifo write: @1699477103865270089 0x7f81e1ff0880 1530: java.lang.invoke.LambdaForm$DMH.0x00007f816065a800::newInvokeSpecial(Object, Object, int, int) -> Object
fifo write: @1699477103865377600 0x7f81e1529803 2019: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Subset::<init>(it.unimi.dsi.fastutil.ints.IntAVLTreeSet, int, boolean, int, boolean) -> void
fifo write: @1699477103865483822 0x7f81e15c94e0 1557: it.unimi.dsi.fastutil.ints.IntAVLTreeSet::locateKey(int) -> it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry
fifo write: @1699477103865550883 0x7f81e201d714 192: com.mojang.datafixers.DataFixerUpper$$Lambda$5489.0x00007f8160a865e8::<init>(com.mojang.datafixers.DataFixerUpper, int, int) -> void
fifo write: @1699477103865627394 0x7f81e20b7d94 428: it.unimi.dsi.fastutil.longs.Long2ObjectMaps$SynchronizedMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2ObjectFunction) -> Object
fifo write: @1699477103865680634 0x7f81e1939814 230: ri$$Lambda$5673.0x00007f8160aa9b30::<init>(ri, qw) -> void
fifo write: @1699477103865809596 0x7f81e17c71bc 2280: it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Subset::lastEntry() -> it.unimi.dsi.fastutil.ints.IntAVLTreeSet$Entry
fifo write: @1699477103865901097 0x7f81e1aa3e94 230: com.mojang.serialization.codecs.CompoundListCodec$$Lambda$5675.0x00007f8160aa9fb0::<init>(com.mojang.serialization.codecs.CompoundListCodec, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477103865969998 0x7f81e1af8e14 393: com.mojang.serialization.codecs.CompoundListCodec$$Lambda$5675.0x00007f8160aa9fb0::apply(Object) -> Object
fifo write: @1699477103866072849 0x7f81e1bba814 705: ato::a(com.mojang.datafixers.Typed) -> com.mojang.datafixers.Typed
fifo write: @1699477103866157871 0x7f81e22b5e59 1054: ato$$Lambda$5500.0x00007f8160a89450::apply(Object) -> Object
fifo write: @1699477103866311743 0x7f81e1c45b17 106: com.mojang.serialization.Dynamic$$Lambda$6378.0x00007f8160b18000::apply(Object) -> Object
fifo write: @1699477103866592466 0x7f81e17f1817 4005: ri::getMapEntries(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103866668627 0x7f81e1495517 1816: ayy$$Lambda$5502.0x00007f8160a898d0::apply(Object) -> Object
fifo write: @1699477103866756028 0x7f81e1d5d017 3659: ri::d(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103866888160 0x7f81e22f9d5f 4461: com.mojang.serialization.codecs.CompoundListCodec::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103867595069 0x7f81e97ab819 6270: java.util.Formatter$FormatSpecifier::print(Object, java.util.Locale) -> void
fifo write: @1699477103867643910 0x7f81e1c78914 185: ayy$$Lambda$6422.0x00007f8160b1dcf0::<init>(ayy) -> void
fifo write: @1699477103867728681 0x7f81e2255294 296: com.mojang.datafixers.Typed::updateTyped(com.mojang.datafixers.OpticFinder, java.util.function.Function) -> com.mojang.datafixers.Typed
fifo write: @1699477103867849122 0x7f81e97a9ecc 2864: rc::c(int, rq) -> void
fifo write: @1699477103867909193 0x7f81e22b9697 354: com.mojang.serialization.DynamicOps$$Lambda$6487.0x00007f8160b28d90::apply(Object) -> Object
fifo write: @1699477103867967684 0x7f81e2331097 114: com.mojang.datafixers.Typed$$Lambda$6602.0x00007f8160b38248::apply(Object) -> Object
fifo write: @1699477103868045245 0x7f81e227df57 1287: aum::b(com.mojang.serialization.Dynamic) -> com.mojang.serialization.Dynamic
fifo write: @1699477103868147876 0x7f81e19ef337 2407: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6109.0x00007f8160aef3f0::apply(Object) -> Object
fifo write: @1699477103868213297 0x7f81e9654bdc 11: com.mojang.datafixers.util.Pair::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.util.Pair
fifo write: @1699477103868291638 0x7f81e1656717 1609: aum$$Lambda$6566.0x00007f8160b33330::apply(Object) -> Object
fifo write: @1699477103868368849 0x7f81e21ab87c 1577: com.mojang.datafixers.types.Type::ifSame(com.mojang.datafixers.Typed) -> java.util.Optional
fifo write: @1699477103868476560 0x7f81e2005147 5073: ayy::b(com.mojang.serialization.Dynamic) -> com.mojang.serialization.Dynamic
fifo write: @1699477103868765064 0x7f81e2050174 257: ajz::b(int) -> akj
fifo write: @1699477103868814615 0x7f81e1766814 144: aka$$Lambda$5531.0x00007f8160a94120::apply(int) -> Object
fifo write: @1699477103868846765 0x7f81e96548cc 2: ajy::n() -> int
fifo write: @1699477103869106159 0x7f81e1e04aef 7916: com.mojang.serialization.codecs.CompoundListCodec::encode(java.util.List, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103869141899 0x7f81e97a9b4c 2: ajy::b(int) -> void
fifo write: @1699477103869344702 0x7f81e9739a50 2169: com.mojang.datafixers.optics.profunctors.TraversalP$1$$Lambda$6301.0x00007f8160b0d560::apply(Object) -> Object
fifo write: @1699477103869791237 0x7f81e97385c1 1543: com.mojang.datafixers.util.Pair$Instance::traverse(com.mojang.datafixers.kinds.Applicative, java.util.function.Function, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103870838411 0x7f81e918359c 1567: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477103870937192 0x7f81e14973bf 2376: com.mojang.datafixers.DataFixerUpper::getRule(int, int) -> com.mojang.datafixers.TypeRewriteRule
fifo write: @1699477103871764223 0x7f81e2230437 8653: com.mojang.datafixers.types.Type::readAndWrite(com.mojang.serialization.DynamicOps, com.mojang.datafixers.types.Type, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103872993939 0x7f81e9179746 801: java.lang.invoke.VarHandleReferences$Array::setVolatile(java.lang.invoke.VarHandle, Object, int, Object) -> void
fifo write: @1699477103873146761 0x7f81e91793b6 1: java.util.concurrent.atomic.AtomicInteger::decrementAndGet() -> int
fifo write: @1699477103874649060 0x7f81e92b4a19 6226: java.util.Formatter$FormatSpecifier::printString(Object, java.util.Locale) -> void
fifo write: @1699477103874925214 0x7f81e97a93d0 183: com.mojang.datafixers.functions.Comp$$Lambda$5690.0x00007f8160aae248::apply(Object) -> Object
fifo write: @1699477103893001557 0x7f81e9181bc9 2040: com.mojang.datafixers.optics.profunctors.TraversalP$1::lambda$wander$0(com.mojang.datafixers.kinds.Traversable, com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.FunctionType, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103893142849 0x7f81e9181260 280: com.mojang.datafixers.optics.InjTagged::match(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477103893229470 0x7f81e941c853 144: ri::createString(String) -> Object
fifo write: @1699477103893439513 0x7f81e941b391 1926: java.lang.invoke.VarHandleGuards::guard_LIL_V(java.lang.invoke.VarHandle, Object, int, Object, java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477103893505584 0x7f81e9737e50 71: com.mojang.datafixers.optics.Adapter$$Lambda$5716.0x00007f8160ab5748::apply(Object) -> Object
fifo write: @1699477103893572054 0x7f81e941afd0 71: com.mojang.datafixers.optics.Adapter$$Lambda$5711.0x00007f8160ab4980::apply(Object) -> Object
fifo write: @1699477103894663019 0x7f81e20700ba 613: com.mojang.datafixers.optics.InjTagged::build(Object) -> Object
fifo write: @1699477103894761980 0x7f81e941a9e3 216: baf$1::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477103894934522 0x7f81e941a334 376: com.google.common.collect.ImmutableSet$EmptySetBuilderImpl::add(Object) -> com.google.common.collect.ImmutableSet$SetBuilderImpl
fifo write: @1699477103896127467 0x7f81e9419e8c 77: com.mojang.datafixers.optics.Traversal$Instance::dimap(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103896234809 0x7f81e9419a95 96: com.mojang.datafixers.optics.Traversal$Instance::lambda$dimap$0(java.util.function.Function, java.util.function.Function, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103896356470 0x7f81e94194d0 287: com.mojang.datafixers.optics.Traversal$Instance$$Lambda$6199.0x00007f8160afd478::apply(Object) -> Object
fifo write: @1699477103897212111 0x7f81e94db104 663: com.mojang.serialization.DynamicOps::mergeToPrimitive(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103897317123 0x7f81e9418f0b 62: com.mojang.datafixers.FunctionType$Instance::dimap(java.util.function.Function, java.util.function.Function) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103900317212 0x7f81e93ea4c8 11328: com.mojang.serialization.codecs.ListCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103900413813 0x7f81e94da8f0 392: com.mojang.datafixers.FunctionType$Instance$$Lambda$5724.0x00007f8160ab69a0::apply(Object) -> Object
fifo write: @1699477103900495414 0x7f81e93e9d03 46: com.mojang.datafixers.util.Either$$Lambda$6096.0x00007f8160aeb6c0::apply(Object) -> Object
fifo write: @1699477103900585855 0x7f81e94da457 126: com.mojang.datafixers.util.Either$$Lambda$6071.0x00007f8160ae96d0::apply(Object) -> Object
fifo write: @1699477103900894809 0x7f81e94d9f85 144: com.mojang.datafixers.FunctionType$Instance::first(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103901024051 0x7f81e94d948b 676: com.mojang.datafixers.types.templates.Named$NamedType$1::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103901437266 0x7f81e94d90d9 54: com.mojang.datafixers.TypedOptic$$Lambda$5699.0x00007f8160aad400::apply(Object) -> Object
fifo write: @1699477103901554697 0x7f81e227f44c 676: java.lang.invoke.LambdaForm$MH.0x00007f8160829000::linkToTargetMethod(Object, Object, Object, int, Object, Object) -> Object
fifo write: @1699477103901697589 0x7f81e94d86fe 605: com.mojang.datafixers.types.templates.Named$NamedType$1::encode(com.mojang.datafixers.util.Pair, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103901897882 0x7f81e1b79b83 1565: java.lang.invoke.LambdaForm$DMH.0x00007f8160828800::newInvokeSpecial(Object, Object, Object, Object, int, Object) -> Object
fifo write: @1699477103901948193 0x7f81e2321894 245: java.util.concurrent.ForkJoinTask$RunnableExecuteAction::exec() -> boolean
fifo write: @1699477103902163115 0x7f81e193b594 185: ajy$$Lambda$5456.0x00007f8160a7c128::<init>(ajy) -> void
fifo write: @1699477103902392998 0x7f81e177a317 114: aki::a(aka, ajy) -> void
fifo write: @1699477103902718143 0x7f81e199d214 185: ajy$$Lambda$5457.0x00007f8160a7c350::<init>(ajy) -> void
fifo write: @1699477103904145791 0x7f81e1a2f494 324: akc$$Lambda$5458.0x00007f8160a7c588::<init>(akc, java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477103904203552 0x7f81e1abde14 125: akc$$Lambda$5458.0x00007f8160a7c588::run() -> void
fifo write: @1699477103904268283 0x7f81e1f37314 471: aki$$Lambda$5455.0x00007f8160a7bef0::accept(Object) -> void
fifo write: @1699477103904341773 0x7f81e94d7df4 419: ri$b::a(rq) -> ri$f
fifo write: @1699477103904436965 0x7f81e16c89b7 2088: akc::onLevelChange(cpc, java.util.function.IntSupplier, int, java.util.function.IntConsumer) -> void
fifo write: @1699477103904483985 0x7f81e18db874 87: ajy$$Lambda$5456.0x00007f8160a7c128::getAsInt() -> int
fifo write: @1699477103904584967 0x7f81e217eafc 497: java.lang.invoke.LambdaForm$MH.0x00007f8160a81400::linkToTargetMethod(int, Object, int, Object) -> Object
fifo write: @1699477103904659438 0x7f81e1db1080 1530: java.lang.invoke.LambdaForm$DMH.0x00007f8160a80c00::newInvokeSpecial(Object, int, Object, int) -> Object
fifo write: @1699477103904719128 0x7f81e187405e 1353: java.util.concurrent.ForkJoinTask::signalWaiters() -> void
fifo write: @1699477103905039182 0x7f81e94d7acc 6: Throwable::getMessage() -> String
fifo write: @1699477103905418367 0x7f81e18d2fc7 3044: akc::a(java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477103906634003 0x7f81e228d594 185: java.util.concurrent.CompletableFuture$AltResult::<init>(Throwable) -> void
fifo write: @1699477103906845345 0x7f81e193b174 87: ajy$$Lambda$5457.0x00007f8160a7c350::accept(int) -> void
fifo write: @1699477103907133109 0x7f81e9798979 310: com.mojang.datafixers.types.templates.Product::equals(Object) -> boolean
fifo write: @1699477103907552804 0x7f81e9797a70 985: com.mojang.datafixers.types.templates.List$ListType::toString() -> String
fifo write: @1699477103907749387 0x7f81e1429ca0 2004: java.util.concurrent.CompletableFuture::uniAcceptStage(java.util.concurrent.Executor, java.util.function.Consumer) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103908698719 0x7f81e23ba1b4 602: java.util.concurrent.CompletableFuture$UniAccept::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.Consumer) -> void
fifo write: @1699477103908881271 0x7f81e1c56aaf 4565: java.util.concurrent.ForkJoinPool$WorkQueue::push(java.util.concurrent.ForkJoinTask, java.util.concurrent.ForkJoinPool) -> void
fifo write: @1699477103909043123 0x7f81e2238847 3913: java.util.concurrent.ForkJoinPool$WorkQueue::setSlotVolatile(java.util.concurrent.ForkJoinTask[], int, java.util.concurrent.ForkJoinTask) -> void
fifo write: @1699477103909109404 0x7f81e242fa94 275: ajy$$Lambda$5526.0x00007f8160a933c8::<init>(ajy, aka, akj) -> void
fifo write: @1699477103909208425 0x7f81e1854134 466: java.util.concurrent.CompletableFuture::thenRunAsync(Runnable, java.util.concurrent.Executor) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103909333717 0x7f81e1f05f34 602: java.util.concurrent.CompletableFuture$UniRun::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, Runnable) -> void
fifo write: @1699477103909402498 0x7f81e2285014 185: ajy$$Lambda$5527.0x00007f8160a935f0::<init>(java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103909512529 0x7f81e14ce820 2004: java.util.concurrent.CompletableFuture::uniRunStage(java.util.concurrent.Executor, Runnable) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103910328270 0x7f81e230d69f 4219: java.util.concurrent.CompletableFuture::cancel(boolean) -> boolean
fifo write: @1699477103912130963 0x7f81e1f1a04f 3934: ajy::a(aka, java.util.concurrent.CompletableFuture, java.util.concurrent.Executor, akj) -> void
fifo write: @1699477103912616829 0x7f81e22da614 305: java.util.ImmutableCollections$MapN$MapNIterator::<init>(java.util.ImmutableCollections$MapN) -> void
fifo write: @1699477103913058195 0x7f81e207367f 10638: com.mojang.datafixers.NamedChoiceFinder$Matcher::match(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.util.Either
fifo write: @1699477103913160297 0x7f81e232e294 634: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$encode$8(Object, com.mojang.serialization.RecordBuilder, com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477103913231407 0x7f81e232d1b4 996: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$6839.0x00007f8160b5af88::accept(Object) -> void
fifo write: @1699477103915452816 0x7f81e247b434 576: Exception::<init>() -> void
fifo write: @1699477103915633178 0x7f81e9796cf9 658: com.mojang.datafixers.types.templates.Tag::equals(Object) -> boolean
fifo write: @1699477103916473199 0x7f81e21b400f 31672: ajy::a(aka, java.util.concurrent.Executor) -> void
fifo write: @1699477103916514630 0x7f81e21b2c34 479: Throwable::<init>() -> void
fifo write: @1699477103919138154 0x7f81e193ce14 31: Exception::<init>(Throwable) -> void
fifo write: @1699477103919183264 0x7f81e199ce14 167: Throwable::getLocalizedMessage() -> String
fifo write: @1699477103919268015 0x7f81e19b1094 31: com.mojang.datafixers.TypedOptic::castOuter(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103919315346 0x7f81e1a64759 1032: Throwable::<init>(Throwable) -> void
fifo write: @1699477103919353306 0x7f81e1aaea34 665: RuntimeException::<init>() -> void
fifo write: @1699477103919427787 0x7f81e1b279b7 1515: java.util.concurrent.CompletableFuture::encodeThrowable(Throwable, Object) -> Object
fifo write: @1699477103919466688 0x7f81e1e29494 264: IllegalStateException::<init>() -> void
fifo write: @1699477103919526829 0x7f81e1e28f14 264: java.util.concurrent.CompletionException::<init>(Throwable) -> void
fifo write: @1699477103919621690 0x7f81e2169554 1963: Throwable::toString() -> String
fifo write: @1699477103919665380 0x7f81e1a97414 167: RuntimeException::<init>(Throwable) -> void
fifo write: @1699477103919763872 0x7f81e1e1845f 2446: java.util.concurrent.CompletableFuture::completeThrowable(Throwable, Object) -> boolean
fifo write: @1699477103919811282 0x7f81e1e40f14 361: java.util.concurrent.CancellationException::<init>() -> void
fifo write: @1699477103919926854 0x7f81e1e1e557 1572: com.mojang.datafixers.types.templates.Check$CheckType::wrapOptic(com.mojang.datafixers.types.templates.Check$CheckType, com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103920484801 0x7f81e1472746 7891: java.util.concurrent.CompletableFuture$UniRun::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103920652143 0x7f81e1d2d477 4708: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477103920763535 0x7f81e1e8fd4a 447: com.mojang.datafixers.optics.Optics::affine(java.util.function.Function, java.util.function.BiFunction) -> com.mojang.datafixers.optics.Affine
fifo write: @1699477103920855226 0x7f81e1e8f874 329: com.mojang.datafixers.optics.Affine::unbox(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.optics.Affine
fifo write: @1699477103921170590 0x7f81e1e40a14 340: com.mojang.datafixers.optics.Optics$5::<init>(java.util.function.Function, java.util.function.BiFunction) -> void
fifo write: @1699477103922855292 0x7f81e231ed8e 4410: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477103926700801 0x7f81e1abda17 36: java.util.concurrent.CompletableFuture::handle(java.util.function.BiFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103926872484 0x7f81e20b42b4 602: java.util.concurrent.CompletableFuture$UniHandle::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.BiFunction) -> void
fifo write: @1699477103927208788 0x7f81e9793390 5774: com.mojang.datafixers.TypedOptic::compose(com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103927504072 0x7f81e21c6480 3337: java.util.concurrent.CompletableFuture::uniHandleStage(java.util.concurrent.Executor, java.util.function.BiFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103927622013 0x7f81e2213894 230: aka$$Lambda$5533.0x00007f8160a94580::<init>(aka, ajy) -> void
fifo write: @1699477103927673454 0x7f81e2213294 230: aka$$Lambda$5534.0x00007f8160a947a8::<init>(aka, ajy) -> void
fifo write: @1699477103927728615 0x7f81e2284b94 185: aka$$Lambda$5535.0x00007f8160a949f0::<init>(aka) -> void
fifo write: @1699477103931462913 0x7f81e97927e3 680: com.mojang.datafixers.optics.Optic$CompositionOptic::lambda$eval$0(java.util.List, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103934102717 0x7f81e221ffb7 870: com.mojang.serialization.DataResult$$Lambda$3736.0x00007f81607b61f8::apply(Object) -> Object
fifo write: @1699477103935278062 0x7f81e229e194 365: com.mojang.serialization.codecs.CompoundListCodec$$Lambda$5681.0x00007f8160aaad18::<init>(com.mojang.serialization.codecs.CompoundListCodec, com.mojang.serialization.DynamicOps, com.google.common.collect.ImmutableMap$Builder, org.apache.commons.lang3.mutable.MutableObject, com.google.common.collect.ImmutableList$Builder) -> void
fifo write: @1699477103935507535 0x7f81e1ddc562 6726: com.mojang.serialization.DynamicLike::createMap(java.util.Map) -> com.mojang.serialization.Dynamic
fifo write: @1699477103936164934 0x7f81e1d35e0c 5742: aka::b(ajy) -> java.util.concurrent.CompletableFuture
fifo write: @1699477103936402057 0x7f81e22e1a94 275: ri$$Lambda$5682.0x00007f8160aaaf50::<init>(ri, java.util.function.BiConsumer, qw) -> void
fifo write: @1699477103936632380 0x7f81e22e1514 394: com.mojang.serialization.codecs.CompoundListCodec$$Lambda$5686.0x00007f8160aab850::apply(Object) -> Object
fifo write: @1699477103936849522 0x7f81e211b199 380: com.mojang.datafixers.types.Type$$Lambda$5688.0x00007f8160aabce0::apply(Object) -> Object
fifo write: @1699477103936975644 0x7f81e211ac99 179: com.mojang.datafixers.types.Type::lambda$readAndWrite$10(com.mojang.serialization.DynamicOps, com.mojang.datafixers.types.Type, com.mojang.datafixers.View, com.mojang.datafixers.util.Pair) -> com.mojang.serialization.DataResult
fifo write: @1699477103937050745 0x7f81e14dbba7 2019: ri::a(qw, java.util.function.BiConsumer) -> void
fifo write: @1699477103937112136 0x7f81e1b77234 498: ato$$Lambda$5981.0x00007f8160adb598::apply(Object) -> Object
fifo write: @1699477103937185737 0x7f81e17115b7 2418: ri$$Lambda$5673.0x00007f8160aa9b30::accept(Object) -> void
fifo write: @1699477103937333579 0x7f81e17809ab 3601: com.mojang.datafixers.types.Type::capWrite(com.mojang.serialization.DynamicOps, com.mojang.datafixers.types.Type, Object, Object, com.mojang.datafixers.View) -> com.mojang.serialization.DataResult
fifo write: @1699477103937399279 0x7f81e211a814 185: com.mojang.serialization.codecs.CompoundListCodec$$Lambda$5686.0x00007f8160aab850::<init>(com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477103938479083 0x7f81e97c18c7 6976: ri$h::a(qw, rq) -> com.mojang.serialization.DataResult
fifo write: @1699477103938592995 0x7f81e1f99fd7 1753: com.mojang.serialization.DynamicOps::lambda$getGeneric$25(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103938687046 0x7f81e2280377 1305: com.mojang.serialization.Dynamic::set(String, com.mojang.serialization.Dynamic) -> com.mojang.serialization.Dynamic
fifo write: @1699477103938777657 0x7f81e1b76c94 275: com.mojang.serialization.Dynamic$$Lambda$6378.0x00007f8160b18000::<init>(com.mojang.serialization.Dynamic, String, com.mojang.serialization.Dynamic) -> void
fifo write: @1699477103938838118 0x7f81e23f7714 345: ayy$$Lambda$6422.0x00007f8160b1dcf0::apply(Object) -> Object
fifo write: @1699477103938990000 0x7f81e97bfad3 2252: java.util.HashMap$Values::forEach(java.util.function.Consumer) -> void
fifo write: @1699477103939039091 0x7f81e979233a 145: dhk::a(int) -> dhk
fifo write: @1699477103940390788 0x7f81e23f6d34 825: atb$$Lambda$1156.0x00007f8160455e68::apply(Object) -> Object
fifo write: @1699477103940488339 0x7f81e161d814 1838: com.mojang.datafixers.types.templates.List$ListType$$Lambda$6731.0x00007f8160b4afb0::apply(Object) -> Object
fifo write: @1699477103940589761 0x7f81e229dd14 185: com.mojang.datafixers.types.templates.List$ListType$$Lambda$6731.0x00007f8160b4afb0::<init>(com.mojang.datafixers.types.templates.List$ListType) -> void
fifo write: @1699477103940695942 0x7f81e9791cd3 556: java.util.concurrent.CompletableFuture$UniCompletion::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477103941470332 0x7f81e1a32174 144: ato::a(com.mojang.serialization.Dynamic) -> com.mojang.serialization.Dynamic
fifo write: @1699477103941649884 0x7f81e1a31c94 356: com.mojang.serialization.codecs.CompoundListCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103942051600 0x7f81e18cb217 3468: com.mojang.datafixers.types.templates.List$ListType::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103942216282 0x7f81e1b68e97 1858: com.mojang.serialization.DynamicOps$$Lambda$6479.0x00007f8160b26a68::get() -> Object
fifo write: @1699477103942392614 0x7f81e9791830 71: java.util.concurrent.ForkJoinPool$WorkQueue::getSlot(java.util.concurrent.ForkJoinTask[], int) -> java.util.concurrent.ForkJoinTask
fifo write: @1699477103942690458 0x7f81e1d09b94 705: aum::a(com.mojang.datafixers.Typed) -> com.mojang.datafixers.Typed
fifo write: @1699477103943203374 0x7f81e1a31617 106: com.mojang.serialization.Dynamic$$Lambda$6435.0x00007f8160b1fce0::apply(Object) -> Object
fifo write: @1699477103943330586 0x7f81e1c307c2 2404: com.mojang.serialization.Dynamic::lambda$update$14(java.util.function.Function, Object) -> Object
fifo write: @1699477103944359989 0x7f81e1e237d7 5240: ayy$$Lambda$6408.0x00007f8160b1ccf8::apply(Object) -> Object
fifo write: @1699477103945029318 0x7f81e2245a5f 13039: com.mojang.serialization.codecs.CompoundListCodec::lambda$decode$4(com.mojang.serialization.DynamicOps, java.util.function.Consumer) -> com.mojang.serialization.DataResult
fifo write: @1699477103945232400 0x7f81e1c7925a 4819: com.mojang.datafixers.Typed::lambda$updateTyped$6(java.util.function.Function, com.mojang.datafixers.OpticFinder, com.mojang.datafixers.TypedOptic, Object) -> Object
fifo write: @1699477103945342392 0x7f81e1e3ad97 1878: com.mojang.datafixers.types.templates.Sum$SumType$$Lambda$6588.0x00007f8160b35bb8::apply(Object) -> Object
fifo write: @1699477103945428603 0x7f81e221639c 1811: aum$$Lambda$5506.0x00007f8160a8a190::apply(Object) -> Object
fifo write: @1699477103945651686 0x7f81e24078f9 1514: com.mojang.datafixers.types.templates.Sum$SumType::capLeft(com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103945733627 0x7f81e21db379 1482: com.mojang.datafixers.types.templates.List$ListType::capLeft(com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477103945886659 0x7f81e1d09614 440: com.mojang.serialization.DynamicOps::lambda$update$27(Object, String, java.util.function.Function, Object) -> Object
fifo write: @1699477103946038171 0x7f81e2263214 276: java.util.ImmutableCollections$AbstractImmutableMap::getOrDefault(Object, Object) -> Object
fifo write: @1699477103946143332 0x7f81e22625ff 1454: aum::a(com.mojang.datafixers.OpticFinder, com.mojang.datafixers.Typed) -> com.mojang.datafixers.Typed
fifo write: @1699477103947540290 0x7f81e2235557 4626: com.mojang.datafixers.types.templates.Check$CheckType::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103947739412 0x7f81e148b597 7862: ayy$$Lambda$6507.0x00007f8160b2a8e8::apply(Object) -> Object
fifo write: @1699477103947853034 0x7f81e21f8e94 230: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$6840.0x00007f8160b5b1c0::<init>(com.mojang.serialization.RecordBuilder$AbstractStringBuilder, Object) -> void
fifo write: @1699477103947951645 0x7f81e21f81d7 1499: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$6842.0x00007f8160b5b650::apply(Object) -> Object
fifo write: @1699477103948060556 0x7f81e21fa6e7 1283: com.mojang.serialization.Dynamic::lambda$set$13(String, com.mojang.serialization.Dynamic, Object) -> Object
fifo write: @1699477103948364380 0x7f81e97ce5b2 7847: java.util.Formatter::parse(String) -> java.util.List
fifo write: @1699477103948481702 0x7f81e21fa094 275: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$6842.0x00007f8160b5b650::<init>(com.mojang.serialization.RecordBuilder$AbstractStringBuilder, String, Object) -> void
fifo write: @1699477103948712995 0x7f81e2217f57 1365: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::lambda$add$0(String, Object, Object) -> Object
fifo write: @1699477103948789536 0x7f81e2217814 593: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$6840.0x00007f8160b5b1c0::apply(Object) -> Object
fifo write: @1699477103948871387 0x7f81e21dae97 192: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::lambda$add$2(Object, String) -> com.mojang.serialization.DataResult
fifo write: @1699477103949162701 0x7f81e1eb42e7 4821: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::add(Object, Object) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477103949259762 0x7f81e1ed6a9f 3532: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::add(String, Object) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477103951445940 0x7f81e940f1df 7979: com.mojang.serialization.codecs.EitherCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103951711853 0x7f81e1de91e7 15108: ayy::a(com.mojang.serialization.Dynamic) -> com.mojang.serialization.Dynamic
fifo write: @1699477103952183159 0x7f81e25273d7 27774: ato::a(com.mojang.serialization.Dynamic, com.mojang.serialization.OptionalDynamic) -> com.mojang.serialization.Dynamic
fifo write: @1699477103953276174 0x7f81e97be09d 2030: baf$1$$Lambda$5601.0x00007f8160a9d9e0::apply(Object) -> Object
fifo write: @1699477103953517747 0x7f81e2228794 463: org.apache.logging.log4j.spi.AbstractLogger::logIfEnabled(String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, String, Object) -> void
fifo write: @1699477103953633048 0x7f81e940e1f9 1338: com.mojang.datafixers.functions.Comp::lambda$eval$2(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477103956200591 0x7f81e1c6949a 3331: java.util.stream.Nodes$LongFixedNodeBuilder::accept(long) -> void
fifo write: @1699477103956379674 0x7f81e940d937 819: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6122.0x00007f8160af0920::<init>(com.mojang.datafixers.types.templates.Product$ProductType, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> void
fifo write: @1699477103957787902 0x7f81e940caaa 1032: com.mojang.serialization.codecs.PrimitiveCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103958490921 0x7f81e940c581 136: com.mojang.datafixers.types.Type::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477103959137549 0x7f81e97cbddd 2678: baf$1::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103959221690 0x7f81e97bdcb1 106: java.util.Locale::getDefault(java.util.Locale$Category) -> java.util.Locale
fifo write: @1699477103959716077 0x7f81e2228314 190: dhy$$Lambda$7057.0x00007f8160b88b58::accept(int) -> void
fifo write: @1699477103959777868 0x7f81e1b6e6f4 93: dhy::a(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap, int) -> void
fifo write: @1699477103959824808 0x7f81e1bfa1f4 110: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::addToValue(int, int) -> int
fifo write: @1699477103960031291 0x7f81e2286014 1195: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::addTo(int, int) -> int
fifo write: @1699477103961697482 0x7f81e9931958 8014: com.mojang.serialization.codecs.EitherCodec$$Lambda$6781.0x00007f8160b52420::apply(Object) -> Object
fifo write: @1699477103963303473 0x7f81e993699f 17278: java.util.Formatter::format(java.util.Locale, String, Object[]) -> java.util.Formatter
fifo write: @1699477103963402604 0x7f81e97cba03 46: com.mojang.datafixers.kinds.IdF$Instance::point(Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477103963486165 0x7f81e2227e13 194: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3932.0x00007f8160835930::apply(Object) -> Object
fifo write: @1699477103964236005 0x7f81e97cb580 131: com.google.common.reflect.TypeToken::equals(Object) -> boolean
fifo write: @1699477103964580970 0x7f81e1f34c37 830: com.mojang.serialization.Codec$1::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103964677111 0x7f81e97cb0d7 126: com.mojang.datafixers.Typed$$Lambda$6265.0x00007f8160b00800::apply(Object) -> Object
fifo write: @1699477103965045636 0x7f81e97ca130 1309: ri$$Lambda$6395.0x00007f8160b1a208::accept(Object) -> void
fifo write: @1699477103965412750 0x7f81e1c02911 26: com.mojang.serialization.Codec$16::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103965697484 0x7f81e2285b0e 101: com.mojang.serialization.Codec$4::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103966481724 0x7f81e1f34794 185: com.mojang.serialization.DataResult$$Lambda$3737.0x00007f81607b6438::<init>(java.util.function.Consumer) -> void
fifo write: @1699477103966632016 0x7f81e9941bcf 520: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::addTo(int, int) -> int
fifo write: @1699477103966785268 0x7f81e2253e97 1987: com.mojang.serialization.DataResult::resultOrPartial(java.util.function.Consumer) -> java.util.Optional
fifo write: @1699477103966867789 0x7f81e9942470 543: dhy$$Lambda$7057.0x00007f8160b88b58::accept(int) -> void
fifo write: @1699477103967080272 0x7f81e9942eb0 1692: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6134.0x00007f8160af3918::apply(Object) -> Object
fifo write: @1699477103967122902 0x7f81e9944150 83: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::addToValue(int, int) -> int
fifo write: @1699477103967928263 0x7f81e99444f7 176: com.mojang.datafixers.optics.Lens::eval(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.FunctionType
fifo write: @1699477103968251247 0x7f81e994500a 445: com.mojang.datafixers.optics.Lens::eval(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477103968684233 0x7f81e9945a0c 77: com.mojang.datafixers.optics.Traversal$Instance::wander(com.mojang.datafixers.optics.Wander, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477103969281100 0x7f81e9945df3 148: com.mojang.datafixers.kinds.Applicative$$Lambda$3984.0x00007f816083ad70::apply(Object) -> Object
fifo write: @1699477103969714956 0x7f81e9946290 530: ri$$Lambda$3719.0x00007f81607af738::accept(Object) -> void
fifo write: @1699477103970680798 0x7f81e9946ef0 227: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5287.0x00007f81609bea18::apply(Object) -> Object
fifo write: @1699477103970761189 0x7f81e2289926 1644: sun.nio.ch.FileChannelImpl::read(java.nio.ByteBuffer, long) -> int
fifo write: @1699477103970976962 0x7f81e8bd9300 504: I2C/C2I adapters(0xbbbbbbebb)
fifo write: @1699477103971704662 0x7f81e229ae0d 659: ra$1::a(java.io.DataInput, rf) -> ra
fifo write: @1699477103971757442 0x7f81e1f34194 474: ra::<init>(int[]) -> void
fifo write: @1699477103971827003 0x7f81e229a239 954: ra$1::d(java.io.DataInput, rf) -> int[]
fifo write: @1699477103971906914 0x7f81e1cd38dd 852: ra$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477103973198551 0x7f81e99474d0 1043: ri$$Lambda$5556.0x00007f8160a99468::accept(Object) -> void
fifo write: @1699477103973244061 0x7f81e2253914 240: dhf::H_() -> int
fifo write: @1699477103973285302 0x7f81e99484cc 6: dhf::d() -> dhr[]
fifo write: @1699477103973326012 0x7f81e1a8dc74 2: hy::u(int) -> hy
fifo write: @1699477103973363543 0x7f81e1af1a74 2: hy::t(int) -> hy
fifo write: @1699477103973399933 0x7f81e1b275f4 2: hy::s(int) -> hy
fifo write: @1699477103973440054 0x7f81e1d46294 143: gw$a::r(int) -> gw$a
fifo write: @1699477103973483224 0x7f81e1d57094 143: gw$a::q(int) -> gw$a
fifo write: @1699477103973525685 0x7f81e1de5294 143: gw$a::p(int) -> gw$a
fifo write: @1699477103973574686 0x7f81e1cd3217 435: dhu::a(int) -> Object
fifo write: @1699477103973623516 0x7f81e2302f34 674: gw$a::d(int, int, int) -> gw$a
fifo write: @1699477103973663287 0x7f81e2302898 510: cpx::d(int) -> boolean
fifo write: @1699477103973703987 0x7f81e1e19e74 91: dhr::c() -> boolean
fifo write: @1699477103973782368 0x7f81e99487d9 138: ri$h::build(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103973823939 0x7f81e1cd2d94 175: cpx::f(int) -> int
fifo write: @1699477103973864449 0x7f81e2302294 240: dhf::I_() -> int
fifo write: @1699477103973906550 0x7f81e1d76294 311: cpx::e(int) -> int
fifo write: @1699477103973956361 0x7f81e1d75d94 255: dhf::b(int) -> dhr
fifo write: @1699477103974005071 0x7f81e1d75814 343: dhr::a(int, int, int) -> dfj
fifo write: @1699477103974046792 0x7f81e1b768f7 2: dhy$d::a(int, int, int) -> int
fifo write: @1699477103974126803 0x7f81e20ad214 450: dhy::a(int) -> Object
fifo write: @1699477103974193094 0x7f81e20ac9b7 806: dhy::a(int, int, int) -> Object
fifo write: @1699477103974244134 0x7f81e20ac394 244: asj::a(int) -> int
fifo write: @1699477103974343226 0x7f81e1dd4bfa 3604: org.apache.commons.lang3.Validate::inclusiveBetween(long, long, long) -> void
fifo write: @1699477103974397336 0x7f81e1eae274 92: java.util.RegularEnumSet$EnumSetIterator::hasNext() -> boolean
fifo write: @1699477103974462797 0x7f81e222f06b 355: java.util.RegularEnumSet::iterator() -> java.util.Iterator
fifo write: @1699477103974531218 0x7f81e1d75314 272: java.util.RegularEnumSet$EnumSetIterator::<init>(java.util.RegularEnumSet) -> void
fifo write: @1699477103974575729 0x7f81e222eb14 296: asj::b(int) -> int
fifo write: @1699477103974627279 0x7f81e1eb3d74 90: it.unimi.dsi.fastutil.objects.ObjectArrayList::isEmpty() -> boolean
fifo write: @1699477103974679310 0x7f81e222e674 159: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::hasNext() -> boolean
fifo write: @1699477103974800411 0x7f81e229059f 5109: dia::a_(gw) -> dfj
fifo write: @1699477103976155339 0x7f81e9948c8f 2219: com.mojang.datafixers.types.templates.Product$ProductType::toString() -> String
fifo write: @1699477103976308861 0x7f81e994a950 67: java.util.Collections$UnmodifiableMap::size() -> int
fifo write: @1699477103977174202 0x7f81e994ad00 231: java.util.AbstractList::add(Object) -> boolean
fifo write: @1699477103977605788 0x7f81e994b276 105: rc::add(int, Object) -> void
fifo write: @1699477103978222156 0x7f81e994b94c 3: rl::h() -> short
fifo write: @1699477103978467299 0x7f81e222e114 196: it.unimi.dsi.fastutil.shorts.ShortArrayList::add(short) -> boolean
fifo write: @1699477103978512799 0x7f81e1b21554 1422: rc::d(int) -> short
fifo write: @1699477103978726592 0x7f81e994bc90 1125: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$5304.0x00007f81609c2950::apply(Object, Object) -> Object
fifo write: @1699477103978809483 0x7f81e1f0fcbd 1198: dhf::a(it.unimi.dsi.fastutil.shorts.ShortList[], int) -> it.unimi.dsi.fastutil.shorts.ShortList
fifo write: @1699477103978861984 0x7f81e1b20bb4 770: it.unimi.dsi.fastutil.shorts.ShortArrayList::grow(int) -> void
fifo write: @1699477103978913695 0x7f81e21fd57d 1453: dia::a(short, int) -> void
fifo write: @1699477103980006239 0x7f81e2263d01 2386: Enum::valueOf(Class, String) -> Enum
fifo write: @1699477103980085450 0x7f81e22e6fbc 2632: Class::enumConstantDirectory() -> java.util.Map
fifo write: @1699477103981139883 0x7f81e994cacc 3: dfi$a::i() -> boolean
fifo write: @1699477103981279785 0x7f81e994cdcc 6: dhy$a::a() -> dhw$a
fifo write: @1699477103981314316 0x7f81e994d0cc 2: dhy$a::b() -> int
fifo write: @1699477103981883793 0x7f81e994d3cc 3: dfi$a::v() -> boolean
fifo write: @1699477103982434780 0x7f81e1f0f237 1038: asj::a(java.util.function.IntConsumer) -> void
fifo write: @1699477103982798825 0x7f81e23791be 787: asj::a(java.util.function.IntConsumer) -> void
fifo write: @1699477103983898309 0x7f81e21fd094 185: arf$1$$Lambda$7050.0x00007f8160b86220::<init>(org.apache.commons.lang3.mutable.MutableObject) -> void
fifo write: @1699477103984761650 0x7f81e2378c94 348: dhr$a::accept(Object, int) -> void
fifo write: @1699477103984999553 0x7f81e2265777 7651: com.mojang.serialization.Codec::lambda$fieldOf$1(String) -> String
fifo write: @1699477103985177795 0x7f81e15ddd7b 4745: arf$1::apply(com.mojang.serialization.DynamicOps, Object, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477103985354248 0x7f81e23288f7 7909: com.mojang.serialization.Codec$$Lambda$176.0x00007f8160185d58::get() -> Object
fifo write: @1699477103985410948 0x7f81e22f01b4 747: buf$$Lambda$7062.0x00007f8160b8a5b0::test(Object) -> boolean
fifo write: @1699477103985478249 0x7f81e2242df9 2093: dhr$a::a(dfj, int) -> void
fifo write: @1699477103985522160 0x7f81e23785f4 414: buj::b(dfj) -> boolean
fifo write: @1699477103985568231 0x7f81e2242894 282: dhy$a::<init>(dhw$a, int) -> void
fifo write: @1699477103985616571 0x7f81e994d6cc 6: dhz$a::a() -> java.util.List
fifo write: @1699477103986801266 0x7f81e21fcc14 110: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntry::getIntKey() -> int
fifo write: @1699477103986922558 0x7f81e22efd14 243: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap, int) -> void
fifo write: @1699477103986997489 0x7f81e22ef894 110: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntry::getIntValue() -> int
fifo write: @1699477103987561846 0x7f81e20e7a74 1196: dhy::a(dhy$b, it.unimi.dsi.fastutil.ints.Int2IntMap$Entry) -> void
fifo write: @1699477103987949361 0x7f81e225c177 1595: dhy$$Lambda$7058.0x00007f8160b89588::accept(Object) -> void
fifo write: @1699477103988869063 0x7f81e994ddec 4214: com.mojang.serialization.codecs.PairCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103989435340 0x7f81e9950ccc 2: java.util.Spliterators$LongArraySpliterator::characteristics() -> int
fifo write: @1699477103990019368 0x7f81e995100a 279: arf$2::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477103990964460 0x7f81e15dd754 152: arw::d(int) -> boolean
fifo write: @1699477103991102571 0x7f81e22ef274 465: arw::e(int) -> int
fifo write: @1699477103991351675 0x7f81e1bfb51f 1955: qw::p(String) -> qw
fifo write: @1699477103993020396 0x7f81e995164c 3: qu::i() -> byte
fifo write: @1699477103993259009 0x7f81e1bfaf94 358: java.util.concurrent.Semaphore$Sync::<init>(int) -> void
fifo write: @1699477103993341560 0x7f81e225b60a 961: dhy$$Lambda$7046.0x00007f8160b82da0::apply(Object, Object) -> Object
fifo write: @1699477103993835716 0x7f81e1eab15a 2670: dhy$d$1::a(hj, int) -> dhy$a
fifo write: @1699477103994001199 0x7f81e1bfa974 232: dhy::a(dhz$b, hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477103994054899 0x7f81e1eaa914 452: java.util.concurrent.Semaphore$NonfairSync::<init>(int) -> void
fifo write: @1699477103994092600 0x7f81e1d09274 2: dhy$d::a() -> int
fifo write: @1699477103994155811 0x7f81e20e7494 324: dhz$a::<init>(java.util.List, java.util.Optional) -> void
fifo write: @1699477103994216801 0x7f81e21d313d 786: java.util.concurrent.Semaphore::<init>(int) -> void
fifo write: @1699477103994263422 0x7f81e20e6db4 449: dhy$d::b(hj, int) -> int
fifo write: @1699477103994453414 0x7f81e21d2a99 605: dhy$$Lambda$7047.0x00007f8160b82fd0::apply(Object) -> Object
fifo write: @1699477103995508508 0x7f81e995194c 6: rd::g() -> long[]
fifo write: @1699477103996572262 0x7f81e22295a7 9472: dhy::a(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477103999398398 0x7f81e9951f7c 26967: com.mojang.datafixers.FieldFinder$Matcher::match(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.util.Either
fifo write: @1699477103999452679 0x7f81e9962d4c 2: asz::b() -> int
fifo write: @1699477103999555570 0x7f81e1f12a94 39: dhy$d$$Lambda$7038.0x00007f8160b80ba0::create(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477103999621651 0x7f81e21d1dfe 1319: dib::<init>(hj, dhx, java.util.List) -> void
fifo write: @1699477103999713642 0x7f81e224d81a 1985: dhy$d$2::a(hj, int) -> dhy$a
fifo write: @1699477103999778183 0x7f81e224d194 369: dhy$c::<init>(dhy$a, aqp, dhw) -> void
fifo write: @1699477103999854894 0x7f81e22f1f1d 2208: ass::<init>(String) -> void
fifo write: @1699477103999916405 0x7f81e224cbca 106: dib::a(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477104000318880 0x7f81e15d2cba 2644: org.apache.commons.lang3.Validate::isTrue(boolean, String, long) -> void
fifo write: @1699477104001842600 0x7f81e996343b 3536: com.mojang.serialization.MapCodec$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477104001965611 0x7f81e22f42c8 4314: dhy::<init>(hj, dhy$d, dhy$a, aqp, java.util.List) -> void
fifo write: @1699477104002767302 0x7f81e22f13d4 868: qw::f(String) -> byte
fifo write: @1699477104003024125 0x7f81e9965e70 359: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5287.0x00007f81609bea18::apply(Object) -> Object
fifo write: @1699477104003466611 0x7f81e2020774 93: dio::a(cpc, int) -> long
fifo write: @1699477104003648383 0x7f81e15d2714 244: hw::<init>(int, int, int) -> void
fifo write: @1699477104003687934 0x7f81e2215674 155: hw::c() -> int
fifo write: @1699477104003787715 0x7f81e187b739 682: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::put(long, Object) -> Object
fifo write: @1699477104003823895 0x7f81e2289474 155: hw::a() -> int
fifo write: @1699477104003979637 0x7f81e9966463 268: ri$h::build(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104004036068 0x7f81e187b114 487: dio::c(long) -> java.util.Optional
fifo write: @1699477104004197910 0x7f81e187ac94 185: dig$$Lambda$7053.0x00007f8160b86ef0::<init>(org.slf4j.Logger) -> void
fifo write: @1699477104004273601 0x7f81e228d194 31: dhy$$Lambda$7042.0x00007f8160b82278::read(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477104004343962 0x7f81e1f1cf54 1132: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::get(long) -> Object
fifo write: @1699477104004399953 0x7f81e187a814 188: dig$$Lambda$7052.0x00007f8160b86cb8::<init>(cpc, int) -> void
fifo write: @1699477104004464214 0x7f81e1f1f897 2356: rc::a(int) -> qw
fifo write: @1699477104004559085 0x7f81e187a294 188: dig$$Lambda$7055.0x00007f8160b87610::<init>(cpc, int) -> void
fifo write: @1699477104004616526 0x7f81e1f1ca14 387: dhy$$Lambda$7054.0x00007f8160b873d0::apply(Object) -> Object
fifo write: @1699477104004773278 0x7f81e1f1c594 185: dig$$Lambda$7056.0x00007f8160b87848::<init>(org.slf4j.Logger) -> void
fifo write: @1699477104004996041 0x7f81e9966a07 2428: asj::a(java.util.function.IntConsumer) -> void
fifo write: @1699477104005057741 0x7f81e1f1be94 279: dhr::<init>(dhy, dhz) -> void
fifo write: @1699477104005105122 0x7f81e1f1f18b 454: dhr::g() -> void
fifo write: @1699477104005466117 0x7f81e2222357 2543: dhy$$Lambda$7049.0x00007f8160b86000::read(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477104005574718 0x7f81e2221037 2358: dhy::b(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477104005655639 0x7f81e99681d9 130: cpy::H_() -> int
fifo write: @1699477104005839511 0x7f81e223cab7 2842: rc::b(int) -> rc
fifo write: @1699477104006281467 0x7f81e9968650 163: dhf::H_() -> int
fifo write: @1699477104006850864 0x7f81e9968b59 130: cpy::I_() -> int
fifo write: @1699477104007048907 0x7f81e1f1eab7 455: dib::a(int) -> Object
fifo write: @1699477104007091638 0x7f81e1f1e2b7 507: dib::a(java.util.function.Predicate) -> boolean
fifo write: @1699477104007117898 0x7f81e9968fe0 53: cpx::aj() -> int
fifo write: @1699477104007517193 0x7f81e9969650 43: ako$b::au() -> Thread
fifo write: @1699477104008138571 0x7f81e9969c50 103: dfi$a::a(csv) -> boolean
fifo write: @1699477104008395284 0x7f81e996a02f 6: gw$a::d(int, int, int) -> gw$a
fifo write: @1699477104010609523 0x7f81e996a4d9 2925: com.mojang.serialization.Codec$4::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104010969248 0x7f81e223c3cd 365: hw::a(cpc, int) -> hw
fifo write: @1699477104011024738 0x7f81e223bbb4 881: hw::s() -> long
fifo write: @1699477104011305292 0x7f81e22e2d74 155: hw::b() -> int
fifo write: @1699477104011369983 0x7f81e223b614 275: buf$$Lambda$7060.0x00007f8160b8a150::<init>(buf, dhr, hw) -> void
fifo write: @1699477104011422913 0x7f81e21b1914 445: dio::e(long) -> boolean
fifo write: @1699477104011503905 0x7f81e21b1394 275: buf$$Lambda$7061.0x00007f8160b8a388::<init>(buf, dhr, hw) -> void
fifo write: @1699477104011565435 0x7f81e996cad4 283: rc::d(int) -> short
fifo write: @1699477104011763368 0x7f81e21b0ab4 892: buf::a(dhr) -> boolean
fifo write: @1699477104011825039 0x7f81e21b0614 109: buf$$Lambda$7061.0x00007f8160b8a388::run() -> void
fifo write: @1699477104011900080 0x7f81e21b0014 385: dhr::a(java.util.function.Predicate) -> boolean
fifo write: @1699477104011969051 0x7f81e21afb14 256: dhy::a(java.util.function.Predicate) -> boolean
fifo write: @1699477104012077242 0x7f81e22eacb9 1090: ac::a(java.util.Optional, java.util.function.Consumer, Runnable) -> java.util.Optional
fifo write: @1699477104012290455 0x7f81e22e492f 5151: buf::a(hw, dhr) -> void
fifo write: @1699477104012346325 0x7f81e996d150 147: bfr::d() -> boolean
fifo write: @1699477104012669490 0x7f81e22e94ac 3432: buf::a(dhr, hw) -> void
fifo write: @1699477104013149516 0x7f81e996d613 1156: dia::a_(gw) -> dfj
fifo write: @1699477104013246647 0x7f81e1e0f9c7 4392: dhy::a(dhy$b) -> void
fifo write: @1699477104013505760 0x7f81e1e0ecb9 933: java.util.Spliterators$LongArraySpliterator::forEachRemaining(java.util.function.LongConsumer) -> void
fifo write: @1699477104013868165 0x7f81e15d2374 5: java.util.Spliterators$LongArraySpliterator::estimateSize() -> long
fifo write: @1699477104014216690 0x7f81e996e936 1979: java.util.HashMap$KeySet::forEach(java.util.function.Consumer) -> void
fifo write: @1699477104014504033 0x7f81e9970053 369: it.unimi.dsi.fastutil.shorts.ShortArrayList::grow(int) -> void
fifo write: @1699477104015263303 0x7f81e9970685 1052: dia::a(short, int) -> void
fifo write: @1699477104015597047 0x7f81e99713d0 111: java.util.stream.Nodes$LongFixedNodeBuilder::accept(long) -> void
fifo write: @1699477104016258416 0x7f81e99717d6 498: it.unimi.dsi.fastutil.shorts.ShortArrayList::add(short) -> boolean
fifo write: @1699477104016925705 0x7f81e9971ff0 516: com.mojang.datafixers.optics.Adapter$$Lambda$5700.0x00007f8160ab3208::apply(Object) -> Object
fifo write: @1699477104017735055 0x7f81e9973417 228: com.mojang.datafixers.optics.profunctors.TraversalP::traverse(com.mojang.datafixers.kinds.Traversable, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477104019753121 0x7f81e99739b2 655: com.mojang.datafixers.optics.profunctors.TraversalP::first(com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477104020135946 0x7f81e997437c 115: aum$$Lambda$6719.0x00007f8160b48920::apply(Object) -> Object
fifo write: @1699477104020201987 0x7f81e22e417a 361: it.unimi.dsi.fastutil.shorts.ShortArrays::forceCapacity(short[], int, int) -> short[]
fifo write: @1699477104022532627 0x7f81e9974dd0 1911: asj::a(java.util.function.IntConsumer) -> void
fifo write: @1699477104022806700 0x7f81e99762e4 18: com.mojang.serialization.Codec$16::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104023008543 0x7f81e1e57fd4 1320: asj::<init>(int, int, long[]) -> void
fifo write: @1699477104023703382 0x7f81e997675d 7904: com.mojang.serialization.MapCodec$MapCodecCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104023787633 0x7f81e1e56541 4010: dio::d(long) -> java.util.Optional
fifo write: @1699477104023820024 0x7f81e997b450 47: bft$a::b() -> boolean
fifo write: @1699477104023932765 0x7f81e1c68814 738: Integer::valueOf(String) -> Integer
fifo write: @1699477104024930218 0x7f81e997b7f3 340: qw::b(String, int) -> boolean
fifo write: @1699477104025273482 0x7f81e1c675d7 2414: java.util.concurrent.CompletableFuture::internalComplete(Object) -> boolean
fifo write: @1699477104025395084 0x7f81e997bedc 21: cpx::al() -> int
fifo write: @1699477104025774569 0x7f81e997c20f 2231: com.mojang.datafixers.types.templates.Sum$SumType::toString() -> String
fifo write: @1699477104026491028 0x7f81e1d4adf4 83: java.util.EnumMap::maskNull(Object) -> Object
fifo write: @1699477104026614590 0x7f81e1c667f7 1628: java.util.stream.Nodes::flattenLong(java.util.stream.Node$OfLong) -> java.util.stream.Node$OfLong
fifo write: @1699477104026686831 0x7f81e997ded0 295: ri$1::get(String) -> Object
fifo write: @1699477104026838242 0x7f81e232520e 133: java.util.concurrent.CompletableFuture$UniCompletion::claim() -> boolean
fifo write: @1699477104026994125 0x7f81e2324854 1040: java.util.EnumMap::put(Enum, Object) -> Object
fifo write: @1699477104027179487 0x7f81e232339c 2402: java.util.EnumMap::typeCheck(Enum) -> void
fifo write: @1699477104028400793 0x7f81e231865f 13632: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104028493844 0x7f81e1c66317 237: com.mojang.serialization.Codec$19::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104028614865 0x7f81e1d4c976 29: java.util.Arrays::spliterator(long[], int, int) -> java.util.Spliterator$OfLong
fifo write: @1699477104028827778 0x7f81e23229a9 880: java.util.Spliterators::spliterator(long[], int, int, int) -> java.util.Spliterator$OfLong
fifo write: @1699477104028908019 0x7f81e22e8ef6 205: java.util.Arrays::stream(long[], int, int) -> java.util.stream.LongStream
fifo write: @1699477104029063791 0x7f81e1968701 371: java.util.stream.StreamSupport::longStream(java.util.Spliterator$OfLong, boolean) -> java.util.stream.LongStream
fifo write: @1699477104029139312 0x7f81e21af714 31: java.util.stream.LongPipeline::<init>(java.util.Spliterator, int, boolean) -> void
fifo write: @1699477104029191783 0x7f81e2317e14 207: java.util.Spliterators$LongArraySpliterator::<init>(long[], int, int, int) -> void
fifo write: @1699477104029296414 0x7f81e1968294 167: java.util.stream.LongPipeline$Head::<init>(java.util.Spliterator, int, boolean) -> void
fifo write: @1699477104029480597 0x7f81e1967d14 317: java.util.Arrays::stream(long[]) -> java.util.stream.LongStream
fifo write: @1699477104030055854 0x7f81e1e13a7c 6462: ri::getLongStream(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104030218246 0x7f81e1e0b45c 6100: ri::j(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477104030305637 0x7f81e1e0a914 686: java.util.stream.Nodes::longBuilder(long) -> java.util.stream.Node$Builder$OfLong
fifo write: @1699477104030394838 0x7f81e1e13394 39: dhy$d$$Lambda$7039.0x00007f8160b812c0::create(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477104030504190 0x7f81e19674d7 783: java.util.stream.LongPipeline::makeNodeBuilder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477104030596821 0x7f81e196671e 1881: java.util.Spliterator$OfLong::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477104031636954 0x7f81e2121839 835: java.util.concurrent.CompletableFuture$Signaller::isReleasable() -> boolean
fifo write: @1699477104032350184 0x7f81e216f3c7 12185: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104032438465 0x7f81e211f8bc 4233: dzy::b(int) -> int
fifo write: @1699477104033805302 0x7f81e1db6f17 1529: dgj::b(String) -> java.util.Optional
fifo write: @1699477104034379149 0x7f81e1966194 415: hr$c$$Lambda$4089.0x00007f8160892000::apply(Object) -> Object
fifo write: @1699477104034727204 0x7f81e1db5a57 3047: hr$c::c(aev) -> java.util.Optional
fifo write: @1699477104034934637 0x7f81e1c2bbaa 7266: dhu::<init>(hj, int, dhx, java.util.List) -> void
fifo write: @1699477104036409335 0x7f81e1c2b314 93: dij$$Lambda$5484.0x00007f8160a84ae0::run() -> void
fifo write: @1699477104036556717 0x7f81e1db4afe 1722: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntrySet::forEach(java.util.function.Consumer) -> void
fifo write: @1699477104036655898 0x7f81e1edc3b9 2385: dij::a() -> void
fifo write: @1699477104065983597 0x7f81e997e5d9 8157: com.mojang.datafixers.kinds.Applicative::ap2(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477104066315151 0x7f81e9984037 5637: bfr::i() -> void
fifo write: @1699477104066374152 0x7f81e211f314 185: hr$$Lambda$4090.0x00007f8160892240::<init>(aev) -> void
fifo write: @1699477104066448493 0x7f81e1edb2bc 2361: hr::d(aev) -> hq
fifo write: @1699477104066490364 0x7f81e99880cc 2: dhu::b() -> int
fifo write: @1699477104066555834 0x7f81e99883f9 342: cpx::f(int) -> int
fifo write: @1699477104066622805 0x7f81e1eda934 994: dgh::b(String) -> java.util.Optional
fifo write: @1699477104066663686 0x7f81e9988b4c 2: aqv::b() -> int
fifo write: @1699477104066722747 0x7f81e211eb94 219: aqv::a(int) -> Object
fifo write: @1699477104066783397 0x7f81e1965e14 31: java.util.stream.Nodes$LongFixedNodeBuilder::build() -> java.util.stream.Node
fifo write: @1699477104066842448 0x7f81e1eda394 391: java.util.stream.Nodes$LongArrayNode::asPrimitiveArray() -> Object
fifo write: @1699477104066891549 0x7f81e1ed9c94 176: java.util.stream.Nodes$LongArrayNode::asPrimitiveArray() -> long[]
fifo write: @1699477104066972470 0x7f81e184939a 3720: java.util.stream.Nodes$LongFixedNodeBuilder::begin(long) -> void
fifo write: @1699477104067060361 0x7f81e184753a 4333: java.util.stream.Nodes$LongFixedNodeBuilder::build() -> java.util.stream.Node$OfLong
fifo write: @1699477104067132802 0x7f81e1ec5a3a 4333: java.util.stream.Nodes$LongFixedNodeBuilder::end() -> void
fifo write: @1699477104067164342 0x7f81e1846f14 243: rc::isEmpty() -> boolean
fifo write: @1699477104067206093 0x7f81e1ec5237 689: java.util.stream.Nodes$LongArrayNode::<init>(long) -> void
fifo write: @1699477104067255213 0x7f81e1ec4dd4 112: dhu::a(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477104067287124 0x7f81e9988e4c 6: asj::a() -> long[]
fifo write: @1699477104067323734 0x7f81e998914c 6: dks$a::a() -> String
fifo write: @1699477104067362685 0x7f81e998944c 6: dks$a::e() -> java.util.function.Predicate
fifo write: @1699477104067443926 0x7f81e221ae9f 5223: qw::c(String, int) -> rc
fifo write: @1699477104067712889 0x7f81e9989836 3497: com.mojang.serialization.codecs.FieldEncoder::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477104067850561 0x7f81e998c4b1 107: java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node) -> void
fifo write: @1699477104068624711 0x7f81e998ccac 18450: com.mojang.datafixers.types.templates.Product$ProductType::lambda$findTypeInChildren$8(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean, com.mojang.datafixers.types.Type$FieldNotFoundException) -> com.mojang.datafixers.util.Either
fifo write: @1699477104068756983 0x7f81e99972b5 1: java.util.RegularEnumSet$EnumSetIterator::hasNext() -> boolean
fifo write: @1699477104068800913 0x7f81e9997607 54: java.util.RegularEnumSet::iterator() -> java.util.Iterator
fifo write: @1699477104070116040 0x7f81e9997d93 34740: com.mojang.datafixers.types.Type::findType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477104070302623 0x7f81e99ab41d 3369: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::add(String, com.mojang.serialization.DataResult) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477104070369014 0x7f81e99adcc0 815: cpx::d(int) -> boolean
fifo write: @1699477104070445995 0x7f81e99aecd3 695: java.lang.ref.ReferenceQueue::reallyPoll() -> java.lang.ref.Reference
fifo write: @1699477104070496135 0x7f81e99af498 167: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet::<init>(java.util.Set) -> void
fifo write: @1699477104070584706 0x7f81e99af880 319: com.mojang.serialization.RecordBuilder$AbstractBuilder::lambda$build$0(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104070680968 0x7f81e99afe35 327: com.mojang.serialization.codecs.EitherCodec::encode(com.mojang.datafixers.util.Either, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104071024232 0x7f81e99b06ef 3037: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$decode$3(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.serialization.Decoder) -> com.mojang.serialization.DataResult
fifo write: @1699477104071425897 0x7f81e99b3050 3292: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$3932.0x00007f8160835930::apply(Object) -> Object
fifo write: @1699477104071536699 0x7f81e99b5d57 96: com.mojang.datafixers.View::type() -> com.mojang.datafixers.types.Type
fifo write: @1699477104071592579 0x7f81e99b6139 122: ri::k(rq) -> java.util.Optional
fifo write: @1699477104071642760 0x7f81e99b6550 127: cpv::ad() -> bdp
fifo write: @1699477104071696311 0x7f81e99b69b0 119: dhk::a(dhk) -> int
fifo write: @1699477104071835903 0x7f81e99b6df6 2585: java.util.zip.InflaterInputStream::close() -> void
fifo write: @1699477104071904734 0x7f81e1ec4894 348: java.util.EnumMap::put(Object, Object) -> Object
fifo write: @1699477104071955314 0x7f81e1ec4094 785: java.util.HashMap::clear() -> void
fifo write: @1699477104072000355 0x7f81e1ec3c08 243: ac::c() -> long
fifo write: @1699477104072074096 0x7f81e1ec34f4 398: ac::b() -> long
fifo write: @1699477104072142667 0x7f81e99b84d3 1470: java.util.ArrayList::grow() -> Object[]
fifo write: @1699477104072187167 0x7f81e221a894 190: dhy$$Lambda$7057.0x00007f8160b88b58::accept(int) -> void
fifo write: @1699477104072254458 0x7f81e2219b14 1179: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::addTo(int, int) -> int
fifo write: @1699477104072315259 0x7f81e2218ebe 787: asj::a(java.util.function.IntConsumer) -> void
fifo write: @1699477104072356979 0x7f81e99b914c 6: eiy::b() -> gw
fifo write: @1699477104072400670 0x7f81e99b944c 6: eiy::a() -> Object
fifo write: @1699477104072443660 0x7f81e2313e74 467: hy::hashCode() -> int
fifo write: @1699477104072501101 0x7f81e2313534 1044: eiy$1::a(eiy) -> int
fifo write: @1699477104072573062 0x7f81e2312a34 1398: eiy$1::hashCode(Object) -> int
fifo write: @1699477104072626153 0x7f81e2312414 592: eiy$1::equals(Object, Object) -> boolean
fifo write: @1699477104072686044 0x7f81e2311b54 891: qw::l(String) -> String
fifo write: @1699477104072740414 0x7f81e23112b4 717: eiy$1::a(eiy, eiy) -> boolean
fifo write: @1699477104072791005 0x7f81e2310e14 185: eiy$$Lambda$7079.0x00007f8160b922b8::<init>(qw) -> void
fifo write: @1699477104072862626 0x7f81e230fff4 1305: gy::b(aew) -> java.util.Optional
fifo write: @1699477104072916286 0x7f81e22b0e34 973: ejd::a(int) -> ejd
fifo write: @1699477104072971707 0x7f81e1db4694 31: eiy$$Lambda$7079.0x00007f8160b922b8::apply(Object) -> Object
fifo write: @1699477104073029418 0x7f81e22b00d4 1907: hy::equals(Object) -> boolean
fifo write: @1699477104073072808 0x7f81e22afaf4 483: ejd::values() -> ejd[]
fifo write: @1699477104073131129 0x7f81e22af514 373: eiy::<init>(Object, gw, int, ejd) -> void
fifo write: @1699477104073187850 0x7f81e22aedb7 582: dho::a(int) -> Object
fifo write: @1699477104073255561 0x7f81e22ae743 573: java.lang.invoke.LambdaForm$MH.0x00007f8160b94800::linkToTargetMethod(long, Object, Object) -> Object
fifo write: @1699477104073353462 0x7f81e21cf5ff 3275: eiy::a(qw, java.util.function.Function) -> java.util.Optional
fifo write: @1699477104073464593 0x7f81e21ccb1a 5849: eiy::a(qw, Object) -> eiy
fifo write: @1699477104073968060 0x7f81e1ea6d74 27: StackStreamFactory$StackFrameTraverser$StackFrameBuffer::frames() -> Object[]
fifo write: @1699477104074054361 0x7f81e22addd4 847: StackStreamFactory$StackFrameTraverser::batchSize(int) -> int
fifo write: @1699477104076397201 0x7f81e8bd9000 528: I2C/C2I adapters(0xaaaaaaaaab)
fifo write: @1699477104076618114 0x7f81e99ba393 1308: dia::a_(gw) -> dfj
fifo write: @1699477104080263641 0x7f81e2533867 79225: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477104080418693 0x7f81e99bbaa8 3959: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104080494764 0x7f81e1408277 1317: ro$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477104080866588 0x7f81e8bd8c00 512: I2C/C2I adapters(0xaaababaaa)
fifo write: @1699477104081597398 0x7f81e22ad7b4 395: com.google.common.collect.ImmutableSortedMap::get(Object) -> Object
fifo write: @1699477104081655269 0x7f81e1407a34 745: dfk::a(String) -> dgm
fifo write: @1699477104081706219 0x7f81e1406ed4 1415: qw::b(String, int) -> boolean
fifo write: @1699477104081748630 0x7f81e22ad1b4 283: com.google.common.collect.RegularImmutableSortedSet::indexOf(Object) -> int
fifo write: @1699477104081806501 0x7f81e1406543 1007: java.util.Collections::indexedBinarySearch(java.util.List, Object, java.util.Comparator) -> int
fifo write: @1699477104081870241 0x7f81e1405879 1609: java.util.Collections::binarySearch(java.util.List, Object, java.util.Comparator) -> int
fifo write: @1699477104082016183 0x7f81e1404cd4 1409: rc::e(int) -> int
fifo write: @1699477104082318897 0x7f81e99be26b 5223: java.util.concurrent.SynchronousQueue$TransferStack::transfer(Object, boolean, long) -> Object
fifo write: @1699477104082381588 0x7f81e23001b4 603: hk::a(int) -> Object
fifo write: @1699477104082429069 0x7f81e22ff834 1020: dzb$b::a(int) -> dfj
fifo write: @1699477104082473719 0x7f81e1404614 369: dzb$c::<init>(gw, dfj, qw) -> void
fifo write: @1699477104082516340 0x7f81e22fef3a 955: dfi$a::r(cpb, gw) -> boolean
fifo write: @1699477104082777863 0x7f81e22fdc77 2741: dzb::a(dzb$c, java.util.List, java.util.List, java.util.List) -> void
fifo write: @1699477104082885444 0x7f81e22fd494 719: java.util.Comparator::lambda$comparingInt$7b0bb60$1(java.util.function.ToIntFunction, Object, Object) -> int
fifo write: @1699477104082940965 0x7f81e22fcc57 822: java.util.Comparator$$Lambda$336.0x00007f81601d1158::compare(Object, Object) -> int
fifo write: @1699477104082979126 0x7f81e22fc754 227: dzb::c(dzb$c) -> int
fifo write: @1699477104083023866 0x7f81e22fc114 568: dzb$$Lambda$7096.0x00007f8160a65468::applyAsInt(Object) -> int
fifo write: @1699477104083094747 0x7f81e225a794 568: dzb$$Lambda$7097.0x00007f8160a65688::applyAsInt(Object) -> int
fifo write: @1699477104083147818 0x7f81e225a2d4 227: dzb::b(dzb$c) -> int
fifo write: @1699477104083183498 0x7f81e2259e54 227: dzb::a(dzb$c) -> int
fifo write: @1699477104083287630 0x7f81e2259814 568: dzb$$Lambda$7098.0x00007f8160a658a8::applyAsInt(Object) -> int
fifo write: @1699477104083426081 0x7f81e8bdbb80 496: I2C/C2I adapters(0xbbbbbba6)
fifo write: @1699477104085955564 0x7f81e99c1939 1434: java.util.Comparator$$Lambda$3560.0x00007f81601e4bb8::compare(Object, Object) -> int
fifo write: @1699477104086635583 0x7f81e99c2bd0 1275: java.util.Comparator::lambda$thenComparing$36697e65$1(java.util.Comparator, Object, Object) -> int
fifo write: @1699477104087366672 0x7f81e2259294 280: aqv::d(Object) -> int
fifo write: @1699477104087612535 0x7f81e22589b4 842: aqv::g(int) -> int
fifo write: @1699477104087706257 0x7f81e22579c2 1776: aqv::a(Object, int) -> void
fifo write: @1699477104088847691 0x7f81e99c3c73 716: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::addTo(int, int) -> int
fifo write: @1699477104089031604 0x7f81e2257494 111: aqv::c(Object) -> int
fifo write: @1699477104089068294 0x7f81e2256f19 328: aqv::d() -> int
fifo write: @1699477104089150505 0x7f81e2256af4 104: dho::b() -> int
fifo write: @1699477104089435219 0x7f81e22565b4 260: dho$$Lambda$7063.0x00007f8160b8a800::accept(Object) -> void
fifo write: @1699477104089849804 0x7f81e99c4870 727: dhy$$Lambda$7057.0x00007f8160b88b58::accept(int) -> void
fifo write: @1699477104090184829 0x7f81e99c5473 257: com.mojang.serialization.Codec$1::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104093664174 0x7f81e99c5b18 1571: asj::a(java.util.function.IntConsumer) -> void
fifo write: @1699477104094801428 0x7f81e99c6e1e 626: java.util.Spliterators$LongArraySpliterator::forEachRemaining(java.util.function.LongConsumer) -> void
fifo write: @1699477104096171376 0x7f81e99c764c 6: akq::k() -> ako
fifo write: @1699477104098065470 0x7f81e2554607 77647: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477104098815630 0x7f81e99c7a15 3438: com.mojang.serialization.codecs.OptionalFieldCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477104101726498 0x7f81e99ca9f3 28113: com.mojang.datafixers.types.templates.Product$ProductType$$Lambda$6122.0x00007f8160af0920::apply(Object) -> Object
fifo write: @1699477104101798319 0x7f81e99d9973 1064: java.util.Spliterators$LongArraySpliterator::forEachRemaining(java.util.function.LongConsumer) -> void
fifo write: @1699477104101839039 0x7f81e2255f14 137: it.unimi.dsi.fastutil.ints.AbstractInt2IntFunction::<init>() -> void
fifo write: @1699477104101875860 0x7f81e1ea2614 234: it.unimi.dsi.fastutil.ints.AbstractInt2IntMap::<init>() -> void
fifo write: @1699477104101947931 0x7f81e1ea1f34 616: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntrySet::<init>(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap, it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$1) -> void
fifo write: @1699477104102001001 0x7f81e1ea1914 522: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntrySet::<init>(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap) -> void
fifo write: @1699477104102034612 0x7f81e99da653 100: bfr::e() -> void
fifo write: @1699477104102067672 0x7f81e1ea1516 37: asj::<init>(int, int) -> void
fifo write: @1699477104102097772 0x7f81e99daa4c 3: eaa::a() -> boolean
fifo write: @1699477104102135363 0x7f81e1ea10f4 90: it.unimi.dsi.fastutil.longs.LongOpenHashSet::isEmpty() -> boolean
fifo write: @1699477104102174383 0x7f81e1ea0c94 107: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::size() -> int
fifo write: @1699477104102213104 0x7f81e1ea0694 401: it.unimi.dsi.fastutil.PriorityQueue::isEmpty() -> boolean
fifo write: @1699477104102242864 0x7f81e99dad57 35: bft$b::run() -> void
fifo write: @1699477104102307925 0x7f81e1e9fc60 1077: com.mojang.serialization.codecs.OptionalFieldCodec::<init>(String, com.mojang.serialization.Codec) -> void
fifo write: @1699477104102378186 0x7f81e1e9f110 1187: com.mojang.serialization.Codec::optionalField(String, com.mojang.serialization.Codec) -> com.mojang.serialization.MapCodec
fifo write: @1699477104102908843 0x7f81e1e9ec74 90: bfs::br() -> boolean
fifo write: @1699477104103168636 0x7f81e1e9e2b7 1049: net.minecraft.server.MinecraftServer::bf() -> boolean
fifo write: @1699477104103747724 0x7f81e99db059 151: com.mojang.serialization.MapCodec$3::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477104103934856 0x7f81e1851577 3811: com.mojang.serialization.Codec::comapFlatMap(java.util.function.Function, java.util.function.Function) -> com.mojang.serialization.Codec
fifo write: @1699477104104854148 0x7f81e1e9db3e 562: dhu::a(java.util.function.Predicate) -> boolean
fifo write: @1699477104105020300 0x7f81e1e9d714 47: java.util.RegularEnumSet$EnumSetIterator::next() -> Object
fifo write: @1699477104105157622 0x7f81e1e9d034 451: java.util.RegularEnumSet$EnumSetIterator::next() -> Enum
fifo write: @1699477104105757520 0x7f81e1850e17 446: gw$a::<init>() -> void
fifo write: @1699477104105788960 0x7f81e1850897 341: gw$a::<init>(int, int, int) -> void
fifo write: @1699477104106809103 0x7f81e99db930 4957: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104106864884 0x7f81e184ffba 919: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::int2IntEntrySet() -> it.unimi.dsi.fastutil.ints.Int2IntMap$FastEntrySet
fifo write: @1699477104106894544 0x7f81e99df34c 11: dhf::a(boolean) -> void
fifo write: @1699477104107085887 0x7f81e184efbc 2025: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::<init>(int, float) -> void
fifo write: @1699477104107121187 0x7f81e99df64c 6: dia::j() -> dhk
fifo write: @1699477104107151888 0x7f81e99df94c 6: dhk::g() -> dhk$a
fifo write: @1699477104107325780 0x7f81e184ea14 230: com.mojang.datafixers.Products$P2::<init>(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> void
fifo write: @1699477104107392691 0x7f81e184e533 128: java.util.concurrent.locks.LockSupport::park(Object) -> void
fifo write: @1699477104108447174 0x7f81e184df94 275: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$$Lambda$183.0x00007f8160187418::<init>(com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder) -> void
fifo write: @1699477104108641427 0x7f81e184d994 320: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$$Lambda$184.0x00007f8160187660::<init>(com.mojang.serialization.codecs.RecordCodecBuilder$Instance, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder) -> void
fifo write: @1699477104108841050 0x7f81e184ce5a 1387: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$3::<init>(com.mojang.serialization.codecs.RecordCodecBuilder$Instance, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder) -> void
fifo write: @1699477104109047012 0x7f81e99dfc74 2231: bft$a::a() -> Object
fifo write: @1699477104109227505 0x7f81e2154597 6104: com.mojang.serialization.codecs.RecordCodecBuilder$Instance::ap2(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477104109405747 0x7f81e99e1295 2550: bfr::h() -> boolean
fifo write: @1699477104109720211 0x7f81e99e2cf4 2231: bft$a::d() -> Runnable
fifo write: @1699477104110491421 0x7f81e184c2d9 1164: qw::o(String) -> long[]
fifo write: @1699477104111421563 0x7f81e99e4335 2795: bfr::run() -> void
fifo write: @1699477104111467163 0x7f81e99e6173 320: qw::b(String, int) -> boolean
fifo write: @1699477104112067241 0x7f81e21537fd 1361: com.mojang.serialization.Codec::optionalFieldOf(String) -> com.mojang.serialization.MapCodec
fifo write: @1699477104112770550 0x7f81e99e6855 556: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477104115028959 0x7f81e1e9cb94 31: org.apache.logging.log4j.status.StatusLogger::isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, String, Object) -> boolean
fifo write: @1699477104115246292 0x7f81e90061cc 3: cpv::af() -> boolean
fifo write: @1699477104115484955 0x7f81e9005ecc 6: cpv::G_() -> hr
fifo write: @1699477104115564066 0x7f81e90059cc 6: dhf::n() -> it.unimi.dsi.fastutil.shorts.ShortList[]
fifo write: @1699477104115738669 0x7f81e2152afd 1605: dhf::a(short, int) -> void
fifo write: @1699477104115813330 0x7f81e91c8fd0 119: dhu::a(int) -> Object
fifo write: @1699477104116372617 0x7f81e2150cbf 4029: dhq::a_(gw) -> dfj
fifo write: @1699477104116412727 0x7f81e91c887c 195: cpx::f(int) -> int
fifo write: @1699477104116558869 0x7f81e99e70f0 407: cpx::e(int) -> int
fifo write: @1699477104117445370 0x7f81e9753446 430: dhf::a(it.unimi.dsi.fastutil.shorts.ShortList[], int) -> it.unimi.dsi.fastutil.shorts.ShortList
fifo write: @1699477104118723937 0x7f81e97530b1 110: org.apache.commons.lang3.Validate::inclusiveBetween(long, long, long) -> void
fifo write: @1699477104118814228 0x7f81e1513594 140: asz::<init>(int) -> void
fifo write: @1699477104119790060 0x7f81e9752d50 43: it.unimi.dsi.fastutil.objects.ObjectArrayList::isEmpty() -> boolean
fifo write: @1699477104119827731 0x7f81e1457a94 230: hq$$Lambda$1889.0x00007f8160601b28::<init>(hq, aev) -> void
fifo write: @1699477104120070464 0x7f81e9759a50 59: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::hasNext() -> boolean
fifo write: @1699477104120344647 0x7f81e214f367 3464: hq::f(aev) -> he$c
fifo write: @1699477104120677142 0x7f81e182fed4 1146: dks::<init>(dhf, dks$a) -> void
fifo write: @1699477104121238589 0x7f81e9758a05 1655: dhf::a(short, int) -> void
fifo write: @1699477104121319970 0x7f81e182f914 304: dhf::a(dks$a, long[]) -> void
fifo write: @1699477104121566933 0x7f81e184ba97 514: dib::a(Object) -> int
fifo write: @1699477104121663494 0x7f81e1953bd9 941: dhy::a(dhy$c, int) -> dhy$c
fifo write: @1699477104121708845 0x7f81e22ab97c 1555: dhy$a::a(hj, dhx, int) -> dhy$c
fifo write: @1699477104121753005 0x7f81e22aaac6 1437: dks::a(dhf, dks$a, long[]) -> void
fifo write: @1699477104121964738 0x7f81e9758453 256: asj::a(int) -> int
fifo write: @1699477104122142290 0x7f81e22a919a 3804: dhy::<init>(hj, Object, dhy$d) -> void
fifo write: @1699477104122691898 0x7f81e9881df3 720: dhy::a(int, int, int) -> Object
fifo write: @1699477104123862893 0x7f81e987f150 4606: dfl$$Lambda$519.0x00007f8160303a10::apply(Object) -> Object
fifo write: @1699477104124732064 0x7f81e9757bcc 6: dhk::h() -> java.util.EnumSet
fifo write: @1699477104124762564 0x7f81e1c11d14 234: java.util.AbstractQueue::<init>() -> void
fifo write: @1699477104124906776 0x7f81e987ec59 82: buf$$Lambda$7062.0x00007f8160b8a5b0::test(Object) -> boolean
fifo write: @1699477104125108079 0x7f81e987ddb0 1104: hq$$Lambda$1975.0x00007f8160615c20::apply(Object) -> Object
fifo write: @1699477104125160139 0x7f81e1c4f5e3 347: hq::t() -> hj
fifo write: @1699477104125194250 0x7f81e2342594 240: hq$1::<init>(hq) -> void
fifo write: @1699477104125376112 0x7f81e99e792d 919: hq::d(aew) -> com.mojang.serialization.DataResult
fifo write: @1699477104125432773 0x7f81e1ca0279 1583: bfo::x() -> boolean
fifo write: @1699477104125556525 0x7f81e1dd656a 337: com.mojang.datafixers.kinds.Kind1::group(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.Products$P2
fifo write: @1699477104125694606 0x7f81e99e8659 338: dhr$a::a(dfj, int) -> void
fifo write: @1699477104126067481 0x7f81e99e8dc2 489: java.util.stream.AbstractPipeline::<init>(java.util.Spliterator, int, boolean) -> void
fifo write: @1699477104126401135 0x7f81e1d5e997 5966: java.util.concurrent.ConcurrentLinkedQueue::peek() -> Object
fifo write: @1699477104126643969 0x7f81e22a6fe7 5149: dhr::<init>(hq) -> void
fifo write: @1699477104126762580 0x7f81e24b5934 39: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::<init>() -> void
fifo write: @1699477104127973336 0x7f81e99e94de 1317: com.mojang.serialization.codecs.KeyDispatchCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477104129021549 0x7f81e1e11814 340: com.mojang.serialization.Codec$4::<init>(com.mojang.serialization.Codec, com.mojang.serialization.Codec$ResultFunction) -> void
fifo write: @1699477104129086590 0x7f81e23d526a 447: com.mojang.serialization.Codec::mapResult(com.mojang.serialization.Codec$ResultFunction) -> com.mojang.serialization.Codec
fifo write: @1699477104129312403 0x7f81e99ea793 1784: dhq::a_(gw) -> dfj
fifo write: @1699477104131635453 0x7f81e99ebe53 500: com.google.common.collect.RegularImmutableSet::contains(Object) -> boolean
fifo write: @1699477104133251234 0x7f81e99ecaec 23429: com.mojang.datafixers.types.templates.Product$ProductType::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477104134330928 0x7f81e2030c1c 256: com.mojang.datafixers.Products$P2::apply(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477104134937956 0x7f81e2474d94 185: dhf$$Lambda$7077.0x00007f8160b8dde8::<init>(dhf) -> void
fifo write: @1699477104135170089 0x7f81e24643f7 1561: dhf::a(dks$a) -> dks
fifo write: @1699477104135445332 0x7f81e99f9e19 434: qw::p(String) -> qw
fifo write: @1699477104136484596 0x7f81e240fdb4 540: com.mojang.datafixers.Products$P2::apply(com.mojang.datafixers.kinds.Applicative, java.util.function.BiFunction) -> com.mojang.datafixers.kinds.App
fifo write: @1699477104136513786 0x7f81e99fa630 87: java.util.Spliterators::checkFromToBounds(int, int, int) -> void
fifo write: @1699477104136875521 0x7f81e24324b7 44: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::<init>(it.unimi.dsi.fastutil.Hash$Strategy) -> void
fifo write: @1699477104136967012 0x7f81e19533b4 475: it.unimi.dsi.fastutil.objects.ObjectArrayList::<init>(int) -> void
fifo write: @1699477104137109524 0x7f81e1bee277 1012: it.unimi.dsi.fastutil.objects.ObjectArrayList::initArrayFromCapacity(int) -> void
fifo write: @1699477104137163754 0x7f81e238d3bc 1951: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::<init>(int, float, it.unimi.dsi.fastutil.Hash$Strategy) -> void
fifo write: @1699477104137547639 0x7f81e99fa9f2 350: dhy$d$1::a(hj, int) -> dhy$a
fifo write: @1699477104137698831 0x7f81e170571e 865: dhf::a(hq, dhr[]) -> void
fifo write: @1699477104138359260 0x7f81e99fb052 229: dhy$d$2::a(hj, int) -> dhy$a
fifo write: @1699477104138437001 0x7f81e99fb555 648: com.mojang.serialization.DataResult::promotePartial(java.util.function.Consumer) -> com.mojang.serialization.DataResult
fifo write: @1699477104138553882 0x7f81e22a08f7 7825: com.mojang.serialization.Codec$4::toString() -> String
fifo write: @1699477104138844366 0x7f81e99fbe30 143: arw::e(int) -> int
fifo write: @1699477104139699437 0x7f81e2431b94 127: java.util.concurrent.CompletableFuture::join() -> Object
fifo write: @1699477104141034384 0x7f81e99fc290 1155: dhy$$Lambda$7058.0x00007f8160b89588::accept(Object) -> void
fifo write: @1699477104141566651 0x7f81e99fd3f3 361: dhy$d$$Lambda$7038.0x00007f8160b80ba0::create(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477104143653798 0x7f81e99fda50 87: com.mojang.serialization.DataResult::getOrThrow(boolean, java.util.function.Consumer) -> Object
fifo write: @1699477104145463252 0x7f81e99fded9 170: cpx::am() -> int
fifo write: @1699477104145928428 0x7f81e99fe44c 379: java.lang.invoke.LambdaForm$DMH.0x00007f81601a4400::newInvokeSpecial(Object, Object, int) -> Object
fifo write: @1699477104146361483 0x7f81e99fecc2 8205: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104146397184 0x7f81e2448294 240: com.mojang.serialization.MapCodec$MapCodecCodec::toString() -> String
fifo write: @1699477104146450444 0x7f81e9a038ee 602: dhy$$Lambda$7046.0x00007f8160b82da0::apply(Object, Object) -> Object
fifo write: @1699477104147696400 0x7f81e9a04097 961: dhy$d::b(hj, int) -> int
fifo write: @1699477104147721071 0x7f81e9a04c1d 25: arw::g(int) -> int
fifo write: @1699477104150692589 0x7f81e9a0524c 6: hl::a() -> hr$b
fifo write: @1699477104152754176 0x7f81e8bdb880 480: I2C/C2I adapters(0xbbbbebab)
fifo write: @1699477104152880057 0x7f81e8bdb580 504: I2C/C2I adapters(0xbbbbbebab)
fifo write: @1699477104153122890 0x7f81e8bdb280 504: I2C/C2I adapters(0xbbbbbbeba)
fifo write: @1699477104154188284 0x7f81e9a0644c 9: net.minecraft.server.MinecraftServer::aS() -> dzc
fifo write: @1699477104154220775 0x7f81e2431794 31: java.util.HashMap::putAll(java.util.Map) -> void
fifo write: @1699477104155861506 0x7f81e2447df4 90: it.unimi.dsi.fastutil.objects.ObjectArrayList::isEmpty() -> boolean
fifo write: @1699477104155918627 0x7f81e245bf74 159: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::hasNext() -> boolean
fifo write: @1699477104156646556 0x7f81e23bb637 2551: ri::a(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477104156711397 0x7f81e2426e57 2905: ri::getNumberValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104158242336 0x7f81e9a06a4c 6: dvy::b() -> hr
fifo write: @1699477104158293897 0x7f81e245bb94 31: aki$b::a() -> void
fifo write: @1699477104158355758 0x7f81e23e3b94 54: net.minecraft.server.MinecraftServer::x() -> boolean
fifo write: @1699477104158488249 0x7f81e23e3714 213: bdp::d(String) -> void
fifo write: @1699477104158591921 0x7f81e23f0bd4 1042: qw::q(String) -> boolean
fifo write: @1699477104159129807 0x7f81e9a0704c 3: re::f() -> long
fifo write: @1699477104159178468 0x7f81e9a0734c 9: akq::n() -> net.minecraft.server.MinecraftServer
fifo write: @1699477104159286469 0x7f81e9a07684 992: bft$a::a(Object) -> boolean
fifo write: @1699477104159379161 0x7f81e9a0835a 978: bft$a::a(bft$b) -> boolean
fifo write: @1699477104159583223 0x7f81e2484777 1258: eix::<init>() -> void
fifo write: @1699477104159705515 0x7f81e2428974 2283: net.minecraft.server.MinecraftServer::bg() -> boolean
fifo write: @1699477104159821096 0x7f81e2404b39 680: java.util.concurrent.CompletableFuture$UniExceptionally::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104160453044 0x7f81e23e3294 119: net.minecraft.server.MinecraftServer::bC() -> boolean
fifo write: @1699477104160522515 0x7f81e2404614 282: net.minecraft.server.MinecraftServer$$Lambda$7037.0x00007f8160b7ebc8::getAsBoolean() -> boolean
fifo write: @1699477104160869750 0x7f81e23c1aef 6331: eiy::a(rc, java.util.function.Function, cpc, java.util.function.Consumer) -> void
fifo write: @1699477104161082222 0x7f81e23be44a 7305: dio::a(cpc, com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477104161463077 0x7f81e1e000c7 9283: java.util.concurrent.CompletableFuture::uniExceptionally(Object, java.util.function.Function, java.util.concurrent.CompletableFuture$UniExceptionally) -> boolean
fifo write: @1699477104161585379 0x7f81e22a4e63 5182: java.lang.invoke.LambdaForm$MH.0x00007f81600dac00::invoke(Object, Object, Object, Object) -> Object
fifo write: @1699477104161660370 0x7f81e24842f4 90: akb::b() -> boolean
fifo write: @1699477104161813392 0x7f81e9a08ffc 608: com.mojang.serialization.codecs.PairMapCodec::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477104162049945 0x7f81e22a4874 90: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::isEmpty() -> boolean
fifo write: @1699477104162256408 0x7f81e2403e39 619: java.util.concurrent.CompletableFuture::postFire(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104162331739 0x7f81e23bdb94 417: java.util.concurrent.CompletableFuture$CoCompletion::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104163783987 0x7f81e9a099cc 9: net.minecraft.server.MinecraftServer::aT() -> ecm
fifo write: @1699477104163815998 0x7f81e9a09ccc 6: eck::A() -> dlq
fifo write: @1699477104163971800 0x7f81e23bd774 90: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477104164870861 0x7f81e9a09fcc 3: dlq::b() -> long
fifo write: @1699477104165508340 0x7f81e23bd314 240: com.mojang.serialization.Codec$1::toString() -> String
fifo write: @1699477104165554510 0x7f81e23bcc94 31: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::next() -> Object
fifo write: @1699477104165667602 0x7f81e248bf94 243: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap, int) -> void
fifo write: @1699477104165710572 0x7f81e248bb14 114: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry::getLongKey() -> long
fifo write: @1699477104165773523 0x7f81e248b3b4 687: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::next() -> it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry
fifo write: @1699477104165814043 0x7f81e248ae17 229: eaa::a(dzx, long) -> dhl
fifo write: @1699477104165873744 0x7f81e23dee74 1508: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477104165931995 0x7f81e1c14794 2210: dzx::c(long) -> dhl
fifo write: @1699477104165968365 0x7f81e24233b7 806: eaa::b(long) -> boolean
fifo write: @1699477104166005826 0x7f81e1c14014 537: eaa::a(long, boolean) -> dhl
fifo write: @1699477104166242109 0x7f81e9a0a654 2426: com.mojang.serialization.codecs.PairMapCodec$$Lambda$4002.0x00007f816083f680::apply(Object) -> Object
fifo write: @1699477104168419867 0x7f81e9a0c04c 3: dis::g() -> boolean
fifo write: @1699477104169514431 0x7f81e23de714 243: bft$c::b() -> boolean
fifo write: @1699477104169551052 0x7f81e2422e94 248: java.util.concurrent.ConcurrentLinkedQueue::isEmpty() -> boolean
fifo write: @1699477104169821335 0x7f81e2422734 706: rb::l() -> Number
fifo write: @1699477104170349392 0x7f81e1dfd297 6278: java.util.concurrent.ConcurrentLinkedQueue::first() -> java.util.concurrent.ConcurrentLinkedQueue$Node
fifo write: @1699477104170718757 0x7f81e9a0c34c 6: ako::a() -> akt
fifo write: @1699477104171529497 0x7f81e2422197 36: java.util.concurrent.CompletableFuture::thenAccept(java.util.function.Consumer) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104171660429 0x7f81e1dfcbf7 250: ac::a(Object, java.util.function.Consumer) -> Object
fifo write: @1699477104171902432 0x7f81e1dfc434 588: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::next() -> Object
fifo write: @1699477104171963173 0x7f81e247c43a 2470: dhk::a(String) -> dhk
fifo write: @1699477104172315127 0x7f81e1dfbc34 709: dhf::a() -> int
fifo write: @1699477104172599681 0x7f81e229ef30 3330: java.util.concurrent.CompletableFuture::andTree(java.util.concurrent.CompletableFuture[], int, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104173695605 0x7f81e22f8b26 1512: java.util.concurrent.CompletableFuture::bipush(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture$BiCompletion) -> void
fifo write: @1699477104174112731 0x7f81e9a0c64c 6: qt::e() -> byte[]
fifo write: @1699477104175162084 0x7f81e213397f 5276: akb::a() -> java.util.stream.Stream
fifo write: @1699477104175734852 0x7f81e9a0cdb4 9024: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104175770662 0x7f81e9a12d4c 2: it.unimi.dsi.fastutil.longs.LongOpenHashSet::size() -> int
fifo write: @1699477104176102706 0x7f81e9a13095 2617: bfr::h() -> boolean
fifo write: @1699477104176948957 0x7f81e2131557 5440: com.mojang.serialization.Decoder$5::toString() -> String
fifo write: @1699477104177187350 0x7f81e212f1b7 5272: com.mojang.serialization.codecs.RecordCodecBuilder$2::toString() -> String
fifo write: @1699477104179061484 0x7f81e1dfb614 31: java.util.RegularEnumSet::size() -> int
fifo write: @1699477104180938609 0x7f81e229e7f4 237: java.util.Arrays::fill(double[], double) -> void
fifo write: @1699477104181324164 0x7f81e9a14c37 5681: bfr::i() -> void
fifo write: @1699477104181357494 0x7f81e247bd14 240: bft$c::a() -> Object
fifo write: @1699477104181388205 0x7f81e22f8614 243: bft$c::a(Object) -> boolean
fifo write: @1699477104181419135 0x7f81e9a18cd0 51: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::hasNext() -> boolean
fifo write: @1699477104181950052 0x7f81e9a18fef 96: aew::a(String) -> aew
fifo write: @1699477104182211625 0x7f81e22f8079 449: java.lang.invoke.LambdaForm$MH.0x00007f8160228c00::linkToTargetMethod(Object, long, Object) -> Object
fifo write: @1699477104182264246 0x7f81e212e3f9 1275: bfr::i() -> void
fifo write: @1699477104182593490 0x7f81e212d9b6 1172: java.lang.invoke.LambdaForm$DMH.0x00007f8160228800::newInvokeSpecial(Object, Object, long) -> Object
fifo write: @1699477104182742882 0x7f81e22f7b94 185: bfq$$Lambda$5369.0x00007f8160a45000::<init>(java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477104183145357 0x7f81e2160537 2520: bfq::b(java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104183332700 0x7f81e212cdf4 1262: akc::b(bfq) -> akb
fifo write: @1699477104183463901 0x7f81e215ed17 3163: bfq$$Lambda$5369.0x00007f8160a45000::accept(Object) -> void
fifo write: @1699477104183604693 0x7f81e9a193d5 466: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::get(long) -> Object
fifo write: @1699477104184009178 0x7f81e215da57 2390: java.util.concurrent.CompletableFuture::completeNull() -> boolean
fifo write: @1699477104184119210 0x7f81e9a19bd1 134: Math::ceil(double) -> double
fifo write: @1699477104184187671 0x7f81e215d494 234: akc$a::<init>(java.util.function.Function, long, java.util.function.IntSupplier) -> void
fifo write: @1699477104184232791 0x7f81e212c914 185: akc$$Lambda$7107.0x00007f8160a61c08::<init>(Runnable) -> void
fifo write: @1699477104184274802 0x7f81e215cf14 275: akt$$Lambda$7106.0x00007f8160a619e0::<init>(akt, akt$a, Runnable) -> void
fifo write: @1699477104184309152 0x7f81e215c999 372: akc$$Lambda$5372.0x00007f8160a45b88::accept(Object) -> void
fifo write: @1699477104184341953 0x7f81e215c51c 109: akc::a(bfq, boolean, akc$a) -> void
fifo write: @1699477104184427754 0x7f81e215b7be 1659: akc::a(Runnable, long, java.util.function.IntSupplier) -> akc$a
fifo write: @1699477104184569976 0x7f81e215b0b4 430: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::remove() -> void
fifo write: @1699477104184633406 0x7f81e215a9cf 689: java.lang.invoke.LambdaForm$MH.0x00007f8160ae4800::linkToTargetMethod(Object, Object, Object, long, Object, int, Object) -> Object
fifo write: @1699477104184823199 0x7f81e9a1a0f3 2888: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntrySet::forEach(java.util.function.Consumer) -> void
fifo write: @1699477104184887820 0x7f81e2159d08 1600: java.lang.invoke.LambdaForm$DMH.0x00007f8160ae5000::newInvokeSpecial(Object, Object, Object, Object, long, Object, int) -> Object
fifo write: @1699477104184941960 0x7f81e2158e1f 1760: akt::a(int, int, java.util.function.IntSupplier, akt$a, Runnable) -> void
fifo write: @1699477104184970561 0x7f81e9a1c7d0 183: bfr::f() -> boolean
fifo write: @1699477104185001671 0x7f81e2158914 125: akc$$Lambda$7108.0x00007f8160a5a000::run() -> void
fifo write: @1699477104185191604 0x7f81e2157637 2888: akc::a(bfq, java.util.function.Function, long, java.util.function.IntSupplier, boolean) -> void
fifo write: @1699477104185233214 0x7f81e1872b74 1612: akb::a(java.util.Optional, long, int) -> void
fifo write: @1699477104185277575 0x7f81e1871dbe 1376: it.unimi.dsi.fastutil.objects.ObjectArrayList::remove(int) -> Object
fifo write: @1699477104185348026 0x7f81e9a1d09d 2118: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477104185406106 0x7f81e1870dd6 1786: akc::a(bfq, java.util.function.IntSupplier, long, java.util.function.Function, boolean) -> void
fifo write: @1699477104185665290 0x7f81e186fcbf 2235: dzw::<init>(cpx) -> void
fifo write: @1699477104185877942 0x7f81e9a1ed53 106: com.mojang.serialization.codecs.PairMapCodec$$Lambda$4005.0x00007f816083fd30::apply(Object) -> Object
fifo write: @1699477104186179386 0x7f81e9a1f152 125: java.util.concurrent.ForkJoinTask::compareAndSetForkJoinTaskTag(short, short) -> boolean
fifo write: @1699477104186231417 0x7f81e9a1f550 83: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry::getLongKey() -> long
fifo write: @1699477104186428270 0x7f81e186d24f 6492: dhf::<init>(cpc, did, cpx, hq, long, dhr[], dlv) -> void
fifo write: @1699477104187011447 0x7f81e186c75e 1056: java.util.concurrent.CompletableFuture::unipush(java.util.concurrent.CompletableFuture$Completion) -> void
fifo write: @1699477104187546104 0x7f81e186c194 275: akc$$Lambda$7113.0x00007f8160a5ad68::<init>(akc, akb, bfq) -> void
fifo write: @1699477104187575204 0x7f81e2157094 109: akc$$Lambda$7113.0x00007f8160a5ad68::run() -> void
fifo write: @1699477104188210253 0x7f81e18691df 7049: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477104188253253 0x7f81e18685de 945: dho::a(java.util.function.Predicate) -> boolean
fifo write: @1699477104188621658 0x7f81e25735af 4945: akc::b(akb, bfq) -> void
fifo write: @1699477104189451019 0x7f81e9a1fc2a 665: java.util.concurrent.CompletableFuture::complete(Object) -> boolean
fifo write: @1699477104189834264 0x7f81e1868114 185: akt$$Lambda$7112.0x00007f8160a5ab40::<init>(hw) -> void
fifo write: @1699477104189880504 0x7f81e1867b14 320: akt$$Lambda$7111.0x00007f8160a5a918::<init>(akt, cqe, hw, dhl) -> void
fifo write: @1699477104189947655 0x7f81e1866fd9 1164: qw::m(String) -> byte[]
fifo write: @1699477104189982435 0x7f81e25755f7 1023: dhl::<init>(byte[]) -> void
fifo write: @1699477104190063447 0x7f81e1866a94 139: akt$$Lambda$7109.0x00007f8160a5a228::getAsInt() -> int
fifo write: @1699477104190513682 0x7f81e2576127 3545: akt::a(cqe, hw, dhl) -> void
fifo write: @1699477104190549203 0x7f81e2577914 31: akt::b(cqe, hw, dhl) -> void
fifo write: @1699477104190581523 0x7f81e2577d14 212: akt$$Lambda$7111.0x00007f8160a5a918::run() -> void
fifo write: @1699477104190611664 0x7f81e2578214 224: ead::a(long, dhl) -> void
fifo write: @1699477104190751415 0x7f81e25786ef 198: it.unimi.dsi.fastutil.longs.LongOpenHashSet::iterator() -> it.unimi.dsi.fastutil.longs.LongIterator
fifo write: @1699477104190799706 0x7f81e2578b94 428: it.unimi.dsi.fastutil.longs.Long2ObjectFunctions$SynchronizedFunction::put(long, Object) -> Object
fifo write: @1699477104190854827 0x7f81e2579214 31: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.longs.LongOpenHashSet, it.unimi.dsi.fastutil.longs.LongOpenHashSet$1) -> void
fifo write: @1699477104190886567 0x7f81e2579634 563: eaa::a(long, dhl) -> void
fifo write: @1699477104190930938 0x7f81e2579d14 280: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.longs.LongOpenHashSet) -> void
fifo write: @1699477104191038369 0x7f81e257a33c 2972: eab::a(cqe, hw, dhl) -> void
fifo write: @1699477104191999852 0x7f81e9a207c0 12391: dhy::a(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477104193469931 0x7f81e9a277e1 6899: bfr::a(Object) -> void
fifo write: @1699477104194581125 0x7f81e9a2c4aa 2014: java.util.HashMap::removeNode(int, Object, Object, boolean, boolean) -> java.util.HashMap$Node
fifo write: @1699477104195176543 0x7f81e9a2d860 95: bfr::a(it.unimi.dsi.fastutil.ints.Int2BooleanFunction) -> int
fifo write: @1699477104195402905 0x7f81e257b714 340: arf$3::<init>(java.util.function.Function, java.util.function.Function) -> void
fifo write: @1699477104195468616 0x7f81e257bc1d 716: arf::a(com.mojang.serialization.Codec, java.util.function.Function, java.util.function.Function) -> com.mojang.serialization.Codec
fifo write: @1699477104195683979 0x7f81e9a2dc6e 910: java.util.concurrent.ConcurrentLinkedQueue::offer(Object) -> boolean
fifo write: @1699477104196132295 0x7f81e9a2e7f6 773: dzx::c(long) -> dhl
fifo write: @1699477104196187726 0x7f81e9a2f353 260: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477104196229616 0x7f81e9a2f9cc 6: java.nio.DirectByteBuffer::attachment() -> Object
fifo write: @1699477104196306217 0x7f81e9a2fcf3 156: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap, int) -> void
fifo write: @1699477104196422339 0x7f81e9a302cb 3538: dhy::<init>(hj, dhy$d, dhy$a, aqp, java.util.List) -> void
fifo write: @1699477104196907305 0x7f81e257c67f 10303: eaa::a(ead) -> void
fifo write: @1699477104197195259 0x7f81e25808f4 1536: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::removeFirst() -> Object
fifo write: @1699477104197322640 0x7f81e9a320d0 119: java.nio.DirectIntBufferS::get(int) -> int
fifo write: @1699477104197673875 0x7f81e9a325f3 2832: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntrySet::forEach(java.util.function.Consumer) -> void
fifo write: @1699477104198678228 0x7f81e25817b7 2124: akc::a(akb, bfq) -> void
fifo write: @1699477104198742909 0x7f81e2582886 1153: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2ObjectFunction) -> Object
fifo write: @1699477104198786919 0x7f81e25833b7 553: akb$$Lambda$7117.0x00007f8160a5b640::apply(Object) -> Object
fifo write: @1699477104198913251 0x7f81e2583a14 339: akc$$Lambda$7108.0x00007f8160a5a000::<init>(akc, bfq, java.util.function.IntSupplier, long, java.util.function.Function, boolean) -> void
fifo write: @1699477104199027012 0x7f81e9a34b6a 750: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::next() -> it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry
fifo write: @1699477104199135334 0x7f81e9a355f0 847: eaa::b(long) -> boolean
fifo write: @1699477104199191124 0x7f81e2584094 189: akb$$Lambda$7118.0x00007f8160a5b880::<init>(akb, long) -> void
fifo write: @1699477104199250515 0x7f81e2584514 185: akc$$Lambda$7119.0x00007f8160a5baa8::<init>(bfq) -> void
fifo write: @1699477104199322146 0x7f81e2584994 513: akc$$Lambda$7119.0x00007f8160a5baa8::apply(Object) -> Object
fifo write: @1699477104199451778 0x7f81e2585057 2862: akc$$Lambda$7115.0x00007f8160a5b1d8::apply(Object) -> Object
fifo write: @1699477104199551209 0x7f81e25863a7 2500: akc::a(bfq, com.mojang.datafixers.util.Either) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104199640920 0x7f81e25874f7 1798: akc$$Lambda$7107.0x00007f8160a61c08::apply(Object) -> Object
fifo write: @1699477104199708191 0x7f81e2588294 230: akc$$Lambda$7121.0x00007f8160a69000::<init>(Runnable, bfq) -> void
fifo write: @1699477104199817862 0x7f81e9a3626a 750: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::next() -> Object
fifo write: @1699477104199854803 0x7f81e25887b4 542: akc$$Lambda$7121.0x00007f8160a69000::run() -> void
fifo write: @1699477104199897533 0x7f81e2588df4 429: akc::b(Runnable, bfq) -> void
fifo write: @1699477104199967704 0x7f81e25893b7 1316: akc::a(Runnable, bfq) -> Runnable
fifo write: @1699477104200064796 0x7f81e2589fb7 4281: akb$$Lambda$7114.0x00007f8160a5af90::apply(Object) -> Object
fifo write: @1699477104200140337 0x7f81e258bd37 3954: akb::a(long, java.util.Optional) -> com.mojang.datafixers.util.Either
fifo write: @1699477104200185337 0x7f81e9a36cf0 275: dfk$$Lambda$531.0x00007f816030a408::apply(Object) -> Object
fifo write: @1699477104200224748 0x7f81e258d85d 967: akt::a(akt$a, Runnable) -> void
fifo write: @1699477104200319319 0x7f81e258e257 1107: akt$$Lambda$7106.0x00007f8160a619e0::run() -> void
fifo write: @1699477104201213970 0x7f81e9a37390 1165: dgm$$Lambda$478.0x00007f816028eb88::apply(Object) -> Object
fifo write: @1699477104201259881 0x7f81e9a38200 509: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::insert(int, long, Object) -> void
fifo write: @1699477104202618648 0x7f81e9a38959 90: dhf::b(int) -> dhr
fifo write: @1699477104202914622 0x7f81e9a38d31 1618: com.mojang.serialization.MapCodec$5::apply(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477104203718312 0x7f81e258ef77 7642: com.mojang.serialization.codecs.OptionalFieldCodec::toString() -> String
fifo write: @1699477104203780963 0x7f81e9a3a4ba 1335: dhy::a(dhy$c, int) -> dhy$c
fifo write: @1699477104204638494 0x7f81e2591f54 1743: ead::J_() -> boolean
fifo write: @1699477104205243622 0x7f81e9a3b798 8440: bfr::run() -> void
fifo write: @1699477104205305262 0x7f81e9a412f0 799: dhr::a(int, int, int) -> dfj
fifo write: @1699477104205501335 0x7f81e2592fb7 5259: com.mojang.serialization.codecs.ListCodec::toString() -> String
fifo write: @1699477104205882990 0x7f81e25953d7 9674: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$3::toString() -> String
fifo write: @1699477104206010362 0x7f81e9a42030 1355: dia::a_(gw) -> dfj
fifo write: @1699477104207343499 0x7f81e2598fea 106: dhf::c(dks$a) -> dks
fifo write: @1699477104207420070 0x7f81e2599414 551: dhf$$Lambda$7077.0x00007f8160b8dde8::apply(Object) -> Object
fifo write: @1699477104207855225 0x7f81e9a43599 490: qw::f(String) -> byte
fifo write: @1699477104208843148 0x7f81e259a0b7 19655: aev::toString() -> String
fifo write: @1699477104211667035 0x7f81e25a14f7 7825: arf$3::toString() -> String
fifo write: @1699477104211915678 0x7f81e9a4415d 346: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::find(long) -> int
fifo write: @1699477104213188744 0x7f81e25a45ba 944: java.util.PriorityQueue::<init>(int, java.util.Comparator) -> void
fifo write: @1699477104213292496 0x7f81e25a4e3a 689: java.util.PriorityQueue::<init>(java.util.Comparator) -> void
fifo write: @1699477104213711051 0x7f81e25a5574 90: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::hasNext() -> boolean
fifo write: @1699477104213753612 0x7f81e25a5994 135: it.unimi.dsi.fastutil.longs.LongOpenHashSet::clear() -> void
fifo write: @1699477104214185277 0x7f81e25a5e74 589: cpc::a(gw) -> long
fifo write: @1699477104214249078 0x7f81e9a4484c 6: eiz::b() -> gw
fifo write: @1699477104214294669 0x7f81e25a6557 1383: eiy$$Lambda$7080.0x00007f8160b926f8::accept(Object) -> void
fifo write: @1699477104214323469 0x7f81e9a44b4c 6: eiz::a() -> Object
fifo write: @1699477104214368730 0x7f81e25a7097 997: eiy::a(long, java.util.function.Consumer, eiy) -> void
fifo write: @1699477104214661663 0x7f81e25a7ade 2682: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::add(Object) -> boolean
fifo write: @1699477104214765105 0x7f81e25a8f54 205: akc::a(int) -> java.util.concurrent.CompletableFuture[]
fifo write: @1699477104214811595 0x7f81e25a9394 296: akc$$Lambda$7116.0x00007f8160a5b420::apply(int) -> Object
fifo write: @1699477104214863626 0x7f81e25a9817 671: akb::d(long) -> java.util.List
fifo write: @1699477104214919877 0x7f81e25a9f37 762: akb$$Lambda$7110.0x00007f8160a5a448::get(long) -> Object
fifo write: @1699477104214966727 0x7f81e25aa714 31: akc::a(akb, bfq, Void) -> void
fifo write: @1699477104215004578 0x7f81e25aab14 453: akc$$Lambda$7122.0x00007f8160a69228::accept(Object) -> void
fifo write: @1699477104215045868 0x7f81e25ab114 185: eiu$$Lambda$7100.0x00007f8160a60240::<init>(com.google.common.collect.ImmutableList$Builder) -> void
fifo write: @1699477104215151860 0x7f81e9a44e4c 6: dhf::f() -> cpc
fifo write: @1699477104215216690 0x7f81e9a45154 267: rc::a(int) -> qw
fifo write: @1699477104215257611 0x7f81e25ab594 529: dig::a(qw, String) -> rc
fifo write: @1699477104215283961 0x7f81e9a4574c 6: dhq::F() -> cpv
fifo write: @1699477104215368032 0x7f81e9a45a4c 6: dhf::t() -> dlv
fifo write: @1699477104215532365 0x7f81e25abd7f 3019: eiu::<init>(java.util.List) -> void
fifo write: @1699477104215588805 0x7f81e25ad294 421: java.util.concurrent.CompletableFuture$Signaller::<init>(boolean, long, long) -> void
fifo write: @1699477104215644696 0x7f81e25ad8be 492: java.util.concurrent.CompletableFuture$Signaller::block() -> boolean
fifo write: @1699477104215815428 0x7f81e25adf94 424: java.util.concurrent.CompletableFuture$Signaller::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104215989850 0x7f81e25ae5b7 2467: eiu::a(rc, java.util.function.Function, cpc) -> eiu
fifo write: @1699477104216183433 0x7f81e9a45d78 1077: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::put(long, Object) -> Object
fifo write: @1699477104216287034 0x7f81e25af8f8 1137: it.unimi.dsi.fastutil.objects.AbstractObjectList::ensureIndex(int) -> void
fifo write: @1699477104216404366 0x7f81e25b08c6 7923: java.util.concurrent.CompletableFuture$UniAccept::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104217032964 0x7f81e9a46b6e 69: hw::a(cpc, int) -> hw
fifo write: @1699477104218680155 0x7f81e9a46f8c 1067: dgm$a::<init>(dgm, Comparable) -> void
fifo write: @1699477104218985429 0x7f81e9a47c6f 917: java.util.concurrent.ConcurrentLinkedQueue::add(Object) -> boolean
fifo write: @1699477104219536766 0x7f81e9a487f0 1292: dgm$$Lambda$480.0x00007f816028f228::apply(Object) -> Object
fifo write: @1699477104220378747 0x7f81e9a496d6 237: dib::a(Object) -> int
fifo write: @1699477104224207407 0x7f81e9a49d12 7489: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104224278637 0x7f81e25b3fbc 2025: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::<init>(int, float) -> void
fifo write: @1699477104224614932 0x7f81e9a4df5c 18: dhy$$Lambda$7042.0x00007f8160b82278::read(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477104225050797 0x7f81e9a4e259 46: dhy$$Lambda$7054.0x00007f8160b873d0::apply(Object) -> Object
fifo write: @1699477104225414182 0x7f81e9a4e87c 3895: dhy::<init>(hj, Object, dhy$d) -> void
fifo write: @1699477104226256143 0x7f81e9a50c54 267: rc::b(int) -> rc
fifo write: @1699477104227755192 0x7f81e25b4fb4 729: dzx::c() -> void
fifo write: @1699477104229372283 0x7f81e25b57f9 1903: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477104230237444 0x7f81e9a512b5 1798: dhy$$Lambda$7049.0x00007f8160b86000::read(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477104230487688 0x7f81e25b6794 185: aeo::<init>(com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477104230532578 0x7f81e25b6c4a 431: aeu::a(com.mojang.serialization.DynamicOps, aeu$b) -> aeu
fifo write: @1699477104230571809 0x7f81e25b7294 324: aeu::<init>(com.mojang.serialization.DynamicOps, aeu$b) -> void
fifo write: @1699477104230972664 0x7f81e25b7926 3523: java.util.concurrent.CompletableFuture::waitingGet(boolean) -> Object
fifo write: @1699477104231005724 0x7f81e25b9314 185: hq$$Lambda$1975.0x00007f8160615c20::<init>(hq) -> void
fifo write: @1699477104231037785 0x7f81e25b9794 185: hq$$Lambda$1976.0x00007f8160615e68::<init>(hq) -> void
fifo write: @1699477104231069805 0x7f81e25b9c14 185: hq$$Lambda$1978.0x00007f81606162f8::<init>(hq) -> void
fifo write: @1699477104231101686 0x7f81e25ba094 185: hq$$Lambda$1977.0x00007f81606160b0::<init>(hq) -> void
fifo write: @1699477104231309808 0x7f81e9a52b74 1547: com.mojang.serialization.Codec$12$$Lambda$3814.0x00007f8160815450::apply(Object) -> Object
fifo write: @1699477104232580695 0x7f81e25ba83f 9801: hq::r() -> com.mojang.serialization.Codec
fifo write: @1699477104232682886 0x7f81e9a540d9 1554: dio::d(long) -> java.util.Optional
fifo write: @1699477104233193913 0x7f81e25be534 690: it.unimi.dsi.fastutil.objects.AbstractObjectList::iterator() -> it.unimi.dsi.fastutil.objects.ObjectListIterator
fifo write: @1699477104233244503 0x7f81e25bec94 253: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::<init>(it.unimi.dsi.fastutil.objects.ObjectArrayList, int) -> void
fifo write: @1699477104233294954 0x7f81e25bf1b4 722: it.unimi.dsi.fastutil.objects.AbstractObjectList::listIterator() -> it.unimi.dsi.fastutil.objects.ObjectListIterator
fifo write: @1699477104233342124 0x7f81e25bf994 637: it.unimi.dsi.fastutil.objects.ObjectArrayList::listIterator(int) -> it.unimi.dsi.fastutil.objects.ObjectListIterator
fifo write: @1699477104235970598 0x7f81e25c0099 914: java.util.concurrent.ForkJoinPool::unmanagedBlock(java.util.concurrent.ForkJoinPool$ManagedBlocker) -> void
fifo write: @1699477104236306473 0x7f81e9a5576a 2153: buf::a(hw, dhr) -> void
fifo write: @1699477104237787792 0x7f81e9a574f6 447: java.util.concurrent.ForkJoinPool::signalWork() -> void
fifo write: @1699477104237933024 0x7f81e9a57d79 1154: java.util.concurrent.ForkJoinPool$WorkQueue::nextLocalTask(int) -> java.util.concurrent.ForkJoinTask
fifo write: @1699477104239468584 0x7f81e25c0914 175: java.util.concurrent.CompletableFuture$Completion::run() -> void
fifo write: @1699477104240109552 0x7f81e9a58b70 55: csv$$Lambda$505.0x00007f81602fd7a8::apply(Object) -> Object
fifo write: @1699477104240190873 0x7f81e9a58ed0 151: dfk$$Lambda$507.0x00007f81602f8d80::get() -> Object
fifo write: @1699477104240986463 0x7f81e9a59359 700: java.util.concurrent.CompletableFuture::postFire(java.util.concurrent.CompletableFuture, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104241186706 0x7f81e9a59e35 2034: java.util.concurrent.ForkJoinTask::doExec() -> int
fifo write: @1699477104245592342 0x7f81e9a5bbfb 28489: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477104245649243 0x7f81e25c0d74 111: net.minecraft.server.MinecraftServer::aU() -> hr$b
fifo write: @1699477104245687113 0x7f81e25c11b7 679: aeu$1::<init>(aeu$b) -> void
fifo write: @1699477104245716113 0x7f81e25c1914 240: aeu$2::<init>(hg$b) -> void
fifo write: @1699477104245753154 0x7f81e25c1ded 793: aeu::a(aeu$b) -> aeu$b
fifo write: @1699477104245804975 0x7f81e25c265d 1957: aeu::a(com.mojang.serialization.DynamicOps, hg$b) -> aeu
fifo write: @1699477104245829955 0x7f81e25c3514 31: akw::a() -> void
fifo write: @1699477104245854395 0x7f81e25c3914 31: aki$a::a(int) -> int
fifo write: @1699477104245881406 0x7f81e25c3d14 295: aka::g() -> boolean
fifo write: @1699477104245924456 0x7f81e25c4294 230: dhy$$Lambda$7043.0x00007f8160b82498::<init>(com.mojang.serialization.Codec, Object) -> void
fifo write: @1699477104245973717 0x7f81e25c4794 348: dhy$$Lambda$7043.0x00007f8160b82498::apply(Object) -> Object
fifo write: @1699477104246027507 0x7f81e25c4dbc 3405: aki$c::a() -> void
fifo write: @1699477104246104598 0x7f81e25c698e 4410: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477104246162859 0x7f81e25c8ade 1140: bfo::c(java.util.function.BooleanSupplier) -> void
fifo write: @1699477104246189260 0x7f81e25c961e 390: bfo::bp() -> void
fifo write: @1699477104246216260 0x7f81e25c9b94 213: ako::b() -> int
fifo write: @1699477104246308211 0x7f81e25ca347 8004: aki::a(aka) -> boolean
fifo write: @1699477104246332791 0x7f81e25cd974 87: aka::h() -> int
fifo write: @1699477104246425013 0x7f81e25cdf05 4926: dhy::a(com.mojang.serialization.Codec, Object, com.mojang.serialization.codecs.RecordCodecBuilder$Instance) -> com.mojang.datafixers.kinds.App
fifo write: @1699477104246468133 0x7f81e25cfe94 185: net.minecraft.server.MinecraftServer$$Lambda$7037.0x00007f8160b7ebc8::<init>(net.minecraft.server.MinecraftServer) -> void
fifo write: @1699477104246501684 0x7f81e25d0334 494: java.util.AbstractQueue::remove() -> Object
fifo write: @1699477104246538934 0x7f81e25d0954 1264: ako$b::d(Runnable) -> void
fifo write: @1699477104246570924 0x7f81e214b574 70: net.minecraft.server.MinecraftServer::aX() -> ant
fifo write: @1699477104246622005 0x7f81e25d1414 369: dvy::<init>(ant, hr, dzc) -> void
fifo write: @1699477104246660716 0x7f81e25d1a9c 1983: net.minecraft.server.MinecraftServer::u_() -> void
fifo write: @1699477104246695246 0x7f81e25d29b4 577: aka::a(cpc, dhk$a) -> byte
fifo write: @1699477104246847338 0x7f81e25d348f 12371: dhy::a(hj, com.mojang.serialization.Codec, dhy$d, Object, dhz$b) -> com.mojang.serialization.Codec
fifo write: @1699477104246881308 0x7f81e25d7f79 998: ako::s() -> boolean
fifo write: @1699477104247507137 0x7f81e9a6e31a 2020: dhu::<init>(hj, int, dhx, java.util.List) -> void
fifo write: @1699477104247581627 0x7f81e25d8bdf 3892: akt::b() -> void
fifo write: @1699477104247651888 0x7f81e25da8f5 1706: java.util.concurrent.ForkJoinPool::managedBlock(java.util.concurrent.ForkJoinPool$ManagedBlocker) -> void
fifo write: @1699477104248424938 0x7f81e9a6fc51 146: StrictMath::floorOrCeil(double, double, double, double) -> double
fifo write: @1699477104248682772 0x7f81e9a70051 134: StrictMath::ceil(double) -> double
fifo write: @1699477104249730855 0x7f81e25db5d9 1032: it.unimi.dsi.fastutil.longs.LongOpenHashSet::add(long) -> boolean
fifo write: @1699477104250960971 0x7f81e9a70604 8931: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104251036702 0x7f81e25dc0f7 179: hw::b(int, int) -> long
fifo write: @1699477104251088073 0x7f81e25dc5b4 539: eaa::c(long, boolean) -> void
fifo write: @1699477104251147854 0x7f81e25dcc57 1056: ead::b(cpc, boolean) -> void
fifo write: @1699477104251968354 0x7f81e9a76b73 156: dig$$Lambda$7052.0x00007f8160b86cb8::<init>(cpc, int) -> void
fifo write: @1699477104251999415 0x7f81e9a76ef3 156: dig$$Lambda$7055.0x00007f8160b87610::<init>(cpc, int) -> void
fifo write: @1699477104253912529 0x7f81e25dd614 95: ead::c() -> void
fifo write: @1699477104255792673 0x7f81e21cc574 31: it.unimi.dsi.fastutil.HashCommon::nextPowerOfTwo(int) -> int
fifo write: @1699477104255915725 0x7f81e25ddadc 1075: ead::e() -> int
fifo write: @1699477104255970046 0x7f81e25de5f9 1070: it.unimi.dsi.fastutil.longs.LongOpenHashSet::trim(int) -> boolean
fifo write: @1699477104256061537 0x7f81e25df1fc 2014: ead::a() -> int
fifo write: @1699477104256173098 0x7f81e25e049c 1967: ead::d() -> int
fifo write: @1699477104256709055 0x7f81e25e163f 3864: eaa::b() -> void
fifo write: @1699477104256833927 0x7f81e25e31f4 232: java.util.Arrays::fill(long[], long) -> void
fifo write: @1699477104258073063 0x7f81e25e376a 678: hw::a(long) -> hw
fifo write: @1699477104258105933 0x7f81e25e3f07 753: hw::r() -> cpc
fifo write: @1699477104259554522 0x7f81e25e48df 7783: dio::b(cpc) -> void
fifo write: @1699477104259693514 0x7f81e25e7994 329: it.unimi.dsi.fastutil.objects.ObjectSets$SynchronizedSet::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477104259754225 0x7f81e25e7ef4 1826: dhf::b() -> int
fifo write: @1699477104259848066 0x7f81e25e8c96 491: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntrySet::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477104259912367 0x7f81e25e9314 240: it.unimi.dsi.fastutil.objects.ObjectCollections$SynchronizedCollection::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477104259975657 0x7f81e25e9794 31: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap, it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$1) -> void
fifo write: @1699477104260025238 0x7f81e25e9b94 270: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477104260088519 0x7f81e25ea094 367: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap, it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$1) -> void
fifo write: @1699477104260158020 0x7f81e25ea67f 1993: it.unimi.dsi.fastutil.longs.Long2ObjectMaps$SynchronizedMap::long2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477104260206080 0x7f81e25eb714 280: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477104261401546 0x7f81e25ebc94 144: java.util.stream.AbstractSpinedBuffer::<init>() -> void
fifo write: @1699477104263457502 0x7f81e9a77a32 22718: dhy$$Lambda$7047.0x00007f8160b82fd0::apply(Object) -> Object
fifo write: @1699477104264402285 0x7f81e9a83e9f 2446: dga::b(String) -> java.util.Optional
fifo write: @1699477104266432701 0x7f81e9a85a59 4586: dhy::a(dhy$b) -> void
fifo write: @1699477104269418579 0x7f81e9a894ab 5005: dhr::<init>(dhy, dhz) -> void
fifo write: @1699477104270930249 0x7f81e9a8c978 855: java.lang.invoke.MethodType::equals(Object) -> boolean
fifo write: @1699477104274351903 0x7f81e9a8de61 41101: com.mojang.datafixers.types.templates.Sum$SumType::findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477104274522295 0x7f81e9aa5470 2564: eaa::a(ead) -> void
fifo write: @1699477104274752298 0x7f81e9aa740d 4723: dhr::g() -> void
fifo write: @1699477104274845629 0x7f81e25ec20f 4887: buf::a(hw, dhr) -> void
fifo write: @1699477104275215744 0x7f81e25ee28e 920: dlv$$Lambda$7070.0x00007f8160b8c0a8::apply(Object, Object, Object) -> Object
fifo write: @1699477104275269955 0x7f81e25eeb34 424: dlv$$Lambda$7072.0x00007f8160b8c528::accept(Object) -> void
fifo write: @1699477104275308515 0x7f81e25ef094 31: dlv::a(double[]) -> void
fifo write: @1699477104275354086 0x7f81e25ef4ca 254: cpx::e(int, int) -> cpx
fifo write: @1699477104275416887 0x7f81e9aaa650 139: dfl$$Lambda$4000.0x00007f816083f1f8::apply(Object) -> Object
fifo write: @1699477104275455427 0x7f81e25ef994 143: cpx$1::<init>(int, int) -> void
fifo write: @1699477104275673850 0x7f81e25efe37 2118: dlv$$Lambda$7071.0x00007f8160b8c2e8::apply(Object) -> Object
fifo write: @1699477104275749611 0x7f81e25f0efa 1777: dlv::a(dlv) -> com.mojang.serialization.DataResult
fifo write: @1699477104276024945 0x7f81e25f1ead 3265: dlv::<init>(int, int, java.util.Optional) -> void
fifo write: @1699477104277022758 0x7f81e9aaab30 2021: com.mojang.serialization.Dynamic$$Lambda$1039.0x00007f8160433cf0::apply(Object) -> Object
fifo write: @1699477104277412753 0x7f81e25f35b4 879: cpc::equals(Object) -> boolean
fifo write: @1699477104277924419 0x7f81e2237c74 27: ako::p() -> eab
fifo write: @1699477104278218143 0x7f81e9aac146 1943: com.mojang.serialization.Dynamic::lambda$get$11(String, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477104278618228 0x7f81e25f3f1f 4748: dig::a(hq) -> com.mojang.serialization.Codec
fifo write: @1699477104278684039 0x7f81e25f5d19 460: dhf::b(java.util.Map) -> void
fifo write: @1699477104279196986 0x7f81e25f6314 191: dhf::b(boolean) -> void
fifo write: @1699477104279234246 0x7f81e25f67d4 867: qw::i(String) -> long
fifo write: @1699477104279341888 0x7f81e9aad572 353: dhu::a(java.util.function.Predicate) -> boolean
fifo write: @1699477104279500720 0x7f81e25f7094 363: akq::A() -> long
fifo write: @1699477104279580171 0x7f81e25f7694 1286: dvy::a(akq) -> dvy
fifo write: @1699477104279699112 0x7f81e25f8299 460: dhf::a(java.util.Map) -> void
fifo write: @1699477104279952015 0x7f81e25f8924 1808: dia::<init>(cpc, did, dhr[], eix, eix, cpx, hq, dlv) -> void
fifo write: @1699477104280067827 0x7f81e25f9877 2739: dig::a(qw) -> dhk$a
fifo write: @1699477104280142528 0x7f81e25fb007 4354: dig::a(dvy, qw, long) -> java.util.Map
fifo write: @1699477104280762696 0x7f81e9aaddc4 9599: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477104281154471 0x7f81e25fd2c2 7952: dig::a(hr, cpc, qw) -> java.util.Map
fifo write: @1699477104282098873 0x7f81e2600814 175: cpx::g(int) -> int
fifo write: @1699477104286935845 0x7f81e9ab459b 5849: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477104287126447 0x7f81e9ab85d0 163: dib::a(java.util.function.Predicate) -> boolean
fifo write: @1699477104287186258 0x7f81e227ff74 55: java.util.concurrent.locks.LockSupport::park() -> void
fifo write: @1699477104287383651 0x7f81e9ab8ad0 171: buf$$Lambda$7061.0x00007f8160b8a388::run() -> void
fifo write: @1699477104287439071 0x7f81e2600c94 185: dig$$Lambda$7073.0x00007f8160b8ca20::<init>(org.slf4j.Logger) -> void
fifo write: @1699477104287658834 0x7f81e9ab9116 3744: eaa::a(ead) -> void
fifo write: @1699477104287711095 0x7f81e9abbbdc 131: buf::a(dhr, hw) -> void
fifo write: @1699477104287830536 0x7f81e2281774 47: java.util.concurrent.locks.LockSupport::parkUntil(long) -> void
fifo write: @1699477104288588056 0x7f81e2601287 4846: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477104290968907 0x7f81e9abc130 1073: dhr::<init>(hq) -> void
fifo write: @1699477104293018893 0x7f81e9abcef4 3553: akb::a() -> java.util.stream.Stream
fifo write: @1699477104300224566 0x7f81e2603abf 2575: eix::a(rc, java.util.function.Function, cpc) -> eix
fifo write: @1699477104303908474 0x7f81e2604d74 483: dks$a::values() -> dks$a[]
fifo write: @1699477104305551405 0x7f81e260543c 4063: akt::f() -> void
fifo write: @1699477104305684607 0x7f81e2607221 3978: dio::d(long) -> java.util.Optional
fifo write: @1699477104305741928 0x7f81e2608c94 179: dhp::j() -> dhk
fifo write: @1699477104305842009 0x7f81e260913c 942: dhp::<init>(dhq, boolean) -> void
fifo write: @1699477104306277124 0x7f81e2609b5f 2574: dig::a(akq, qw) -> dhq$c
fifo write: @1699477104306340635 0x7f81e260b09f 3064: dia::<init>(cpc, did, cpx, hq, dlv) -> void
fifo write: @1699477104306409026 0x7f81e260c71f 3129: dhq::<init>(cpv, cpc, did, eiu, eiu, long, dhr[], dhq$c, dlv) -> void
fifo write: @1699477104309869001 0x7f81e9abf79e 2028: java.util.HashMap::remove(Object) -> Object
fifo write: @1699477104310430268 0x7f81e260dfb4 1044: eiz$1::a(eiz) -> int
fifo write: @1699477104310476639 0x7f81e260e934 1398: eiz$1::hashCode(Object) -> int
fifo write: @1699477104311819006 0x7f81e260f414 361: aka$$Lambda$5468.0x00007f8160a7db88::apply(Object) -> Object
fifo write: @1699477104311882757 0x7f81e260f9b4 544: bfo::d(Runnable) -> void
fifo write: @1699477104312544815 0x7f81e2610237 5259: arf$1::toString() -> String
fifo write: @1699477104312716008 0x7f81e26124a7 3699: aka::a(cpc, java.util.Optional) -> com.mojang.datafixers.util.Either
fifo write: @1699477104313916103 0x7f81e2614317 14338: he$c::toString() -> String
fifo write: @1699477104313931313 0x7f81e8bdaf80 504: I2C/C2I adapters(0xbbaaabab)
fifo write: @1699477104314608002 0x7f81e2619914 387: java.util.stream.SliceOps$2$1::cancellationRequested() -> boolean
fifo write: @1699477104314691373 0x7f81e2619e94 452: java.util.stream.SliceOps$2$1::accept(int) -> void
fifo write: @1699477104314759014 0x7f81e9ac0bcc 2: java.util.Spliterators$IntArraySpliterator::characteristics() -> int
fifo write: @1699477104314859165 0x7f81e261a4b7 721: java.util.Spliterators$IntArraySpliterator::tryAdvance(java.util.function.IntConsumer) -> boolean
fifo write: @1699477104315175049 0x7f81e261ad9a 3331: java.util.stream.Nodes$IntFixedNodeBuilder::accept(int) -> void
fifo write: @1699477104316375435 0x7f81e8b9f038 27: vtable stub
fifo write: @1699477104316946872 0x7f81e261c614 345: eiu$$Lambda$7100.0x00007f8160a60240::accept(Object) -> void
fifo write: @1699477104317060134 0x7f81e261cb14 576: eiz$1::equals(Object, Object) -> boolean
fifo write: @1699477104317231246 0x7f81e261d152 130: eiz::a(Object, gw) -> eiz
fifo write: @1699477104317276956 0x7f81e261d5b4 717: eiz$1::a(eiz, eiz) -> boolean
fifo write: @1699477104317325257 0x7f81e261de34 618: eiz::<init>(Object, gw, long, ejd, long) -> void
fifo write: @1699477104317422098 0x7f81e261e6f7 2944: dig$$Lambda$7101.0x00007f8160a60478::apply(Object) -> Object
fifo write: @1699477104317501749 0x7f81e261fdba 2603: dig::c(String) -> java.util.Optional
fifo write: @1699477104320911433 0x7f81e9ac0ed4 436: com.google.common.collect.RegularImmutableMap::get(Object) -> Object
fifo write: @1699477104324389128 0x7f81e9ac1688 99: java.util.concurrent.locks.LockSupport::setCurrentBlocker(Object) -> void
fifo write: @1699477104325983479 0x7f81e9ac1a50 99: qw::e(String) -> boolean
fifo write: @1699477104328415819 0x7f81e9ac1e75 1922: java.util.zip.InflaterInputStream::fill() -> void
fifo write: @1699477104329685836 0x7f81e9ac3198 8409: java.util.concurrent.CompletableFuture$UniApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104333860470 0x7f81e9ac8c71 31316: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477104333923641 0x7f81e9adef99 490: qw::h(String) -> int
fifo write: @1699477104333955991 0x7f81e9adf8d7 35: bfq$1::a(Object) -> void
fifo write: @1699477104334145333 0x7f81e26215a7 12350: dhy::b(hj, com.mojang.serialization.Codec, dhy$d, Object) -> com.mojang.serialization.Codec
fifo write: @1699477104334261745 0x7f81e9adfbbe 261: java.util.Spliterators::spliterator(long[], int, int, int) -> java.util.Spliterator$OfLong
fifo write: @1699477104335176277 0x7f81e9ae016f 753: java.util.stream.StreamSupport::longStream(java.util.Spliterator$OfLong, boolean) -> java.util.stream.LongStream
fifo write: @1699477104337779900 0x7f81e9ae0b9d 1540: ri::getLongStream(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104337958153 0x7f81e9ae1d9d 1592: com.mojang.serialization.Codec$19::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104339103707 0x7f81e9ae301c 1171: java.util.Spliterator$OfLong::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477104341965354 0x7f81e9ae3e50 87: java.util.stream.Nodes$LongFixedNodeBuilder::begin(long) -> void
fifo write: @1699477104342367600 0x7f81e9ae41d0 63: java.util.stream.Nodes$LongFixedNodeBuilder::end() -> void
fifo write: @1699477104342459161 0x7f81e9ae4550 67: java.util.stream.Nodes$LongFixedNodeBuilder::build() -> java.util.stream.Node
fifo write: @1699477104342549912 0x7f81e9ae48d0 67: java.util.stream.Nodes$LongFixedNodeBuilder::build() -> java.util.stream.Node$OfLong
fifo write: @1699477104352149716 0x7f81e2626094 139: akt$$Lambda$7103.0x00007f8160a60f30::getAsInt() -> int
fifo write: @1699477104352193806 0x7f81e2626494 185: akt$$Lambda$7105.0x00007f8160a617b8::<init>(cpc) -> void
fifo write: @1699477104352238437 0x7f81e2626914 238: akt$$Lambda$7104.0x00007f8160a61590::<init>(akt, cpc, boolean) -> void
fifo write: @1699477104352740373 0x7f81e2626f07 2777: akt::b(cpc, boolean) -> void
fifo write: @1699477104352779874 0x7f81e2628314 196: akt$$Lambda$7104.0x00007f8160a61590::run() -> void
fifo write: @1699477104353021767 0x7f81e262887e 1689: akt::d(cpc, boolean) -> void
fifo write: @1699477104353084908 0x7f81e262973e 2668: eab::b(cpc, boolean) -> void
fifo write: @1699477104353415972 0x7f81e9ae4cb7 1822: dhy$d$$Lambda$7039.0x00007f8160b812c0::create(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477104356382000 0x7f81e262ab14 340: akt$$Lambda$7123.0x00007f8160a69460::run() -> void
fifo write: @1699477104356415801 0x7f81e262b114 230: akt::h() -> void
fifo write: @1699477104356466762 0x7f81e9ae63e3 346: java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire(int) -> void
fifo write: @1699477104356511932 0x7f81e262b654 604: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::back(int) -> int
fifo write: @1699477104357028219 0x7f81e9ae69d3 348: java.util.stream.Nodes$FixedNodeBuilder::accept(Object) -> void
fifo write: @1699477104362929785 0x7f81e262bf17 2040: java.util.concurrent.ForkJoinTask::compareAndSetForkJoinTaskTag(short, short) -> boolean
fifo write: @1699477104365578619 0x7f81e262cf1a 864: aqv::<init>(int) -> void
fifo write: @1699477104365699971 0x7f81e9ae6f37 576: Integer::formatUnsignedInt(int, int, byte[], int) -> void
fifo write: @1699477104365974234 0x7f81e9ae7894 1655: dhf::a(hq, dhr[]) -> void
fifo write: @1699477104366063335 0x7f81e262d78e 1015: aqv::c(int) -> aqv
fifo write: @1699477104366288338 0x7f81e9ae8b1d 1922: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477104366333269 0x7f81e262e014 39: dhy$d$$Lambda$7040.0x00007f8160b81788::create(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477104366368539 0x7f81e262e414 278: dho::<init>(hj, int, dhx, aqv) -> void
fifo write: @1699477104366598042 0x7f81e262ea7c 1930: dho::a(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477104370301769 0x7f81e262fa00 1602: dho::<init>(hj, int, dhx) -> void
fifo write: @1699477104370349490 0x7f81e9aea3d0 471: java.util.stream.Nodes$FixedNodeBuilder::accept(Object) -> void
fifo write: @1699477104371464094 0x7f81e9aea9d0 111: cpv::C_() -> dis
fifo write: @1699477104376948465 0x7f81e9aeadd0 135: java.util.concurrent.TimeUnit::toNanos(long) -> long
fifo write: @1699477104383623881 0x7f81e9aeb273 277: java.util.stream.AbstractPipeline::exactOutputSizeIfKnown(java.util.Spliterator) -> long
fifo write: @1699477104388016258 0x7f81e9aeb950 123: aqv::d() -> int
fifo write: @1699477104390006524 0x7f81e9aebd4c 3: dhf::b(long) -> void
fifo write: @1699477104391068167 0x7f81e9aec098 1428: aqv::a(Object, int) -> void
fifo write: @1699477104391246470 0x7f81e9aed13b 1864: java.util.stream.AbstractPipeline::evaluateToArrayNode(java.util.function.IntFunction) -> java.util.stream.Node
fifo write: @1699477104393102794 0x7f81e9aee830 1768: dho$$Lambda$7063.0x00007f8160b8a800::accept(Object) -> void
fifo write: @1699477104394752595 0x7f81e2630694 240: jdk.nio.zipfs.ZipFileSystem::getBytes(String) -> byte[]
fifo write: @1699477104395236261 0x7f81e9aefc2f 6: gw::<init>(int, int, int) -> void
fifo write: @1699477104396040702 0x7f81e9aeff54 279: rc::e(int) -> int
fifo write: @1699477104398073558 0x7f81e9af063d 926: qw::c(String, int) -> rc
fifo write: @1699477104399762010 0x7f81e9af12d3 928: it.unimi.dsi.fastutil.objects.ObjectArrayList::grow(int) -> void
fifo write: @1699477104400641241 0x7f81e9af1bd8 1375: it.unimi.dsi.fastutil.objects.ObjectArrayList::add(Object) -> boolean
fifo write: @1699477104406298374 0x7f81e2630b14 559: eab::a() -> int
fifo write: @1699477104409025719 0x7f81e9af2a38 6580: bfr::i() -> void
fifo write: @1699477104421496490 0x7f81e9af752d 5142: buf::a(hw, dhr) -> void
fifo write: @1699477104422221239 0x7f81e9afb0ef 1125: asj::<init>(int, int, long[]) -> void
fifo write: @1699477104423871480 0x7f81e9afbc0f 43: Long::numberOfTrailingZeros(long) -> int
fifo write: @1699477104426174920 0x7f81e9afbf8f 2141: java.util.HashSet::remove(Object) -> boolean
fifo write: @1699477104429641135 0x7f81e9afd4cf 712: bft$c::b() -> boolean
fifo write: @1699477104435922086 0x7f81e9afdeec 120: java.util.Map::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477104448924654 0x7f81e26311f4 507: java.util.stream.SliceOps::calcSize(long, long, long) -> long
fifo write: @1699477104449017975 0x7f81e9afe64c 6: ra::g() -> int[]
fifo write: @1699477104449063025 0x7f81e23214f4 5: java.util.Spliterators$IntArraySpliterator::estimateSize() -> long
fifo write: @1699477104449140096 0x7f81e2631814 240: java.util.stream.Sink$ChainedInt::end() -> void
fifo write: @1699477104449241358 0x7f81e2631cb4 875: java.util.stream.Sink$ChainedInt::<init>(java.util.stream.Sink) -> void
fifo write: @1699477104449387489 0x7f81e2632494 31: java.util.stream.IntPipeline::<init>(java.util.Spliterator, int, boolean) -> void
fifo write: @1699477104449439280 0x7f81e2632894 167: java.util.stream.IntPipeline$Head::<init>(java.util.Spliterator, int, boolean) -> void
fifo write: @1699477104449504241 0x7f81e2632d01 371: java.util.stream.StreamSupport::intStream(java.util.Spliterator$OfInt, boolean) -> java.util.stream.IntStream
fifo write: @1699477104449703313 0x7f81e2633319 1882: java.util.stream.IntPipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477104450169299 0x7f81e2634154 97: java.util.stream.SliceOps::flags(long) -> int
fifo write: @1699477104450230320 0x7f81e2634597 237: com.mojang.serialization.Codec$18::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104450292081 0x7f81e2634a37 390: java.util.stream.IntPipeline::limit(long) -> java.util.stream.IntStream
fifo write: @1699477104450348062 0x7f81e2635014 207: java.util.stream.IntPipeline$StatefulOp::<init>(java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int) -> void
fifo write: @1699477104450404452 0x7f81e2635497 320: java.util.stream.SliceOps$2::<init>(java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int, long, long, long) -> void
fifo write: @1699477104450437633 0x7f81e2635a94 39: java.util.stream.SliceOps$2::exactOutputSize(long) -> long
fifo write: @1699477104450502154 0x7f81e2635ed4 1203: java.util.stream.IntPipeline::toArray() -> int[]
fifo write: @1699477104450561844 0x7f81e2636857 783: java.util.stream.IntPipeline::makeNodeBuilder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477104450603485 0x7f81e2637094 391: java.util.stream.Nodes$IntArrayNode::asPrimitiveArray() -> Object
fifo write: @1699477104450638685 0x7f81e2637614 176: java.util.stream.Nodes$IntArrayNode::asPrimitiveArray() -> int[]
fifo write: @1699477104450744027 0x7f81e2637bbf 2038: java.util.stream.SliceOps::makeInt(java.util.stream.AbstractPipeline, long, long) -> java.util.stream.IntStream
fifo write: @1699477104451017200 0x7f81e2638f37 3880: ac::a(java.util.stream.IntStream, int) -> com.mojang.serialization.DataResult
fifo write: @1699477104460314820 0x7f81e263a9b4 704: eab::J_() -> boolean
fifo write: @1699477104461600166 0x7f81e9afe950 147: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::next() -> Object
fifo write: @1699477104465266634 0x7f81e9afede4 195: java.util.concurrent.ThreadPoolExecutor$Worker::unlock() -> void
fifo write: @1699477104466666372 0x7f81e9aff350 235: java.util.concurrent.SynchronousQueue::poll(long, java.util.concurrent.TimeUnit) -> Object
fifo write: @1699477104466970796 0x7f81e9aff970 239: dgh::b(String) -> java.util.Optional
fifo write: @1699477104467299420 0x7f81e9affeef 544: java.util.concurrent.ThreadPoolExecutor::getTask() -> Runnable
fifo write: @1699477104470755285 0x7f81e9b009dd 1452: dgj::b(String) -> java.util.Optional
fifo write: @1699477104478089819 0x7f81e263b307 4846: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477104478147070 0x7f81e9b01d40 18: java.util.concurrent.locks.LockSupport::park() -> void
fifo write: @1699477104484247689 0x7f81e9b02080 339: cpx::ak() -> int
fifo write: @1699477104486449917 0x7f81e9b02850 43: akq$$Lambda$5339.0x00007f8160a27d88::get() -> Object
fifo write: @1699477104492660547 0x7f81e9b02bf1 149: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$MapEntrySet::<init>(it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap, it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap$1) -> void
fifo write: @1699477104498826326 0x7f81e23535f4 56: java.util.stream.SpinedBuffer$OfLong::arrayLength(long[]) -> int
fifo write: @1699477104498870847 0x7f81e263da14 530: java.util.stream.SpinedBuffer$OfLong::arrayLength(Object) -> int
fifo write: @1699477104520994602 0x7f81e9b02f5d 346: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::find(long) -> int
fifo write: @1699477104528842364 0x7f81e9b0369d 1842: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477104551168661 0x7f81e263e0bc 1848: it.unimi.dsi.fastutil.longs.LongOpenHashSet::<init>(int, float) -> void
fifo write: @1699477104552809732 0x7f81e263f0ba 2603: dig::d(String) -> java.util.Optional
fifo write: @1699477104552906024 0x7f81e26405f7 2928: dig$$Lambda$7099.0x00007f8160a60000::apply(Object) -> Object
fifo write: @1699477104557785417 0x7f81e9b051e5 246: eiz$1::equals(Object, Object) -> boolean
fifo write: @1699477104557950129 0x7f81e9b05851 182: eiz$1::a(eiz, eiz) -> boolean
fifo write: @1699477104558830840 0x7f81e9b05ddd 226: eiz$1::hashCode(Object) -> int
fifo write: @1699477104562575228 0x7f81e9b06419 430: qw::l(String) -> String
fifo write: @1699477104563667633 0x7f81e9b06cbf 224: ejd::a(int) -> ejd
fifo write: @1699477104567160168 0x7f81e9b0737f 2732: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477104568188601 0x7f81e2641bf4 205: java.util.stream.SpinedBuffer$OfLong::newArray(int) -> long[]
fifo write: @1699477104568238282 0x7f81e2642014 428: java.util.stream.SpinedBuffer$OfLong::newArray(int) -> Object
fifo write: @1699477104569342016 0x7f81e9b08e50 63: java.util.ArrayList$ArrayListSpliterator::estimateSize() -> long
fifo write: @1699477104572459806 0x7f81e9b091cf 733: eiz::a(Object, gw) -> eiz
fifo write: @1699477104572573448 0x7f81e9b09a7e 785: eiz::<init>(Object, gw, long, ejd, long) -> void
fifo write: @1699477104573339137 0x7f81e9b0a2ef 1533: eiu$$Lambda$7100.0x00007f8160a60240::accept(Object) -> void
fifo write: @1699477104574735255 0x7f81e9b0b3c9 10011: dio::a(cpc, com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477104574886077 0x7f81e9b12b70 1835: eiy$$Lambda$7080.0x00007f8160b926f8::accept(Object) -> void
fifo write: @1699477104577450150 0x7f81e9b13efa 2154: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::add(Object) -> boolean
fifo write: @1699477104577835375 0x7f81e9b15cef 4848: eiy$$Lambda$7079.0x00007f8160b922b8::apply(Object) -> Object
fifo write: @1699477104586085651 0x7f81e2642677 2928: dig$$Lambda$7074.0x00007f8160b8cc58::apply(Object) -> Object
fifo write: @1699477104586202523 0x7f81e2643d3a 2587: dig::b(String) -> java.util.Optional
fifo write: @1699477104593918612 0x7f81e9b19239 2613: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::add(Object) -> boolean
fifo write: @1699477104616199620 0x7f81e9b1b2d5 555: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477104619884397 0x7f81e9b1c45f 31568: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477104619940748 0x7f81e2645223 2416: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::rehash(int) -> void
fifo write: @1699477104621451957 0x7f81e9b33dd1 142: hy::equals(Object) -> boolean
fifo write: @1699477104622034694 0x7f81e9b3425d 226: eiy$1::hashCode(Object) -> int
fifo write: @1699477104622080265 0x7f81e9b34851 194: eiy$1::a(eiy, eiy) -> boolean
fifo write: @1699477104622349449 0x7f81e9b34de5 262: eiy$1::equals(Object, Object) -> boolean
fifo write: @1699477104629801965 0x7f81e9b35519 3070: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::add(Object) -> boolean
fifo write: @1699477104629878866 0x7f81e9b37910 35: java.util.concurrent.ThreadPoolExecutor::runStateAtLeast(int, int) -> boolean
fifo write: @1699477104630832338 0x7f81e2646642 1776: aqv::a(Object, int) -> void
fifo write: @1699477104632245566 0x7f81e9b37c76 2764: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477104632328927 0x7f81e2647614 244: dho$$Lambda$7063.0x00007f8160b8a800::accept(Object) -> void
fifo write: @1699477104647748316 0x7f81e9b3989e 2376: arf$3::apply(com.mojang.serialization.DynamicOps, Object, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477104650625364 0x7f81e9b3b75a 2981: com.mojang.serialization.Codec$4::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104650681804 0x7f81e9b3dbea 234: com.mojang.serialization.DataResult$$Lambda$3736.0x00007f81607b61f8::apply(Object) -> Object
fifo write: @1699477104656918205 0x7f81e9b3e0d6 125: arf$1::apply(com.mojang.serialization.DynamicOps, Object, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477104656963065 0x7f81e9b3e6d3 332: aqv::g(int) -> int
fifo write: @1699477104670413158 0x7f81e9b3ed45 1091: Integer::toUnsignedString0(int, int) -> String
fifo write: @1699477104689356013 0x7f81e9b3fa20 427: dig$$Lambda$7099.0x00007f8160a60000::apply(Object) -> Object
fifo write: @1699477104689705147 0x7f81e9b402f3 556: hr$c::c(aev) -> java.util.Optional
fifo write: @1699477104692775697 0x7f81e9b40d04 537: hr::d(aev) -> hq
fifo write: @1699477104695972788 0x7f81e9b417ef 228: java.util.concurrent.ThreadPoolExecutor$Worker::lock() -> void
fifo write: @1699477104703673437 0x7f81e9b41cc1 622: it.unimi.dsi.fastutil.shorts.ShortArrays::forceCapacity(short[], int, int) -> short[]
fifo write: @1699477104706661365 0x7f81e9b42320 427: dig$$Lambda$7074.0x00007f8160b8cc58::apply(Object) -> Object
fifo write: @1699477104717698848 0x7f81e8b9f068 168: itable stub
fifo write: @1699477104718979394 0x7f81e9b42caa 7093: Object::toString() -> String
fifo write: @1699477104719028255 0x7f81e9b46d59 66: dzb$$Lambda$7096.0x00007f8160a65468::applyAsInt(Object) -> int
fifo write: @1699477104719042615 0x7f81e8bdac80 464: I2C/C2I adapters(0xba6aaaa)
fifo write: @1699477104719086306 0x7f81e9b47159 66: dzb$$Lambda$7097.0x00007f8160a65688::applyAsInt(Object) -> int
fifo write: @1699477104719174277 0x7f81e8bda980 488: I2C/C2I adapters(0xba6aaaab)
fifo write: @1699477104732043083 0x7f81e9b47e31 27070: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477104732106364 0x7f81e2647bb4 933: dia::a(dhk) -> void
fifo write: @1699477104736691373 0x7f81e26485ba 2587: dig::a(String) -> java.util.Optional
fifo write: @1699477104736784074 0x7f81e2649af7 2928: dig$$Lambda$7076.0x00007f8160b8d7b0::apply(Object) -> Object
fifo write: @1699477104781667203 0x7f81e9b5ab23 3733: eiy::a(rc, java.util.function.Function, cpc, java.util.function.Consumer) -> void
fifo write: @1699477104785450992 0x7f81e9b5d499 446: qw::o(String) -> long[]
fifo write: @1699477104791154615 0x7f81e9b5dcd0 83: dzy::b(int) -> int
fifo write: @1699477104792222778 0x7f81e9b5e0db 1191: java.util.concurrent.CompletableFuture::unipush(java.util.concurrent.CompletableFuture$Completion) -> void
fifo write: @1699477104792451641 0x7f81e9b5ec56 145: java.util.concurrent.CompletableFuture$Signaller::isReleasable() -> boolean
fifo write: @1699477104796105568 0x7f81e9b5f0d3 184: net.minecraft.server.MinecraftServer::bf() -> boolean
fifo write: @1699477104817140480 0x7f81e264b114 317: java.util.Arrays::stream(int[]) -> java.util.stream.IntStream
fifo write: @1699477104817224251 0x7f81e264b676 205: java.util.Arrays::stream(int[], int, int) -> java.util.stream.IntStream
fifo write: @1699477104817308362 0x7f81e264bb98 1917: dva::<init>(int, int, int, int, int, int) -> void
fifo write: @1699477104817359323 0x7f81e23f07f6 29: java.util.Arrays::spliterator(int[], int, int) -> java.util.Spliterator$OfInt
fifo write: @1699477104817392993 0x7f81e264cc94 207: java.util.Spliterators$IntArraySpliterator::<init>(int[], int, int, int) -> void
fifo write: @1699477104817449934 0x7f81e264d114 252: com.google.common.collect.ImmutableMap::getOrDefault(Object, Object) -> Object
fifo write: @1699477104817526015 0x7f81e264d629 880: java.util.Spliterators::spliterator(int[], int, int, int) -> java.util.Spliterator$OfInt
fifo write: @1699477104817615676 0x7f81e264df59 1470: java.util.stream.IntPipeline::adapt(java.util.stream.Sink) -> java.util.function.IntConsumer
fifo write: @1699477104817669337 0x7f81e264eab7 689: java.util.stream.Nodes$IntArrayNode::<init>(long) -> void
fifo write: @1699477104817715037 0x7f81e264f194 301: java.util.stream.SliceOps$2$1::begin(long) -> void
fifo write: @1699477104817835509 0x7f81e264f7b5 1213: java.util.stream.SliceOps$2::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477104817919740 0x7f81e26502b4 1096: java.util.stream.SliceOps$2$1::<init>(java.util.stream.SliceOps$2, java.util.stream.Sink) -> void
fifo write: @1699477104817959811 0x7f81e2650d14 1178: dvm::a(ha) -> void
fifo write: @1699477104817999931 0x7f81e9b5f5d0 55: java.util.Optional::orElseThrow(java.util.function.Supplier) -> Object
fifo write: @1699477104818228114 0x7f81e2651bcc 7324: ri::i(rq) -> com.mojang.serialization.DataResult
fifo write: @1699477104818390856 0x7f81e2654a44 7694: ri::getIntStream(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104818455627 0x7f81e2657894 332: dva$$Lambda$7085.0x00007f8160a6b068::apply(Object) -> Object
fifo write: @1699477104818510608 0x7f81e245b814 31: java.util.stream.Nodes$IntFixedNodeBuilder::build() -> java.util.stream.Node
fifo write: @1699477104818607059 0x7f81e2657e37 2358: dva::a(java.util.stream.IntStream) -> com.mojang.serialization.DataResult
fifo write: @1699477104818716510 0x7f81e2659077 2816: dva$$Lambda$7083.0x00007f8160a6abe8::apply(Object) -> Object
fifo write: @1699477104818797971 0x7f81e265a477 1628: java.util.stream.Nodes::flattenInt(java.util.stream.Node$OfInt) -> java.util.stream.Node$OfInt
fifo write: @1699477104818891723 0x7f81e265b29a 3720: java.util.stream.Nodes$IntFixedNodeBuilder::begin(long) -> void
fifo write: @1699477104818987274 0x7f81e265ce3a 4333: java.util.stream.Nodes$IntFixedNodeBuilder::end() -> void
fifo write: @1699477104819037445 0x7f81e265ebcf 344: dva::a(int[]) -> dva
fifo write: @1699477104819093925 0x7f81e265f214 185: dvm$$Lambda$7086.0x00007f8160a6b2a8::<init>(org.slf4j.Logger) -> void
fifo write: @1699477104819146796 0x7f81e265f694 233: dvm::<init>(dvz, int, dva) -> void
fifo write: @1699477104819237167 0x7f81e265fcba 4333: java.util.stream.Nodes$IntFixedNodeBuilder::build() -> java.util.stream.Node$OfInt
fifo write: @1699477104819268488 0x7f81e26619f4 411: ha::b(int) -> ha
fifo write: @1699477104819309348 0x7f81e2661ff4 234: aqr::a(int, Object[], Object, int) -> Object
fifo write: @1699477104819343308 0x7f81e2662494 335: aqr$$Lambda$575.0x00007f816031d218::apply(int) -> Object
fifo write: @1699477104819375429 0x7f81e2662a14 175: dvz$a::load(dvy, qw) -> dvm
fifo write: @1699477104819405289 0x7f81e2662e94 678: dxf$a::a(int) -> dxf$a
fifo write: @1699477104819444940 0x7f81e266361c 1796: dxe$c::<init>(dvz, qw) -> void
fifo write: @1699477104820317411 0x7f81e26648cf 11934: dvm::<init>(dvz, qw) -> void
fifo write: @1699477104821880331 0x7f81e2669139 888: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::findKey(Object) -> int
fifo write: @1699477104822200765 0x7f81e2669b66 4316: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::put(Object, Object) -> Object
fifo write: @1699477104822383978 0x7f81e266b814 296: java.util.BitSet::<init>(long[]) -> void
fifo write: @1699477104827619145 0x7f81e266bd94 31: java.util.stream.LongPipeline::<init>(java.util.stream.AbstractPipeline, int) -> void
fifo write: @1699477104827655905 0x7f81e266c194 240: java.util.stream.Sink$ChainedLong::end() -> void
fifo write: @1699477104827703026 0x7f81e266c634 875: java.util.stream.Sink$ChainedLong::<init>(java.util.stream.Sink) -> void
fifo write: @1699477104827879328 0x7f81e266cf3f 1542: it.unimi.dsi.fastutil.Arrays::ensureOffsetLength(int, int, int) -> void
fifo write: @1699477104827973999 0x7f81e9b5f8af 316: java.util.Arrays::fill(double[], double) -> void
fifo write: @1699477104828455425 0x7f81e9b5fe58 18: java.util.concurrent.ConcurrentHashMap::remove(Object) -> Object
fifo write: @1699477104829278546 0x7f81e8b9f120 27: vtable stub
fifo write: @1699477104830006465 0x7f81e9b60159 66: dzb$$Lambda$7098.0x00007f8160a658a8::applyAsInt(Object) -> int
fifo write: @1699477104830031756 0x7f81e9b60550 79: aeo::compressMaps() -> boolean
fifo write: @1699477104830164607 0x7f81e9b608cc 6: dfi::m() -> cec
fifo write: @1699477104830793896 0x7f81e9b60bda 103: java.util.Comparator$$Lambda$336.0x00007f81601d1158::compare(Object, Object) -> int
fifo write: @1699477104831574796 0x7f81e266e147 3770: jdk.nio.zipfs.ZipPath::normalize(String) -> byte[]
fifo write: @1699477104831841179 0x7f81e9b61053 361: com.mojang.serialization.OptionalDynamic::flatMap(java.util.function.Function) -> com.mojang.serialization.DataResult
fifo write: @1699477104832840162 0x7f81e266ff49 3224: rj::a(dfl, dgm, String, qw, qw) -> dfl
fifo write: @1699477104832922183 0x7f81e9b61750 303: dzb$b::a(int) -> dfj
fifo write: @1699477104833162596 0x7f81e9b61e19 466: aeu::b(aev) -> java.util.Optional
fifo write: @1699477104833234767 0x7f81e2671494 591: com.mojang.serialization.OptionalDynamic$$Lambda$3716.0x00007f81607ae100::apply(Object) -> Object
fifo write: @1699477104833295428 0x7f81e2671b14 248: com.mojang.serialization.Dynamic::asNumber() -> com.mojang.serialization.DataResult
fifo write: @1699477104833495650 0x7f81e9b62753 556: dzb$c::<init>(gw, dfj, qw) -> void
fifo write: @1699477104833693923 0x7f81e2672034 962: com.mojang.serialization.DynamicLike::asNumber(Number) -> Number
fifo write: @1699477104833760674 0x7f81e2672914 349: cec::a(cec) -> boolean
fifo write: @1699477104833867935 0x7f81e2672f9d 1995: com.mojang.serialization.DynamicLike::asInt(int) -> int
fifo write: @1699477104833927376 0x7f81e2673e94 185: hg$1$$Lambda$7095.0x00007f8160a65000::<init>(java.util.function.Predicate) -> void
fifo write: @1699477104834067308 0x7f81e2674334 637: hg$1$$Lambda$7095.0x00007f8160a65000::test(Object) -> boolean
fifo write: @1699477104834133789 0x7f81e2674a17 706: hg$1::b(java.util.function.Predicate, he$c) -> boolean
fifo write: @1699477104834229490 0x7f81e2675317 3426: com.mojang.serialization.OptionalDynamic::asNumber() -> com.mojang.serialization.DataResult
fifo write: @1699477104834309991 0x7f81e2676a57 2722: hg$1::a(aev) -> java.util.Optional
fifo write: @1699477104834363182 0x7f81e2677d74 516: hg$c::a(cec, Object) -> boolean
fifo write: @1699477104834417922 0x7f81e2678314 616: hg$c$$Lambda$4224.0x00007f81608b2c30::test(Object) -> boolean
fifo write: @1699477104834915949 0x7f81e2678c07 7014: rj::a(hf, qw) -> dfj
fifo write: @1699477104835198292 0x7f81e9b62dcc 2: it.unimi.dsi.fastutil.objects.AbstractObject2IntFunction::defaultReturnValue(int) -> void
fifo write: @1699477104835472246 0x7f81e9b630af 6: hy::<init>(int, int, int) -> void
fifo write: @1699477104836680142 0x7f81e9b63470 3173: aeo::getStringValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104836817963 0x7f81e9b65445 1426: ri::getStringValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104837035156 0x7f81e267bdf4 1476: jdk.nio.zipfs.ZipFileSystem::getInode(byte[]) -> jdk.nio.zipfs.ZipFileSystem$IndexNode
fifo write: @1699477104837123407 0x7f81e267ca94 109: dzb$b::a(dfj, int) -> void
fifo write: @1699477104837150998 0x7f81e267ce94 275: cdz::a(cec) -> boolean
fifo write: @1699477104837694015 0x7f81e267d394 369: aeu$a::<init>(hh, hf, com.mojang.serialization.Lifecycle) -> void
fifo write: @1699477104839656990 0x7f81e9b6636a 562: java.util.HashMap$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477104840248658 0x7f81e9b66bcc 6: aew::b() -> String
fifo write: @1699477104841582325 0x7f81e9b66f15 4437: dzb::a(dzb$c, java.util.List, java.util.List, java.util.List) -> void
fifo write: @1699477104843769673 0x7f81e9b692d0 499: java.util.EnumMap::put(Enum, Object) -> Object
fifo write: @1699477104849091942 0x7f81e9b69d39 2345: dhf::a(dks$a) -> dks
fifo write: @1699477104850133215 0x7f81e9b6ba7c 3974: hk::a(Object, int) -> void
fifo write: @1699477104851236409 0x7f81e267d994 207: java.util.stream.LongPipeline$StatelessOp::<init>(java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int) -> void
fifo write: @1699477104851304630 0x7f81e267de37 502: java.util.stream.LongPipeline$9::<init>(java.util.stream.LongPipeline, java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int, java.util.function.LongPredicate) -> void
fifo write: @1699477104851335481 0x7f81e267e4b7 900: java.util.stream.SpinedBuffer$OfPrimitive::<init>() -> void
fifo write: @1699477104851366731 0x7f81e267ed37 994: java.util.stream.SpinedBuffer$OfLong::<init>() -> void
fifo write: @1699477104851399972 0x7f81e267f63a 1096: java.util.stream.Nodes$LongSpinedNodeBuilder::<init>() -> void
fifo write: @1699477104851457382 0x7f81e267ff94 248: java.util.stream.LongPipeline$9$1::begin(long) -> void
fifo write: @1699477104851487083 0x7f81e2680414 239: java.util.stream.Nodes$LongSpinedNodeBuilder::begin(long) -> void
fifo write: @1699477104851535393 0x7f81e26809ad 1184: java.util.stream.LongPipeline$9::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477104851583494 0x7f81e26813b4 1075: java.util.stream.LongPipeline$9$1::<init>(java.util.stream.LongPipeline$9, java.util.stream.Sink) -> void
fifo write: @1699477104851612804 0x7f81e2681c94 265: java.util.stream.SpinedBuffer$OfPrimitive::clear() -> void
fifo write: @1699477104851737976 0x7f81e2682254 1696: java.util.stream.SpinedBuffer$OfPrimitive::capacity() -> long
fifo write: @1699477104851772346 0x7f81e2682f14 436: java.util.stream.Nodes$LongSpinedNodeBuilder::asPrimitiveArray() -> Object
fifo write: @1699477104852079580 0x7f81e2683564 3589: java.util.stream.SpinedBuffer$OfPrimitive::ensureCapacity(long) -> void
fifo write: @1699477104855057839 0x7f81e9b6e3e0 7223: aes::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477104855102559 0x7f81e9b73cd0 155: java.util.RegularEnumSet$EnumSetIterator::next() -> Enum
fifo write: @1699477104855818609 0x7f81e9b74150 155: java.util.RegularEnumSet$EnumSetIterator::next() -> Object
fifo write: @1699477104858502063 0x7f81e9b74660 503: java.util.EnumMap::put(Object, Object) -> Object
fifo write: @1699477104859087991 0x7f81e9b74df6 1745: java.util.concurrent.CompletableFuture$BiRelay::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104859762009 0x7f81e9b761f8 515: com.google.common.collect.ImmutableList::forEach(java.util.function.Consumer) -> void
fifo write: @1699477104862548235 0x7f81e9b76b7c 6172: dhf::a(dks$a, long[]) -> void
fifo write: @1699477104872860178 0x7f81e9887d48 1821: dks::<init>(dhf, dks$a) -> void
fifo write: @1699477104881352937 0x7f81e227bd99 88: it.unimi.dsi.fastutil.longs.LongOpenHashSet::<init>(long[], float) -> void
fifo write: @1699477104881470269 0x7f81e1a142df 1088: java.util.stream.LongPipeline::filter(java.util.function.LongPredicate) -> java.util.stream.LongStream
fifo write: @1699477104892058516 0x7f81e9b7a578 10387: Class::getEnumConstantsShared() -> Object[]
fifo write: @1699477104893738997 0x7f81e98875e0 531: com.google.common.collect.NaturalOrdering::compare(Object, Object) -> int
fifo write: @1699477104900402303 0x7f81e9886ae8 1092: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::<init>(int, float, it.unimi.dsi.fastutil.Hash$Strategy) -> void
fifo write: @1699477104904580937 0x7f81e9b80a21 2168: java.util.concurrent.CompletableFuture$CoCompletion::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104919113064 0x7f81e9b821d4 2957: bfo::x() -> boolean
fifo write: @1699477104930620903 0x7f81e988653d 106: ac::b() -> long
fifo write: @1699477104931142569 0x7f81e22dc773 105: dvz$$Lambda$2861.0x00007f81606d1990::load(qw) -> dvm
fifo write: @1699477104931571755 0x7f81e236ac07 2829: dxe$a::<init>(qw) -> void
fifo write: @1699477104932872882 0x7f81e9b84599 506: qw::q(String) -> boolean
fifo write: @1699477104938084929 0x7f81e245d7fe 1349: java.util.HashMap$Values::forEach(java.util.function.Consumer) -> void
fifo write: @1699477104940962816 0x7f81e2463774 573: qx::a(double) -> qx
fifo write: @1699477104941299081 0x7f81e9b84ecc 6: dvy::c() -> dzc
fifo write: @1699477104941697436 0x7f81e9b851d0 103: java.util.stream.SliceOps$2$1::cancellationRequested() -> boolean
fifo write: @1699477104942593247 0x7f81e245a4d9 853: java.util.concurrent.CompletableFuture$BiApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104943082664 0x7f81e24be694 185: ajy$$Lambda$7172.0x00007f8160b9ea00::<init>(dhf) -> void
fifo write: @1699477104943183505 0x7f81e23f5a94 388: ajy$$Lambda$7171.0x00007f8160b9e7c0::apply(Object) -> Object
fifo write: @1699477104943455308 0x7f81e1c20137 2767: ajy$$Lambda$5470.0x00007f8160a7e018::apply(Object, Object) -> Object
fifo write: @1699477104943537309 0x7f81e23546f7 2172: ajy::a(dhf, com.mojang.datafixers.util.Either) -> dhf
fifo write: @1699477104943739942 0x7f81e2480fd7 2937: aka$$Lambda$5472.0x00007f8160a7e6d8::apply(Object) -> Object
fifo write: @1699477104943822023 0x7f81e2369ef7 1540: aka$$Lambda$7169.0x00007f8160b9e358::apply(Object) -> Object
fifo write: @1699477104943890174 0x7f81e23540b4 398: aka$$Lambda$5474.0x00007f8160a7ee00::execute(Runnable) -> void
fifo write: @1699477104943980095 0x7f81e247fe97 2431: aka::d(com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477104944043656 0x7f81e246d394 288: aka::d(ajy, Runnable) -> void
fifo write: @1699477104944104847 0x7f81e24c6a14 185: akc$$Lambda$7170.0x00007f8160b9e598::<init>(ajy) -> void
fifo write: @1699477104944158307 0x7f81e241aff4 104: akc$$Lambda$7170.0x00007f8160b9e598::getAsInt() -> int
fifo write: @1699477104944330010 0x7f81e247f007 1679: akc::a(ajy, Runnable) -> akc$a
fifo write: @1699477104944571293 0x7f81e2685122 7602: java.util.concurrent.CompletableFuture::biApply(Object, Object, java.util.function.BiFunction, java.util.concurrent.CompletableFuture$BiApply) -> boolean
fifo write: @1699477104944759905 0x7f81e26886c6 9621: java.util.concurrent.CompletableFuture$UniCompose::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104944824276 0x7f81e9b858cc 9: net.minecraft.server.MinecraftServer::au() -> Thread
fifo write: @1699477104945545115 0x7f81e9b85bd0 207: net.minecraft.server.MinecraftServer$$Lambda$7037.0x00007f8160b7ebc8::getAsBoolean() -> boolean
fifo write: @1699477104945998241 0x7f81e9b86152 97: java.util.concurrent.ForkJoinTask::compareAndSetForkJoinTaskTag(short, short) -> boolean
fifo write: @1699477104946121103 0x7f81e9b86550 47: java.util.HashSet::isEmpty() -> boolean
fifo write: @1699477104947495941 0x7f81e9b86850 247: ead::J_() -> boolean
fifo write: @1699477104947639542 0x7f81e9b86f82 731: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::insert(int, long, Object) -> void
fifo write: @1699477104947990487 0x7f81e9b87964 464: java.util.concurrent.CompletableFuture::uniExceptionally(Object, java.util.function.Function, java.util.concurrent.CompletableFuture$UniExceptionally) -> boolean
fifo write: @1699477104948780227 0x7f81e9b881d5 138: akc::b(bfq) -> akb
fifo write: @1699477104948956579 0x7f81e9b88650 43: it.unimi.dsi.fastutil.longs.LongOpenHashSet::isEmpty() -> boolean
fifo write: @1699477104949715469 0x7f81e9b8899a 481: akc::a(Runnable, long, java.util.function.IntSupplier) -> akc$a
fifo write: @1699477104953238544 0x7f81e9b89117 1664: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2ObjectFunction) -> Object
fifo write: @1699477104954316228 0x7f81e9b8a5f7 1832: java.util.concurrent.CompletableFuture$UniExceptionally::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104957605330 0x7f81e9b8bc4c 3: net.minecraft.server.MinecraftServer::ab() -> boolean
fifo write: @1699477104958288789 0x7f81e9b8c034 3322: net.minecraft.server.MinecraftServer::bg() -> boolean
fifo write: @1699477104959356763 0x7f81e268c854 2211: net.minecraft.server.MinecraftServer::bg() -> boolean
fifo write: @1699477104962215990 0x7f81e9b8f4b8 3418: net.minecraft.server.MinecraftServer::x() -> boolean
fifo write: @1699477104962271000 0x7f81e241a7b9 310: ako$b::x() -> boolean
fifo write: @1699477104962325211 0x7f81e247e6b4 388: ako::d() -> boolean
fifo write: @1699477104964634371 0x7f81e234f214 54: net.minecraft.server.MinecraftServer::x() -> boolean
fifo write: @1699477104974250355 0x7f81e234edd4 139: arw::d(float) -> int
fifo write: @1699477104974876013 0x7f81e268dadf 449: java.lang.invoke.Invokers$Holder::linkToTargetMethod(long, Object) -> Object
fifo write: @1699477104975060066 0x7f81e268e11f 1427: java.lang.invoke.LambdaForm$DMH.0x00007f8160a3c000::newInvokeSpecial(Object, long) -> Object
fifo write: @1699477104975274818 0x7f81e268ec19 396: aka$$Lambda$5475.0x00007f8160a7f028::apply(Object) -> Object
fifo write: @1699477104975372310 0x7f81e268f214 365: aka$$Lambda$7173.0x00007f8160b9ec48::<init>(aka, cpc, ajy, dhk, java.util.concurrent.Executor) -> void
fifo write: @1699477104975449311 0x7f81e234e914 230: aka$$Lambda$7174.0x00007f8160b9ee90::<init>(aka, cpc) -> void
fifo write: @1699477104975536412 0x7f81e268f899 420: aka$$Lambda$7173.0x00007f8160b9ec48::apply(Object) -> Object
fifo write: @1699477104975612343 0x7f81e268fe94 230: aka$$Lambda$7175.0x00007f8160b9f0d8::<init>(aka, ajy) -> void
fifo write: @1699477104975715094 0x7f81e26903a3 257: dhk::a(akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104975791775 0x7f81e26908b4 679: net.minecraft.server.MinecraftServer::b(afp) -> void
fifo write: @1699477104975871516 0x7f81e2691034 1153: net.minecraft.server.MinecraftServer::d(Runnable) -> void
fifo write: @1699477104976290011 0x7f81e2691a87 2840: aka::a(cpc, ajy, dhk, java.util.concurrent.Executor, com.mojang.datafixers.util.Either) -> java.util.concurrent.CompletionStage
fifo write: @1699477104976956060 0x7f81e2692f77 7829: dhk$$Lambda$1681.0x00007f81605c2ce8::doWork(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104977116442 0x7f81e2696447 10438: aka::a(cpc, ajy, dhk, java.util.concurrent.Executor, java.util.List) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104977195783 0x7f81e269ad97 4513: alb::a(cpc, dhk) -> void
fifo write: @1699477104977454537 0x7f81e9b92a73 9045: akc$$Lambda$7108.0x00007f8160a5a000::run() -> void
fifo write: @1699477104979413122 0x7f81e269ccf4 226: dhp::f() -> cpc
fifo write: @1699477104979653005 0x7f81e269d1d7 1168: dhp::g() -> java.util.Map
fifo write: @1699477104984416896 0x7f81e269dc34 661: ac$$Lambda$5496.0x00007f8160a88b38::apply(Object) -> Object
fifo write: @1699477104984485327 0x7f81e269e3a3 275: java.util.concurrent.CompletableFuture::pushStack(java.util.concurrent.CompletableFuture$Completion) -> void
fifo write: @1699477104985872765 0x7f81e269eadf 7049: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477104988817193 0x7f81e26a1ad8 814: java.util.concurrent.CompletableFuture::postFire(java.util.concurrent.CompletableFuture, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477104993639145 0x7f81e9b97c2f 1782: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477104995342087 0x7f81e26a23b4 1475: java.util.concurrent.CompletableFuture::encodeRelay(Object) -> Object
fifo write: @1699477104997209361 0x7f81e9b98ce0 11: java.util.concurrent.CompletableFuture::reportJoin(Object) -> Object
fifo write: @1699477104997262781 0x7f81e26a2f14 240: afp::run() -> void
fifo write: @1699477104997311942 0x7f81e26a33b4 509: akq::b(dhf) -> void
fifo write: @1699477104997378653 0x7f81e26a3a14 240: java.util.Collections$UnmodifiableMap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477104997446914 0x7f81e26a3eb4 619: akq$$Lambda$7176.0x00007f8160b9f320::run() -> void
fifo write: @1699477104997508755 0x7f81e26a45f4 90: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::isEmpty() -> boolean
fifo write: @1699477104997592776 0x7f81e26a4a14 185: dvj$$Lambda$7177.0x00007f8160b9f780::<init>(it.unimi.dsi.fastutil.objects.Object2IntMap) -> void
fifo write: @1699477104997723337 0x7f81e26a4e74 422: dvj::a(it.unimi.dsi.fastutil.objects.Object2IntMap) -> it.unimi.dsi.fastutil.objects.Object2IntMap
fifo write: @1699477104997764928 0x7f81e26a5414 130: bfs::d(Runnable) -> void
fifo write: @1699477104997800808 0x7f81e26a5914 141: dvj$$Lambda$7178.0x00007f8160b9fbc0::<init>(long) -> void
fifo write: @1699477104997921320 0x7f81e26a5dd7 1902: dvj::a(cpc, java.util.Map) -> void
fifo write: @1699477104998037401 0x7f81e26a6dc7 2188: dvj::a(long, it.unimi.dsi.fastutil.objects.Object2IntMap) -> void
fifo write: @1699477104998178473 0x7f81e9b98fd8 1120: java.util.concurrent.CompletableFuture::postComplete() -> void
fifo write: @1699477105000030137 0x7f81e9b99c37 4014: java.util.concurrent.CompletableFuture$BiApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105000427782 0x7f81e9b9c493 852: ako::s() -> boolean
fifo write: @1699477105002703252 0x7f81e9b9d483 1548: java.util.concurrent.CompletableFuture::postFire(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105005826462 0x7f81e26a80c6 8043: java.util.concurrent.CompletableFuture$UniApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105011729828 0x7f81e26ab814 388: ajy$$Lambda$5488.0x00007f8160a85db8::apply(Object, Object) -> Object
fifo write: @1699477105013577082 0x7f81e26abcf4 222: ha::j() -> int
fifo write: @1699477105013609552 0x7f81e26ac174 222: ha::k() -> int
fifo write: @1699477105013638973 0x7f81e26ac5f4 222: ha::l() -> int
fifo write: @1699477105013787765 0x7f81e26aca74 527: ead::a(dfj) -> boolean
fifo write: @1699477105014214800 0x7f81e26ad09a 965: ead::a(cpb, gw, dfj, ha) -> eig
fifo write: @1699477105014267871 0x7f81e26ad994 31: gw$a::c(ha) -> gw$a
fifo write: @1699477105014338222 0x7f81e26addba 952: dfi$a::b(cpb, gw) -> int
fifo write: @1699477105014733857 0x7f81e9b9e940 3801: ac$$Lambda$5496.0x00007f8160a88b38::apply(Object) -> Object
fifo write: @1699477105014789618 0x7f81e26ae6f9 1661: eid::b(eig, eig) -> boolean
fifo write: @1699477105014834768 0x7f81e26af437 1195: gw$a::g(hy) -> gw$a
fifo write: @1699477105014883919 0x7f81e26afed7 1993: gw$a::c(ha, int) -> gw$a
fifo write: @1699477105014959700 0x7f81e26b0e17 3426: dzw::a(cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477105015315724 0x7f81e26b2594 248: dzw::b(int, int) -> void
fifo write: @1699477105015374695 0x7f81e9ba0f5c 99: dhf::b(int) -> dhr
fifo write: @1699477105015429796 0x7f81e26b2abd 338: asj::b(int, int) -> void
fifo write: @1699477105015486377 0x7f81e26b3157 2006: gw$a::a(hy, ha) -> gw$a
fifo write: @1699477105016107205 0x7f81e26b4277 6876: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477105016993856 0x7f81e26b70f7 414: hw::a(long, int, int, int) -> long
fifo write: @1699477105017445732 0x7f81e26b76dc 1262: eaa::f(long) -> void
fifo write: @1699477105017537853 0x7f81e26b8274 385: eaa$a::a(byte, int) -> byte
fifo write: @1699477105017580184 0x7f81e26b8859 1120: eaa::a(long, byte) -> void
fifo write: @1699477105018104110 0x7f81e26b92b7 806: eaa::b(long) -> boolean
fifo write: @1699477105018329533 0x7f81e26b9b14 2210: dzx::c(long) -> dhl
fifo write: @1699477105018902431 0x7f81e26bad14 275: ako$$Lambda$7187.0x00007f8160ba2338::<init>(ako, hw, cqe) -> void
fifo write: @1699477105019062173 0x7f81e9ba1650 47: java.util.concurrent.CompletableFuture::getNow(Object) -> Object
fifo write: @1699477105019148194 0x7f81e26bb2d4 1134: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::nextLong() -> long
fifo write: @1699477105019187064 0x7f81e26bbf14 343: aka::b(long) -> ajy
fifo write: @1699477105019297176 0x7f81e9ba1977 404: it.unimi.dsi.fastutil.longs.LongOpenHashSet::add(long) -> boolean
fifo write: @1699477105019342296 0x7f81e26bc494 469: ako::b(long) -> ajy
fifo write: @1699477105019778482 0x7f81e26bcb97 2092: ako$$Lambda$7187.0x00007f8160ba2338::run() -> void
fifo write: @1699477105019862353 0x7f81e26bdd17 1958: ako::a(hw, cqe) -> void
fifo write: @1699477105019948184 0x7f81e26bec94 114: java.util.concurrent.CompletableFuture::getNow(Object) -> Object
fifo write: @1699477105019991535 0x7f81e9ba21cc 2: asj::b() -> int
fifo write: @1699477105020154217 0x7f81e26bf1f7 2949: ajy::a(dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105020517702 0x7f81e26c0937 3611: ajy::b(dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105020904727 0x7f81e26c26ce 8904: ajy::a(cqe, int) -> void
fifo write: @1699477105021596106 0x7f81e9ba24f3 588: eab::J_() -> boolean
fifo write: @1699477105022343815 0x7f81e9ba3194 851: akt::b() -> void
fifo write: @1699477105022436136 0x7f81e26c61b9 682: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::put(long, Object) -> Object
fifo write: @1699477105022481457 0x7f81e26c6994 93: dzx::a(long, dhl) -> void
fifo write: @1699477105022599899 0x7f81e26c6d94 428: it.unimi.dsi.fastutil.longs.Long2ObjectFunctions$SynchronizedFunction::get(long) -> Object
fifo write: @1699477105022656439 0x7f81e26c7474 965: it.unimi.dsi.fastutil.longs.LongOpenHashSet::remove(long) -> boolean
fifo write: @1699477105022722510 0x7f81e26c7f81 1378: eaa::l(long) -> void
fifo write: @1699477105023077625 0x7f81e9ba4250 51: ako::b() -> int
fifo write: @1699477105025957552 0x7f81e26c8cd5 5413: aka::a(int, int, int, java.util.List) -> com.mojang.datafixers.util.Either
fifo write: @1699477105027914197 0x7f81e26cb1d4 795: it.unimi.dsi.fastutil.longs.LongOpenHashSet::contains(long) -> boolean
fifo write: @1699477105027968118 0x7f81e26cbb14 140: dhl::<init>(int) -> void
fifo write: @1699477105028038239 0x7f81e26cbf54 1108: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::get(long) -> int
fifo write: @1699477105028113560 0x7f81e9ba4bc0 219: eid::b(eig, eig) -> boolean
fifo write: @1699477105028147660 0x7f81e26ccb14 241: dhl::<init>() -> void
fifo write: @1699477105028188971 0x7f81e9ba5150 79: gw$a::c(ha, int) -> gw$a
fifo write: @1699477105028404163 0x7f81e9ba55b3 304: dzw::a(cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477105029684240 0x7f81e9ba5d59 158: cpx::am() -> int
fifo write: @1699477105032316474 0x7f81e26cd08e 3278: eaa::d(long, boolean) -> void
fifo write: @1699477105032365345 0x7f81e9ba6605 350: cpx::ak() -> int
fifo write: @1699477105033243806 0x7f81e9ba6df5 1562: dzx::c(long) -> dhl
fifo write: @1699477105035041099 0x7f81e9ba7ff0 1655: eaa::b(long) -> boolean
fifo write: @1699477105035088959 0x7f81e26ce8d4 885: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::find(long) -> int
fifo write: @1699477105035399543 0x7f81e26cf2b4 956: eaa::g(long) -> dhl
fifo write: @1699477105035440734 0x7f81e26cfb39 329: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::put(long, int) -> int
fifo write: @1699477105035562545 0x7f81e26d0177 2272: eag::h(long) -> void
fifo write: @1699477105035801808 0x7f81e26d129c 3474: eag::g(long) -> dhl
fifo write: @1699477105037634092 0x7f81e26d2be0 2871: java.util.concurrent.CompletableFuture::uniAcceptNow(Object, java.util.concurrent.Executor, java.util.function.Consumer) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105038524933 0x7f81e26d40b7 987: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::fixPointers(int, int) -> void
fifo write: @1699477105038917138 0x7f81e9ba92b0 315: java.util.Arrays::fill(long[], long) -> void
fifo write: @1699477105041955148 0x7f81e9ba9976 5225: eaa::a(ead) -> void
fifo write: @1699477105042025959 0x7f81e9bad33a 328: akc::a(akb, bfq) -> void
fifo write: @1699477105043871842 0x7f81e9badab4 3466: net.minecraft.server.MinecraftServer::bg() -> boolean
fifo write: @1699477105044219307 0x7f81e9bb105b 3868: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477105045033217 0x7f81e9bb3939 62: java.util.stream.Nodes::flatten(java.util.stream.Node, java.util.function.IntFunction) -> java.util.stream.Node
fifo write: @1699477105047924235 0x7f81e26d4cd4 885: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::find(long) -> int
fifo write: @1699477105049015809 0x7f81e9bb3db8 3650: net.minecraft.server.MinecraftServer::x() -> boolean
fifo write: @1699477105049155631 0x7f81e26d597f 10376: eaa::a(ead) -> void
fifo write: @1699477105051838525 0x7f81e9bb73ff 1345: java.util.stream.ReferencePipeline::makeNodeBuilder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477105053402155 0x7f81e9bb81bd 1100: eaa::a(long, byte) -> void
fifo write: @1699477105054335057 0x7f81e9bb94f2 4046: bfo::c(java.util.function.BooleanSupplier) -> void
fifo write: @1699477105054396898 0x7f81e9bbd263 82: hw::a(long) -> hw
fifo write: @1699477105054457859 0x7f81e26d9cd7 1161: ead::a(hw, boolean) -> void
fifo write: @1699477105054527360 0x7f81e26da719 396: aka$$Lambda$5487.0x00007f8160a85188::apply(Object) -> Object
fifo write: @1699477105054620441 0x7f81e26dadb7 2142: ac::b(java.util.List, Void) -> java.util.List
fifo write: @1699477105054718862 0x7f81e26dbe77 2520: ac$$Lambda$5385.0x00007f8160a57ab8::apply(Object) -> Object
fifo write: @1699477105055556033 0x7f81e26dd157 2439: dhk$$Lambda$1678.0x00007f81605c1d50::doWork(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105055678665 0x7f81e26de43a 2340: dhk::e(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105058242308 0x7f81e9bbd834 7451: net.minecraft.server.MinecraftServer::u_() -> void
fifo write: @1699477105058329069 0x7f81e9bc5480 953: eaa::f(long) -> void
fifo write: @1699477105059214780 0x7f81e26df614 348: eaa::j(long) -> boolean
fifo write: @1699477105059734747 0x7f81e26dfb74 90: it.unimi.dsi.fastutil.longs.LongOpenHashSet::isEmpty() -> boolean
fifo write: @1699477105059868319 0x7f81e9bc61d3 556: ako$$Lambda$7187.0x00007f8160ba2338::<init>(ako, hw, cqe) -> void
fifo write: @1699477105060192563 0x7f81e9bc6853 412: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::nextLong() -> long
fifo write: @1699477105060823881 0x7f81e9bc70b7 4202: java.util.concurrent.CompletableFuture$BiApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105062038167 0x7f81e917839e 617: ajy::a(cqe, int) -> void
fifo write: @1699477105062277200 0x7f81e92706ce 3148: aka::a(int, int, int, java.util.List) -> com.mojang.datafixers.util.Either
fifo write: @1699477105062702735 0x7f81e9177e50 163: dhf::I_() -> int
fifo write: @1699477105062875088 0x7f81e94dc4d3 488: dzw::b(int, int) -> void
fifo write: @1699477105063276233 0x7f81e26dff94 114: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry::getValue() -> Object
fifo write: @1699477105063336534 0x7f81e26e0414 112: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::remove() -> void
fifo write: @1699477105063607767 0x7f81e26e08f9 1144: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::remove() -> void
fifo write: @1699477105063825310 0x7f81e26e1499 2303: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::shiftKeys(int) -> void
fifo write: @1699477105067033621 0x7f81e99669b0 1439: ako$$Lambda$7187.0x00007f8160ba2338::run() -> void
fifo write: @1699477105067914123 0x7f81e9442253 1037: bft$c::a(Object) -> boolean
fifo write: @1699477105068600542 0x7f81e99487d0 63: java.util.stream.Nodes$FixedNodeBuilder::end() -> void
fifo write: @1699477105068639442 0x7f81e9946ed0 87: java.util.stream.Nodes$FixedNodeBuilder::begin(long) -> void
fifo write: @1699477105068743223 0x7f81e903add0 71: java.util.stream.Nodes$ArrayNode::asArray(java.util.function.IntFunction) -> Object[]
fifo write: @1699477105070430455 0x7f81e222e114 324: java.util.concurrent.CompletableFuture$AsyncSupply::<init>(java.util.concurrent.CompletableFuture, java.util.function.Supplier) -> void
fifo write: @1699477105070535867 0x7f81e15be294 458: java.util.concurrent.CompletableFuture::supplyAsync(java.util.function.Supplier, java.util.concurrent.Executor) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105070621638 0x7f81e159383d 1370: java.util.concurrent.CompletableFuture::asyncSupplyStage(java.util.concurrent.Executor, java.util.function.Supplier) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105070852211 0x7f81e17fd99e 2900: eab::a(hw, boolean) -> void
fifo write: @1699477105070887981 0x7f81e903aacc 2: afp::a() -> int
fifo write: @1699477105071573640 0x7f81e23f2937 6279: java.util.concurrent.CompletableFuture$AsyncSupply::run() -> void
fifo write: @1699477105072564843 0x7f81e94e67c0 2695: aka::a(int, int, int, java.util.List) -> com.mojang.datafixers.util.Either
fifo write: @1699477105076954109 0x7f81e161b1f4 231: dhp::a(boolean) -> void
fifo write: @1699477105077030320 0x7f81e1406ed4 1393: ajy::d() -> dhq
fifo write: @1699477105077669608 0x7f81e996a99c 2463: dzy::a(long, long, int, int, int, boolean) -> void
fifo write: @1699477105078236945 0x7f81e9ae69d0 147: ajy::a(dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105078755192 0x7f81e1bfb520 2004: java.util.concurrent.CompletableFuture::uniApplyStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105079111906 0x7f81e926f5a4 1235: java.util.concurrent.CompletableFuture::biApply(Object, Object, java.util.function.BiFunction, java.util.concurrent.CompletableFuture$BiApply) -> boolean
fifo write: @1699477105084007890 0x7f81e94c9437 4154: java.util.concurrent.CompletableFuture$BiApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105084123131 0x7f81e91beb48 366: akc::a(bfq, java.util.function.Function, long, java.util.function.IntSupplier, boolean) -> void
fifo write: @1699477105084210052 0x7f81e99e6878 526: akc::a(bfq, boolean, akc$a) -> void
fifo write: @1699477105084304374 0x7f81e9540c70 646: akc$$Lambda$5372.0x00007f8160a45b88::accept(Object) -> void
fifo write: @1699477105084769740 0x7f81e99170b8 796: akc$$Lambda$7108.0x00007f8160a5a000::<init>(akc, bfq, java.util.function.IntSupplier, long, java.util.function.Function, boolean) -> void
fifo write: @1699477105085493229 0x7f81e18d2fff 2639: java.util.concurrent.CompletableFuture::complete(Object) -> boolean
fifo write: @1699477105086260569 0x7f81e9916950 382: java.util.concurrent.locks.LockSupport::parkNanos(Object, long) -> void
fifo write: @1699477105091103891 0x7f81e1632794 288: bfr::a(Object) -> void
fifo write: @1699477105091543457 0x7f81e9752d60 18: java.util.concurrent.CompletableFuture$Completion::run() -> void
fifo write: @1699477105092593771 0x7f81e8bda400 464: I2C/C2I adapters(0xbbbeabea)
fifo write: @1699477105098351115 0x7f81e9aec04f 1433: bfq$$Lambda$5369.0x00007f8160a45000::accept(Object) -> void
fifo write: @1699477105100478792 0x7f81e99db95a 4457: eaa::d(long, boolean) -> void
fifo write: @1699477105100611864 0x7f81e95099fc 1043: ako::a(cqe, hw) -> void
fifo write: @1699477105102248125 0x7f81e95407c2 85: java.lang.invoke.LambdaForm$MH.0x00007f8160228c00::linkToTargetMethod(Object, long, Object) -> Object
fifo write: @1699477105102880333 0x7f81e9941fa4 1207: bfo::execute(Runnable) -> void
fifo write: @1699477105103346769 0x7f81e996a3cf 144: akc$$Lambda$7121.0x00007f8160a69000::run() -> void
fifo write: @1699477105103524522 0x7f81e99e129e 2694: java.util.concurrent.CompletableFuture::uniAcceptStage(java.util.concurrent.Executor, java.util.function.Consumer) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105103634843 0x7f81e98328f0 597: akb$$Lambda$7114.0x00007f8160a5af90::apply(Object) -> Object
fifo write: @1699477105104801988 0x7f81e99e4370 2537: bfq::b(java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105105600478 0x7f81e9941bd0 67: java.util.stream.Nodes$FixedNodeBuilder::build() -> java.util.stream.Node
fifo write: @1699477105109086923 0x7f81e1fbabdf 2446: java.util.concurrent.CompletableFuture::completeRelay(Object) -> boolean
fifo write: @1699477105109475098 0x7f81e95096cc 6: dhf::r() -> did
fifo write: @1699477105112644739 0x7f81e997b7d8 339: java.util.HashMap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477105113743073 0x7f81e9a1a4ef 3154: akc$$Lambda$7119.0x00007f8160a5baa8::apply(Object) -> Object
fifo write: @1699477105114282230 0x7f81e996d959 1452: java.util.concurrent.CompletableFuture::postFire(java.util.concurrent.CompletableFuture, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105115540126 0x7f81e97a6990 3241: akc$$Lambda$7115.0x00007f8160a5b1d8::apply(Object) -> Object
fifo write: @1699477105117573722 0x7f81e153a394 60: java.io.DataInputStream::readDouble() -> double
fifo write: @1699477105117614863 0x7f81e1a7bff7 306: qx$1::d(java.io.DataInput, rf) -> double
fifo write: @1699477105117715634 0x7f81e9633d15 1300: bfr::i() -> void
fifo write: @1699477105117744334 0x7f81e97a65cc 3: dhf::v() -> boolean
fifo write: @1699477105117902526 0x7f81e1b23314 189: aka$$Lambda$7183.0x00007f8160ba1878::<init>(aka, long) -> void
fifo write: @1699477105118075789 0x7f81e1705754 770: aka::e(long) -> int
fifo write: @1699477105118114319 0x7f81e182d7d4 880: aka$$Lambda$7183.0x00007f8160ba1878::getAsInt() -> int
fifo write: @1699477105118213130 0x7f81e1800c17 1407: akt::a(int, int, akt$a, Runnable) -> void
fifo write: @1699477105118255011 0x7f81e1953bd7 1136: aka::c(long) -> java.util.function.IntSupplier
fifo write: @1699477105118872009 0x7f81e9aeec4f 1404: bft$c::a() -> Object
fifo write: @1699477105120248727 0x7f81e9570c93 3500: eaa::b() -> void
fifo write: @1699477105120652262 0x7f81e1c66314 143: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::isHeldExclusively() -> boolean
fifo write: @1699477105124358610 0x7f81e90984dd 550: java.lang.invoke.MethodHandles$Lookup::maybeBindCaller(java.lang.invoke.MemberName, java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandles$Lookup) -> java.lang.invoke.MethodHandle
fifo write: @1699477105124963658 0x7f81e8c02480 464: I2C/C2I adapters(0xbbaaa6)
fifo write: @1699477105125641516 0x7f81e8c02180 496: I2C/C2I adapters(0xbaaaa7ebb)
fifo write: @1699477105125652457 0x7f81e8c01e80 464: I2C/C2I adapters(0xbaaab6)
fifo write: @1699477105125663147 0x7f81e8c01b80 456: I2C/C2I adapters(0xbaaabbe)
fifo write: @1699477105126096222 0x7f81e8bffe00 472: I2C/C2I adapters(0xbbbb6a6)
fifo write: @1699477105127161336 0x7f81e8bf9280 456: I2C/C2I adapters(0xbb7eaa)
fifo write: @1699477105127175606 0x7f81e8bf8f80 448: I2C/C2I adapters(0xbb7e6)
fifo write: @1699477105131179148 0x7f81e9a60c53 19102: akc$$Lambda$7113.0x00007f8160a5ad68::run() -> void
fifo write: @1699477105131250809 0x7f81e9974e1d 1454: jdk.internal.org.objectweb.asm.MethodWriter::visitVarInsn(int, int) -> void
fifo write: @1699477105131291259 0x7f81e1732b54 1415: qw::b(String, int) -> boolean
fifo write: @1699477105131442661 0x7f81e144c0d4 963: dhf::g() -> java.util.Map
fifo write: @1699477105133278195 0x7f81e9aee7d0 59: java.util.concurrent.CompletableFuture::getNow(Object) -> Object
fifo write: @1699477105134945456 0x7f81e982ebcc 50: dia::a(eab) -> void
fifo write: @1699477105135061378 0x7f81e982e7cc 2: it.unimi.dsi.fastutil.longs.AbstractLong2IntFunction::defaultReturnValue(int) -> void
fifo write: @1699477105136294044 0x7f81e147fe39 879: dzw::a() -> int
fifo write: @1699477105136737990 0x7f81e1f34c34 810: java.util.RegularEnumSet::remove(Object) -> boolean
fifo write: @1699477105137294967 0x7f81e9183afe 1513: java.util.concurrent.CompletableFuture::thenApply(java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105137356388 0x7f81e1c12c81 1363: dzw::a(dhf) -> void
fifo write: @1699477105137456709 0x7f81e9ae9678 1098: bfo::i(Runnable) -> void
fifo write: @1699477105137512420 0x7f81e918354c 44: eiu::a(java.util.function.BiConsumer) -> void
fifo write: @1699477105137573800 0x7f81e187b734 760: net.minecraft.server.MinecraftServer::e(Runnable) -> boolean
fifo write: @1699477105137626751 0x7f81e14d2194 283: net.minecraft.server.MinecraftServer::a(afp) -> boolean
fifo write: @1699477105137904965 0x7f81e257c5f7 9755: did::a(dhq, hb) -> void
fifo write: @1699477105141116896 0x7f81e99883d3 412: asj::b(int, int) -> void
fifo write: @1699477105143946063 0x7f81e94e624f 192: java.util.concurrent.ConcurrentHashMap::sumCount() -> long
fifo write: @1699477105145320560 0x7f81e94e5e58 18: java.util.concurrent.CompletableFuture::thenAccept(java.util.function.Consumer) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105146951511 0x7f81e1d54314 125: akc$$Lambda$7108.0x00007f8160a5a000::run() -> void
fifo write: @1699477105147175124 0x7f81e1cf1586 1153: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2ObjectFunction) -> Object
fifo write: @1699477105147364337 0x7f81e1c694c6 3332: java.util.concurrent.CompletableFuture$UniRelay::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105147916904 0x7f81e1f834b4 1609: net.minecraft.server.MinecraftServer::at() -> boolean
fifo write: @1699477105150085652 0x7f81e1894f54 885: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::find(long) -> int
fifo write: @1699477105153863590 0x7f81e1beb837 833: dzx::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477105154031403 0x7f81e946ebf5 1954: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477105154102694 0x7f81e1fa9b54 1134: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::nextLong() -> long
fifo write: @1699477105154422628 0x7f81e946e8d9 38: dhk::b(dhk) -> boolean
fifo write: @1699477105154840443 0x7f81e187a2f9 1880: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::clone() -> it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap
fifo write: @1699477105155406350 0x7f81e1e7661f 4948: eaa::b() -> void
fifo write: @1699477105155446521 0x7f81e14774b4 539: eaa::b(long, boolean) -> void
fifo write: @1699477105155495631 0x7f81e199c157 1056: ead::a(cpc, boolean) -> void
fifo write: @1699477105155557322 0x7f81e1bac3b9 927: it.unimi.dsi.fastutil.longs.LongOpenHashSet::shiftKeys(int) -> void
fifo write: @1699477105155597452 0x7f81e946e5cc 6: dhf::B() -> dzw
fifo write: @1699477105155769415 0x7f81e1e29b0f 6392: akt::b(dhf, cpc) -> void
fifo write: @1699477105155814015 0x7f81e15e1e34 418: it.unimi.dsi.fastutil.longs.LongOpenHashSet::removeEntry(int) -> boolean
fifo write: @1699477105156846168 0x7f81e1d417d9 853: java.util.concurrent.CompletableFuture$BiApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105158399108 0x7f81e9ae8ad3 536: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::nextLong() -> long
fifo write: @1699477105161218025 0x7f81e9832550 91: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry::getValue() -> Object
fifo write: @1699477105164732870 0x7f81e9186906 3679: akc$$Lambda$7122.0x00007f8160a69228::accept(Object) -> void
fifo write: @1699477105165783364 0x7f81e97c0776 1289: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::put(long, Object) -> Object
fifo write: @1699477105167820100 0x7f81e1e32754 1123: aka$$Lambda$5365.0x00007f8160a46db0::accept(Object) -> void
fifo write: @1699477105168806463 0x7f81e97bfa74 845: java.util.Comparator$$Lambda$4080.0x00007f81608741d0::compare(Object, Object) -> int
fifo write: @1699477105170092739 0x7f81e95893b7 4198: java.util.concurrent.CompletableFuture$BiApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105170264162 0x7f81e21b05f4 229: dhp::v() -> boolean
fifo write: @1699477105170376613 0x7f81e1fa7494 838: dhk::a(dhf) -> boolean
fifo write: @1699477105170561916 0x7f81e984d3d0 308: com.mojang.serialization.DataResult::resultOrPartial(java.util.function.Consumer) -> java.util.Optional
fifo write: @1699477105174768700 0x7f81e222e694 188: afp::<init>(int, Runnable) -> void
fifo write: @1699477105174840811 0x7f81e1b7576a 298: net.minecraft.server.MinecraftServer::a(Runnable) -> afp
fifo write: @1699477105174908442 0x7f81e1ea1f1a 604: net.minecraft.server.MinecraftServer::f(Runnable) -> Runnable
fifo write: @1699477105181467536 0x7f81e9bca6fd 47146: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477105181524267 0x7f81e984d0cc 2: aee::a() -> int
fifo write: @1699477105181588228 0x7f81e15d2374 27: java.util.concurrent.locks.ReentrantReadWriteLock::writeLock() -> java.util.concurrent.locks.Lock
fifo write: @1699477105181658069 0x7f81e186c757 973: qx$1::a(java.io.DataInput, rf) -> qx
fifo write: @1699477105181718560 0x7f81e1ca7fd0 1720: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::tryAcquire(int) -> boolean
fifo write: @1699477105181851391 0x7f81e1add6d7 1086: qx$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477105182692742 0x7f81e93dd875 8122: java.util.concurrent.CompletableFuture$UniCompose::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105182746793 0x7f81e1c54c19 1230: bfr::run() -> void
fifo write: @1699477105182810974 0x7f81e9b151fe 542: it.unimi.dsi.fastutil.longs.LongOpenHashSet::remove(long) -> boolean
fifo write: @1699477105183450312 0x7f81e9617838 6821: java.util.concurrent.CompletableFuture$UniAccept::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105184641767 0x7f81e9a5413b 4655: java.util.concurrent.ForkJoinPool::execute(Runnable) -> void
fifo write: @1699477105186142897 0x7f81e9832008 45: akb$$Lambda$7110.0x00007f8160a5a448::get(long) -> Object
fifo write: @1699477105186257858 0x7f81e238c694 185: ajy$$Lambda$7202.0x00007f8160ba6478::<init>(java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477105186720394 0x7f81e99bb0bd 4488: java.util.concurrent.ForkJoinPool::externalSubmit(java.util.concurrent.ForkJoinTask) -> java.util.concurrent.ForkJoinTask
fifo write: @1699477105186781015 0x7f81e1ddf4f7 1788: ajy$$Lambda$5527.0x00007f8160a935f0::accept(Object) -> void
fifo write: @1699477105186854206 0x7f81e22eed57 1434: ajy::a(java.util.concurrent.CompletableFuture, com.mojang.datafixers.util.Either) -> void
fifo write: @1699477105187007428 0x7f81e9814a95 2710: java.util.concurrent.CompletableFuture$UniApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105187155110 0x7f81e228dfff 3067: ajy::a(java.util.concurrent.CompletableFuture, dhq) -> void
fifo write: @1699477105187265741 0x7f81e1bff237 3421: ajy$$Lambda$7202.0x00007f8160ba6478::accept(Object) -> void
fifo write: @1699477105187455154 0x7f81e981474c 6: akv::a() -> java.util.Comparator
fifo write: @1699477105187500144 0x7f81e1922c94 453: akv$$Lambda$5449.0x00007f8160a792a0::applyAsLong(Object) -> long
fifo write: @1699477105187534295 0x7f81e96173cc 44: dhq::b(java.util.function.Supplier) -> void
fifo write: @1699477105187576515 0x7f81e1968694 467: dhp::b(boolean) -> void
fifo write: @1699477105187622586 0x7f81e9616fcc 6: dhp::C() -> dhq
fifo write: @1699477105187663656 0x7f81e1c53c14 487: eiu::b() -> eiz
fifo write: @1699477105187695937 0x7f81e1978ef4 103: java.util.PriorityQueue::peek() -> Object
fifo write: @1699477105187719697 0x7f81e93dd3cc 5: dhq::c(boolean) -> void
fifo write: @1699477105187744997 0x7f81e93dcecc 9: akq::l() -> eiw
fifo write: @1699477105187769548 0x7f81e99baccc 9: akq::m() -> eiw
fifo write: @1699477105187882799 0x7f81e1ffa2fe 1299: eiw::a(cpc, eiu) -> void
fifo write: @1699477105188307525 0x7f81e1c89657 1021: dhl::b() -> dhl
fifo write: @1699477105190456332 0x7f81e23f0374 155: dhl::d() -> boolean
fifo write: @1699477105190605124 0x7f81e21fd581 1141: eaa::c(long) -> dhl
fifo write: @1699477105190768226 0x7f81e99ba9e0 20: cpx::g(int) -> int
fifo write: @1699477105192237545 0x7f81e9b145f8 1003: it.unimi.dsi.fastutil.longs.Long2ObjectFunctions$SynchronizedFunction::get(long) -> Object
fifo write: @1699477105192915124 0x7f81e9b1a13c 1443: java.util.Spliterator$OfLong::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477105193694754 0x7f81e1c02914 59: java.io.DataInputStream::readFloat() -> float
fifo write: @1699477105193754925 0x7f81e1ae04f7 290: qz$1::d(java.io.DataInput, rf) -> float
fifo write: @1699477105193796035 0x7f81e1a64074 569: qz::a(float) -> qz
fifo write: @1699477105193876126 0x7f81e2408657 1082: qz$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477105193971977 0x7f81e1cd2db7 1334: eag$a::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap, it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap, int) -> void
fifo write: @1699477105194035398 0x7f81e2227e57 969: qz$1::a(java.io.DataInput, rf) -> qz
fifo write: @1699477105194327062 0x7f81e1e19e94 101: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock::lock() -> void
fifo write: @1699477105194426103 0x7f81e1d59eb4 457: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock::unlock() -> void
fifo write: @1699477105194515414 0x7f81e1e93cd4 994: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::tryRelease(int) -> boolean
fifo write: @1699477105194914829 0x7f81e22fcc97 655: eag$a::a() -> eag$a
fifo write: @1699477105194970280 0x7f81e1f94079 1880: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::clone() -> it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap
fifo write: @1699477105199400117 0x7f81e221fff4 965: it.unimi.dsi.fastutil.longs.LongOpenHashSet::remove(long) -> boolean
fifo write: @1699477105200034875 0x7f81e9b198d2 457: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::get(long) -> int
fifo write: @1699477105202391766 0x7f81e20e6db4 363: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::insert(int, long, int) -> void
fifo write: @1699477105202786651 0x7f81e24963b9 680: java.util.concurrent.CompletableFuture$UniExceptionally::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105205900091 0x7f81e99ba6cc 6: aee::b() -> aef
fifo write: @1699477105206066213 0x7f81e8c01880 472: I2C/C2I adapters(0xbbb67e7e)
fifo write: @1699477105206082213 0x7f81e8c01580 488: I2C/C2I adapters(0xbbbb67e7eb)
fifo write: @1699477105206098753 0x7f81e8c01280 480: I2C/C2I adapters(0xbbb67e7eb)
fifo write: @1699477105206114744 0x7f81e8c00f80 480: I2C/C2I adapters(0xbbbb67e7e)
fifo write: @1699477105206666871 0x7f81e8c00c80 464: I2C/C2I adapters(0xbb7e66a)
fifo write: @1699477105208895420 0x7f81e1eae294 31: eag$a::b() -> dzx
fifo write: @1699477105209579818 0x7f81e22295c7 9283: java.util.concurrent.CompletableFuture::uniExceptionally(Object, java.util.function.Function, java.util.concurrent.CompletableFuture$UniExceptionally) -> boolean
fifo write: @1699477105212599387 0x7f81e1d7588c 1864: akd::a(long, long, int) -> int
fifo write: @1699477105214418031 0x7f81e9ad146a 20303: akc::b(akb, bfq) -> void
fifo write: @1699477105214599883 0x7f81e237ac67 15638: net.minecraft.server.MinecraftServer::b(akz) -> void
fifo write: @1699477105214679994 0x7f81e1eb3d97 36: java.util.concurrent.CompletableFuture::exceptionally(java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105214749105 0x7f81e9b142cc 6: aeh$a::b() -> Object
fifo write: @1699477105215351823 0x7f81e9b13e4c 6: cpv::z_() -> ecd
fifo write: @1699477105216795162 0x7f81e2412ce7 15620: net.minecraft.server.MinecraftServer::b(akz) -> void
fifo write: @1699477105218908839 0x7f81e9b1914c 3: eck::e() -> long
fifo write: @1699477105218954699 0x7f81e93b4e4c 6: ajy::e() -> java.util.concurrent.CompletableFuture
fifo write: @1699477105219333814 0x7f81e93b4b4c 4: qx::j() -> double
fifo write: @1699477105219417375 0x7f81e2242e21 1966: eiu::a(long) -> void
fifo write: @1699477105219892912 0x7f81e1db48df 8036: dhq::H() -> void
fifo write: @1699477105220519440 0x7f81e93b454c 4: qz::k() -> float
fifo write: @1699477105220694382 0x7f81e23229d4 891: qw::l(String) -> String
fifo write: @1699477105221348930 0x7f81e2332334 771: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::containsKey(int) -> boolean
fifo write: @1699477105221409851 0x7f81e23f2294 201: aqv::e(int) -> int
fifo write: @1699477105221448382 0x7f81e1f12a74 63: aeg::b(aef) -> int
fifo write: @1699477105221531133 0x7f81e1dfc459 564: aqv::a(Object) -> int
fifo write: @1699477105221587123 0x7f81e222f014 275: aeh$a::<init>(aee, Object) -> void
fifo write: @1699477105221637594 0x7f81e24479b4 803: aqv::b(Object, int) -> int
fifo write: @1699477105221683225 0x7f81e224d83c 1595: aeh::a(aee, Object) -> void
fifo write: @1699477105221956398 0x7f81e1404719 1943: aeh::c(aee, Object) -> void
fifo write: @1699477105222148661 0x7f81e2432014 175: dhk$$Lambda$1689.0x00007f81605c6000::doWork(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105222184901 0x7f81e1f3a194 117: dhf::A() -> void
fifo write: @1699477105222223122 0x7f81e2256594 350: dhp::A() -> void
fifo write: @1699477105222341363 0x7f81e2256f14 275: akt$$Lambda$7181.0x00007f8160ba1428::<init>(akt, dhf, cpc) -> void
fifo write: @1699477105222492115 0x7f81e245a014 185: akt$$Lambda$7182.0x00007f8160ba1650::<init>(cpc) -> void
fifo write: @1699477105222542656 0x7f81e2268794 283: akt$$Lambda$7184.0x00007f8160ba1aa0::<init>(akt, cpc, boolean, dhf) -> void
fifo write: @1699477105222618797 0x7f81e1c147a4 2437: dhk::c(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105222676147 0x7f81e2285ba1 2335: dhk::a(akt, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105222720488 0x7f81e93b4210 19: Integer::compare(int, int) -> int
fifo write: @1699477105222769009 0x7f81e245bf97 106: akt$$Lambda$7185.0x00007f8160ba1cc8::execute(Runnable) -> void
fifo write: @1699477105222806739 0x7f81e1ec4894 230: akt$$Lambda$7185.0x00007f8160ba1cc8::<init>(akt, cpc) -> void
fifo write: @1699477105222891240 0x7f81e1fe9d1c 109: akt::b(cpc, Runnable) -> void
fifo write: @1699477105222934611 0x7f81e1b18d74 490: java.util.Objects::requireNonNullElse(Object, Object) -> Object
fifo write: @1699477105222963741 0x7f81e201c814 109: akt$$Lambda$7181.0x00007f8160ba1428::run() -> void
fifo write: @1699477105222999922 0x7f81e238f394 273: akt$$Lambda$7184.0x00007f8160ba1aa0::get() -> Object
fifo write: @1699477105223029842 0x7f81e23539b4 597: eab::a(cpc, boolean) -> void
fifo write: @1699477105223328406 0x7f81e1fcb347 2326: akt::a(cpc, boolean, dhf) -> dhf
fifo write: @1699477105223389067 0x7f81e93b3452 833: dzw::a(dhf) -> void
fifo write: @1699477105223637540 0x7f81e211f987 6177: akt::a(dhf, boolean) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105223888223 0x7f81e93b2e53 210: java.util.concurrent.CompletableFuture$UniCompletion::claim() -> boolean
fifo write: @1699477105225869829 0x7f81e9985b59 3396: bfr::a(Object) -> void
fifo write: @1699477105229558216 0x7f81e93b21f1 974: dzw::a() -> int
fifo write: @1699477105231218058 0x7f81e9985615 224: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.longs.LongOpenHashSet, it.unimi.dsi.fastutil.longs.LongOpenHashSet$1) -> void
fifo write: @1699477105231553192 0x7f81e99852d0 35: akc$$Lambda$7170.0x00007f8160b9e598::getAsInt() -> int
fifo write: @1699477105232312402 0x7f81e9984939 753: akc::a(ajy, Runnable) -> akc$a
fifo write: @1699477105234705583 0x7f81e2244d37 930: dzv$a::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477105235859978 0x7f81e9a17838 1452: bfr::run() -> void
fifo write: @1699477105237087323 0x7f81e9a16884 1119: dzw::a(dhf) -> void
fifo write: @1699477105237269536 0x7f81e1f2db0b 271: dzv$a::a() -> dzv$a
fifo write: @1699477105241289247 0x7f81e9a15cd2 905: dzw::a() -> int
fifo write: @1699477105250212022 0x7f81e9a150f4 931: aka$$Lambda$5474.0x00007f8160a7ee00::execute(Runnable) -> void
fifo write: @1699477105250526246 0x7f81e1fe3e37 428: dzv$a::b() -> dzx
fifo write: @1699477105250935322 0x7f81e2406c77 347: Long::formatUnsignedLong0(long, int, byte[], int, int) -> void
fifo write: @1699477105251107814 0x7f81e2253914 233: bqb::<init>() -> void
fifo write: @1699477105251836653 0x7f81e19ae6c6 674: java.lang.invoke.LambdaForm$MH.0x00007f81608bc800::linkToTargetMethod(Object, int, Object, Object) -> Object
fifo write: @1699477105251967755 0x7f81e2002b03 1538: java.lang.invoke.LambdaForm$DMH.0x00007f816039c000::newInvokeSpecial(Object, Object, int, Object) -> Object
fifo write: @1699477105253492185 0x7f81e1f1e2b4 883: java.util.Comparators$NaturalOrderComparator::compare(Object, Object) -> int
fifo write: @1699477105253548825 0x7f81e2270797 237: java.util.Comparators$NaturalOrderComparator::compare(Comparable, Comparable) -> int
fifo write: @1699477105253588406 0x7f81e227da14 324: aku::compareTo(Object) -> int
fifo write: @1699477105253763838 0x7f81e241bff9 1115: aku::a(aku) -> int
fifo write: @1699477105256611965 0x7f81e23c4d14 236: akt$$Lambda$7188.0x00007f8160ba2560::<init>(akt, boolean, cpc) -> void
fifo write: @1699477105256706386 0x7f81e24c0994 191: akt$$Lambda$7189.0x00007f8160ba2788::<init>(cpc, boolean) -> void
fifo write: @1699477105256927659 0x7f81e2304317 1854: dhk$$Lambda$1691.0x00007f81605c6440::doWork(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105257003370 0x7f81e229e814 275: akt$$Lambda$7190.0x00007f8160ba29b0::<init>(akt, dhf, cpc) -> void
fifo write: @1699477105257109271 0x7f81e15cf3f7 1644: dhk::b(akt, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105257238863 0x7f81e20ac3f7 1749: dhk::b(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105257297484 0x7f81e23d5894 230: akt$$Lambda$7191.0x00007f8160ba2bd8::<init>(akt, cpc) -> void
fifo write: @1699477105257355834 0x7f81e22ff834 852: akt$$Lambda$7188.0x00007f8160ba2560::run() -> void
fifo write: @1699477105257459026 0x7f81e140b2f9 1819: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477105257555987 0x7f81e237925f 2867: aki::b(long, aku) -> void
fifo write: @1699477105257670738 0x7f81e1e3bebf 3748: akt::a(dhf, cpc) -> dhf
fifo write: @1699477105257806430 0x7f81e1e0ee87 6258: akt::b(dhf, boolean) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105257847111 0x7f81e2498a94 159: asm::remove(Object) -> boolean
fifo write: @1699477105257934072 0x7f81e2071937 3874: akt$$Lambda$7190.0x00007f8160ba29b0::get() -> Object
fifo write: @1699477105258003263 0x7f81e2485274 964: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::remove(long) -> Object
fifo write: @1699477105258066224 0x7f81e22dd1b4 897: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::removeEntry(int) -> Object
fifo write: @1699477105262562692 0x7f81e917d613 2560: eaa::b() -> void
fifo write: @1699477105263380792 0x7f81e9983fa8 739: java.util.concurrent.CompletableFuture$UniApply::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.Function) -> void
fifo write: @1699477105264577338 0x7f81e1642341 3000: aeh::c(aee) -> aeh$a
fifo write: @1699477105266070437 0x7f81e24d2714 234: com.google.common.collect.ImmutableBiMapFauxverideShim::<init>() -> void
fifo write: @1699477105266121318 0x7f81e2030594 328: com.google.common.collect.ImmutableBiMap::<init>() -> void
fifo write: @1699477105266347490 0x7f81e9a14abd 42: jdk.internal.access.SharedSecrets::getJavaUtilCollectionAccess() -> jdk.internal.access.JavaUtilCollectionAccess
fifo write: @1699477105266914788 0x7f81e917d138 131: java.util.ImmutableCollections::listFromTrustedArrayNullsAllowed(Object[]) -> java.util.List
fifo write: @1699477105279269007 0x7f81e2136274 226: dhp::d() -> dhr[]
fifo write: @1699477105279356198 0x7f81e21d2a74 226: dhp::B() -> dzw
fifo write: @1699477105279406089 0x7f81e2259814 374: eag::m(long) -> int
fifo write: @1699477105279456689 0x7f81e225a7b4 455: eaf::b(int, int) -> dzw
fifo write: @1699477105279495470 0x7f81e227ca14 313: eag::c() -> int
fifo write: @1699477105279726213 0x7f81e1fe4ab4 804: dhk$$Lambda$7186.0x00007f8160ba1ef0::apply(Object) -> Object
fifo write: @1699477105280401801 0x7f81e1de164e 5690: eaf::a(cpc, boolean) -> void
fifo write: @1699477105281041989 0x7f81e1c2bbb7 6712: ako::c(int, int) -> dhs
fifo write: @1699477105281168251 0x7f81e228fb14 159: java.util.concurrent.ConcurrentLinkedQueue::add(Object) -> boolean
fifo write: @1699477105282315276 0x7f81e1f91df4 95: java.util.concurrent.CompletableFuture::isDone() -> boolean
fifo write: @1699477105283137956 0x7f81e917c7fe 531: it.unimi.dsi.fastutil.longs.LongOpenHashSet::remove(long) -> boolean
fifo write: @1699477105283965707 0x7f81e917bf53 564: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::remove() -> void
fifo write: @1699477105285514747 0x7f81e22fbdd9 853: java.util.concurrent.CompletableFuture$BiApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105286969296 0x7f81e2324839 680: java.util.concurrent.CompletableFuture$UniHandle::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105287414242 0x7f81e917bc63 28: akj::a(akj) -> boolean
fifo write: @1699477105288323463 0x7f81e917b4da 365: net.minecraft.server.MinecraftServer::b(akz) -> void
fifo write: @1699477105288451225 0x7f81e23bcc94 240: akk::a() -> java.util.Set
fifo write: @1699477105288560626 0x7f81e2405dba 919: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::keySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477105288698248 0x7f81e1fb9014 31: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap, it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$1) -> void
fifo write: @1699477105288788709 0x7f81e241b43a 583: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477105288881771 0x7f81e245c9ef 398: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$KeySet::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477105288928871 0x7f81e228d174 90: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477105288992242 0x7f81e24fe614 280: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap) -> void
fifo write: @1699477105289051293 0x7f81e2477994 270: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$KeyIterator::<init>(it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap) -> void
fifo write: @1699477105289099673 0x7f81e917ad5e 305: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::find(long) -> int
fifo write: @1699477105289158874 0x7f81e986045d 40: com.mojang.datafixers.util.Either$Left::ifLeft(java.util.function.Consumer) -> com.mojang.datafixers.util.Either
fifo write: @1699477105289479078 0x7f81e1bfa214 288: aka::b(ajy, Runnable) -> void
fifo write: @1699477105289542889 0x7f81e23ef734 398: aka$$Lambda$5533.0x00007f8160a94580::execute(Runnable) -> void
fifo write: @1699477105289671851 0x7f81e24d31b4 1078: aka$$Lambda$7203.0x00007f8160ba66b0::apply(Object) -> Object
fifo write: @1699477105289734722 0x7f81e245b094 708: aka::c(java.util.List) -> dhq
fifo write: @1699477105290015005 0x7f81e2434617 1896: aka$$Lambda$5534.0x00007f8160a947a8::apply(Object) -> Object
fifo write: @1699477105290096296 0x7f81e22b6857 2841: aka$$Lambda$5532.0x00007f8160a94340::apply(Object) -> Object
fifo write: @1699477105290165317 0x7f81e1b0fd17 2503: aka::b(com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477105290267908 0x7f81e22efd77 1537: aka::a(ajy, com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477105290318939 0x7f81e2269414 230: aka$$Lambda$7204.0x00007f8160ba68f0::<init>(aka, ajy) -> void
fifo write: @1699477105290378470 0x7f81e2334794 361: aka$$Lambda$7204.0x00007f8160ba68f0::accept(Object) -> void
fifo write: @1699477105290503752 0x7f81e238e394 397: java.util.HashMap$KeySet::toArray() -> Object[]
fifo write: @1699477105290629173 0x7f81e2423714 185: did$$Lambda$7205.0x00007f8160ba6b28::<init>(cpv) -> void
fifo write: @1699477105290736715 0x7f81e184bb61 2246: aka::a(ajy, dhq) -> void
fifo write: @1699477105290830616 0x7f81e985f675 1203: eaa::g(long) -> dhl
fifo write: @1699477105290867036 0x7f81e22f1a14 185: did$$Lambda$7206.0x00007f8160ba6d60::<init>(cpv) -> void
fifo write: @1699477105291290522 0x7f81e22f4301 4272: did::a(dhq) -> void
fifo write: @1699477105291501124 0x7f81e2448e5f 6799: java.util.concurrent.CompletableFuture::uniHandle(Object, java.util.function.BiFunction, java.util.concurrent.CompletableFuture$UniHandle) -> boolean
fifo write: @1699477105292227884 0x7f81e985e193 1568: eag::h(long) -> void
fifo write: @1699477105292391076 0x7f81e248cc1d 13273: did::b(dhq) -> void
fifo write: @1699477105294161599 0x7f81e985d5f0 919: java.util.concurrent.ConcurrentLinkedQueue::add(Object) -> boolean
fifo write: @1699477105295126451 0x7f81e985cf5d 334: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::find(long) -> int
fifo write: @1699477105296826133 0x7f81e9a5e2b7 3850: java.util.concurrent.CompletableFuture$BiApply::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105300221127 0x7f81e985cc4c 4: biq::dB() -> float
fifo write: @1699477105300756554 0x7f81e985c94c 9: biq::dL() -> cpv
fifo write: @1699477105301535254 0x7f81e8c00980 448: I2C/C2I adapters(0xbaaabe)
fifo write: @1699477105301597135 0x7f81e8c00680 456: I2C/C2I adapters(0xbbb7ea)
fifo write: @1699477105303260906 0x7f81e22f1394 248: bki::d() -> void
fifo write: @1699477105304008796 0x7f81e22fdc97 2092: ako$$Lambda$7187.0x00007f8160ba2338::run() -> void
fifo write: @1699477105305084730 0x7f81e19fb44e 8872: ajy::a(cqe, int) -> void
fifo write: @1699477105309961273 0x7f81e9a5ce17 1660: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2ObjectFunction) -> Object
fifo write: @1699477105313534869 0x7f81e9a71d36 7152: eaa::b() -> void
fifo write: @1699477105315543275 0x7f81e985bb89 874: akt::a(int, int, java.util.function.IntSupplier, akt$a, Runnable) -> void
fifo write: @1699477105316242154 0x7f81e19fa834 824: java.util.concurrent.ForkJoinPool::runWorker(java.util.concurrent.ForkJoinPool$WorkQueue) -> void
fifo write: @1699477105317406419 0x7f81e2390c17 106: akt$$Lambda$7191.0x00007f8160ba2bd8::execute(Runnable) -> void
fifo write: @1699477105317445599 0x7f81e239059c 109: akt::a(cpc, Runnable) -> void
fifo write: @1699477105317528970 0x7f81e23de7e0 3043: java.util.concurrent.CompletableFuture::uniApplyNow(Object, java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105317574271 0x7f81e23f6534 804: dhk$$Lambda$7192.0x00007f8160ba2e00::apply(Object) -> Object
fifo write: @1699477105317732603 0x7f81e2507174 488: dhk::a(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105317802584 0x7f81e260ed94 577: dhk$$Lambda$1694.0x00007f81605c6ac8::doWork(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105317895965 0x7f81e25a6537 912: com.google.common.collect.ImmutableMap::of(Object, Object) -> com.google.common.collect.ImmutableMap
fifo write: @1699477105317976466 0x7f81e248b779 714: com.google.common.collect.ImmutableBiMap::of(Object, Object) -> com.google.common.collect.ImmutableBiMap
fifo write: @1699477105318034247 0x7f81e212e8b4 592: com.google.common.collect.SingletonImmutableBiMap::<init>(Object, Object) -> void
fifo write: @1699477105318094927 0x7f81e2388e14 445: aka$$Lambda$7175.0x00007f8160b9f0d8::apply(Object) -> Object
fifo write: @1699477105318161108 0x7f81e9a5bd3e 1038: ajy::a(cqe, int) -> void
fifo write: @1699477105318223219 0x7f81e234bd94 31: aka::c(ajy, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105318274240 0x7f81e212e394 230: aka$$Lambda$7196.0x00007f8160ba36d8::<init>(aka, ajy) -> void
fifo write: @1699477105318332280 0x7f81e2506c14 230: aka$$Lambda$7195.0x00007f8160ba3490::<init>(aka, ajy) -> void
fifo write: @1699477105318374971 0x7f81e2387ef4 104: aka$$Lambda$7197.0x00007f8160ba3900::getAsInt() -> int
fifo write: @1699477105318421872 0x7f81e260e914 185: aka$$Lambda$7197.0x00007f8160ba3900::<init>(ajy) -> void
fifo write: @1699477105318473832 0x7f81e2388797 106: aka$$Lambda$7196.0x00007f8160ba36d8::execute(Runnable) -> void
fifo write: @1699477105318516253 0x7f81e23bd794 101: aka$$Lambda$7193.0x00007f8160ba3040::run() -> void
fifo write: @1699477105318558753 0x7f81e23c97b7 711: asm::d(int) -> void
fifo write: @1699477105318601334 0x7f81e2464937 543: aka::m(cpc) -> void
fifo write: @1699477105318663695 0x7f81e236fbc7 2004: aka::c(ajy, Runnable) -> void
fifo write: @1699477105318735796 0x7f81e24a8093 786: aki::b(akv, cpc, int, Object) -> void
fifo write: @1699477105318798716 0x7f81e2464394 230: aka$$Lambda$7198.0x00007f8160ba3b28::<init>(aka, ajy) -> void
fifo write: @1699477105318868437 0x7f81e24f0f14 361: aka$$Lambda$7198.0x00007f8160ba3b28::apply(Object) -> Object
fifo write: @1699477105318933628 0x7f81e9a5b714 67: Float::floatToIntBits(float) -> int
fifo write: @1699477105319011839 0x7f81e23c9314 185: aka$$Lambda$7199.0x00007f8160ba3d70::<init>(ajy) -> void
fifo write: @1699477105319118510 0x7f81e24f0814 387: dhq::E() -> void
fifo write: @1699477105319363454 0x7f81e246f2d7 4356: aka$$Lambda$7195.0x00007f8160ba3490::apply(Object) -> Object
fifo write: @1699477105319484675 0x7f81e18c3fcf 3997: aka::b(ajy, com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477105319538226 0x7f81e2214614 185: dhq$$Lambda$7200.0x00007f8160ba6000::<init>(dhq) -> void
fifo write: @1699477105319705838 0x7f81e2150da7 6231: aka::d(ajy) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105319766009 0x7f81e2213db4 330: dhq::a(akq) -> void
fifo write: @1699477105319819609 0x7f81e2419afc 1554: dhq::J() -> void
fifo write: @1699477105319874220 0x7f81e2497a34 398: aka$$Lambda$5524.0x00007f8160a92f60::execute(Runnable) -> void
fifo write: @1699477105319911201 0x7f81e2497314 288: aka::a(ajy, Runnable) -> void
fifo write: @1699477105319952921 0x7f81e24bafb4 1078: aka$$Lambda$7201.0x00007f8160ba6238::apply(Object) -> Object
fifo write: @1699477105319990322 0x7f81e24fad94 708: aka::b(java.util.List) -> dhq
fifo write: @1699477105320163504 0x7f81e1e13907 5958: aka::a(ajy, dhf) -> dhf
fifo write: @1699477105320219794 0x7f81e24d4597 2503: aka::a(com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477105320275515 0x7f81e249ffd7 2841: aka$$Lambda$5523.0x00007f8160a92d20::apply(Object) -> Object
fifo write: @1699477105321490231 0x7f81e9a111d0 1896: ako$$Lambda$7187.0x00007f8160ba2338::run() -> void
fifo write: @1699477105323927892 0x7f81e1f1f206 2375: sun.nio.ch.FileChannelImpl::readInternal(java.nio.ByteBuffer, long) -> int
fifo write: @1699477105324026644 0x7f81e226ce43 718: java.util.concurrent.ForkJoinPool::runWorker(java.util.concurrent.ForkJoinPool$WorkQueue) -> void
fifo write: @1699477105324422599 0x7f81e985b595 224: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.longs.LongOpenHashSet) -> void
fifo write: @1699477105325756176 0x7f81e9a0e7dc 4403: akb::a(java.util.Optional, long, int) -> void
fifo write: @1699477105329112259 0x7f81e23d9f94 708: aka::d(java.util.List) -> dhq
fifo write: @1699477105329179060 0x7f81e1966bb4 1078: aka$$Lambda$7208.0x00007f8160ba73d0::apply(Object) -> Object
fifo write: @1699477105329306112 0x7f81e23d9937 415: aka::a(cpc, akj) -> void
fifo write: @1699477105329360192 0x7f81e2302dd7 675: ajy$$Lambda$5526.0x00007f8160a933c8::run() -> void
fifo write: @1699477105329407573 0x7f81e247deb7 549: ajy::b(aka, akj) -> void
fifo write: @1699477105329560105 0x7f81e24fa794 244: akq$$Lambda$5348.0x00007f8160a355b0::onChunkStatusChange(cpc, akj) -> void
fifo write: @1699477105329651966 0x7f81e1eab117 2503: aka::c(com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477105329724017 0x7f81e2222357 2841: aka$$Lambda$5537.0x00007f8160a94e48::apply(Object) -> Object
fifo write: @1699477105329784178 0x7f81e1dcbc14 704: djn::a(akj) -> djn
fifo write: @1699477105329851709 0x7f81e2283f34 798: djl::a(cpc, akj) -> void
fifo write: @1699477105329917480 0x7f81e247d834 609: djl::b(long) -> void
fifo write: @1699477105330264214 0x7f81e24bcb54 1132: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::get(long) -> Object
fifo write: @1699477105330657999 0x7f81e19f57df 3984: djl::c(long) -> void
fifo write: @1699477105330818821 0x7f81e18698a7 6231: djl::a(cpc, djn) -> void
fifo write: @1699477105332613944 0x7f81e9a70af0 1816: akt$$Lambda$7106.0x00007f8160a619e0::run() -> void
fifo write: @1699477105336375083 0x7f81e9acc073 9313: akc$$Lambda$7108.0x00007f8160a5a000::run() -> void
fifo write: @1699477105337010481 0x7f81e9a0cc99 2495: java.util.concurrent.CompletableFuture::thenApplyAsync(java.util.function.Function, java.util.concurrent.Executor) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105337081432 0x7f81e1868fc7 445: dii::b(cpc) -> diy
fifo write: @1699477105340153122 0x7f81e9a704d3 152: aka$$Lambda$5487.0x00007f8160a85188::apply(Object) -> Object
fifo write: @1699477105340279073 0x7f81e9acbc4c 9: bjg::eQ() -> bkj
fifo write: @1699477105341669501 0x7f81e9acb558 375: it.unimi.dsi.fastutil.longs.LongOpenHashSet::contains(long) -> boolean
fifo write: @1699477105342057226 0x7f81e9b2ee0f 8901: akc::a(bfq, java.util.function.IntSupplier, long, java.util.function.Function, boolean) -> void
fifo write: @1699477105343378623 0x7f81e9acad50 451: eaa::j(long) -> boolean
fifo write: @1699477105351603240 0x7f81e9b2aed9 6034: eag::g(long) -> dhl
fifo write: @1699477105351980014 0x7f81e2283474 965: it.unimi.dsi.fastutil.longs.LongOpenHashSet::remove(long) -> boolean
fifo write: @1699477105356189549 0x7f81e9acaa4c 3: Byte::byteValue() -> byte
fifo write: @1699477105356260870 0x7f81e1dcb514 367: dkh::g() -> long
fifo write: @1699477105356464842 0x7f81e9aca6cc 47: biq::a(ehi) -> void
fifo write: @1699477105357904461 0x7f81e9b27302 5490: ac$$Lambda$5385.0x00007f8160a57ab8::apply(Object) -> Object
fifo write: @1699477105361291114 0x7f81e8b9f150 27: vtable stub
fifo write: @1699477105362301667 0x7f81e9aca2d4 47: gw$a::g(hy) -> gw$a
fifo write: @1699477105362367848 0x7f81e9ac9e50 71: gw$a::c(ha) -> gw$a
fifo write: @1699477105363803626 0x7f81e244374e 8872: ajy::a(cqe, int) -> void
fifo write: @1699477105365573149 0x7f81e9ac9573 388: ajy::b(dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105370687965 0x7f81e9b24a5f 3392: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477105372419487 0x7f81e9b22d58 2147: ako::a(hw, cqe) -> void
fifo write: @1699477105372641710 0x7f81e9b21050 2059: ako$$Lambda$7187.0x00007f8160ba2338::run() -> void
fifo write: @1699477105375348715 0x7f81e1966694 240: brp::hashCode() -> int
fifo write: @1699477105375402966 0x7f81e24bc3b4 395: brp::<init>(int, bqb) -> void
fifo write: @1699477105375461177 0x7f81e2442bb7 910: bqc::a(int, bqb) -> void
fifo write: @1699477105375972513 0x7f81e24c5ed4 1427: rc::h(int) -> double
fifo write: @1699477105376046674 0x7f81e23fa1d4 1427: rc::i(int) -> float
fifo write: @1699477105376143856 0x7f81e24bab96 53: aeh::b(aee, Object) -> void
fifo write: @1699477105376265457 0x7f81e9b20008 1147: dzw::a(dhf) -> void
fifo write: @1699477105376337338 0x7f81e24c5674 615: org.apache.commons.lang3.ObjectUtils::notEqual(Object, Object) -> boolean
fifo write: @1699477105376417249 0x7f81e24b97e1 1360: aeh::a(aee, Object, boolean) -> void
fifo write: @1699477105377193829 0x7f81e17a41f4 13: java.util.RegularEnumSet::clear() -> void
fifo write: @1699477105377243680 0x7f81e24b9014 236: bqb::a(java.util.EnumSet) -> void
fifo write: @1699477105377292150 0x7f81e9ac924c 3: bkh::b() -> boolean
fifo write: @1699477105377352141 0x7f81e9ac8f4c 6: bki::a() -> bkh
fifo write: @1699477105377424972 0x7f81e226c914 240: hn::size() -> int
fifo write: @1699477105377659665 0x7f81e8b9f180 27: vtable stub
fifo write: @1699477105377742586 0x7f81e1dd4c3c 3148: java.util.RegularEnumSet::addAll(java.util.Collection) -> boolean
fifo write: @1699477105377996439 0x7f81e9ac8c4c 4: biq::dD() -> float
fifo write: @1699477105378837550 0x7f81e9b1f6f7 680: java.util.EnumMap::put(Object, Object) -> Object
fifo write: @1699477105379608910 0x7f81e24422d4 884: qw::g(String) -> short
fifo write: @1699477105379707192 0x7f81e24c315c 2387: java.util.Map::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477105380322600 0x7f81e9b1ed19 610: qw::h(String) -> int
fifo write: @1699477105385088871 0x7f81e24ef294 103: aka::a(com.mojang.datafixers.util.Either, Throwable) -> Object
fifo write: @1699477105385154592 0x7f81e23f9934 714: aka$$Lambda$5535.0x00007f8160a949f0::apply(Object, Object) -> Object
fifo write: @1699477105387754305 0x7f81e18ba999 1894: aka::a(dhq) -> void
fifo write: @1699477105390951047 0x7f81e9b1ca58 2784: it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap::putAll(java.util.Map) -> void
fifo write: @1699477105391865709 0x7f81e9ac8650 51: dfi$a::b(cpb, gw) -> int
fifo write: @1699477105392099802 0x7f81e22e9417 3426: dzw::a(cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477105392476986 0x7f81e2456c77 6772: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477105393967736 0x7f81e2302894 230: dii$$Lambda$7209.0x00007f8160ba7838::<init>(dii, cpc) -> void
fifo write: @1699477105394017956 0x7f81e18ba494 185: dii$$Lambda$7210.0x00007f8160ba7a80::<init>(bfr) -> void
fifo write: @1699477105394071427 0x7f81e1e40494 361: dii$$Lambda$7209.0x00007f8160ba7838::apply(Object) -> Object
fifo write: @1699477105394117828 0x7f81e1e3feb4 406: dii$$Lambda$7210.0x00007f8160ba7a80::execute(Runnable) -> void
fifo write: @1699477105394179318 0x7f81e1e3f894 481: djl$$Lambda$7211.0x00007f8160ba7ca8::accept(Object) -> void
fifo write: @1699477105394254859 0x7f81e226f7f5 119: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::subSet(long, long) -> it.unimi.dsi.fastutil.longs.LongSortedSet
fifo write: @1699477105394306590 0x7f81e226f1b4 368: djf::a(int, int) -> it.unimi.dsi.fastutil.longs.LongSortedSet
fifo write: @1699477105394480202 0x7f81e226e820 619: java.util.stream.LongPipeline::mapToObj(java.util.function.LongFunction, int) -> java.util.stream.Stream
fifo write: @1699477105394531613 0x7f81e1b216f4 1007: djf::a(long) -> java.util.stream.LongStream
fifo write: @1699477105394607564 0x7f81e9b1bf62 531: dzw::a(cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477105394682265 0x7f81e1c21b6a 1421: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset::<init>(it.unimi.dsi.fastutil.longs.LongAVLTreeSet, long, boolean, long, boolean) -> void
fifo write: @1699477105394725615 0x7f81e1c21414 445: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::compare(long, long) -> int
fifo write: @1699477105394783796 0x7f81e1b21114 309: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$SetIterator::<init>(it.unimi.dsi.fastutil.longs.LongAVLTreeSet) -> void
fifo write: @1699477105394884127 0x7f81e1d564b4 599: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset$SubsetIterator::<init>(it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset) -> void
fifo write: @1699477105394934998 0x7f81e1d557af 1215: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset::isEmpty() -> boolean
fifo write: @1699477105394977469 0x7f81e2501774 95: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$SetIterator::hasNext() -> boolean
fifo write: @1699477105395025939 0x7f81e1b20b74 175: java.util.stream.LongStream::empty() -> java.util.stream.LongStream
fifo write: @1699477105395098720 0x7f81e1f0fc79 848: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset::firstEntry() -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477105395236412 0x7f81e1f0f5b7 502: java.util.stream.LongPipeline$1::<init>(java.util.stream.LongPipeline, java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int, java.util.function.LongFunction) -> void
fifo write: @1699477105395266752 0x7f81e25a8b14 240: java.util.stream.Sink$ChainedLong::begin(long) -> void
fifo write: @1699477105395336623 0x7f81e25a812d 1184: java.util.stream.LongPipeline$1::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477105395387884 0x7f81e2451234 1075: java.util.stream.LongPipeline$1$1::<init>(java.util.stream.LongPipeline$1, java.util.stream.Sink) -> void
fifo write: @1699477105395484585 0x7f81e2436367 6062: dii::a(cpc, java.util.Optional) -> diy
fifo write: @1699477105395783809 0x7f81e8c00100 464: I2C/C2I adapters(0xbb7eaa6)
fifo write: @1699477105395795459 0x7f81e8bffb00 456: I2C/C2I adapters(0xbb7ea6)
fifo write: @1699477105396250805 0x7f81e22a7187 8874: dii::a(cpc) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105396302186 0x7f81e9bec65e 313: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::find(long) -> int
fifo write: @1699477105396419877 0x7f81e9b1ba51 98: gw$a::a(hy, ha) -> gw$a
fifo write: @1699477105404650803 0x7f81e9becd80 3269: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477105405859588 0x7f81e25a7a6f 242: cjf::a(qw) -> cjf
fifo write: @1699477105405911309 0x7f81e2435b98 400: java.util.Random::next(int) -> int
fifo write: @1699477105405975710 0x7f81e24a2679 1920: java.util.HashMap$KeySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477105406050841 0x7f81e24a20d4 127: Math::abs(float) -> float
fifo write: @1699477105406094321 0x7f81e2450c94 398: Float::isFinite(float) -> boolean
fifo write: @1699477105406140882 0x7f81e2450814 155: Double::isFinite(double) -> boolean
fifo write: @1699477105407219316 0x7f81e251a357 3561: biq::p(double, double, double) -> void
fifo write: @1699477105407408018 0x7f81e2170787 8440: cjf::<init>(qw) -> void
fifo write: @1699477105407779293 0x7f81e216fcb4 718: aee::equals(Object) -> boolean
fifo write: @1699477105407840424 0x7f81e9bef753 144: ri::a(String) -> rq
fifo write: @1699477105408711595 0x7f81e9befc04 250: com.google.common.collect.Sets::newHashSet() -> java.util.HashSet
fifo write: @1699477105412423683 0x7f81e8b9f1b0 27: vtable stub
fifo write: @1699477105412934820 0x7f81e216f5b9 447: java.util.Calendar::complete() -> void
fifo write: @1699477105420273034 0x7f81e9bf0157 2184: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator::convertArgumentTypes(java.lang.invoke.MethodType) -> void
fifo write: @1699477105421928386 0x7f81e8bff800 472: I2C/C2I adapters(0xbbbbbb7e)
fifo write: @1699477105424038833 0x7f81e216f074 90: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477105424077044 0x7f81e22b1314 243: com.google.common.collect.Iterators$1::hasNext() -> boolean
fifo write: @1699477105424111274 0x7f81e22b0e94 240: com.google.common.collect.Iterators$1::next() -> Object
fifo write: @1699477105424178595 0x7f81e22b00b4 2063: java.util.concurrent.CompletableFuture::reportJoin(Object) -> Object
fifo write: @1699477105424237326 0x7f81e2500e94 289: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477105424371557 0x7f81e2500914 324: ako$a::<init>(dhq, ajy) -> void
fifo write: @1699477105424422858 0x7f81e2500034 780: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477105424964485 0x7f81e2641594 624: java.util.Collections::swap(java.util.List, int, int) -> void
fifo write: @1699477105425106407 0x7f81e2640c5d 1030: java.util.Random::nextInt(int) -> int
fifo write: @1699477105425144377 0x7f81e9bf1ccc 3: djn::a() -> boolean
fifo write: @1699477105425343780 0x7f81e26434b4 692: djl::a(cpc) -> boolean
fifo write: @1699477105425386140 0x7f81e2640534 506: aki::f(long) -> boolean
fifo write: @1699477105425444461 0x7f81e2642c34 789: akq::a(cpc) -> boolean
fifo write: @1699477105425504822 0x7f81e2258954 795: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::containsKey(long) -> boolean
fifo write: @1699477105425641084 0x7f81e251f25e 2371: aka::c(cpc) -> boolean
fifo write: @1699477105425898617 0x7f81e251eb94 463: ako$$Lambda$7305.0x00007f8160bc5460::accept(Object) -> void
fifo write: @1699477105425942988 0x7f81e2642574 106: ako::a(ako$a) -> void
fifo write: @1699477105427027082 0x7f81e249b8c7 8702: ajy::a(dhq) -> void
fifo write: @1699477105427097103 0x7f81e9bf2310 661: ajy::d() -> dhq
fifo write: @1699477105430908332 0x7f81e22584f4 90: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477105431167265 0x7f81e2258014 251: aeh$a::d() -> boolean
fifo write: @1699477105431231866 0x7f81e2257914 289: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477105431276247 0x7f81e9bf2c4c 6: diy::a() -> cpc
fifo write: @1699477105431357238 0x7f81e249a4f4 1578: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477105431613941 0x7f81e1edbe94 240: diy::b() -> java.util.stream.Stream
fifo write: @1699477105431670332 0x7f81e1edba14 185: djl$$Lambda$7307.0x00007f8160bc9b28::<init>(djl) -> void
fifo write: @1699477105431710302 0x7f81e9bf2f4c 2: biq::ah() -> int
fifo write: @1699477105432887577 0x7f81e9bf326a 242: com.google.common.collect.RegularImmutableList::spliterator() -> java.util.Spliterator
fifo write: @1699477105464982711 0x7f81e9bf3acc 9: biq::dl() -> gw
fifo write: @1699477105465046542 0x7f81e9bf3dcc 9: biq::ag() -> biu
fifo write: @1699477105465560928 0x7f81e9bf43b6 4: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477105466132076 0x7f81e9bf46d2 433: dhy::a(int, int, int) -> Object
fifo write: @1699477105466998637 0x7f81e9bf4f4c 3: aeh$a::c() -> boolean
fifo write: @1699477105467385982 0x7f81e9bf524c 9: biq::al() -> aeh
fifo write: @1699477105467437233 0x7f81e1edb294 768: Byte::equals(Object) -> boolean
fifo write: @1699477105467802187 0x7f81e9bf5558 171: hy::equals(Object) -> boolean
fifo write: @1699477105469946245 0x7f81e1edac34 416: dhy$$Lambda$7318.0x00007f8160bce3d8::applyAsInt(int) -> int
fifo write: @1699477105469995816 0x7f81e223d814 306: dhy::a(dho, int) -> int
fifo write: @1699477105470047326 0x7f81e223cfd9 646: dho::a(Object) -> int
fifo write: @1699477105472779872 0x7f81e223cb14 240: com.mojang.serialization.Codec$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105473210477 0x7f81e225c65e 1075: com.google.common.collect.Iterators$5::computeNext() -> Object
fifo write: @1699477105473933736 0x7f81e9bf5a2c 30: dfl::a(dfl) -> Object
fifo write: @1699477105474385052 0x7f81e9bf5d59 82: com.mojang.serialization.MapCodec$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105474523804 0x7f81e223c394 453: com.mojang.serialization.Encoder$1::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105474750487 0x7f81e9bf616f 452: hm::e(Object) -> com.mojang.serialization.Lifecycle
fifo write: @1699477105474963580 0x7f81e9bf694c 6: dhz$a::b() -> java.util.Optional
fifo write: @1699477105475108962 0x7f81e9bf6c67 793: asj::<init>(int, int) -> void
fifo write: @1699477105475332794 0x7f81e225c1f4 88: com.google.common.base.Predicates$ObjectPredicate$4::apply(Object) -> boolean
fifo write: @1699477105475899642 0x7f81e225bc14 469: com.mojang.serialization.Codec$4::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105476770923 0x7f81e22c1db7 847: com.mojang.serialization.Codec$1::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105477097247 0x7f81e22c1454 1131: java.util.stream.LongPipeline::toArray() -> long[]
fifo write: @1699477105477911897 0x7f81e9bf7585 770: aqv::a(Object) -> int
fifo write: @1699477105477992339 0x7f81e9bf80e8 172: rc::a(rq) -> boolean
fifo write: @1699477105478388154 0x7f81e2479639 828: java.io.DataOutputStream::writeLong(long) -> void
fifo write: @1699477105478436444 0x7f81e225b597 28: java.io.DataOutputStream::writeUTF(String) -> void
fifo write: @1699477105478526595 0x7f81e22c0c45 474: java.io.DataOutputStream::write(byte[], int, int) -> void
fifo write: @1699477105478580006 0x7f81e9bf85f6 429: java.util.Arrays::fill(int[], int, int, int) -> void
fifo write: @1699477105478682787 0x7f81e2479014 414: java.io.DataOutputStream::writeByte(int) -> void
fifo write: @1699477105478785419 0x7f81e247856d 613: java.io.BufferedOutputStream::write(int) -> void
fifo write: @1699477105479088222 0x7f81e23cbcbe 1051: qw::a(String, rq, java.io.DataOutput) -> void
fifo write: @1699477105479465767 0x7f81e23cb794 332: dfl$$Lambda$518.0x00007f81603037d0::apply(Object) -> Object
fifo write: @1699477105479534858 0x7f81e23cb317 237: com.mojang.serialization.Codec$16::write(com.mojang.serialization.DynamicOps, String) -> Object
fifo write: @1699477105479605739 0x7f81e23caa17 591: com.mojang.serialization.Codec$16::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477105479708760 0x7f81e1e9e15a 1278: com.mojang.serialization.Codec$$Lambda$520.0x00007f8160303c58::apply(Object) -> Object
fifo write: @1699477105479761231 0x7f81e1e9d854 785: ro::a(java.io.DataOutput) -> void
fifo write: @1699477105480163756 0x7f81e9bf8c81 3964: com.mojang.serialization.MapCodec$MapCodecCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105481199299 0x7f81e1e9d394 185: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5278.0x00007f81609bd5c8::<init>(Object) -> void
fifo write: @1699477105481350531 0x7f81e1f1d694 185: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5277.0x00007f81609bd380::<init>(com.mojang.serialization.DataResult) -> void
fifo write: @1699477105481469503 0x7f81e1f1d294 141: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5278.0x00007f81609bd5c8::apply(Object) -> Object
fifo write: @1699477105481679566 0x7f81e9bfb115 477: Module::allows(java.util.Set, Module) -> boolean
fifo write: @1699477105481944459 0x7f81e24fcadf 3134: com.mojang.serialization.RecordBuilder$AbstractBuilder::lambda$withErrorsFrom$2(com.mojang.serialization.DataResult, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105482026200 0x7f81e1f1c8b7 927: dho$$Lambda$7319.0x00007f8160bcfa28::accept(Object) -> void
fifo write: @1699477105482129851 0x7f81e1c97cf7 3231: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5277.0x00007f81609bd380::apply(Object) -> Object
fifo write: @1699477105482225963 0x7f81e1c97614 275: com.mojang.serialization.Encoder$2$$Lambda$5286.0x00007f81609be7d0::<init>(com.mojang.serialization.Encoder$2, com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477105482320214 0x7f81e24fc41a 250: com.mojang.serialization.Encoder$2::lambda$encode$0(com.mojang.serialization.DynamicOps, Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105482393175 0x7f81e1f1c299 369: com.mojang.serialization.Encoder$2$$Lambda$5286.0x00007f81609be7d0::apply(Object) -> Object
fifo write: @1699477105482631848 0x7f81e23c77d7 1091: arf$3::coApply(com.mojang.serialization.DynamicOps, Object, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477105482760310 0x7f81e23db697 7078: aew$$Lambda$284.0x00007f81601b2838::apply(Object) -> Object
fifo write: @1699477105482899591 0x7f81e261c787 4901: com.mojang.serialization.Encoder$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105483022623 0x7f81e9bfba98 1733: com.mojang.serialization.ListBuilder$Builder::build(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105483168225 0x7f81e23c6514 2210: dzx::c(long) -> dhl
fifo write: @1699477105484557943 0x7f81e9bfcd2c 1323: asj::a(int[]) -> void
fifo write: @1699477105484626744 0x7f81e9bfdb36 1449: asj::<init>(int, int, int[]) -> void
fifo write: @1699477105484805926 0x7f81e9bfea3c 2898: rc::c(int, rq) -> void
fifo write: @1699477105485907440 0x7f81e25681b7 31145: com.mojang.serialization.codecs.KeyDispatchCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105485984931 0x7f81e23dad94 185: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5275.0x00007f81609bcef8::<init>(java.util.function.Function) -> void
fifo write: @1699477105486373416 0x7f81e2476077 2878: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5275.0x00007f81609bcef8::apply(Object) -> Object
fifo write: @1699477105486490758 0x7f81e24a4d37 2781: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$getCodec$12(java.util.function.Function, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105486634780 0x7f81e2475a94 415: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5276.0x00007f81609bd140::apply(Object) -> Object
fifo write: @1699477105486787082 0x7f81e24cbbb7 7118: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$522.0x00007f8160306240::apply(Object) -> Object
fifo write: @1699477105487001534 0x7f81e1f4af1f 7005: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$new$0(java.util.function.Function, java.util.function.Function, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105487167216 0x7f81e241f6ff 6916: com.mojang.serialization.codecs.KeyDispatchCodec::getCodec(java.util.function.Function, java.util.function.Function, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105487266888 0x7f81e9c0033f 428: java.util.Arrays::fill(int[], int, int, int) -> void
fifo write: @1699477105487353639 0x7f81e24cb514 240: com.mojang.serialization.codecs.KeyDispatchCodec::lambda$encode$6(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105487420530 0x7f81e1f4a814 325: hq$$Lambda$512.0x00007f81603022e0::apply(Object) -> Object
fifo write: @1699477105487487221 0x7f81e1f1be94 141: com.mojang.serialization.codecs.RecordCodecBuilder$$Lambda$178.0x00007f81601864c8::apply(Object) -> Object
fifo write: @1699477105487560742 0x7f81e24a4697 363: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5281.0x00007f81609bdca0::apply(Object) -> Object
fifo write: @1699477105487658783 0x7f81e241ed34 768: arf$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105487965597 0x7f81e9c00ad9 3894: dhy::a(int[], java.util.function.IntUnaryOperator) -> void
fifo write: @1699477105489256303 0x7f81e9c032d5 3002: dho::a(Object) -> int
fifo write: @1699477105489696589 0x7f81e24ca514 354: hq$$Lambda$5283.0x00007f81609be128::apply(Object) -> Object
fifo write: @1699477105489758140 0x7f81e9c052d0 127: dho::a(int) -> Object
fifo write: @1699477105489820791 0x7f81e24c9db4 787: hq$$Lambda$516.0x00007f8160302bc0::apply(Object) -> Object
fifo write: @1699477105489876571 0x7f81e24c9894 230: hq$$Lambda$5285.0x00007f81609be5a8::<init>(hq, Object) -> void
fifo write: @1699477105489961493 0x7f81e24c8c77 1528: hq$$Lambda$5284.0x00007f81609be368::apply(Object) -> Object
fifo write: @1699477105490082184 0x7f81e1ec7294 348: com.mojang.serialization.codecs.OptionalFieldCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105490151105 0x7f81e9c0574f 1148: asj::a(int[]) -> void
fifo write: @1699477105490280877 0x7f81e1ec67dc 1149: com.mojang.serialization.codecs.OptionalFieldCodec::encode(java.util.Optional, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105490394768 0x7f81e1ec6194 453: com.mojang.serialization.MapEncoder$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105491173218 0x7f81e9c06492 2370: asj::<init>(int, int, int[]) -> void
fifo write: @1699477105491532803 0x7f81e245fb67 9887: hq::h(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105492453945 0x7f81e9c07e50 3364: dhy$$Lambda$7318.0x00007f8160bce3d8::applyAsInt(int) -> int
fifo write: @1699477105493039592 0x7f81e1ec5934 686: eab::a(cqe) -> dzz
fifo write: @1699477105493103313 0x7f81e245eed4 1145: ead::a(hw) -> dhl
fifo write: @1699477105493222055 0x7f81e245e534 747: com.mojang.serialization.codecs.RecordCodecBuilder$2::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105493282445 0x7f81e1f48fd7 1249: eaa::d(long) -> dhl
fifo write: @1699477105493630090 0x7f81e1f4a397 114: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$$Lambda$184.0x00007f8160187660::apply(Object) -> Object
fifo write: @1699477105493700921 0x7f81e241e894 185: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$4$$Lambda$5290.0x00007f81609bf328::<init>(Object) -> void
fifo write: @1699477105493876863 0x7f81e1f47fa1 2100: com.mojang.serialization.codecs.RecordCodecBuilder$Instance::lambda$ap2$4(com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, Object) -> com.mojang.serialization.MapEncoder
fifo write: @1699477105493962874 0x7f81e15fd2d7 907: com.mojang.serialization.codecs.RecordCodecBuilder$$Lambda$182.0x00007f81601871d8::apply(Object) -> Object
fifo write: @1699477105494099256 0x7f81e15fc5fa 1595: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$4::<init>(com.mojang.serialization.codecs.RecordCodecBuilder$Instance, com.mojang.serialization.MapEncoder, Object, com.mojang.serialization.MapEncoder, Object, com.mojang.serialization.MapEncoder) -> void
fifo write: @1699477105494185717 0x7f81e1e963b7 1267: com.mojang.serialization.codecs.RecordCodecBuilder::lambda$point$2(Object) -> com.mojang.serialization.MapEncoder
fifo write: @1699477105494260678 0x7f81e9c0a44c 6: dhr::h() -> dhy
fifo write: @1699477105494367989 0x7f81e1e95527 1924: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$4::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105494448260 0x7f81e15fbcb4 590: com.google.common.collect.Iterators$5::<init>(java.util.Iterator, com.google.common.base.Predicate) -> void
fifo write: @1699477105494553682 0x7f81e24836e4 1530: com.google.common.collect.Iterators::filter(java.util.Iterator, com.google.common.base.Predicate) -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477105494624903 0x7f81e248289e 1909: qw::a(java.io.DataOutput) -> void
fifo write: @1699477105494695104 0x7f81e15df5b4 559: dhy$$Lambda$7048.0x00007f8160b83218::apply(Object) -> Object
fifo write: @1699477105494735204 0x7f81e1e94f14 109: dhy::a() -> void
fifo write: @1699477105494801405 0x7f81e248227a 175: dhy::a(hj, dhy$d, dhz) -> dhz$a
fifo write: @1699477105494850116 0x7f81e15df114 195: java.util.concurrent.Semaphore::tryAcquire() -> boolean
fifo write: @1699477105494958717 0x7f81e15deb14 469: com.mojang.serialization.MapCodec$3::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105495011128 0x7f81e15de5a2 359: java.util.concurrent.Semaphore$Sync::nonfairTryAcquireShared(int) -> int
fifo write: @1699477105495064848 0x7f81e15de06a 300: dgm::a(dfl) -> dgm$a
fifo write: @1699477105495136919 0x7f81e22bdc17 697: dfk::a(dgm, dfl) -> com.mojang.datafixers.util.Pair
fifo write: @1699477105495210990 0x7f81e22bd237 1054: dfk$$Lambda$532.0x00007f816030a650::apply(Object) -> Object
fifo write: @1699477105495273741 0x7f81e22913b9 1926: ass::a() -> void
fifo write: @1699477105495317602 0x7f81e9c0a74c 6: dhr::i() -> dhz
fifo write: @1699477105495427703 0x7f81e2290e14 324: com.mojang.serialization.codecs.PairMapCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105495468894 0x7f81e9c0aa4c 2: asj::c() -> int
fifo write: @1699477105495534144 0x7f81e2290914 337: dgm$$Lambda$481.0x00007f816028f470::apply(Object) -> Object
fifo write: @1699477105495656636 0x7f81e22bcb34 562: com.mojang.serialization.codecs.PairMapCodec::encode(com.mojang.datafixers.util.Pair, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105495750907 0x7f81e22bc339 604: java.io.DataOutputStream::writeInt(int) -> void
fifo write: @1699477105495808138 0x7f81e9c0adcd 534: java.io.BufferedOutputStream::write(byte[], int, int) -> void
fifo write: @1699477105497089505 0x7f81e25ed35f 1681: aqv::f(int) -> void
fifo write: @1699477105497404079 0x7f81e243d42f 10747: dhy::a(hj, dhy$d) -> dhz$a
fifo write: @1699477105497477820 0x7f81e25ecc94 598: hq$$Lambda$1976.0x00007f8160615e68::apply(Object) -> Object
fifo write: @1699477105497543060 0x7f81e25ec794 354: hq$$Lambda$7321.0x00007f8160bd4000::apply(Object) -> Object
fifo write: @1699477105497616811 0x7f81e224c334 971: hq::a(he) -> com.mojang.serialization.Lifecycle
fifo write: @1699477105497719643 0x7f81e224b754 1583: hq$$Lambda$1978.0x00007f81606162f8::apply(Object) -> Object
fifo write: @1699477105497776983 0x7f81e25ec094 230: hq$$Lambda$7323.0x00007f8160bd4480::<init>(hq, he) -> void
fifo write: @1699477105497853874 0x7f81e224a977 1528: hq$$Lambda$7322.0x00007f8160bd4240::apply(Object) -> Object
fifo write: @1699477105498521973 0x7f81e1848187 7232: hq::c(he) -> com.mojang.serialization.DataResult
fifo write: @1699477105499012459 0x7f81e9c0b653 3893: dhy::a(int[], java.util.function.IntUnaryOperator) -> void
fifo write: @1699477105499070430 0x7f81e1847934 457: java.util.concurrent.Semaphore::release() -> void
fifo write: @1699477105499140361 0x7f81e1847414 337: dhy$$Lambda$7044.0x00007f8160b82920::apply(Object) -> Object
fifo write: @1699477105499208432 0x7f81e2313014 337: dhy$$Lambda$7045.0x00007f8160b82b60::apply(Object) -> Object
fifo write: @1699477105499266083 0x7f81e2312999 430: java.util.EnumMap$EnumMapIterator::hasNext() -> boolean
fifo write: @1699477105499323543 0x7f81e23122c2 564: java.util.concurrent.Semaphore$Sync::tryReleaseShared(int) -> boolean
fifo write: @1699477105500081553 0x7f81e15ddb94 242: eab::d() -> int
fifo write: @1699477105500149564 0x7f81e25c78bc 1987: ass::b() -> void
fifo write: @1699477105500697981 0x7f81e2311c94 513: dgm$$Lambda$479.0x00007f816028edd0::apply(Object) -> Object
fifo write: @1699477105500745842 0x7f81e2290494 243: eab::c() -> int
fifo write: @1699477105500795882 0x7f81e23112b4 907: eab::e() -> int
fifo write: @1699477105501213608 0x7f81e231f4b7 3913: com.mojang.serialization.RecordBuilder$AbstractBuilder::mapError(java.util.function.UnaryOperator) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105501257768 0x7f81e243cc14 243: qw::g() -> boolean
fifo write: @1699477105501656004 0x7f81e24b35b7 4180: com.mojang.serialization.MapCodec$5::coApply(com.mojang.serialization.DynamicOps, Object, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105501703604 0x7f81e24b2e99 42: asz::a(int[]) -> void
fifo write: @1699477105501812626 0x7f81e231ef14 185: dig$$Lambda$7320.0x00007f8160bcfc60::<init>(org.slf4j.Logger) -> void
fifo write: @1699477105501876516 0x7f81e25c7394 185: dig$$Lambda$7324.0x00007f8160bd46a8::<init>(org.slf4j.Logger) -> void
fifo write: @1699477105501930687 0x7f81e25c6e14 388: qw::a(String, byte) -> void
fifo write: @1699477105502325832 0x7f81e1a16b54 1122: dfl$$Lambda$4001.0x00007f816083f440::apply(Object) -> Object
fifo write: @1699477105502915010 0x7f81e25c6817 237: com.mojang.serialization.Codec$19::write(com.mojang.serialization.DynamicOps, java.util.stream.LongStream) -> Object
fifo write: @1699477105503000691 0x7f81e1a164b7 623: com.mojang.serialization.Codec$19::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477105503065322 0x7f81e9c0e15b 36: java.util.EnumMap::unmaskNull(Object) -> Object
fifo write: @1699477105503223754 0x7f81e1a1523a 2194: ri::createLongList(java.util.stream.LongStream) -> Object
fifo write: @1699477105503301585 0x7f81e241196a 1983: ri::a(java.util.stream.LongStream) -> rq
fifo write: @1699477105503442297 0x7f81e9c0e498 3531: java.io.DataOutputStream::writeUTF(String, java.io.DataOutput) -> int
fifo write: @1699477105504037854 0x7f81e9c104f3 1294: java.io.DataOutputStream::writeLong(long) -> void
fifo write: @1699477105505187369 0x7f81e24110b4 716: java.util.Spliterators$DoubleArraySpliterator::tryAdvance(java.util.function.DoubleConsumer) -> boolean
fifo write: @1699477105505231950 0x7f81e2410c74 130: dlv::a(double) -> boolean
fifo write: @1699477105505284080 0x7f81e24107b4 274: dlv$$Lambda$7314.0x00007f8160bcdd18::test(double) -> boolean
fifo write: @1699477105505347911 0x7f81e2135434 608: java.util.stream.MatchOps$4MatchSink::accept(double) -> void
fifo write: @1699477105505871298 0x7f81e2134f14 313: java.util.EnumMap$EntryIterator$Entry::checkIndexForEntryUse() -> void
fifo write: @1699477105506514266 0x7f81e9c11150 75: dib::a(int) -> Object
fifo write: @1699477105506628308 0x7f81e213463d 880: qw::a(String, int) -> void
fifo write: @1699477105507853584 0x7f81e9c1164e 6919: com.mojang.serialization.codecs.ListCodec::encode(java.util.List, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105508558943 0x7f81e9c15c58 90: com.mojang.serialization.Encoder$1::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105509056279 0x7f81e9c1606a 295: rc::<init>() -> void
fifo write: @1699477105510200744 0x7f81e2133e39 663: rd::a(java.io.DataOutput) -> void
fifo write: @1699477105510338396 0x7f81e25105de 2749: rc::a(java.io.DataOutput) -> void
fifo write: @1699477105510384296 0x7f81e9c165cc 3: java.util.zip.Deflater$DeflaterZStreamRef::address() -> long
fifo write: @1699477105512271821 0x7f81e9c16958 1654: com.mojang.serialization.Codec$4::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105512573944 0x7f81e9c17f7a 2904: com.mojang.serialization.ListBuilder$Builder::add(com.mojang.serialization.DataResult) -> com.mojang.serialization.ListBuilder
fifo write: @1699477105513709979 0x7f81e2133814 136: aeh::b(aee) -> Object
fifo write: @1699477105513954642 0x7f81e250fe34 594: java.util.ImmutableCollections$SetN::contains(Object) -> boolean
fifo write: @1699477105514358157 0x7f81e9c1a0ba 3292: com.mojang.serialization.Codec$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105514402188 0x7f81e1893cf4 5: gx::b() -> int
fifo write: @1699477105514442489 0x7f81e1965df4 5: gx::d() -> int
fifo write: @1699477105514490279 0x7f81e250f814 323: gx::a() -> boolean
fifo write: @1699477105514530940 0x7f81e1bb7374 5: gx::c() -> int
fifo write: @1699477105514574360 0x7f81e1f45094 379: gx::e() -> int
fifo write: @1699477105514628611 0x7f81e1f447b9 747: coz::a(int, int) -> cpb
fifo write: @1699477105515073147 0x7f81e9c1c667 7258: com.mojang.serialization.codecs.ListCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105515122627 0x7f81e1e13374 44: akq::J() -> dhj
fifo write: @1699477105515161608 0x7f81e9c20bcc 3: brp::h() -> boolean
fifo write: @1699477105515221779 0x7f81e1f44034 575: cpv::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477105515261249 0x7f81e9c20ecc 2: brp::i() -> int
fifo write: @1699477105515415291 0x7f81e9c211cc 9: biq::cY() -> biq
fifo write: @1699477105515531643 0x7f81e9c214b1 86: com.google.common.base.Objects::equal(Object, Object) -> boolean
fifo write: @1699477105515574313 0x7f81e9c2184c 3: cpv::w_() -> boolean
fifo write: @1699477105515696135 0x7f81e9c21b30 7: gw$a::<init>() -> void
fifo write: @1699477105516071110 0x7f81e23146af 8121: ako::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477105516128890 0x7f81e9c21e4c 6: bqb::j() -> java.util.EnumSet
fifo write: @1699477105517183304 0x7f81e9c2244c 9: biq::cG() -> ehi
fifo write: @1699477105517308665 0x7f81e9c2274c 6: biv::a() -> biv$a
fifo write: @1699477105517350346 0x7f81e9c22a4c 2: biv::b() -> int
fifo write: @1699477105517393417 0x7f81e1f43b14 216: dfi$a::f() -> boolean
fifo write: @1699477105517604709 0x7f81e1f43594 387: cpx::r(gw) -> boolean
fifo write: @1699477105517652720 0x7f81e243b816 472: cpv::d(int, int) -> dhq
fifo write: @1699477105517709501 0x7f81e243b316 278: cpy::a(int, int, dhk) -> dhf
fifo write: @1699477105517847452 0x7f81e243ae94 152: ehn::<init>(double, double, double) -> void
fifo write: @1699477105518316798 0x7f81e9c22d4c 6: biq::aA() -> boolean
fifo write: @1699477105519115458 0x7f81e255fd4f 18483: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105519187049 0x7f81e9c2305b 132: dfi$a::b(cpb, gw, ehs) -> eig
fifo write: @1699477105519281691 0x7f81e9c23750 135: java.util.stream.MatchOps$$Lambda$715.0x00007f81601dec50::get() -> Object
fifo write: @1699477105519316401 0x7f81e9c23bcc 6: csv::q() -> he$c
fifo write: @1699477105519347731 0x7f81e9c23ecc 47: biq::f(ehn) -> void
fifo write: @1699477105519527254 0x7f81e243a994 262: eic::getDouble(int) -> double
fifo write: @1699477105519574094 0x7f81e9c2454c 9: biq::dj() -> ehn
fifo write: @1699477105519667565 0x7f81e1f47b74 68: biq::dq() -> double
fifo write: @1699477105519774207 0x7f81e23cdca7 5246: cpv::a_(gw) -> dfj
fifo write: @1699477105519818737 0x7f81e1f71774 68: biq::dw() -> double
fifo write: @1699477105520060760 0x7f81e1f43154 140: arw::c(double) -> int
fifo write: @1699477105520146321 0x7f81e9c24e4c 9: biq::do() -> ehn
fifo write: @1699477105520198592 0x7f81e23cd614 240: brp::j() -> java.util.EnumSet
fifo write: @1699477105520308244 0x7f81e9c2514c 6: eal::k() -> he$c
fifo write: @1699477105520351414 0x7f81e243a514 240: eic::size() -> int
fifo write: @1699477105520769059 0x7f81e2439f14 472: eic::<init>(it.unimi.dsi.fastutil.doubles.DoubleList, double) -> void
fifo write: @1699477105520813260 0x7f81e227ff74 68: biq::ds() -> double
fifo write: @1699477105521061943 0x7f81e2439a94 240: hn::get(int) -> Object
fifo write: @1699477105521298296 0x7f81e9c254d1 1305: ehp::<init>(ehw, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList, it.unimi.dsi.fastutil.doubles.DoubleList) -> void
fifo write: @1699477105521391907 0x7f81e9c262ce 741: arw::a(int, int, java.util.function.IntPredicate) -> int
fifo write: @1699477105521553220 0x7f81e1fc22f4 164: hw::a(double) -> int
fifo write: @1699477105521852293 0x7f81e1fc1cb4 552: java.util.Map::getOrDefault(Object, Object) -> Object
fifo write: @1699477105521913674 0x7f81e1fc1534 592: java.util.EnumMap::containsKey(Object) -> boolean
fifo write: @1699477105522329060 0x7f81e244ccbf 6947: coz::computeNext() -> Object
fifo write: @1699477105522636094 0x7f81e244c199 587: dhq::b_(gw) -> eam
fifo write: @1699477105522695414 0x7f81e1fc0b39 1221: cpv::l(gw) -> dhq
fifo write: @1699477105522750335 0x7f81e1fc0494 527: dhr::b(int, int, int) -> eam
fifo write: @1699477105522924537 0x7f81e9c26e4c 6: biq::aX() -> boolean
fifo write: @1699477105523021839 0x7f81e238a895 3188: dhq::a(int, int, int) -> eam
fifo write: @1699477105523083019 0x7f81e2389eb4 1011: dfi$a::a(aqh) -> boolean
fifo write: @1699477105523207941 0x7f81e1e56827 6067: cpv::b_(gw) -> eam
fifo write: @1699477105523258152 0x7f81e22e6414 475: cjf::L() -> int
fifo write: @1699477105523300312 0x7f81e1fbff94 243: brp::P_() -> boolean
fifo write: @1699477105523356633 0x7f81e22e5b94 953: brp::a(brp) -> boolean
fifo write: @1699477105523409094 0x7f81e22e5597 288: ehi::c(double, double, double) -> ehi
fifo write: @1699477105523456054 0x7f81e2389918 51: ehi::g(double) -> ehi
fifo write: @1699477105523545845 0x7f81e22e4db4 655: biq::i(int) -> boolean
fifo write: @1699477105523724968 0x7f81e22e4974 98: biq::dG() -> boolean
fifo write: @1699477105523890420 0x7f81e22e4494 248: ako::a(ajy, int) -> boolean
fifo write: @1699477105524087982 0x7f81e26032b4 534: bjg::eu() -> float
fifo write: @1699477105524165103 0x7f81e2602d14 312: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::next() -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477105524288605 0x7f81e26024b4 883: eam::a(aqh) -> boolean
fifo write: @1699477105524336136 0x7f81e9c2714c 6: dje::c() -> djn
fifo write: @1699477105524377306 0x7f81e9c2744c 3: djn::b() -> boolean
fifo write: @1699477105524561298 0x7f81e2602094 47: gw$3::computeNext() -> Object
fifo write: @1699477105524778551 0x7f81e2601457 1255: gw$3::a() -> gw
fifo write: @1699477105524862712 0x7f81e21656fc 1870: bqc::a(brp, java.util.EnumSet) -> boolean
fifo write: @1699477105524916953 0x7f81e2165214 223: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$SetIterator::nextLong() -> long
fifo write: @1699477105524960354 0x7f81e2164d94 243: brp::a() -> boolean
fifo write: @1699477105525029834 0x7f81e21640f4 1530: bji::c(biv) -> cjf
fifo write: @1699477105525081715 0x7f81e9c2774c 6: akq::v() -> java.util.List
fifo write: @1699477105525162576 0x7f81e2163734 1053: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$SetIterator::nextEntry() -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477105525231027 0x7f81e2162d34 816: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset$SubsetIterator::updateNext() -> void
fifo write: @1699477105525328098 0x7f81e23d3ac1 3435: bqc::a(brp, java.util.Map) -> boolean
fifo write: @1699477105525449400 0x7f81e9c27a5d 1427: com.google.common.collect.ImmutableList$Builder::add(Object) -> com.google.common.collect.ImmutableCollection$Builder
fifo write: @1699477105525500461 0x7f81e23d3234 633: bji::fT() -> boolean
fifo write: @1699477105525548011 0x7f81e23d2a94 609: ehi::a(double, double, double, double, double, double) -> boolean
fifo write: @1699477105525805994 0x7f81e245443a 3553: eig::a(double, double, double) -> eig
fifo write: @1699477105526393112 0x7f81e9c28adc 29: java.util.AbstractCollection::isEmpty() -> boolean
fifo write: @1699477105526443933 0x7f81e23d2674 90: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477105526500083 0x7f81e9c28dcc 6: bji::fK() -> boolean
fifo write: @1699477105526553544 0x7f81e23d2294 47: com.google.common.collect.RegularImmutableMap::get(Object) -> Object
fifo write: @1699477105527239663 0x7f81e9c290d9 87: com.google.common.collect.Iterators$1::hasNext() -> boolean
fifo write: @1699477105527976653 0x7f81e9c29555 4194: he$c::a(aqh) -> boolean
fifo write: @1699477105528022783 0x7f81e9c2c9d0 75: aki$b::a() -> void
fifo write: @1699477105528094764 0x7f81e9c2cdd0 275: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477105528156305 0x7f81e9c2d44f 176: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477105528230006 0x7f81e9c2d959 338: com.google.common.collect.Iterators$1::next() -> Object
fifo write: @1699477105529665404 0x7f81e9c2e073 232: com.mojang.serialization.Codec$1::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105529952388 0x7f81e9c2e653 948: com.google.common.collect.Lists::equalsImpl(java.util.List, Object) -> boolean
fifo write: @1699477105530179581 0x7f81e23d1e14 254: java.util.EnumMap$EnumMapIterator::<init>(java.util.EnumMap) -> void
fifo write: @1699477105531170634 0x7f81e9c2f2d9 54: dfl$$Lambda$518.0x00007f81603037d0::apply(Object) -> Object
fifo write: @1699477105532455470 0x7f81e23d1634 597: java.util.EnumMap$EntryIterator$Entry::getKey() -> Object
fifo write: @1699477105532517771 0x7f81e2453c34 484: java.util.EnumMap$EntryIterator$Entry::getKey() -> Enum
fifo write: @1699477105533548504 0x7f81e9c2f691 706: com.mojang.serialization.codecs.RecordCodecBuilder::of(java.util.function.Function, com.mojang.serialization.MapCodec) -> com.mojang.serialization.codecs.RecordCodecBuilder
fifo write: @1699477105533720987 0x7f81e2452c7a 2183: com.google.common.collect.Sets::newHashSet(Iterable) -> java.util.HashSet
fifo write: @1699477105534125572 0x7f81e9c2ff63 220: com.mojang.serialization.Codec$16::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477105534787420 0x7f81e9c305ac 467: com.mojang.serialization.Codec$$Lambda$520.0x00007f8160303c58::apply(Object) -> Object
fifo write: @1699477105536960028 0x7f81e2319946 9581: java.util.concurrent.CompletableFuture$UniCompose::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105537124961 0x7f81e9c30cd9 771: java.io.DataOutputStream::writeByte(int) -> void
fifo write: @1699477105539045325 0x7f81e2452797 237: qu::a(java.io.DataOutput) -> void
fifo write: @1699477105539174877 0x7f81e9c315dc 18: java.io.DataOutputStream::writeUTF(String) -> void
fifo write: @1699477105539366220 0x7f81e9c318ef 381: com.mojang.serialization.Encoder$2$$Lambda$5286.0x00007f81609be7d0::apply(Object) -> Object
fifo write: @1699477105539510861 0x7f81e9c3234c 3: biu::d() -> boolean
fifo write: @1699477105539743564 0x7f81e2452314 117: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::right() -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477105539794705 0x7f81e2319199 178: cpv::c(int, int) -> cpb
fifo write: @1699477105539845856 0x7f81e2318c14 305: cpw::b(int, int) -> boolean
fifo write: @1699477105540043558 0x7f81e2489f22 1635: ako::b(int, int) -> boolean
fifo write: @1699477105540205480 0x7f81e2487828 5807: biq::d(float) -> gw
fifo write: @1699477105540443483 0x7f81e22d3734 1130: bjg::bv() -> boolean
fifo write: @1699477105540519084 0x7f81e2487194 117: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::left() -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477105540729987 0x7f81e23186f4 251: biq::bN() -> boolean
fifo write: @1699477105540880389 0x7f81e9c3294c 6: ajp::a() -> ajo
fifo write: @1699477105541497657 0x7f81e22d3214 238: java.util.zip.Deflater::finished() -> boolean
fifo write: @1699477105541622189 0x7f81e9c32f75 1952: dho$$Lambda$7319.0x00007f8160bcfa28::accept(Object) -> void
fifo write: @1699477105541721680 0x7f81e9c343d0 75: java.util.Arrays$ArrayList::get(int) -> Object
fifo write: @1699477105541774231 0x7f81e9c3474c 9: biq::cP() -> java.util.List
fifo write: @1699477105541904042 0x7f81e9c34a73 1512: com.google.common.collect.Iterators$5::computeNext() -> Object
fifo write: @1699477105541977283 0x7f81e22d285e 882: bjg::a(cjf, cjf) -> boolean
fifo write: @1699477105542062914 0x7f81e9c35cd2 507: com.google.common.collect.ImmutableList::builderWithExpectedSize(int) -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477105542138655 0x7f81e22d1c34 1271: cjf::a(cjf, cjf) -> boolean
fifo write: @1699477105542227406 0x7f81e22d0994 2255: cjf::c(cjf, cjf) -> boolean
fifo write: @1699477105542287267 0x7f81e22cfbfc 1439: cpy::b(int, int, int, int) -> boolean
fifo write: @1699477105542371238 0x7f81e23c2904 3401: eid::b(double, double, double, double, double, double) -> eig
fifo write: @1699477105542426459 0x7f81e22cf3b4 787: biq::cQ() -> biq
fifo write: @1699477105542493290 0x7f81e9c36333 116: it.unimi.dsi.fastutil.doubles.DoubleArrayList::wrap(double[]) -> it.unimi.dsi.fastutil.doubles.DoubleArrayList
fifo write: @1699477105542540451 0x7f81e22cea54 892: bil::h() -> int
fifo write: @1699477105543342351 0x7f81e9c36d7d 1867: aew$$Lambda$284.0x00007f81601b2838::apply(Object) -> Object
fifo write: @1699477105543551074 0x7f81e8bff500 472: I2C/C2I adapters(0xbaaa7e7e7e)
fifo write: @1699477105543727536 0x7f81e9c38550 527: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::get(int) -> Object
fifo write: @1699477105544029690 0x7f81e9c38dcc 9: bjg::ef() -> asc
fifo write: @1699477105544095111 0x7f81e9c390d0 35: ha::j() -> int
fifo write: @1699477105544132391 0x7f81e9c393d0 35: ha::l() -> int
fifo write: @1699477105544170292 0x7f81e9c396d0 35: ha::k() -> int
fifo write: @1699477105545432098 0x7f81e9c39a35 1266: java.util.stream.MatchOps$MatchOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477105546063656 0x7f81e8bff200 480: I2C/C2I adapters(0xbaaabbeb)
fifo write: @1699477105546199478 0x7f81e8bfef00 480: I2C/C2I adapters(0xbbaaabbe)
fifo write: @1699477105546774065 0x7f81e8bfec00 448: I2C/C2I adapters(0xaaaab)
fifo write: @1699477105547235681 0x7f81e9c3bdb5 702: java.security.MessageDigest::isEqual(byte[], byte[]) -> boolean
fifo write: @1699477105548259994 0x7f81e23c1eb4 982: cqi::H_() -> int
fifo write: @1699477105548399416 0x7f81e23c1799 699: dhq::b_(gw) -> eam
fifo write: @1699477105548457397 0x7f81e23c1094 589: cqi::d(gw) -> dhf
fifo write: @1699477105548515838 0x7f81e23c07b4 982: cqi::I_() -> int
fifo write: @1699477105548821082 0x7f81e9c3c787 1895: java.util.stream.AbstractPipeline::copyIntoWithCancel(java.util.stream.Sink, java.util.Spliterator) -> boolean
fifo write: @1699477105548891983 0x7f81e23bf440 2497: cqi::a(int, int) -> dhf
fifo write: @1699477105548965193 0x7f81e23be1d9 2338: cti::g(dfj) -> boolean
fifo write: @1699477105549297548 0x7f81e221db95 3156: dhq::a(int, int, int) -> eam
fifo write: @1699477105549364349 0x7f81e221c219 4029: ebg::a(dfj) -> boolean
fifo write: @1699477105549485950 0x7f81e221a0a7 5159: cqi::b_(gw) -> eam
fifo write: @1699477105549609322 0x7f81e255d5a7 5159: cqi::a_(gw) -> dfj
fifo write: @1699477105549683173 0x7f81e9a1fc28 539: cpx::d(int) -> boolean
fifo write: @1699477105550247600 0x7f81e22ce494 243: bjg::a(bib) -> boolean
fifo write: @1699477105550397292 0x7f81e15bc574 157: java.util.ImmutableCollections$ListN::isEmpty() -> boolean
fifo write: @1699477105550673446 0x7f81e14da239 694: coz::a(int, int) -> cpb
fifo write: @1699477105550867878 0x7f81e980f3d4 135: gx::a() -> boolean
fifo write: @1699477105551067531 0x7f81e15bbf96 473: cpv::d(int, int) -> dhq
fifo write: @1699477105551506326 0x7f81e9b8864c 4: ehn::a() -> double
fifo write: @1699477105551542947 0x7f81e9ba164c 4: ehn::b() -> double
fifo write: @1699477105551580397 0x7f81e9a3894c 4: ehn::c() -> double
fifo write: @1699477105551622648 0x7f81e99fdeb0 67: gx::e() -> int
fifo write: @1699477105551742869 0x7f81e16de514 55: ehi::h(double) -> ehi
fifo write: @1699477105552013543 0x7f81e182fc94 1409: biq::b(int, boolean) -> void
fifo write: @1699477105552098534 0x7f81e255bbdc 3653: bji::cN() -> bjg
fifo write: @1699477105552219385 0x7f81e2559a27 5382: cpv::a_(gw) -> dfj
fifo write: @1699477105552496139 0x7f81e2357274 14: ehn::g() -> double
fifo write: @1699477105553709795 0x7f81e23182f4 68: ehn::f() -> double
fifo write: @1699477105553885977 0x7f81e9b1b74c 6: djl::d() -> djj
fifo write: @1699477105553983448 0x7f81e1a84f74 97: aqn$a::a() -> boolean
fifo write: @1699477105554212191 0x7f81e1b7d4b9 1222: cpv::l(gw) -> dhq
fifo write: @1699477105554262432 0x7f81e14d9b17 139: ehi::c(ehi) -> boolean
fifo write: @1699477105554527735 0x7f81e8bfe900 480: I2C/C2I adapters(0xbaa7e7e6aa)
fifo write: @1699477105554543125 0x7f81e8bfe600 488: I2C/C2I adapters(0xbaa7e7e6aaa)
fifo write: @1699477105554669827 0x7f81e1e01927 6315: cpv::b_(gw) -> eam
fifo write: @1699477105554689367 0x7f81e8bfe300 512: I2C/C2I adapters(0xbaa7e7e6aaab)
fifo write: @1699477105554827529 0x7f81e8bfe000 512: I2C/C2I adapters(0xbbaa7e7e6aaa)
fifo write: @1699477105554881210 0x7f81e8bfdd00 536: I2C/C2I adapters(0xbbaa7e7e6aaab)
fifo write: @1699477105555224584 0x7f81e8bfda00 536: I2C/C2I adapters(0xbbbaa7e7e6aaa)
fifo write: @1699477105555452807 0x7f81e1ea1116 53: java.util.zip.Deflater::deflate(byte[], int, int) -> int
fifo write: @1699477105555508258 0x7f81e1ec3514 390: java.util.zip.Deflater::ensureOpen() -> void
fifo write: @1699477105555559599 0x7f81e1ca08b4 410: java.util.zip.DeflaterOutputStream::deflate() -> void
fifo write: @1699477105555907013 0x7f81e212d1f9 508: gw::a(double, double, double) -> gw
fifo write: @1699477105556457410 0x7f81e25574ce 4435: java.util.zip.Deflater::deflate(byte[], int, int, int) -> int
fifo write: @1699477105556765554 0x7f81e98b79cc 4: eax::a() -> float
fifo write: @1699477105556816125 0x7f81e23bdb94 421: biq::cZ() -> biq
fifo write: @1699477105556909216 0x7f81e9a355ec 964: qw::a(String, rq, java.io.DataOutput) -> void
fifo write: @1699477105557186739 0x7f81e23f0bd4 873: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::find(int) -> int
fifo write: @1699477105557280471 0x7f81e1b8c63f 4029: dhq::a_(gw) -> dfj
fifo write: @1699477105557827348 0x7f81e238d379 2106: bji::a(eax) -> float
fifo write: @1699477105558291564 0x7f81e222eb14 249: eay::b(eaz) -> boolean
fifo write: @1699477105558668198 0x7f81e21588d4 214: eaz::b(int, int, int) -> int
fifo write: @1699477105559011833 0x7f81e9aa5d15 1961: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::computeIfAbsent(int, it.unimi.dsi.fastutil.ints.Int2ObjectFunction) -> Object
fifo write: @1699477105559068403 0x7f81e25c9b94 196: eay$$Lambda$7373.0x00007f8160be4258::<init>(eay, int, int, int) -> void
fifo write: @1699477105559119934 0x7f81e2286d94 209: eay::c(eaz) -> boolean
fifo write: @1699477105559199175 0x7f81e2272bf9 900: eay::a(int, int, int) -> eaz
fifo write: @1699477105559239206 0x7f81e98b76cc 3: eba::d() -> boolean
fifo write: @1699477105559269976 0x7f81e23825d4 25: arw::c(float) -> float
fifo write: @1699477105559299626 0x7f81e1b8bf94 240: eaz::a(eaz) -> float
fifo write: @1699477105559382927 0x7f81e2591f9f 1737: eay::c(int, int, int) -> eax
fifo write: @1699477105559463188 0x7f81e212cd74 90: eaz::c() -> boolean
fifo write: @1699477105559537979 0x7f81e1ca0242 427: java.lang.invoke.LambdaForm$MH.0x00007f8160bddc00::linkToTargetMethod(int, int, int, Object) -> Object
fifo write: @1699477105559589440 0x7f81e2619914 147: eba$$Lambda$7362.0x00007f8160bdadb0::<init>(int, int, int) -> void
fifo write: @1699477105559668661 0x7f81e25c8b1f 1443: java.lang.invoke.LambdaForm$DMH.0x00007f8160464000::newInvokeSpecial(Object, int, int, int) -> Object
fifo write: @1699477105560035626 0x7f81e9aa53d7 530: java.util.ImmutableCollections$SetN::contains(Object) -> boolean
fifo write: @1699477105560250418 0x7f81e263ab0c 7160: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477105560306559 0x7f81e9a2edd1 290: cqi::a(int, int) -> dhf
fifo write: @1699477105560361560 0x7f81e269df17 229: ebd::a(eaz, eaz) -> float
fifo write: @1699477105560480341 0x7f81e26ae6f7 1619: eba::b(int, int, int) -> eaz
fifo write: @1699477105560868706 0x7f81e2550dd7 18206: ebg::b(cpb, gw) -> eax
fifo write: @1699477105561161020 0x7f81e9ac4341 7513: aqv::a(Object, int) -> void
fifo write: @1699477105561463424 0x7f81e25dbc94 243: com.google.common.collect.SingletonImmutableBiMap::containsKey(Object) -> boolean
fifo write: @1699477105562666760 0x7f81e958c764 454: com.google.common.collect.ImmutableMap::containsKey(Object) -> boolean
fifo write: @1699477105562744171 0x7f81e25db574 143: arw::a(float, float, float) -> float
fifo write: @1699477105562913393 0x7f81e98b71cc 6: dcv::p() -> gw
fifo write: @1699477105563103385 0x7f81e9a464d5 378: coz::a(int, int) -> cpb
fifo write: @1699477105563998367 0x7f81e958c44c 6: ajy::c() -> java.util.concurrent.CompletableFuture
fifo write: @1699477105564037517 0x7f81e958c14c 6: cqt::b() -> crf
fifo write: @1699477105564084408 0x7f81e9a2eacc 6: ajy::a() -> java.util.concurrent.CompletableFuture
fifo write: @1699477105564188759 0x7f81e245aa05 683: java.lang.invoke.LambdaForm$MH.0x00007f81601b5400::linkToTargetMethod(Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477105564293391 0x7f81e25e3308 1592: java.lang.invoke.LambdaForm$DMH.0x00007f81601b5000::newInvokeSpecial(Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477105564951609 0x7f81e9a45d50 255: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477105566098854 0x7f81e254cc47 8822: ajy::a(dhq) -> void
fifo write: @1699477105566169035 0x7f81e9ac3910 645: ajy::d() -> dhq
fifo write: @1699477105567042966 0x7f81e26b7bb4 476: dhl::a() -> byte[]
fifo write: @1699477105567105167 0x7f81e215bcbd 915: qw::a(String, byte[]) -> void
fifo write: @1699477105568378293 0x7f81e22c01bc 981: rj::g(qw) -> qw
fifo write: @1699477105570512021 0x7f81e215b714 448: java.util.EnumMap$EntryIterator::<init>(java.util.EnumMap) -> void
fifo write: @1699477105570585982 0x7f81e9ac3559 46: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5276.0x00007f81609bd140::apply(Object) -> Object
fifo write: @1699477105570647833 0x7f81e25d21b7 762: java.util.EnumMap::entrySet() -> java.util.Set
fifo write: @1699477105570707463 0x7f81e25d1a6b 555: java.util.EnumMap$EntrySet::iterator() -> java.util.Iterator
fifo write: @1699477105570831075 0x7f81e262c474 1075: java.nio.channels.spi.AbstractInterruptibleChannel::end(boolean) -> void
fifo write: @1699477105571651576 0x7f81e9b9b448 1683: rd::a(java.io.DataOutput) -> void
fifo write: @1699477105572623638 0x7f81e2298194 47: java.util.EnumMap$EntryIterator::next() -> Object
fifo write: @1699477105572691029 0x7f81e245a494 243: java.util.EnumMap$EntryIterator$Entry::<init>(java.util.EnumMap$EntryIterator, int) -> void
fifo write: @1699477105572756560 0x7f81e2219637 1000: java.util.EnumMap$EntryIterator::next() -> java.util.Map$Entry
fifo write: @1699477105573291167 0x7f81e268d2b4 669: java.util.EnumMap$EntryIterator$Entry::getValue() -> Object
fifo write: @1699477105573546020 0x7f81e9b9ab90 493: java.util.concurrent.locks.ReentrantLock::unlock() -> void
fifo write: @1699477105575202771 0x7f81e9ac304c 6: cpv::B_() -> dha
fifo write: @1699477105575246182 0x7f81e9b9a84c 4: csv::i() -> float
fifo write: @1699477105575429274 0x7f81e2218eed 666: gw::h(int) -> gw
fifo write: @1699477105575506225 0x7f81e9b9a050 491: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::get(long) -> Object
fifo write: @1699477105575623467 0x7f81e26b7694 229: java.util.Spliterators$IteratorSpliterator::<init>(java.util.Iterator, int) -> void
fifo write: @1699477105575731158 0x7f81e268c7f2 1066: java.util.Spliterators::spliteratorUnknownSize(java.util.Iterator, int) -> java.util.Spliterator
fifo write: @1699477105575874510 0x7f81e2429634 642: bjg::e(biv) -> cjf
fifo write: @1699477105575920821 0x7f81e262be94 314: biq::cX() -> boolean
fifo write: @1699477105576194504 0x7f81e2429114 289: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477105576241705 0x7f81e24047d4 1347: bji::cX() -> boolean
fifo write: @1699477105576280975 0x7f81e234f1d4 87: ajz::c(int) -> boolean
fifo write: @1699477105576341856 0x7f81e2403e34 780: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477105576386967 0x7f81e24288b4 591: aki::c(long) -> boolean
fifo write: @1699477105576430467 0x7f81e9b99bcc 4: dha$d::c() -> double
fifo write: @1699477105576471758 0x7f81e9abb8cc 4: dha$d::d() -> double
fifo write: @1699477105576513628 0x7f81e9abb5cc 4: dha$d::a() -> double
fifo write: @1699477105576566929 0x7f81e9abb2cc 4: dha$d::b() -> double
fifo write: @1699477105576829772 0x7f81e9ab9af5 1833: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5281.0x00007f81609bdca0::apply(Object) -> Object
fifo write: @1699477105576939814 0x7f81e1e00eb9 888: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::findKey(Object) -> int
fifo write: @1699477105576987594 0x7f81e1e00594 765: biq::dd() -> boolean
fifo write: @1699477105577102836 0x7f81e2581bc7 3182: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::put(Object, double) -> double
fifo write: @1699477105577190907 0x7f81e26b1bbe 953: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::locateKey(long) -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477105577238618 0x7f81e1dffd94 275: biq::aW() -> boolean
fifo write: @1699477105577321559 0x7f81e9b91f70 579: ako::b(long) -> ajy
fifo write: @1699477105577400160 0x7f81e9ab904c 44: acy::e(ehn) -> void
fifo write: @1699477105577882756 0x7f81e26b1314 699: java.util.zip.Deflater::needsInput() -> boolean
fifo write: @1699477105578271981 0x7f81e9b91c4c 6: aka::j() -> aki
fifo write: @1699477105578623226 0x7f81e26b0cb4 500: bjg::fA() -> java.util.Optional
fifo write: @1699477105579077431 0x7f81e2546410 15210: biq::a(aqh, double) -> boolean
fifo write: @1699477105579133942 0x7f81e26b0794 248: ehi::a(ha$a) -> double
fifo write: @1699477105579187613 0x7f81e26b0294 248: ehi::b(ha$a) -> double
fifo write: @1699477105579234413 0x7f81e25da294 375: biq::bl() -> boolean
fifo write: @1699477105579644639 0x7f81e9b909c2 1121: dhq::a(int, int, int) -> eam
fifo write: @1699477105580151425 0x7f81e9b8e0f0 3268: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$522.0x00007f8160306240::apply(Object) -> Object
fifo write: @1699477105580213936 0x7f81e9b8dbd0 135: eam::a(aqh) -> boolean
fifo write: @1699477105580256937 0x7f81e9b8d8cc 3: dis::i() -> boolean
fifo write: @1699477105580311477 0x7f81e25d9e14 117: ehi::b(ehn) -> ehi
fifo write: @1699477105580371488 0x7f81e25d9497 920: ehi::b(double, double, double) -> ehi
fifo write: @1699477105580651122 0x7f81e9b8c4b3 1352: dhq::a_(gw) -> dfj
fifo write: @1699477105580764663 0x7f81e25d8bb4 848: bjg::fv() -> boolean
fifo write: @1699477105581128038 0x7f81e9c3e1da 1171: java.util.stream.ReferencePipeline::anyMatch(java.util.function.Predicate) -> boolean
fifo write: @1699477105581184719 0x7f81e25d82b4 872: bjg::ev() -> boolean
fifo write: @1699477105581231989 0x7f81e26b6cb4 167: biq::aG() -> gw
fifo write: @1699477105581285340 0x7f81e26b63b4 908: bjg::fC() -> boolean
fifo write: @1699477105581367571 0x7f81e26b5e94 230: java.util.function.Predicate$$Lambda$1500.0x00007f81601e3ca8::<init>(java.util.function.Predicate, java.util.function.Predicate) -> void
fifo write: @1699477105581425392 0x7f81e26b568f 704: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset::iterator() -> it.unimi.dsi.fastutil.longs.LongBidirectionalIterator
fifo write: @1699477105581522273 0x7f81e26b4907 1779: java.util.function.Predicate::and(java.util.function.Predicate) -> java.util.function.Predicate
fifo write: @1699477105581680375 0x7f81e26b40bd 842: dfi$a::a(cpv, gw, biq) -> void
fifo write: @1699477105581747066 0x7f81e26a1514 489: cpb$$Lambda$7345.0x00007f8160bd3820::apply(Object) -> Object
fifo write: @1699477105581850777 0x7f81e26a05b4 2210: biq::e(dfj) -> boolean
fifo write: @1699477105581974219 0x7f81e9c3f113 2798: rd::a(java.io.DataOutput) -> void
fifo write: @1699477105582077530 0x7f81e269f474 2551: biq$$Lambda$7346.0x00007f8160bd3a68::test(Object) -> boolean
fifo write: @1699477105582320973 0x7f81e9b8bf4c 4: biq::dF() -> float
fifo write: @1699477105582672938 0x7f81e269ef14 334: com.google.common.collect.Iterators$1::<init>(java.util.Iterator) -> void
fifo write: @1699477105582753999 0x7f81e26bb434 1480: com.google.common.collect.Iterators::unmodifiableIterator(java.util.Iterator) -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477105583983725 0x7f81e9c40b59 1302: aeh::c(aee) -> aeh$a
fifo write: @1699477105585897919 0x7f81e9c41e32 1302: bfo::c(java.util.function.BooleanSupplier) -> void
fifo write: @1699477105588688385 0x7f81e23e3b94 71: bfo::bq() -> void
fifo write: @1699477105590023343 0x7f81e9c42ffe 6788: com.mojang.serialization.codecs.KeyDispatchCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105590077763 0x7f81e9c481f0 166: ro::a(java.io.DataOutput) -> void
fifo write: @1699477105593142943 0x7f81e9c487f9 3888: qw::a(java.io.DataOutput) -> void
fifo write: @1699477105605746075 0x7f81e269e894 332: java.io.BufferedOutputStream::flushBuffer() -> void
fifo write: @1699477105613792239 0x7f81e2581714 163: cpv::d(float) -> float
fifo write: @1699477105614107773 0x7f81e26bae14 530: bji::U() -> boolean
fifo write: @1699477105615903606 0x7f81e9c4b54c 6: bkj::a() -> java.util.Set
fifo write: @1699477105616009197 0x7f81e26ba8f4 309: hw::a(dja) -> hw
fifo write: @1699477105616097239 0x7f81e26ba214 443: java.util.IdentityHashMap$IdentityHashMapIterator::<init>(java.util.IdentityHashMap) -> void
fifo write: @1699477105616149539 0x7f81e26b986a 1111: hw::a(gw) -> hw
fifo write: @1699477105616186210 0x7f81e9c4b84c 3: ajy::o() -> boolean
fifo write: @1699477105616236680 0x7f81e9c4bb4c 6: ajy::j() -> java.util.concurrent.CompletableFuture
fifo write: @1699477105617632678 0x7f81e9c4c159 146: arf$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477105617818831 0x7f81e9c4c5cc 2: cpx$1::H_() -> int
fifo write: @1699477105617869821 0x7f81e9c4c8cc 2: java.util.Spliterators$DoubleArraySpliterator::characteristics() -> int
fifo write: @1699477105618092624 0x7f81e9c4cbf8 879: com.google.common.collect.ImmutableList::equals(Object) -> boolean
fifo write: @1699477105618438349 0x7f81e9c4d7d3 896: java.util.Base64$Decoder::decodedOutLength(byte[], int, int) -> int
fifo write: @1699477105618481409 0x7f81e26b9394 240: dks::a() -> long[]
fifo write: @1699477105618604771 0x7f81e26b8f17 237: rb::a(java.io.DataOutput) -> void
fifo write: @1699477105622017355 0x7f81e9c4e793 2012: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5277.0x00007f81609bd380::apply(Object) -> Object
fifo write: @1699477105624608918 0x7f81e9c4fcd0 2530: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5275.0x00007f81609bcef8::apply(Object) -> Object
fifo write: @1699477105625404979 0x7f81e26b881a 242: gu$2::a(int, int, int, ha$a) -> int
fifo write: @1699477105625467550 0x7f81e2545994 388: gu$2::a(ha$a) -> ha$a
fifo write: @1699477105625521280 0x7f81e2545519 235: java.io.FilterOutputStream::write(byte[]) -> void
fifo write: @1699477105625581191 0x7f81e2544f14 453: qt::a(java.io.DataOutput) -> void
fifo write: @1699477105626243510 0x7f81e2544ab4 167: biq::aF() -> gw
fifo write: @1699477105626414222 0x7f81e2543c57 1778: biq::bM() -> boolean
fifo write: @1699477105626572224 0x7f81e25429f7 1968: java.util.BitSet::nextSetBit(int) -> int
fifo write: @1699477105626618224 0x7f81e2542494 240: aqs::size() -> int
fifo write: @1699477105626667815 0x7f81e2541d34 661: dje::a() -> boolean
fifo write: @1699477105626828977 0x7f81e254169a 530: biq::o(double, double, double) -> void
fifo write: @1699477105626868108 0x7f81e9c51fd3 36: biq::dq() -> double
fifo write: @1699477105626902198 0x7f81e9c522d3 36: biq::dw() -> double
fifo write: @1699477105626996419 0x7f81e2541114 364: biq$$Lambda$7336.0x00007f8160bd6960::test(Object) -> boolean
fifo write: @1699477105627099991 0x7f81e8bfd700 496: I2C/C2I adapters(0xbbb7e7e7e66be)
fifo write: @1699477105627357024 0x7f81e2540a94 638: cpf$$Lambda$7342.0x00007f8160bd2af8::apply(Object, Object) -> Object
fifo write: @1699477105627491376 0x7f81e253f5a4 3019: biq::a(ehi, gw) -> boolean
fifo write: @1699477105627561017 0x7f81e253ef14 466: djf$$Lambda$7340.0x00007f8160bd2228::accept(Object) -> aqn$a
fifo write: @1699477105627580837 0x7f81e8b9f1e0 27: vtable stub
fifo write: @1699477105627639968 0x7f81e26afe7a 111: djf::a(ehi, aqn, dje) -> aqn$a
fifo write: @1699477105627734609 0x7f81e253e894 638: cpf$$Lambda$7344.0x00007f8160bd31b0::apply(Object, Object) -> Object
fifo write: @1699477105627792490 0x7f81e253d997 2129: aqs::iterator() -> java.util.Iterator
fifo write: @1699477105627847410 0x7f81e253d234 527: hy::b(ho) -> double
fifo write: @1699477105627895241 0x7f81e9c525cc 9: biq::dn() -> cpc
fifo write: @1699477105627976672 0x7f81e253cbb4 499: hy::c(double, double, double) -> double
fifo write: @1699477105628126824 0x7f81e253b127 3947: dje::a(ehi, aqn) -> aqn$a
fifo write: @1699477105628212945 0x7f81e253a734 845: biq::bX() -> boolean
fifo write: @1699477105628760412 0x7f81e253a2f4 111: akq::E() -> djj
fifo write: @1699477105628991595 0x7f81e9c531dd 450: eig::a(ha$a, double) -> int
fifo write: @1699477105629040426 0x7f81e2539cb7 530: cpv::Z() -> boolean
fifo write: @1699477105629100236 0x7f81e2538d19 2279: biq::bf() -> void
fifo write: @1699477105629838976 0x7f81e25377d8 3048: bqc::a(boolean) -> void
fifo write: @1699477105629923697 0x7f81e2537194 275: cpv$$Lambda$7338.0x00007f8160bd7868::<init>(biq, java.util.function.Predicate, java.util.List) -> void
fifo write: @1699477105629993868 0x7f81e2536d14 185: aqn$$Lambda$7339.0x00007f8160bd2000::<init>(java.util.function.Consumer) -> void
fifo write: @1699477105630213231 0x7f81e25360f7 1441: djf::b(ehi, aqn) -> void
fifo write: @1699477105630284432 0x7f81e25356b7 1096: aqn::forConsumer(java.util.function.Consumer) -> aqn
fifo write: @1699477105630391783 0x7f81e2532fc9 5067: djf::a(ehi, aqn) -> void
fifo write: @1699477105630464964 0x7f81e25328f4 242: aqn::a(java.util.function.Consumer, Object) -> aqn$a
fifo write: @1699477105630526285 0x7f81e2532414 230: djf$$Lambda$7340.0x00007f8160bd2228::<init>(ehi, aqn) -> void
fifo write: @1699477105630590886 0x7f81e2531e14 339: aqn$$Lambda$7339.0x00007f8160bd2000::accept(Object) -> aqn$a
fifo write: @1699477105630653266 0x7f81e26e2819 359: cpv$$Lambda$7338.0x00007f8160bd7868::accept(Object) -> void
fifo write: @1699477105630709417 0x7f81e26e2dcf 101: ehs::a(biq) -> ehs
fifo write: @1699477105630804708 0x7f81e26e31e8 1917: cpv::a(biq, java.util.function.Predicate, java.util.List, biq) -> void
fifo write: @1699477105630897090 0x7f81e26e415f 2738: djk::a(ehi, java.util.function.Consumer) -> void
fifo write: @1699477105630948110 0x7f81e26e5514 243: biq::a(aqh) -> boolean
fifo write: @1699477105631091892 0x7f81e26e5b6f 6372: cpv::a(biq, ehi, java.util.function.Predicate) -> java.util.List
fifo write: @1699477105631197533 0x7f81e26e8622 2712: coz::<init>(cpf, biq, ehi, boolean, java.util.function.BiFunction) -> void
fifo write: @1699477105631270064 0x7f81e26e9b57 1414: Iterable::spliterator() -> java.util.Spliterator
fifo write: @1699477105631480657 0x7f81e26ea7c7 4922: ehx::<init>(biq) -> void
fifo write: @1699477105631778631 0x7f81e26ec6e1 3039: com.google.common.collect.ImmutableList$Builder::addAll(Iterable) -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477105631839322 0x7f81e26edb72 292: ehn::b(double, double, double) -> ehn
fifo write: @1699477105631859332 0x7f81e8b9f210 27: vtable stub
fifo write: @1699477105631913463 0x7f81e26ee134 615: bsp::l() -> boolean
fifo write: @1699477105631967723 0x7f81e26ee8f2 292: ehn::d(double, double, double) -> ehn
fifo write: @1699477105632078045 0x7f81e9c53b5b 60: cjf::b() -> boolean
fifo write: @1699477105632125145 0x7f81e9c53ecc 4: csv::h() -> float
fifo write: @1699477105632164076 0x7f81e26eee94 163: arw::b(double, double) -> boolean
fifo write: @1699477105632200646 0x7f81e9c541cc 2: biq::h(int) -> void
fifo write: @1699477105632383649 0x7f81e26ef380 2205: cpy::a(int, int, int, int, int, int) -> boolean
fifo write: @1699477105633069608 0x7f81e26f03b9 1883: java.util.zip.DeflaterOutputStream::write(byte[], int, int) -> void
fifo write: @1699477105633104018 0x7f81e26f14b4 826: java.util.zip.Deflater::setInput(byte[], int, int) -> void
fifo write: @1699477105640674315 0x7f81e9c54604 4919: com.mojang.serialization.codecs.OptionalFieldCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105649818583 0x7f81e26f1d74 337: Math::addExact(long, long) -> long
fifo write: @1699477105653286958 0x7f81e9c57b53 1168: java.io.DataOutputStream::writeInt(int) -> void
fifo write: @1699477105662774070 0x7f81e9c58999 9937: com.mojang.serialization.MapEncoder$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105663914975 0x7f81e9c5ff4c 3: akv::b() -> long
fifo write: @1699477105663956766 0x7f81e26f2274 159: asm$a::hasNext() -> boolean
fifo write: @1699477105664889738 0x7f81e26f2714 96: net.minecraft.server.MinecraftServer$$Lambda$7295.0x00007f8160bbed00::getAsBoolean() -> boolean
fifo write: @1699477105665043260 0x7f81e26f2b54 1118: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::getOrDefault(long, long) -> long
fifo write: @1699477105665196992 0x7f81e9c6024c 2: sun.nio.fs.UnixException::errno() -> int
fifo write: @1699477105665453515 0x7f81e26f3807 2966: aka::e(ajy) -> boolean
fifo write: @1699477105666692711 0x7f81e9c6073d 11144: cpv::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477105671911648 0x7f81e9c67bcc 6: cpz::d() -> bgv
fifo write: @1699477105672206012 0x7f81e26f4ebe 960: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::getDouble(Object) -> double
fifo write: @1699477105673050393 0x7f81e26f58f4 1558: ebg::a(cpb, int, int, int, java.util.EnumSet, eax, gw) -> eax
fifo write: @1699477105673163164 0x7f81e9c67f40 2512: dho::<init>(hj, int, dhx) -> void
fifo write: @1699477105673247476 0x7f81e26f6799 3191: ebg::a(cpb, gw, eax) -> eax
fifo write: @1699477105673736562 0x7f81e26f7c0d 1612: gw::a(ha) -> gw
fifo write: @1699477105673806443 0x7f81e9c692cc 3: eba::f() -> boolean
fifo write: @1699477105674616453 0x7f81e26f8894 288: gw::a(int, int, int, int, int, int) -> java.util.stream.Stream
fifo write: @1699477105674681384 0x7f81e26f8d94 63: gw$$Lambda$722.0x00007f8160369c58::iterator() -> java.util.Iterator
fifo write: @1699477105674736635 0x7f81e26f9214 169: gw$$Lambda$722.0x00007f8160369c58::<init>(int, int, int, int, int, int) -> void
fifo write: @1699477105674811386 0x7f81e26f96f9 471: java.lang.invoke.LambdaForm$MH.0x00007f816036cc00::linkToTargetMethod(int, int, int, int, int, int, Object) -> Object
fifo write: @1699477105674868016 0x7f81e26f9ce3 121: gw::c(int, int, int, int, int, int) -> java.util.Iterator
fifo write: @1699477105674968098 0x7f81e26fa1a6 1490: java.lang.invoke.LambdaForm$DMH.0x00007f816036c400::newInvokeSpecial(Object, int, int, int, int, int, int) -> Object
fifo write: @1699477105675034619 0x7f81e26fad39 339: gw::a(ehi) -> java.util.stream.Stream
fifo write: @1699477105675148200 0x7f81e26fb3da 1083: gw$3::<init>(int, int, int, int, int, int) -> void
fifo write: @1699477105675294612 0x7f81e26fbe37 1149: gw::b(int, int, int, int, int, int) -> Iterable
fifo write: @1699477105675427044 0x7f81e9c695d3 370: coz::a(int, int) -> cpb
fifo write: @1699477105675514865 0x7f81e9c69c4c 9: net.minecraft.server.MinecraftServer::aF() -> afn
fifo write: @1699477105675737728 0x7f81e9c69f64 43: cpy::a(int, int, dhk) -> dhf
fifo write: @1699477105675785388 0x7f81e26fc834 500: biq::an() -> bjs
fifo write: @1699477105675840239 0x7f81e26fceb4 642: bjg::f(biv) -> cjf
fifo write: @1699477105675891230 0x7f81e26fd634 829: biq::c(bjs) -> boolean
fifo write: @1699477105675938300 0x7f81e9c6a2cc 2: net.minecraft.server.MinecraftServer::ag() -> int
fifo write: @1699477105675987841 0x7f81e26fde94 127: it.unimi.dsi.fastutil.ints.IntOpenHashSet::clear() -> void
fifo write: @1699477105676353786 0x7f81e26fe4bf 6688: cpv::q(gw) -> boolean
fifo write: @1699477105676398766 0x7f81e9c6a8cc 7: bji::A(float) -> void
fifo write: @1699477105676439817 0x7f81e9c6abcc 8: bjg::r(boolean) -> void
fifo write: @1699477105676482007 0x7f81e9c6aecc 6: bjg::el() -> boolean
fifo write: @1699477105676529748 0x7f81e2700f34 1224: biq::cW() -> boolean
fifo write: @1699477105676583709 0x7f81e9c6b1cc 6: bji::fJ() -> boolean
fifo write: @1699477105676664620 0x7f81e9c6b7cc 9: biq::cx() -> String
fifo write: @1699477105676762571 0x7f81e8b9f240 27: vtable stub
fifo write: @1699477105676780191 0x7f81e8b9f270 27: vtable stub
fifo write: @1699477105676947673 0x7f81e9c6bad3 36: biq::ds() -> double
fifo write: @1699477105677285948 0x7f81e27018d4 567: bjg::dF() -> float
fifo write: @1699477105677445880 0x7f81e2701fb4 539: bjc::d() -> boolean
fifo write: @1699477105677485040 0x7f81e27026b4 668: bvi::i() -> boolean
fifo write: @1699477105677612262 0x7f81e9c6bdcc 7: bjg::fe() -> float
fifo write: @1699477105677795164 0x7f81e2702f5c 3075: bvi::cN() -> bjg
fifo write: @1699477105677837915 0x7f81e27044b4 532: biq::ci() -> int
fifo write: @1699477105678070528 0x7f81e9c6c130 1283: dhq::b_(gw) -> eam
fifo write: @1699477105678120048 0x7f81e2704bf4 914: biq::s(float) -> void
fifo write: @1699477105678391942 0x7f81e9c6d504 1440: cti::g(dfj) -> boolean
fifo write: @1699477105678595565 0x7f81e2705594 453: akv$$Lambda$5452.0x00007f8160a799f0::applyAsLong(Object) -> long
fifo write: @1699477105679087811 0x7f81e9c6eb55 74: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::compare(long, long) -> int
fifo write: @1699477105679415395 0x7f81e2705bf4 2181: ako::a(long, dhf, dhk) -> void
fifo write: @1699477105679560697 0x7f81e2706c74 145: ebf::a(float, eaz) -> void
fifo write: @1699477105679718209 0x7f81e2707134 1246: eaw::a(int) -> void
fifo write: @1699477105679779540 0x7f81e2707c99 1591: ebd::a(eaz, java.util.Set) -> float
fifo write: @1699477105680038223 0x7f81e9c6ef53 1840: cqi::b_(gw) -> eam
fifo write: @1699477105680074814 0x7f81e270899d 70: eay::a(int, int, int, long) -> eax
fifo write: @1699477105680116874 0x7f81e2708e17 106: eay$$Lambda$7373.0x00007f8160be4258::get(long) -> Object
fifo write: @1699477105680150045 0x7f81e2709294 271: eaz::<init>(int, int, int) -> void
fifo write: @1699477105680191835 0x7f81e2709817 44: eba$$Lambda$7362.0x00007f8160bdadb0::get(int) -> Object
fifo write: @1699477105680228026 0x7f81e2709c5d 111: eba::a(int, int, int, int) -> eaz
fifo write: @1699477105680374418 0x7f81e9c70ad3 1908: cqi::a_(gw) -> dfj
fifo write: @1699477105680444598 0x7f81e270a17f 3119: eay::a(cpb, int, int, int, bji) -> eax
fifo write: @1699477105680570000 0x7f81e270ba74 4378: eay::a(cpb, int, int, int) -> eax
fifo write: @1699477105680782843 0x7f81e270d959 1313: eaw::a(eaz) -> eaz
fifo write: @1699477105683061222 0x7f81e9c72cb1 2020: ebg::a(dfj) -> boolean
fifo write: @1699477105683405986 0x7f81e270e50a 915: gw$a::i() -> gw
fifo write: @1699477105683466617 0x7f81e270ed97 816: gw::<init>(hy) -> void
fifo write: @1699477105683552408 0x7f81e270f614 2790: bji::L() -> bsp
fifo write: @1699477105683974633 0x7f81e2710874 109: eid::a(ehi) -> eig
fifo write: @1699477105684040454 0x7f81e2710d14 168: dha::e() -> double
fifo write: @1699477105684108235 0x7f81e2711194 168: dha::h() -> double
fifo write: @1699477105684155816 0x7f81e2711614 168: dha::f() -> double
fifo write: @1699477105684237247 0x7f81e2711a94 168: dha::g() -> double
fifo write: @1699477105688123097 0x7f81e2711f1a 507: java.io.FilterOutputStream::<init>(java.io.OutputStream) -> void
fifo write: @1699477105698311108 0x7f81e9c746b8 3256: rc::a(java.io.DataOutput) -> void
fifo write: @1699477105714266564 0x7f81e2712594 420: cqg$$Lambda$7312.0x00007f8160bcc830::<init>(gw, biq, cqj, cqf, bjj, it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap) -> void
fifo write: @1699477105714371086 0x7f81e2712c99 399: cqg$$Lambda$7312.0x00007f8160bcc830::accept(Object) -> void
fifo write: @1699477105714440857 0x7f81e27132b7 1433: cqg::a(gw, dhf) -> cqt
fifo write: @1699477105714541948 0x7f81e2713e14 1804: ako::a(long, java.util.function.Consumer) -> void
fifo write: @1699477105714632249 0x7f81e2714d17 1922: ako$$Lambda$7301.0x00007f8160bc2ec0::query(long, java.util.function.Consumer) -> void
fifo write: @1699477105714696310 0x7f81e2715c94 487: crf::a(biu) -> crf$b
fifo write: @1699477105714750811 0x7f81e2716214 448: dhr::c(int, int, int) -> he
fifo write: @1699477105714830362 0x7f81e2716814 230: cqf$$Lambda$7313.0x00007f8160bcca68::<init>(cqf, cpc) -> void
fifo write: @1699477105714956013 0x7f81e2716dc1 3327: cqg::a(gw, biq, cqj, cqf, bjj, it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap, dhq) -> void
fifo write: @1699477105715006274 0x7f81e271859e 1766: cqf::a(cpc, bjj) -> void
fifo write: @1699477105715152106 0x7f81e9c7674c 3: aeh::a() -> boolean
fifo write: @1699477105715319628 0x7f81e27193a7 1954: cqf::a(cpc) -> java.util.List
fifo write: @1699477105715496520 0x7f81e271a3f5 4293: dhf::getNoiseBiome(int, int, int) -> he
fifo write: @1699477105715565041 0x7f81e271c461 2252: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::addTo(Object, int) -> int
fifo write: @1699477105717207402 0x7f81e9c76a5b 80: eab::a(cqe) -> dzz
fifo write: @1699477105718607440 0x7f81e271d814 263: java.util.PriorityQueue$Itr::<init>(java.util.PriorityQueue) -> void
fifo write: @1699477105718657471 0x7f81e271dd6f 360: java.util.PriorityQueue::iterator() -> java.util.Iterator
fifo write: @1699477105718703012 0x7f81e271e294 606: java.util.PriorityQueue$Itr::hasNext() -> boolean
fifo write: @1699477105720013018 0x7f81e9c76ea4 261: com.mojang.serialization.codecs.RecordCodecBuilder$$Lambda$182.0x00007f81601871d8::apply(Object) -> Object
fifo write: @1699477105721007701 0x7f81e9c773d2 97: java.util.concurrent.Semaphore$Sync::tryReleaseShared(int) -> boolean
fifo write: @1699477105721351956 0x7f81e9c777f3 1648: dzx::c(long) -> dhl
fifo write: @1699477105721462297 0x7f81e271ea17 266: com.mojang.serialization.Codec$12::write(com.mojang.serialization.DynamicOps, Integer) -> Object
fifo write: @1699477105721530598 0x7f81e271ef37 620: com.mojang.serialization.Codec$12::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477105722658232 0x7f81e9c78a4f 241: he$c::e() -> java.util.Optional
fifo write: @1699477105722837954 0x7f81e271f614 227: arw::g(float) -> float
fifo write: @1699477105722999847 0x7f81e271fa94 240: java.util.HashSet::clear() -> void
fifo write: @1699477105723479563 0x7f81e271ff14 714: biq::bn() -> void
fifo write: @1699477105723528803 0x7f81e2720774 435: com.google.common.base.Objects::equal(Object, Object) -> boolean
fifo write: @1699477105723640935 0x7f81e9c78f55 1848: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$$Lambda$184.0x00007f8160187660::apply(Object) -> Object
fifo write: @1699477105723735706 0x7f81e9c7a553 1272: ass::b() -> void
fifo write: @1699477105724173381 0x7f81e2720cf4 84: biq::du() -> double
fifo write: @1699477105724403114 0x7f81e2721114 684: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::clear() -> void
fifo write: @1699477105724676928 0x7f81e272189a 596: eam::a(cpb, gw) -> float
fifo write: @1699477105724715158 0x7f81e2721f14 196: gx::<init>(int, int, int, int, int, int) -> void
fifo write: @1699477105724802510 0x7f81e27224b9 2533: biq::be() -> boolean
fifo write: @1699477105726112476 0x7f81e2724d27 71421: dig::a(akq, dhf) -> qw
fifo write: @1699477105726157507 0x7f81e273fa34 381: arw::c(float, float) -> float
fifo write: @1699477105726187347 0x7f81e9c7b7cc 3: dcv::r() -> boolean
fifo write: @1699477105726381590 0x7f81e9c7bb9f 2686: com.mojang.serialization.codecs.RecordCodecBuilder$2::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477105726412580 0x7f81e273ff94 93: cpr$e::hashCode() -> int
fifo write: @1699477105726442201 0x7f81e24a7c74 23: Math::ceil(double) -> double
fifo write: @1699477105730359381 0x7f81e9c7da45 1505: java.io.ByteArrayOutputStream::write(int) -> void
fifo write: @1699477105758409643 0x7f81e9c7e6d3 362: java.util.zip.Deflater::finished() -> boolean
fifo write: @1699477105762907631 0x7f81e9c7f0cd 10225: coz::computeNext() -> Object
fifo write: @1699477105764601673 0x7f81e9c85bcc 6: cpz::f() -> cpr
fifo write: @1699477105764795385 0x7f81e2740394 31: acy::a(double) -> long
fifo write: @1699477105764836936 0x7f81e9c85ecc 7: bjg::co() -> float
fifo write: @1699477105764966807 0x7f81e2740794 71: java.util.IdentityHashMap$KeyIterator::<init>(java.util.IdentityHashMap) -> void
fifo write: @1699477105765042748 0x7f81e2740bef 246: java.util.IdentityHashMap$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477105767401239 0x7f81e9c861d9 30: java.util.stream.MatchOps$BooleanTerminalSink::<init>(java.util.stream.MatchOps$MatchKind) -> void
fifo write: @1699477105767839094 0x7f81e9c864cc 3: dhf::i() -> boolean
fifo write: @1699477105767887385 0x7f81e9c867cc 2: cpx$1::I_() -> int
fifo write: @1699477105768206209 0x7f81e2741199 1882: java.util.stream.DoublePipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477105768331141 0x7f81e9c86dcc 6: dhf$a::a() -> eja
fifo write: @1699477105768378671 0x7f81e9c870cc 6: dhf$a::b() -> eja
fifo write: @1699477105768444692 0x7f81e2742014 47: eiu::b(long, java.util.function.Function) -> rq
fifo write: @1699477105769088720 0x7f81e2742bdf 26105: akp::a() -> void
fifo write: @1699477105769242042 0x7f81e9c873d9 54: dgm$$Lambda$481.0x00007f816028f470::apply(Object) -> Object
fifo write: @1699477105769510846 0x7f81e274da1a 5513: eiu::a(long, java.util.function.Function) -> rc
fifo write: @1699477105770492539 0x7f81e9c87750 147: dgm$$Lambda$479.0x00007f816028edd0::apply(Object) -> Object
fifo write: @1699477105771294729 0x7f81e9c87b52 101: java.util.concurrent.Semaphore$Sync::nonfairTryAcquireShared(int) -> int
fifo write: @1699477105773628899 0x7f81e9c87fb3 1134: ass::a() -> void
fifo write: @1699477105773687820 0x7f81e274fe14 388: ako$$Lambda$7334.0x00007f8160bd64e0::apply(Object) -> Object
fifo write: @1699477105773752381 0x7f81e2750314 389: ako$$Lambda$7333.0x00007f8160bd62b8::getAsBoolean() -> boolean
fifo write: @1699477105773984654 0x7f81e2750874 420: gu::a(ha$a, ha$a) -> gu
fifo write: @1699477105774021134 0x7f81e2750ef4 111: ajn::a() -> ajo
fifo write: @1699477105774067305 0x7f81e2751334 674: eig::a(ha$a, ehi, double) -> double
fifo write: @1699477105774597862 0x7f81e2751af4 231: arw::a(double, double) -> double
fifo write: @1699477105774749004 0x7f81e2752014 426: dha::a(biq) -> double
fifo write: @1699477105774848495 0x7f81e27526b7 1437: dha::a(biq, ehi) -> boolean
fifo write: @1699477105775025137 0x7f81e27536ea 9147: eig::a(gu, ehi, double) -> double
fifo write: @1699477105775214480 0x7f81e275799f 4919: ako::c(int, int, dhk, boolean) -> java.util.concurrent.CompletableFuture
fifo write: @1699477105775368712 0x7f81e9c88fb9 2794: eaa::d(long) -> dhl
fifo write: @1699477105775437962 0x7f81e2759fd4 1440: dha::b(double, double) -> double
fifo write: @1699477105775503123 0x7f81e275ad14 275: cpf$$Lambda$7341.0x00007f8160bd2648::<init>(cpf, biq, ehi) -> void
fifo write: @1699477105775637185 0x7f81e275b5bc 11408: bqc::a() -> void
fifo write: @1699477105775697736 0x7f81e275fb94 349: cpf$$Lambda$7341.0x00007f8160bd2648::iterator() -> java.util.Iterator
fifo write: @1699477105775769207 0x7f81e2760114 189: cph::c(biq, ehi) -> java.util.List
fifo write: @1699477105775832368 0x7f81e2760594 185: cpm$$Lambda$7337.0x00007f8160bd7610::<init>(biq) -> void
fifo write: @1699477105775905378 0x7f81e2760a9d 505: cpf::i(biq, ehi) -> java.util.Iterator
fifo write: @1699477105775958689 0x7f81e27610d4 793: biq::bh() -> dfj
fifo write: @1699477105776045480 0x7f81e2761857 1390: cpf::e(biq, ehi) -> Iterable
fifo write: @1699477105776105531 0x7f81e2762414 410: ajn::W() -> boolean
fifo write: @1699477105776169162 0x7f81e2762a65 664: java.io.BufferedOutputStream::flush() -> void
fifo write: @1699477105776263253 0x7f81e2763214 125: biq::ao() -> ehi
fifo write: @1699477105776315874 0x7f81e2763694 117: bir::a(ehn) -> ehi
fifo write: @1699477105776404895 0x7f81e2763b97 1552: bjg::b(bkh) -> double
fifo write: @1699477105776479886 0x7f81e2764914 361: akq$$Lambda$7306.0x00007f8160bc4da0::accept(Object) -> void
fifo write: @1699477105776549057 0x7f81e2764e94 291: biq::e(double, double, double) -> void
fifo write: @1699477105776616008 0x7f81e276545a 855: biq::k(int) -> void
fifo write: @1699477105776856941 0x7f81e2765d14 185: akq$$Lambda$7330.0x00007f8160bd5a18::<init>(akq) -> void
fifo write: @1699477105776891151 0x7f81e2766194 316: ajn::X() -> boolean
fifo write: @1699477105776942092 0x7f81e276677c 918: cpv::a(java.util.function.Consumer, biq) -> void
fifo write: @1699477105776990442 0x7f81e2767174 2011: akq::i(biq) -> boolean
fifo write: @1699477105777028323 0x7f81e27680b7 283: bir::a(double, double, double) -> ehi
fifo write: @1699477105777063013 0x7f81e2768634 539: biq::aT() -> boolean
fifo write: @1699477105777227866 0x7f81e9c8adf5 2685: aqv::f(int) -> void
fifo write: @1699477105777451848 0x7f81e2768f8f 6794: cpm::c(biq, ehi) -> java.util.List
fifo write: @1699477105777484649 0x7f81e276bb34 175: dkh::i() -> float
fifo write: @1699477105777618411 0x7f81e276c14c 5442: akq::a(bdp, biq) -> void
fifo write: @1699477105777690841 0x7f81e8b9f2a0 27: vtable stub
fifo write: @1699477105777797993 0x7f81e276e6fe 1397: eid::a(ha$a, ehi, Iterable, double) -> double
fifo write: @1699477105778887517 0x7f81e9c8c47e 677: java.util.Spliterators$IteratorSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477105781308978 0x7f81e9c8cef7 1734: cpv::a_(gw) -> dfj
fifo write: @1699477105785566393 0x7f81e276f294 137: sun.nio.fs.UnixFileAttributes::<init>() -> void
fifo write: @1699477105785720755 0x7f81e276f6fd 409: sun.nio.fs.UnixFileAttributes::get(sun.nio.fs.UnixPath, boolean) -> sun.nio.fs.UnixFileAttributes
fifo write: @1699477105795571052 0x7f81e276fd17 1115: Math::multiplyExact(long, long) -> long
fifo write: @1699477105805337578 0x7f81e9c8eb33 15483: dhy$$Lambda$7048.0x00007f8160b83218::apply(Object) -> Object
fifo write: @1699477105815277616 0x7f81e9c98c0b 54: hw::r() -> cpc
fifo write: @1699477105819639812 0x7f81e2770932 7101: dig::a(it.unimi.dsi.fastutil.shorts.ShortList[]) -> rc
fifo write: @1699477105820441353 0x7f81e8b9f2d0 27: vtable stub
fifo write: @1699477105821030380 0x7f81e27735b4 1371: biq::x() -> boolean
fifo write: @1699477105821379735 0x7f81e2774097 1927: bjg::a(bkh) -> bki
fifo write: @1699477105821698249 0x7f81e9c9904c 9: bjg::eg() -> bjg
fifo write: @1699477105821822890 0x7f81e25d7ef4 68: biq::df() -> float
fifo write: @1699477105822104594 0x7f81e2774e94 487: bki::a(java.util.UUID) -> bkk
fifo write: @1699477105822459279 0x7f81e2775494 234: dhq$$Lambda$7368.0x00007f8160bde858::<init>(dhq, akq, int) -> void
fifo write: @1699477105822771603 0x7f81e2775a37 2720: dhq::a(int) -> djw
fifo write: @1699477105822845284 0x7f81e2776bf4 2: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::balance() -> int
fifo write: @1699477105822921045 0x7f81e27770e6 4082: djs::a(djt, ehn, djt$a, djw$a) -> boolean
fifo write: @1699477105823291199 0x7f81e2779074 6: biq::n() -> void
fifo write: @1699477105823864017 0x7f81e27796bf 8919: ako::a(int, int) -> dhq
fifo write: @1699477105824442774 0x7f81e277d5b7 2470: biq::a(ehn, ehi, java.util.List) -> ehn
fifo write: @1699477105824521765 0x7f81e277ea94 175: biq::a(boolean, ehn) -> void
fifo write: @1699477105824888350 0x7f81e277f077 4284: biq::a(biq, ehn, ehi, cpv, java.util.List) -> ehn
fifo write: @1699477105824997231 0x7f81e278105f 5469: biq::aO() -> void
fifo write: @1699477105825049292 0x7f81e27835f4 152: biq$b::a() -> boolean
fifo write: @1699477105825179604 0x7f81e2783c87 6310: biq::h(ehn) -> ehn
fifo write: @1699477105825348056 0x7f81e2786a19 1248: cpy::a(gw, gw) -> boolean
fifo write: @1699477105825501868 0x7f81e27874df 2158: biq::b(boolean, ehn) -> void
fifo write: @1699477105825560679 0x7f81e27887d9 895: biq::aB() -> void
fifo write: @1699477105825868923 0x7f81e27891d4 4249: biq::aJ() -> float
fifo write: @1699477105828394315 0x7f81e278b3e7 33905: biq::a(bjm, ehn) -> void
fifo write: @1699477105828565717 0x7f81e27980b4 2618: java.io.FilterOutputStream::close() -> void
fifo write: @1699477105830235539 0x7f81e2799497 237: re::a(java.io.DataOutput) -> void
fifo write: @1699477105836851614 0x7f81e2799959 1279: java.util.zip.DeflaterOutputStream::flush() -> void
fifo write: @1699477105837577314 0x7f81e279a57c 39: sun.nio.ch.IOUtil::write(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477105837793837 0x7f81e279aa37 1868: sun.nio.ch.IOUtil::write(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477105838069080 0x7f81e279bc1c 3522: sun.nio.ch.IOUtil::writeFromNativeBuffer(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477105838442435 0x7f81e9c9934c 2: din::a() -> int
fifo write: @1699477105840296439 0x7f81e279d814 578: jdk.internal.misc.ScopedMemoryAccess::putIntInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, int) -> void
fifo write: @1699477105840381060 0x7f81e279df57 1145: jdk.internal.misc.ScopedMemoryAccess::putInt(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, int) -> void
fifo write: @1699477105840426211 0x7f81e279e994 39: sun.nio.ch.FileDispatcherImpl::pwrite(java.io.FileDescriptor, long, int, long) -> int
fifo write: @1699477105840483411 0x7f81e279ee26 1644: sun.nio.ch.FileChannelImpl::write(java.nio.ByteBuffer, long) -> int
fifo write: @1699477105840554752 0x7f81e279fdc6 2461: java.nio.DirectIntBufferS::put(int, int) -> java.nio.IntBuffer
fifo write: @1699477105840671844 0x7f81e27a1206 2415: sun.nio.ch.FileChannelImpl::writeInternal(java.nio.ByteBuffer, long) -> int
fifo write: @1699477105849340095 0x7f81e9c99c9f 15419: dhy::a(hj, dhy$d) -> dhz$a
fifo write: @1699477105863819062 0x7f81e27a2934 841: cpr$e::equals(Object) -> boolean
fifo write: @1699477105863897283 0x7f81e27a3114 260: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$FastEntryIterator::next() -> it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry
fifo write: @1699477105863951404 0x7f81e27a3614 357: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477105864010294 0x7f81e27a3b94 247: asm$a::<init>(asm) -> void
fifo write: @1699477105864068105 0x7f81e27a4067 354: asm::iterator() -> java.util.Iterator
fifo write: @1699477105864121076 0x7f81e27a4594 55: asz::a(int) -> int
fifo write: @1699477105864180226 0x7f81e27a4994 238: cqf$$Lambda$7313.0x00007f8160bcca68::get(long) -> Object
fifo write: @1699477105864224127 0x7f81e27a4ef4 110: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::addToValue(int, int) -> int
fifo write: @1699477105864265248 0x7f81e27a5314 93: cqf::a(cpc, long) -> java.util.List
fifo write: @1699477105864303628 0x7f81e27a5714 403: asm$a::next() -> Object
fifo write: @1699477105864335258 0x7f81e27a5d94 267: aku::b(long) -> boolean
fifo write: @1699477105864650173 0x7f81e27a63c7 3547: aka::d(cpc) -> java.util.List
fifo write: @1699477105865930789 0x7f81e9ca37ea 299: com.mojang.serialization.MapEncoder$Implementation::<init>() -> void
fifo write: @1699477105867883584 0x7f81e9ca3cec 77: com.mojang.serialization.Codec::of(com.mojang.serialization.Encoder, com.mojang.serialization.Decoder, String) -> com.mojang.serialization.Codec
fifo write: @1699477105868848897 0x7f81e9ca40d9 86: dga::a(Comparable) -> String
fifo write: @1699477105872675866 0x7f81e9ca44a4 1485: hq::c(he) -> com.mojang.serialization.DataResult
fifo write: @1699477105872735947 0x7f81e8b9f300 27: vtable stub
fifo write: @1699477105872750447 0x7f81e8b9f330 27: vtable stub
fifo write: @1699477105872763937 0x7f81e8b9f360 27: vtable stub
fifo write: @1699477105872778077 0x7f81e8b9f390 27: vtable stub
fifo write: @1699477105872791198 0x7f81e8b9f3c0 27: vtable stub
fifo write: @1699477105873470266 0x7f81e27a81f4 739: bpd::a(float, float, float) -> float
fifo write: @1699477105873541897 0x7f81e27a8994 687: biq::dm() -> dfj
fifo write: @1699477105873593418 0x7f81e27a90f4 91: eck::s() -> bgv
fifo write: @1699477105873709609 0x7f81e27a94f4 483: biv::values() -> biv[]
fifo write: @1699477105874192626 0x7f81e8b9f3f0 27: vtable stub
fifo write: @1699477105874255627 0x7f81e9ca55b1 29: ehn::g() -> double
fifo write: @1699477105874449849 0x7f81e27a9e14 453: cpw::ai() -> bgv
fifo write: @1699477105874655352 0x7f81e27aa53c 5509: bjg::c_() -> boolean
fifo write: @1699477105874726353 0x7f81e27ac73b 601: cpm::a(biq, double) -> cbu
fifo write: @1699477105874805164 0x7f81e27ace94 368: cpm::a(double, double, double, double, boolean) -> cbu
fifo write: @1699477105874878015 0x7f81e27ad439 768: bji::l() -> void
fifo write: @1699477105875036967 0x7f81e27adcda 2279: cpm::a(double, double, double, double, java.util.function.Predicate) -> cbu
fifo write: @1699477105875188629 0x7f81e27aefb9 5742: bji::dx() -> void
fifo write: @1699477105875474862 0x7f81e8b9f420 27: vtable stub
fifo write: @1699477105875573974 0x7f81e27b151f 4327: bji::aq() -> void
fifo write: @1699477105875595674 0x7f81e8b9f450 27: vtable stub
fifo write: @1699477105875680575 0x7f81e27b3277 3511: bjg::dR() -> boolean
fifo write: @1699477105876036160 0x7f81e27b4a94 1986: bjg::dT() -> boolean
fifo write: @1699477105876114271 0x7f81e27b59b7 2440: bjg::aJ() -> float
fifo write: @1699477105876220292 0x7f81e27b6ad4 501: csv::a(cpb, biq) -> void
fifo write: @1699477105876394344 0x7f81e27b72df 5236: bpd::a() -> void
fifo write: @1699477105877044213 0x7f81e27b99c9 4785: biq::a(double, boolean, dfj, gw) -> void
fifo write: @1699477105878390210 0x7f81e27bc11f 19393: bjg::l() -> void
fifo write: @1699477105880342785 0x7f81e27c461f 38787: bjg::aq() -> void
fifo write: @1699477105884709011 0x7f81e9ca593b 340: sun.nio.ch.NativeThreadSet::remove(int) -> void
fifo write: @1699477105913757996 0x7f81e27d2c14 240: cpv::V() -> long
fifo write: @1699477105914320273 0x7f81e8b9f480 27: vtable stub
fifo write: @1699477105914333733 0x7f81e8b9f4b0 27: vtable stub
fifo write: @1699477105916135766 0x7f81e27d3094 121: dgf::c() -> String
fifo write: @1699477105920910608 0x7f81e9ca5ecc 5: bjg::ek() -> int
fifo write: @1699477105921202642 0x7f81e8b9f4e0 27: vtable stub
fifo write: @1699477105921438815 0x7f81e9ca61a9 21: arw::c(double) -> int
fifo write: @1699477105921468665 0x7f81e8b9f510 27: vtable stub
fifo write: @1699477105921481785 0x7f81e8b9f540 27: vtable stub
fifo write: @1699477105921494685 0x7f81e8b9f570 27: vtable stub
fifo write: @1699477105921547036 0x7f81e8b9f5a0 27: vtable stub
fifo write: @1699477105922028942 0x7f81e27d34b4 71: ehn::a(double, double, double) -> ehn
fifo write: @1699477105922379537 0x7f81e27d3c14 385: bur::X() -> void
fifo write: @1699477105923555402 0x7f81e27d439f 7965: bsp::c() -> void
fifo write: @1699477105924072388 0x7f81e27d7b56 9301: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477105924410632 0x7f81e27db97f 15303: bpe::a() -> void
fifo write: @1699477105924443063 0x7f81e9ca64cc 6: dcv::u() -> dcx
fifo write: @1699477105924743727 0x7f81e9ca67a9 30: cpc::a(gw) -> long
fifo write: @1699477105951861117 0x7f81e9ca6e7c 1723: sun.nio.ch.NativeThreadSet::add() -> int
fifo write: @1699477105963293534 0x7f81e27e1a94 47: sun.nio.fs.UnixPath::resolve(java.nio.file.Path) -> java.nio.file.Path
fifo write: @1699477105965042226 0x7f81e9ca7d50 127: java.util.Random::next(int) -> int
fifo write: @1699477105966126200 0x7f81e27e1eb4 770: java.nio.file.Path::resolve(String) -> java.nio.file.Path
fifo write: @1699477105969277081 0x7f81e27e2987 11290: aka::a(dhf) -> boolean
fifo write: @1699477105971431979 0x7f81e27e7494 167: gw::d() -> gw
fifo write: @1699477105971685882 0x7f81e27e7914 361: akq$$Lambda$7330.0x00007f8160bd5a18::accept(Object) -> void
fifo write: @1699477105971769843 0x7f81e27e7e94 185: akq$$Lambda$7331.0x00007f8160bd5c50::<init>(biq) -> void
fifo write: @1699477105971816284 0x7f81e27e8314 434: biq::J() -> void
fifo write: @1699477105971864104 0x7f81e27e8874 93: biq::au() -> boolean
fifo write: @1699477105972490572 0x7f81e27e8d1c 2712: biq::bj() -> boolean
fifo write: @1699477105972851107 0x7f81e27ea034 845: biq::bY() -> boolean
fifo write: @1699477105972970709 0x7f81e27eaa84 5454: akq::a(biq) -> void
fifo write: @1699477105973046380 0x7f81e27ecd17 164: biq::h(boolean) -> void
fifo write: @1699477105973083590 0x7f81e8b9f5d0 27: vtable stub
fifo write: @1699477105973188461 0x7f81e27ed2bc 6965: biq::bH() -> void
fifo write: @1699477105973392334 0x7f81e27efd14 319: biq::a_(boolean) -> void
fifo write: @1699477105973430874 0x7f81e27f02d4 1555: biq::ar() -> void
fifo write: @1699477105973467155 0x7f81e27f0f54 1367: boz::e() -> boolean
fifo write: @1699477105973520136 0x7f81e9ca844c 3: cpr$a::a() -> boolean
fifo write: @1699477105973652037 0x7f81e27f1a37 875: ehw::a(gu, int, int, int) -> boolean
fifo write: @1699477105973959861 0x7f81e27f247f 11885: biq::z() -> void
fifo write: @1699477105974018512 0x7f81e27f6c53 1762: cpm::a(java.util.List, bts, bjg, double, double, double) -> bjg
fifo write: @1699477105974064973 0x7f81e27f7abd 956: cpm::a(bts, bjg) -> cbu
fifo write: @1699477105974161444 0x7f81e27f8414 101: ehn::e(ehn) -> ehn
fifo write: @1699477105974500528 0x7f81e27f8a9f 13398: biq::bd() -> void
fifo write: @1699477105974529139 0x7f81e9ca8d4c 3: dfi$a::e() -> boolean
fifo write: @1699477105975445510 0x7f81e27fd9f4 3881: dfi::a(dfj, cpb, gw, ebc) -> boolean
fifo write: @1699477105975478651 0x7f81e27ff394 648: brj::a() -> boolean
fifo write: @1699477105975651783 0x7f81e27ffb14 472: dio::a() -> boolean
fifo write: @1699477106014896269 0x7f81e9ca9059 102: ako$$Lambda$7305.0x00007f8160bc5460::accept(Object) -> void
fifo write: @1699477106015178723 0x7f81e9ca9509 382: ako$a::<init>(dhq, ajy) -> void
fifo write: @1699477106015289904 0x7f81e9ca9a5a 317: java.util.Random::nextInt(int) -> int
fifo write: @1699477106016675292 0x7f81e9caa0e0 1019: java.util.Collections::swap(java.util.List, int, int) -> void
fifo write: @1699477106016749993 0x7f81e9caacf3 644: akq::a(cpc) -> boolean
fifo write: @1699477106019681461 0x7f81e2800114 529: did::a() -> boolean
fifo write: @1699477106021517904 0x7f81e2800cc1 2654: dig::a(akq, qw, dhf$a) -> void
fifo write: @1699477106022233844 0x7f81e280205c 2948: java.util.zip.DeflaterOutputStream::finish() -> void
fifo write: @1699477106022525758 0x7f81e9cab74c 6: buw::t() -> boolean
fifo write: @1699477106023286017 0x7f81e2803994 388: gu$3::a(ha$a) -> ha$a
fifo write: @1699477106023725473 0x7f81e2803f94 185: cpb$$Lambda$7345.0x00007f8160bd3820::<init>(cpb) -> void
fifo write: @1699477106023757643 0x7f81e9caba50 95: eic::getDouble(int) -> double
fifo write: @1699477106023964496 0x7f81e280447c 1498: cpb::a(ehi) -> java.util.stream.Stream
fifo write: @1699477106024051677 0x7f81e28051a7 2674: cpy::c(ehi) -> java.util.stream.Stream
fifo write: @1699477106064431058 0x7f81e2806614 101: ehn::d(ehn) -> ehn
fifo write: @1699477106064961575 0x7f81e9cac0d4 199: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::containsKey(long) -> boolean
fifo write: @1699477106067198053 0x7f81e28071c6 25308: dig::a(dvy, cpc, java.util.Map, java.util.Map) -> qw
fifo write: @1699477106067779011 0x7f81e9cac5b8 187: rl::a(short) -> rl
fifo write: @1699477106068926926 0x7f81e2810394 185: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$6$$Lambda$5295.0x00007f81609c05a0::<init>(Object) -> void
fifo write: @1699477106069023317 0x7f81e2810817 122: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$$Lambda$220.0x00007f8160196dc0::apply(Object) -> Object
fifo write: @1699477106069264670 0x7f81e2810d66 2847: com.mojang.serialization.codecs.RecordCodecBuilder$Instance::lambda$ap3$6(com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, Object) -> com.mojang.serialization.MapEncoder
fifo write: @1699477106069390532 0x7f81e9cacab1 2353: qu::a(java.io.DataOutput) -> void
fifo write: @1699477106069560604 0x7f81e28122a7 2145: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$6::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477106069828067 0x7f81e28132fa 1813: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$6::<init>(com.mojang.serialization.codecs.RecordCodecBuilder$Instance, com.mojang.serialization.MapEncoder, Object, com.mojang.serialization.MapEncoder, Object, com.mojang.serialization.MapEncoder, Object, com.mojang.serialization.MapEncoder) -> void
fifo write: @1699477106069917829 0x7f81e28140b4 615: dlv$$Lambda$7067.0x00007f8160b8b9e8::apply(Object) -> Object
fifo write: @1699477106069997200 0x7f81e28147b4 615: dlv$$Lambda$7068.0x00007f8160b8bc28::apply(Object) -> Object
fifo write: @1699477106070057880 0x7f81e2814e94 900: dlv::d(dlv) -> Integer
fifo write: @1699477106070126891 0x7f81e2815717 406: java.util.stream.DoubleStream::of(double[]) -> java.util.stream.DoubleStream
fifo write: @1699477106070208592 0x7f81e2815d14 900: dlv::c(dlv) -> Integer
fifo write: @1699477106070289523 0x7f81e2816594 317: java.util.Arrays::stream(double[]) -> java.util.stream.DoubleStream
fifo write: @1699477106070364444 0x7f81e2816af6 29: java.util.Arrays::spliterator(double[], int, int) -> java.util.Spliterator$OfDouble
fifo write: @1699477106070435555 0x7f81e2816e76 205: java.util.Arrays::stream(double[], int, int) -> java.util.stream.DoubleStream
fifo write: @1699477106070477166 0x7f81e2817314 207: java.util.Spliterators$DoubleArraySpliterator::<init>(double[], int, int, int) -> void
fifo write: @1699477106070537107 0x7f81e2817801 371: java.util.stream.StreamSupport::doubleStream(java.util.Spliterator$OfDouble, boolean) -> java.util.stream.DoubleStream
fifo write: @1699477106070614718 0x7f81e2817e7c 2990: dlv$$Lambda$7069.0x00007f8160b8be68::apply(Object) -> Object
fifo write: @1699477106070677138 0x7f81e28194d7 2649: dlv::b(dlv) -> java.util.Optional
fifo write: @1699477106070729659 0x7f81e281a8a9 880: java.util.Spliterators::spliterator(double[], int, int, int) -> java.util.Spliterator$OfDouble
fifo write: @1699477106070766709 0x7f81e281b1e7 445: dhq::q() -> dhf$a
fifo write: @1699477106070806050 0x7f81e281b814 324: dhf$a::<init>(eja, eja) -> void
fifo write: @1699477106070849711 0x7f81e281bdd4 963: dhf::h() -> java.util.Map
fifo write: @1699477106070904241 0x7f81e281c6b9 333: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::put(long, long) -> long
fifo write: @1699477106070950062 0x7f81e281cd54 885: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::find(long) -> int
fifo write: @1699477106070993082 0x7f81e281d734 379: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::insert(int, long, long) -> void
fifo write: @1699477106071995805 0x7f81e281de34 1466: biq::w() -> boolean
fifo write: @1699477106072119517 0x7f81e281e9f4 51: ehn::h() -> double
fifo write: @1699477106072716025 0x7f81e281ef05 2723: cpf::g(biq, ehi) -> java.util.Optional
fifo write: @1699477106072998148 0x7f81e282065c 12762: biq::aq() -> void
fifo write: @1699477106073070249 0x7f81e2825394 185: dij$$Lambda$7328.0x00007f8160bd53a8::<init>(qw) -> void
fifo write: @1699477106073121030 0x7f81e2825814 39: cpc::hashCode() -> int
fifo write: @1699477106073174241 0x7f81e8b9f600 27: vtable stub
fifo write: @1699477106073214751 0x7f81e2825f9a 511: dij$a::<init>(qw) -> void
fifo write: @1699477106073303942 0x7f81e28266bf 2361: dij::b(cpc, qw) -> com.mojang.datafixers.util.Either
fifo write: @1699477106073368463 0x7f81e28277b7 1052: dij$$Lambda$7328.0x00007f8160bd53a8::apply(Object) -> Object
fifo write: @1699477106073422244 0x7f81e282816a 621: dij::a(qw, cpc) -> dij$a
fifo write: @1699477106073489085 0x7f81e2828937 2487: dij$$Lambda$7327.0x00007f8160bd4f70::get() -> Object
fifo write: @1699477106073555275 0x7f81e2829b92 725: biq::bp() -> ehn
fifo write: @1699477106073635877 0x7f81e282a394 230: biq$$Lambda$7336.0x00007f8160bd6960::<init>(biq, ehi) -> void
fifo write: @1699477106073706167 0x7f81e282a8fa 210: ehi::a(ehn, double, double, double) -> ehi
fifo write: @1699477106073764058 0x7f81e282ae34 633: bjg::fm() -> boolean
fifo write: @1699477106074009331 0x7f81e282b637 1046: biq::bZ() -> boolean
fifo write: @1699477106074341816 0x7f81e282c05f 3384: bjg::bZ() -> boolean
fifo write: @1699477106074555758 0x7f81e282d8fc 4645: bjg::G() -> void
fifo write: @1699477106074624369 0x7f81e282fa1f 2567: bur::b_() -> void
fifo write: @1699477106074765951 0x7f81e2830e3f 3988: bil::b_() -> void
fifo write: @1699477106074877423 0x7f81e2832997 459: biq::f(double, double, double) -> void
fifo write: @1699477106075665593 0x7f81e283325c 5958: bjg::E() -> java.util.Map
fifo write: @1699477106075848195 0x7f81e2835e7f 11978: bji::b_() -> void
fifo write: @1699477106076076538 0x7f81e283a8ff 5714: bjg::F() -> void
fifo write: @1699477106076137529 0x7f81e283d074 1408: bjg::A(float) -> float
fifo write: @1699477106076254580 0x7f81e283db34 672: biq::a(float, ehn) -> void
fifo write: @1699477106076614635 0x7f81e283e41f 6041: bjg::a(ehn, float) -> ehn
fifo write: @1699477106076703566 0x7f81e28409a0 1196: biq::a(ehn, float, float) -> ehn
fifo write: @1699477106076757737 0x7f81e28415f4 45: arw::g(double, double, double) -> double
fifo write: @1699477106076943239 0x7f81e2841db4 686: bjg::q(boolean) -> void
fifo write: @1699477106076997810 0x7f81e2842574 40: bkf::a(float, float) -> void
fifo write: @1699477106077046121 0x7f81e28429d4 176: bjg::v(float) -> void
fifo write: @1699477106077186342 0x7f81e2842fe4 4393: bjg::j(ehn) -> ehn
fifo write: @1699477106077687449 0x7f81e2844df7 3524: bjg::dW() -> void
fifo write: @1699477106077985783 0x7f81e28465b4 1100: bjg::eX() -> boolean
fifo write: @1699477106078463339 0x7f81e28471bc 8149: bjg::fh() -> void
fifo write: @1699477106078591891 0x7f81e284a4bf 5785: bjg::dX() -> void
fifo write: @1699477106078649821 0x7f81e284ca14 437: btk::a() -> void
fifo write: @1699477106078704022 0x7f81e284d014 257: bpc::b() -> void
fifo write: @1699477106078798763 0x7f81e284d514 310: bji::W() -> void
fifo write: @1699477106079219349 0x7f81e284dad7 4168: bpd::b() -> void
fifo write: @1699477106079464012 0x7f81e284fb79 23888: bji::fg() -> void
fifo write: @1699477106080664987 0x7f81e2858bff 40495: bjg::b_() -> void
fifo write: @1699477106081278425 0x7f81e286859f 39852: bjg::h(ehn) -> void
fifo write: @1699477106097380782 0x7f81e2877a14 144: java.time.Instant::<init>(long, int) -> void
fifo write: @1699477106100233209 0x7f81e2877e14 167: java.time.Instant::ofEpochSecond(long, long) -> java.time.Instant
fifo write: @1699477106100278420 0x7f81e287839a 813: java.time.Instant::create(long, int) -> java.time.Instant
fifo write: @1699477106115391515 0x7f81e9cae1d1 170: ajy::a(dhq) -> void
fifo write: @1699477106115463126 0x7f81e9cae6be 384: com.google.common.collect.RegularImmutableMap::get(Object, com.google.common.collect.ImmutableMapEntry[], int) -> Object
fifo write: @1699477106116500029 0x7f81e9caedd6 505: aka::c(cpc) -> boolean
fifo write: @1699477106121854408 0x7f81e2878c77 2203: biq::bw() -> boolean
fifo write: @1699477106122093601 0x7f81e8b9f630 27: vtable stub
fifo write: @1699477106122106831 0x7f81e8b9f660 27: vtable stub
fifo write: @1699477106122172512 0x7f81e8b9f690 27: vtable stub
fifo write: @1699477106122216183 0x7f81e8b9f6c0 27: vtable stub
fifo write: @1699477106122228963 0x7f81e8bfd010 27: vtable stub
fifo write: @1699477106122241603 0x7f81e8bfd040 27: vtable stub
fifo write: @1699477106122254143 0x7f81e8bfd070 27: vtable stub
fifo write: @1699477106122266963 0x7f81e8bfd0a0 27: vtable stub
fifo write: @1699477106122323744 0x7f81e8bfd0d0 27: vtable stub
fifo write: @1699477106122336534 0x7f81e8bfd100 27: vtable stub
fifo write: @1699477106122349174 0x7f81e8bfd130 27: vtable stub
fifo write: @1699477106122361714 0x7f81e8bfd160 27: vtable stub
fifo write: @1699477106122626988 0x7f81e2879e65 1760: java.time.Clock::currentInstant() -> java.time.Instant
fifo write: @1699477106122641128 0x7f81e8bfd190 27: vtable stub
fifo write: @1699477106123239616 0x7f81e287af59 1309: bjg::w() -> void
fifo write: @1699477106123384837 0x7f81e287bab4 503: sun.nio.fs.UnixNativeDispatcher::lstat(sun.nio.fs.UnixPath, sun.nio.fs.UnixFileAttributes) -> void
fifo write: @1699477106123586020 0x7f81e8bfd1c0 27: vtable stub
fifo write: @1699477106124239568 0x7f81e287c4ff 9534: bjg::em() -> void
fifo write: @1699477106124466191 0x7f81e28805cc 676: java.lang.invoke.LambdaForm$MH.0x00007f8160bdd000::linkToTargetMethod(Object, int, int, int, Object, Object) -> Object
fifo write: @1699477106124589863 0x7f81e2880cbd 829: dfi$a::a(cpb, gw, ebc) -> boolean
fifo write: @1699477106124673764 0x7f81e2881583 1565: java.lang.invoke.LambdaForm$DMH.0x00007f8160690800::newInvokeSpecial(Object, Object, int, int, int, Object) -> Object
fifo write: @1699477106124741265 0x7f81e28821bf 3076: ebg::a(cpb, gw) -> double
fifo write: @1699477106124788825 0x7f81e2883714 241: ebg$$Lambda$7361.0x00007f8160bda8d8::<init>(ebg, int, int, int, bji) -> void
fifo write: @1699477106124845456 0x7f81e2883ca7 1995: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477106124912207 0x7f81e2884a94 342: ebb::c() -> boolean
fifo write: @1699477106125065379 0x7f81e8bfd1f0 27: vtable stub
fifo write: @1699477106125078529 0x7f81e8bfd220 27: vtable stub
fifo write: @1699477106125325322 0x7f81e2885034 642: bus::u(int) -> boolean
fifo write: @1699477106125450934 0x7f81e28859bf 6977: ebg::d(gw) -> double
fifo write: @1699477106125816969 0x7f81e9cb03cc 3: bus$k::l() -> boolean
fifo write: @1699477106129188592 0x7f81e9cb071c 1184: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2ObjectFunction) -> Object
fifo write: @1699477106131894087 0x7f81e2888934 780: sun.nio.fs.UnixException::<init>(int) -> void
fifo write: @1699477106147486448 0x7f81e28890dd 1235: java.io.BufferedOutputStream::<init>(java.io.OutputStream, int) -> void
fifo write: @1699477106153054340 0x7f81e2889abd 1032: java.io.BufferedOutputStream::<init>(java.io.OutputStream) -> void
fifo write: @1699477106163728727 0x7f81e288a3f4 91: eck::q() -> cpr
fifo write: @1699477106165243657 0x7f81e288a7f4 31: Math::multiplyExact(long, int) -> long
fifo write: @1699477106165524890 0x7f81e9cb16b9 228: java.util.concurrent.CompletableFuture::reportJoin(Object) -> Object
fifo write: @1699477106166348291 0x7f81e288abb4 1061: java.util.LinkedHashMap::afterNodeRemoval(java.util.HashMap$Node) -> void
fifo write: @1699477106170238531 0x7f81e288b514 382: java.nio.Buffer::checkIndex(int, int) -> int
fifo write: @1699477106170430204 0x7f81e9cb1bfd 182: ri$c::a(rq) -> ri$f
fifo write: @1699477106172198667 0x7f81e288ba94 90: arw::g(double) -> double
fifo write: @1699477106172685813 0x7f81e9cb24d0 59: java.util.HashSet::contains(Object) -> boolean
fifo write: @1699477106173032477 0x7f81e288bf37 1446: arw::d(double, double) -> double
fifo write: @1699477106173258760 0x7f81e9cb284c 9: bji::q() -> bjg
fifo write: @1699477106173598305 0x7f81e288cc94 109: bqc::b(bqb$a) -> void
fifo write: @1699477106173651465 0x7f81e288d154 593: bqc::a(bqb$a, boolean) -> void
fifo write: @1699477106176656604 0x7f81e288dc59 664: java.time.Instant::toEpochMilli() -> long
fifo write: @1699477106177555496 0x7f81e288e494 175: sun.nio.fs.AbstractFileSystemProvider::deleteIfExists(java.nio.file.Path) -> boolean
fifo write: @1699477106177628997 0x7f81e288e914 702: java.nio.file.Files::deleteIfExists(java.nio.file.Path) -> boolean
fifo write: @1699477106177820459 0x7f81e288f034 439: java.util.zip.Deflater$DeflaterZStreamRef::<init>(java.util.zip.Deflater, long) -> void
fifo write: @1699477106177861240 0x7f81e288f6dd 907: java.util.zip.Deflater::<init>(int, boolean) -> void
fifo write: @1699477106177988511 0x7f81e289007d 1657: java.util.zip.DeflaterOutputStream::<init>(java.io.OutputStream, java.util.zip.Deflater, int, boolean) -> void
fifo write: @1699477106178074922 0x7f81e2890e17 2042: sun.nio.fs.UnixPath::checkDelete() -> void
fifo write: @1699477106178128903 0x7f81e2891df4 23: rh::a(qw, java.io.DataOutput) -> void
fifo write: @1699477106178181084 0x7f81e28921be 1067: rh::b(rq, java.io.DataOutput) -> void
fifo write: @1699477106178240235 0x7f81e2892b3a 973: java.io.DataOutputStream::<init>(java.io.OutputStream) -> void
fifo write: @1699477106178478328 0x7f81e2893677 6489: sun.nio.fs.UnixFileSystemProvider::implDelete(java.nio.file.Path, boolean) -> boolean
fifo write: @1699477106178510898 0x7f81e2896814 240: java.io.DataOutputStream::flush() -> void
fifo write: @1699477106178545279 0x7f81e2896cc5 150: java.util.zip.Deflater$DeflaterZStreamRef::run() -> void
fifo write: @1699477106178869003 0x7f81e28972fc 3325: java.util.zip.DeflaterOutputStream::close() -> void
fifo write: @1699477106179299458 0x7f81e2898cf4 209: ac::d() -> long
fifo write: @1699477106180496144 0x7f81e28991d4 738: java.util.LinkedHashMap$LinkedHashIterator::remove() -> void
fifo write: @1699477106180596145 0x7f81e2899bd5 1852: dil::c(cpc) -> java.io.DataOutputStream
fifo write: @1699477106180676206 0x7f81e289aa14 488: din::a(java.io.OutputStream) -> java.io.OutputStream
fifo write: @1699477106180748607 0x7f81e289b019 1096: dim::a(cpc, qw) -> void
fifo write: @1699477106180817948 0x7f81e289bb94 332: din$$Lambda$5479.0x00007f8160a7fcf8::wrap(Object) -> Object
fifo write: @1699477106180935179 0x7f81e289c159 2231: dil$a::<init>(dil, cpc) -> void
fifo write: @1699477106180982120 0x7f81e289d894 56: java.util.zip.DeflaterOutputStream::<init>(java.io.OutputStream) -> void
fifo write: @1699477106181039071 0x7f81e289dd0e 1431: din::c(java.io.OutputStream) -> java.io.OutputStream
fifo write: @1699477106181084551 0x7f81e289e93c 472: java.util.zip.DeflaterOutputStream::<init>(java.io.OutputStream, boolean) -> void
fifo write: @1699477106181124152 0x7f81e289ef94 39: java.util.zip.Deflater::<init>() -> void
fifo write: @1699477106181420316 0x7f81e289f4ff 3533: dij::a(cpc, dij$a) -> void
fifo write: @1699477106181500717 0x7f81e28a1239 384: dil$a::close() -> void
fifo write: @1699477106181578568 0x7f81e28a18b9 738: jdk.internal.misc.ScopedMemoryAccess::putIntUnalignedInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, int, boolean) -> void
fifo write: @1699477106181637438 0x7f81e28a20dd 615: dik::a(int) -> int
fifo write: @1699477106181742940 0x7f81e28a295f 1321: jdk.internal.misc.ScopedMemoryAccess::putIntUnaligned(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, int, boolean) -> void
fifo write: @1699477106181786330 0x7f81e28a3454 95: dil::c(int) -> int
fifo write: @1699477106181849971 0x7f81e28a3814 230: dil$$Lambda$7329.0x00007f8160bd57f0::<init>(dil, cpc) -> void
fifo write: @1699477106182026203 0x7f81e28a3dc6 2582: java.nio.HeapByteBuffer::putInt(int, int) -> java.nio.ByteBuffer
fifo write: @1699477106184187021 0x7f81e28a5883 19062: dil::a(cpc, java.nio.ByteBuffer) -> void
fifo write: @1699477106214757145 0x7f81e28ad574 162: biq::dk() -> ehn
fifo write: @1699477106216665910 0x7f81e9cb32cf 558: java.util.HashMap::clear() -> void
fifo write: @1699477106221191698 0x7f81e9cb3990 395: java.util.Spliterators$DoubleArraySpliterator::tryAdvance(java.util.function.DoubleConsumer) -> boolean
fifo write: @1699477106222292072 0x7f81e28ad9ea 362: eaz::a() -> gw
fifo write: @1699477106223095203 0x7f81e28adf94 167: biq::l() -> void
fifo write: @1699477106224015445 0x7f81e9cb40cc 7: biq::cH() -> float
fifo write: @1699477106270198940 0x7f81e28ae49e 1774: dio::a(cpc) -> void
fifo write: @1699477106271300514 0x7f81e28af374 93: bur::gh() -> boolean
fifo write: @1699477106271493297 0x7f81e28af7b4 650: bpn::a() -> boolean
fifo write: @1699477106271587858 0x7f81e28b0014 1798: bpv::a() -> boolean
fifo write: @1699477106272749363 0x7f81e28b0ed4 735: arw::c(float, float, float) -> float
fifo write: @1699477106273102558 0x7f81e28b1757 3569: biq::p(double, double, double) -> void
fifo write: @1699477106273331901 0x7f81e28b32ff 4311: bqa::a() -> boolean
fifo write: @1699477106273367141 0x7f81e28b50b4 662: ebb::g() -> gw
fifo write: @1699477106273866547 0x7f81e9cb43d1 397: ehi::c(double, double, double) -> ehi
fifo write: @1699477106273995449 0x7f81e9cb49d1 397: ehi::g(double) -> ehi
fifo write: @1699477106275189995 0x7f81e9cb4fd0 563: akw::c(long) -> int
fifo write: @1699477106315736767 0x7f81e9cb58d5 429: com.google.common.collect.RegularImmutableMap::get(Object) -> Object
fifo write: @1699477106321195997 0x7f81e28b5794 326: akq::I() -> eim
fifo write: @1699477106321275198 0x7f81e28b5c94 487: eim::g(String) -> eik
fifo write: @1699477106321325309 0x7f81e28b62b4 1425: biq::cf() -> eio
fifo write: @1699477106321433040 0x7f81e28b6e14 275: bit$$Lambda$7349.0x00007f8160bd1678::<init>(biq, eio, eio$a) -> void
fifo write: @1699477106321497151 0x7f81e28b7374 232: akq::f() -> afn
fifo write: @1699477106321547161 0x7f81e28b7879 423: bjg::K() -> void
fifo write: @1699477106321601262 0x7f81e28b7f14 246: bji::e(float, float) -> float
fifo write: @1699477106321728394 0x7f81e8bfd250 27: vtable stub
fifo write: @1699477106321784305 0x7f81e28b8434 446: boz::f() -> boolean
fifo write: @1699477106322068988 0x7f81e28b8b77 1919: bji::fS() -> biq
fifo write: @1699477106322134839 0x7f81e28b9b1c 2045: bji::fQ() -> void
fifo write: @1699477106322232370 0x7f81e28bac1c 3099: boz::a() -> void
fifo write: @1699477106322286001 0x7f81e28bc314 256: biq::cO() -> boolean
fifo write: @1699477106322800318 0x7f81e28bc91f 4230: bit::a(biq) -> java.util.function.Predicate
fifo write: @1699477106322834088 0x7f81e28be3d7 212: Math::floorDiv(int, int) -> int
fifo write: @1699477106322867508 0x7f81e28be874 402: bqb::b(int) -> int
fifo write: @1699477106322899339 0x7f81e28bedf7 307: arw::e(int, int) -> int
fifo write: @1699477106322987430 0x7f81e8bfd280 27: vtable stub
fifo write: @1699477106323215553 0x7f81e9cb604c 3: java.util.OptionalLong::isPresent() -> boolean
fifo write: @1699477106323546977 0x7f81e9cb6331 4: ehn::<init>(double, double, double) -> void
fifo write: @1699477106323589688 0x7f81e28bf314 383: biq::dA() -> boolean
fifo write: @1699477106323636228 0x7f81e9cb664c 2: ebb::f() -> int
fifo write: @1699477106323727950 0x7f81e28bf8d9 1701: bqu::a() -> boolean
fifo write: @1699477106324240526 0x7f81e28c09bf 11859: bjp::fQ() -> void
fifo write: @1699477106326472685 0x7f81e9cb6952 1161: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$SetIterator::nextLong() -> long
fifo write: @1699477106335065986 0x7f81e9cb76d9 230: java.util.BitSet::nextClearBit(int) -> int
fifo write: @1699477106365189754 0x7f81e28c5694 240: java.util.Collections$SetFromMap::iterator() -> java.util.Iterator
fifo write: @1699477106365676140 0x7f81e28c5c3c 5292: akp::b() -> void
fifo write: @1699477106372757432 0x7f81e28c7f3f 4458: bqj::a() -> boolean
fifo write: @1699477106373450681 0x7f81e28c9f34 1265: bqu::h() -> boolean
fifo write: @1699477106373580562 0x7f81e28ca9f4 231: ebg::a(eax) -> boolean
fifo write: @1699477106374235021 0x7f81e9cb7cd0 135: cqi::H_() -> int
fifo write: @1699477106374595906 0x7f81e28cae94 47: StrictMath::ceil(double) -> double
fifo write: @1699477106374633496 0x7f81e28cb297 920: StrictMath::floorOrCeil(double, double, double, double) -> double
fifo write: @1699477106416042570 0x7f81e28cbb94 230: java.util.stream.MatchOps$$Lambda$7315.0x00007f81609601c0::<init>(java.util.stream.MatchOps$MatchKind, java.util.function.DoublePredicate) -> void
fifo write: @1699477106416130761 0x7f81e28cc0ea 650: java.util.stream.MatchOps::lambda$makeDouble$3(java.util.stream.MatchOps$MatchKind, java.util.function.DoublePredicate) -> java.util.stream.MatchOps$BooleanTerminalSink
fifo write: @1699477106416186592 0x7f81e28cc837 839: java.util.stream.MatchOps$$Lambda$7315.0x00007f81609601c0::get() -> Object
fifo write: @1699477106416253923 0x7f81e28cd094 543: java.util.stream.MatchOps$4MatchSink::<init>(java.util.stream.MatchOps$MatchKind, java.util.function.DoublePredicate) -> void
fifo write: @1699477106416291303 0x7f81e28cd6f4 5: java.util.Spliterators$DoubleArraySpliterator::estimateSize() -> long
fifo write: @1699477106416345144 0x7f81e28cdad9 1470: java.util.stream.DoublePipeline::adapt(java.util.stream.Sink) -> java.util.function.DoubleConsumer
fifo write: @1699477106416381934 0x7f81e28ce617 641: dig::b(qw, rq) -> void
fifo write: @1699477106416422925 0x7f81e28ced34 1030: dig$$Lambda$7317.0x00007f8160bce1a0::accept(Object) -> void
fifo write: @1699477106416494746 0x7f81e28cf6c7 2686: java.util.stream.MatchOps::makeDouble(java.util.function.DoublePredicate, java.util.stream.MatchOps$MatchKind) -> java.util.stream.TerminalOp
fifo write: @1699477106420921553 0x7f81e9cb81f0 159: dgh::a(Comparable) -> String
fifo write: @1699477106427134053 0x7f81e9cb8654 1671: Integer::toString(int) -> String
fifo write: @1699477106427853772 0x7f81e9cb9810 1759: java.util.HashSet::iterator() -> java.util.Iterator
fifo write: @1699477106429820658 0x7f81e9cbab54 18: java.util.zip.Deflater::deflate(byte[], int, int) -> int
fifo write: @1699477106435826645 0x7f81e9cbae73 2129: java.util.zip.DeflaterOutputStream::deflate() -> void
fifo write: @1699477106463884347 0x7f81e9cbc14c 2: java.util.PriorityQueue::size() -> int
fifo write: @1699477106463920407 0x7f81e9cbc44c 2: cpr$d::a() -> int
fifo write: @1699477106463966498 0x7f81e28d0994 488: cpr::a(cpr$e) -> cpr$g
fifo write: @1699477106464633946 0x7f81e28d0f14 240: cpv::X() -> cpr
fifo write: @1699477106471629217 0x7f81e9cbc757 35: java.util.Collections$UnmodifiableCollection$1::hasNext() -> boolean
fifo write: @1699477106472599419 0x7f81e28d141c 2128: bqy::a() -> boolean
fifo write: @1699477106472812192 0x7f81e28d2594 247: bil::m_() -> boolean
fifo write: @1699477106473648252 0x7f81e8bfd2b0 168: itable stub
fifo write: @1699477106475168152 0x7f81e9cbca7d 1796: dgj::a(Comparable) -> String
fifo write: @1699477106517266584 0x7f81e28d30ff 21154: ako::t() -> void
fifo write: @1699477106518006634 0x7f81e9cbddb1 301: dij::b() -> void
fifo write: @1699477106522849146 0x7f81e28dc174 483: hy::d(double, double, double) -> double
fifo write: @1699477106522896497 0x7f81e28dc794 327: bus$k$$Lambda$7262.0x00007f8160bb8000::test(Object) -> boolean
fifo write: @1699477106522985038 0x7f81e28dcc94 704: hy::j(hy) -> double
fifo write: @1699477106523025959 0x7f81e28dd394 446: hy::a(hy, double) -> boolean
fifo write: @1699477106523165840 0x7f81e28dd9b7 1220: gw$a::a(hy, int, int, int) -> gw$a
fifo write: @1699477106523431934 0x7f81e9cbe3d0 135: dfi$a::a(aqh) -> boolean
fifo write: @1699477106523504895 0x7f81e28de539 3522: bus$k::a(dfj) -> boolean
fifo write: @1699477106565572837 0x7f81e9cbe850 211: net.minecraft.server.MinecraftServer$$Lambda$7295.0x00007f8160bbed00::getAsBoolean() -> boolean
fifo write: @1699477106567614823 0x7f81e28e027f 21016: ako::t() -> void
fifo write: @1699477106572609668 0x7f81e28e9494 240: ebb::e() -> int
fifo write: @1699477106573506029 0x7f81e9cbedf0 507: bji::c(biv) -> cjf
fifo write: @1699477106574513022 0x7f81e9cbf6d0 251: java.util.EnumMap$EnumMapIterator::hasNext() -> boolean
fifo write: @1699477106585735767 0x7f81e9cbfe5d 6433: aka::e(ajy) -> boolean
fifo write: @1699477106597052663 0x7f81e9cc43d0 71: java.util.zip.Deflater::ensureOpen() -> void
fifo write: @1699477106599131899 0x7f81e9cc4787 1244: java.util.zip.Deflater::deflate(byte[], int, int, int) -> int
fifo write: @1699477106615565962 0x7f81e9cc58d8 379: java.util.ArrayList::forEach(java.util.function.Consumer) -> void
fifo write: @1699477106619167338 0x7f81e9cc5f4c 2: ejd::a() -> int
fifo write: @1699477106621795512 0x7f81e28e9914 122: bki::f() -> double
fifo write: @1699477106621944594 0x7f81e28e9df7 1191: bkj::c(bkh) -> double
fifo write: @1699477106622548172 0x7f81e9cc6250 127: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::next() -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477106622753754 0x7f81e28ea9b4 636: byn::q() -> cjf
fifo write: @1699477106622893996 0x7f81e28eb2ff 6816: buw::b_() -> void
fifo write: @1699477106623555455 0x7f81e28edeb4 538: bqw::a() -> boolean
fifo write: @1699477106639391668 0x7f81e9cc667f 652: java.nio.ByteBuffer::putBuffer(int, java.nio.ByteBuffer, int, int) -> void
fifo write: @1699477106640988899 0x7f81e9cc721e 1681: java.nio.ByteBuffer::put(java.nio.ByteBuffer) -> java.nio.ByteBuffer
fifo write: @1699477106664475692 0x7f81e28ee514 385: aka$b$$Lambda$7309.0x00007f8160bcbd30::accept(Object) -> void
fifo write: @1699477106664553713 0x7f81e28eeaf9 1518: aka$b::a(vd) -> void
fifo write: @1699477106666386477 0x7f81e28ef95d 7574: eiy::a(String, gw, int, ejd) -> qw
fifo write: @1699477106666677341 0x7f81e28f2db7 6842: dig$$Lambda$7326.0x00007f8160bd4d30::apply(Object) -> Object
fifo write: @1699477106667158647 0x7f81e28f5b57 7732: dig::a(eal) -> String
fifo write: @1699477106667389940 0x7f81e28f8bf4 159: it.unimi.dsi.fastutil.shorts.ShortArrayList$1::hasNext() -> boolean
fifo write: @1699477106667533402 0x7f81e28f9097 613: Short::valueOf(short) -> Short
fifo write: @1699477106667622453 0x7f81e28f97b4 673: it.unimi.dsi.fastutil.shorts.ShortListIterator::next() -> Object
fifo write: @1699477106667668563 0x7f81e28f9f14 168: it.unimi.dsi.fastutil.shorts.ShortIterator::next() -> Short
fifo write: @1699477106667715934 0x7f81e28fa3b4 371: it.unimi.dsi.fastutil.shorts.ShortListIterator::next() -> Short
fifo write: @1699477106667768235 0x7f81e28fa9b4 588: it.unimi.dsi.fastutil.shorts.ShortArrayList$1::nextShort() -> short
fifo write: @1699477106668623386 0x7f81e9cc89d0 51: it.unimi.dsi.fastutil.shorts.ShortArrayList$1::hasNext() -> boolean
fifo write: @1699477106669611948 0x7f81e28fb3b7 6810: dig$$Lambda$7325.0x00007f8160bd4af0::apply(Object) -> Object
fifo write: @1699477106670192716 0x7f81e28fe0b7 7700: dig::a(csv) -> String
fifo write: @1699477106670504340 0x7f81e9cc8cf2 549: gy::b(Object) -> aew
fifo write: @1699477106670714342 0x7f81e9cc96b8 183: Short::valueOf(short) -> Short
fifo write: @1699477106672184671 0x7f81e9cc9b6f 484: hm::b(Object) -> aew
fifo write: @1699477106673080103 0x7f81e9cca457 381: it.unimi.dsi.fastutil.shorts.ShortListIterator::next() -> Object
fifo write: @1699477106676619128 0x7f81e2901134 532: bus::a() -> int
fifo write: @1699477106677165535 0x7f81e2901834 717: bus::gn() -> boolean
fifo write: @1699477106677493199 0x7f81e2902094 243: dhq$d::b() -> boolean
fifo write: @1699477106677529230 0x7f81e29024f4 229: dhq$a::b() -> boolean
fifo write: @1699477106677567720 0x7f81e2902974 226: dhq$a::c() -> gw
fifo write: @1699477106677604931 0x7f81e2902e14 240: dhq$d::c() -> gw
fifo write: @1699477106677693192 0x7f81e29032d4 2361: dha::a(gw) -> boolean
fifo write: @1699477106677728783 0x7f81e2904394 240: dhq$d::a() -> void
fifo write: @1699477106677763033 0x7f81e29047f4 95: dcv::l() -> boolean
fifo write: @1699477106677892465 0x7f81e2904c14 225: aka$$Lambda$7199.0x00007f8160ba3d70::get() -> Object
fifo write: @1699477106677932055 0x7f81e2905134 597: dhq::D() -> akj
fifo write: @1699477106678078727 0x7f81e2905794 454: aka::f(ajy) -> akj
fifo write: @1699477106678212489 0x7f81e2905e77 1638: cpv::m(gw) -> boolean
fifo write: @1699477106678275310 0x7f81e2906d57 3413: dhq::k(gw) -> boolean
fifo write: @1699477106679083210 0x7f81e290873f 7897: dhq$a::a() -> void
fifo write: @1699477106721459846 0x7f81e290bef9 606: boz::d() -> void
fifo write: @1699477106722255327 0x7f81e9ccac54 76: Math::max(double, double) -> double
fifo write: @1699477106722684642 0x7f81e290c694 243: com.google.common.collect.SingletonImmutableSet::contains(Object) -> boolean
fifo write: @1699477106724284873 0x7f81e9ccb099 2696: com.mojang.serialization.Codec::fieldOf(String) -> com.mojang.serialization.MapCodec
fifo write: @1699477106767966576 0x7f81e290cc07 2902: aka::e(ajy) -> boolean
fifo write: @1699477106769830740 0x7f81e290e26f 246: java.util.HashMap$Values::iterator() -> java.util.Iterator
fifo write: @1699477106769908581 0x7f81e290e794 71: java.util.HashMap$ValueIterator::<init>(java.util.HashMap) -> void
fifo write: @1699477106772280082 0x7f81e9ccc7f5 834: ako::b(int, int) -> boolean
fifo write: @1699477106814366074 0x7f81e9ccd5d0 83: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::addToValue(int, int) -> int
fifo write: @1699477106814946392 0x7f81e290eb97 237: rl::a(java.io.DataOutput) -> void
fifo write: @1699477106815060603 0x7f81e290f019 520: java.io.DataOutputStream::writeShort(int) -> void
fifo write: @1699477106815186285 0x7f81e9ccd94f 44: java.io.DataOutputStream::incCount(int) -> void
fifo write: @1699477106815818183 0x7f81e290f714 420: ebg::a(int, int, int, eax, float) -> eaz
fifo write: @1699477106815873854 0x7f81e290fd74 908: ebg::h() -> double
fifo write: @1699477106816335160 0x7f81e29106e4 3225: ebg::a(cpb, gw$a) -> eax
fifo write: @1699477106817059659 0x7f81e9ccdc57 396: gw$3::computeNext() -> Object
fifo write: @1699477106817286132 0x7f81e2911e14 846: hw::c(gw) -> long
fifo write: @1699477106817337912 0x7f81e2912654 1297: bus$a::a() -> boolean
fifo write: @1699477106818100912 0x7f81e29136ae 15696: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477106818195124 0x7f81e291a11c 1911: net.minecraft.server.MinecraftServer::u_() -> void
fifo write: @1699477106818538018 0x7f81e9cce2d7 396: gw$3::a() -> gw
fifo write: @1699477106834775157 0x7f81e9cce9d3 7434: rb::a(java.io.DataOutput) -> void
fifo write: @1699477106845077820 0x7f81e9cd2641 10512: biq::a(aqh, double) -> boolean
fifo write: @1699477106848502694 0x7f81e9cd9854 7433: rl::a(java.io.DataOutput) -> void
fifo write: @1699477106864963566 0x7f81e291af74 131: ehn::g(ehn) -> double
fifo write: @1699477106865493603 0x7f81e9cdd255 438: java.util.zip.Deflater::needsInput() -> boolean
fifo write: @1699477106866305303 0x7f81e9cdd7d3 508: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::getOrDefault(long, long) -> long
fifo write: @1699477106867094413 0x7f81e291b414 47: ehn::c(hy) -> ehn
fifo write: @1699477106867306506 0x7f81e291b852 765: ehn::a(hy, double, double, double) -> ehn
fifo write: @1699477106867709251 0x7f81e291c054 744: cox::b(cpv, gw) -> boolean
fifo write: @1699477106867764102 0x7f81e291c7b4 824: daj$$Lambda$7255.0x00007f8160bb6258::tick(cpv, gw, dfj, dcv) -> void
fifo write: @1699477106867810122 0x7f81e291cf77 491: deh::b(cpv, gw, dfj, deh) -> void
fifo write: @1699477106868405080 0x7f81e291d6bb 4350: cpm::a(double, double, double, double) -> boolean
fifo write: @1699477106871647872 0x7f81e291fd4f 29663: cox::a(akq, gw) -> void
fifo write: @1699477106874481389 0x7f81e9cde0f8 3774: biq::d(float) -> gw
fifo write: @1699477106886351952 0x7f81e9ce0fe2 6472: aka::e(ajy) -> boolean
fifo write: @1699477106899415830 0x7f81e9ce5741 10520: biq::a(aqh, double) -> boolean
fifo write: @1699477106913910177 0x7f81e9cec9cc 3: eck::f() -> long
fifo write: @1699477106916088185 0x7f81e292b917 114: ebg$$Lambda$7361.0x00007f8160bda8d8::get(long) -> Object
fifo write: @1699477106916159966 0x7f81e292bda0 187: ebg::a(int, int, int, bji, long) -> eax
fifo write: @1699477106916322318 0x7f81e292c23d 561: ebg::a(cpb, int, int, int) -> eax
fifo write: @1699477106916738413 0x7f81e292ca1f 3488: ebg::a(cpb, int, int, int, bji) -> eax
fifo write: @1699477106916916516 0x7f81e9ceccd3 184: ehi::a(double, double, double, double, double, double) -> boolean
fifo write: @1699477106917044067 0x7f81e9ced1f3 320: bji::a(eax) -> float
fifo write: @1699477106918269613 0x7f81e9ced975 514: bjg::a(cjf, cjf) -> boolean
fifo write: @1699477106958916557 0x7f81e9cee3f0 2819: dij$$Lambda$5484.0x00007f8160a84ae0::run() -> void
fifo write: @1699477106965363110 0x7f81e292e4bc 3602: aeh::b() -> java.util.List
fifo write: @1699477106966239372 0x7f81e9cf044c 9: bji::G() -> bpd
fifo write: @1699477106966516635 0x7f81e292ffb4 876: cpf::h(biq, ehi) -> eig
fifo write: @1699477106967300315 0x7f81e9cf0d5d 426: java.util.Map::getOrDefault(Object, Object) -> Object
fifo write: @1699477106969568235 0x7f81e9cf14ef 1656: cpy::b(int, int, int, int) -> boolean
fifo write: @1699477106969787117 0x7f81e9cf2964 45: Float::valueOf(float) -> Float
fifo write: @1699477106976355242 0x7f81e9cf2d7c 2319: dzy::a(long, long, int, int, int, boolean) -> void
fifo write: @1699477107015629678 0x7f81e9cf5051 49: ehi::a(ha$a) -> double
fifo write: @1699477107016316347 0x7f81e9cf53cc 3: cja::w() -> boolean
fifo write: @1699477107016518120 0x7f81e2930814 31: ebb::a(biq) -> ehn
fifo write: @1699477107016662102 0x7f81e9cf56d4 80: Math::min(double, double) -> double
fifo write: @1699477107016819544 0x7f81e8bfd368 27: vtable stub
fifo write: @1699477107016880725 0x7f81e2930ff7 1100: ebb::a(biq, int) -> ehn
fifo write: @1699477107019032552 0x7f81e2931eff 14423: byn::l() -> void
fifo write: @1699477107065378329 0x7f81e2937c67 6090: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477107066952999 0x7f81e293a534 866: bpe::a(float, float, float) -> float
fifo write: @1699477107114738405 0x7f81e293ae41 2459: java.util.Collections::shuffle(java.util.List, java.util.Random) -> void
fifo write: @1699477107114842237 0x7f81e293c2bf 7749: aki::a() -> void
fifo write: @1699477107117226328 0x7f81e9cf5a55 234: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::locateKey(long) -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477107119249014 0x7f81e9cf607c 1375: bjg::bv() -> boolean
fifo write: @1699477107122913371 0x7f81e9cf7553 1412: bji::cN() -> bjg
fifo write: @1699477107166302830 0x7f81e293fa7f 6725: djl$a::a() -> void
fifo write: @1699477107215729487 0x7f81e2942774 560: btx::c(bjp, gw) -> boolean
fifo write: @1699477107216768900 0x7f81e9cf8ad1 49: ehi::b(ha$a) -> double
fifo write: @1699477107216857121 0x7f81e2942df4 94: dis::a() -> boolean
fifo write: @1699477107265833433 0x7f81e2943218 35: ehn::a(double) -> ehn
fifo write: @1699477107267092059 0x7f81e9cf9158 215: ehi::c(ehi) -> boolean
fifo write: @1699477107267611676 0x7f81e2943761 5028: bsp::b(ehn) -> void
fifo write: @1699477107268174923 0x7f81e9cf96ba 457: bqc::a(brp, java.util.EnumSet) -> boolean
fifo write: @1699477107316711079 0x7f81e9cfa07c 220: gw::a(double, double, double) -> gw
fifo write: @1699477107321669813 0x7f81e9cfa5de 857: bqc::a(brp, java.util.Map) -> boolean
fifo write: @1699477107338862914 0x7f81e9cfb714 6433: ako::t() -> void
fifo write: @1699477107365606209 0x7f81e29459f4 391: gw::a(ho) -> gw
fifo write: @1699477107366294147 0x7f81e294637f 12127: aka::l() -> void
fifo write: @1699477107367146118 0x7f81e294b214 31: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap, it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$1) -> void
fifo write: @1699477107367200999 0x7f81e9d0014c 6: ako::k() -> ecc
fifo write: @1699477107367293240 0x7f81e294b614 280: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap) -> void
fifo write: @1699477107415383170 0x7f81e294be02 7638: cqg::a(int, Iterable, cqg$b, cqf) -> cqg$d
fifo write: @1699477107416567306 0x7f81e294ef14 155: bpe::a(double, double, double, double) -> void
fifo write: @1699477107416612506 0x7f81e9d0044c 7: bjg::w(float) -> void
fifo write: @1699477107416701077 0x7f81e294f3f4 189: bji::w(float) -> void
fifo write: @1699477107416823139 0x7f81e294f914 2790: bji::I() -> bpe
fifo write: @1699477107416954961 0x7f81e2950b74 9: ehn::i() -> double
fifo write: @1699477107417050272 0x7f81e2950f14 488: ebb::h() -> eaz
fifo write: @1699477107417096083 0x7f81e2951514 231: bsp::b(eax) -> boolean
fifo write: @1699477107417144593 0x7f81e2951a74 914: biq::r(float) -> void
fifo write: @1699477107418114636 0x7f81e29525e1 3711: bsp::c(ehn) -> boolean
fifo write: @1699477107418186337 0x7f81e2954414 270: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$ValueIterator::<init>(it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap) -> void
fifo write: @1699477107418251587 0x7f81e295496f 398: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$1::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477107418318918 0x7f81e2954f37 728: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::values() -> it.unimi.dsi.fastutil.objects.ObjectCollection
fifo write: @1699477107466041464 0x7f81e2955899 4241: bsp::k() -> void
fifo write: @1699477107467146068 0x7f81e2957794 240: ecb::e() -> long
fifo write: @1699477107467285090 0x7f81e2957c14 279: ecb::q() -> cpr
fifo write: @1699477107511557840 0x7f81e9d00cb7 13160: ako::t() -> void
fifo write: @1699477107516115069 0x7f81e29581b4 1775: biq::ba() -> boolean
fifo write: @1699477107516610385 0x7f81e2958e94 692: java.util.PriorityQueue::clear() -> void
fifo write: @1699477107516703766 0x7f81e2959659 569: eiw::a(long, int, bdp) -> void
fifo write: @1699477107516846928 0x7f81e2959e14 47: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::long2LongEntrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477107516970399 0x7f81e295a23a 919: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::long2LongEntrySet() -> it.unimi.dsi.fastutil.longs.Long2LongMap$FastEntrySet
fifo write: @1699477107517131592 0x7f81e295ab77 2307: it.unimi.dsi.fastutil.longs.Long2LongMaps::fastIterator(it.unimi.dsi.fastutil.longs.Long2LongMap) -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477107517254873 0x7f81e295bc5c 2284: eiw::a(long, int, java.util.function.BiConsumer) -> void
fifo write: @1699477107517415615 0x7f81e295cf14 31: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap, it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$1) -> void
fifo write: @1699477107517509386 0x7f81e295d334 716: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$FastEntryIterator::<init>(it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap) -> void
fifo write: @1699477107517590367 0x7f81e295dbb6 938: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapEntrySet::fastIterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477107517684049 0x7f81e295e534 813: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$FastEntryIterator::<init>(it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap, it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$1) -> void
fifo write: @1699477107517753370 0x7f81e295ed94 280: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap) -> void
fifo write: @1699477107517798400 0x7f81e9d096cc 2: it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet::size() -> int
fifo write: @1699477107517833901 0x7f81e9d099cc 3: akq::r() -> boolean
fifo write: @1699477107517899281 0x7f81e295f314 240: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap) -> void
fifo write: @1699477107517998163 0x7f81e295f924 5376: eiw::a(long) -> void
fifo write: @1699477107520075680 0x7f81e9d0a063 2440: aeh::a(aee, Object, boolean) -> void
fifo write: @1699477107565562276 0x7f81e9d0bab6 4: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477107566138783 0x7f81e2961db4 717: bus::go() -> boolean
fifo write: @1699477107566329466 0x7f81e2962614 167: gw::c() -> gw
fifo write: @1699477107566444037 0x7f81e2962ab4 1009: btz$$Lambda$7359.0x00007f8160bd8cd8::test(Object) -> boolean
fifo write: @1699477107566509508 0x7f81e2963374 660: btz::b(bjp, gw) -> boolean
fifo write: @1699477107567034055 0x7f81e9d0bdcc 9: bus::b() -> java.util.UUID
fifo write: @1699477107567074196 0x7f81e9d0c0cc 7: bji::B(float) -> void
fifo write: @1699477107567816855 0x7f81e2963ad7 1953: com.google.common.collect.Iterables::unmodifiableIterable(Iterable) -> Iterable
fifo write: @1699477107608554250 0x7f81e9d0c6e7 20290: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477107614666109 0x7f81e2964874 22: ehn::c(double, double, double) -> double
fifo write: @1699477107664067926 0x7f81e9d17749 32: arw::b(double) -> long
fifo write: @1699477107665401383 0x7f81e9d17a50 67: dfi$a::f() -> boolean
fifo write: @1699477107666335535 0x7f81e2964c94 609: ehi::a(double, double, double, double, double, double) -> boolean
fifo write: @1699477107666683009 0x7f81e296563f 6819: coz::computeNext() -> Object
fifo write: @1699477107667077084 0x7f81e296867a 192: ehi::d(double, double, double) -> ehi
fifo write: @1699477107667268077 0x7f81e2968cbc 3184: bji::R() -> void
fifo write: @1699477107667336848 0x7f81e296a494 255: bjn::X_() -> boolean
fifo write: @1699477107667746253 0x7f81e296aa9c 3649: cpf::a(biq, ehi) -> boolean
fifo write: @1699477107672162470 0x7f81e9d18157 1416: biq::i(int) -> boolean
fifo write: @1699477107677335607 0x7f81e9d195d3 1368: bji::cX() -> boolean
fifo write: @1699477107693971961 0x7f81e9d1ab85 6750: djf::a(ehi, aqn) -> void
fifo write: @1699477107764623382 0x7f81e296c412 602: bso::b() -> ehn
fifo write: @1699477107764916256 0x7f81e8bfd398 27: vtable stub
fifo write: @1699477107765025507 0x7f81e296cd17 3820: bso::a() -> boolean
fifo write: @1699477107765098528 0x7f81e296e71c 3554: bso::s() -> int
fifo write: @1699477107766114851 0x7f81e9d20253 64: bil::h() -> int
fifo write: @1699477107815046632 0x7f81e9d208b1 31: bkf::a(float, float) -> void
fifo write: @1699477107815956514 0x7f81e2970114 415: ebg::a(eaz, eaz) -> boolean
fifo write: @1699477107816234787 0x7f81e2970794 1734: ebg::a(eaz, eaz, eaz, eaz) -> boolean
fifo write: @1699477107816663063 0x7f81e2971759 1019: bsp::a(ehn) -> double
fifo write: @1699477107866035959 0x7f81e8bfd3c8 27: vtable stub
fifo write: @1699477107867025571 0x7f81e2972214 1694: bkl::d(bkh) -> bki
fifo write: @1699477107898278764 0x7f81e9d20dad 10249: coz::computeNext() -> Object
fifo write: @1699477107914350832 0x7f81e2972fb4 863: cpr::b(cpr$e) -> boolean
fifo write: @1699477107915124222 0x7f81e8bfd3f8 27: vtable stub
fifo write: @1699477107915356355 0x7f81e29737d4 1879: biq::aZ() -> boolean
fifo write: @1699477107916779373 0x7f81e9d278dc 47: biq::aW() -> boolean
fifo write: @1699477107917054607 0x7f81e9d27c31 31: ajz::b(int) -> akj
fifo write: @1699477107920673443 0x7f81e9d27ff7 2044: biq::b(int, boolean) -> void
fifo write: @1699477107967464847 0x7f81e9d2999d 886: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477108014774126 0x7f81e9d2a753 350: java.util.HashMap::values() -> java.util.Collection
fifo write: @1699477108115498764 0x7f81e2974594 334: java.util.EnumMap$Values::<init>(java.util.EnumMap) -> void
fifo write: @1699477108115563095 0x7f81e2974a97 633: java.util.EnumMap::values() -> java.util.Collection
fifo write: @1699477108115623136 0x7f81e29751eb 555: java.util.EnumMap$Values::iterator() -> java.util.Iterator
fifo write: @1699477108115708967 0x7f81e2975814 448: java.util.EnumMap$ValueIterator::<init>(java.util.EnumMap) -> void
fifo write: @1699477108116038821 0x7f81e2975dfc 1392: cno::a(bjg) -> java.util.Map
fifo write: @1699477108116101772 0x7f81e2976b99 1893: djg::a(java.util.function.Consumer) -> void
fifo write: @1699477108165842343 0x7f81e9d2af50 247: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477108166061726 0x7f81e2977b94 500: ehn::a(ho, double) -> boolean
fifo write: @1699477108176873165 0x7f81e9d2b659 2126: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477108187945138 0x7f81e9d2d235 2888: bqc::a(boolean) -> void
fifo write: @1699477108216759209 0x7f81e29782b4 856: cpr::c(cpr$e) -> int
fifo write: @1699477108216814300 0x7f81e9d2f271 497: ehi::b(double, double, double) -> ehi
fifo write: @1699477108218129287 0x7f81e9d2f9f1 546: ehi::b(ehn) -> ehi
fifo write: @1699477108266036604 0x7f81e9d301d0 163: gu$2::a(ha$a) -> ha$a
fifo write: @1699477108267634494 0x7f81e9d30656 397: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::getDouble(Object) -> double
fifo write: @1699477108364816467 0x7f81e2978e34 138: bji::fP() -> boolean
fifo write: @1699477108414046191 0x7f81e2979294 121: arw::b(float) -> float
fifo write: @1699477108416044597 0x7f81e9d30cfc 18: biq::aG() -> gw
fifo write: @1699477108421200894 0x7f81e9d310d3 1288: bjg::fC() -> boolean
fifo write: @1699477108464018256 0x7f81e9d3244c 2: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::size() -> int
fifo write: @1699477108466325906 0x7f81e9d32752 153: dfi$a::a(cpv, gw, biq) -> void
fifo write: @1699477108513986270 0x7f81e9d32bcc 6: aog::t() -> java.util.List
fifo write: @1699477108514025381 0x7f81e9d32ecc 3: eck::k() -> boolean
fifo write: @1699477108516467692 0x7f81e29797f7 4801: dju::a(djt, ehn, djt$a) -> void
fifo write: @1699477108563857152 0x7f81e9d331cc 3: eck::i() -> boolean
fifo write: @1699477108565385492 0x7f81e9d334cc 5: bjg::eh() -> int
fifo write: @1699477108565597385 0x7f81e297bbb4 1024: cpv::N() -> boolean
fifo write: @1699477108565796027 0x7f81e297c4f4 90: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477108565854038 0x7f81e297c914 332: eiw::a(int) -> boolean
fifo write: @1699477108565940959 0x7f81e297ce14 74: java.util.ArrayDeque::clear() -> void
fifo write: @1699477108566008430 0x7f81e297d294 943: java.util.ArrayDeque::circularClear(Object[], int, int) -> void
fifo write: @1699477108566085731 0x7f81e297dbb4 827: java.util.PriorityQueue::poll() -> Object
fifo write: @1699477108566151042 0x7f81e297e4f9 1623: eiw::b() -> void
fifo write: @1699477108566212433 0x7f81e297f194 135: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::clear() -> void
fifo write: @1699477108566304524 0x7f81e297f694 71: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$ValueIterator::<init>(it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap) -> void
fifo write: @1699477108566400005 0x7f81e297faef 246: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$1::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477108566478836 0x7f81e2980037 728: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::values() -> it.unimi.dsi.fastutil.objects.ObjectCollection
fifo write: @1699477108566538107 0x7f81e2980814 291: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap) -> void
fifo write: @1699477108566596278 0x7f81e2980ea5 3695: eiw::a(long, int) -> void
fifo write: @1699477108571338539 0x7f81e9d33a15 11477: bqc::a() -> void
fifo write: @1699477108571375439 0x7f81e9d3b6ec 18: gu$2::a(int, int, int, ha$a) -> int
fifo write: @1699477108614278152 0x7f81e2982959 826: eiw::c() -> void
fifo write: @1699477108614347623 0x7f81e2983223 1762: eiw::a(java.util.function.BiConsumer) -> void
fifo write: @1699477108615887053 0x7f81e2984074 1900: byn::aW() -> boolean
fifo write: @1699477108616512701 0x7f81e2985117 6055: bjn::a(akq, boolean) -> void
fifo write: @1699477108665158378 0x7f81e29877d9 1572: cnq::a(cno, bjg) -> int
fifo write: @1699477108713879976 0x7f81e2988474 39: arw::e(double) -> double
fifo write: @1699477108765474241 0x7f81e9d3bfd0 275: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477108766255861 0x7f81e9d3c94f 176: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477108815220452 0x7f81e9d3ce4c 9: net.minecraft.server.MinecraftServer::ac() -> aog
fifo write: @1699477108816095123 0x7f81e9d3d162 330: java.util.EnumSet::noneOf(Class) -> java.util.EnumSet
fifo write: @1699477108864088002 0x7f81e9d3d853 40: bji::U() -> boolean
fifo write: @1699477108914123047 0x7f81e2988894 205: yo::<init>(int, short, short, short, byte, byte, boolean, boolean, boolean) -> void
fifo write: @1699477108915386683 0x7f81e9d3dbd7 148: biq::bM() -> boolean
fifo write: @1699477108965985325 0x7f81e2988e14 71: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$ValueIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap) -> void
fifo write: @1699477108966092436 0x7f81e2989214 291: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap) -> void
fifo write: @1699477108966182067 0x7f81e29897ef 246: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$1::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477108976416660 0x7f81e9d3e176 3057: bvi::cN() -> bjg
fifo write: @1699477108976447910 0x7f81e9d40a3d 70: ac::c() -> long
fifo write: @1699477109016250393 0x7f81e9d40dd0 363: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477109016544037 0x7f81e9d41550 55: java.util.ArrayDeque::size() -> int
fifo write: @1699477109064679227 0x7f81e2989d34 617: bkb::s() -> boolean
fifo write: @1699477109065392397 0x7f81e9d41854 18: aeh::b(aee, Object) -> void
fifo write: @1699477109065571539 0x7f81e298a554 4339: bqy::b() -> boolean
fifo write: @1699477109065856843 0x7f81e298c1b7 728: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::values() -> it.unimi.dsi.fastutil.objects.ObjectCollection
fifo write: @1699477109066191897 0x7f81e9d41b54 187: eig::a(ha$a, ehi, double) -> double
fifo write: @1699477109066459630 0x7f81e298cbbf 6819: coz::computeNext() -> Object
fifo write: @1699477109119808808 0x7f81e9d420f0 1921: cpb$$Lambda$7345.0x00007f8160bd3820::apply(Object) -> Object
fifo write: @1699477109120725709 0x7f81e9d43cfd 322: biq$$Lambda$7346.0x00007f8160bd3a68::test(Object) -> boolean
fifo write: @1699477109214294165 0x7f81e298fc7c 1053: zz::<init>(int, ehn) -> void
fifo write: @1699477109214329136 0x7f81e9d443b1 140: Math::round(double) -> long
fifo write: @1699477109215570162 0x7f81e299083a 919: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::long2ObjectEntrySet() -> it.unimi.dsi.fastutil.longs.Long2ObjectMap$FastEntrySet
fifo write: @1699477109238764621 0x7f81e9d448e4 10169: eid::b(double, double, double, double, double, double) -> eig
fifo write: @1699477109238978874 0x7f81e9d4a0f9 126: hy::b(ho) -> double
fifo write: @1699477109265177241 0x7f81e9d4a550 67: eic::size() -> int
fifo write: @1699477109268676086 0x7f81e9d4a924 827: cpv::a(biq, ehi, java.util.function.Predicate) -> java.util.List
fifo write: @1699477109268885529 0x7f81e9d4b731 74: eid::a(ehi) -> eig
fifo write: @1699477109349399127 0x7f81e9d4bd2e 10204: coz::computeNext() -> Object
fifo write: @1699477109364455090 0x7f81e9d5274c 6: djh$1::a() -> Class
fifo write: @1699477109366094361 0x7f81e9d52bcd 6678: coz::<init>(cpf, biq, ehi, boolean, java.util.function.BiFunction) -> void
fifo write: @1699477109415109883 0x7f81e2991114 345: bpd$$Lambda$7376.0x00007f8160be5b18::accept(Object) -> void
fifo write: @1699477109415171764 0x7f81e2991614 345: bpd$$Lambda$7375.0x00007f8160be58e0::accept(Object) -> void
fifo write: @1699477109415224125 0x7f81e2991b14 290: bpd::b(Float) -> void
fifo write: @1699477109415328796 0x7f81e2992117 1533: bpd::a(Float) -> void
fifo write: @1699477109415646280 0x7f81e2992df4 98: bus::gk() -> boolean
fifo write: @1699477109415692351 0x7f81e2993239 416: biq::e(boolean) -> void
fifo write: @1699477109415741152 0x7f81e2993897 245: gu$3::a(int, int, int, ha$a) -> int
fifo write: @1699477109514579875 0x7f81e9d56859 58: akv$$Lambda$5452.0x00007f8160a799f0::applyAsLong(Object) -> long
fifo write: @1699477109515250334 0x7f81e2993d14 369: ebr$a::<init>(java.util.function.Supplier, java.util.function.Function, ata) -> void
fifo write: @1699477109515291464 0x7f81e9d56bd0 163: gu$3::a(ha$a) -> ha$a
fifo write: @1699477109565139597 0x7f81e29942f4 31: bpd::a(double, double, double, float, float) -> void
fifo write: @1699477109565203248 0x7f81e299473c 769: bpd::a(double, double, double) -> void
fifo write: @1699477109565262469 0x7f81e2994fb7 893: bqw::e() -> void
fifo write: @1699477109565681434 0x7f81e29959d7 2117: bpd::h() -> java.util.Optional
fifo write: @1699477109565765045 0x7f81e2996bd7 1812: bpd::i() -> java.util.Optional
fifo write: @1699477109566070229 0x7f81e9d57346 163: gw::b(int, int, int, int, int, int) -> Iterable
fifo write: @1699477109566187911 0x7f81e2997a94 102: java.util.OptionalLong::orElse(long) -> long
fifo write: @1699477109614038977 0x7f81e2997f14 506: cpv::b(float) -> float
fifo write: @1699477109614075517 0x7f81e2998514 453: cpw::ah() -> long
fifo write: @1699477109614110518 0x7f81e2998b97 503: dis::a(long) -> float
fifo write: @1699477109614149018 0x7f81e29992d4 1524: cqc::f(float) -> float
fifo write: @1699477109614378511 0x7f81e299a01f 3202: cpv::Q() -> void
fifo write: @1699477109614456802 0x7f81e299b574 112: akq::s() -> ecc
fifo write: @1699477109614634735 0x7f81e299b9de 1166: ecc::b(ebr$a, String) -> ebr
fifo write: @1699477109614672615 0x7f81e299c524 1295: cpq::a() -> ebr$a
fifo write: @1699477109614756286 0x7f81e8bfd428 27: vtable stub
fifo write: @1699477109614769606 0x7f81e8bfd458 27: vtable stub
fifo write: @1699477109615240032 0x7f81e299cfd4 2202: biq::c(dfj) -> boolean
fifo write: @1699477109615708998 0x7f81e299df17 120: ehi::c(ehi) -> boolean
fifo write: @1699477109615766219 0x7f81e299e43b 1836: bus::d(int, boolean) -> void
fifo write: @1699477109615958032 0x7f81e299f649 5035: djf::a(ehi, aqn) -> void
fifo write: @1699477109639914171 0x7f81e9d579dc 6104: eig::a(gu, ehi, double) -> double
fifo write: @1699477109644552230 0x7f81e9d5d19d 1838: cpy::a(int, int, int, int, int, int) -> boolean
fifo write: @1699477109663999471 0x7f81e29a2014 276: dha::s() -> void
fifo write: @1699477109664045392 0x7f81e29a2594 185: net.minecraft.server.MinecraftServer$$Lambda$7298.0x00007f8160bbf380::<init>(akq) -> void
fifo write: @1699477109664148043 0x7f81e29a2a34 465: aoj::b(int) -> int
fifo write: @1699477109664182803 0x7f81e29a3054 669: aoj::a(int) -> boolean
fifo write: @1699477109664263674 0x7f81e29a3794 185: akq$$Lambda$7300.0x00007f8160bc1d38::<init>(akq) -> void
fifo write: @1699477109664301325 0x7f81e29a3c14 185: akq$$Lambda$7299.0x00007f8160bbf5a8::<init>(akq) -> void
fifo write: @1699477109664413556 0x7f81e29a415c 2547: akq::b() -> void
fifo write: @1699477109664581349 0x7f81e29a5437 447: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap$1::iterator() -> java.util.Iterator
fifo write: @1699477109664722040 0x7f81e29a5ab9 138: ako::r() -> void
fifo write: @1699477109664884002 0x7f81e29a60de 4251: ako::a(java.util.function.BooleanSupplier, boolean) -> void
fifo write: @1699477109664966374 0x7f81e29a7e14 236: buf::a(java.util.function.BooleanSupplier) -> void
fifo write: @1699477109665034354 0x7f81e29a845c 5072: cdd::a() -> void
fifo write: @1699477109665107635 0x7f81e29aa699 1771: aka::a(java.util.function.BooleanSupplier) -> void
fifo write: @1699477109665136266 0x7f81e29ab594 31: buf$a::a() -> void
fifo write: @1699477109665299108 0x7f81e29ab9b9 734: java.util.concurrent.ConcurrentLinkedQueue::size() -> int
fifo write: @1699477109665398149 0x7f81e29ac241 2675: dio::a(java.util.function.BooleanSupplier) -> void
fifo write: @1699477109665434650 0x7f81e29ad674 90: it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet::isEmpty() -> boolean
fifo write: @1699477109665918786 0x7f81e29adc5f 5110: akq::au() -> void
fifo write: @1699477109666008497 0x7f81e29b0194 488: ebb::a(int) -> eaz
fifo write: @1699477109666770477 0x7f81e29b0c1f 16342: akq::ar() -> void
fifo write: @1699477109666799677 0x7f81e9d5e94c 5: bus::gw() -> int
fifo write: @1699477109666827588 0x7f81e29b74f4 96: bus::gs() -> boolean
fifo write: @1699477109666863178 0x7f81e9d5ec2c 33: bus::A(bus) -> asc
fifo write: @1699477109667143582 0x7f81e29b7979 2209: cpv::O() -> boolean
fifo write: @1699477109667508536 0x7f81e29b8b1f 6187: bus::gt() -> boolean
fifo write: @1699477109667810820 0x7f81e29bbaa7 20498: akq::a(java.util.function.BooleanSupplier) -> void
fifo write: @1699477109667935392 0x7f81e29c3999 1689: it.unimi.dsi.fastutil.longs.LongCollection::removeIf(java.util.function.LongPredicate) -> boolean
fifo write: @1699477109668133034 0x7f81e29c46f7 1733: com.google.common.collect.Iterables$UnmodifiableIterable::iterator() -> java.util.Iterator
fifo write: @1699477109714334740 0x7f81e9d5ef50 55: asm$a::hasNext() -> boolean
fifo write: @1699477109715327872 0x7f81e29c5394 229: bus$1::c() -> void
fifo write: @1699477109715917930 0x7f81e29c5a7f 3493: bus::l() -> void
fifo write: @1699477109716003431 0x7f81e29c751f 3787: bus::b_() -> void
fifo write: @1699477109716076852 0x7f81e29c9094 217: bus$j::c() -> boolean
fifo write: @1699477109716221784 0x7f81e29c95d4 1059: bus$j::a() -> void
fifo write: @1699477109716263884 0x7f81e29ca094 495: bus::W() -> void
fifo write: @1699477109716375826 0x7f81e29caa17 36: bus::y(boolean) -> void
fifo write: @1699477109716574308 0x7f81e29cae9f 1070: bus::gu() -> void
fifo write: @1699477109717054804 0x7f81e29cbc9f 8008: bpb::a() -> void
fifo write: @1699477109717421379 0x7f81e29cf59f 11750: bsn::c() -> void
fifo write: @1699477109717571461 0x7f81e29d42df 9765: bus::X() -> void
fifo write: @1699477109766968468 0x7f81e9d5f27d 741: Iterable::spliterator() -> java.util.Spliterator
fifo write: @1699477109767246272 0x7f81e9d5fc71 102: cpv::q(gw) -> boolean
fifo write: @1699477109815966570 0x7f81e9d60076 125: biq::bf() -> void
fifo write: @1699477109816446906 0x7f81e9d60524 85: ehn::d(double, double, double) -> ehn
fifo write: @1699477109822295701 0x7f81e9d60970 2694: biq$$Lambda$7336.0x00007f8160bd6960::test(Object) -> boolean
fifo write: @1699477109827034562 0x7f81e9d62c81 2585: biq::a(ehi, gw) -> boolean
fifo write: @1699477109865041182 0x7f81e9d64c94 67: Double::doubleToLongBits(double) -> long
fifo write: @1699477109865373616 0x7f81e29d8197 106: dhq$$Lambda$7368.0x00007f8160bde858::get(int) -> Object
fifo write: @1699477109865413106 0x7f81e29d8614 185: dhq$$Lambda$7369.0x00007f8160bdf190::<init>(dhq) -> void
fifo write: @1699477109865616029 0x7f81e29d8b61 1260: dhq::a(akq, int, int) -> djw
fifo write: @1699477109865705210 0x7f81e29d9760 2845: djs::<init>(akq, int, djs$a) -> void
fifo write: @1699477109915710935 0x7f81e9d64fd0 43: it.unimi.dsi.fastutil.ints.IntOpenHashSet::clear() -> void
fifo write: @1699477109964546225 0x7f81e9d652d6 69: ehn::g(ehn) -> double
fifo write: @1699477110015097516 0x7f81e9d6566b 84: hw::a(gw) -> hw
fifo write: @1699477110065594737 0x7f81e29daaf4 250: bus::gq() -> boolean
fifo write: @1699477110065644247 0x7f81e29db014 603: bus::aR() -> boolean
fifo write: @1699477110065692578 0x7f81e9d65aa4 85: ehn::b(double, double, double) -> ehn
fifo write: @1699477110085854118 0x7f81e9d65f99 6571: biq::aO() -> void
fifo write: @1699477110086419375 0x7f81e9d6bf9e 141: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::subSet(long, long) -> it.unimi.dsi.fastutil.longs.LongSortedSet
fifo write: @1699477110115234186 0x7f81e9d6c4d3 381: net.minecraft.server.MinecraftServer::F() -> Iterable
fifo write: @1699477110115271787 0x7f81e29db6f4 90: eaw::e() -> boolean
fifo write: @1699477110115311667 0x7f81e29dbb14 608: eaz::d(eaz) -> float
fifo write: @1699477110115348347 0x7f81e29dc2b4 1090: eaw::c() -> eaz
fifo write: @1699477110117708598 0x7f81e9d6cad1 94: bjg::dF() -> float
fifo write: @1699477110227453902 0x7f81e9d6cec2 5671: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477110265408392 0x7f81e29dcbf7 376: btx::a(boolean, bjp, gw) -> boolean
fifo write: @1699477110265485603 0x7f81e29dd174 323: btx::a(bsp, gw) -> boolean
fifo write: @1699477110265694035 0x7f81e29dd717 3916: btx::a(gw, bjp) -> boolean
fifo write: @1699477110265871898 0x7f81e29df0c1 3366: bua::a(bjp, int, asc, gw) -> gw
fifo write: @1699477110266029090 0x7f81e29e0a7c 8232: btz::a(bjp, int, boolean, gw) -> gw
fifo write: @1699477110318710678 0x7f81e9d6ff8c 1021: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset::iterator() -> it.unimi.dsi.fastutil.longs.LongBidirectionalIterator
fifo write: @1699477110329255434 0x7f81e9d70e57 4005: dhq::a(int) -> djw
fifo write: @1699477110365183947 0x7f81e9d73331 33: ehn::f() -> double
fifo write: @1699477110418279872 0x7f81e9d7371c 935: bjg::E() -> java.util.Map
fifo write: @1699477110525340751 0x7f81e9d74500 4281: java.util.Arrays::binarySearch0(Object[], int, int, Object, java.util.Comparator) -> int
fifo write: @1699477110530242714 0x7f81e9d77375 1707: eid::a(ha$a, ehi, Iterable, double) -> double
fifo write: @1699477110618674674 0x7f81e9d78886 1460: gw::a(int, int, int, int, int, int) -> java.util.stream.Stream
fifo write: @1699477110622751807 0x7f81e9d799f1 1813: gw::a(ehi) -> java.util.stream.Stream
fifo write: @1699477110623096661 0x7f81e9d7af99 99: biq::o(double, double, double) -> void
fifo write: @1699477110665498787 0x7f81e8bfcd00 480: I2C/C2I adapters(0xbaaa7e7e7ea)
fifo write: @1699477110665518007 0x7f81e8bfca00 488: I2C/C2I adapters(0xbaaa7e7e7eab)
fifo write: @1699477110665670919 0x7f81e8bfc700 488: I2C/C2I adapters(0xbbaaa7e7e7ea)
fifo write: @1699477110665790101 0x7f81e9d7b6d0 191: java.util.RegularEnumSet::remove(Object) -> boolean
fifo write: @1699477110665807591 0x7f81e8bfc400 512: I2C/C2I adapters(0xbbaaa7e7e7eab)
fifo write: @1699477110666129885 0x7f81e8bfc100 512: I2C/C2I adapters(0xbbbaaa7e7e7ea)
fifo write: @1699477110667205529 0x7f81e9d7c4ba 32: hy::d(double, double, double) -> double
fifo write: @1699477110765108431 0x7f81e29e3c34 382: djk::a() -> Iterable
fifo write: @1699477110765158552 0x7f81e29e4214 495: aki::b() -> int
fifo write: @1699477110765209413 0x7f81e29e4894 272: djc::a() -> Iterable
fifo write: @1699477110765274803 0x7f81e29e4db4 679: akq::y() -> Iterable
fifo write: @1699477110765326744 0x7f81e29e5661 1248: akq::a(boolean, boolean) -> void
fifo write: @1699477110765382895 0x7f81e29e60a5 338: java.util.Collections::shuffle(java.util.List) -> void
fifo write: @1699477110765446356 0x7f81e29e6637 868: aka::k() -> Iterable
fifo write: @1699477110864769776 0x7f81e9d7c84c 6: cpe::a() -> ehn
fifo write: @1699477110916916897 0x7f81e9d7ccf9 976: cqg$$Lambda$7312.0x00007f8160bcc830::<init>(gw, biq, cqj, cqf, bjj, it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap) -> void
fifo write: @1699477110967457719 0x7f81e29e6ef4 229: bsn::b() -> ehn
fifo write: @1699477110967845884 0x7f81e9d7d741 1514: dhf::getNoiseBiome(int, int, int) -> he
fifo write: @1699477110967968396 0x7f81e9d7ec36 4: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapIterator::hasNext() -> boolean
fifo write: @1699477111014779898 0x7f81e9d7ef4f 176: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477111014969851 0x7f81e29e7394 917: dfi$a::d() -> boolean
fifo write: @1699477111015051582 0x7f81e29e7bd7 1603: dfi$d$$Lambda$499.0x00007f81602f7920::test(dfj, cpb, gw) -> boolean
fifo write: @1699477111015125193 0x7f81e29e885a 2396: dfi$d::e(dfj, cpb, gw) -> boolean
fifo write: @1699477111015405046 0x7f81e29e981a 350: dfi$a::o(cpb, gw) -> boolean
fifo write: @1699477111015448807 0x7f81e29e9d94 333: biq::bv() -> boolean
fifo write: @1699477111017620965 0x7f81e9d7f450 603: java.util.HashSet::clear() -> void
fifo write: @1699477111018447786 0x7f81e9d7fbd0 275: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477111114685636 0x7f81e9d8022c 33: bus::c(bus) -> bsp
fifo write: @1699477111166689206 0x7f81e9d80570 439: aqn$$Lambda$7339.0x00007f8160bd2000::accept(Object) -> aqn$a
fifo write: @1699477111219718789 0x7f81e9d80cd9 1794: java.util.Collections::shuffle(java.util.List, java.util.Random) -> void
fifo write: @1699477111220166825 0x7f81e9d82053 116: asm::c(Object) -> int
fifo write: @1699477111268974534 0x7f81e9d82536 729: biq::be() -> boolean
fifo write: @1699477111316807920 0x7f81e9d83050 371: djs::a(djt, ehn, djt$a, djw$a) -> boolean
fifo write: @1699477111415179328 0x7f81e29ea314 365: dju$$Lambda$7367.0x00007f8160bde630::<init>(dju, java.util.List, djt, ehn, djt$a) -> void
fifo write: @1699477111415228729 0x7f81e9d837d8 103: ehi::c(ehi) -> boolean
fifo write: @1699477111415266369 0x7f81e9d83bcc 6: akn::h() -> java.util.Collection
fifo write: @1699477111415295840 0x7f81e29ea994 240: ecb::f() -> long
fifo write: @1699477111464311201 0x7f81e29eae17 60: yo$a::<init>(int, short, short, short, boolean) -> void
fifo write: @1699477111650484810 0x7f81e9d84046 8233: djf::a(ehi, aqn) -> void
fifo write: @1699477111650583262 0x7f81e9d8a08b 62: gw$a::i() -> gw
fifo write: @1699477111665070148 0x7f81e9d8a45f 72: hy::j(hy) -> double
fifo write: @1699477111665462493 0x7f81e9d8a7df 92: hy::a(hy, double) -> boolean
fifo write: @1699477111665810268 0x7f81e9d8abd6 45: gw$a::a(hy, int, int, int) -> gw$a
fifo write: @1699477111715474878 0x7f81e9d8afcc 6: net.minecraft.server.MinecraftServer::ad() -> alo
fifo write: @1699477111763883992 0x7f81e9d8b2cc 9: net.minecraft.server.MinecraftServer::aA() -> afk
fifo write: @1699477111763933212 0x7f81e9d8b5cc 3: jdk.jfr.internal.PlatformEventType::isEnabled() -> boolean
fifo write: @1699477111763982333 0x7f81e9d8b8cc 2: eck::h() -> int
fifo write: @1699477111764074314 0x7f81e9d8becc 2: eck::j() -> int
fifo write: @1699477111764103104 0x7f81e9d8c1cc 2: eck::e(int) -> void
fifo write: @1699477111764131105 0x7f81e9d8c4cc 2: eck::a(int) -> void
fifo write: @1699477111764159495 0x7f81e9d8c7cc 2: eck::f(int) -> void
fifo write: @1699477111764187415 0x7f81e9d8cacc 5: eck::b(boolean) -> void
fifo write: @1699477111764220156 0x7f81e9d8cdcc 5: eck::a(boolean) -> void
fifo write: @1699477111764247866 0x7f81e9d8d0cc 3: eck::a(long) -> void
fifo write: @1699477111764274547 0x7f81e9d8d3cc 2: eck::l() -> int
fifo write: @1699477111764304837 0x7f81e9d8d6cc 9: eck::u() -> eha
fifo write: @1699477111764332767 0x7f81e9d8d9cc 3: eck::b(long) -> void
fifo write: @1699477111764863644 0x7f81e29eb5b9 832: bru::a() -> boolean
fifo write: @1699477111765859937 0x7f81e29ebe74 1793: bsa::a() -> boolean
fifo write: @1699477111766072960 0x7f81e29ecd5c 3018: brt::a() -> boolean
fifo write: @1699477111766146591 0x7f81e29ee3b7 447: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$1::iterator() -> java.util.Iterator
fifo write: @1699477111766379124 0x7f81e29eea54 737: it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet::tryCapacity(long) -> void
fifo write: @1699477111766472515 0x7f81e29ef31e 935: it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet::addAll(java.util.Collection) -> boolean
fifo write: @1699477111766609697 0x7f81e29efd84 2749: djl::g() -> void
fifo write: @1699477111766681118 0x7f81e29f11b4 857: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::removeNullEntry() -> Object
fifo write: @1699477111766786059 0x7f81e29f1bff 5444: cpv::P() -> void
fifo write: @1699477111766894070 0x7f81e29f419f 6591: bql::a() -> boolean
fifo write: @1699477111814730637 0x7f81e9d8dccc 9: bvu::b() -> java.util.UUID
fifo write: @1699477111815267224 0x7f81e9d8dfcc 6: cpe::b() -> ehn
fifo write: @1699477111928945898 0x7f81e9d8e7ff 29296: ako::c(int, int, dhk, boolean) -> java.util.concurrent.CompletableFuture
fifo write: @1699477111928986139 0x7f81e9da3050 47: java.util.ImmutableCollections$ListN::isEmpty() -> boolean
fifo write: @1699477111929018749 0x7f81e9da3331 16: ehn::i() -> double
fifo write: @1699477111967610227 0x7f81e9da3694 977: ako::a(long, java.util.function.Consumer) -> void
fifo write: @1699477111985154793 0x7f81e9da4730 6042: cqg$$Lambda$7312.0x00007f8160bcc830::accept(Object) -> void
fifo write: @1699477112001739677 0x7f81e9da91a8 6794: cqg::a(gw, biq, cqj, cqf, bjj, it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap, dhq) -> void
fifo write: @1699477112015268241 0x7f81e29f6c14 93: akq::a(djt, ehn, djt$a) -> void
fifo write: @1699477112015311822 0x7f81e29f7014 324: djt$a::<init>(biq, dfj) -> void
fifo write: @1699477112016352255 0x7f81e9dadc79 574: dha::a(biq, ehi) -> boolean
fifo write: @1699477112016808081 0x7f81e9dae550 195: dha::b(double, double) -> double
fifo write: @1699477112122429122 0x7f81e9daea03 3712: java.util.Collections::shuffle(java.util.List, java.util.Random) -> void
fifo write: @1699477112122524723 0x7f81e9db0dd0 59: ako$$Lambda$7333.0x00007f8160bd62b8::getAsBoolean() -> boolean
fifo write: @1699477112264338090 0x7f81e29f7597 855: java.util.Collections::unmodifiableCollection(java.util.Collection) -> java.util.Collection
fifo write: @1699477112413895128 0x7f81e29f7d94 103: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::realSize() -> int
fifo write: @1699477112414712918 0x7f81e9db1153 100: biq::bn() -> void
fifo write: @1699477112464761983 0x7f81e29f81fd 116: djf::a(djh, ehi, aqn, dje) -> aqn$a
fifo write: @1699477112464812014 0x7f81e29f8619 477: djf$$Lambda$7352.0x00007f8160bd0800::accept(Object) -> aqn$a
fifo write: @1699477112464883215 0x7f81e29f8c14 185: aqs$$Lambda$7353.0x00007f8160bd0a28::<init>(aqs) -> void
fifo write: @1699477112465048947 0x7f81e29f9186 2964: dje::a(djh, ehi, aqn) -> aqn$a
fifo write: @1699477112465506953 0x7f81e29fa77c 2970: aqs::a(Class) -> java.util.Collection
fifo write: @1699477112534099326 0x7f81e9db18f6 12293: akp::a() -> void
fifo write: @1699477112542069009 0x7f81e9dba20f 2794: akq$$Lambda$7306.0x00007f8160bc4da0::accept(Object) -> void
fifo write: @1699477112592609530 0x7f81e9dbcaf0 7071: biq::aq() -> void
fifo write: @1699477112619323874 0x7f81e974ad56 1401: biq::bj() -> boolean
fifo write: @1699477112629109831 0x7f81e9bb986f 4324: biq::bd() -> void
fifo write: @1699477112715152789 0x7f81e917a08f 104: gw::a(ha) -> gw
fifo write: @1699477112914878973 0x7f81e16bced7 1393: bjg::c(dfj) -> boolean
fifo write: @1699477112965134241 0x7f81e14129ba 587: ehn::d() -> ehn
fifo write: @1699477113064842406 0x7f81e968bad8 134: arw::c(float, float, float) -> float
fifo write: @1699477113264946544 0x7f81e18db474 90: bqw::b() -> boolean
fifo write: @1699477113315957641 0x7f81e9a2f350 319: cpf$$Lambda$7341.0x00007f8160bd2648::iterator() -> java.util.Iterator
fifo write: @1699477113316628950 0x7f81e9b33e2d 88: cpf::i(biq, ehi) -> java.util.Iterator
fifo write: @1699477113371297314 0x7f81e94c3fff 2115: cph::c(biq, ehi) -> java.util.List
fifo write: @1699477113377432483 0x7f81e9a11523 1851: cpm::c(biq, ehi) -> java.util.List
fifo write: @1699477113464886630 0x7f81e99e6179 131: bpd::a(float, float, float) -> float
fifo write: @1699477113465223854 0x7f81e9a1117c 11: ako$$Lambda$7334.0x00007f8160bd64e0::apply(Object) -> Object
fifo write: @1699477113664863807 0x7f81e227ec34 753: akw::g(long) -> asm
fifo write: @1699477113664914427 0x7f81e1894f34 1050: akw::a(asm) -> int
fifo write: @1699477113715230256 0x7f81e1e38ff4 378: akw::h(long) -> asm
fifo write: @1699477113715278677 0x7f81e18bfeb4 467: akw$$Lambda$5454.0x00007f8160a7a740::get(long) -> Object
fifo write: @1699477113777949294 0x7f81e9b891b7 3556: bus$k$$Lambda$7262.0x00007f8160bb8000::test(Object) -> boolean
fifo write: @1699477113881866122 0x7f81e9937933 17441: biq::a(biq, ehn, ehi, cpv, java.util.List) -> ehn
fifo write: @1699477113915393924 0x7f81e181e917 2130: bus$c::i() -> boolean
fifo write: @1699477113915457085 0x7f81e184bb37 2419: bus$c::a() -> boolean
fifo write: @1699477113915870961 0x7f81e26c6e1c 1985: bus$b::a() -> boolean
fifo write: @1699477113915971022 0x7f81e1878d5c 2870: bus$d::h() -> boolean
fifo write: @1699477113916138644 0x7f81e14aa834 535: bus$i::h() -> boolean
fifo write: @1699477113916495319 0x7f81e1406ed7 1229: bus$e::a() -> boolean
fifo write: @1699477113916861893 0x7f81e23cdd1f 4379: bus$k::h() -> boolean
fifo write: @1699477113917021095 0x7f81e16590b9 2420: bus$e::h() -> boolean
fifo write: @1699477113972995977 0x7f81e9b4a4c4 24169: biq::a(bjm, ehn) -> void
fifo write: @1699477114014623573 0x7f81e2256594 423: ajn::ac() -> aog
fifo write: @1699477114014659214 0x7f81e1632794 329: ajn::bg() -> ajm
fifo write: @1699477114064547077 0x7f81e9b02f50 139: asm$a::next() -> Object
fifo write: @1699477114065170785 0x7f81e9b692d4 203: ehn::e(ehn) -> ehn
fifo write: @1699477114115753246 0x7f81e9ac0ef3 176: biq::w() -> boolean
fifo write: @1699477114116417815 0x7f81e269cd94 2089: eaw::b(int) -> void
fifo write: @1699477114122804227 0x7f81e9b47918 3020: bjg::c_() -> boolean
fifo write: @1699477114122834248 0x7f81e974a934 71: eaz::b(int, int, int) -> int
fifo write: @1699477114123015510 0x7f81e9c214f1 86: eay::b(eaz) -> boolean
fifo write: @1699477114265243062 0x7f81e23db69f 6945: bjg::dV() -> void
fifo write: @1699477114365435843 0x7f81e9a1cd50 43: eck::s() -> bgv
fifo write: @1699477114415269165 0x7f81e22fdc77 2188: bhl::c() -> void
fifo write: @1699477114416929656 0x7f81e9a34b77 412: bji::dx() -> void
fifo write: @1699477114417271011 0x7f81e9b74a90 103: bjg::K() -> void
fifo write: @1699477114615049969 0x7f81e9ba5913 100: biq::bp() -> ehn
fifo write: @1699477114674433254 0x7f81e9bdf9d1 16241: bjg::b_() -> void
fifo write: @1699477114676158627 0x7f81e9a168da 985: biq::a(double, boolean, dfj, gw) -> void
fifo write: @1699477114718988419 0x7f81e9a5bd18 1671: ako::a(long, dhf, dhk) -> void
fifo write: @1699477114814727332 0x7f81e15de597 405: biq::a(djt, biq) -> void
fifo write: @1699477114814766993 0x7f81e1a4301c 633: biq::a(djt) -> void
fifo write: @1699477114814988046 0x7f81e2642c40 740: cpw::a(biq, djt, ehn) -> void
fifo write: @1699477114815514922 0x7f81e984ca73 208: biq::cf() -> eio
fifo write: @1699477115032328016 0x7f81e9baa4b5 4072: ako::a(int, int) -> dhq
fifo write: @1699477115066242303 0x7f81e2389abf 6221: bjg::c(gw) -> void
fifo write: @1699477115265567851 0x7f81e917b4b8 463: arw::d(double, double) -> double
fifo write: @1699477115442414159 0x7f81e97aa419 8130: biq::h(ehn) -> ehn
fifo write: @1699477115457088398 0x7f81e97cee56 4468: biq::aJ() -> float
fifo write: @1699477115514493778 0x7f81e1424934 618: ajy::p() -> void
fifo write: @1699477115514829102 0x7f81e22b0187 2902: aka::e(ajy) -> boolean
fifo write: @1699477115569563567 0x7f81e98ad6d9 1302: aeh::b(aee) -> Object
fifo write: @1699477115639295726 0x7f81e9af2de2 6312: aka::e(ajy) -> boolean
fifo write: @1699477115715705830 0x7f81e299f637 5612: eig::a(ehn, ehn, gw) -> ehj
fifo write: @1699477115764286946 0x7f81e97a9e50 59: aku::b(long) -> boolean
fifo write: @1699477115964578646 0x7f81e14c1122 403: dll::c(int) -> int
fifo write: @1699477116015558953 0x7f81e1c97d1c 2532: div::c() -> void
fifo write: @1699477116064061528 0x7f81e14d8108 1407: eha::a(Object, long) -> void
fifo write: @1699477116166100073 0x7f81e9bd68c0 11579: bjg::l() -> void
fifo write: @1699477116167156996 0x7f81e9ceccd8 179: bji::l() -> void
fifo write: @1699477116169809560 0x7f81e99ea7d6 1401: bjg::G() -> void
fifo write: @1699477116172850609 0x7f81e9bb1711 2674: bpd::a() -> void
fifo write: @1699477116173427587 0x7f81e996a9d4 2171: bji::aq() -> void
fifo write: @1699477116173461727 0x7f81e9a46514 235: bjg::dR() -> boolean
fifo write: @1699477116178875287 0x7f81e94c9cb7 2325: bjg::aJ() -> float
fifo write: @1699477116229802433 0x7f81e9bc8921 18650: bjg::aq() -> void
fifo write: @1699477116319951455 0x7f81e96b6c34 1915: bur::b_() -> void
fifo write: @1699477116320523462 0x7f81e9571ab4 1795: bil::b_() -> void
fifo write: @1699477116321213361 0x7f81e917c818 443: bji::b_() -> void
fifo write: @1699477116324190679 0x7f81e92b56f6 4081: bjg::bZ() -> boolean
fifo write: @1699477116324825637 0x7f81e9966dd3 1332: bjg::eX() -> boolean
fifo write: @1699477116336278775 0x7f81e9cc1344 3906: bjg::a(ehn, float) -> ehn
fifo write: @1699477116337313199 0x7f81e94c93f1 482: biq::a(ehn, float, float) -> ehn
fifo write: @1699477116337574142 0x7f81e9af28e4 43: bjg::j(ehn) -> ehn
fifo write: @1699477116363641328 0x7f81e9dc3c68 13730: bjg::h(ehn) -> void
fifo write: @1699477116365483592 0x7f81e9cf91e6 209: ehn::d(ehn) -> ehn
fifo write: @1699477116365832176 0x7f81e9bb0ffd 174: dkh::i() -> float
fifo write: @1699477116400540523 0x7f81e9dce9fb 15996: bji::fg() -> void
fifo write: @1699477116514566182 0x7f81e14a9314 240: java.util.Collections$SynchronizedCollection::iterator() -> java.util.Iterator
fifo write: @1699477116514851286 0x7f81e9966970 111: boz::f() -> boolean
fifo write: @1699477116515422553 0x7f81e9d3c953 96: bjp::fQ() -> void
fifo write: @1699477116515665196 0x7f81e9b74653 68: bji::fQ() -> void
fifo write: @1699477116515893259 0x7f81e9d3c2d3 76: bji::fS() -> biq
fifo write: @1699477116516688360 0x7f81e9ba6e78 1022: bji::e(float, float) -> float
fifo write: @1699477116516946823 0x7f81e9cc0375 965: boz::a() -> void
fifo write: @1699477116564012599 0x7f81e9ba55d0 67: java.util.PriorityQueue::peek() -> Object
fifo write: @1699477116564417084 0x7f81e9cbfcd0 75: dio::a(cpc) -> void
fifo write: @1699477116564911571 0x7f81e19a8134 1193: bus$l::b() -> boolean
fifo write: @1699477116565359646 0x7f81e145e05f 2774: akw::b(long, aku) -> void
fifo write: @1699477116565490698 0x7f81e147fe34 915: bsp::m() -> boolean
fifo write: @1699477116865039627 0x7f81e97ce88c 77: cpf::e(biq, ehi) -> Iterable
fifo write: @1699477116895557790 0x7f81e9ddb21f 19620: ehw::b(ehw$b, boolean) -> void
fifo write: @1699477116914672256 0x7f81e9a6fc55 434: cpr$e::equals(Object) -> boolean
fifo write: @1699477116965314269 0x7f81e9b0680b 78: it.unimi.dsi.fastutil.longs.LongOpenHashSet::iterator() -> it.unimi.dsi.fastutil.longs.LongIterator
fifo write: @1699477117017010425 0x7f81e9767676 612: cpm::a(java.util.List, bts, bjg, double, double, double) -> bjg
fifo write: @1699477117214735152 0x7f81e9b06403 62: eaz::a() -> gw
fifo write: @1699477117314622119 0x7f81e9b87dd3 88: bur::X() -> void
fifo write: @1699477117335907373 0x7f81e9a27913 5927: bpe::a() -> void
fifo write: @1699477117342220965 0x7f81e9bc692d 1682: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477117564848722 0x7f81e97ce4ed 70: eaz::a(eaz) -> float
fifo write: @1699477117575676752 0x7f81e29fc763 49361: eay::a(eaz[], eaz) -> int
fifo write: @1699477117575715083 0x7f81e17aabb4 256: eaw::a(eaz, float) -> void
fifo write: @1699477117587973160 0x7f81e9b92b3c 7330: eay::c(int, int, int) -> eax
fifo write: @1699477117588012251 0x7f81e9bb93b1 18: eay::c(eaz) -> boolean
fifo write: @1699477117591983012 0x7f81e98cad14 1439: eba::b(int, int, int) -> eaz
fifo write: @1699477117608945031 0x7f81e9bbe143 11075: eay::a(int, int, int) -> eaz
fifo write: @1699477117617299778 0x7f81e9570c49 916: cpm::a(bts, bjg) -> cbu
fifo write: @1699477117630299076 0x7f81e9dead83 15050: ebg::b(cpb, gw) -> eax
fifo write: @1699477117825144616 0x7f81e9978517 3732: bjg::em() -> void
fifo write: @1699477117918109643 0x7f81e98c9ab2 1321: brj::a() -> boolean
fifo write: @1699477117964661033 0x7f81e1577894 167: cpv::a(djh, ehi, java.util.function.Predicate, java.util.List) -> void
fifo write: @1699477117964731284 0x7f81e9d3bfd3 40: akq::E() -> djj
fifo write: @1699477117965244600 0x7f81e1f1bf67 3265: cpv::a(djh, ehi, java.util.function.Predicate, java.util.List, int) -> void
fifo write: @1699477117965305441 0x7f81e1c07214 279: cpv$$Lambda$7351.0x00007f8160bd1d60::<init>(java.util.function.Predicate, java.util.List, int, djh) -> void
fifo write: @1699477117965349052 0x7f81e15bc594 109: djk::a(djh, ehi, aqn) -> void
fifo write: @1699477117965509764 0x7f81e1cd0d77 1393: djf::a(djh, ehi, aqn) -> void
fifo write: @1699477117965556714 0x7f81e1e72b14 275: djf$$Lambda$7352.0x00007f8160bd0800::<init>(djh, ehi, aqn) -> void
fifo write: @1699477118014960621 0x7f81e98c9653 51: bpc::b() -> void
fifo write: @1699477118015004622 0x7f81e1b94514 675: ajz::a(akj) -> int
fifo write: @1699477118016206147 0x7f81e9bbdaf3 128: bjg::v(float) -> void
fifo write: @1699477118017349572 0x7f81e9781fc0 264: bit::a(biq) -> java.util.function.Predicate
fifo write: @1699477118021107290 0x7f81e9976db8 1654: bjg::fh() -> void
fifo write: @1699477118114631765 0x7f81e16294cf 3825: afk::a(java.util.Collection, aew) -> void
fifo write: @1699477118114681895 0x7f81e161b214 185: afk$$Lambda$7297.0x00007f8160bbf158::<init>(aew) -> void
fifo write: @1699477118114809017 0x7f81e15df5b4 532: bvu::a() -> int
fifo write: @1699477118163795818 0x7f81e1450274 94: jdk.jfr.EventType::isEnabled() -> boolean
fifo write: @1699477118164905032 0x7f81e1429cbc 1686: net.minecraft.server.MinecraftServer::bt() -> void
fifo write: @1699477118165110715 0x7f81e1cf1557 1229: bus$f::a() -> boolean
fifo write: @1699477118165601071 0x7f81e1a7a3f7 4042: bus$f::h() -> boolean
fifo write: @1699477118166031117 0x7f81e275b5e4 10531: net.minecraft.server.MinecraftServer::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477118166079917 0x7f81e206f23c 1550: bus$g::h() -> boolean
fifo write: @1699477118166166948 0x7f81e1baf694 536: bds::a(bdp, bds) -> bdp
fifo write: @1699477118166242599 0x7f81e1d54314 185: net.minecraft.server.MinecraftServer$$Lambda$7295.0x00007f8160bbed00::<init>(net.minecraft.server.MinecraftServer) -> void
fifo write: @1699477118166302510 0x7f81e1dc8b14 95: ajn::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477118166562014 0x7f81e22e94bc 2986: net.minecraft.server.MinecraftServer::a(java.util.function.BooleanSupplier) -> void
fifo write: @1699477118166736316 0x7f81e9adef61 646: java.util.concurrent.ConcurrentLinkedQueue::first() -> java.util.concurrent.ConcurrentLinkedQueue$Node
fifo write: @1699477118213882004 0x7f81e1625a14 410: net.minecraft.server.MinecraftServer::bu() -> void
fifo write: @1699477118214011135 0x7f81e1ab3694 268: bdu::a(float) -> void
fifo write: @1699477118214979978 0x7f81e1e7659c 5428: bvu::b_() -> void
fifo write: @1699477118215363293 0x7f81e15c721c 4527: bkb::cf() -> eio
fifo write: @1699477118215422024 0x7f81e2099034 539: bvu::gn() -> boolean
fifo write: @1699477118215515165 0x7f81e1bd4294 340: csp$$Lambda$7261.0x00007f8160bb78d8::tick(cpv, gw, dfj, dcv) -> void
fifo write: @1699477118215722327 0x7f81e1465896 1651: dcs::a(cpv, gw, dfj, dcs) -> void
fifo write: @1699477118215969451 0x7f81e257c69f 10054: bvu::l() -> void
fifo write: @1699477118216524568 0x7f81e23c1917 6733: dcs::a(cpv, gw, dfj, java.util.List, gw) -> void
fifo write: @1699477118428255095 0x7f81e986a779 4753: biq::h(ehn) -> ehn
fifo write: @1699477118464754555 0x7f81e22e31c3 347: djh::a(Class) -> djh
fifo write: @1699477118464893487 0x7f81e14dd9bd 750: cpm::a(Class, ehi, java.util.function.Predicate) -> java.util.List
fifo write: @1699477118464961418 0x7f81e1f4a394 240: djh$1::<init>(Class) -> void
fifo write: @1699477118465099250 0x7f81e26b5640 863: cpv::a(djh, ehi, java.util.function.Predicate) -> java.util.List
fifo write: @1699477118465753768 0x7f81e9bbd651 118: ebd::a(eaz, eaz) -> float
fifo write: @1699477119614552226 0x7f81e9976a31 29: ehn::c(double, double, double) -> double
fifo write: @1699477120064419831 0x7f81e2422194 325: boz::b() -> void
fifo write: @1699477120470516782 0x7f81e9df5217 11188: aki::a() -> void
fifo write: @1699477120481912298 0x7f81e9d1d315 3850: aka::l() -> void
fifo write: @1699477120530294462 0x7f81e9a3d39d 5822: cqg::a(int, Iterable, cqg$b, cqf) -> cqg$d
fifo write: @1699477120715998324 0x7f81e9b151d0 480: cpr$e::hashCode() -> int
fifo write: @1699477121164180546 0x7f81e99765d0 43: eck::q() -> cpr
fifo write: @1699477121267691259 0x7f81e28e05ff 20984: ako::t() -> void
fifo write: @1699477121267757860 0x7f81e21b05f4 232: com.google.common.collect.Lists::newArrayListWithCapacity(int) -> java.util.ArrayList
fifo write: @1699477122014369286 0x7f81e15fd2b4 813: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$FastEntryIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap, it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$1) -> void
fifo write: @1699477122014453858 0x7f81e19fa034 716: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$FastEntryIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477122014515618 0x7f81e2217394 240: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477122230149395 0x7f81e9589506 3473: ako::t() -> void
fifo write: @1699477122364523246 0x7f81e1aa1e3c 2025: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::<init>(int, float) -> void
fifo write: @1699477122511255616 0x7f81e9dfcb56 20163: ako::t() -> void
fifo write: @1699477122514298675 0x7f81e1dffdb4 617: com.google.common.collect.Iterables$UnmodifiableIterable::<init>(Iterable, com.google.common.collect.Iterables$1) -> void
fifo write: @1699477122514382546 0x7f81e1b95134 523: com.google.common.collect.Iterables$UnmodifiableIterable::<init>(Iterable) -> void
fifo write: @1699477122514478827 0x7f81e2579d14 384: com.google.common.collect.FluentIterable::<init>() -> void
fifo write: @1699477122514541148 0x7f81e1b4e274 144: com.google.common.base.Optional::absent() -> com.google.common.base.Optional
fifo write: @1699477123301859948 0x7f81e8bfbe00 464: I2C/C2I adapters(0xbbbabebe)
fifo write: @1699477123305393384 0x7f81e14d9b77 2284: com.google.common.base.Suppliers::memoize(com.google.common.base.Supplier) -> com.google.common.base.Supplier
fifo write: @1699477123305532355 0x7f81e1b1b2b4 883: com.google.common.base.Suppliers$NonSerializableMemoizingSupplier::<init>(com.google.common.base.Supplier) -> void
fifo write: @1699477123306280505 0x7f81e9869090 2271: java.util.zip.ZipFile$InflaterCleanupAction::run() -> void
fifo write: @1699477123307155026 0x7f81e8bfbb00 536: I2C/C2I adapters(0xbab7e7e7e66bab7e)
fifo write: @1699477123308868739 0x7f81e9a3be77 2152: java.util.zip.ZipFile$CleanableResource::releaseInflater(java.util.zip.Inflater) -> void
fifo write: @1699477123309098092 0x7f81e9868b50 103: java.util.zip.ZipCoder$UTF8ZipCoder::hasTrailingSlash(byte[], int) -> boolean
fifo write: @1699477123311386421 0x7f81e8bfb800 480: I2C/C2I adapters(0xb7e7e7e6bb)
fifo write: @1699477123312575036 0x7f81e8bfb500 520: I2C/C2I adapters(0xbba7e7e7e6666a)
fifo write: @1699477123312879800 0x7f81e8bfb200 552: I2C/C2I adapters(0xbaabaaaaaab)
fifo write: @1699477123315452173 0x7f81e8bfaf00 488: I2C/C2I adapters(0xb7e7e7e66ba)
fifo write: @1699477123318078987 0x7f81e8bfac00 440: I2C/C2I adapters(0xb6aa)
fifo write: @1699477123319426484 0x7f81e8bfa900 472: I2C/C2I adapters(0xbbbb66be)
fifo write: @1699477123324086804 0x7f81e8bfa600 496: I2C/C2I adapters(0xb7e7e7e66aaa)
fifo write: @1699477123327605790 0x7f81e8bfa280 656: I2C/C2I adapters(0xbbbbbbbbbbaaa6be)
fifo write: @1699477123331336438 0x7f81e8bf9f80 456: I2C/C2I adapters(0xbbebebeb)
fifo write: @1699477123331355438 0x7f81e8bf9c80 464: I2C/C2I adapters(0xbabebebeb)
fifo write: @1699477123332036587 0x7f81e145c31c 1501: java.lang.reflect.Method::getAnnotation(Class) -> java.lang.annotation.Annotation
fifo write: @1699477123334480108 0x7f81e93deeaf 8388: java.lang.invoke.AbstractValidatingLambdaMetafactory::<init>(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MethodType, String, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean, Class[], java.lang.invoke.MethodType[]) -> void
fifo write: @1699477123334669091 0x7f81e1fa9b7c 1404: java.lang.reflect.Executable::getAnnotation(Class) -> java.lang.annotation.Annotation
fifo write: @1699477123334784562 0x7f81e26df614 406: java.lang.reflect.AccessibleObject::isAnnotationPresent(Class) -> boolean
fifo write: @1699477123334862733 0x7f81e9bf22b1 106: jdk.internal.misc.VM::isSupportedClassFileVersion(int, int) -> boolean
fifo write: @1699477123335941747 0x7f81e8bf9980 456: I2C/C2I adapters(0xbabbeaa)
fifo write: @1699477123336017998 0x7f81e9a3b5d3 653: java.lang.reflect.Method::copy() -> java.lang.reflect.Method
fifo write: @1699477123336381323 0x7f81e98836cb 524: jdk.internal.org.objectweb.asm.Type::getObjectType(String) -> jdk.internal.org.objectweb.asm.Type
fifo write: @1699477123337761121 0x7f81e2403eb4 2459: PublicMethods$MethodList::filter(java.lang.reflect.Method[], String, Class[], boolean) -> PublicMethods$MethodList
fifo write: @1699477123337990724 0x7f81e212d1b4 646: ClassLoader::createOrGetClassLoaderValueMap() -> java.util.concurrent.ConcurrentHashMap
fifo write: @1699477123338207567 0x7f81e226f79a 193: org.apache.logging.log4j.spi.AbstractLogger::trace(String, Object) -> void
fifo write: @1699477123338957936 0x7f81e93ddc5a 2215: java.lang.reflect.Method::<init>(Class, String, Class[], Class, Class[], int, int, String, byte[], byte[], byte[]) -> void
fifo write: @1699477123339186969 0x7f81e93dd6d0 111: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator::invocationOpcode() -> int
fifo write: @1699477123342125877 0x7f81e8bf9580 504: I2C/C2I adapters(0xbbbbeaaab)
fifo write: @1699477123344452166 0x7f81e8bf4b00 504: I2C/C2I adapters(0xbbbbaaaa)
fifo write: @1699477123344774901 0x7f81e9d1b70b 2883: jdk.internal.org.objectweb.asm.ClassReader::readUtf(int, char[]) -> String
fifo write: @1699477123345252907 0x7f81e8bf8c80 456: I2C/C2I adapters(0xbebaaba)
fifo write: @1699477123346708455 0x7f81e996383a 3854: jdk.internal.org.objectweb.asm.ClassReader::readConst(int, char[]) -> Object
fifo write: @1699477123347134631 0x7f81e9b25710 2632: jdk.internal.org.objectweb.asm.Type::getClassName() -> String
fifo write: @1699477123347416505 0x7f81e9b22d84 3987: java.lang.invoke.MethodHandles$Lookup::makeHiddenClassDefiner(byte[], java.util.Set, boolean) -> java.lang.invoke.MethodHandles$Lookup$ClassDefiner
fifo write: @1699477123347562376 0x7f81e9963348 18: java.lang.invoke.LambdaForm$DMH.0x00007f8160120800::invokeStatic(Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477123348278736 0x7f81e988c44c 6: io.netty.channel.DefaultChannelPipeline::channel() -> io.netty.channel.Channel
fifo write: @1699477123348974515 0x7f81e9a368b0 179: java.lang.invoke.MethodHandles$Lookup$ClassFile::readInt(byte[], int) -> int
fifo write: @1699477123351315475 0x7f81e9b21a14 1991: Class::protectionDomain() -> java.security.ProtectionDomain
fifo write: @1699477123353883838 0x7f81e9c83b5a 3268: java.lang.invoke.MethodHandles$Lookup$ClassDefiner::defineClassAsLookup(boolean) -> java.lang.invoke.MethodHandles$Lookup
fifo write: @1699477123367623675 0x7f81e9c7f026 7197: java.lang.invoke.MethodHandles$Lookup::defineHiddenClass(byte[], boolean, java.lang.invoke.MethodHandles$Lookup$ClassOption[]) -> java.lang.invoke.MethodHandles$Lookup
fifo write: @1699477123367960399 0x7f81e93ea49b 8930: java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator::generate(java.lang.invoke.MethodType) -> void
fifo write: @1699477123368805020 0x7f81e9d20cfd 11231: java.lang.invoke.MethodHandles$Lookup$ClassFile::newInstance(byte[], String) -> java.lang.invoke.MethodHandles$Lookup$ClassFile
fifo write: @1699477123383222306 0x7f81e9e099e7 14012: Class::getMethodsRecursive(String, Class[], boolean) -> PublicMethods$MethodList
fifo write: @1699477123455941382 0x7f81e9e12558 26444: java.lang.invoke.InnerClassLambdaMetafactory::generateInnerClass() -> Class
fifo write: @1699477123614213271 0x7f81e1b51974 91: io.netty.channel.AbstractChannelHandlerContext::channel() -> io.netty.channel.Channel
fifo write: @1699477123652936409 0x7f81e1d80eda 1476: java.math.MutableBigInteger::mul(int, java.math.MutableBigInteger) -> void
fifo write: @1699477123654961175 0x7f81e19de554 15: java.lang.invoke.StringConcatFactory::newString() -> java.lang.invoke.MethodHandle
fifo write: @1699477123655096767 0x7f81e1c21414 509: java.security.AccessController::getContext() -> java.security.AccessControlContext
fifo write: @1699477123655142878 0x7f81e9b20fd4 595: java.math.MutableBigInteger::primitiveLeftShift(int) -> void
fifo write: @1699477123655383361 0x7f81e98820d3 604: java.math.MutableBigInteger::primitiveRightShift(int) -> void
fifo write: @1699477123655534603 0x7f81e1bec494 313: io.netty.channel.AbstractChannel::eventLoop() -> io.netty.channel.EventLoop
fifo write: @1699477123655738395 0x7f81e228fb34 984: io.netty.channel.AbstractChannelHandlerContext::executor() -> io.netty.util.concurrent.EventExecutor
fifo write: @1699477123657772562 0x7f81e93d9975 1919: java.math.MutableBigInteger::toBigInteger(int) -> java.math.BigInteger
fifo write: @1699477123662017286 0x7f81e93d7d70 2864: java.math.MutableBigInteger::subtract(java.math.MutableBigInteger) -> int
fifo write: @1699477123662462672 0x7f81e93d62f0 3180: java.math.MutableBigInteger::add(java.math.MutableBigInteger) -> void
fifo write: @1699477123680747967 0x7f81e23e3714 159: java.util.LinkedList::add(Object) -> boolean
fifo write: @1699477123681023511 0x7f81e9881dcc 6: java.security.AlgorithmParameters::getAlgorithm() -> String
fifo write: @1699477123681191563 0x7f81e988c0d7 35: java.util.Collections$UnmodifiableCollection$1::next() -> Object
fifo write: @1699477123681254204 0x7f81e1ad05d4 1131: java.util.LinkedList$ListItr::next() -> Object
fifo write: @1699477123681403196 0x7f81e2750314 339: java.util.LinkedList$ListItr::checkForComodification() -> void
fifo write: @1699477123681504587 0x7f81e1d3ac17 191: sun.security.ec.XECOperations::bitAt(byte[], int) -> int
fifo write: @1699477123681564198 0x7f81e9a36259 227: java.util.Collections$UnmodifiableCollection::contains(Object) -> boolean
fifo write: @1699477123681736220 0x7f81e22cea17 922: sun.security.util.math.intpoly.IntegerPolynomial25519::carryReduce(long[], long, long, long, long, long, long, long, long, long, long) -> void
fifo write: @1699477123681856922 0x7f81e1850e14 317: sun.security.util.math.intpoly.IntegerPolynomial::carryOut(long[], int) -> long
fifo write: @1699477123681921743 0x7f81e1aa0f74 2: sun.security.util.math.intpoly.IntegerPolynomial::carryValue(long) -> long
fifo write: @1699477123682011944 0x7f81e9a48373 140: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setSquare() -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477123682054334 0x7f81e22aed9c 540: sun.security.util.math.intpoly.IntegerPolynomial25519::reduce(long[]) -> void
fifo write: @1699477123682209056 0x7f81e1dfc487 753: sun.security.util.BitArray::clone() -> Object
fifo write: @1699477123682314278 0x7f81e2377eb4 651: sun.security.util.BitArray::<init>(sun.security.util.BitArray) -> void
fifo write: @1699477123682873455 0x7f81e1968694 483: sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement::<init>(sun.security.util.math.intpoly.IntegerPolynomial, long[], int) -> void
fifo write: @1699477123685232915 0x7f81e9178382 925: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.SmallValue) -> sun.security.util.math.intpoly.IntegerPolynomial$MutableElement
fifo write: @1699477123685606880 0x7f81e958cf82 929: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct(sun.security.util.math.SmallValue) -> sun.security.util.math.MutableIntegerModuloP
fifo write: @1699477123695110263 0x7f81e9cd420f 9448: java.math.BigInteger::oddModPow(java.math.BigInteger, java.math.BigInteger) -> java.math.BigInteger
fifo write: @1699477123706025513 0x7f81e9a4804c 6: java.security.cert.TrustAnchor::getTrustedCert() -> java.security.cert.X509Certificate
fifo write: @1699477123706763783 0x7f81e1ffd874 1690: java.security.MessageDigest::getDigestLength() -> int
fifo write: @1699477123706798483 0x7f81e2452794 240: java.security.MessageDigest$Delegate::engineGetDigestLength() -> int
fifo write: @1699477123706959555 0x7f81e1c2b314 428: java.util.Collections$SynchronizedMap::get(Object) -> Object
fifo write: @1699477123707053246 0x7f81e1eac3f4 267: java.net.IDN::isLabelSeparator(char) -> boolean
fifo write: @1699477123707624004 0x7f81e1b73194 47: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::fixed() -> sun.security.util.math.ImmutableIntegerModuloP
fifo write: @1699477123707778846 0x7f81e1d4180e 1083: sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::fixed() -> sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement
fifo write: @1699477123708926370 0x7f81e1e138eb 5948: java.math.MutableBigInteger::divideKnuth(java.math.MutableBigInteger, java.math.MutableBigInteger, boolean) -> java.math.MutableBigInteger
fifo write: @1699477123710874936 0x7f81e1b00017 288: jdk.internal.misc.Unsafe::putLongUnaligned(Object, long, long, boolean) -> void
fifo write: @1699477123711367062 0x7f81e290cbf3 2898: sun.security.provider.DigestBase::engineUpdate(byte[], int, int) -> void
fifo write: @1699477123711638405 0x7f81e92b496b 1236: sun.security.util.math.intpoly.IntegerPolynomialP256::square(long[], long[]) -> void
fifo write: @1699477123712602838 0x7f81e2141c0a 10575: java.lang.invoke.VarHandleGuards::guard_LIJ_V(java.lang.invoke.VarHandle, Object, int, long, java.lang.invoke.VarHandle$AccessDescriptor) -> void
fifo write: @1699477123712666669 0x7f81e1fc0b39 1140: java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle::set(java.lang.invoke.VarHandle, Object, int, long) -> void
fifo write: @1699477123712836991 0x7f81e245e55f 1078: jdk.internal.misc.Unsafe::putLongUnaligned(Object, long, long) -> void
fifo write: @1699477123719661319 0x7f81e9cd2813 2024: sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet(sun.security.ec.point.ProjectivePoint, int) -> sun.security.ec.point.ProjectivePoint$Mutable
fifo write: @1699477123733627849 0x7f81e1bff1e2 2293: sun.security.provider.SHA5::implCompress0(byte[], int) -> void
fifo write: @1699477123734194506 0x7f81e1f43194 31: com.sun.crypto.provider.AESCrypt::encryptBlock(byte[], int, byte[], int) -> void
fifo write: @1699477123734655602 0x7f81e23d3b16 2931: com.sun.crypto.provider.GHASH::processBlock(byte[], int, long[], long[]) -> void
fifo write: @1699477123734720473 0x7f81e1b90e74 324: com.sun.crypto.provider.CounterMode::increment(byte[]) -> void
fifo write: @1699477123864341212 0x7f81e17a1e97 1413: io.netty.channel.AbstractChannelHandlerContext::skipContext(io.netty.channel.AbstractChannelHandlerContext, io.netty.util.concurrent.EventExecutor, int, int) -> boolean
fifo write: @1699477123878445974 0x7f81e250f63f 4299: java.util.regex.Pattern::RemoveQEQuoting() -> void
fifo write: @1699477123878761488 0x7f81e269f4b7 1772: java.util.regex.Matcher::start(int) -> int
fifo write: @1699477123879753160 0x7f81e22650f4 39: StringLatin1::getChars(byte[], int, int, char[], int) -> void
fifo write: @1699477123914903143 0x7f81e98de54c 12: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields::lvProducerIndex() -> long
fifo write: @1699477123915439070 0x7f81e98de24c 6: io.netty.channel.AbstractChannelHandlerContext::name() -> String
fifo write: @1699477123915995907 0x7f81e1bb7374 23: io.netty.util.internal.PlatformDependent::putByte(Object, long, byte) -> void
fifo write: @1699477123916069428 0x7f81e25c08f4 259: io.netty.util.internal.PlatformDependent0::putByte(Object, long, byte) -> void
fifo write: @1699477123916583285 0x7f81e23d2317 1605: io.netty.util.internal.ObjectUtil::checkPositiveOrZero(int, String) -> int
fifo write: @1699477123916630405 0x7f81e1f0f214 23: jdk.internal.loader.NativeLibraries$NativeLibraryImpl::find(String) -> long
fifo write: @1699477123921506778 0x7f81e98ddecc 2: io.netty.buffer.PooledByteBuf::capacity() -> int
fifo write: @1699477123923678346 0x7f81e9936818 899: java.lang.invoke.MethodType$ConcurrentWeakInternSet::get(Object) -> Object
fifo write: @1699477123927030300 0x7f81e26e62f1 7387: com.mojang.serialization.codecs.KeyDispatchCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123930306352 0x7f81e2281b0e 119: com.mojang.serialization.codecs.OptionalFieldCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123930349952 0x7f81e2284774 87: ac$a::equals(Object, Object) -> boolean
fifo write: @1699477123930428463 0x7f81e2600811 132: com.mojang.serialization.Codec$16::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477123930479684 0x7f81e26dff93 110: com.mojang.serialization.Encoder$2$$Lambda$5286.0x00007f81609be7d0::apply(Object) -> Object
fifo write: @1699477123930560005 0x7f81e1ec728e 231: com.mojang.serialization.codecs.RecordCodecBuilder$2::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123930637156 0x7f81e271088e 85: com.mojang.serialization.MapEncoder$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123930676796 0x7f81e290eb94 240: aeo::createString(String) -> Object
fifo write: @1699477123930724257 0x7f81e1edac14 578: com.mojang.serialization.RecordBuilder$MapBuilder::append(Object, Object, Object) -> Object
fifo write: @1699477123930784778 0x7f81e291af94 232: com.mojang.serialization.RecordBuilder$MapBuilder::append(Object, Object, com.google.common.collect.ImmutableMap$Builder) -> com.google.common.collect.ImmutableMap$Builder
fifo write: @1699477123930830568 0x7f81e221ffd7 1259: com.mojang.serialization.MapLike$1$$Lambda$5288.0x00007f81609beeb0::apply(Object) -> Object
fifo write: @1699477123930876339 0x7f81e1966b97 897: com.mojang.serialization.MapLike$1::lambda$entries$0(java.util.Map$Entry) -> com.mojang.datafixers.util.Pair
fifo write: @1699477123930930060 0x7f81e216f094 230: com.mojang.serialization.RecordBuilder$AbstractUniversalBuilder$$Lambda$5270.0x00007f81609bc0c8::<init>(com.mojang.serialization.RecordBuilder$AbstractUniversalBuilder, Object) -> void
fifo write: @1699477123930982400 0x7f81e212c234 645: com.mojang.serialization.RecordBuilder::add(String, com.mojang.serialization.DataResult) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123931032061 0x7f81e2257937 675: com.mojang.serialization.RecordBuilder$AbstractUniversalBuilder::lambda$add$1(Object, Object, Object) -> Object
fifo write: @1699477123931064191 0x7f81e2215e14 348: ri$$Lambda$5289.0x00007f81609bf0f0::accept(Object) -> void
fifo write: @1699477123931114782 0x7f81e1ea1137 793: com.mojang.serialization.RecordBuilder$AbstractUniversalBuilder$$Lambda$5270.0x00007f81609bc0c8::apply(Object, Object) -> Object
fifo write: @1699477123931142332 0x7f81e299df14 240: aeo::createInt(int) -> Object
fifo write: @1699477123931204073 0x7f81e24b97ff 1465: com.mojang.serialization.RecordBuilder$AbstractUniversalBuilder::add(Object, com.mojang.serialization.DataResult) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123931241654 0x7f81e204feb7 822: com.mojang.serialization.RecordBuilder$MapBuilder::initBuilder() -> Object
fifo write: @1699477123931288914 0x7f81e22e4dd4 1987: ri::a(java.util.List, qw, com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477123931333965 0x7f81e245b0b4 728: com.mojang.serialization.RecordBuilder$MapBuilder::initBuilder() -> com.google.common.collect.ImmutableMap$Builder
fifo write: @1699477123931386925 0x7f81e9a19789 174: com.mojang.serialization.Encoder::encodeStart(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477123931412866 0x7f81e23182f4 111: qu::a(boolean) -> qu
fifo write: @1699477123931468066 0x7f81e1f1ea94 597: com.mojang.serialization.RecordBuilder$MapBuilder::build(com.google.common.collect.ImmutableMap$Builder, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477123931519457 0x7f81e1abd134 943: com.mojang.serialization.RecordBuilder$MapBuilder::build(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477123931574488 0x7f81e9a193d7 35: com.mojang.serialization.Codec$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477123931634789 0x7f81e25c790f 2209: aeo::mapBuilder() -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123931690479 0x7f81e9d1aef0 543: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5287.0x00007f81609bea18::apply(Object) -> Object
fifo write: @1699477123931750270 0x7f81e238d397 2018: com.mojang.serialization.RecordBuilder$AbstractUniversalBuilder::<init>(com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477123931800681 0x7f81e21412ca 447: com.mojang.serialization.MapLike::forMap(java.util.Map, com.mojang.serialization.DynamicOps) -> com.mojang.serialization.MapLike
fifo write: @1699477123931844931 0x7f81e2255a14 340: com.mojang.serialization.MapLike$1::<init>(java.util.Map, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477123931890752 0x7f81e2281294 240: aeo::mergeToMap(Object, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477123931940002 0x7f81e2133e40 803: com.mojang.serialization.DynamicOps::mergeToMap(Object, java.util.Map) -> com.mojang.serialization.DataResult
fifo write: @1699477123932001293 0x7f81e2775a37 2115: com.mojang.serialization.RecordBuilder$MapBuilder::<init>(com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477123932046564 0x7f81e2290914 372: ri::mergeToMap(Object, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477123932077934 0x7f81e9d1aa2c 30: cqz::g(cqz) -> java.util.Optional
fifo write: @1699477123932108675 0x7f81e99ae6ac 30: cqz::h(cqz) -> java.util.Optional
fifo write: @1699477123932139775 0x7f81e99ae3cc 6: bhn::c() -> String
fifo write: @1699477123932615831 0x7f81e2325214 185: aeu$1$$Lambda$4106.0x00007f8160896fb8::<init>(aeu$b) -> void
fifo write: @1699477123932713122 0x7f81e99ae0cc 6: aeu$a::a() -> hh
fifo write: @1699477123932774143 0x7f81e247909f 2058: aeu$1::a(aev) -> java.util.Optional
fifo write: @1699477123932950295 0x7f81e2965657 7746: ri::a(rq, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477123932972876 0x7f81e99adc4c 2: hs$a::b() -> int
fifo write: @1699477123932997156 0x7f81e9ae3b4c 6: hs$a::a() -> aev
fifo write: @1699477123933049127 0x7f81e9ae3405 482: com.mojang.serialization.RecordBuilder$AbstractBuilder::lambda$build$0(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477123933075267 0x7f81e9ae2fcc 6: hs$a::c() -> Object
fifo write: @1699477123933097437 0x7f81e241aff4 97: uh::g() -> boolean
fifo write: @1699477123933442812 0x7f81e2429111 96: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$$Lambda$184.0x00007f8160187660::apply(Object) -> Object
fifo write: @1699477123933953548 0x7f81e26f8897 106: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$$Lambda$290.0x00007f81601b6d20::apply(Object) -> Object
fifo write: @1699477123934018589 0x7f81e26e59f5 111: com.mojang.serialization.codecs.RecordCodecBuilder$Instance::lambda$map$9(com.mojang.serialization.codecs.RecordCodecBuilder, java.util.function.Function, Object) -> com.mojang.serialization.MapEncoder
fifo write: @1699477123934053850 0x7f81e2302294 240: aeo::createMap(java.util.stream.Stream) -> Object
fifo write: @1699477123934119810 0x7f81e2354094 469: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$9::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123934160221 0x7f81e245bb94 141: com.mojang.serialization.codecs.RecordCodecBuilder$$Lambda$181.0x00007f8160186f90::apply(Object) -> Object
fifo write: @1699477123934332653 0x7f81e23e92fa 2091: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$9::<init>(com.mojang.serialization.codecs.RecordCodecBuilder$Instance, com.mojang.serialization.codecs.RecordCodecBuilder, Object, java.util.function.Function) -> void
fifo write: @1699477123934474585 0x7f81e93d5fcc 5: com.google.gson.stream.JsonWriter::setLenient(boolean) -> void
fifo write: @1699477123934777279 0x7f81e93d560f 751: com.mojang.serialization.DynamicOps::mergeToPrimitive(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477123935060223 0x7f81e2501794 144: io.netty.buffer.AbstractReferenceCountedByteBuf$1::unsafeOffset() -> long
fifo write: @1699477123935243865 0x7f81e24a4677 358: io.netty.util.internal.PlatformDependent::getInt(Object, long) -> int
fifo write: @1699477123935317596 0x7f81e2531df4 264: io.netty.util.internal.PlatformDependent0::getInt(Object, long) -> int
fifo write: @1699477123935423427 0x7f81e93d52cc 2: io.netty.buffer.AbstractByteBuf::writerIndex() -> int
fifo write: @1699477123935484518 0x7f81e25791f4 90: io.netty.buffer.IntPriorityQueue::isEmpty() -> boolean
fifo write: @1699477123935543939 0x7f81e25a5594 47: io.netty.buffer.AbstractReferenceCountedByteBuf::isAccessible() -> boolean
fifo write: @1699477123935604000 0x7f81e25aab34 502: io.netty.buffer.AbstractByteBuf::ensureAccessible() -> void
fifo write: @1699477123935768832 0x7f81e182fc77 1593: io.netty.util.internal.ReferenceCountUpdater::isLiveNonVolatile(io.netty.util.ReferenceCounted) -> boolean
fifo write: @1699477123935972954 0x7f81e93d3f4a 1841: com.mojang.serialization.codecs.PrimitiveCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477123936038995 0x7f81e202fcf4 3: io.netty.buffer.PooledUnsafeDirectByteBuf::addr(int) -> long
fifo write: @1699477123936097856 0x7f81e27a4ed4 106: io.netty.util.internal.MathUtil::isOutOfBounds(int, int, int) -> boolean
fifo write: @1699477123936315229 0x7f81e26bae38 171: qw::a(String, rq, java.io.DataOutput) -> void
fifo write: @1699477123936844536 0x7f81e24878e6 8409: io.netty.buffer.AbstractByteBuf::ensureWritable0(int) -> void
fifo write: @1699477123936925707 0x7f81e26da719 242: io.netty.buffer.AbstractByteBuf::writeByte(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123936984097 0x7f81e2842594 160: sun.misc.Unsafe::putByte(long, byte) -> void
fifo write: @1699477123937048868 0x7f81e26edaf7 264: io.netty.util.internal.PlatformDependent0::putByte(long, byte) -> void
fifo write: @1699477123937113739 0x7f81e26ee877 355: io.netty.util.internal.PlatformDependent::putByte(long, byte) -> void
fifo write: @1699477123937176660 0x7f81e2705577 449: io.netty.buffer.UnsafeByteBufUtil::setByte(long, int) -> void
fifo write: @1699477123937234971 0x7f81e2803994 239: io.netty.buffer.AbstractByteBuf::checkIndex0(int, int) -> void
fifo write: @1699477123937308652 0x7f81e1fc1c94 87: io.netty.buffer.AbstractByteBuf::ensureWritable(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123937375252 0x7f81e22bc337 644: io.netty.buffer.PooledUnsafeDirectByteBuf::_setByte(int, int) -> void
fifo write: @1699477123937446033 0x7f81e215c561 939: io.netty.buffer.AbstractByteBuf::checkIndex(int, int) -> void
fifo write: @1699477123937507814 0x7f81e215b07f 60: io.netty.util.internal.PlatformDependent::copyMemory(byte[], int, long, long) -> void
fifo write: @1699477123937582475 0x7f81e21d2a94 39: sun.misc.Unsafe::copyMemory(Object, long, Object, long, long) -> void
fifo write: @1699477123937669276 0x7f81e2285483 316: io.netty.util.internal.PlatformDependent0::copyMemory(Object, long, Object, long, long) -> void
fifo write: @1699477123937747537 0x7f81e23d9fb9 580: io.netty.buffer.AbstractByteBuf::writeBytes(byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123937823298 0x7f81e247bd23 208: io.netty.buffer.PooledUnsafeDirectByteBuf::setBytes(int, byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123937882529 0x7f81e2583a14 334: io.netty.buffer.ByteBufOutputStream::write(byte[], int, int) -> void
fifo write: @1699477123937949500 0x7f81e2588794 358: so::writeBytes(byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123938034581 0x7f81e25d94fd 1751: io.netty.buffer.ByteBufOutputStream::writeUTF(String) -> void
fifo write: @1699477123938093052 0x7f81e25a5e94 253: so::b(byte[], int, int) -> so
fifo write: @1699477123938149832 0x7f81e26fad14 240: io.netty.buffer.ByteBufOutputStream::writeByte(int) -> void
fifo write: @1699477123938215843 0x7f81e24fad94 342: so::writeByte(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123938286234 0x7f81e253d22e 197: ro::a(java.io.DataOutput) -> void
fifo write: @1699477123938427676 0x7f81e2781000 5885: io.netty.buffer.AbstractByteBuf::checkRangeBounds(String, int, int, int) -> void
fifo write: @1699477123938557738 0x7f81e225b6c5 3078: io.netty.buffer.UnsafeByteBufUtil::setBytes(io.netty.buffer.AbstractByteBuf, long, int, byte[], int, int) -> void
fifo write: @1699477123938635769 0x7f81e22a3f18 614: rc::a(java.io.DataOutput) -> void
fifo write: @1699477123939944876 0x7f81e2701899 248: io.netty.buffer.AbstractByteBuf::writeInt(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123940007916 0x7f81e2334b14 183: io.netty.buffer.PooledUnsafeDirectByteBuf::_setInt(int, int) -> void
fifo write: @1699477123940097678 0x7f81e2357694 160: sun.misc.Unsafe::putInt(long, int) -> void
fifo write: @1699477123940156598 0x7f81e2411077 355: io.netty.util.internal.PlatformDependent::putInt(long, int) -> void
fifo write: @1699477123940214729 0x7f81e241eff7 264: io.netty.util.internal.PlatformDependent0::putInt(long, int) -> void
fifo write: @1699477123940274820 0x7f81e25a9f17 627: io.netty.buffer.UnsafeByteBufUtil::setInt(long, int) -> void
fifo write: @1699477123940514643 0x7f81e25e4214 240: io.netty.buffer.ByteBufOutputStream::writeInt(int) -> void
fifo write: @1699477123940585224 0x7f81e2751694 253: so::p(int) -> so
fifo write: @1699477123940650695 0x7f81e1aea094 358: so::writeInt(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123941103211 0x7f81e2357291 26: qu::a(java.io.DataOutput) -> void
fifo write: @1699477123941849440 0x7f81e9e23aef 6217: java.util.HashMap::putVal(int, Object, Object, boolean, boolean) -> Object
fifo write: @1699477123943265428 0x7f81e9e26eb6 3536: com.mojang.serialization.codecs.FieldEncoder::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123945346035 0x7f81e9e297b5 5662: java.util.Collections$SetFromMap::remove(Object) -> boolean
fifo write: @1699477123946198906 0x7f81e9e2c5cc 6: hi$c::e() -> java.util.List
fifo write: @1699477123946382659 0x7f81e1e70f14 240: hm::a(Object) -> int
fifo write: @1699477123946498250 0x7f81e1f35014 195: it.unimi.dsi.fastutil.ints.IntArrayList::add(int) -> boolean
fifo write: @1699477123946632642 0x7f81e1b5473e 1944: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::getInt(Object) -> int
fifo write: @1699477123946707253 0x7f81e22c1db4 770: it.unimi.dsi.fastutil.ints.IntArrayList::grow(int) -> void
fifo write: @1699477123947075288 0x7f81e9e2c8cc 6: aqh::b() -> aew
fifo write: @1699477123947151139 0x7f81e1d4e779 1167: gy::a(Object) -> int
fifo write: @1699477123947769197 0x7f81e2435c94 328: it.unimi.dsi.fastutil.ints.AbstractIntList::<init>() -> void
fifo write: @1699477123947903838 0x7f81e271a3df 4665: aqk::a(hq, java.util.Map, com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477123947979199 0x7f81e270e894 348: aqk$$Lambda$7667.0x00007f8160c5cd00::accept(Object) -> void
fifo write: @1699477123948067360 0x7f81e2492a37 1393: hm::c(java.util.Map$Entry) -> com.mojang.datafixers.util.Pair
fifo write: @1699477123948153472 0x7f81e2258577 1755: hm$$Lambda$7666.0x00007f8160c5cac0::apply(Object) -> Object
fifo write: @1699477123948315294 0x7f81e22fbdf7 1012: it.unimi.dsi.fastutil.ints.IntArrayList::initArrayFromCapacity(int) -> void
fifo write: @1699477123948714789 0x7f81e26b8834 1458: io.netty.util.internal.InternalThreadLocalMap::slowGet() -> io.netty.util.internal.InternalThreadLocalMap
fifo write: @1699477123948846791 0x7f81e2716df3 3492: io.netty.util.internal.InternalThreadLocalMap::get() -> io.netty.util.internal.InternalThreadLocalMap
fifo write: @1699477123949070403 0x7f81e1e70a74 282: io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess::lvRefElement(Object[], long) -> Object
fifo write: @1699477123949857434 0x7f81e26b0794 201: io.netty.util.internal.InternalThreadLocalMap::indexedVariable(int) -> Object
fifo write: @1699477123949958635 0x7f81e1f34c14 151: sun.misc.Unsafe::putOrderedLong(Object, long, long) -> void
fifo write: @1699477123950136527 0x7f81e26b0294 227: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields::lpConsumerIndex() -> long
fifo write: @1699477123950190848 0x7f81e2435894 39: so::c(int) -> so
fifo write: @1699477123950270429 0x7f81e26b9b1e 617: tc::a(io.netty.buffer.ByteBuf, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123950335300 0x7f81e270e494 111: sun.misc.Unsafe::putOrderedObject(Object, long, Object) -> void
fifo write: @1699477123950411351 0x7f81e26d50fa 481: io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess::soRefElement(Object[], long, Object) -> void
fifo write: @1699477123950522342 0x7f81e1f43c17 4010: io.netty.util.concurrent.FastThreadLocal::get() -> Object
fifo write: @1699477123950576733 0x7f81e26fc314 212: so$$Lambda$7673.0x00007f8160c5dcd0::accept(int) -> void
fifo write: @1699477123950649224 0x7f81e26d4c94 200: java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl::accessCheck(Object) -> void
fifo write: @1699477123950735515 0x7f81e26fbe14 31: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::relaxedPoll() -> Object
fifo write: @1699477123950853396 0x7f81e1ca0cb4 481: java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl::lazySet(Object, int) -> void
fifo write: @1699477123951053219 0x7f81e1c54c1f 1114: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::relaxedPoll() -> Object
fifo write: @1699477123951113940 0x7f81e9e2d54c 12: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields::lvProducerLimit() -> long
fifo write: @1699477123951163570 0x7f81e9e2d84c 2: io.netty.buffer.AbstractByteBuf::readerIndex() -> int
fifo write: @1699477123951339753 0x7f81e9e2de4c 12: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField::lvProducerIndex() -> long
fifo write: @1699477123951398473 0x7f81e2423354 31: io.netty.util.internal.PlatformDependent::hasUnsafe() -> boolean
fifo write: @1699477123951525205 0x7f81e2451f74 30: sun.misc.Unsafe::compareAndSwapLong(Object, long, long, long) -> boolean
fifo write: @1699477123951589836 0x7f81e248b374 30: jdk.internal.misc.Unsafe::weakCompareAndSetLongRelease(Object, long, long, long) -> boolean
fifo write: @1699477123951646997 0x7f81e9e2e14c 6: io.netty.util.Recycler$DefaultHandle::get() -> Object
fifo write: @1699477123951791389 0x7f81e21d64e7 1268: java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite::weakCompareAndSetRelease(java.lang.invoke.VarHandle, Object, long, long) -> boolean
fifo write: @1699477123951855719 0x7f81e23e795c 1166: java.util.concurrent.atomic.LongAdder::add(long) -> void
fifo write: @1699477123951926900 0x7f81e24d2d9f 1832: java.util.concurrent.atomic.Striped64::casBase(long, long) -> boolean
fifo write: @1699477123952113253 0x7f81e298cc0b 7320: java.lang.invoke.VarHandleGuards::guard_LJJ_Z(java.lang.invoke.VarHandle, Object, long, long, java.lang.invoke.VarHandle$AccessDescriptor) -> boolean
fifo write: @1699477123952214684 0x7f81e1f494f4 260: io.netty.buffer.PoolThreadCache::cache(io.netty.buffer.PoolThreadCache$MemoryRegionCache[], int) -> io.netty.buffer.PoolThreadCache$MemoryRegionCache
fifo write: @1699477123952332116 0x7f81e22f8054 939: io.netty.buffer.SizeClasses::size2SizeIdx(int) -> int
fifo write: @1699477123952401176 0x7f81e9e2e44c 12: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField::lvProducerLimit() -> long
fifo write: @1699477123952466367 0x7f81e1ca0894 93: io.netty.util.internal.ObjectPool$RecyclerObjectPool::get() -> Object
fifo write: @1699477123952576919 0x7f81e26af454 975: io.netty.buffer.PoolThreadCache::cacheForSmall(io.netty.buffer.PoolArena, int) -> io.netty.buffer.PoolThreadCache$MemoryRegionCache
fifo write: @1699477123952710310 0x7f81e1f48f94 167: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int) -> int
fifo write: @1699477123952805922 0x7f81e2498714 23: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int) -> int
fifo write: @1699477123952883003 0x7f81e25e3e74 5: io.netty.buffer.AbstractByteBuf::readableBytes() -> int
fifo write: @1699477123953004654 0x7f81e1478054 1394: io.netty.util.Recycler$LocalPool::claim() -> io.netty.util.Recycler$DefaultHandle
fifo write: @1699477123953057065 0x7f81e9e2ea4c 2: io.netty.buffer.AbstractByteBuf::maxCapacity(int) -> void
fifo write: @1699477123953122736 0x7f81e258e777 463: io.netty.util.internal.PlatformDependent::directBufferAddress(java.nio.ByteBuffer) -> long
fifo write: @1699477123953187517 0x7f81e258e1f4 265: io.netty.util.internal.PlatformDependent0::getLong(Object, long) -> long
fifo write: @1699477123953255577 0x7f81e24bd1f7 372: io.netty.util.internal.PlatformDependent0::directBufferAddress(java.nio.ByteBuffer) -> long
fifo write: @1699477123953419870 0x7f81e28dcd85 2842: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil::drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int) -> int
fifo write: @1699477123953489550 0x7f81e9e2ed4c 6: io.netty.buffer.PooledByteBuf::alloc() -> io.netty.buffer.ByteBufAllocator
fifo write: @1699477123953574302 0x7f81e24bce14 144: io.netty.buffer.AbstractReferenceCountedByteBuf$1::updater() -> java.util.concurrent.atomic.AtomicIntegerFieldUpdater
fifo write: @1699477123953698983 0x7f81e1e56897 5080: io.netty.util.Recycler::get() -> Object
fifo write: @1699477123953838185 0x7f81e254181a 268: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields::soConsumerIndex(long) -> void
fifo write: @1699477123953904956 0x7f81e2541117 190: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields::casProducerIndex(long, long) -> boolean
fifo write: @1699477123953969167 0x7f81e26cc3b9 715: io.netty.buffer.PooledUnsafeDirectByteBuf::memoryAddress() -> long
fifo write: @1699477123954022857 0x7f81e9e2f04c 2: it.unimi.dsi.fastutil.ints.IntArrayList::size() -> int
fifo write: @1699477123954134849 0x7f81e276ec1e 471: it.unimi.dsi.fastutil.ints.IntArrayList::forEach(java.util.function.IntConsumer) -> void
fifo write: @1699477123954222940 0x7f81e2608d29 1510: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::offer(Object) -> boolean
fifo write: @1699477123954332561 0x7f81e25378a8 4098: io.netty.buffer.ByteBufUtil::unsafeWriteUtf8(byte[], long, int, CharSequence, int, int) -> int
fifo write: @1699477123954389302 0x7f81e26cbf14 31: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::offer(Object) -> boolean
fifo write: @1699477123954447933 0x7f81e276e694 289: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::relaxedOffer(Object) -> boolean
fifo write: @1699477123954519654 0x7f81e1873394 167: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::relaxedOffer(Object) -> boolean
fifo write: @1699477123954609525 0x7f81e1872e34 361: io.netty.util.Recycler$DefaultHandle::unguardedToAvailable() -> void
fifo write: @1699477123954674166 0x7f81e1c13334 366: io.netty.util.Recycler$DefaultHandle::unguardedRecycle(Object) -> void
fifo write: @1699477123954772537 0x7f81e2466e61 2594: io.netty.util.Recycler$LocalPool::release(io.netty.util.Recycler$DefaultHandle, boolean) -> void
fifo write: @1699477123954901369 0x7f81e1c12ed4 108: io.netty.buffer.PoolChunk::isSubpage(long) -> boolean
fifo write: @1699477123955156212 0x7f81e1e6e014 359: java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl::compareAndSet(Object, int, int) -> boolean
fifo write: @1699477123955431896 0x7f81e1e6dc14 47: io.netty.buffer.PooledByteBuf::init(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, int, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477123955600958 0x7f81e1ffa75c 523: io.netty.buffer.PoolThreadCache::allocate(io.netty.buffer.PoolThreadCache$MemoryRegionCache, io.netty.buffer.PooledByteBuf, int) -> boolean
fifo write: @1699477123955695589 0x7f81e2135fd9 778: io.netty.buffer.PoolArena::allocate(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf, int) -> void
fifo write: @1699477123955748480 0x7f81e2164894 301: io.netty.buffer.PoolChunk::incrementPinnedMemory(int) -> void
fifo write: @1699477123955855591 0x7f81e2419abb 976: io.netty.buffer.PooledByteBuf::init0(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, int, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477123955958642 0x7f81e1ffa294 95: io.netty.buffer.PooledUnsafeDirectByteBuf::init(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, int, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477123956020903 0x7f81e2164414 266: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField::lpConsumerIndex() -> long
fifo write: @1699477123956110934 0x7f81e24babdc 1285: io.netty.buffer.PoolThreadCache$MemoryRegionCache::allocate(io.netty.buffer.PooledByteBuf, int, io.netty.buffer.PoolThreadCache) -> boolean
fifo write: @1699477123956186425 0x7f81e262fa1f 1557: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue::poll() -> Object
fifo write: @1699477123956249096 0x7f81e26adf37 780: io.netty.buffer.PooledUnsafeDirectByteBuf::initMemoryAddress() -> void
fifo write: @1699477123956302377 0x7f81e26ad994 309: io.netty.buffer.PoolChunk::decrementPinnedMemory(int) -> void
fifo write: @1699477123956417218 0x7f81e2135bf4 23: io.netty.util.internal.PlatformDependent::copyMemory(long, long, long) -> void
fifo write: @1699477123956469829 0x7f81e2712e9d 54: jdk.internal.misc.Unsafe::copyMemory(long, long, long) -> void
fifo write: @1699477123956510679 0x7f81e2712a94 39: sun.misc.Unsafe::copyMemory(long, long, long) -> void
fifo write: @1699477123956583610 0x7f81e271257d 306: io.netty.util.internal.PlatformDependent0::copyMemory(long, long, long) -> void
fifo write: @1699477123956705282 0x7f81e22913c7 2430: io.netty.buffer.PoolArena::free(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477123956789473 0x7f81e2720323 208: io.netty.buffer.PooledUnsafeDirectByteBuf::setBytes(int, io.netty.buffer.ByteBuf, int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123956870844 0x7f81e271fab9 580: io.netty.buffer.AbstractByteBuf::writeBytes(io.netty.buffer.ByteBuf, int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123956944055 0x7f81e22d02b4 575: io.netty.buffer.AbstractByteBufAllocator::directBuffer(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123957011526 0x7f81e22cfb94 259: io.netty.buffer.AbstractByteBuf::readerIndex(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123957094827 0x7f81e26ac262 839: io.netty.buffer.AbstractByteBuf::writeBytes(io.netty.buffer.ByteBuf, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123957179258 0x7f81e26b66f9 1239: io.netty.buffer.AbstractByteBuf::writeBytes(io.netty.buffer.ByteBuf) -> io.netty.buffer.ByteBuf
fifo write: @1699477123957238279 0x7f81e26abd14 212: so::a(String) -> so
fifo write: @1699477123957298370 0x7f81e1ec6394 39: so::a(String, int) -> so
fifo write: @1699477123957467762 0x7f81e23be2e0 5392: io.netty.buffer.AbstractByteBuf::checkIndexBounds(int, int, int) -> void
fifo write: @1699477123957607013 0x7f81e2494265 4706: io.netty.buffer.UnsafeByteBufUtil::setBytes(io.netty.buffer.AbstractByteBuf, long, int, io.netty.buffer.ByteBuf, int, int) -> void
fifo write: @1699477123957705035 0x7f81e22d2925 3206: tb::a(io.netty.buffer.ByteBuf, CharSequence, int) -> void
fifo write: @1699477123957874787 0x7f81e2533557 5094: io.netty.buffer.AbstractByteBuf::checkReadableBounds(io.netty.buffer.ByteBuf, int) -> void
fifo write: @1699477123957943628 0x7f81e2493a97 450: so::a(so$b, so$b, Object, Object) -> void
fifo write: @1699477123957988318 0x7f81e1ec5cb7 576: so$$Lambda$7670.0x00007f8160c5d3e8::accept(Object, Object) -> void
fifo write: @1699477123958563266 0x7f81e9e302f3 7944: rb::a(java.io.DataOutput) -> void
fifo write: @1699477123958661167 0x7f81e9e3413f 4948: com.sun.crypto.provider.AESCrypt::implEncryptBlock(byte[], int, byte[], int) -> void
fifo write: @1699477123958750928 0x7f81e1870d9c 1989: so::a(it.unimi.dsi.fastutil.ints.IntList) -> void
fifo write: @1699477123958900150 0x7f81e21652bc 2405: io.netty.buffer.PoolThreadCache::cache(io.netty.buffer.PoolArena, int, io.netty.buffer.PoolArena$SizeClass) -> io.netty.buffer.PoolThreadCache$MemoryRegionCache
fifo write: @1699477123959014911 0x7f81e9e363d0 43: io.netty.buffer.AbstractReferenceCountedByteBuf::isAccessible() -> boolean
fifo write: @1699477123959107012 0x7f81e23c6537 2506: aqk$a$$Lambda$7672.0x00007f8160c5d878::accept(Object, Object) -> void
fifo write: @1699477123959174423 0x7f81e9e3675c 59: io.netty.util.internal.ReferenceCountUpdater::isLiveNonVolatile(io.netty.util.ReferenceCounted) -> boolean
fifo write: @1699477123966018121 0x7f81e2159494 737: io.netty.buffer.PoolThreadCache$MemoryRegionCache::newEntry(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int) -> io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry
fifo write: @1699477123966116283 0x7f81e2254434 768: io.netty.buffer.PoolThreadCache$MemoryRegionCache::add(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int) -> boolean
fifo write: @1699477123966210584 0x7f81e9e370dc 11: com.mojang.serialization.codecs.RecordCodecBuilder::unbox(com.mojang.datafixers.kinds.App) -> com.mojang.serialization.codecs.RecordCodecBuilder
fifo write: @1699477123966296505 0x7f81e2253e14 247: io.netty.buffer.PoolArena::allocate(io.netty.buffer.PoolThreadCache, int, int) -> io.netty.buffer.PooledByteBuf
fifo write: @1699477123966365686 0x7f81e23cb7d4 1231: io.netty.buffer.AbstractByteBufAllocator::toLeakAwareBuffer(io.netty.buffer.ByteBuf) -> io.netty.buffer.ByteBuf
fifo write: @1699477123966435537 0x7f81e247f557 826: io.netty.buffer.PooledByteBuf::reuse(int) -> void
fifo write: @1699477123966515078 0x7f81e2532db4 385: io.netty.util.internal.ReferenceCountUpdater::resetRefCnt(io.netty.util.ReferenceCounted) -> void
fifo write: @1699477123966917133 0x7f81e9e37dd4 8808: qw::a(String, rq, java.io.DataOutput) -> void
fifo write: @1699477123966965264 0x7f81e1ec58f4 5: io.netty.buffer.AbstractByteBuf::setIndex0(int, int) -> void
fifo write: @1699477123966991694 0x7f81e2164074 13: io.netty.buffer.AbstractByteBuf::discardMarks() -> void
fifo write: @1699477123967022234 0x7f81e2158db4 474: io.netty.buffer.AbstractReferenceCountedByteBuf::resetRefCnt() -> void
fifo write: @1699477123967120126 0x7f81e26c8d3f 7087: so::a(aew) -> so
fifo write: @1699477123967471380 0x7f81e9e3cbfa 11072: java.io.DataOutputStream::writeUTF(String, java.io.DataOutput) -> int
fifo write: @1699477123967527751 0x7f81e2482f43 571: io.netty.buffer.PoolChunk::initBufWithSubpage(io.netty.buffer.PooledByteBuf, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477123967614592 0x7f81e263abb7 7097: aqk$a$$Lambda$7671.0x00007f8160c5d620::accept(Object, Object) -> void
fifo write: @1699477123967687553 0x7f81e2544057 1036: io.netty.buffer.PoolThreadCache::allocateSmall(io.netty.buffer.PoolArena, io.netty.buffer.PooledByteBuf, int, int) -> boolean
fifo write: @1699477123967755194 0x7f81e247ef97 190: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField::casProducerIndex(long, long) -> boolean
fifo write: @1699477123967860185 0x7f81e26a806f 7743: io.netty.buffer.PoolArena::tcacheAllocateSmall(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf, int, int) -> void
fifo write: @1699477123967923676 0x7f81e26a1a57 799: io.netty.buffer.PoolThreadCache::add(io.netty.buffer.PoolArena, io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolArena$SizeClass) -> boolean
fifo write: @1699477123968006047 0x7f81e251ec97 3376: io.netty.buffer.PooledByteBufAllocator::newDirectBuffer(int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123968034817 0x7f81e2482834 441: io.netty.buffer.AbstractReferenceCountedByteBuf::release() -> boolean
fifo write: @1699477123968117859 0x7f81e25ed781 1054: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue::offer(Object) -> boolean
fifo write: @1699477123968158649 0x7f81e9e428d1 449: java.util.Formatter::<init>(java.util.Locale, Appendable) -> void
fifo write: @1699477123968191759 0x7f81e9e42e96 329: io.netty.buffer.AbstractByteBuf::ensureWritable0(int) -> void
fifo write: @1699477123968234310 0x7f81e9e43718 399: io.netty.buffer.AbstractByteBuf::writeByte(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123968282521 0x7f81e2713dd7 1357: io.netty.buffer.PooledUnsafeDirectByteBuf::newInstance(int) -> io.netty.buffer.PooledUnsafeDirectByteBuf
fifo write: @1699477123968324001 0x7f81e18bac7d 1658: io.netty.buffer.AbstractByteBufAllocator::buffer(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477123968374272 0x7f81e25b5817 1559: io.netty.buffer.PoolArena$DirectArena::newByteBuf(int) -> io.netty.buffer.PooledByteBuf
fifo write: @1699477123968426873 0x7f81e253f5cf 2886: io.netty.buffer.ByteBufUtil::reserveAndWriteUtf8Seq(io.netty.buffer.ByteBuf, CharSequence, int, int, int) -> int
fifo write: @1699477123968475843 0x7f81e2646640 2207: io.netty.buffer.ByteBufUtil::writeUtf8(io.netty.buffer.AbstractByteBuf, int, int, CharSequence, int, int) -> int
fifo write: @1699477123968512994 0x7f81e26a1514 307: io.netty.util.internal.ReferenceCountUpdater::tryFinalRelease0(io.netty.util.ReferenceCounted, int) -> boolean
fifo write: @1699477123968567414 0x7f81e2641081 1272: io.netty.util.internal.ReferenceCountUpdater::release(io.netty.util.ReferenceCounted) -> boolean
fifo write: @1699477123968597985 0x7f81e26efe94 231: io.netty.buffer.AbstractReferenceCountedByteBuf::handleRelease(boolean) -> boolean
fifo write: @1699477123968640045 0x7f81e26ef8f4 380: io.netty.buffer.ByteBufUtil::writeUtf8(io.netty.buffer.ByteBuf, CharSequence) -> int
fifo write: @1699477123968671286 0x7f81e26dc834 758: io.netty.buffer.PooledByteBuf::deallocate() -> void
fifo write: @1699477123968736627 0x7f81e1b8c637 4387: io.netty.buffer.AbstractByteBufAllocator::validate(int, int) -> void
fifo write: @1699477123968779437 0x7f81e2722bf7 1310: io.netty.util.internal.ReferenceCountUpdater::nonVolatileRawCnt(io.netty.util.ReferenceCounted) -> int
fifo write: @1699477123968842018 0x7f81e9e44078 741: com.mojang.serialization.RecordBuilder$AbstractBuilder::withErrorsFrom(com.mojang.serialization.DataResult) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477123968853198 0x7f81e8bfd488 27: vtable stub
fifo write: @1699477123968863858 0x7f81e8bfd4b8 27: vtable stub
fifo write: @1699477123968874048 0x7f81e8bfd4e8 27: vtable stub
fifo write: @1699477123968884448 0x7f81e8bfd518 27: vtable stub
fifo write: @1699477123968919999 0x7f81e9e44a4c 6: io.netty.channel.DefaultChannelHandlerContext::handler() -> io.netty.channel.ChannelHandler
fifo write: @1699477123968930759 0x7f81e8bfd548 27: vtable stub
fifo write: @1699477123970073454 0x7f81e9e44f7c 11460: com.mojang.serialization.MapCodec$MapCodecCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477123979725368 0x7f81e2764914 199: io.netty.util.concurrent.AbstractEventExecutor::inEventLoop() -> boolean
fifo write: @1699477123979771289 0x7f81e2543bf4 94: io.netty.util.concurrent.SingleThreadEventExecutor::inEventLoop(Thread) -> boolean
fifo write: @1699477123979982542 0x7f81e28f927e 1404: java.lang.invoke.MethodHandle::asCollectorChecks(Class, int, int) -> boolean
fifo write: @1699477123980947664 0x7f81e8bf8980 480: I2C/C2I adapters(0xbb7e7e7e66)
fifo write: @1699477123980961244 0x7f81e8bf8680 464: I2C/C2I adapters(0xbbb6aa)
fifo write: @1699477123984588490 0x7f81e9e4b709 323: java.util.AbstractList::add(Object) -> boolean
fifo write: @1699477123986534265 0x7f81e9e4bdb1 686: com.mojang.serialization.MapCodec::forGetter(java.util.function.Function) -> com.mojang.serialization.codecs.RecordCodecBuilder
fifo write: @1699477123988690813 0x7f81e215715d 2317: com.google.gson.internal.LinkedTreeMap::rebalance(com.google.gson.internal.LinkedTreeMap$Node, boolean) -> void
fifo write: @1699477123990639148 0x7f81e8bf6e90 168: itable stub
fifo write: @1699477123991624101 0x7f81e9e4c64c 6: java.time.format.DateTimeFormatter::getDecimalStyle() -> java.time.format.DecimalStyle
fifo write: @1699477123991788163 0x7f81e9e4c94c 3: java.time.format.DateTimeParseContext::isStrict() -> boolean
fifo write: @1699477123991872724 0x7f81e25ed2f4 91: java.time.format.DateTimeParseContext::getDecimalStyle() -> java.time.format.DecimalStyle
fifo write: @1699477123992195159 0x7f81e9e4cc5c 137: java.util.Iterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477123992727475 0x7f81e9e4d0cc 6: ae::f() -> java.util.Map
fifo write: @1699477123992812547 0x7f81e2640bf4 90: java.util.ImmutableCollections$MapN::isEmpty() -> boolean
fifo write: @1699477123994517959 0x7f81e9e4d61c 19949: qw::a(java.io.DataOutput) -> void
fifo write: @1699477123994580439 0x7f81e27223fe 468: java.util.Collections::addAll(java.util.Collection, Object[]) -> boolean
fifo write: @1699477123994611590 0x7f81e9e583cc 6: am::b() -> ao
fifo write: @1699477123994640650 0x7f81e26ef2f4 95: an::a() -> boolean
fifo write: @1699477123994671291 0x7f81e9e586cc 6: am::c() -> ap
fifo write: @1699477123994710581 0x7f81e28f8c14 487: ah::c(String) -> an
fifo write: @1699477123994740111 0x7f81e26dc414 137: an::<init>() -> void
fifo write: @1699477123994815952 0x7f81e9e589de 2157: Long::getChars(long, int, byte[]) -> int
fifo write: @1699477123994866343 0x7f81e26dbd94 369: ao$a::<init>(ap, af, String) -> void
fifo write: @1699477123994926964 0x7f81e293b7c0 985: afe::a(af, String, am) -> void
fifo write: @1699477123995001875 0x7f81e293add4 1096: cw::a(afe, ao$a) -> void
fifo write: @1699477123995060936 0x7f81e9e5a04c 6: ae::g() -> ai
fifo write: @1699477123995131596 0x7f81e1ec3dd4 1316: ah$$Lambda$7715.0x00007f8160c6a068::test(Object) -> boolean
fifo write: @1699477123995193717 0x7f81e2312734 921: ah::d(String) -> boolean
fifo write: @1699477123995235278 0x7f81e1ec35b5 466: ai::d() -> java.util.Set
fifo write: @1699477123995380910 0x7f81e22de07f 5696: ao$a::hashCode() -> int
fifo write: @1699477123995469181 0x7f81e243a5ff 3234: ah::a(ai) -> void
fifo write: @1699477123995562752 0x7f81e23ca619 1689: java.util.Collection::removeIf(java.util.function.Predicate) -> boolean
fifo write: @1699477123995638783 0x7f81e23c9f94 185: ah$$Lambda$7714.0x00007f8160c69e10::<init>(java.util.Set) -> void
fifo write: @1699477123995705284 0x7f81e23120b4 383: afe::a(af, ah) -> void
fifo write: @1699477123995763245 0x7f81e2500bb7 787: ah::<init>() -> void
fifo write: @1699477123995845576 0x7f81e1e9dd27 1995: afe::b(af) -> ah
fifo write: @1699477123995921287 0x7f81e250049e 536: ai::a(String[], java.util.function.Predicate) -> boolean
fifo write: @1699477123995976117 0x7f81e9e5a354 67: java.util.ImmutableCollections$MapN$MapNIterator::nextIndex() -> int
fifo write: @1699477123996032638 0x7f81e1e9d814 185: ah$$Lambda$7715.0x00007f8160c6a068::<init>(ah) -> void
fifo write: @1699477123996091989 0x7f81e223cdf7 1149: ah::a() -> boolean
fifo write: @1699477123996165350 0x7f81e223c3b9 505: ai::a(java.util.function.Predicate) -> boolean
fifo write: @1699477123996385483 0x7f81e2456cc7 7288: afe::d(af) -> void
fifo write: @1699477123998109875 0x7f81e9e5a9cc 3: java.util.Collections$2::estimateSize() -> long
fifo write: @1699477123998199156 0x7f81e9e5accc 5: com.google.gson.stream.JsonWriter::setHtmlSafe(boolean) -> void
fifo write: @1699477123998233867 0x7f81e9e5afcc 5: com.google.gson.stream.JsonWriter::setSerializeNulls(boolean) -> void
fifo write: @1699477124000174172 0x7f81e9e5b2ef 1102: af::hashCode() -> int
fifo write: @1699477124001131054 0x7f81e8bf6b80 536: I2C/C2I adapters(0xbbbbebbaaba)
fifo write: @1699477124001324336 0x7f81e2703e34 630: java.security.MessageDigestSpi::clone() -> Object
fifo write: @1699477124001425038 0x7f81e2703274 1585: sun.security.provider.DigestBase::clone() -> Object
fifo write: @1699477124001628230 0x7f81e2500014 240: com.google.common.collect.ImmutableList$$Lambda$273.0x00007f81601b0400::apply(int) -> Object
fifo write: @1699477124001723322 0x7f81e24eda77 434: com.google.common.collect.CollectSpliterators$1WithCharacteristics::lambda$forEachRemaining$1(java.util.function.Consumer, java.util.function.IntFunction, int) -> void
fifo write: @1699477124001762542 0x7f81e24ed4b4 276: cmk::hashCode() -> int
fifo write: @1699477124001809873 0x7f81e24ece34 526: com.google.common.collect.CollectSpliterators$1WithCharacteristics$$Lambda$275.0x00007f81601b0d10::accept(int) -> void
fifo write: @1699477124002356300 0x7f81e24ec7b4 541: com.mojang.brigadier.tree.CommandNode::hashCode() -> int
fifo write: @1699477124002447371 0x7f81e2585b39 700: com.mojang.brigadier.tree.LiteralCommandNode::hashCode() -> int
fifo write: @1699477124002773865 0x7f81e9e5c237 1981: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::add(Object) -> boolean
fifo write: @1699477124002915167 0x7f81e258561a 268: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField::soConsumerIndex(long) -> void
fifo write: @1699477124003029688 0x7f81e2311c97 106: io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache::initBuf(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, io.netty.buffer.PooledByteBuf, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477124003083739 0x7f81e25850f4 362: io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess::spRefElement(Object[], long, Object) -> void
fifo write: @1699477124003152700 0x7f81e2584994 318: com.mojang.brigadier.tree.ArgumentCommandNode::hashCode() -> int
fifo write: @1699477124003308052 0x7f81e9e5dacc 6: cjf::v() -> qw
fifo write: @1699477124003659717 0x7f81e25e15f9 3680: java.util.stream.ReferencePipeline$7$1::accept(Object) -> void
fifo write: @1699477124003727647 0x7f81e27512f4 63: java.util.LinkedHashMap$LinkedValues::size() -> int
fifo write: @1699477124003819009 0x7f81e260db14 240: so::writerIndex() -> int
fifo write: @1699477124003881899 0x7f81e260d694 253: so::a(boolean) -> so
fifo write: @1699477124003949920 0x7f81e260d214 260: com.mojang.brigadier.builder.RequiredArgumentBuilder::suggests(com.mojang.brigadier.suggestion.SuggestionProvider) -> com.mojang.brigadier.builder.RequiredArgumentBuilder
fifo write: @1699477124003991971 0x7f81e260cd14 263: io.netty.buffer.AbstractByteBuf::writeBoolean(boolean) -> io.netty.buffer.ByteBuf
fifo write: @1699477124004120883 0x7f81e9e5e3cc 6: com.mojang.brigadier.tree.CommandNode::getCommand() -> com.mojang.brigadier.Command
fifo write: @1699477124004233954 0x7f81e1643459 891: io.netty.buffer.ByteBufOutputStream::<init>(io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124004341845 0x7f81e260c614 215: com.mojang.brigadier.builder.ArgumentBuilder::requires(java.util.function.Predicate) -> com.mojang.brigadier.builder.ArgumentBuilder
fifo write: @1699477124004419176 0x7f81e1642c39 872: rh::a(rq, java.io.DataOutput) -> void
fifo write: @1699477124004513338 0x7f81e1642259 755: so::a(hj, Object) -> void
fifo write: @1699477124004613259 0x7f81e251b714 602: cmg$$Lambda$7733.0x00007f8160c6e5f8::accept(Object, Object) -> void
fifo write: @1699477124004717200 0x7f81e251a337 2304: so::a(rq) -> so
fifo write: @1699477124004893032 0x7f81e9e5eccc 6: com.mojang.brigadier.tree.CommandNode::getRequirement() -> java.util.function.Predicate
fifo write: @1699477124004973863 0x7f81e9e5efcc 6: com.mojang.brigadier.tree.CommandNode::getRedirectModifier() -> com.mojang.brigadier.RedirectModifier
fifo write: @1699477124005050134 0x7f81e9e5f2cc 6: com.mojang.brigadier.tree.CommandNode::getRedirect() -> com.mojang.brigadier.tree.CommandNode
fifo write: @1699477124005089515 0x7f81e9e5f5cc 3: com.mojang.brigadier.tree.CommandNode::isFork() -> boolean
fifo write: @1699477124005220757 0x7f81e25c5d54 1335: com.mojang.brigadier.builder.ArgumentBuilder::forward(com.mojang.brigadier.tree.CommandNode, com.mojang.brigadier.RedirectModifier, boolean) -> com.mojang.brigadier.builder.ArgumentBuilder
fifo write: @1699477124005293398 0x7f81e22be9de 3156: so::a(cjf) -> so
fifo write: @1699477124005328618 0x7f81e9e5fbdb 72: cjf::d() -> cja
fifo write: @1699477124005370438 0x7f81e9e5ffcc 12: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields::lvConsumerIndex() -> long
fifo write: @1699477124005419749 0x7f81e25c51fe 1307: so::a(java.util.Collection, so$b) -> void
fifo write: @1699477124005466460 0x7f81e258b01f 1482: cmg::a(so) -> void
fifo write: @1699477124005598341 0x7f81e22f4d57 2499: cmg::a() -> cjf[]
fifo write: @1699477124005637022 0x7f81e9e602d0 119: hn::get(int) -> Object
fifo write: @1699477124005964786 0x7f81e9e60719 1230: java.util.stream.DistinctOps$1$2::accept(Object) -> void
fifo write: @1699477124006006317 0x7f81e22f4634 561: cjf::<init>(he) -> void
fifo write: @1699477124006066987 0x7f81e9e6164c 6: cmk::a() -> aew
fifo write: @1699477124006495633 0x7f81e258a9f4 413: cmg::b(cmg$c) -> java.util.stream.Stream
fifo write: @1699477124006545613 0x7f81e258a2b4 783: cmg$$Lambda$7731.0x00007f8160c6dfa0::apply(Object) -> Object
fifo write: @1699477124006590714 0x7f81e2476db7 657: cmg$a::a() -> java.util.Collection
fifo write: @1699477124006671565 0x7f81e9e619d8 955: so::c(int) -> so
fifo write: @1699477124006737666 0x7f81e9e62bfa 765: it.unimi.dsi.fastutil.objects.Object2IntOpenCustomHashMap::getInt(Object) -> int
fifo write: @1699477124007158031 0x7f81e2475f9e 1909: qw::a(java.io.DataOutput) -> void
fifo write: @1699477124007264963 0x7f81e2475717 304: java.util.stream.DistinctOps$1::<init>(java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int) -> void
fifo write: @1699477124007368404 0x7f81e1b9d6b4 1075: java.util.stream.DistinctOps$1$2::<init>(java.util.stream.DistinctOps$1, java.util.stream.Sink) -> void
fifo write: @1699477124007436605 0x7f81e1b9d07a 427: java.util.stream.DistinctOps::makeRef(java.util.stream.AbstractPipeline) -> java.util.stream.ReferencePipeline
fifo write: @1699477124007471965 0x7f81e22be414 287: java.util.stream.DistinctOps$1$2::end() -> void
fifo write: @1699477124007528156 0x7f81e1b9c55a 1317: java.util.stream.DistinctOps$1$2::begin(long) -> void
fifo write: @1699477124007574216 0x7f81e2589e54 205: cmg::a(int) -> cjf[]
fifo write: @1699477124007619197 0x7f81e22f4194 296: cmg$$Lambda$7732.0x00007f8160c6e3d8::apply(int) -> Object
fifo write: @1699477124007709738 0x7f81e277749f 3894: cjf::c(qw) -> void
fifo write: @1699477124007783569 0x7f81e26020b7 2366: java.util.stream.DistinctOps$1::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477124007826290 0x7f81e1b9c014 243: com.mojang.brigadier.tree.CommandNode::canUse(Object) -> boolean
fifo write: @1699477124007882170 0x7f81e9e636be 433: io.netty.buffer.ByteBufUtil::unsafeWriteUtf8(byte[], long, int, CharSequence, int, int) -> int
fifo write: @1699477124007930461 0x7f81e2776f94 139: com.mojang.brigadier.builder.ArgumentBuilder$$Lambda$4179.0x00007f81608aa2b0::test(Object) -> boolean
fifo write: @1699477124008229155 0x7f81e9e63f37 920: tc::a(io.netty.buffer.ByteBuf, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477124008807792 0x7f81e9e65456 209: java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl::lazySet(Object, int) -> void
fifo write: @1699477124009123986 0x7f81e25c4c94 47: com.mojang.brigadier.tree.LiteralCommandNode::createBuilder() -> com.mojang.brigadier.builder.ArgumentBuilder
fifo write: @1699477124009273098 0x7f81e2601a14 581: aay$$Lambda$7730.0x00007f8160c6dd48::accept(Object, Object) -> void
fifo write: @1699477124009370189 0x7f81e1daf2be 1051: qw::a(String, rq, java.io.DataOutput) -> void
fifo write: @1699477124009450891 0x7f81e1dae6d4 1439: com.mojang.brigadier.tree.CommandNode::equals(Object) -> boolean
fifo write: @1699477124009541672 0x7f81e2601614 47: com.mojang.brigadier.tree.ArgumentCommandNode::createBuilder() -> com.mojang.brigadier.builder.ArgumentBuilder
fifo write: @1699477124009635303 0x7f81e26d197c 2722: com.mojang.brigadier.tree.LiteralCommandNode::createBuilder() -> com.mojang.brigadier.builder.LiteralArgumentBuilder
fifo write: @1699477124009707604 0x7f81e1dada79 1193: com.mojang.brigadier.tree.ArgumentCommandNode::equals(Object) -> boolean
fifo write: @1699477124009896566 0x7f81e26b192b 8149: du::a(com.mojang.brigadier.tree.CommandNode, com.mojang.brigadier.tree.CommandNode, dt, java.util.Map) -> void
fifo write: @1699477124010066388 0x7f81e9e65913 900: gy::a(Object) -> int
fifo write: @1699477124010150810 0x7f81e26d10b4 879: com.mojang.brigadier.arguments.IntegerArgumentType::equals(Object) -> boolean
fifo write: @1699477124010233961 0x7f81e9e665d0 380: com.mojang.brigadier.tree.CommandNode::getChildren() -> java.util.Collection
fifo write: @1699477124010275671 0x7f81e9e66bd0 35: java.util.LinkedHashMap$LinkedValues::size() -> int
fifo write: @1699477124010345352 0x7f81e2938d54 3278: java.util.HashMap::comparableClassFor(Object) -> Class
fifo write: @1699477124010386813 0x7f81e9e66e92 37: io.netty.util.internal.ObjectUtil::checkPositiveOrZero(int, String) -> int
fifo write: @1699477124010455763 0x7f81e216029f 3207: com.mojang.brigadier.tree.ArgumentCommandNode::createBuilder() -> com.mojang.brigadier.builder.RequiredArgumentBuilder
fifo write: @1699477124010497954 0x7f81e2601114 233: so::a(Enum) -> so
fifo write: @1699477124010590835 0x7f81e283447f 3104: Class::getGenericInfo() -> sun.reflect.generics.repository.ClassRepository
fifo write: @1699477124011416456 0x7f81e9e671cc 6: cmv::an_() -> cmm
fifo write: @1699477124012008264 0x7f81e237b5a7 14624: aay::a(so, cmk) -> void
fifo write: @1699477124012066734 0x7f81e9e674d5 668: com.mojang.brigadier.tree.ArgumentCommandNode::hashCode() -> int
fifo write: @1699477124012547921 0x7f81e9e67f19 514: so::writeByte(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477124012605011 0x7f81e237a7b4 959: com.mojang.brigadier.arguments.FloatArgumentType::equals(Object) -> boolean
fifo write: @1699477124012822724 0x7f81e9e689d6 205: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::relaxedPoll() -> Object
fifo write: @1699477124013346821 0x7f81e9e691d6 205: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::relaxedPoll() -> Object
fifo write: @1699477124013557894 0x7f81e26d0b14 400: hi$b::iterator() -> java.util.Iterator
fifo write: @1699477124013671695 0x7f81e26d0614 348: cmp$a::a(so, cmj) -> void
fifo write: @1699477124014189762 0x7f81e26cda27 4658: cmp$a::a(so, cmp) -> void
fifo write: @1699477124014383444 0x7f81e2800874 5: com.mojang.brigadier.arguments.IntegerArgumentType::hashCode() -> int
fifo write: @1699477124014678828 0x7f81e26ccfd4 913: com.mojang.brigadier.tree.LiteralCommandNode::equals(Object) -> boolean
fifo write: @1699477124015296936 0x7f81e26d0114 253: so::a(float) -> so
fifo write: @1699477124015347137 0x7f81e29385b9 555: io.netty.buffer.AbstractByteBuf::writeFloat(float) -> io.netty.buffer.ByteBuf
fifo write: @1699477124016108526 0x7f81e2937ade 1007: java.util.LinkedHashMap$LinkedValues::forEach(java.util.function.Consumer) -> void
fifo write: @1699477124016772105 0x7f81e9e69760 4717: java.util.AbstractMap::hashCode() -> int
fifo write: @1699477124017058639 0x7f81e9e6c48b 46: java.util.Arrays$ArrayList::iterator() -> java.util.Iterator
fifo write: @1699477124017575715 0x7f81e9e6c807 73: java.util.ArrayDeque::copyElements(java.util.Collection) -> void
fifo write: @1699477124018949753 0x7f81e9e6cc16 1705: io.netty.util.internal.InternalThreadLocalMap::slowGet() -> io.netty.util.internal.InternalThreadLocalMap
fifo write: @1699477124020023957 0x7f81e9e6e1cc 6: com.mojang.brigadier.tree.ArgumentCommandNode::getCustomSuggestions() -> com.mojang.brigadier.suggestion.SuggestionProvider
fifo write: @1699477124020320121 0x7f81e9e6e513 488: io.netty.buffer.AbstractByteBuf::writeBoolean(boolean) -> io.netty.buffer.ByteBuf
fifo write: @1699477124020390602 0x7f81e283341e 1689: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getInt(Object) -> int
fifo write: @1699477124020594924 0x7f81e24cbc6c 5301: java.net.URLStreamHandler::toExternalForm(java.net.URL) -> String
fifo write: @1699477124020654695 0x7f81e9e6ef4c 6: com.mojang.brigadier.tree.ArgumentCommandNode::getType() -> com.mojang.brigadier.arguments.ArgumentType
fifo write: @1699477124020704656 0x7f81e215fc94 489: xo$$Lambda$7737.0x00007f8160c6f688::applyAsInt(Object) -> int
fifo write: @1699477124020760827 0x7f81e215f3b4 959: com.mojang.brigadier.arguments.DoubleArgumentType::equals(Object) -> boolean
fifo write: @1699477124020828247 0x7f81e215ec14 260: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$FastEntryIterator::next() -> it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapEntry
fifo write: @1699477124020882198 0x7f81e184a894 357: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477124020937989 0x7f81e184a414 185: xo$$Lambda$7737.0x00007f8160c6f688::<init>(it.unimi.dsi.fastutil.objects.Object2IntMap) -> void
fifo write: @1699477124020981549 0x7f81e1849f14 237: xo$b::<init>(xo$e, int, int, int[]) -> void
fifo write: @1699477124021034040 0x7f81e1849997 399: java.util.LinkedHashMap$LinkedValues::spliterator() -> java.util.Spliterator
fifo write: @1699477124021173792 0x7f81e9e6f24c 6: com.mojang.brigadier.tree.LiteralCommandNode::getLiteral() -> String
fifo write: @1699477124021463856 0x7f81e9e6f57a 2515: java.util.ArrayDeque::addAll(java.util.Collection) -> boolean
fifo write: @1699477124021658058 0x7f81e1849214 832: xo$a::a(com.mojang.brigadier.suggestion.SuggestionProvider) -> aew
fifo write: @1699477124021714349 0x7f81e1848cf4 280: gj::b(com.mojang.brigadier.arguments.ArgumentType) -> gi$a
fifo write: @1699477124021810300 0x7f81e1848794 275: xo$a::<init>(String, gi$a, aew) -> void
fifo write: @1699477124021947752 0x7f81e27000f4 1664: xo$a::<init>(com.mojang.brigadier.tree.ArgumentCommandNode) -> void
fifo write: @1699477124021991672 0x7f81e1848314 185: xo$c::<init>(String) -> void
fifo write: @1699477124022125264 0x7f81e1847f74 6: gl::b(com.mojang.brigadier.arguments.ArgumentType) -> gl$a
fifo write: @1699477124022180545 0x7f81e26b1314 164: gl::a(com.mojang.brigadier.arguments.ArgumentType) -> gi$a
fifo write: @1699477124022262686 0x7f81e26fe777 3751: gj::a(com.mojang.brigadier.arguments.ArgumentType) -> gi
fifo write: @1699477124022488099 0x7f81e19fb3e7 9681: xo::a(com.mojang.brigadier.tree.CommandNode, it.unimi.dsi.fastutil.objects.Object2IntMap) -> xo$b
fifo write: @1699477124022940265 0x7f81e26fe294 9: com.mojang.brigadier.arguments.DoubleArgumentType::hashCode() -> int
fifo write: @1699477124024491435 0x7f81e1db76ba 385: AbstractStringBuilder::getBytes(byte[], int, byte) -> void
fifo write: @1699477124024603156 0x7f81e1db6c7e 987: AbstractStringBuilder::append(AbstractStringBuilder) -> AbstractStringBuilder
fifo write: @1699477124025069732 0x7f81e9e70cd8 1212: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil::drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int) -> int
fifo write: @1699477124027132949 0x7f81e26fde74 70: ake$a::f() -> int
fifo write: @1699477124027174389 0x7f81e1db6796 181: ake::a(int, int) -> boolean
fifo write: @1699477124027220930 0x7f81e1db631d 111: ake$a::a(int, int, boolean) -> boolean
fifo write: @1699477124027504694 0x7f81e9e71c75 5538: com.mojang.brigadier.tree.LiteralCommandNode::hashCode() -> int
fifo write: @1699477124027562304 0x7f81e1db55b4 1485: ake::a(int, int, int, int, int, boolean) -> boolean
fifo write: @1699477124027618425 0x7f81e1db4b54 1108: aka::d(long) -> dhq
fifo write: @1699477124027725466 0x7f81e26f4637 2190: aka::a(akr, cpc) -> void
fifo write: @1699477124027821288 0x7f81e26f3f97 448: java.util.stream.SpinedBuffer::<init>() -> void
fifo write: @1699477124027938109 0x7f81e26f2c37 2311: aka::e(akr, cpc) -> void
fifo write: @1699477124028042051 0x7f81e25b29d7 2678: aka$$Lambda$7755.0x00007f8160c76020::accept(Object) -> void
fifo write: @1699477124028087931 0x7f81e1db4694 243: java.util.stream.ReferencePipeline$7$1::cancellationRequested() -> boolean
fifo write: @1699477124028204343 0x7f81e25b1205 2774: com.sun.crypto.provider.CipherFeedback::encrypt(byte[], int, int, byte[], int) -> int
fifo write: @1699477124028791170 0x7f81e26f2694 285: aki$b::c(long) -> int
fifo write: @1699477124028882781 0x7f81e25cc285 2803: com.sun.crypto.provider.CipherFeedback::encrypt(byte[], int, int, byte[], int) -> int
fifo write: @1699477124028989223 0x7f81e9e7514c 6: io.netty.channel.epoll.EpollSocketChannel::config() -> io.netty.channel.epoll.EpollSocketChannelConfig
fifo write: @1699477124029165835 0x7f81e9e7544f 560: aka::b(long) -> ajy
fifo write: @1699477124029397508 0x7f81e25b0c97 190: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields::casProducerLimit(long, long) -> boolean
fifo write: @1699477124029970465 0x7f81e9e75f86 9409: java.lang.invoke.LambdaFormEditor::bindArgumentL(java.lang.invoke.BoundMethodHandle, int, Object) -> java.lang.invoke.BoundMethodHandle
fifo write: @1699477124030020606 0x7f81e25cb93d 838: aki$b::a(long, int) -> void
fifo write: @1699477124030069417 0x7f81e25cafd7 889: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::offerSlowPath(long, long, long) -> int
fifo write: @1699477124031024019 0x7f81e9e7bcba 5415: java.util.AbstractMap::equals(Object) -> boolean
fifo write: @1699477124031084910 0x7f81e26f2277 106: xo::a(so, xo$b) -> void
fifo write: @1699477124031136870 0x7f81e25ca8b4 675: xo$$Lambda$7760.0x00007f8160c76b58::accept(Object, Object) -> void
fifo write: @1699477124031222822 0x7f81e25ca0be 533: so::a(int[]) -> so
fifo write: @1699477124031298323 0x7f81e244f35e 906: xo$b::a(so) -> void
fifo write: @1699477124031375654 0x7f81e9e7f350 235: hn::get(int) -> Object
fifo write: @1699477124031436974 0x7f81e25b0614 309: xo$c::a(so) -> void
fifo write: @1699477124031543226 0x7f81e244ee94 240: aki$c::a(long, int, int) -> void
fifo write: @1699477124031587446 0x7f81e9e7f8d0 35: java.util.stream.AbstractPipeline::isParallel() -> boolean
fifo write: @1699477124031633827 0x7f81e9e7fbd4 135: java.util.Spliterators$1Adapter::hasNext() -> boolean
fifo write: @1699477124031971531 0x7f81e244cfbc 4160: dzy::b(int) -> int
fifo write: @1699477124032132633 0x7f81e9e8034c 6: gl$a::a() -> gi
fifo write: @1699477124032295865 0x7f81e244ca94 87: eac$1::rehash(int) -> void
fifo write: @1699477124032621300 0x7f81e244c1b9 860: xo$a::a(so, gi, gi$a) -> void
fifo write: @1699477124032681390 0x7f81e24467bc 1114: xo$a::a(so, gi$a) -> void
fifo write: @1699477124032727051 0x7f81e9e80958 91: java.util.concurrent.atomic.LongAdder::add(long) -> void
fifo write: @1699477124033096026 0x7f81e9e80d53 228: io.netty.buffer.SizeClasses::size2SizeIdx(int) -> int
fifo write: @1699477124033262738 0x7f81e2446294 387: gl::a(gi$a, so) -> void
fifo write: @1699477124034079968 0x7f81e243eb47 8081: xo$a::a(so) -> void
fifo write: @1699477124035988912 0x7f81e243d165 2402: com.sun.crypto.provider.CipherFeedback::encrypt(byte[], int, int, byte[], int) -> int
fifo write: @1699477124036376537 0x7f81e2445d94 208: io.netty.channel.AbstractChannelHandlerContext::invokeHandler() -> boolean
fifo write: @1699477124036684711 0x7f81e9e812cc 6: io.netty.channel.DefaultChannelPromise::channel() -> io.netty.channel.Channel
fifo write: @1699477124038018769 0x7f81e9e816bb 5775: com.mojang.brigadier.tree.ArgumentCommandNode::equals(Object) -> boolean
fifo write: @1699477124038171991 0x7f81e2445954 155: io.netty.util.concurrent.DefaultPromise::isDone0(Object) -> boolean
fifo write: @1699477124038218621 0x7f81e2445494 306: io.netty.util.concurrent.DefaultPromise::isDone() -> boolean
fifo write: @1699477124038617626 0x7f81e9e85192 1398: io.netty.util.Recycler$LocalPool::claim() -> io.netty.util.Recycler$DefaultHandle
fifo write: @1699477124038765178 0x7f81e9e86494 39: io.netty.util.internal.ObjectUtil::checkNotNull(Object, String) -> Object
fifo write: @1699477124039229224 0x7f81e9e86b7d 3266: dzy::b(long, long, int, boolean) -> void
fifo write: @1699477124039284895 0x7f81e9e89450 563: aki$b::c(long) -> int
fifo write: @1699477124040964127 0x7f81e9e8a05b 732: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::offer(Object) -> boolean
fifo write: @1699477124041960979 0x7f81e2445074 89: aki$c::c(int) -> boolean
fifo write: @1699477124042167042 0x7f81e9e8b5f8 889: io.netty.util.Recycler$LocalPool::release(io.netty.util.Recycler$DefaultHandle, boolean) -> void
fifo write: @1699477124042230183 0x7f81e2444c14 189: aki$c$$Lambda$7769.0x00007f8160c78480::<init>(aki$c, long) -> void
fifo write: @1699477124042296984 0x7f81e2444594 428: it.unimi.dsi.fastutil.longs.Long2IntFunctions$SynchronizedFunction::get(long) -> int
fifo write: @1699477124042363415 0x7f81e2444114 189: aki$c$$Lambda$7768.0x00007f8160c78258::<init>(aki$c, long) -> void
fifo write: @1699477124042529137 0x7f81e2443c94 192: akc$$Lambda$5460.0x00007f8160a7c9d0::<init>(int, cpc, int) -> void
fifo write: @1699477124042692979 0x7f81e9e8c279 1263: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int) -> int
fifo write: @1699477124042759040 0x7f81e9e8d1d5 534: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477124042806670 0x7f81e9e8dacc 2: it.unimi.dsi.fastutil.longs.AbstractLong2IntFunction::defaultReturnValue() -> int
fifo write: @1699477124042996193 0x7f81e28243c7 2113: akc::a(java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477124043119304 0x7f81e282255f 4536: aki$c::a(long, int, boolean, boolean) -> void
fifo write: @1699477124043351927 0x7f81e2443814 240: aki$c::d(long) -> int
fifo write: @1699477124043432118 0x7f81e2821e94 350: aki$c$$Lambda$7768.0x00007f8160c78258::getAsInt() -> int
fifo write: @1699477124043506069 0x7f81e28216b4 760: aki$c::b(long, int) -> void
fifo write: @1699477124043583200 0x7f81e2821297 98: aki$c$$Lambda$7769.0x00007f8160c78480::accept(int) -> void
fifo write: @1699477124043662681 0x7f81e2820c14 428: it.unimi.dsi.fastutil.longs.Long2IntFunctions$SynchronizedFunction::put(long, int) -> int
fifo write: @1699477124043733732 0x7f81e2820394 428: it.unimi.dsi.fastutil.longs.Long2IntFunctions$SynchronizedFunction::defaultReturnValue() -> int
fifo write: @1699477124044019386 0x7f81e249e539 1211: aki$c::a() -> void
fifo write: @1699477124045062459 0x7f81e9e8dddb 728: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::relaxedOffer(Object) -> boolean
fifo write: @1699477124045753408 0x7f81e9e8e773 893: io.netty.util.Recycler$DefaultHandle::unguardedRecycle(Object) -> void
fifo write: @1699477124046584379 0x7f81e9e8f3f3 1320: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::shiftKeys(int) -> void
fifo write: @1699477124046776392 0x7f81e9e904cd 382: java.lang.invoke.LambdaForm$DMH.0x00007f8160228800::newInvokeSpecial(Object, Object, long) -> Object
fifo write: @1699477124047038525 0x7f81e9e90ad0 47: io.netty.buffer.PooledUnsafeDirectByteBuf::memoryAddress() -> long
fifo write: @1699477124047129466 0x7f81e249e094 31: aki$b::a() -> void
fifo write: @1699477124047408910 0x7f81e249d754 795: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::containsKey(long) -> boolean
fifo write: @1699477124047493871 0x7f81e249c45e 2371: aka::c(cpc) -> boolean
fifo write: @1699477124048154259 0x7f81e9e90eac 30: io.netty.util.DefaultAttributeMap$DefaultAttribute::access$000(io.netty.util.DefaultAttributeMap$DefaultAttribute) -> io.netty.util.AttributeKey
fifo write: @1699477124048624685 0x7f81e9e912b5 4210: io.netty.util.Recycler::get() -> Object
fifo write: @1699477124048722447 0x7f81e9e944d8 379: java.util.HashMap$Values::forEach(java.util.function.Consumer) -> void
fifo write: @1699477124048781477 0x7f81e9e94c4c 6: io.netty.channel.DefaultChannelConfig::getAllocator() -> io.netty.buffer.ByteBufAllocator
fifo write: @1699477124048858698 0x7f81e249be8e 171: java.util.stream.ReferencePipeline::noneMatch(java.util.function.Predicate) -> boolean
fifo write: @1699477124049226443 0x7f81e9e94f93 488: so::a(boolean) -> so
fifo write: @1699477124049305614 0x7f81e9e95a5a 217: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::remove(long) -> Object
fifo write: @1699477124050037614 0x7f81e9e960fe 6173: so::a(rq) -> so
fifo write: @1699477124050091544 0x7f81e9e9abb5 1: aki$c::c(int) -> boolean
fifo write: @1699477124050159815 0x7f81e9e9ae99 66: io.netty.buffer.AbstractByteBuf::checkRangeBounds(String, int, int, int) -> void
fifo write: @1699477124051803786 0x7f81e28d38ff 20984: ako::t() -> void
fifo write: @1699477124052006239 0x7f81e249ae16 1165: biq::bH() -> void
fifo write: @1699477124052578176 0x7f81e9e9b203 864: akb::a(int, cpc, int) -> void
fifo write: @1699477124052671238 0x7f81e9e9bdf3 732: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::put(long, int) -> int
fifo write: @1699477124052713848 0x7f81e9e9c9cc 6: ag::e() -> Iterable
fifo write: @1699477124052890931 0x7f81e9e9ccf0 1067: akc$$Lambda$5460.0x00007f8160a7c9d0::accept(Object) -> void
fifo write: @1699477124052934671 0x7f81e9e9dacc 6: ag::b() -> af
fifo write: @1699477124053354637 0x7f81e28d2def 198: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477124053446748 0x7f81e249a994 31: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet, it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet$1) -> void
fifo write: @1699477124053668051 0x7f81e9e9de7e 4801: akd::a(long, int, boolean) -> void
fifo write: @1699477124053725421 0x7f81e221ee17 399: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet::iterator() -> java.util.Iterator
fifo write: @1699477124053805862 0x7f81e221e894 280: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet) -> void
fifo write: @1699477124053863803 0x7f81e249a494 95: it.unimi.dsi.fastutil.objects.AbstractObjectList::peek(int) -> Object
fifo write: @1699477124054507331 0x7f81e248cd81 7115: biq::a(bjm, ehn) -> void
fifo write: @1699477124054591222 0x7f81e221dc54 1102: it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet$SetIterator::next() -> Object
fifo write: @1699477124054647953 0x7f81e221d814 47: it.unimi.dsi.fastutil.objects.AbstractObjectList::push(Object) -> void
fifo write: @1699477124054714574 0x7f81e221cf14 639: it.unimi.dsi.fastutil.objects.ObjectArrayList::get(int) -> Object
fifo write: @1699477124054779455 0x7f81e221c619 860: afs::a(it.unimi.dsi.fastutil.Stack) -> boolean
fifo write: @1699477124054835206 0x7f81e221beb4 607: it.unimi.dsi.fastutil.objects.AbstractObjectList::pop() -> Object
fifo write: @1699477124054905527 0x7f81e221b354 1298: afs::a(ae, boolean) -> afs$b
fifo write: @1699477124054978277 0x7f81e221a04b 2220: afs::a(ag, it.unimi.dsi.fastutil.Stack, java.util.function.Predicate, afs$a) -> boolean
fifo write: @1699477124055038248 0x7f81e268b997 1693: afe$$Lambda$7775.0x00007f8160c79208::test(Object) -> boolean
fifo write: @1699477124055093759 0x7f81e268b49a 111: afe$$Lambda$7776.0x00007f8160c79660::accept(ag, boolean) -> void
fifo write: @1699477124055326332 0x7f81e268a719 1612: afe::a(java.util.Set, java.util.Set, ag, boolean) -> void
fifo write: @1699477124055496264 0x7f81e2688e1f 3393: afe::a(ag) -> boolean
fifo write: @1699477124056241524 0x7f81e9ea14a0 18631: java.io.DataOutputStream::writeUTF(String, java.io.DataOutput) -> int
fifo write: @1699477124056319435 0x7f81e9eaaaf5 971: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::remove(long) -> byte
fifo write: @1699477124056372885 0x7f81e2688894 125: akc$$Lambda$7108.0x00007f8160a5a000::run() -> void
fifo write: @1699477124056687600 0x7f81e2687956 1754: akc::a(bfq, java.util.function.IntSupplier, long, java.util.function.Function, boolean) -> void
fifo write: @1699477124056809171 0x7f81e9eab8f7 1080: it.unimi.dsi.fastutil.longs.Long2IntFunctions$SynchronizedFunction::get(long) -> int
fifo write: @1699477124056891512 0x7f81e2687494 137: aki$c$$Lambda$7771.0x00007f8160c788e8::getAsInt() -> int
fifo write: @1699477124057207786 0x7f81e2685ba6 3110: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::rehash(int) -> void
fifo write: @1699477124057250807 0x7f81e9eac550 91: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapEntry::getKey() -> Object
fifo write: @1699477124057470669 0x7f81e9eac8d0 83: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap$MapEntry::getIntValue() -> int
fifo write: @1699477124059275552 0x7f81e9eacc99 514: so::k(int) -> so
fifo write: @1699477124060129913 0x7f81e9ead7a4 2015: so::a(hj, Object) -> void
fifo write: @1699477124060206234 0x7f81e9eaf613 2024: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::removeFirstLong() -> long
fifo write: @1699477124061670073 0x7f81e9eb0eb4 2215: eac::a() -> long
fifo write: @1699477124067290176 0x7f81e26851d4 990: aew::equals(Object) -> boolean
fifo write: @1699477124068616293 0x7f81e9eb2a1e 1552: java.util.concurrent.CompletableFuture::uniComposeStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124070265274 0x7f81e9eb39f5 390: ro$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477124071077275 0x7f81e9eb45dc 8775: so::a(cjf) -> so
fifo write: @1699477124071345688 0x7f81e255c3df 6596: java.util.regex.Pattern::range(java.util.regex.Pattern$BitClass) -> java.util.regex.Pattern$CharPredicate
fifo write: @1699477124071846934 0x7f81e9ebbafb 3176: java.util.concurrent.CompletableFuture::bipush(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture$BiCompletion) -> void
fifo write: @1699477124072336951 0x7f81e9ebd8f3 156: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap, int) -> void
fifo write: @1699477124072885258 0x7f81e9ebdd53 6275: akc$$Lambda$5458.0x00007f8160a7c588::run() -> void
fifo write: @1699477124073140291 0x7f81e9ec20fc 6316: akc::a(java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477124073243832 0x7f81e2557e7f 10375: eaa::a(ead) -> void
fifo write: @1699477124073533856 0x7f81e9ec626a 750: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::next() -> it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntry
fifo write: @1699477124073568467 0x7f81e9ec6cd9 142: java.io.DataInputStream::readFully(byte[]) -> void
fifo write: @1699477124073856260 0x7f81e9ec716a 750: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$EntryIterator::next() -> Object
fifo write: @1699477124074233945 0x7f81e9ec7bd0 87: java.util.stream.AbstractSpinedBuffer::count() -> long
fifo write: @1699477124075186048 0x7f81e275951f 3089: dhq::<init>(cpv, cpc, did, eiu, eiu, long, dhr[], dhq$c, dlv) -> void
fifo write: @1699477124078821944 0x7f81e9ec8235 170: re::a(long) -> re
fifo write: @1699477124078911336 0x7f81e2758a3c 1062: dhp::<init>(dhq, boolean) -> void
fifo write: @1699477124081065673 0x7f81e9ec8936 14224: java.util.HashMap$TreeNode::find(int, Object, Class) -> java.util.HashMap$TreeNode
fifo write: @1699477124082222298 0x7f81e9ed0f38 2284: aka::b(ajy, dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124084686049 0x7f81e9ed28d3 288: qw::b(String, int) -> boolean
fifo write: @1699477124091245834 0x7f81e9ed30b0 3127: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477124093012897 0x7f81e9ed4c30 1909: qt$1::d(java.io.DataInput, rf) -> byte[]
fifo write: @1699477124093619765 0x7f81e9ed646f 2420: qt$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477124095473799 0x7f81e2557714 240: ajy$1::<init>(ajy) -> void
fifo write: @1699477124102705032 0x7f81e9ed81d6 12245: aki$c::a() -> void
fifo write: @1699477124114081838 0x7f81e9ee0f58 787: aew::equals(Object) -> boolean
fifo write: @1699477124114460113 0x7f81e9ee1944 354: akc::onLevelChange(cpc, java.util.function.IntSupplier, int, java.util.function.IntConsumer) -> void
fifo write: @1699477124114986230 0x7f81e9ee2083 704: ajy::a(java.util.concurrent.CompletableFuture, String) -> void
fifo write: @1699477124115123642 0x7f81e9ee2b1f 817: akc$$Lambda$5458.0x00007f8160a7c588::<init>(akc, java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477124115496266 0x7f81e9ee33d9 280: aka::g() -> boolean
fifo write: @1699477124116452279 0x7f81e2757ef9 982: ako::s() -> boolean
fifo write: @1699477124116919935 0x7f81e2757994 294: dhp::j() -> dhk
fifo write: @1699477124117617934 0x7f81e2753e27 8891: aki::a(aka) -> boolean
fifo write: @1699477124119806782 0x7f81e9ee38d0 179: dho$$Lambda$7063.0x00007f8160b8a800::accept(Object) -> void
fifo write: @1699477124123035834 0x7f81e2753594 389: ako$$Lambda$7333.0x00007f8160bd62b8::getAsBoolean() -> boolean
fifo write: @1699477124124251529 0x7f81e9ee3e59 314: it.unimi.dsi.fastutil.longs.LongOpenHashSet::clear() -> void
fifo write: @1699477124130311928 0x7f81e9ee44fd 1116: java.util.EnumMap::<init>(Class) -> void
fifo write: @1699477124130609231 0x7f81e9ee50cf 1433: bfq$$Lambda$5482.0x00007f8160a84670::accept(Object) -> void
fifo write: @1699477124131260620 0x7f81e9ee6033 5228: akw::a() -> void
fifo write: @1699477124133083623 0x7f81e9ee9a0b 62: com.mojang.serialization.Codec::mapResult(com.mojang.serialization.Codec$ResultFunction) -> com.mojang.serialization.Codec
fifo write: @1699477124134356659 0x7f81e9ee9f37 14911: java.util.concurrent.CompletableFuture::andTree(java.util.concurrent.CompletableFuture[], int, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124138417201 0x7f81e9ef227c 1487: java.util.BitSet::set(int, int) -> void
fifo write: @1699477124139049790 0x7f81e9ef3174 1471: dik::a(int, int) -> void
fifo write: @1699477124144119545 0x7f81e9ef4219 6902: eaa::a(ead) -> void
fifo write: @1699477124145693005 0x7f81e9ef8a8f 2079: com.mojang.serialization.Codec$4::toString() -> String
fifo write: @1699477124180642596 0x7f81e1efa314 2147: java.util.Formatter$FormatSpecifier::print(Object, java.util.Locale) -> void
fifo write: @1699477124180750487 0x7f81e2591fcd 1701: com.mojang.serialization.Dynamic::convert(com.mojang.serialization.DynamicOps) -> com.mojang.serialization.Dynamic
fifo write: @1699477124181815291 0x7f81e293c32f 8215: com.mojang.serialization.codecs.ListCodec::encode(java.util.List, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124182034803 0x7f81e9c318e9 251: com.mojang.datafixers.util.Either::mapLeft(java.util.function.Function) -> com.mojang.datafixers.util.Either
fifo write: @1699477124185334396 0x7f81e98dc235 1199: com.mojang.serialization.Codec$20::encode(com.mojang.serialization.Dynamic, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124185674920 0x7f81e932ab45 1235: com.mojang.serialization.Codec$20::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124185706370 0x7f81e2272b54 1877: java.util.Formatter$Conversion::isValid(char) -> boolean
fifo write: @1699477124186350719 0x7f81e97aa856 8285: eaa::a(ead) -> void
fifo write: @1699477124186389799 0x7f81e93ffbd0 51: java.util.Formatter$Flags::contains(java.util.Formatter$Flags) -> boolean
fifo write: @1699477124188006810 0x7f81e9744a3e 1966: java.util.concurrent.CompletableFuture::uniExceptionallyStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124189643321 0x7f81e9141b90 499: akc$$Lambda$7115.0x00007f8160a5b1d8::apply(Object) -> Object
fifo write: @1699477124192052072 0x7f81e9233d19 4236: java.util.Formatter$FormatSpecifier::printString(Object, java.util.Locale) -> void
fifo write: @1699477124192091943 0x7f81e9216631 4: com.mojang.datafixers.types.templates.Const$PrimitiveType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477124192276875 0x7f81e94b9190 721: akb$$Lambda$7114.0x00007f8160a5af90::apply(Object) -> Object
fifo write: @1699477124192501498 0x7f81e9a355f0 743: re$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477124193341909 0x7f81e9bf8c70 2692: com.mojang.serialization.ListBuilder$Builder$$Lambda$5301.0x00007f81609c1b90::apply(Object) -> Object
fifo write: @1699477124195195573 0x7f81e9c7bb3d 3316: com.google.common.collect.ImmutableList$Builder::addAll(Iterable) -> com.google.common.collect.ImmutableList$Builder
fifo write: @1699477124195704209 0x7f81e9923e51 90: java.util.concurrent.SynchronousQueue::offer(Object) -> boolean
fifo write: @1699477124196769473 0x7f81e94db0fe 358: java.util.concurrent.ThreadPoolExecutor::execute(Runnable) -> void
fifo write: @1699477124199756262 0x7f81e9b8e128 4152: com.mojang.serialization.codecs.ListCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124202818461 0x7f81e930e511 206: dhl::<init>(byte[]) -> void
fifo write: @1699477124203115305 0x7f81e9901f73 420: dho::a(java.util.function.Predicate) -> boolean
fifo write: @1699477124218169819 0x7f81e217e417 525: qx::l() -> Number
fifo write: @1699477124222513825 0x7f81e9730170 315: com.mojang.datafixers.FunctionType$Instance$$Lambda$5745.0x00007f8160ab8000::apply(Object) -> Object
fifo write: @1699477124226556817 0x7f81e14caf14 185: com.mojang.datafixers.types.templates.Check$CheckType$$Lambda$5635.0x00007f8160aa3fb0::<init>(com.mojang.datafixers.types.templates.Check$CheckType) -> void
fifo write: @1699477124226645528 0x7f81e1978f14 93: com.mojang.datafixers.types.templates.Check$CheckType$$Lambda$5611.0x00007f8160a9f950::decode(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124227305817 0x7f81e21806b7 2130: com.mojang.datafixers.types.templates.Check$CheckType::read(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124227441538 0x7f81e940d05b 536: com.mojang.datafixers.types.templates.Named$NamedType::equals(Object, boolean, boolean) -> boolean
fifo write: @1699477124228174058 0x7f81e94ce050 183: com.mojang.datafixers.functions.Fold$$Lambda$5978.0x00007f8160ada208::apply(Object) -> Object
fifo write: @1699477124229094920 0x7f81e94bdcf5 926: java.util.HashMap$KeySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477124229163031 0x7f81e94fd014 368: com.mojang.datafixers.optics.Inj1::match(Object) -> com.mojang.datafixers.util.Either
fifo write: @1699477124229591406 0x7f81e97aa212 163: com.mojang.datafixers.FunctionType$Instance::wander(com.mojang.datafixers.optics.Wander, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477124230327526 0x7f81e27526bf 1939: com.mojang.datafixers.types.Type::findType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477124231831325 0x7f81e9c4c18c 149: com.mojang.datafixers.types.Type$Continue::<init>() -> void
fifo write: @1699477124232089058 0x7f81e91e2bf4 1539: com.mojang.datafixers.functions.Comp$$Lambda$5693.0x00007f8160aae900::apply(Object) -> Object
fifo write: @1699477124232466973 0x7f81e15d6514 230: ri$1$$Lambda$4105.0x00007f8160896d70::<init>(ri$1, qw) -> void
fifo write: @1699477124232801697 0x7f81e2705c3f 2086: ri$1::entries() -> java.util.stream.Stream
fifo write: @1699477124234220186 0x7f81e28e106c 22400: com.mojang.datafixers.FieldFinder$Matcher::match(com.mojang.datafixers.types.Type) -> com.mojang.datafixers.util.Either
fifo write: @1699477124234268556 0x7f81e1dc49f4 94: java.util.concurrent.SynchronousQueue$TransferStack$SNode::isCancelled() -> boolean
fifo write: @1699477124234356357 0x7f81e212cd54 90: java.util.concurrent.SynchronousQueue$TransferStack::isFulfilling(int) -> boolean
fifo write: @1699477124235097057 0x7f81e937275c 329: java.util.concurrent.SynchronousQueue$TransferStack::snode(java.util.concurrent.SynchronousQueue$TransferStack$SNode, Object, java.util.concurrent.SynchronousQueue$TransferStack$SNode, int) -> java.util.concurrent.SynchronousQueue$TransferStack$SNode
fifo write: @1699477124237309845 0x7f81e9c0ad99 446: qw::m(String) -> byte[]
fifo write: @1699477124239025157 0x7f81e16c89a1 1942: java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite::setOpaque(java.lang.invoke.VarHandle, Object, Object) -> void
fifo write: @1699477124239092498 0x7f81e28ae4ba 1830: java.util.concurrent.SynchronousQueue$TransferStack$SNode::forgetWaiter() -> void
fifo write: @1699477124240398735 0x7f81e939db90 2804: com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType::toString() -> String
fifo write: @1699477124241626681 0x7f81e2547f16 38768: java.util.concurrent.SynchronousQueue$TransferStack::transfer(Object, boolean, long) -> Object
fifo write: @1699477124261531107 0x7f81e9bd4541 36291: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124265856543 0x7f81e9c548f0 5587: akt$$Lambda$7111.0x00007f8160a5a918::run() -> void
fifo write: @1699477124301183928 0x7f81e97e69bb 31812: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477124303140903 0x7f81e9c438b2 9647: akt::f() -> void
fifo write: @1699477124307074924 0x7f81e93a7fd1 182: StrictMath::floorOrCeil(double, double, double, double) -> double
fifo write: @1699477124308705585 0x7f81e165fff4 97: dzy::a(long) -> boolean
fifo write: @1699477124308750246 0x7f81e1a81514 285: buf$a::c(long) -> int
fifo write: @1699477124308806506 0x7f81e22bc334 721: akm::b(long, long, int) -> int
fifo write: @1699477124311293528 0x7f81e9dbdd72 28021: dij$$Lambda$5461.0x00007f8160a7cc08::get() -> Object
fifo write: @1699477124311355999 0x7f81e9cac0d1 174: StrictMath::ceil(double) -> double
fifo write: @1699477124314253676 0x7f81e94fc181 1059: akt::a(cqe, hw, dhl) -> void
fifo write: @1699477124327897452 0x7f81e994acc0 357: java.util.concurrent.locks.LockSupport::park(Object) -> void
fifo write: @1699477124328231816 0x7f81e94eb24c 2: io.netty.handler.codec.CodecOutputList::size() -> int
fifo write: @1699477124328721253 0x7f81e170c534 1048: io.netty.channel.DefaultChannelPipeline::touch(Object, io.netty.channel.AbstractChannelHandlerContext) -> Object
fifo write: @1699477124329328520 0x7f81e8bf6f48 27: vtable stub
fifo write: @1699477124329506443 0x7f81e99af8c5 204: java.util.concurrent.ForkJoinPool::runWorker(java.util.concurrent.ForkJoinPool$WorkQueue) -> void
fifo write: @1699477124329648465 0x7f81e9b5dcd0 111: java.util.stream.Nodes$IntFixedNodeBuilder::accept(int) -> void
fifo write: @1699477124330259523 0x7f81e9c42e50 479: java.util.Spliterators$IntArraySpliterator::tryAdvance(java.util.function.IntConsumer) -> boolean
fifo write: @1699477124330375394 0x7f81e940ca50 271: java.util.stream.SliceOps$2$1::accept(int) -> void
fifo write: @1699477124343033817 0x7f81e1d80617 44: dig$$Lambda$7081.0x00007f8160b92930::test(long) -> boolean
fifo write: @1699477124343086327 0x7f81e25849b4 584: cpc::a(cpc) -> int
fifo write: @1699477124343135888 0x7f81e1f43194 47: java.util.stream.Nodes$LongSpinedNodeBuilder::accept(long) -> void
fifo write: @1699477124343195599 0x7f81e1ca0c94 544: java.util.stream.SpinedBuffer$OfLong::accept(long) -> void
fifo write: @1699477124343264500 0x7f81e199aed3 2391: dig::a(cpc, aew, long) -> boolean
fifo write: @1699477124343315890 0x7f81e1952c74 19: java.util.stream.Nodes$LongSpinedNodeBuilder::end() -> void
fifo write: @1699477124343376871 0x7f81e1b76574 15: java.util.stream.Nodes$LongSpinedNodeBuilder::build() -> java.util.stream.Node$OfLong
fifo write: @1699477124343418072 0x7f81e2063814 47: java.util.stream.Nodes$LongSpinedNodeBuilder::copyInto(long[], int) -> void
fifo write: @1699477124343459212 0x7f81e2082a14 159: java.util.stream.Nodes$LongSpinedNodeBuilder::build() -> java.util.stream.Node
fifo write: @1699477124343494293 0x7f81e2284774 85: it.unimi.dsi.fastutil.longs.LongArrays::ensureOffsetLength(long[], int, int) -> void
fifo write: @1699477124343547803 0x7f81e1484114 432: java.util.stream.Nodes$LongSpinedNodeBuilder::copyInto(Object, int) -> void
fifo write: @1699477124343590584 0x7f81e19b2059 1317: java.util.stream.SpinedBuffer$OfPrimitive::preAccept() -> void
fifo write: @1699477124343800567 0x7f81e28bc8e9 3870: java.util.stream.SpinedBuffer$OfPrimitive::copyInto(Object, int) -> void
fifo write: @1699477124345327366 0x7f81e1c54bd7 1499: java.util.stream.SpinedBuffer$OfPrimitive::asPrimitiveArray() -> Object
fifo write: @1699477124346547652 0x7f81e9cf1530 1341: dij$$Lambda$5464.0x00007f8160a7d2b0::run() -> void
fifo write: @1699477124350483313 0x7f81e9c16d4f 1576: bfq$$Lambda$5463.0x00007f8160a7d078::accept(Object) -> void
fifo write: @1699477124354526575 0x7f81e251a320 2146: it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap::rehash(int) -> void
fifo write: @1699477124355000891 0x7f81e2585b47 588: it.unimi.dsi.fastutil.longs.LongOpenHashSet::<init>(long[], int, int, float) -> void
fifo write: @1699477124375001889 0x7f81e9e36ab0 14: dhy$d::a() -> int
fifo write: @1699477124375061459 0x7f81e218c677 335: dko$a::valueOf(String) -> dko$a
fifo write: @1699477124375103810 0x7f81e14cb894 240: dia::a(dko$a, dhe) -> void
fifo write: @1699477124375141500 0x7f81e26cc3b4 603: dhe::<init>(long[], int) -> void
fifo write: @1699477124375190911 0x7f81e25a5597 790: java.util.BitSet::valueOf(long[]) -> java.util.BitSet
fifo write: @1699477124375490455 0x7f81e23d231a 1985: dhy$d$2::a(hj, int) -> dhy$a
fifo write: @1699477124375539695 0x7f81e217fb99 605: dhy$$Lambda$7047.0x00007f8160b82fd0::apply(Object) -> Object
fifo write: @1699477124375637527 0x7f81e24445b4 449: dhy$d::b(hj, int) -> int
fifo write: @1699477124376674810 0x7f81e287c507 9215: dhy::a(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477124383372547 0x7f81e9ab9b30 2349: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::rehash(int) -> void
fifo write: @1699477124387094344 0x7f81e225d55f 4420: akb::a() -> java.util.stream.Stream
fifo write: @1699477124387140095 0x7f81e9ac3530 10: akb::b() -> boolean
fifo write: @1699477124393144912 0x7f81e9c544bc 55: java.util.concurrent.CompletableFuture::encodeRelay(Object) -> Object
fifo write: @1699477124446510439 0x7f81e9989bf3 3531: akc$$Lambda$7108.0x00007f8160a5a000::run() -> void
fifo write: @1699477124447205388 0x7f81e95f9e8f 3415: akc::a(bfq, java.util.function.IntSupplier, long, java.util.function.Function, boolean) -> void
fifo write: @1699477124454349190 0x7f81e9db0db9 58: java.util.stream.Nodes::flattenLong(java.util.stream.Node$OfLong) -> java.util.stream.Node$OfLong
fifo write: @1699477124458566225 0x7f81e9a168c8 947: java.util.HashMap::putAll(java.util.Map) -> void
fifo write: @1699477124460360977 0x7f81e91bae79 690: java.util.stream.LongPipeline::makeNodeBuilder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477124464215307 0x7f81e9b4c555 24006: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477124470727501 0x7f81e91e2506 367: dhy$d$2::a(hj, int) -> dhy$a
fifo write: @1699477124473753180 0x7f81e9989750 71: java.util.stream.Nodes$LongArrayNode::asPrimitiveArray() -> Object
fifo write: @1699477124477201715 0x7f81e946dfd9 265: java.util.concurrent.SynchronousQueue$TransferStack$SNode::tryMatch(java.util.concurrent.SynchronousQueue$TransferStack$SNode) -> boolean
fifo write: @1699477124482080598 0x7f81e9b9c4bb 1070: dhy$d::b(hj, int) -> int
fifo write: @1699477124491097473 0x7f81e9bb9792 5508: akb::a() -> java.util.stream.Stream
fifo write: @1699477124495188696 0x7f81e9ccf3b5 5322: eiu::<init>(java.util.List) -> void
fifo write: @1699477124499231728 0x7f81e96c86c0 8463: dhy::a(hj, dhy$d, dhz$a) -> com.mojang.serialization.DataResult
fifo write: @1699477124516163106 0x7f81e27aa55f 4420: akb::a() -> java.util.stream.Stream
fifo write: @1699477124525127702 0x7f81e27796ce 8880: ajy::a(cqe, int) -> void
fifo write: @1699477124526836304 0x7f81e1576ff4 231: dhp::a(boolean) -> void
fifo write: @1699477124528590047 0x7f81e9e4eab2 15278: dhy$$Lambda$7047.0x00007f8160b82fd0::apply(Object) -> Object
fifo write: @1699477124529607810 0x7f81e972fb50 47: ako$$Lambda$7333.0x00007f8160bd62b8::getAsBoolean() -> boolean
fifo write: @1699477124533701632 0x7f81e9589a98 2957: ako::a(hw, cqe) -> void
fifo write: @1699477124535824859 0x7f81e981c073 4580: dzy::b(int) -> int
fifo write: @1699477124536041362 0x7f81e94ac310 2905: ako$$Lambda$7187.0x00007f8160ba2338::run() -> void
fifo write: @1699477124537258538 0x7f81e1abddf4 229: dhp::v() -> boolean
fifo write: @1699477124537608472 0x7f81e9cce97a 437: it.unimi.dsi.fastutil.longs.LongOpenHashSet::remove(long) -> boolean
fifo write: @1699477124539480796 0x7f81e9a1d0fe 1927: ajy::a(cqe, int) -> void
fifo write: @1699477124540129745 0x7f81e9965e67 395: dhk$$Lambda$1678.0x00007f81605c1d50::doWork(dhk, akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124545899779 0x7f81e1c59174 226: dhp::f() -> cpc
fifo write: @1699477124549932791 0x7f81e8bf4e00 464: I2C/C2I adapters(0xbbb7eba)
fifo write: @1699477124550303546 0x7f81e8bf1100 472: I2C/C2I adapters(0xbb7ebbab)
fifo write: @1699477124551098346 0x7f81e9b2edf3 6756: aki$b::a() -> void
fifo write: @1699477124551260188 0x7f81e1b12d94 331: dhp::A() -> void
fifo write: @1699477124551762315 0x7f81e234f634 535: cpv::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477124553139643 0x7f81e9c2ff53 40: biq::bN() -> boolean
fifo write: @1699477124553194003 0x7f81e9589350 99: hn::size() -> int
fifo write: @1699477124553337195 0x7f81e1d73514 240: io.netty.util.internal.ObjectPool$RecyclerObjectPool$1::newObject(io.netty.util.Recycler$Handle) -> Object
fifo write: @1699477124553428606 0x7f81e27ff3b7 663: io.netty.util.Recycler$LocalPool::newHandle() -> io.netty.util.Recycler$DefaultHandle
fifo write: @1699477124553501047 0x7f81e212d957 1168: dhp::g() -> java.util.Map
fifo write: @1699477124553586168 0x7f81e2466e1e 2840: io.netty.channel.AbstractChannelHandlerContext::findContextOutbound(int) -> io.netty.channel.AbstractChannelHandlerContext
fifo write: @1699477124553905153 0x7f81e984cdcc 6: ao$a::a() -> ap
fifo write: @1699477124554218507 0x7f81e27a2937 727: java.util.IdentityHashMap::keySet() -> java.util.Set
fifo write: @1699477124554497920 0x7f81e222eb14 332: java.util.Collections$SetFromMap::remove(Object) -> boolean
fifo write: @1699477124554573861 0x7f81e984ca4c 2: biq::hashCode() -> int
fifo write: @1699477124554609832 0x7f81e1de0b94 251: java.util.stream.StreamSpliterators$WrappingSpliterator::lambda$initPartialTraversalState$0() -> boolean
fifo write: @1699477124554647852 0x7f81e1b8bf94 356: java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$784.0x00007f81601e0638::getAsBoolean() -> boolean
fifo write: @1699477124556127601 0x7f81e9a4684c 9: biq::cv() -> java.util.UUID
fifo write: @1699477124557792003 0x7f81e2435877 93: bm::a(dfj, bm$a) -> boolean
fifo write: @1699477124557847703 0x7f81e2445094 48: java.util.LinkedHashMap::<init>(int, float) -> void
fifo write: @1699477124557903654 0x7f81e182d194 448: bm$$Lambda$7797.0x00007f8160c7da08::test(Object) -> boolean
fifo write: @1699477124558020116 0x7f81e9a464cc 5: akr::C() -> int
fifo write: @1699477124558404741 0x7f81e214d714 2828: bm$a::a(dfj) -> boolean
fifo write: @1699477124558869097 0x7f81e96c81cc 2: io.netty.util.AbstractConstant::id() -> int
fifo write: @1699477124559168280 0x7f81e1e08874 226: dhp::d() -> dhr[]
fifo write: @1699477124559382573 0x7f81e9748fd5 364: java.util.stream.AbstractPipeline::spliterator() -> java.util.Spliterator
fifo write: @1699477124560275495 0x7f81e2501797 98: acy::d(ehn) -> ehn
fifo write: @1699477124560349416 0x7f81e1a849d4 349: acy::a(ehn) -> long
fifo write: @1699477124560394276 0x7f81e1c13354 349: acy::b(ehn) -> long
fifo write: @1699477124560435687 0x7f81e1d3b154 349: acy::c(ehn) -> long
fifo write: @1699477124560453627 0x7f81e8bf6f78 27: vtable stub
fifo write: @1699477124560469407 0x7f81e8bf6fa8 27: vtable stub
fifo write: @1699477124560611789 0x7f81e8bf6fd8 27: vtable stub
fifo write: @1699477124560659320 0x7f81e96c7dde 135: acy::a(double) -> long
fifo write: @1699477124560713770 0x7f81e8bf7008 27: vtable stub
fifo write: @1699477124560730431 0x7f81e8bf7038 27: vtable stub
fifo write: @1699477124561370419 0x7f81e9c7467b 3484: io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache::initBuf(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, io.netty.buffer.PooledByteBuf, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477124562387642 0x7f81e164225e 882: bjg::a(cjf, cjf) -> boolean
fifo write: @1699477124562550674 0x7f81e1fa1fc9 5035: djf::a(ehi, aqn) -> void
fifo write: @1699477124562596334 0x7f81e94ab9d6 257: biq::ar() -> void
fifo write: @1699477124563087811 0x7f81e9caf44c 6: aks::b() -> cps
fifo write: @1699477124563816130 0x7f81e253a334 47: java.util.LinkedHashSet::<init>() -> void
fifo write: @1699477124563918911 0x7f81e9caf14c 9: cbu::fR() -> cbt
fifo write: @1699477124564443838 0x7f81e2113919 399: cqg$$Lambda$7312.0x00007f8160bcc830::accept(Object) -> void
fifo write: @1699477124564917854 0x7f81e22f80c1 3279: cqg::a(gw, biq, cqj, cqf, bjj, it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap, dhq) -> void
fifo write: @1699477124565742515 0x7f81e24a4343 781: java.util.Arrays::binarySearch0(Object[], int, int, Object, java.util.Comparator) -> int
fifo write: @1699477124566251381 0x7f81e9c78f53 1304: bjg::fv() -> boolean
fifo write: @1699477124566295902 0x7f81e273ff8e 39: eic::getDouble(int) -> double
fifo write: @1699477124566374853 0x7f81e170b73e 960: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::getDouble(Object) -> double
fifo write: @1699477124566394233 0x7f81e8bf7068 27: vtable stub
fifo write: @1699477124566625616 0x7f81e213380e 211: biq::cf() -> eio
fifo write: @1699477124566753248 0x7f81e8bf7098 27: vtable stub
fifo write: @1699477124566910360 0x7f81e1c40f91 244: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::listIterator(int) -> it.unimi.dsi.fastutil.doubles.DoubleListIterator
fifo write: @1699477124567062752 0x7f81e9cacd6f 1636: cpy::b(int, int, int, int) -> boolean
fifo write: @1699477124567110912 0x7f81e1dca3ba 936: dfi$a::b(cpb, gw) -> int
fifo write: @1699477124567460137 0x7f81e27a81ce 420: bjg::dR() -> boolean
fifo write: @1699477124567578448 0x7f81e25786ce 104: bjg::aJ() -> float
fifo write: @1699477124567742000 0x7f81e22be997 3410: dzw::a(cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477124567815471 0x7f81e8bf70c8 27: vtable stub
fifo write: @1699477124567914423 0x7f81e24bcb31 369: it.unimi.dsi.fastutil.doubles.DoubleIterators$AbstractIndexBasedIterator::nextDouble() -> double
fifo write: @1699477124568763024 0x7f81e97e3f79 3775: java.math.MutableBigInteger::add(java.math.MutableBigInteger) -> void
fifo write: @1699477124568949866 0x7f81e2768ecf 6949: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477124569443322 0x7f81e14780f7 888: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::ensureIndex(int) -> void
fifo write: @1699477124569942979 0x7f81e2049ab4 2282: cbt::a(int) -> cjf
fifo write: @1699477124570121421 0x7f81e260cd0e 165: bjg::eN() -> int
fifo write: @1699477124570835950 0x7f81e19b68df 26223: akp::a() -> void
fifo write: @1699477124570877651 0x7f81e26f268e 165: bjg::eO() -> int
fifo write: @1699477124571003772 0x7f81e2842b36 2268: biq::aq() -> void
fifo write: @1699477124571257806 0x7f81e277f9d9 5406: bjg::l() -> void
fifo write: @1699477124571328137 0x7f81e26fbe2e 109: bjg::C() -> void
fifo write: @1699477124571379777 0x7f81e27ad437 639: java.util.HashSet::<init>(int, float, boolean) -> void
fifo write: @1699477124572760325 0x7f81e283e777 6772: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477124572825726 0x7f81e1b54716 1742: bjg::c_() -> boolean
fifo write: @1699477124572936297 0x7f81e1e568b9 5710: bji::dx() -> void
fifo write: @1699477124573119090 0x7f81e2545a79 1440: biq::bd() -> void
fifo write: @1699477124573262042 0x7f81e274fe14 330: akr::M_() -> boolean
fifo write: @1699477124573279082 0x7f81e8bf70f8 27: vtable stub
fifo write: @1699477124573297942 0x7f81e8bf7128 27: vtable stub
fifo write: @1699477124573319212 0x7f81e8bf7158 27: vtable stub
fifo write: @1699477124574376946 0x7f81e249e599 1130: bjg::a(ehn, float) -> ehn
fifo write: @1699477124574625329 0x7f81e22fdca3 1571: biq::a(double, boolean, dfj, gw) -> void
fifo write: @1699477124575133946 0x7f81e282cd39 7845: bjg::b_() -> void
fifo write: @1699477124575227477 0x7f81e28dc930 2185: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477124575348099 0x7f81e1f48f94 240: cgd::e() -> cjf
fifo write: @1699477124575424170 0x7f81e25c3d2e 117: bjg::A(float) -> float
fifo write: @1699477124575495300 0x7f81e228b5d4 867: java.util.IdentityHashMap::containsKey(Object) -> boolean
fifo write: @1699477124575988727 0x7f81e8bf7188 27: vtable stub
fifo write: @1699477124576029247 0x7f81e8bf71b8 27: vtable stub
fifo write: @1699477124576905219 0x7f81e1f1d694 183: bjg::eS() -> cjf
fifo write: @1699477124577113181 0x7f81e26b9873 584: biq::be() -> boolean
fifo write: @1699477124577423815 0x7f81e22b01b9 1306: ako::c(int, int, dhk, boolean) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124577747320 0x7f81e1fb7cd4 2618: cbu::c(biv) -> cjf
fifo write: @1699477124578147195 0x7f81e207fe94 185: cel$$Lambda$7759.0x00007f8160c76918::<init>(cjf) -> void
fifo write: @1699477124578165695 0x7f81e8bf71e8 27: vtable stub
fifo write: @1699477124578290147 0x7f81e26bae14 455: java.util.IdentityHashMap$KeyIterator::next() -> Object
fifo write: @1699477124578747132 0x7f81e27b7607 4323: cel::b(int, cjf, java.util.function.Supplier) -> void
fifo write: @1699477124578874814 0x7f81e25378ce 5187: cel::a(int, cjf, java.util.function.Supplier) -> void
fifo write: @1699477124579456202 0x7f81e27db199 7549: bjg::h(ehn) -> void
fifo write: @1699477124580967161 0x7f81e2647619 248: io.netty.buffer.AbstractByteBuf::writeLong(long) -> io.netty.buffer.ByteBuf
fifo write: @1699477124581031852 0x7f81e26d5114 253: so::b(long) -> so
fifo write: @1699477124581084833 0x7f81e27a9114 31: io.netty.buffer.UnpooledHeapByteBuf::_setLong(int, long) -> void
fifo write: @1699477124581126603 0x7f81e202fcf4 63: io.netty.buffer.UnpooledHeapByteBuf::capacity() -> int
fifo write: @1699477124581171094 0x7f81e27609f7 433: io.netty.buffer.HeapByteBufUtil::setLong(byte[], int, long) -> void
fifo write: @1699477124581834552 0x7f81e28065d4 88: io.netty.buffer.HeapByteBufUtil::setByte(byte[], int, int) -> void
fifo write: @1699477124581896253 0x7f81e2158914 186: io.netty.buffer.UnpooledHeapByteBuf::_setByte(int, int) -> void
fifo write: @1699477124582324469 0x7f81e8bf7218 27: vtable stub
fifo write: @1699477124582336299 0x7f81e8bf7248 27: vtable stub
fifo write: @1699477124582471080 0x7f81e9caedcc 2: io.netty.buffer.AbstractByteBuf::maxCapacity() -> int
fifo write: @1699477124585394378 0x7f81e1dd14b9 2077: cmg::a(cjf) -> boolean
fifo write: @1699477124585756023 0x7f81e28b82ff 9550: bjg::em() -> void
fifo write: @1699477124587406954 0x7f81e24fadb4 664: bit$$Lambda$1498.0x00007f8160585028::test(Object) -> boolean
fifo write: @1699477124587453024 0x7f81e276e674 323: bit::c(biq) -> boolean
fifo write: @1699477124588105923 0x7f81e26cfb14 406: biq::i(double, double, double) -> double
fifo write: @1699477124588782101 0x7f81e934fccc 6: eip::d() -> String
fifo write: @1699477124588854622 0x7f81e28b0eef 644: com.google.common.collect.Maps::newIdentityHashMap() -> java.util.IdentityHashMap
fifo write: @1699477124588984904 0x7f81e22da274 27: io.netty.channel.epoll.EpollSocketChannel::config() -> io.netty.channel.ChannelConfig
fifo write: @1699477124589017664 0x7f81e2286d94 240: hk::a(Object) -> int
fifo write: @1699477124589044485 0x7f81e27d3bf4 323: tc::a(int) -> int
fifo write: @1699477124589077145 0x7f81e28dffd9 1032: cbt::b() -> int
fifo write: @1699477124589861815 0x7f81e288a40e 75: dhy::b() -> void
fifo write: @1699477124590093988 0x7f81e2334774 23: io.netty.util.internal.PlatformDependent::putLong(long, long) -> void
fifo write: @1699477124590143999 0x7f81e26da6f7 265: io.netty.util.internal.PlatformDependent0::putLong(long, long) -> void
fifo write: @1699477124590184439 0x7f81e2964894 161: sun.misc.Unsafe::putLong(long, long) -> void
fifo write: @1699477124590334081 0x7f81e28b7839 663: rd::a(java.io.DataOutput) -> void
fifo write: @1699477124590389482 0x7f81e1fb72be 722: so::a(long[]) -> so
fifo write: @1699477124591208562 0x7f81e2439a94 183: io.netty.buffer.PooledUnsafeDirectByteBuf::_setLong(int, long) -> void
fifo write: @1699477124591271563 0x7f81e28ad994 255: io.netty.buffer.UnsafeByteBufUtil::setLong(long, long) -> void
fifo write: @1699477124592174095 0x7f81e248bf74 92: io.netty.buffer.AbstractByteBuf::isReadable() -> boolean
fifo write: @1699477124592468789 0x7f81e27e8d34 2499: io.netty.channel.AbstractChannelHandlerContext::invokeWrite0(Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477124593059416 0x7f81e24878d3 7917: io.netty.channel.AbstractChannelHandlerContext::write(Object, boolean, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477124593110267 0x7f81e934f8cc 9: akr::O() -> afe
fifo write: @1699477124593546823 0x7f81e283652e 9909: io.netty.channel.AbstractChannelHandlerContext::isNotValidPromise(io.netty.channel.ChannelPromise, boolean) -> boolean
fifo write: @1699477124594236292 0x7f81e2541114 426: biq::e(ehn) -> double
fifo write: @1699477124594975021 0x7f81e9a352cc 6: eez::b() -> java.util.Set
fifo write: @1699477124595006042 0x7f81e9a34fcc 6: ecw::a() -> akq
fifo write: @1699477124595061072 0x7f81e25c0914 112: java.util.IdentityHashMap$KeySet::contains(Object) -> boolean
fifo write: @1699477124595092923 0x7f81e9a34b4c 6: eez::a() -> java.util.Set
fifo write: @1699477124595133283 0x7f81e2835b94 253: ecw$a::a(eey, Object) -> ecw$a
fifo write: @1699477124595161634 0x7f81e981bccc 6: cpv::D_() -> asc
fifo write: @1699477124595187024 0x7f81e981b9cc 6: afg::b() -> ect
fifo write: @1699477124596302578 0x7f81e9d1d320 3687: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477124597350692 0x7f81e229bba6 4985: bts::a(bjg, bjg) -> boolean
fifo write: @1699477124598826071 0x7f81e277ef60 213: com.google.common.collect.Sets::newLinkedHashSet() -> java.util.LinkedHashSet
fifo write: @1699477124599471879 0x7f81e275fbd4 928: afk::c() -> void
fifo write: @1699477124600261419 0x7f81e238a1e1 4446: cbo::a(akq, boolean, boolean) -> int
fifo write: @1699477124600686785 0x7f81e19b4444 4099: bud::a(akq, boolean, boolean) -> int
fifo write: @1699477124601223982 0x7f81e2846f67 7602: cbd::a(akq, boolean, boolean) -> int
fifo write: @1699477124601309943 0x7f81e22b34e7 6074: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477124601360824 0x7f81e18d2281 769: aka::e(ajy) -> boolean
fifo write: @1699477124601835600 0x7f81e182fc57 1694: bjg::eo() -> boolean
fifo write: @1699477124601927501 0x7f81e1408274 1521: brj$$Lambda$7226.0x00007f8160bb0bc0::test(Object) -> boolean
fifo write: @1699477124601971211 0x7f81e229b594 183: bjg::eT() -> cjf
fifo write: @1699477124602086173 0x7f81e17f31d4 1167: brj::a(bjg) -> boolean
fifo write: @1699477124602360746 0x7f81e27f7d27 14431: dld::a(akq, boolean, boolean) -> int
fifo write: @1699477124602551019 0x7f81e9c0e518 2059: tc::a(io.netty.buffer.ByteBuf, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477124602564579 0x7f81e8bf7278 27: vtable stub
fifo write: @1699477124603145677 0x7f81e2295a5f 3477: aog::d() -> void
fifo write: @1699477124603277228 0x7f81e2389914 431: java.util.Collections$SynchronizedCollection::isEmpty() -> boolean
fifo write: @1699477124603319449 0x7f81e260d694 240: io.netty.buffer.ByteBufOutputStream::writeLong(long) -> void
fifo write: @1699477124603456821 0x7f81e2846594 358: so::writeLong(long) -> io.netty.buffer.ByteBuf
fifo write: @1699477124603739874 0x7f81e28c203c 7964: alo::c() -> void
fifo write: @1699477124604201590 0x7f81e28c06ff 2807: ajn::bf() -> void
fifo write: @1699477124605344515 0x7f81e2743387 27253: dle::a(akq, boolean, boolean) -> int
fifo write: @1699477124606495760 0x7f81e9dbc8a9 942: dzw::a(cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477124607962469 0x7f81e952ab99 522: io.netty.buffer.AbstractByteBuf::ensureWritable0(int) -> void
fifo write: @1699477124608479195 0x7f81e19b3514 514: bkj::a(bki) -> void
fifo write: @1699477124608566417 0x7f81e1a2f4b4 873: bkj$$Lambda$7233.0x00007f8160bb1b78::accept(Object) -> void
fifo write: @1699477124608999422 0x7f81e2946ff7 9851: did::a(dhq, hb) -> void
fifo write: @1699477124610627623 0x7f81e8bf6880 464: I2C/C2I adapters(0xbbbbb7e)
fifo write: @1699477124612337384 0x7f81e8bf6580 464: I2C/C2I adapters(0xbb7eaab)
fifo write: @1699477124613317947 0x7f81e952a6cc 6: cpv::ae() -> java.util.function.Supplier
fifo write: @1699477124613722862 0x7f81e9e4e34c 6: brp::k() -> bqb
fifo write: @1699477124614439062 0x7f81e8bf6280 488: I2C/C2I adapters(0xbbbbeabb)
fifo write: @1699477124615141351 0x7f81e9c4fd34 2059: so::c(int) -> so
fifo write: @1699477124615857090 0x7f81e269df14 145: java.util.UUID::<init>(long, long) -> void
fifo write: @1699477124616910453 0x7f81e2742419 453: akc$$Lambda$5460.0x00007f8160a7c9d0::accept(Object) -> void
fifo write: @1699477124616960444 0x7f81e248b374 7: java.util.UUID::hashCode() -> int
fifo write: @1699477124617128096 0x7f81e2829e50 341: com.google.common.collect.Maps::newTreeMap() -> java.util.TreeMap
fifo write: @1699477124617244918 0x7f81e1732b74 964: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::remove(long) -> Object
fifo write: @1699477124617896256 0x7f81e27ee041 4110: akb::a(int, cpc, int) -> void
fifo write: @1699477124618376632 0x7f81e9e38198 7475: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::equals(Object) -> boolean
fifo write: @1699477124621039237 0x7f81e9d2c139 1018: so::k(int) -> so
fifo write: @1699477124623941884 0x7f81e282c3f4 95: io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher::match(Object) -> boolean
fifo write: @1699477124623982845 0x7f81e284d034 823: hq$1::a(Object) -> int
fifo write: @1699477124624017985 0x7f81e283d514 437: hq$1::a(he) -> int
fifo write: @1699477124624084186 0x7f81e282bf94 93: dhy::c() -> int
fifo write: @1699477124624146687 0x7f81e1d4ead9 702: dhy$c::a() -> int
fifo write: @1699477124624208668 0x7f81e225fe59 674: dhy::b(so) -> void
fifo write: @1699477124624353190 0x7f81e226fc5e 963: dhy$c::a(so) -> void
fifo write: @1699477124624505562 0x7f81e26b8c14 729: io.netty.channel.AbstractChannelHandlerContext::alloc() -> io.netty.buffer.ByteBufAllocator
fifo write: @1699477124624558032 0x7f81e27a5bb4 534: dib::a() -> int
fifo write: @1699477124624630313 0x7f81e26b8816 45: io.netty.channel.AbstractChannelHandlerContext::write(Object, io.netty.channel.ChannelPromise) -> io.netty.channel.ChannelFuture
fifo write: @1699477124624727384 0x7f81e1dfe6f7 3031: yk::a(cpc, eab, cqe, int, java.util.BitSet, java.util.BitSet, java.util.List) -> void
fifo write: @1699477124624849936 0x7f81e28b6639 663: dib::b(so) -> void
fifo write: @1699477124624958817 0x7f81e23e7d94 868: io.netty.util.ReferenceCountUtil::release(Object) -> boolean
fifo write: @1699477124624996008 0x7f81e9e37ccc 2: io.netty.util.internal.InternalThreadLocalMap::setFutureListenerStackDepth(int) -> void
fifo write: @1699477124625350702 0x7f81e2761cb4 479: dhr::j() -> int
fifo write: @1699477124625426223 0x7f81e281e499 248: io.netty.buffer.AbstractByteBuf::writeShort(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477124625486384 0x7f81e23e7914 253: so::l(int) -> so
fifo write: @1699477124625547855 0x7f81e27617d4 127: io.netty.buffer.HeapByteBufUtil::setShort(byte[], int, int) -> void
fifo write: @1699477124625611276 0x7f81e283d014 225: io.netty.buffer.UnpooledHeapByteBuf::_setShort(int, int) -> void
fifo write: @1699477124625910360 0x7f81e1dfd181 1837: dhr::c(so) -> void
fifo write: @1699477124625979321 0x7f81e23dd054 2211: net.minecraft.server.MinecraftServer::bg() -> boolean
fifo write: @1699477124626340715 0x7f81e27a5714 243: io.netty.handler.codec.MessageToByteEncoder::acceptOutboundMessage(Object) -> boolean
fifo write: @1699477124626430346 0x7f81e1969634 889: io.netty.buffer.AbstractByteBufAllocator::ioBuffer() -> io.netty.buffer.ByteBuf
fifo write: @1699477124626601349 0x7f81e23dbe14 2443: io.netty.handler.codec.MessageToByteEncoder::allocateBuffer(io.netty.channel.ChannelHandlerContext, Object, boolean) -> io.netty.buffer.ByteBuf
fifo write: @1699477124627188236 0x7f81e27b0ba9 7638: io.netty.handler.codec.MessageToByteEncoder::write(io.netty.channel.ChannelHandlerContext, Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477124627320848 0x7f81e1dadd54 795: it.unimi.dsi.fastutil.longs.LongOpenHashSet::contains(long) -> boolean
fifo write: @1699477124627433199 0x7f81e1969214 54: net.minecraft.server.MinecraftServer::x() -> boolean
fifo write: @1699477124627855235 0x7f81e2684ed4 1517: Float::equals(Object) -> boolean
fifo write: @1699477124628527483 0x7f81e281ddf4 222: java.util.HashSet::size() -> int
fifo write: @1699477124628591934 0x7f81e23db794 493: bjg::eL() -> float
fifo write: @1699477124628768217 0x7f81e26f8294 467: dhp::b(boolean) -> void
fifo write: @1699477124628932459 0x7f81e2261654 877: qw::j(String) -> float
fifo write: @1699477124628963409 0x7f81e2261174 47: io.netty.util.internal.MathUtil::findNextPositivePowerOfTwo(int) -> int
fifo write: @1699477124628992999 0x7f81e26f7e74 95: io.netty.buffer.SizeClasses::sizeIdx2size(int) -> int
fifo write: @1699477124629428255 0x7f81e26aef14 256: biq::ap() -> void
fifo write: @1699477124629476356 0x7f81e26aea94 168: bts::<init>(boolean) -> void
fifo write: @1699477124629630508 0x7f81e27ed654 877: qw::k(String) -> double
fifo write: @1699477124629824920 0x7f81e27512f4 78: io.netty.buffer.LongLongHashMap::index(long) -> int
fifo write: @1699477124629906581 0x7f81e27f71b7 741: io.netty.buffer.PoolThreadCache$MemoryRegionCache$1::newObject(io.netty.util.internal.ObjectPool$Handle) -> Object
fifo write: @1699477124629951832 0x7f81e27f6b94 455: io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry::<init>(io.netty.util.internal.ObjectPool$Handle) -> void
fifo write: @1699477124630010163 0x7f81e29466ef 562: io.netty.buffer.PoolThreadCache$MemoryRegionCache$1::newObject(io.netty.util.internal.ObjectPool$Handle) -> io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry
fifo write: @1699477124630589120 0x7f81e15e3a5a 1195: java.util.List::spliterator() -> java.util.Spliterator
fifo write: @1699477124631063536 0x7f81e27b70f4 44: bts::a(java.util.function.Predicate) -> bts
fifo write: @1699477124631177358 0x7f81e2946034 671: Math::random() -> double
fifo write: @1699477124631209908 0x7f81e1a37e34 383: java.util.Random::nextDouble() -> double
fifo write: @1699477124631259179 0x7f81e1dd423e 683: java.util.EnumSet::of(Enum, Enum) -> java.util.EnumSet
fifo write: @1699477124631566083 0x7f81e1dd3cd4 310: bqc::b(bqb, brp) -> boolean
fifo write: @1699477124631614863 0x7f81e1a37594 662: bqc$$Lambda$7829.0x00007f8160c856e0::test(Object) -> boolean
fifo write: @1699477124631648794 0x7f81e2609554 310: bqc::a(bqb, brp) -> boolean
fifo write: @1699477124631685794 0x7f81e2608c94 662: bqc$$Lambda$7832.0x00007f8160c88000::test(Object) -> boolean
fifo write: @1699477124632673817 0x7f81e288c2df 958: ajy::a(java.util.concurrent.CompletableFuture, String) -> void
fifo write: @1699477124632726838 0x7f81e27ed194 125: akc$$Lambda$5458.0x00007f8160a7c588::run() -> void
fifo write: @1699477124632867139 0x7f81e27af73a 2319: java.util.concurrent.CompletableFuture::biApplyStage(java.util.concurrent.Executor, java.util.concurrent.CompletionStage, java.util.function.BiFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124633126743 0x7f81e2350ec7 2113: akc::a(java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477124633637769 0x7f81e24d2d7e 1317: eiw::a(cpc, eiu) -> void
fifo write: @1699477124633870592 0x7f81e27aee14 675: eac::a(int) -> void
fifo write: @1699477124634847225 0x7f81e28b626e 44: bkj$$Lambda$7232.0x00007f8160bb1930::<init>(bkj) -> void
fifo write: @1699477124634997127 0x7f81e245deb1 347: bkj::a(bkh) -> bki
fifo write: @1699477124636461405 0x7f81e27851b7 3421: ajy$$Lambda$7202.0x00007f8160ba6478::accept(Object) -> void
fifo write: @1699477124641048604 0x7f81e186363f 8227: dhq::H() -> void
fifo write: @1699477124642346151 0x7f81e18601a2 7602: java.util.concurrent.CompletableFuture::biApply(Object, Object, java.util.function.BiFunction, java.util.concurrent.CompletableFuture$BiApply) -> boolean
fifo write: @1699477124642843967 0x7f81e245d9f4 226: dhp::B() -> dzw
fifo write: @1699477124642989029 0x7f81e2930bf4 4: bts::a(double) -> bts
fifo write: @1699477124644259566 0x7f81e9b479c2 5936: aka::e(ajy) -> boolean
fifo write: @1699477124644292866 0x7f81e15e3614 31: System$2::fastUUID(long, long) -> String
fifo write: @1699477124644326827 0x7f81e245d494 207: java.util.UUID::toString() -> String
fifo write: @1699477124644365537 0x7f81e28249b7 891: Long::fastUUID(long, long) -> String
fifo write: @1699477124644684881 0x7f81e9d2b5cc 6: cqo::b() -> cec
fifo write: @1699477124645266189 0x7f81e93b184c 6: bkk::a() -> java.util.UUID
fifo write: @1699477124645412581 0x7f81e26ae694 59: java.util.EnumMap::clear() -> void
fifo write: @1699477124645451381 0x7f81e2824314 230: bkj$$Lambda$7230.0x00007f8160bb14d0::<init>(bkj, qw) -> void
fifo write: @1699477124645486572 0x7f81e2524714 185: bkj$$Lambda$7231.0x00007f8160bb1708::<init>(String) -> void
fifo write: @1699477124645550652 0x7f81e2524294 185: bkj$$Lambda$7233.0x00007f8160bb1b78::<init>(bkj) -> void
fifo write: @1699477124645786215 0x7f81e2523a54 828: bkl::a(java.util.function.Consumer, bkh) -> bki
fifo write: @1699477124645894467 0x7f81e27b5df7 1633: bkj$$Lambda$7232.0x00007f8160bb1930::apply(Object) -> Object
fifo write: @1699477124645939657 0x7f81e2784297 1825: bkj::a(qw, bkh) -> void
fifo write: @1699477124645989848 0x7f81e93b0e19 588: io.netty.buffer.AbstractByteBuf::writeByte(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477124646029379 0x7f81e27d9e77 1266: bkj::e(bkh) -> bki
fifo write: @1699477124646092999 0x7f81e27d8e37 2168: bkj$$Lambda$7230.0x00007f8160bb14d0::accept(Object) -> void
fifo write: @1699477124646121230 0x7f81e93b0acc 6: cpz::g() -> cqo
fifo write: @1699477124646164350 0x7f81e288be94 47: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::object2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477124646200321 0x7f81e27d83b4 1139: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::clear() -> void
fifo write: @1699477124646227491 0x7f81e93b07cc 6: biu::n() -> bir
fifo write: @1699477124646337773 0x7f81e27d78ba 919: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::object2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.Object2ObjectMap$FastEntrySet
fifo write: @1699477124646491835 0x7f81e294db04 2729: bki::a(bki) -> void
fifo write: @1699477124646643777 0x7f81e93affd0 195: eic::getDouble(int) -> double
fifo write: @1699477124646936860 0x7f81e93afc50 83: eic::size() -> int
fifo write: @1699477124647446527 0x7f81e294d05f 950: ajy::a(String, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477124648473700 0x7f81e93af94c 6: biu::m() -> cec
fifo write: @1699477124648900926 0x7f81e2783ace 454: hx::a(int[]) -> java.util.UUID
fifo write: @1699477124648952646 0x7f81e294c934 650: qw::a(String) -> java.util.UUID
fifo write: @1699477124648981797 0x7f81e94cbacc 6: bkk::c() -> bkk$a
fifo write: @1699477124649030027 0x7f81e185f094 1743: rj::a(rq) -> java.util.UUID
fifo write: @1699477124649057258 0x7f81e94cb7cc 4: biq::t(float) -> void
fifo write: @1699477124649477873 0x7f81e94cb4cc 5: eba::a(boolean) -> void
fifo write: @1699477124649701706 0x7f81e27b5914 185: bkk$$Lambda$1431.0x00007f8160557940::<init>(String) -> void
fifo write: @1699477124649752297 0x7f81e294c394 280: bkk::<init>(java.util.UUID, java.util.function.Supplier, double, bkk$a) -> void
fifo write: @1699477124649834938 0x7f81e94cb1cc 7: bjg::n(float) -> void
fifo write: @1699477124649870618 0x7f81e94caecc 7: bjg::o(float) -> void
fifo write: @1699477124649953209 0x7f81e294be94 272: bjg::a(com.mojang.serialization.Dynamic) -> bkg
fifo write: @1699477124650030190 0x7f81e8bf72a8 27: vtable stub
fifo write: @1699477124650167932 0x7f81e185e757 821: bjg::dO() -> bkg$b
fifo write: @1699477124650248743 0x7f81e185e06a 428: bkg::a(java.util.Collection, java.util.Collection) -> bkg$b
fifo write: @1699477124650324034 0x7f81e185da14 321: bkg$b::<init>(java.util.Collection, java.util.Collection) -> void
fifo write: @1699477124650547927 0x7f81e185cf5a 1287: bkg$1::<init>(java.util.Collection, java.util.Collection, org.apache.commons.lang3.mutable.MutableObject) -> void
fifo write: @1699477124650603758 0x7f81e1887677 1493: bjg::c(float) -> void
fifo write: @1699477124650792130 0x7f81e1885ac2 4078: com.mojang.serialization.MapCodec::fieldOf(String) -> com.mojang.serialization.MapCodec
fifo write: @1699477124650893611 0x7f81e185c994 275: bkg$1$$Lambda$7219.0x00007f8160bae3e8::<init>(bkg$1, com.mojang.serialization.DynamicOps, org.apache.commons.lang3.mutable.MutableObject) -> void
fifo write: @1699477124650937092 0x7f81e94cabcc 7: bjg::z(float) -> void
fifo write: @1699477124651034603 0x7f81e94c9c85 1258: com.sun.crypto.provider.CipherFeedback::encrypt(byte[], int, int, byte[], int) -> int
fifo write: @1699477124651078124 0x7f81e9d76fcc 8: bji::s(boolean) -> void
fifo write: @1699477124651114064 0x7f81e185c534 39: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::<init>() -> void
fifo write: @1699477124651441018 0x7f81e18847dc 2322: bqc::<init>(java.util.function.Supplier) -> void
fifo write: @1699477124651594270 0x7f81e1881c29 6925: bkg::b(java.util.Collection, java.util.Collection) -> com.mojang.serialization.Codec
fifo write: @1699477124651660011 0x7f81e1881134 1079: aka$$Lambda$7208.0x00007f8160ba73d0::apply(Object) -> Object
fifo write: @1699477124651764283 0x7f81e187f11f 5085: bkg$b::a(com.mojang.serialization.Dynamic) -> bkg
fifo write: @1699477124651825463 0x7f81e187e894 709: aka::d(java.util.List) -> dhq
fifo write: @1699477124653690318 0x7f81e26c1696 14032: bkg$1::decode(com.mojang.serialization.DynamicOps, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477124655394250 0x7f81e187e394 230: aka$$Lambda$7795.0x00007f8160c7f828::<init>(aka, ajy) -> void
fifo write: @1699477124655876626 0x7f81e256ea7a 16565: aka::a(ajy, int, java.util.function.IntFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124657347205 0x7f81e187dd34 612: bki::b(bkk$a) -> java.util.Collection
fifo write: @1699477124657435516 0x7f81e26c0754 1345: qw::b(String) -> boolean
fifo write: @1699477124658622511 0x7f81e26c026e 105: java.util.stream.StreamOpFlag::fromCharacteristics(java.util.Spliterator) -> int
fifo write: @1699477124659293220 0x7f81e27914fa 16654: aka::a(ajy, int, java.util.function.IntFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124659370531 0x7f81e26bfc94 417: java.util.concurrent.CompletableFuture$CoCompletion::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124659593704 0x7f81e26bf2be 953: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::locateKey(long) -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477124660713468 0x7f81e26bec14 502: bsb::l() -> double
fifo write: @1699477124662244548 0x7f81e26be75b 127: java.util.stream.StreamSupport::longStream(java.util.Spliterator$OfLong, boolean) -> java.util.stream.LongStream
fifo write: @1699477124665262666 0x7f81e26bd99e 1881: java.util.Spliterator$OfLong::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477124666348440 0x7f81e27c9bae 22155: aka::a(ajy, int, java.util.function.IntFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124676579592 0x7f81e26bd294 581: eam::f() -> boolean
fifo write: @1699477124680390201 0x7f81e26bcb74 31: Math::floorMod(long, int) -> int
fifo write: @1699477124680426432 0x7f81e26bc6d4 246: Math::floorMod(long, long) -> long
fifo write: @1699477124680456862 0x7f81e9d766cc 2: bjj::f() -> int
fifo write: @1699477124680489363 0x7f81e26bc294 213: cqv::b(long) -> double
fifo write: @1699477124681161481 0x7f81e8bf5f80 448: I2C/C2I adapters(0xbbe6b)
fifo write: @1699477124681173362 0x7f81e8bf5c80 448: I2C/C2I adapters(0xbbe66)
fifo write: @1699477124681965892 0x7f81e8bf5980 448: I2C/C2I adapters(0xbabe6)
fifo write: @1699477124684673297 0x7f81e9efada1 38324: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124684717827 0x7f81e256d920 895: cqv::a(long, int, int, int, double, double, double) -> double
fifo write: @1699477124684742678 0x7f81e256d474 91: dhr::e() -> boolean
fifo write: @1699477124684765488 0x7f81e9d763cc 2: bjj::b() -> int
fifo write: @1699477124684791828 0x7f81e256cd94 606: dhr::d() -> boolean
fifo write: @1699477124684837929 0x7f81e256c1f8 821: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getOrDefault(Object, int) -> int
fifo write: @1699477124684862439 0x7f81e256bd54 140: arw::f(float) -> int
fifo write: @1699477124684884529 0x7f81e9d760cc 3: bjj::e() -> boolean
fifo write: @1699477124684910160 0x7f81e9d75dcc 9: akq::a() -> cqn
fifo write: @1699477124684935080 0x7f81e9d75acc 6: aka::a() -> dhg
fifo write: @1699477124685467347 0x7f81e256b694 654: cpc::<init>(gw) -> void
fifo write: @1699477124685579688 0x7f81e256b01d 492: cpv::a(int, int, int, int) -> gw
fifo write: @1699477124685774701 0x7f81e9d757cc 6: bfm::e() -> java.util.List
fifo write: @1699477124685921133 0x7f81e256ac14 140: cpc::d() -> int
fifo write: @1699477124685966433 0x7f81e256a814 140: cpc::e() -> int
fifo write: @1699477124686003864 0x7f81e9d754cc 2: eck::a() -> int
fifo write: @1699477124686040624 0x7f81e9d751cc 2: eck::c() -> int
fifo write: @1699477124686121565 0x7f81e9d74ecc 2: eck::b() -> int
fifo write: @1699477124686147525 0x7f81e9d74bcc 6: cpv::E_() -> cqv
fifo write: @1699477124688784859 0x7f81e9d748cc 4: bki::b() -> double
fifo write: @1699477124688965421 0x7f81e256a3d4 90: io.netty.channel.unix.FileDescriptor::isClosed(int) -> boolean
fifo write: @1699477124689097073 0x7f81e2569e94 325: io.netty.channel.unix.FileDescriptor::isOpen() -> boolean
fifo write: @1699477124689165964 0x7f81e2569714 666: io.netty.channel.epoll.AbstractEpollStreamChannel::isOpen() -> boolean
fifo write: @1699477124689208654 0x7f81e2569094 569: io.netty.channel.epoll.AbstractEpollChannel::isOpen() -> boolean
fifo write: @1699477124689255285 0x7f81e2568634 1277: java.util.Optional::equals(Object) -> boolean
fifo write: @1699477124690005795 0x7f81e25680ae 157: arf$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124690290788 0x7f81e2567c0e 101: com.mojang.serialization.Codec$4::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124690766295 0x7f81e278bfc7 11998: ajy::a(dhq) -> void
fifo write: @1699477124690848616 0x7f81e25677ee 141: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5276.0x00007f81609bd140::apply(Object) -> Object
fifo write: @1699477124690932047 0x7f81e278b617 363: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5281.0x00007f81609bdca0::apply(Object) -> Object
fifo write: @1699477124691148069 0x7f81e278ad51 702: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5275.0x00007f81609bcef8::apply(Object) -> Object
fifo write: @1699477124691400263 0x7f81e2789cb1 1541: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$522.0x00007f8160306240::apply(Object) -> Object
fifo write: @1699477124703058073 0x7f81e26bbeee 111: ako$$Lambda$7334.0x00007f8160bd64e0::apply(Object) -> Object
fifo write: @1699477124703790943 0x7f81e278918f 704: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset::iterator() -> it.unimi.dsi.fastutil.longs.LongBidirectionalIterator
fifo write: @1699477124704313039 0x7f81e8bf72d8 27: vtable stub
fifo write: @1699477124705991321 0x7f81e27c8db4 518: bji::a(gw) -> boolean
fifo write: @1699477124706358196 0x7f81e27c75e4 3665: brd::a(cpy, gw) -> boolean
fifo write: @1699477124710188405 0x7f81e27c67b2 1476: java.io.BufferedOutputStream::write(byte[], int, int) -> void
fifo write: @1699477124712109269 0x7f81e27c55f7 2328: bjg::cc() -> boolean
fifo write: @1699477124712236941 0x7f81e27c4e94 661: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator::init() -> void
fifo write: @1699477124712350212 0x7f81e27c4a74 96: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::pred() -> boolean
fifo write: @1699477124712442624 0x7f81e27c4614 202: acy::<init>() -> void
fifo write: @1699477124712783258 0x7f81e27c3f14 738: biq::equals(Object) -> boolean
fifo write: @1699477124712836249 0x7f81e9d7444c 9: akr::U() -> ake
fifo write: @1699477124712988221 0x7f81e27c3b14 137: io.netty.buffer.ByteBuf::<init>() -> void
fifo write: @1699477124713057732 0x7f81e27c3594 327: aeh$b::<init>(int, aef, Object) -> void
fifo write: @1699477124713136093 0x7f81e9e2c2cc 6: sn$a::a() -> sn
fifo write: @1699477124713259194 0x7f81e27c19dc 3768: aeh::c() -> java.util.List
fifo write: @1699477124713413426 0x7f81e27bf046 6312: io.netty.buffer.AbstractByteBuf::checkReadableBytes0(int) -> void
fifo write: @1699477124713740050 0x7f81e27be914 259: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator::<init>(java.util.stream.PipelineHelper, java.util.function.Supplier, boolean) -> void
fifo write: @1699477124713807581 0x7f81e27be494 188: java.util.stream.AbstractPipeline$$Lambda$782.0x00007f81601dfa28::get() -> Object
fifo write: @1699477124713911053 0x7f81e27bddf9 442: java.util.stream.ReferencePipeline::wrap(java.util.stream.PipelineHelper, java.util.function.Supplier, boolean) -> java.util.Spliterator
fifo write: @1699477124713975103 0x7f81e27bd994 31: java.util.stream.AbstractPipeline::lambda$spliterator$0() -> java.util.Spliterator
fifo write: @1699477124714062455 0x7f81e27bd394 353: java.util.stream.StreamSpliterators$WrappingSpliterator::<init>(java.util.stream.PipelineHelper, java.util.function.Supplier, boolean) -> void
fifo write: @1699477124714146406 0x7f81e9e2bcac 30: io.netty.channel.AbstractChannel::access$500(io.netty.channel.AbstractChannel) -> io.netty.channel.DefaultChannelPipeline
fifo write: @1699477124714223977 0x7f81e27bc95e 1139: java.util.stream.StreamSpliterators$WrappingSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477124714284387 0x7f81e27bc01d 797: aeh$b::a(aee, Object) -> aeh$b
fifo write: @1699477124714344468 0x7f81e27bb2f9 1533: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator::fillBuffer() -> boolean
fifo write: @1699477124714449139 0x7f81e27ba7b4 551: aka::b(akr) -> int
fifo write: @1699477124714523900 0x7f81e2876739 2452: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator::doAdvance() -> boolean
fifo write: @1699477124714578501 0x7f81e9e2b9cc 2: io.netty.channel.WriteBufferWaterMark::high() -> int
fifo write: @1699477124714629662 0x7f81e9e2b64c 47: biq::a(djb) -> void
fifo write: @1699477124714707293 0x7f81e2873dbc 5394: javax.crypto.Cipher::chooseFirstProvider() -> void
fifo write: @1699477124714745403 0x7f81e9e2b34c 2: biu::o() -> int
fifo write: @1699477124714786034 0x7f81e9e2b04c 2: biu::p() -> int
fifo write: @1699477124714854505 0x7f81e27ba314 185: java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$783.0x00007f81601e0388::<init>(java.util.stream.SpinedBuffer) -> void
fifo write: @1699477124714950556 0x7f81e27b9894 641: io.netty.util.DefaultAttributeMap::searchAttributeByKey(io.netty.util.DefaultAttributeMap$DefaultAttribute[], io.netty.util.AttributeKey) -> int
fifo write: @1699477124714998247 0x7f81e28737f4 95: io.netty.util.DefaultAttributeMap$DefaultAttribute::isRemoved() -> boolean
fifo write: @1699477124715064317 0x7f81e28732f4 250: io.netty.util.DefaultAttributeMap$DefaultAttribute::access$100(io.netty.util.DefaultAttributeMap$DefaultAttribute) -> boolean
fifo write: @1699477124715143558 0x7f81e2872e94 185: java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$784.0x00007f81601e0638::<init>(java.util.stream.StreamSpliterators$WrappingSpliterator) -> void
fifo write: @1699477124715227170 0x7f81e2872157 1155: biq::cT() -> Iterable
fifo write: @1699477124715344021 0x7f81e2870887 3069: aka$b::b(akr) -> void
fifo write: @1699477124715413542 0x7f81e286f0da 3372: java.util.stream.StreamSpliterators$WrappingSpliterator::initPartialTraversalState() -> void
fifo write: @1699477124715490983 0x7f81e286d4a1 3767: io.netty.util.DefaultAttributeMap::attr(io.netty.util.AttributeKey) -> io.netty.util.Attribute
fifo write: @1699477124715510023 0x7f81e8bf7308 27: vtable stub
fifo write: @1699477124715563004 0x7f81e286cf14 185: biq$$Lambda$7757.0x00007f8160c76490::<init>(biq) -> void
fifo write: @1699477124715640905 0x7f81e286cb14 137: io.netty.util.concurrent.AbstractFuture::<init>() -> void
fifo write: @1699477124715723726 0x7f81e286c414 398: aka$b::a(int) -> int
fifo write: @1699477124715773787 0x7f81e286bff4 90: io.netty.util.concurrent.SingleThreadEventExecutor::isShutdown() -> boolean
fifo write: @1699477124715856778 0x7f81e286a7f7 3301: aka$b::b() -> int
fifo write: @1699477124715955179 0x7f81e286a2f4 96: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::succ() -> boolean
fifo write: @1699477124716017210 0x7f81e2869f47 101: java.util.Collections::newSetFromMap(java.util.Map) -> java.util.Set
fifo write: @1699477124716062750 0x7f81e2869b14 39: java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater::addAndGet(Object, long) -> long
fifo write: @1699477124716124491 0x7f81e2869694 200: java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater::accessCheck(Object) -> void
fifo write: @1699477124716204972 0x7f81e28684b7 2538: biq$$Lambda$7757.0x00007f8160c76490::iterator() -> java.util.Iterator
fifo write: @1699477124716277513 0x7f81e28672b7 2428: biq::C() -> java.util.Iterator
fifo write: @1699477124716373164 0x7f81e2866c94 336: java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater::getAndAdd(Object, long) -> long
fifo write: @1699477124716415305 0x7f81e2866874 99: io.netty.handler.codec.CodecOutputList::getUnsafe(int) -> Object
fifo write: @1699477124716457635 0x7f81e2866294 446: io.netty.handler.codec.CodecOutputList::insert(int, Object) -> void
fifo write: @1699477124716492776 0x7f81e2865e94 87: io.netty.buffer.AbstractByteBuf::checkReadableBytes(int) -> void
fifo write: @1699477124716662588 0x7f81e28650fe 1610: io.netty.handler.codec.CodecOutputList::add(Object) -> boolean
fifo write: @1699477124716714149 0x7f81e28645de 1110: com.google.common.collect.RegularImmutableSet::contains(Object) -> boolean
fifo write: @1699477124716793520 0x7f81e2863f94 400: io.netty.buffer.PoolSubpage::findNextAvail0(int, long) -> int
fifo write: @1699477124717034173 0x7f81e2863b7d 62: io.netty.util.internal.PlatformDependent::copyMemory(long, byte[], int, long) -> void
fifo write: @1699477124717101794 0x7f81e2863723 208: io.netty.buffer.PooledUnsafeDirectByteBuf::getBytes(int, byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477124717208185 0x7f81e2863314 39: io.netty.channel.DefaultChannelPromise::addListener(io.netty.util.concurrent.GenericFutureListener) -> io.netty.channel.ChannelPromise
fifo write: @1699477124717293046 0x7f81e2862cb9 452: io.netty.buffer.AbstractByteBuf::readBytes(byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477124717383187 0x7f81e2861f7c 1796: io.netty.channel.DefaultChannelPromise::<init>(io.netty.channel.Channel, io.netty.util.concurrent.EventExecutor) -> void
fifo write: @1699477124717437238 0x7f81e28616b4 919: javax.crypto.Cipher::checkCipherState() -> void
fifo write: @1699477124717488109 0x7f81e2860fb4 569: io.netty.buffer.AbstractReferenceCountedByteBuf::<init>(int) -> void
fifo write: @1699477124717566290 0x7f81e28606d4 932: io.netty.util.internal.ReferenceCountUpdater::setInitialValue(io.netty.util.ReferenceCounted) -> void
fifo write: @1699477124717620750 0x7f81e28602f4 23: io.netty.util.internal.PlatformDependent::safeConstructPutInt(Object, long, int) -> void
fifo write: @1699477124717668511 0x7f81e285fe14 292: io.netty.buffer.AbstractByteBuf::<init>(int) -> void
fifo write: @1699477124717736362 0x7f81e285f6f4 27: sun.misc.Unsafe::storeFence() -> void
fifo write: @1699477124717816933 0x7f81e285e0b6 3292: io.netty.channel.AbstractChannelHandlerContext::newPromise() -> io.netty.channel.ChannelPromise
fifo write: @1699477124717869324 0x7f81e285da94 279: so::<init>(io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124717922964 0x7f81e285d4f4 379: io.netty.util.internal.PlatformDependent0::safeConstructPutInt(Object, long, int) -> void
fifo write: @1699477124718010605 0x7f81e285bc45 3078: io.netty.buffer.UnsafeByteBufUtil::getBytes(io.netty.buffer.AbstractByteBuf, long, int, byte[], int, int) -> void
fifo write: @1699477124718076826 0x7f81e285b714 31: io.netty.buffer.PooledUnsafeDirectByteBuf$1::newObject(io.netty.util.internal.ObjectPool$Handle) -> Object
fifo write: @1699477124718141057 0x7f81e285addc 980: io.netty.buffer.PooledByteBuf::<init>(io.netty.util.internal.ObjectPool$Handle, int) -> void
fifo write: @1699477124718197618 0x7f81e285a814 420: io.netty.channel.epoll.EpollSocketChannel::remoteAddress() -> java.net.SocketAddress
fifo write: @1699477124718268609 0x7f81e2859e5f 1080: io.netty.buffer.PooledUnsafeDirectByteBuf::<init>(io.netty.util.internal.ObjectPool$Handle, int) -> void
fifo write: @1699477124718347940 0x7f81e28593df 1177: io.netty.buffer.PooledUnsafeDirectByteBuf::<init>(io.netty.util.internal.ObjectPool$Handle, int, io.netty.buffer.PooledUnsafeDirectByteBuf$1) -> void
fifo write: @1699477124718431251 0x7f81e285885f 1282: io.netty.buffer.PooledUnsafeDirectByteBuf$1::newObject(io.netty.util.internal.ObjectPool$Handle) -> io.netty.buffer.PooledUnsafeDirectByteBuf
fifo write: @1699477124718490872 0x7f81e2858294 331: io.netty.channel.epoll.EpollSocketChannel::remoteAddress() -> java.net.InetSocketAddress
fifo write: @1699477124718539602 0x7f81e2857e94 31: com.sun.crypto.provider.CipherCore::getOutputSize(int) -> int
fifo write: @1699477124718587313 0x7f81e2857a14 188: com.sun.crypto.provider.AESCipher::engineGetOutputSize(int) -> int
fifo write: @1699477124718637184 0x7f81e2856fd4 1236: javax.crypto.Cipher::getOutputSize(int) -> int
fifo write: @1699477124718691814 0x7f81e28567b9 729: sf::a(io.netty.buffer.ByteBuf) -> byte[]
fifo write: @1699477124718745055 0x7f81e2856194 513: sq$$Lambda$7605.0x00007f8160c4a228::accept(Object) -> void
fifo write: @1699477124718809376 0x7f81e2855c94 372: ss::encode(io.netty.channel.ChannelHandlerContext, Object, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124718856016 0x7f81e2855694 419: sn$a::a(vd) -> int
fifo write: @1699477124718902857 0x7f81e2855214 240: sn$b::a(Class) -> int
fifo write: @1699477124718970578 0x7f81e2854d14 348: tf::encode(io.netty.channel.ChannelHandlerContext, Object, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124719035679 0x7f81e28546c3 573: java.lang.invoke.Invokers$Holder::linkToTargetMethod(int, Object, Object) -> Object
fifo write: @1699477124719145250 0x7f81e2854274 7: cpc::e(int, int) -> int
fifo write: @1699477124719200011 0x7f81e2853ab7 700: all$$Lambda$7940.0x00007f8160c9f368::applyAsInt(Object) -> int
fifo write: @1699477124719290712 0x7f81e2852107 3901: io.netty.channel.AbstractChannelHandlerContext::write(Object) -> io.netty.channel.ChannelFuture
fifo write: @1699477124719361283 0x7f81e28510a2 1815: bdu::b(sn, int, java.net.SocketAddress, int) -> void
fifo write: @1699477124719406333 0x7f81e2850b14 253: so::a(double) -> so
fifo write: @1699477124719447444 0x7f81e2850614 288: cpc::c(long) -> int
fifo write: @1699477124719503095 0x7f81e284ff39 555: io.netty.buffer.AbstractByteBuf::writeDouble(double) -> io.netty.buffer.ByteBuf
fifo write: @1699477124719567746 0x7f81e284f657 945: io.netty.util.concurrent.DefaultPromise::addListener0(io.netty.util.concurrent.GenericFutureListener) -> void
fifo write: @1699477124720882643 0x7f81e2a12d94 200: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::accessCheck(Object) -> void
fifo write: @1699477124720933393 0x7f81e2a13234 812: io.netty.util.concurrent.PromiseCombiner::checkInEventLoop() -> void
fifo write: @1699477124720995054 0x7f81e2a13a34 495: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::valueCheck(Object) -> void
fifo write: @1699477124721075535 0x7f81e2a140ee 1005: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::compareAndSet(Object, Object, Object) -> boolean
fifo write: @1699477124721122786 0x7f81e9e2a44c 2: io.netty.buffer.UnpooledDirectByteBuf::capacity() -> int
fifo write: @1699477124721235367 0x7f81e2a14b54 1619: io.netty.util.concurrent.DefaultPromise::setUncancellable() -> boolean
fifo write: @1699477124721288378 0x7f81e2a157d4 1068: io.netty.channel.unix.IovArray::processMessage(Object) -> boolean
fifo write: @1699477124721388059 0x7f81e2a16074 152: io.netty.channel.ChannelOutboundBuffer::isFlushedEntry(io.netty.channel.ChannelOutboundBuffer$Entry) -> boolean
fifo write: @1699477124721433000 0x7f81e9e29e4c 2: io.netty.util.internal.InternalThreadLocalMap::futureListenerStackDepth() -> int
fifo write: @1699477124721488610 0x7f81e9e29b4c 6: io.netty.util.concurrent.DefaultPromise::executor() -> io.netty.util.concurrent.EventExecutor
fifo write: @1699477124721532201 0x7f81e9e2974c 2: io.netty.channel.WriteBufferWaterMark::low() -> int
fifo write: @1699477124721595502 0x7f81e2a16581 1085: io.netty.channel.unix.IovArray::add(long, long, int) -> boolean
fifo write: @1699477124721617232 0x7f81e8bf7338 27: vtable stub
fifo write: @1699477124721772724 0x7f81e2a17185 2430: io.netty.channel.unix.IovArray::add(io.netty.buffer.ByteBuf, int, int) -> boolean
fifo write: @1699477124722168159 0x7f81e2a1887f 8961: ss::a(io.netty.channel.ChannelHandlerContext, vd, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124722245960 0x7f81e9cc40ac 26: io.netty.util.concurrent.PromiseCombiner::access$200(io.netty.util.concurrent.PromiseCombiner) -> int
fifo write: @1699477124722357892 0x7f81e2a1c994 179: io.netty.channel.ChannelOutboundBuffer::current() -> Object
fifo write: @1699477124722449743 0x7f81e9cc3dac 30: io.netty.util.concurrent.PromiseCombiner::access$000(io.netty.util.concurrent.PromiseCombiner) -> io.netty.util.concurrent.EventExecutor
fifo write: @1699477124722523284 0x7f81e9cc3aac 26: io.netty.util.concurrent.PromiseCombiner::access$400(io.netty.util.concurrent.PromiseCombiner) -> int
fifo write: @1699477124722604805 0x7f81e2a1ce34 898: io.netty.channel.DefaultChannelPromise::executor() -> io.netty.util.concurrent.EventExecutor
fifo write: @1699477124722680136 0x7f81e2a1d6d9 1511: io.netty.util.concurrent.DefaultPromise::notifyListenersNow() -> void
fifo write: @1699477124722741337 0x7f81e2a1e4b9 584: dhu::a() -> int
fifo write: @1699477124722887278 0x7f81e2a1ecde 793: dhu::b(so) -> void
fifo write: @1699477124723110671 0x7f81e2a1f614 111: io.netty.util.concurrent.DefaultPromise::setSuccess0(Object) -> boolean
fifo write: @1699477124723176272 0x7f81e2a1fa14 261: io.netty.util.concurrent.DefaultPromise::trySuccess(Object) -> boolean
fifo write: @1699477124723231403 0x7f81e2a1fe94 472: io.netty.util.concurrent.DefaultPromise::isSuccess() -> boolean
fifo write: @1699477124723427145 0x7f81e2a205bf 3124: io.netty.util.concurrent.DefaultPromise::notifyListener0(io.netty.util.concurrent.Future, io.netty.util.concurrent.GenericFutureListener) -> void
fifo write: @1699477124723582667 0x7f81e2a22057 5955: io.netty.util.concurrent.DefaultPromise::notifyListeners() -> void
fifo write: @1699477124723637598 0x7f81e2a2475e 947: io.netty.util.concurrent.DefaultPromise::setValue0(Object) -> boolean
fifo write: @1699477124723674189 0x7f81e2a25145 300: io.netty.util.concurrent.DefaultPromise::checkNotifyWaiters() -> boolean
fifo write: @1699477124723720919 0x7f81e2a25774 1927: io.netty.channel.ChannelOutboundBuffer::progress(long) -> void
fifo write: @1699477124725144698 0x7f81e2a26717 5048: io.netty.util.Recycler::get() -> Object
fifo write: @1699477124727584219 0x7f81e2a289b4 482: cqg$d::a(bjj, cpc) -> boolean
fifo write: @1699477124727646430 0x7f81e2a29134 692: dks::a(int) -> int
fifo write: @1699477124727707131 0x7f81e2a298b4 886: dks::a(int, int) -> int
fifo write: @1699477124727767531 0x7f81e2a2a174 244: arw::b(asc, int, int) -> int
fifo write: @1699477124727838782 0x7f81e2a2a614 185: cqg$$Lambda$7853.0x00007f8160c8b6b0::<init>(cqg$d) -> void
fifo write: @1699477124727939614 0x7f81e2a2aa94 185: cqg$$Lambda$7852.0x00007f8160c8b288::<init>(cqg$d) -> void
fifo write: @1699477124728160747 0x7f81e2a2aef4 91: ako::g() -> dhg
fifo write: @1699477124728343109 0x7f81e2a2b31a 366: dfi$a::g(cpb, gw) -> boolean
fifo write: @1699477124728528921 0x7f81e2a2b8bc 1373: cqg::a(bjj, akq, dhq, cqg$c, cqg$a) -> void
fifo write: @1699477124728680663 0x7f81e2a2c494 383: cqf$a::b(bjj) -> boolean
fifo write: @1699477124728806145 0x7f81e2a2ca94 31: io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue::poll() -> Object
fifo write: @1699477124728883066 0x7f81e2a2ce9e 685: io.netty.util.concurrent.SingleThreadEventExecutor::pollTaskFrom(java.util.Queue) -> Runnable
fifo write: @1699477124728960787 0x7f81e2a2d61f 2958: cqg::a(cpv, dhq) -> gw
fifo write: @1699477124729145309 0x7f81e2a2ed21 3174: dhf::a(dks$a, int, int) -> int
fifo write: @1699477124729541004 0x7f81e9cc37cc 6: sn$b::a() -> vc
fifo write: @1699477124729559255 0x7f81e8bf5680 456: I2C/C2I adapters(0xbbbebe6)
fifo write: @1699477124729701566 0x7f81e2a3053f 1685: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::poll() -> Object
fifo write: @1699477124730720600 0x7f81e2a3140e 29: io.netty.util.Recycler$DefaultHandle::toClaimed() -> void
fifo write: @1699477124730842571 0x7f81e2a317b4 366: io.netty.util.Recycler$DefaultHandle::unguardedRecycle(Object) -> void
fifo write: @1699477124731395328 0x7f81e2a321a7 12284: cqg::a(bjj, akq, dhf, gw, cqg$c, cqg$a) -> void
fifo write: @1699477124731964686 0x7f81e2a37932 1400: io.netty.buffer.PoolChunkList::allocate(io.netty.buffer.PooledByteBuf, int, int, io.netty.buffer.PoolThreadCache) -> boolean
fifo write: @1699477124732075157 0x7f81e2a389c6 6968: io.netty.channel.AbstractChannel$AbstractUnsafe::write(Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477124732208549 0x7f81e2a3b8c0 1109: gw::b(int, int, int) -> gw
fifo write: @1699477124732373061 0x7f81e9cc34cc 3: biu::e() -> boolean
fifo write: @1699477124732581654 0x7f81e2a3c294 289: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$KeyIterator::next() -> Object
fifo write: @1699477124732746926 0x7f81e2a3c794 111: io.netty.buffer.PoolSubpage::getNextAvail() -> int
fifo write: @1699477124732781386 0x7f81e2a3cbf4 10: io.netty.buffer.PoolSubpage::toHandle(int) -> long
fifo write: @1699477124733023029 0x7f81e2a3d099 1975: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477124733083660 0x7f81e2a3e254 1394: io.netty.util.Recycler$LocalPool::claim() -> io.netty.util.Recycler$DefaultHandle
fifo write: @1699477124733642437 0x7f81e2a3ee94 387: sm::k() -> boolean
fifo write: @1699477124733738759 0x7f81e2a3f4c9 119: bfo::bl() -> boolean
fifo write: @1699477124733835620 0x7f81e2a3f9e1 2594: io.netty.util.Recycler$LocalPool::release(io.netty.util.Recycler$DefaultHandle, boolean) -> void
fifo write: @1699477124733946221 0x7f81e2a40efc 3828: com.google.common.collect.ImmutableSet::copyOf(java.util.Collection) -> com.google.common.collect.ImmutableSet
fifo write: @1699477124734050813 0x7f81e2a42754 25: com.google.common.math.IntMath::sqrtFloor(int) -> int
fifo write: @1699477124734219565 0x7f81e2a42b14 273: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::relaxedOffer(Object) -> boolean
fifo write: @1699477124734300126 0x7f81e2a430a9 1510: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::offer(Object) -> boolean
fifo write: @1699477124734407027 0x7f81e2a43e0e 132: io.netty.util.Recycler$LocalPool::accept(Object) -> void
fifo write: @1699477124734637120 0x7f81e2a4428e 75: io.netty.util.Recycler$LocalPool::accept(io.netty.util.Recycler$DefaultHandle) -> void
fifo write: @1699477124734746312 0x7f81e2a44694 31: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::relaxedPoll() -> Object
fifo write: @1699477124734955194 0x7f81e2a44a94 167: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int) -> int
fifo write: @1699477124735215828 0x7f81e2a44ef1 179: io.netty.channel.ChannelOutboundBuffer$Entry$1::newObject(io.netty.util.internal.ObjectPool$Handle) -> io.netty.channel.ChannelOutboundBuffer$Entry
fifo write: @1699477124735298529 0x7f81e2a45394 278: io.netty.channel.ChannelOutboundBuffer$Entry$1::newObject(io.netty.util.internal.ObjectPool$Handle) -> Object
fifo write: @1699477124735367940 0x7f81e2a4597f 1050: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::relaxedPoll() -> Object
fifo write: @1699477124735460901 0x7f81e2a4646e 166: io.netty.channel.ChannelOutboundBuffer$Entry::<init>(io.netty.util.internal.ObjectPool$Handle, io.netty.channel.ChannelOutboundBuffer$1) -> void
fifo write: @1699477124735527422 0x7f81e2a4690e 276: io.netty.util.concurrent.SingleThreadEventExecutor::pollTask() -> Runnable
fifo write: @1699477124735600473 0x7f81e2a46e6e 166: io.netty.channel.ChannelOutboundBuffer$Entry::<init>(io.netty.util.internal.ObjectPool$Handle) -> void
fifo write: @1699477124735756435 0x7f81e2a47385 2818: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil::drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int) -> int
fifo write: @1699477124735849156 0x7f81e2a489b3 550: io.netty.util.concurrent.DefaultPromise::addListener(io.netty.util.concurrent.GenericFutureListener) -> io.netty.util.concurrent.Promise
fifo write: @1699477124735866786 0x7f81e8bf7368 27: vtable stub
fifo write: @1699477124736245751 0x7f81e2a494ff 12055: aka::l() -> void
fifo write: @1699477124736358952 0x7f81e2a4e38e 279: io.netty.handler.codec.CodecOutputList$CodecOutputLists::recycle(io.netty.handler.codec.CodecOutputList) -> void
fifo write: @1699477124736406773 0x7f81e2a4e90e 283: io.netty.handler.codec.CodecOutputList::recycle() -> void
fifo write: @1699477124736476764 0x7f81e2a4ef11 666: io.netty.handler.codec.CodecOutputList$CodecOutputLists::getOrCreate() -> io.netty.handler.codec.CodecOutputList
fifo write: @1699477124736528025 0x7f81e2a4f70e 75: com.sun.crypto.provider.AESCipher::engineUpdate(byte[], int, int, byte[], int) -> int
fifo write: @1699477124739530553 0x7f81e9d8ef12 29295: ako::s() -> boolean
fifo write: @1699477124739612514 0x7f81e2a4fb0e 321: io.netty.channel.AbstractChannel::remoteAddress() -> java.net.SocketAddress
fifo write: @1699477124739707955 0x7f81e2a501d1 920: io.netty.handler.codec.CodecOutputList::newInstance() -> io.netty.handler.codec.CodecOutputList
fifo write: @1699477124739847247 0x7f81e2a50f5c 4103: com.sun.crypto.provider.CipherCore::update(byte[], int, int, byte[], int) -> int
fifo write: @1699477124740597526 0x7f81e9d01b7c 9160: net.minecraft.server.MinecraftServer::bg() -> boolean
fifo write: @1699477124743476173 0x7f81e9f14c77 27770: aki::a(aka) -> boolean
fifo write: @1699477124743597885 0x7f81e9d01100 457: com.mojang.serialization.Codec$16::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477124745196886 0x7f81e9d00dcc 6: dgg::c() -> String
fifo write: @1699477124745710732 0x7f81e9cc1af8 2060: com.mojang.serialization.Codec$4::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124746549583 0x7f81e2a5388e 179: java.util.concurrent.CompletableFuture$UniCompose::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.Function) -> void
fifo write: @1699477124746860847 0x7f81e9cc11ef 398: com.mojang.serialization.Encoder$2$$Lambda$5286.0x00007f81609be7d0::apply(Object) -> Object
fifo write: @1699477124747040759 0x7f81e2a53fa0 5927: java.util.concurrent.CompletableFuture::uniComposeStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124747779219 0x7f81e9d8e2f9 302: arf$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124750946150 0x7f81e9c138d0 2531: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5275.0x00007f81609bcef8::apply(Object) -> Object
fifo write: @1699477124751058061 0x7f81e2a56767 6293: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477124751345825 0x7f81e983de74 2196: net.minecraft.server.MinecraftServer::x() -> boolean
fifo write: @1699477124751486747 0x7f81e2a59222 2712: coz::<init>(cpf, biq, ehi, boolean, java.util.function.BiFunction) -> void
fifo write: @1699477124753736076 0x7f81e8bf7398 27: vtable stub
fifo write: @1699477124760893228 0x7f81e2a5a91f 6869: bjg::E() -> java.util.Map
fifo write: @1699477124761000210 0x7f81e2a5d83a 3211: bqo::n() -> boolean
fifo write: @1699477124761938672 0x7f81e9ace790 3417: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$522.0x00007f8160306240::apply(Object) -> Object
fifo write: @1699477124762022603 0x7f81e2a5f03f 2980: bqo::n() -> boolean
fifo write: @1699477124763068136 0x7f81e2a606dc 1194: com.google.common.collect.RegularImmutableMap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477124767565824 0x7f81e2a61532 327: jdk.internal.misc.Unsafe::getAndSetLong(Object, long, long) -> long
fifo write: @1699477124768143841 0x7f81e2a61b57 2841: io.netty.buffer.PooledByteBufAllocator::threadCache() -> io.netty.buffer.PoolThreadCache
fifo write: @1699477124769944314 0x7f81e96a8d64 3554: com.mojang.serialization.codecs.OptionalFieldCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477124770182517 0x7f81e2a62ff4 1677: com.sun.crypto.provider.CipherCore::getOutputSizeByOperation(int, boolean) -> int
fifo write: @1699477124770379010 0x7f81e2a63f1e 2074: cqf::a(bjj, cpc) -> boolean
fifo write: @1699477124770457481 0x7f81e2a64f1a 1164: dfi$d::f(dfj, cpb, gw) -> boolean
fifo write: @1699477124770546002 0x7f81e2a65937 1246: dfi$d$$Lambda$498.0x00007f81602f7700::test(dfj, cpb, gw) -> boolean
fifo write: @1699477124771086379 0x7f81e2a66398 800: io.netty.channel.unix.UnixChannelUtil::isBufferCopyNeededForWrite(io.netty.buffer.ByteBuf, int) -> boolean
fifo write: @1699477124771151430 0x7f81e2a66b14 890: io.netty.channel.unix.UnixChannelUtil::isBufferCopyNeededForWrite(io.netty.buffer.ByteBuf) -> boolean
fifo write: @1699477124771247271 0x7f81e2a67377 1332: io.netty.handler.timeout.IdleStateHandler::write(io.netty.channel.ChannelHandlerContext, Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477124771349672 0x7f81e2a67e94 738: io.netty.channel.ChannelOutboundBuffer$Entry::newInstance(Object, int, long, io.netty.channel.ChannelPromise) -> io.netty.channel.ChannelOutboundBuffer$Entry
fifo write: @1699477124771394163 0x7f81e2a685f4 87: io.netty.channel.DefaultChannelConfig::getWriteBufferHighWaterMark() -> int
fifo write: @1699477124771562925 0x7f81e2a68a5c 938: io.netty.channel.ChannelOutboundBuffer::incrementPendingOutboundBytes(long, boolean) -> void
fifo write: @1699477124771894900 0x7f81e2a69474 2628: io.netty.channel.ChannelOutboundBuffer::total(Object) -> long
fifo write: @1699477124771961400 0x7f81e2a6a4d4 675: aka::c(akr, cpc) -> boolean
fifo write: @1699477124772068372 0x7f81e2a6adf7 4129: io.netty.channel.epoll.AbstractEpollStreamChannel::filterOutboundMessage(Object) -> Object
fifo write: @1699477124772135063 0x7f81e2a6ca94 694: aka::a(cpc, biq) -> double
fifo write: @1699477124772226284 0x7f81e2a6d314 117: sh::a(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124772314995 0x7f81e2a6d794 474: sh::encode(io.netty.channel.ChannelHandlerContext, Object, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124772394666 0x7f81e2a6dde1 964: sf::a(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124772440157 0x7f81e2a6e862 1035: javax.crypto.Cipher::update(byte[], int, int, byte[]) -> int
fifo write: @1699477124772560578 0x7f81e2a6f214 348: sl::encode(io.netty.channel.ChannelHandlerContext, Object, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124772912643 0x7f81e2a6f7e6 2273: sl::a(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124775746949 0x7f81e9c12414 1729: ro::a(java.io.DataOutput) -> void
fifo write: @1699477124776346967 0x7f81e2a70b94 381: io.netty.buffer.PooledByteBuf::maxFastWritableBytes() -> int
fifo write: @1699477124777094977 0x7f81e2a7119c 2287: io.netty.buffer.PooledByteBuf::capacity(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477124777186968 0x7f81e2a72397 153: dfi$a::a(cpv, gw, biq) -> void
fifo write: @1699477124777855956 0x7f81e2a72d59 23456: bji::fg() -> void
fifo write: @1699477124778041569 0x7f81e2a7b41e 5181: io.netty.buffer.AbstractByteBufAllocator::calculateNewCapacity(int, int) -> int
fifo write: @1699477124778130150 0x7f81e2a7d820 2679: io.netty.buffer.AbstractByteBuf::checkNewCapacity(int) -> void
fifo write: @1699477124778298602 0x7f81e2a7eec7 4761: io.netty.buffer.PoolArena::reallocate(io.netty.buffer.PooledByteBuf, int) -> void
fifo write: @1699477124778377763 0x7f81e2a81294 332: io.netty.buffer.PoolArena$DirectArena::memoryCopy(Object, int, io.netty.buffer.PooledByteBuf, int) -> void
fifo write: @1699477124778440134 0x7f81e2a81774 383: io.netty.channel.ChannelOutboundBuffer::safeSuccess(io.netty.channel.ChannelPromise) -> void
fifo write: @1699477124778504845 0x7f81e2a81d34 1098: io.netty.util.ReferenceCountUtil::safeRelease(Object) -> void
fifo write: @1699477124778595156 0x7f81e2a826f7 1483: io.netty.buffer.PoolArena$DirectArena::memoryCopy(java.nio.ByteBuffer, int, io.netty.buffer.PooledByteBuf, int) -> void
fifo write: @1699477124778750508 0x7f81e2a83294 450: io.netty.channel.ChannelOutboundBuffer::removeEntry(io.netty.channel.ChannelOutboundBuffer$Entry) -> void
fifo write: @1699477124778847319 0x7f81e2a83977 945: io.netty.channel.ChannelOutboundBuffer::remove() -> boolean
fifo write: @1699477124778900110 0x7f81e2a84374 87: io.netty.channel.DefaultChannelConfig::getWriteBufferLowWaterMark() -> int
fifo write: @1699477124779111383 0x7f81e2a84794 563: io.netty.channel.ChannelOutboundBuffer$Entry::unguardedRecycle() -> void
fifo write: @1699477124779177714 0x7f81e2a84edc 1010: io.netty.channel.ChannelOutboundBuffer::decrementPendingOutboundBytes(long, boolean, boolean) -> void
fifo write: @1699477124779471187 0x7f81e2a8597f 1636: io.netty.util.internal.PromiseNotificationUtil::trySuccess(io.netty.util.concurrent.Promise, Object, io.netty.util.internal.logging.InternalLogger) -> void
fifo write: @1699477124779519508 0x7f81e2a86714 692: hw::e(long) -> long
fifo write: @1699477124779706960 0x7f81e2a86e14 183: dhl::a(int, int, int) -> int
fifo write: @1699477124779745861 0x7f81e2a87294 402: dhl::d(int) -> int
fifo write: @1699477124779969484 0x7f81e2a87939 2249: biq::bf() -> void
fifo write: @1699477124780116806 0x7f81e2a88894 503: gw::a() -> long
fifo write: @1699477124780880026 0x7f81e2a88eb4 990: ead::b(gw) -> int
fifo write: @1699477124780929806 0x7f81e9c120cc 2: cpv::A_() -> int
fifo write: @1699477124782622948 0x7f81e9c11dcc 4: dis::s() -> float
fifo write: @1699477124784565113 0x7f81e2a8995f 6385: cw::a(akr, java.util.function.Predicate) -> void
fifo write: @1699477124784712865 0x7f81e2a8c3b4 683: io.netty.util.concurrent.SingleThreadEventExecutor::execute0(Runnable) -> void
fifo write: @1699477124784779506 0x7f81e2a8cb37 777: io.netty.util.concurrent.SingleThreadEventExecutor::execute(Runnable) -> void
fifo write: @1699477124784840777 0x7f81e2a8d314 31: io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue::offer(Object) -> boolean
fifo write: @1699477124784946738 0x7f81e2a8d734 941: io.netty.util.concurrent.SingleThreadEventExecutor::offerTask(Runnable) -> boolean
fifo write: @1699477124785027739 0x7f81e2a8e0a1 1911: io.netty.util.concurrent.SingleThreadEventExecutor::addTask(Runnable) -> void
fifo write: @1699477124785129630 0x7f81e2a8f014 325: io.netty.channel.epoll.EpollEventLoop::wakeup(boolean) -> void
fifo write: @1699477124785685647 0x7f81e2a8f785 4990: io.netty.util.concurrent.SingleThreadEventExecutor::execute(Runnable, boolean) -> void
fifo write: @1699477124785827189 0x7f81e2a91af4 232: io.netty.util.concurrent.AbstractEventExecutor::runTask(Runnable) -> void
fifo write: @1699477124785968501 0x7f81e2a92083 1538: java.lang.invoke.LambdaForm$DMH.0x00007f81606a0400::newInvokeSpecial(Object, Object, Object, Object, int) -> Object
fifo write: @1699477124786019192 0x7f81e2a92c14 465: io.netty.util.concurrent.AbstractEventExecutor::safeExecute(Runnable) -> void
fifo write: @1699477124786097463 0x7f81e2a93349 671: java.lang.invoke.LambdaForm$MH.0x00007f8160a44c00::linkToTargetMethod(Object, Object, Object, int, Object) -> Object
fifo write: @1699477124786332106 0x7f81e2a93a34 1079: aka$$Lambda$7203.0x00007f8160ba66b0::apply(Object) -> Object
fifo write: @1699477124786387876 0x7f81e2a94314 709: aka::c(java.util.List) -> dhq
fifo write: @1699477124786984884 0x7f81e2a94a7c 1530: dhq::J() -> void
fifo write: @1699477124787167686 0x7f81e2a95694 361: aka$$Lambda$7204.0x00007f8160ba68f0::accept(Object) -> void
fifo write: @1699477124787749524 0x7f81e2a95cbc 2524: aka::a(dhq) -> void
fifo write: @1699477124787871695 0x7f81e2a97161 2406: aka::a(ajy, dhq) -> void
fifo write: @1699477124787948776 0x7f81e2a98601 4400: did::a(dhq) -> void
fifo write: @1699477124788102058 0x7f81e2a9a567 6286: aka::a(ajy, dhf) -> dhf
fifo write: @1699477124788152769 0x7f81e2a9cf94 185: did$$Lambda$7207.0x00007f8160ba7198::<init>(cpv) -> void
fifo write: @1699477124788193939 0x7f81e2a9d414 165: dhq::c(long) -> void
fifo write: @1699477124788244730 0x7f81e2a9d939 731: akq::b(dhq) -> void
fifo write: @1699477124788405702 0x7f81e2a9e114 253: so::c(byte[]) -> so
fifo write: @1699477124788461613 0x7f81e2a9e599 240: io.netty.buffer.AbstractByteBuf::writeBytes(byte[]) -> io.netty.buffer.ByteBuf
fifo write: @1699477124788834447 0x7f81e2a9ea94 709: aka::b(java.util.List) -> dhq
fifo write: @1699477124788896628 0x7f81e2a9f1b4 1079: aka$$Lambda$7201.0x00007f8160ba6238::apply(Object) -> Object
fifo write: @1699477124788997530 0x7f81e2a9fa94 230: biu$1$$Lambda$7216.0x00007f8160ba8cd0::<init>(cpv, java.util.function.Consumer) -> void
fifo write: @1699477124789120691 0x7f81e2a9ff94 137: it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap$BasicEntry::<init>() -> void
fifo write: @1699477124789194712 0x7f81e2aa0397 580: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$EntrySet$2::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$EntrySet) -> void
fifo write: @1699477124789267093 0x7f81e2aa0b0e 685: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$EntrySet::fastIterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477124789327744 0x7f81e2aa12f7 1756: biu$1::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477124789377894 0x7f81e2aa1f94 171: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$EntrySet$2::hasNext() -> boolean
fifo write: @1699477124789443045 0x7f81e2aa2467 347: it.unimi.dsi.fastutil.objects.ObjectArraySet::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477124789499776 0x7f81e2aa2997 538: it.unimi.dsi.fastutil.objects.ObjectArraySet::iterator() -> java.util.Iterator
fifo write: @1699477124789566817 0x7f81e2aa2f94 247: it.unimi.dsi.fastutil.objects.ObjectArraySet$1::<init>(it.unimi.dsi.fastutil.objects.ObjectArraySet) -> void
fifo write: @1699477124789624638 0x7f81e2aa3434 831: it.unimi.dsi.fastutil.objects.ObjectArraySet::clear() -> void
fifo write: @1699477124789664058 0x7f81e2aa3c74 159: it.unimi.dsi.fastutil.objects.ObjectArraySet$1::hasNext() -> boolean
fifo write: @1699477124789842080 0x7f81e2aa449d 13385: did::b(dhq) -> void
fifo write: @1699477124789891151 0x7f81e2aa9c34 403: java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter::<init>() -> void
fifo write: @1699477124789964622 0x7f81e2aaa214 202: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock::<init>(java.util.concurrent.locks.ReentrantReadWriteLock) -> void
fifo write: @1699477124790022613 0x7f81e2aaa6d7 980: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::<init>() -> void
fifo write: @1699477124790090004 0x7f81e2aab094 202: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock::<init>(java.util.concurrent.locks.ReentrantReadWriteLock) -> void
fifo write: @1699477124790342317 0x7f81e2aab617 3752: java.util.concurrent.locks.ReentrantReadWriteLock::<init>(boolean) -> void
fifo write: @1699477124790535229 0x7f81e2aad161 3710: bki::a(qw) -> void
fifo write: @1699477124790916574 0x7f81e2aaed77 1523: bkk::<init>(java.util.UUID, String, double, bkk$a) -> void
fifo write: @1699477124791342690 0x7f81e2aafb1c 3450: eag::g(long) -> dhl
fifo write: @1699477124792854519 0x7f81e2ab141e 1223: tf::a(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477124792962281 0x7f81e2ab1f34 418: bsb::<init>(bji, boolean, boolean) -> void
fifo write: @1699477124796552427 0x7f81e9f28832 29739: ako$b::x() -> boolean
fifo write: @1699477124796616378 0x7f81e2ab2594 295: biq::a(aee) -> void
fifo write: @1699477124796664908 0x7f81e2ab2ab9 527: so::a(byte[]) -> so
fifo write: @1699477124796710149 0x7f81e2ab3174 237: java.util.Arrays::fill(float[], float) -> void
fifo write: @1699477124796753630 0x7f81e2ab36c8 269: bts::b() -> bts
fifo write: @1699477124796792560 0x7f81e2ab3b94 348: eaa::j(long) -> boolean
fifo write: @1699477124797637351 0x7f81e9c11acc 2: io.netty.channel.epoll.EpollEventArray::length() -> int
fifo write: @1699477124798104937 0x7f81e2ab4647 13017: bji::a(qw) -> void
fifo write: @1699477124802646506 0x7f81e2ab9e48 273: bts::a() -> bts
fifo write: @1699477124804716742 0x7f81e2aba51c 7060: bjg::a(aee) -> void
fifo write: @1699477124804926895 0x7f81e2abd614 2381: sun.nio.ch.Util$BufferCache::get(int) -> java.nio.ByteBuffer
fifo write: @1699477124806210722 0x7f81e2abe8b4 491: java.util.Spliterators$EmptySpliterator$OfLong::forEachRemaining(java.util.function.LongConsumer) -> void
fifo write: @1699477124810170533 0x7f81e9c117cc 2: java.util.Spliterators$LongIteratorSpliterator::characteristics() -> int
fifo write: @1699477124815504431 0x7f81e2abf17f 10375: eaa::a(ead) -> void
fifo write: @1699477124815565902 0x7f81e2ac340e 141: eam::c() -> boolean
fifo write: @1699477124815711724 0x7f81e2ac3839 586: csv$a::hashCode() -> int
fifo write: @1699477124816435083 0x7f81e2ac3f94 275: csv$a::<init>(dfj, dfj, ha) -> void
fifo write: @1699477124816525904 0x7f81e2ac44f4 87: eal::a(eal) -> boolean
fifo write: @1699477124816776447 0x7f81e2ac49be 1849: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::getAndMoveToFirst(Object) -> byte
fifo write: @1699477124816835258 0x7f81e2ac5ab4 968: csv$a::equals(Object) -> boolean
fifo write: @1699477124817143562 0x7f81e2ac63b4 717: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::moveIndexToFirst(int) -> void
fifo write: @1699477124817326834 0x7f81e2ac6e21 5224: eak::a(ha, cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477124817622998 0x7f81e2ac90d4 882: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::find(short) -> int
fifo write: @1699477124817681029 0x7f81e2ac9a94 190: ha$c::iterator() -> java.util.Iterator
fifo write: @1699477124817731760 0x7f81e2ac9f54 1381: eak::h(eam) -> boolean
fifo write: @1699477124817793960 0x7f81e2aca9f4 734: eak::a(gw, gw) -> short
fifo write: @1699477124817891702 0x7f81e2acb114 589: eam::b() -> boolean
fifo write: @1699477124818053324 0x7f81e2acb802 1141: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::computeIfAbsent(short, it.unimi.dsi.fastutil.shorts.Short2ObjectFunction) -> Object
fifo write: @1699477124818183625 0x7f81e2acc377 1931: eak::a(cpb, eal, gw, dfj, ha, gw, dfj, eam) -> boolean
fifo write: @1699477124818229666 0x7f81e2acd214 230: eak$$Lambda$7858.0x00007f8160c90540::<init>(cpy, gw) -> void
fifo write: @1699477124818358038 0x7f81e2acd734 1009: java.util.ArrayDeque::addFirst(Object) -> void
fifo write: @1699477124818778223 0x7f81e2ace0b4 787: cqf$a$$Lambda$7863.0x00007f8160c92ad8::apply(Object, Object) -> Object
fifo write: @1699477124818852164 0x7f81e2ace834 626: cqf$a::a(bjj) -> void
fifo write: @1699477124818936615 0x7f81e2acee94 824: cqf$a::a(bjj, Integer) -> Integer
fifo write: @1699477124819260869 0x7f81e2acf7ec 2290: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::computeInt(Object, java.util.function.BiFunction) -> int
fifo write: @1699477124821729531 0x7f81e2ad0a94 446: hy::a(ho, double) -> boolean
fifo write: @1699477124822160927 0x7f81e2ad1192 2496: cpv::R() -> gw
fifo write: @1699477124822349839 0x7f81e2ad238e 128: cpy::s(gw) -> he
fifo write: @1699477124822388900 0x7f81e2ad280e 75: dhp::getNoiseBiome(int, int, int) -> he
fifo write: @1699477124822860196 0x7f81e2ad30ee 18517: akq::a(dhq, int) -> void
fifo write: @1699477124822921597 0x7f81e2ada7b0 351: cpy::getNoiseBiome(int, int, int) -> he
fifo write: @1699477124822970467 0x7f81e2adad8e 146: eam::e() -> int
fifo write: @1699477124823113079 0x7f81e2adb29e 821: cqv::a(gw) -> he
fifo write: @1699477124823185500 0x7f81e2adbd2e 200: cqn::b(gw) -> java.util.Map
fifo write: @1699477124823334722 0x7f81e2adc30e 149: crf::a(bjj) -> bfm
fifo write: @1699477124823422933 0x7f81e2adc791 256: cqg::a(akq, cqn, dhg, bjj, gw, he) -> bfm
fifo write: @1699477124823487324 0x7f81e2adce31 552: dhp::h() -> java.util.Map
fifo write: @1699477124823512924 0x7f81e983d4cc 3: biu::c() -> boolean
fifo write: @1699477124823737547 0x7f81e2add6a0 1434: dhg::a(he, cqn, bjj, gw) -> bfm
fifo write: @1699477124823983910 0x7f81e2ade9f3 960: cqg::a(gw, akq, bjj, cqn) -> boolean
fifo write: @1699477124824810221 0x7f81e2adf839 914: cqg::a(akq, dhf, gw$a, double) -> boolean
fifo write: @1699477124825461159 0x7f81e2ae0654 1907: hy::equals(Object) -> boolean
fifo write: @1699477124828132154 0x7f81e9ce343e 15481: ako::c(int, int, dhk, boolean) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124828441208 0x7f81e2ae136e 49: io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue::isEmpty() -> boolean
fifo write: @1699477124828525539 0x7f81e2ae1793 457: sw::a(io.netty.util.Attribute, vd) -> void
fifo write: @1699477124832688713 0x7f81e9f3d69d 33054: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477124832803114 0x7f81e2ae1f6e 49: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::isEmpty() -> boolean
fifo write: @1699477124832852565 0x7f81e2ae23b3 554: sm::t() -> void
fifo write: @1699477124838351185 0x7f81e983c0d9 1504: com.mojang.serialization.MapEncoder$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477124843581043 0x7f81e9ce144a 2041: eid::c(eig, eig, ehr) -> boolean
fifo write: @1699477124846488000 0x7f81e2ae2cd4 4249: biq::aJ() -> float
fifo write: @1699477124849026173 0x7f81e2ae4694 298: cpv::x_() -> eab
fifo write: @1699477124853049695 0x7f81e2ae4c14 240: eic::size() -> int
fifo write: @1699477124853522781 0x7f81e2ae5094 216: dfi$a::f() -> boolean
fifo write: @1699477124854101788 0x7f81e9acc675 3170: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$$Lambda$184.0x00007f8160187660::apply(Object) -> Object
fifo write: @1699477124854796157 0x7f81e2ae573f 4946: bjg::dV() -> void
fifo write: @1699477124854947859 0x7f81e2ae793f 6819: coz::computeNext() -> Object
fifo write: @1699477124863411868 0x7f81e2aea954 722: bjg::fd() -> float
fifo write: @1699477124863794463 0x7f81e2aeb177 3492: bjg::dU() -> void
fifo write: @1699477124866929163 0x7f81e2aeca3f 3977: bpi::a() -> boolean
fifo write: @1699477124867500851 0x7f81e9d665c2 9135: com.mojang.serialization.codecs.RecordCodecBuilder$2::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477124867536491 0x7f81e2aee7f4 15: io.netty.channel.AbstractChannel$AbstractUnsafe::assertEventLoop() -> void
fifo write: @1699477124867572541 0x7f81e2aeeb74 95: aqs$$Lambda$7354.0x00007f8160bd0c70::test(Object) -> boolean
fifo write: @1699477124867840445 0x7f81e9ce0e5c 83: eic::getDouble(int) -> double
fifo write: @1699477124872048539 0x7f81e2aeef94 47: eag::a(long) -> int
fifo write: @1699477124872757718 0x7f81e2aef4e6 4470: eag::e(long, boolean) -> int
fifo write: @1699477124874565582 0x7f81e2af1437 2455: dzv::a(long) -> int
fifo write: @1699477124874769694 0x7f81e2af25f4 90: java.util.IdentityHashMap::isEmpty() -> boolean
fifo write: @1699477124874910006 0x7f81e9d65e4c 3: io.netty.util.concurrent.ScheduledFutureTask::deadlineNanos() -> long
fifo write: @1699477124875488784 0x7f81e2af2a74 2238: io.netty.channel.DefaultMessageSizeEstimator$HandleImpl::size(Object) -> int
fifo write: @1699477124875545954 0x7f81e2af38b4 801: io.netty.channel.DefaultChannelPipeline::estimatorHandle() -> io.netty.channel.MessageSizeEstimator$Handle
fifo write: @1699477124875596025 0x7f81e2af41b4 724: io.netty.channel.ChannelOutboundBuffer::addMessage(Object, int, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477124875750107 0x7f81e2af4a14 316: io.netty.channel.DefaultChannelPromise::addListener(io.netty.util.concurrent.GenericFutureListener) -> io.netty.util.concurrent.Future
fifo write: @1699477124875802538 0x7f81e2af4f14 313: io.netty.util.concurrent.PromiseCombiner::checkAddAllowed() -> void
fifo write: @1699477124875855178 0x7f81e2af53f4 108: sn$a::c() -> vc
fifo write: @1699477124875982760 0x7f81e2af5814 461: akr::x() -> akq
fifo write: @1699477124876035141 0x7f81e2af5e01 1476: io.netty.util.concurrent.PromiseCombiner::add(io.netty.util.concurrent.Future) -> void
fifo write: @1699477124876545877 0x7f81e2af6a54 61: io.netty.util.concurrent.PromiseCombiner::access$204(io.netty.util.concurrent.PromiseCombiner) -> int
fifo write: @1699477124876760320 0x7f81e2af6e74 1097: io.netty.util.concurrent.PromiseCombiner$1::operationComplete(io.netty.util.concurrent.Future) -> void
fifo write: @1699477124876846261 0x7f81e2af7959 1223: io.netty.util.concurrent.PromiseCombiner$1::operationComplete0(io.netty.util.concurrent.Future) -> void
fifo write: @1699477124878417021 0x7f81e9dfd43e 16576: com.mojang.serialization.codecs.KeyDispatchCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477124879845540 0x7f81e2af8657 4730: sm::b(vd, sv, boolean) -> void
fifo write: @1699477124880508278 0x7f81e9dfc7cc 6: ako::c() -> cpv
fifo write: @1699477124880787352 0x7f81e2afa854 194: ead$a::a(long, ha) -> boolean
fifo write: @1699477124880948114 0x7f81e2afacf1 155: gw::a(long, ha) -> long
fifo write: @1699477124880975735 0x7f81e2afb271 74: gw::a(long, int, int, int) -> long
fifo write: @1699477124881003625 0x7f81e2afb66e 6: ako::q() -> cpb
fifo write: @1699477124881129417 0x7f81e2afbab7 2345: eaa::e(long) -> int
fifo write: @1699477124881161957 0x7f81e2afcbf1 60: gw$a::f(long) -> gw$a
fifo write: @1699477124881258488 0x7f81e2afd08e 150: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::enqueue(long) -> void
fifo write: @1699477124881429060 0x7f81e2afd58e 348: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::dequeueLong() -> long
fifo write: @1699477124881464551 0x7f81e2afdc0e 195: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::reduce() -> void
fifo write: @1699477124881612033 0x7f81e2afe18e 21: eaa$$Lambda$7952.0x00007f8160ca6230::accept(long) -> void
fifo write: @1699477124881704184 0x7f81e2afe511 299: ead::a(dfj, long, ha) -> eig
fifo write: @1699477124881789805 0x7f81e2afec0e 163: ead::c(gw) -> dfj
fifo write: @1699477124881847386 0x7f81e2aff1f3 1235: ead::a(int, int) -> dhs
fifo write: @1699477124881975707 0x7f81e2b00011 271: ead::a(dfj, gw) -> int
fifo write: @1699477124882091409 0x7f81e2b00a0e 179: cpy::z(gw) -> int
fifo write: @1699477124882245351 0x7f81e2b00f0e 141: coy::b(gw, int) -> int
fifo write: @1699477124882305212 0x7f81e2b01411 312: cpy::c(gw, int) -> int
fifo write: @1699477124882337562 0x7f81e2b01b0e 120: ead::c(long, long) -> void
fifo write: @1699477124882407753 0x7f81e96a7b00 1429: com.sun.crypto.provider.CipherFeedback::encrypt(byte[], int, int, byte[], int) -> int
fifo write: @1699477124882448994 0x7f81e2b02031 325: eab::a(gw, int) -> int
fifo write: @1699477124882525405 0x7f81e2b0288e 29: dhl::a(int, int, int, int) -> void
fifo write: @1699477124882633836 0x7f81e2b02c6e 44: eaa$$Lambda$7952.0x00007f8160ca6230::<init>(it.unimi.dsi.fastutil.longs.LongSet) -> void
fifo write: @1699477124882668596 0x7f81e2b0300e 164: dhl::a(int, int) -> void
fifo write: @1699477124882755958 0x7f81e2b03536 747: hw::a(int, int, int, it.unimi.dsi.fastutil.longs.LongConsumer) -> void
fifo write: @1699477124882830398 0x7f81e2b03f4e 88: ead$a::c(long, ha) -> long
fifo write: @1699477124882873769 0x7f81e2b042ee 69: ead$a::a(int, boolean, ha) -> long
fifo write: @1699477124882926750 0x7f81e2b04771 66: hw::a(long, it.unimi.dsi.fastutil.longs.LongConsumer) -> void
fifo write: @1699477124882988111 0x7f81e2b04b4e 37: ead$a::b(long) -> boolean
fifo write: @1699477124883134292 0x7f81e2b04f81 804: eaa::a(long, int) -> void
fifo write: @1699477124883422716 0x7f81e2b05bb7 1287: gw::a(long, ha) -> long
fifo write: @1699477124883473297 0x7f81e2b06757 1044: gw$a::f(long) -> gw$a
fifo write: @1699477124883576318 0x7f81e2b070ee 10: dhf::a(long) -> void
fifo write: @1699477124883710210 0x7f81e2b074d9 745: ead::a(long, dfj, long, dfj, ha) -> boolean
fifo write: @1699477124883745080 0x7f81e2b0826e 2: cpc::a(int) -> int
fifo write: @1699477124883778921 0x7f81e2b085ee 2: cpc::f() -> int
fifo write: @1699477124884475030 0x7f81e9c1af94 11214: qw::a(String, rq, java.io.DataOutput) -> void
fifo write: @1699477124884520070 0x7f81e2b0896e 2: cpc::b(int) -> int
fifo write: @1699477124884646592 0x7f81e2b08e11 1774: dzu::a(long, long, int) -> void
fifo write: @1699477124884681392 0x7f81e2b0a86e 2: cpc::g() -> int
fifo write: @1699477124884778144 0x7f81e2b0ac11 566: dha::a(cpc) -> boolean
fifo write: @1699477124884816564 0x7f81e983ba2f 12: cpc::e(int, int) -> int
fifo write: @1699477124884861105 0x7f81e2b0b50e 29: bki::c() -> java.util.Set
fifo write: @1699477124884952506 0x7f81e2b0bcd8 570: alm::a(vd, sv) -> void
fifo write: @1699477124884999606 0x7f81e2b0c68e 5: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::values() -> java.util.Collection
fifo write: @1699477124885047247 0x7f81e2b0c9ee 63: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$ValuesCollection::size() -> int
fifo write: @1699477124885103778 0x7f81e2b0cdc1 104: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$ValuesCollection::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477124885162298 0x7f81e2b0d194 252: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::values() -> it.unimi.dsi.fastutil.objects.ObjectCollection
fifo write: @1699477124885252800 0x7f81e2b0d7c0 1527: cqg::a(akq, dhq, cqg$d, boolean, boolean, boolean) -> void
fifo write: @1699477124885303210 0x7f81e2b0eaf1 184: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$ValuesCollection::iterator() -> java.util.Iterator
fifo write: @1699477124885366531 0x7f81e2b0ef6e 51: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$ValuesCollection$1::<init>(it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$ValuesCollection) -> void
fifo write: @1699477124885413962 0x7f81e2b0f36e 99: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap$ValuesCollection$1::hasNext() -> boolean
fifo write: @1699477124885462592 0x7f81e2b0f76e 94: aaw$a::<init>(bkh, double, java.util.Collection) -> void
fifo write: @1699477124885527113 0x7f81e2b0fc0e 21: io.netty.channel.DefaultChannelPromise::addListener(io.netty.util.concurrent.GenericFutureListener) -> io.netty.channel.ChannelFuture
fifo write: @1699477124886765849 0x7f81e2b1000e 75: io.netty.buffer.PoolChunk::insertAvailRun0(int, long) -> void
fifo write: @1699477124886818930 0x7f81e2b10434 774: java.util.ArrayDeque::pollLast() -> Object
fifo write: @1699477124886945491 0x7f81e2b10cbd 776: io.netty.buffer.LongLongHashMap::put(long, long) -> long
fifo write: @1699477124887685841 0x7f81e2b1180e 336: io.netty.buffer.LongLongHashMap::remove(long) -> void
fifo write: @1699477124887759691 0x7f81e2b11e8e 292: io.netty.buffer.SizeClasses::pages2pageIdxCompute(int, boolean) -> int
fifo write: @1699477124887894883 0x7f81e2b1250e 21: io.netty.handler.codec.MessageToMessageEncoder::acceptOutboundMessage(Object) -> boolean
fifo write: @1699477124887947684 0x7f81e2b1286e 44: sq$$Lambda$7605.0x00007f8160c4a228::<init>(java.util.List) -> void
fifo write: @1699477124888016785 0x7f81e2b12c0e 146: sq::encode(io.netty.channel.ChannelHandlerContext, Object, java.util.List) -> void
fifo write: @1699477124888350339 0x7f81e2b1302e 329: io.netty.channel.ChannelFutureListener$3::operationComplete(io.netty.util.concurrent.Future) -> void
fifo write: @1699477124888410980 0x7f81e2b13733 235: io.netty.channel.ChannelFutureListener$3::operationComplete(io.netty.channel.ChannelFuture) -> void
fifo write: @1699477124888573742 0x7f81e2b13d99 1124: sq::a(io.netty.channel.ChannelHandlerContext, vd, java.util.List) -> void
fifo write: @1699477124888618842 0x7f81e2b14c0e 5: sm::d(vd, sv, boolean) -> void
fifo write: @1699477124888728514 0x7f81e2b14f8e 91: sm$$Lambda$7610.0x00007f8160c4e6d8::run() -> void
fifo write: @1699477124888788895 0x7f81e2b1542e 308: vc$2::a(vd, java.util.function.Consumer) -> void
fifo write: @1699477124889250641 0x7f81e2b15af9 1313: io.netty.channel.AbstractChannel::write(Object) -> io.netty.channel.ChannelFuture
fifo write: @1699477124889392192 0x7f81e2b16979 1300: io.netty.channel.DefaultChannelPipeline::write(Object) -> io.netty.channel.ChannelFuture
fifo write: @1699477124889954470 0x7f81e2b17a51 3621: io.netty.handler.codec.MessageToMessageEncoder::write(io.netty.channel.ChannelHandlerContext, Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477124890936922 0x7f81e96a67f4 1639: eaa::a(long, boolean) -> dhl
fifo write: @1699477124891240896 0x7f81e983b6f4 87: bji::a(gw) -> boolean
fifo write: @1699477124892171878 0x7f81e2b1bb1e 2840: io.netty.channel.AbstractChannelHandlerContext::findContextInbound(int) -> io.netty.channel.AbstractChannelHandlerContext
fifo write: @1699477124896816348 0x7f81e9c6489a 3953: so::a(long[]) -> so
fifo write: @1699477124896858399 0x7f81e9c1ab50 35: io.netty.buffer.UnpooledHeapByteBuf::capacity() -> int
fifo write: @1699477124899164009 0x7f81e96a599a 897: io.netty.buffer.AbstractByteBuf::writeLong(long) -> io.netty.buffer.ByteBuf
fifo write: @1699477124899653905 0x7f81e9c1a636 241: io.netty.buffer.HeapByteBufUtil::setLong(byte[], int, long) -> void
fifo write: @1699477124900697308 0x7f81e9bc7bdc 24715: rc::a(java.io.DataOutput) -> void
fifo write: @1699477124900757729 0x7f81e2b1d00e 200: biq::bR() -> boolean
fifo write: @1699477124900813960 0x7f81e9bc73d0 255: io.netty.buffer.UnpooledHeapByteBuf::_setLong(int, long) -> void
fifo write: @1699477124901939894 0x7f81e9f5601c 30230: rd::a(java.io.DataOutput) -> void
fifo write: @1699477124901977415 0x7f81e9c19f96 49: ead::a(dfj) -> boolean
fifo write: @1699477124902021135 0x7f81e9bc6fbd 66: ead::a(cpb, gw, dfj, ha) -> eig
fifo write: @1699477124902049626 0x7f81e9bc6c5c 35: io.netty.buffer.AbstractByteBuf::ensureAccessible() -> void
fifo write: @1699477124902505452 0x7f81e2b1d71f 5430: bjg::c(gw) -> void
fifo write: @1699477124902541572 0x7f81e9c642dc 107: ead::a(hw) -> dhl
fifo write: @1699477124903625356 0x7f81e2b1fa8c 7144: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477124905141366 0x7f81e2b22794 1696: cpy::w(gw) -> float
fifo write: @1699477124905326748 0x7f81e2b23494 164: eas::a(eal) -> boolean
fifo write: @1699477124906198239 0x7f81e2b23934 748: cpy::f(int, int) -> boolean
fifo write: @1699477124906476013 0x7f81e9c62f53 1272: bjg::eu() -> float
fifo write: @1699477124906613595 0x7f81e9bc6850 35: dho::b() -> int
fifo write: @1699477124906818387 0x7f81e2b240f4 225: biq::dp() -> int
fifo write: @1699477124906876698 0x7f81e2b24574 225: biq::dv() -> int
fifo write: @1699477124907326164 0x7f81e2b24a97 2488: biq::bm() -> float
fifo write: @1699477124907470336 0x7f81e2b25d14 55: btz$$Lambda$7358.0x00007f8160bd88a8::get() -> Object
fifo write: @1699477124907570197 0x7f81e2b26137 1080: bua::a(asc, int, int) -> gw
fifo write: @1699477124907623688 0x7f81e2b26b14 432: btz::a(bjp, int, int, boolean) -> gw
fifo write: @1699477124907799240 0x7f81e2b271bc 838: bsp::a(gw) -> boolean
fifo write: @1699477124908014183 0x7f81e2b27a14 31: cqi::c(int, int) -> cpb
fifo write: @1699477124910207211 0x7f81e8bf73c8 27: vtable stub
fifo write: @1699477124912074895 0x7f81e2b27e14 280: it.unimi.dsi.fastutil.longs.LongSpliterator$$Lambda$7945.0x00007f8160ca4488::accept(long) -> void
fifo write: @1699477124912179637 0x7f81e2b28314 345: com.google.common.collect.Comparators$$Lambda$7942.0x00007f8160c9fbd0::accept(Object, Object) -> void
fifo write: @1699477124912686173 0x7f81e2b288b9 2642: com.google.common.collect.TopKSelector::offer(Object) -> void
fifo write: @1699477124913203450 0x7f81e9c61978 1947: StringConcatHelper::simpleConcat(Object, Object) -> String
fifo write: @1699477124913515514 0x7f81e2b29b97 952: java.util.Collections::unmodifiableSet(java.util.Set) -> java.util.Set
fifo write: @1699477124913584444 0x7f81e2b2a4f4 1229: sm::a(vd, sv, boolean) -> void
fifo write: @1699477124916477381 0x7f81e2b2af94 576: eiz$1::equals(Object, Object) -> boolean
fifo write: @1699477124916759185 0x7f81e2b2b6bc 4047: akt::f() -> void
fifo write: @1699477124919829425 0x7f81e8bf73f8 27: vtable stub
fifo write: @1699477124921040270 0x7f81e8bf7428 27: vtable stub
fifo write: @1699477124921058090 0x7f81e8bf7458 27: vtable stub
fifo write: @1699477124922511309 0x7f81e2b2d48a 2901: cqg::a(akq, bjj, cqn, dhg, crf$c, gw$a, double) -> boolean
fifo write: @1699477124923049796 0x7f81e2b2eab7 484: bfm::b(asc) -> java.util.Optional
fifo write: @1699477124924425304 0x7f81e2b2f134 268: so::a(java.util.BitSet) -> void
fifo write: @1699477124924464854 0x7f81e2b2f694 39: java.util.BitSet::toLongArray() -> long[]
fifo write: @1699477124935415886 0x7f81e9c59a23 9792: brd::a(cpy, gw) -> boolean
fifo write: @1699477124940479600 0x7f81e9db8903 1920: akb::a(int, cpc, int) -> void
fifo write: @1699477124942412705 0x7f81e2b2fd34 12189: ebg::a(eaz[], eaz) -> int
fifo write: @1699477124943747412 0x7f81e9db2b3c 10217: qw::a(java.io.DataOutput) -> void
fifo write: @1699477124944430771 0x7f81e9da7af9 8942: cpv::b_(gw) -> eam
fifo write: @1699477124944493202 0x7f81e9c594b6 61: Math::floorMod(long, long) -> long
fifo write: @1699477124944559693 0x7f81e9c591e0 18: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::listIterator() -> it.unimi.dsi.fastutil.doubles.DoubleListIterator
fifo write: @1699477124944612684 0x7f81e9c58bb6 15: tc::a(int) -> int
fifo write: @1699477124944644024 0x7f81e9c58750 83: aqv::a(int) -> Object
fifo write: @1699477124944899707 0x7f81e9c61553 100: bjg::a(bib) -> boolean
fifo write: @1699477124946888703 0x7f81e9c60bd0 591: aki::c(long) -> boolean
fifo write: @1699477124947291428 0x7f81e9da5ef0 2191: akc$$Lambda$5460.0x00007f8160a7c9d0::accept(Object) -> void
fifo write: @1699477124947334749 0x7f81e2282e94 385: bur::X() -> void
fifo write: @1699477124947372679 0x7f81e9c60514 51: io.netty.util.internal.MathUtil::isOutOfBounds(int, int, int) -> boolean
fifo write: @1699477124949455106 0x7f81e9f64cfa 10380: bqo::n() -> boolean
fifo write: @1699477124949518797 0x7f81e9db21d4 179: hw::a(dja) -> hw
fifo write: @1699477124949564488 0x7f81e9db1e92 32: arw::a(float, float, float) -> float
fifo write: @1699477124949622748 0x7f81e2282a14 185: java.util.HashMap::getOrDefault(Object, Object) -> Object
fifo write: @1699477124949677519 0x7f81e23ec474 1462: java.util.Optional::or(java.util.function.Supplier) -> java.util.Optional
fifo write: @1699477124949712480 0x7f81e2282347 452: io.netty.channel.ChannelOutboundBuffer::setWritable(boolean) -> void
fifo write: @1699477124949737000 0x7f81e25c34f4 104: dks$a::b() -> boolean
fifo write: @1699477124950096554 0x7f81e9db18d0 195: eab::c() -> int
fifo write: @1699477124950336658 0x7f81e9db15b2 17: dhl::d() -> boolean
fifo write: @1699477124951608464 0x7f81e26d8b97 2092: ako$$Lambda$7187.0x00007f8160ba2338::run() -> void
fifo write: @1699477124951654805 0x7f81e26d7b97 1958: ako::a(hw, cqe) -> void
fifo write: @1699477124952197022 0x7f81e9da4616 1741: io.netty.util.internal.InternalThreadLocalMap::get() -> io.netty.util.internal.InternalThreadLocalMap
fifo write: @1699477124952803979 0x7f81e9f6bc43 1065: com.mojang.serialization.Encoder$2::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124953020582 0x7f81e229ff4e 8864: ajy::a(cqe, int) -> void
fifo write: @1699477124953204555 0x7f81e9f6cc53 1332: bjg::ev() -> boolean
fifo write: @1699477124953281816 0x7f81e9f6e070 811: hk::a(Object) -> int
fifo write: @1699477124953389817 0x7f81e23eb854 1111: yk$$Lambda$7825.0x00007f8160c87c60::accept(Object, Object) -> void
fifo write: @1699477124953473978 0x7f81e9f6eeb0 87: io.netty.buffer.PoolThreadCache::cache(io.netty.buffer.PoolThreadCache$MemoryRegionCache[], int) -> io.netty.buffer.PoolThreadCache$MemoryRegionCache
fifo write: @1699477124953526109 0x7f81e9f6f25b 88: cjf::a(cja) -> boolean
fifo write: @1699477124953666791 0x7f81e9f6f953 48: biq::du() -> double
fifo write: @1699477124954336719 0x7f81e9f70263 387: ehi::h(double) -> ehi
fifo write: @1699477124954423980 0x7f81e9f70853 128: biq::a(aqh) -> boolean
fifo write: @1699477124954878286 0x7f81e9f70d03 46: com.mojang.serialization.MapCodec::codec() -> com.mojang.serialization.Codec
fifo write: @1699477124955230291 0x7f81e9f71050 86: cqv::b(long) -> double
fifo write: @1699477124955713247 0x7f81e9f716cc 5: eba::c(boolean) -> void
fifo write: @1699477124955862219 0x7f81e9f719d0 95: dje::a() -> boolean
fifo write: @1699477124956168643 0x7f81e9f71dd0 67: dha::e() -> double
fifo write: @1699477124956430766 0x7f81e9f7242f 2: io.netty.buffer.AbstractByteBuf::setIndex0(int, int) -> void
fifo write: @1699477124956717040 0x7f81e9f72736 65: Byte::valueOf(byte) -> Byte
fifo write: @1699477124957584651 0x7f81e9f72ab4 323: ehi::a(ehn, double, double, double) -> ehi
fifo write: @1699477124959039550 0x7f81e9f730d6 221: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue::poll() -> Object
fifo write: @1699477124959332214 0x7f81e9f73650 35: ajy$$Lambda$5456.0x00007f8160a7c128::getAsInt() -> int
fifo write: @1699477124962731557 0x7f81e229f534 39: it.unimi.dsi.fastutil.ints.IntOpenHashSet::<init>() -> void
fifo write: @1699477124962838648 0x7f81e26d7154 1111: yk$$Lambda$7826.0x00007f8160c85000::accept(Object, Object) -> void
fifo write: @1699477124963451526 0x7f81e26d69ba 718: bji::a(eax, float) -> void
fifo write: @1699477124963765130 0x7f81e26d5a3c 1848: it.unimi.dsi.fastutil.ints.IntOpenHashSet::<init>(int, float) -> void
fifo write: @1699477124965188068 0x7f81e9f748d3 1272: biq::ch() -> int
fifo write: @1699477124966812499 0x7f81e9f75d29 2640: hq::h(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477124967047062 0x7f81e9f77b15 2856: hq$$Lambda$512.0x00007f81603022e0::apply(Object) -> Object
fifo write: @1699477124967204835 0x7f81e229ee14 255: com.google.common.collect.ImmutableList::contains(Object) -> boolean
fifo write: @1699477124967254535 0x7f81e2b34c14 114: com.google.common.collect.ImmutableList::indexOf(Object) -> int
fifo write: @1699477124967329426 0x7f81e2b350de 1432: com.google.common.collect.Lists::indexOfRandomAccess(java.util.List, Object) -> int
fifo write: @1699477124967434877 0x7f81e2b35d79 1906: com.google.common.collect.Lists::indexOfImpl(java.util.List, Object) -> int
fifo write: @1699477124968277388 0x7f81e2b36c21 2028: cqg::a(akq, cqn, dhg, bjj, asc, gw) -> java.util.Optional
fifo write: @1699477124969037418 0x7f81e2b37c14 183: io.netty.buffer.PooledUnsafeDirectByteBuf::_setShort(int, int) -> void
fifo write: @1699477124969098099 0x7f81e2b38077 356: io.netty.util.internal.PlatformDependent::putShort(long, short) -> void
fifo write: @1699477124969142270 0x7f81e2b38614 161: sun.misc.Unsafe::putShort(long, short) -> void
fifo write: @1699477124969194000 0x7f81e2b389f7 265: io.netty.util.internal.PlatformDependent0::putShort(long, short) -> void
fifo write: @1699477124969261461 0x7f81e2b38f17 616: io.netty.buffer.UnsafeByteBufUtil::setShort(long, int) -> void
fifo write: @1699477124969969170 0x7f81e2b39c2f 12530: cqg::a(bka$c, cpy, gw, biu) -> boolean
fifo write: @1699477124971481090 0x7f81e9f79e3c 1323: java.util.concurrent.CompletableFuture::biApplyStage(java.util.concurrent.Executor, java.util.concurrent.CompletionStage, java.util.function.BiFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477124975049906 0x7f81e9f7b0d4 8329: qu::a(java.io.DataOutput) -> void
fifo write: @1699477124980411435 0x7f81e2b3e79f 2567: bur::b_() -> void
fifo write: @1699477124980463706 0x7f81e2b3fa94 189: cph::c(biq, ehi) -> java.util.List
fifo write: @1699477124982096627 0x7f81e9f7f9b5 2331: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5281.0x00007f81609bdca0::apply(Object) -> Object
fifo write: @1699477124983591816 0x7f81e2b3ff57 877: gw$a::b(double, double, double) -> gw$a
fifo write: @1699477124984895213 0x7f81e2b40999 4029: ebg::a(dfj) -> boolean
fifo write: @1699477124984946993 0x7f81e2b42259 2338: cti::g(dfj) -> boolean
fifo write: @1699477124985077405 0x7f81e2b4333c 2481: bji::ct() -> int
fifo write: @1699477124985225337 0x7f81e2b44594 252: bjg::eP() -> void
fifo write: @1699477124985474910 0x7f81e2b44bb9 2529: bjg::z() -> int
fifo write: @1699477124985512461 0x7f81e2b45d94 1082: bie::a(bjg) -> boolean
fifo write: @1699477124986254960 0x7f81e9f8184d 7179: eid::b(eig, eig, ehr) -> eig
fifo write: @1699477124986450683 0x7f81e2b46ad7 18206: ebg::b(cpb, gw) -> eax
fifo write: @1699477124986477653 0x7f81e2b4d0b4 391: bzi::b_() -> void
fifo write: @1699477124986503393 0x7f81e2b4d6b4 303: bzi::gi() -> void
fifo write: @1699477124987247853 0x7f81e2b4dc39 682: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::put(int, Object) -> Object
fifo write: @1699477124987290413 0x7f81e2b4e454 873: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::find(int) -> int
fifo write: @1699477124987338604 0x7f81e2b4ee54 1053: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::insert(int, int, Object) -> void
fifo write: @1699477124987520926 0x7f81e8bf7488 27: vtable stub
fifo write: @1699477124987532346 0x7f81e8bf74b8 27: vtable stub
fifo write: @1699477124987865741 0x7f81e2b4f9b4 642: bwq::t(int) -> boolean
fifo write: @1699477124988783622 0x7f81e2b501b4 1277: qw::equals(Object) -> boolean
fifo write: @1699477124989382780 0x7f81e2b50c18 483: Math::signum(double) -> double
fifo write: @1699477124989484231 0x7f81e2b512b4 633: bum::t() -> boolean
fifo write: @1699477124990294312 0x7f81e2b51ab4 367: io.netty.util.concurrent.SingleThreadEventExecutor::startThread() -> void
fifo write: @1699477124990547635 0x7f81e9f8634c 4: aaw$a::b() -> double
fifo write: @1699477124990589116 0x7f81e9f8664c 6: aaw$a::c() -> java.util.Collection
fifo write: @1699477124990655396 0x7f81e9f8694c 6: aaw$a::a() -> bkh
fifo write: @1699477124990806958 0x7f81e2b52114 185: bm$$Lambda$7797.0x00007f8160c7da08::<init>(dfj) -> void
fifo write: @1699477124990927880 0x7f81e2b52594 280: ecw::<init>(akq, java.util.Map, java.util.Map, float) -> void
fifo write: @1699477124991014621 0x7f81e2b52b14 185: ecq$a::<init>(ecw) -> void
fifo write: @1699477124991320155 0x7f81e2b52ff7 1321: bm::a(akr, dfj) -> void
fifo write: @1699477124991361486 0x7f81e2b53b7a 1649: ecw$a::<init>(akq) -> void
fifo write: @1699477124991499457 0x7f81e2b54814 230: ecq$a$$Lambda$7798.0x00007f8160c80228::<init>(java.util.Optional, akq) -> void
fifo write: @1699477124991575398 0x7f81e2b54cf4 108: ecq$a::a() -> akq
fifo write: @1699477124991724460 0x7f81e2b55114 248: apk::hashCode() -> int
fifo write: @1699477124991875442 0x7f81e2b55677 1386: akr::a(dfj) -> void
fifo write: @1699477124992314998 0x7f81e2b56447 6704: ecw$a::a(eez) -> ecw
fifo write: @1699477124992781964 0x7f81e2b59277 3216: ecq$a$$Lambda$7798.0x00007f8160c80228::get() -> Object
fifo write: @1699477124997394643 0x7f81e9f87281 35727: cpv::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477124997550075 0x7f81e2b5ab3f 7248: ecq$a::a(java.util.Optional) -> ecq
fifo write: @1699477124999174766 0x7f81e9f9f28c 8464: io.netty.buffer.PoolArena::allocate(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf, int) -> void
fifo write: @1699477124999426020 0x7f81e9fa51db 136: dfi$a::a(cpv, gw, biq) -> void
fifo write: @1699477124999959057 0x7f81e9fa56f9 1346: bjg::bv() -> boolean
fifo write: @1699477125000389312 0x7f81e2b5daf9 1887: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477125001549927 0x7f81e2b5ee42 12632: bkg::<init>(java.util.Collection, java.util.Collection, com.google.common.collect.ImmutableList, java.util.function.Supplier) -> void
fifo write: @1699477125004870180 0x7f81e9fa7185 33051: ako::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477125004965311 0x7f81e2b639bd 2760: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::rehash(int) -> void
fifo write: @1699477125005010962 0x7f81e2b65114 31: io.netty.buffer.SizeClasses::pages2pageIdxFloor(int) -> int
fifo write: @1699477125005074083 0x7f81e2b654d4 87: java.lang.runtime.ObjectMethods::eq(Object, Object) -> boolean
fifo write: @1699477125005126833 0x7f81e2b65939 585: io.netty.buffer.IntPriorityQueue::lift(int) -> void
fifo write: @1699477125005186114 0x7f81e2b660d9 1045: Enum::compareTo(Enum) -> int
fifo write: @1699477125005260845 0x7f81e2b66c60 1190: java.lang.invoke.DirectMethodHandle$Holder::getLong(Object, Object) -> long
fifo write: @1699477125005314336 0x7f81e2b67614 47: java.util.PriorityQueue::add(Object) -> boolean
fifo write: @1699477125005370636 0x7f81e2b67a36 189: java.util.PriorityQueue::siftUp(int, Object) -> void
fifo write: @1699477125005457208 0x7f81e2b67fc8 1397: java.util.PriorityQueue::siftUpUsingComparator(int, Object, Object[], java.util.Comparator) -> void
fifo write: @1699477125005525208 0x7f81e2b68b59 754: java.util.PriorityQueue::offer(Object) -> boolean
fifo write: @1699477125005594899 0x7f81e2b695c2 3782: akb::a(long, boolean) -> void
fifo write: @1699477125005660650 0x7f81e2b6b014 581: eiz$$Lambda$5344.0x00007f8160a2f598::compare(Object, Object) -> int
fifo write: @1699477125005721361 0x7f81e2b6b634 900: eiz::b(eiz, eiz) -> int
fifo write: @1699477125005803862 0x7f81e2b6c07c 518: java.lang.invoke.LambdaForm$MH.0x00007f8160c7cc00::linkToTargetMethod(Object, long, Object, Object) -> Object
fifo write: @1699477125006083606 0x7f81e2b6c739 1188: java.lang.invoke.LambdaForm$DMH.0x00007f8160c7c400::newInvokeSpecial(Object, Object, long, Object) -> Object
fifo write: @1699477125006178297 0x7f81e9fbdff0 811: hm::a(Object) -> int
fifo write: @1699477125007639406 0x7f81e9fbee91 2034: dfl::b(dgm) -> boolean
fifo write: @1699477125008234333 0x7f81e9fc0638 2057: bjg::w() -> void
fifo write: @1699477125009126725 0x7f81e9fc1dd0 479: cjf::c(cjf, cjf) -> boolean
fifo write: @1699477125010467402 0x7f81e2b6d30f 6199: aka::b(ajy, dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125010542943 0x7f81e9fc27d0 143: aki$$Lambda$5455.0x00007f8160a7bef0::accept(Object) -> void
fifo write: @1699477125010644475 0x7f81e2b6fbb4 466: java.util.concurrent.CompletableFuture::thenComposeAsync(java.util.function.Function, java.util.concurrent.Executor) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125015683909 0x7f81e9fc2f1c 30205: rd::a(java.io.DataOutput) -> void
fifo write: @1699477125016399528 0x7f81e2b705b4 535: cpv::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477125017054976 0x7f81e2b70d3a 3918: ead::a(cpb, dfj, gw, dfj, gw, ha, int) -> int
fifo write: @1699477125017124697 0x7f81e2b7277f 4602: dam::b(dfj, cpy, gw) -> boolean
fifo write: @1699477125017356880 0x7f81e2b747af 7937: ako::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477125017385071 0x7f81e9fd1a4c 2: dfi$a::h() -> int
fifo write: @1699477125018196881 0x7f81e9fd1dd1 2479: dgm::a(dfl) -> dgm$a
fifo write: @1699477125018239642 0x7f81e2b77c96 173: dfi$a::d(cpb, gw, ha) -> boolean
fifo write: @1699477125018283662 0x7f81e2b78114 267: dfi$a$a::a(ha, dax) -> boolean
fifo write: @1699477125018326733 0x7f81e2b78674 549: dfi$d::a(dfj, cpb, gw, biu) -> boolean
fifo write: @1699477125018373083 0x7f81e2b78cc3 799: dfi$a::a(cpb, gw, ha, dax) -> boolean
fifo write: @1699477125018422094 0x7f81e2b79634 906: dfi$d$$Lambda$497.0x00007f81602f72e0::test(dfj, cpb, gw, Object) -> boolean
fifo write: @1699477125018470755 0x7f81e2b79e74 456: cqg::a(akq, cqn, dhg, bjj, crf$c, gw) -> boolean
fifo write: @1699477125020645983 0x7f81e9fd3cb0 2845: dfk$$Lambda$532.0x00007f816030a650::apply(Object) -> Object
fifo write: @1699477125020682633 0x7f81e2b7a494 63: yo$b::<init>(int, short, short, short, byte, byte, boolean) -> void
fifo write: @1699477125021761417 0x7f81e9fd5fbe 2291: ajy::a(cqe, int) -> void
fifo write: @1699477125022057501 0x7f81e2b7aaef 9226: sm::c(vd, sv, boolean) -> void
fifo write: @1699477125023082994 0x7f81e9fd7e9a 1614: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getOrDefault(Object, int) -> int
fifo write: @1699477125025184361 0x7f81e9fd9183 945: aka$$Lambda$5475.0x00007f8160a7f028::<init>(aka, cpc, ajy, dhk, java.util.concurrent.Executor) -> void
fifo write: @1699477125029001321 0x7f81e9fd9cef 10185: coz::computeNext() -> Object
fifo write: @1699477125030130365 0x7f81e9fe08f4 603: io.netty.buffer.PoolThreadCache::cache(io.netty.buffer.PoolArena, int, io.netty.buffer.PoolArena$SizeClass) -> io.netty.buffer.PoolThreadCache$MemoryRegionCache
fifo write: @1699477125030872135 0x7f81e9fe13d0 3261: ako$$Lambda$7187.0x00007f8160ba2338::run() -> void
fifo write: @1699477125030941446 0x7f81e9fe3e55 238: java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl::compareAndSet(Object, int, int) -> boolean
fifo write: @1699477125032885681 0x7f81e9fe42de 490: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue::offer(Object) -> boolean
fifo write: @1699477125034363520 0x7f81e2b7e3bf 3988: bil::b_() -> void
fifo write: @1699477125034403780 0x7f81e9fe4a4c 2: cja::l() -> int
fifo write: @1699477125036604919 0x7f81e2b7ff79 867: bji::aq() -> void
fifo write: @1699477125039092610 0x7f81e9fe4dcc 1754: io.netty.buffer.PoolThreadCache::allocate(io.netty.buffer.PoolThreadCache$MemoryRegionCache, io.netty.buffer.PooledByteBuf, int) -> boolean
fifo write: @1699477125039298043 0x7f81e2b80c5d 1716: bua::a(gw, int, java.util.function.Predicate) -> gw
fifo write: @1699477125039920391 0x7f81e9fe6652 177: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::locateKey(long) -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477125040117093 0x7f81e9fe6e50 35: ajy$$Lambda$5457.0x00007f8160a7c350::accept(int) -> void
fifo write: @1699477125041290509 0x7f81e2b81a17 2730: ehi::hashCode() -> int
fifo write: @1699477125041841616 0x7f81e2b82e54 1051: byu::ct() -> int
fifo write: @1699477125042395723 0x7f81e9fe71a6 1672: io.netty.buffer.PoolThreadCache$MemoryRegionCache::allocate(io.netty.buffer.PooledByteBuf, int, io.netty.buffer.PoolThreadCache) -> boolean
fifo write: @1699477125042683077 0x7f81e2b83883 1156: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::computeIfAbsent(Object, it.unimi.dsi.fastutil.objects.Object2BooleanFunction) -> boolean
fifo write: @1699477125042751417 0x7f81e2b843fe 1470: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::find(Object) -> int
fifo write: @1699477125043071792 0x7f81e2b851b9 1495: ehi::equals(Object) -> boolean
fifo write: @1699477125043723830 0x7f81e2b85ef4 68: biq::dg() -> float
fifo write: @1699477125046185512 0x7f81e2b86294 232: gu$1::a(int, int, int, ha$a) -> int
fifo write: @1699477125049994941 0x7f81e9fe8a3e 10194: djf::a(ehi, aqn) -> void
fifo write: @1699477125050043932 0x7f81e2b86714 443: cpy::t(gw) -> boolean
fifo write: @1699477125050062372 0x7f81e8bf74e8 27: vtable stub
fifo write: @1699477125050078222 0x7f81e8bf7518 27: vtable stub
fifo write: @1699477125050093662 0x7f81e8bf7548 27: vtable stub
fifo write: @1699477125050163193 0x7f81e2b86dc6 2752: byw$b::a(cpy, gw) -> boolean
fifo write: @1699477125050321665 0x7f81e2b880b4 1130: bjg::bv() -> boolean
fifo write: @1699477125050844502 0x7f81e2b88b14 167: alm::b(vd) -> void
fifo write: @1699477125050906893 0x7f81e2b88f54 205: io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess::allocateRefArray(int) -> Object[]
fifo write: @1699477125051264487 0x7f81e9ff0acc 6: com.mojang.authlib.GameProfile::getName() -> String
fifo write: @1699477125051525261 0x7f81e2b893b4 894: com.google.common.collect.TopKSelector::swap(int, int) -> void
fifo write: @1699477125052897398 0x7f81e2b89c14 513: akp$$Lambda$7854.0x00007f8160c8b8d8::accept(Object) -> void
fifo write: @1699477125053084701 0x7f81e2b8a254 1548: com.google.common.math.IntMath::sqrt(int, java.math.RoundingMode) -> int
fifo write: @1699477125053255863 0x7f81e2b8af54 819: aka::a(akr, int, int) -> boolean
fifo write: @1699477125053312904 0x7f81e2b8b894 282: zx::<init>(int, java.util.List) -> void
fifo write: @1699477125053364314 0x7f81e2b8bd74 275: bkj::c(bki) -> boolean
fifo write: @1699477125053427605 0x7f81e2b8c294 602: bkj$$Lambda$7855.0x00007f8160c8bb10::test(Object) -> boolean
fifo write: @1699477125053484306 0x7f81e2b8c914 230: java.util.HashMap$ValueSpliterator::characteristics() -> int
fifo write: @1699477125053577797 0x7f81e2b8ce79 1920: java.util.HashMap$ValueSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477125053812100 0x7f81e2b8dfe2 3052: aaw::<init>(int, java.util.Collection) -> void
fifo write: @1699477125057477828 0x7f81e9ff0f4f 9529: io.netty.buffer.PoolArena::free(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477125057552058 0x7f81e9ff72a7 34: arw::d(float) -> int
fifo write: @1699477125057643700 0x7f81e9ff78cc 6: aku::a() -> akv
fifo write: @1699477125057686660 0x7f81e9ff7b99 4: io.netty.buffer.PoolChunk::isSubpage(long) -> boolean
fifo write: @1699477125058378199 0x7f81e9ff7ed0 163: java.util.RegularEnumSet::add(Enum) -> boolean
fifo write: @1699477125058806995 0x7f81e9ff8476 1889: bqo::n() -> boolean
fifo write: @1699477125058893746 0x7f81e9ff9e50 119: java.util.EnumSet::typeCheck(Enum) -> void
fifo write: @1699477125060065191 0x7f81e9ffa3a9 9146: io.netty.buffer.PoolThreadCache::add(io.netty.buffer.PoolArena, io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolArena$SizeClass) -> boolean
fifo write: @1699477125060115352 0x7f81e9fffbb0 63: io.netty.buffer.AbstractByteBufAllocator::validate(int, int) -> void
fifo write: @1699477125060831151 0x7f81ea00046e 5458: java.lang.invoke.BootstrapMethodInvoker::invoke(Class, java.lang.invoke.MethodHandle, String, Object, Object, Class) -> Object
fifo write: @1699477125060904532 0x7f81e2b8f5be 891: it.unimi.dsi.fastutil.objects.ObjectArraySet::findKey(Object) -> int
fifo write: @1699477125060987093 0x7f81e2b8ffa1 2536: it.unimi.dsi.fastutil.objects.ObjectArraySet::add(Object) -> boolean
fifo write: @1699477125061042823 0x7f81e2b912b4 765: io.netty.buffer.PoolChunk::runFirstBestFit(int) -> int
fifo write: @1699477125061410218 0x7f81ea0042c1 120: rb::a(int) -> rb
fifo write: @1699477125062892957 0x7f81ea0046a2 1217: ajy::a(String, java.util.concurrent.CompletableFuture) -> void
fifo write: @1699477125065404629 0x7f81e2b91bb4 717: eiz$1::a(eiz, eiz) -> boolean
fifo write: @1699477125065685363 0x7f81ea0055d9 922: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::put(Object, double) -> double
fifo write: @1699477125065752724 0x7f81e2b92454 882: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::find(short) -> int
fifo write: @1699477125066035227 0x7f81e2b92e82 1149: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::computeIfAbsent(short, it.unimi.dsi.fastutil.shorts.Short2BooleanFunction) -> boolean
fifo write: @1699477125066118448 0x7f81e2b939b4 721: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::insert(int, short, Object) -> void
fifo write: @1699477125066507303 0x7f81e2b942b4 398: asm$a::remove() -> void
fifo write: @1699477125066582174 0x7f81e2b94914 906: eak::a(cpy, gw, short) -> com.mojang.datafixers.util.Pair
fifo write: @1699477125066672875 0x7f81e2b95237 1019: eak$$Lambda$7858.0x00007f8160c90540::get(short) -> Object
fifo write: @1699477125067038410 0x7f81ea0062b3 2012: biq::dd() -> boolean
fifo write: @1699477125067162192 0x7f81e2b95dc0 10319: eak::a(cpb, gw, dfj, eal) -> boolean
fifo write: @1699477125069789646 0x7f81ea007b4c 2: io.netty.channel.ChannelOutboundBuffer::size() -> int
fifo write: @1699477125071040682 0x7f81ea007fec 7976: io.netty.buffer.PoolArena::tcacheAllocateSmall(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf, int, int) -> void
fifo write: @1699477125071666620 0x7f81e2b994f4 93: io.netty.channel.epoll.AbstractEpollChannel::isFlagSet(int) -> boolean
fifo write: @1699477125072462810 0x7f81ea00da4c 2: io.netty.channel.unix.IovArray::count() -> int
fifo write: @1699477125072578432 0x7f81ea00dd4c 3: eiz::c() -> long
fifo write: @1699477125072729904 0x7f81e2b999dc 2957: io.netty.channel.AbstractChannelHandlerContext::invokeFlush0() -> void
fifo write: @1699477125072776154 0x7f81ea00e04c 6: eiz::d() -> ejd
fifo write: @1699477125072993797 0x7f81ea00e34c 3: java.util.UUID::getLeastSignificantBits() -> long
fifo write: @1699477125073034088 0x7f81ea00e64c 3: java.util.UUID::getMostSignificantBits() -> long
fifo write: @1699477125074015830 0x7f81ea00e94c 3: io.netty.channel.epoll.AbstractEpollChannel::isActive() -> boolean
fifo write: @1699477125074567247 0x7f81ea00ec4c 2: io.netty.channel.DefaultChannelConfig::getWriteSpinCount() -> int
fifo write: @1699477125074944162 0x7f81e2b9b433 363: so::a(hj, Object) -> void
fifo write: @1699477125075898805 0x7f81e2b9ba94 240: aef$1::a(so, Object) -> void
fifo write: @1699477125076071877 0x7f81e2b9bf9e 1247: aeh$b::a(so) -> void
fifo write: @1699477125078927954 0x7f81ea00eff5 1873: aka::c(cpc) -> boolean
fifo write: @1699477125080132279 0x7f81e2b9cb94 390: ri$b::<init>() -> void
fifo write: @1699477125080675876 0x7f81e2b9d234 872: bjg::ev() -> boolean
fifo write: @1699477125081147142 0x7f81e2b9db94 1361: biq::b(int, boolean) -> void
fifo write: @1699477125081722950 0x7f81e2b9ebf7 12617: ri$d::a(rq) -> ri$f
fifo write: @1699477125081781790 0x7f81e2ba35d7 1778: biq::bM() -> boolean
fifo write: @1699477125084869530 0x7f81e2ba4434 1100: bjg::eX() -> boolean
fifo write: @1699477125087412153 0x7f81e2ba4df4 328: djl::a(dja, djn) -> djn
fifo write: @1699477125087493114 0x7f81e2ba52f4 23: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::balance(int) -> void
fifo write: @1699477125087691776 0x7f81e2ba56b4 1109: com.google.common.collect.Sets::newIdentityHashSet() -> java.util.Set
fifo write: @1699477125087839508 0x7f81ea0109cc 9: cbu::fQ() -> com.mojang.authlib.GameProfile
fifo write: @1699477125088454606 0x7f81ea010d18 2969: java.util.concurrent.CompletableFuture$CoCompletion::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125088529187 0x7f81e2ba6014 581: aaw$$Lambda$7772.0x00007f8160c78b08::accept(Object, Object) -> void
fifo write: @1699477125088709109 0x7f81e2ba661a 308: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields::soProducerLimit(long) -> void
fifo write: @1699477125089356827 0x7f81ea012a50 131: io.netty.channel.AbstractChannelHandlerContext::executor() -> io.netty.util.concurrent.EventExecutor
fifo write: @1699477125089754953 0x7f81ea012eb0 16: io.netty.util.concurrent.SingleThreadEventExecutor::inEventLoop(Thread) -> boolean
fifo write: @1699477125089889444 0x7f81e2ba6b14 82: dzw::c(int) -> int
fifo write: @1699477125090455542 0x7f81e2ba70df 6283: yk::<init>(cpc, eab, java.util.BitSet, java.util.BitSet) -> void
fifo write: @1699477125090684525 0x7f81e2ba9aa7 8362: aaw::a(so, aaw$a) -> void
fifo write: @1699477125090771996 0x7f81ea0131c0 107: io.netty.buffer.AbstractByteBufAllocator::toLeakAwareBuffer(io.netty.buffer.ByteBuf) -> io.netty.buffer.ByteBuf
fifo write: @1699477125092259785 0x7f81e2bad2e7 6707: eiz::equals(Object) -> boolean
fifo write: @1699477125092683040 0x7f81e2bb00c7 7442: eiw::a(eiu, eiz) -> void
fifo write: @1699477125092906753 0x7f81e2bb3457 7970: eiw$$Lambda$5346.0x00007f8160a2fd10::accept(Object, Object) -> void
fifo write: @1699477125092980374 0x7f81e2bb688a 1278: asc::a(long) -> asc
fifo write: @1699477125093496561 0x7f81e2bb7394 519: dlh::a() -> long
fifo write: @1699477125093579492 0x7f81e2bb7994 154: dlh$$Lambda$375.0x00007f816023b328::applyAsLong(long) -> long
fifo write: @1699477125093635393 0x7f81e2bb7d9a 57: java.util.concurrent.atomic.AtomicLong::weakCompareAndSetVolatile(long, long) -> boolean
fifo write: @1699477125093719624 0x7f81e2bb81c1 709: java.util.concurrent.atomic.AtomicLong::updateAndGet(java.util.function.LongUnaryOperator) -> long
fifo write: @1699477125095614018 0x7f81e2bb8b3f 3953: io.netty.buffer.PoolChunk::initBuf(io.netty.buffer.PooledByteBuf, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477125095665949 0x7f81e2bba714 93: io.netty.buffer.PoolChunk::getAvailRunByOffset(int) -> long
fifo write: @1699477125095724110 0x7f81e2bbab34 544: io.netty.buffer.LongLongHashMap::get(long) -> long
fifo write: @1699477125104358951 0x7f81ea0136e4 8392: ako::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477125105448965 0x7f81e2bbb399 1230: bfr::run() -> void
fifo write: @1699477125107537272 0x7f81ea01885f 9256: bjg::dT() -> boolean
fifo write: @1699477125107653024 0x7f81ea01ed5f 160: io.netty.util.internal.ReferenceCountUpdater::release(io.netty.util.ReferenceCounted) -> boolean
fifo write: @1699477125107988498 0x7f81ea01f25c 39: io.netty.util.internal.ReferenceCountUpdater::nonVolatileRawCnt(io.netty.util.ReferenceCounted) -> int
fifo write: @1699477125110579711 0x7f81e2bbbf37 764: asc::a() -> asc
fifo write: @1699477125111007736 0x7f81ea01f610 1509: io.netty.buffer.AbstractReferenceCountedByteBuf::release() -> boolean
fifo write: @1699477125111880848 0x7f81ea020c5e 7699: cpv::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477125113183634 0x7f81e2bbc717 778: arw::a(asc) -> java.util.UUID
fifo write: @1699477125113600760 0x7f81ea025a14 1393: io.netty.buffer.PooledByteBuf::deallocate() -> void
fifo write: @1699477125114519772 0x7f81ea0273f2 5501: io.netty.buffer.PoolArena::allocate(io.netty.buffer.PoolThreadCache, int, int) -> io.netty.buffer.PooledByteBuf
fifo write: @1699477125114970527 0x7f81e2bbcf14 320: eak$$Lambda$7859.0x00007f8160c90a18::<init>(eak, gw, cpy, dfj) -> void
fifo write: @1699477125115826098 0x7f81e2bbd517 516: eas$a::d(eam) -> int
fifo write: @1699477125116016981 0x7f81e2bbdb57 1098: eak::a(cpb, eal, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477125116481357 0x7f81e2bbe777 5984: eid::b(eig, eig, ha) -> boolean
fifo write: @1699477125117182526 0x7f81ea02b7d6 8205: eaa::a(ead) -> void
fifo write: @1699477125117265607 0x7f81ea030afc 944: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::addTo(Object, int) -> int
fifo write: @1699477125118157828 0x7f81ea03170b 100: gw::d() -> gw
fifo write: @1699477125118815927 0x7f81ea031bd8 311: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::containsKey(long) -> boolean
fifo write: @1699477125119006289 0x7f81e2bc11df 4875: dam::c(dfj, cpy, gw) -> boolean
fifo write: @1699477125119358764 0x7f81ea0325e8 38: dhk::a(akq, dzc, akt, java.util.function.Function, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125120236895 0x7f81ea03296f 484: cqv::a(long, int, int, int, double, double, double) -> double
fifo write: @1699477125120941154 0x7f81ea0330e1 173: cpv::a(int, int, int, int) -> gw
fifo write: @1699477125121418231 0x7f81e2bc3074 6: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::availableInQueue(long, long) -> long
fifo write: @1699477125121478761 0x7f81e2bc33d4 56: io.netty.util.internal.shaded.org.jctools.queues.LinkedArrayQueueUtil::length(Object[]) -> int
fifo write: @1699477125121529052 0x7f81e2bc3774 47: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::nextArrayOffset(long) -> long
fifo write: @1699477125129368713 0x7f81ea03421c 47371: bjg::aq() -> void
fifo write: @1699477125129514565 0x7f81ea05402f 716: alb::a(cpc, dhk) -> void
fifo write: @1699477125129601466 0x7f81e2bc3b34 716: java.util.Spliterators$DoubleArraySpliterator::tryAdvance(java.util.function.DoubleConsumer) -> boolean
fifo write: @1699477125129651177 0x7f81ea054bd0 34: io.netty.util.concurrent.DefaultPromise::isDone() -> boolean
fifo write: @1699477125129791439 0x7f81ea054fca 1989: eid::c(eig, eig, ehr) -> boolean
fifo write: @1699477125129860860 0x7f81ea056dd0 75: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::get(Object) -> Object
fifo write: @1699477125130178464 0x7f81ea0586d2 369: java.util.IdentityHashMap$IdentityHashMapIterator::hasNext() -> boolean
fifo write: @1699477125130231394 0x7f81ea058dd0 139: java.util.EnumMap$EntryIterator$Entry::getKey() -> Object
fifo write: @1699477125130287125 0x7f81ea059289 382: aka$$Lambda$5471.0x00007f8160a7e4b0::<init>(aka, dhk) -> void
fifo write: @1699477125130343526 0x7f81ea059789 382: aka$$Lambda$5474.0x00007f8160a7ee00::<init>(aka, ajy) -> void
fifo write: @1699477125130399067 0x7f81ea059c87 292: ri$c::a(rq) -> ri$f
fifo write: @1699477125130442007 0x7f81e2bc42f4 5: com.google.common.primitives.Doubles$DoubleArrayAsList::size() -> int
fifo write: @1699477125130527968 0x7f81ea05a377 787: qw::a(String, int) -> void
fifo write: @1699477125131281028 0x7f81ea05af76 1848: aka::c(cpc) -> boolean
fifo write: @1699477125131339079 0x7f81ea05c92f 38: gx::<init>(int, int, int, int, int, int) -> void
fifo write: @1699477125131491061 0x7f81ea05ccd3 60: akr::M_() -> boolean
fifo write: @1699477125132071978 0x7f81e8bf7578 27: vtable stub
fifo write: @1699477125132794257 0x7f81e2bc46b4 532: byu::t() -> int
fifo write: @1699477125132853678 0x7f81ea05d058 131: eam::a(cpb, gw) -> float
fifo write: @1699477125136061539 0x7f81ea05d55e 4856: io.netty.buffer.PoolArena$DirectArena::newByteBuf(int) -> io.netty.buffer.PooledByteBuf
fifo write: @1699477125136181440 0x7f81e2bc4f5f 8148: bji::fX() -> boolean
fifo write: @1699477125139093888 0x7f81ea060d68 139: biq::bH() -> void
fifo write: @1699477125140323434 0x7f81ea061277 592: bjg::a(cjf, cjf) -> boolean
fifo write: @1699477125140568467 0x7f81e2bc8214 345: aqs$$Lambda$7353.0x00007f8160bd0a28::apply(Object) -> Object
fifo write: @1699477125140623348 0x7f81e2bc8794 185: aqs$$Lambda$7354.0x00007f8160bd0c70::<init>(Class) -> void
fifo write: @1699477125142013026 0x7f81e2bc953f 39420: bjg::aq() -> void
fifo write: @1699477125142090207 0x7f81e2bd7fdc 2489: aqs::b(Class) -> java.util.List
fifo write: @1699477125142434321 0x7f81ea061f20 3913: bjg::bw() -> boolean
fifo write: @1699477125142521182 0x7f81ea064912 26: arw::a(double, double, double) -> double
fifo write: @1699477125142569653 0x7f81e2bd94f4 29: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::decBalance() -> void
fifo write: @1699477125142723605 0x7f81e2bd98b4 260: zx::a(so) -> void
fifo write: @1699477125142895087 0x7f81e2bd9e59 1370: zx::a(java.util.List, so) -> void
fifo write: @1699477125142942018 0x7f81e2bdaa14 450: java.util.stream.LongPipeline$1$1::accept(long) -> void
fifo write: @1699477125143002558 0x7f81e2bdb034 893: aeg$$Lambda$1403.0x00007f816054d638::accept(Object, Object) -> void
fifo write: @1699477125143231051 0x7f81ea064c50 163: org.apache.logging.log4j.core.Logger$PrivateConfig::filter(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, String) -> boolean
fifo write: @1699477125143317822 0x7f81ea0650d0 195: org.apache.logging.log4j.core.Logger::isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, String) -> boolean
fifo write: @1699477125143476035 0x7f81ea0655cc 6: dhq::G() -> java.util.Map
fifo write: @1699477125143720648 0x7f81e2bdb8b4 971: yf::a(dhq) -> int
fifo write: @1699477125144121063 0x7f81e2bdc47c 2334: yf::a(so, dhq) -> void
fifo write: @1699477125144162393 0x7f81e2bddb79 1084: dho::a() -> int
fifo write: @1699477125144209454 0x7f81ea065bc5 126: io.netty.util.internal.PlatformDependent::copyMemory(long, long, long) -> void
fifo write: @1699477125144253305 0x7f81e2bde6fe 1205: dho::b(so) -> void
fifo write: @1699477125144287495 0x7f81ea066045 126: io.netty.util.internal.PlatformDependent0::copyMemory(long, long, long) -> void
fifo write: @1699477125144574519 0x7f81ea066564 2205: cti::g(dfj) -> boolean
fifo write: @1699477125144751041 0x7f81ea068072 641: io.netty.channel.AbstractChannelHandlerContext::findContextOutbound(int) -> io.netty.channel.AbstractChannelHandlerContext
fifo write: @1699477125144829562 0x7f81e2bdf3f5 143: eiy::a(long, long) -> eiz
fifo write: @1699477125144993904 0x7f81ea068be5 138: jdk.internal.misc.Unsafe::copyMemory(long, long, long) -> void
fifo write: @1699477125145436350 0x7f81ea06905c 171: io.netty.channel.AbstractChannelHandlerContext::isNotValidPromise(io.netty.channel.ChannelPromise, boolean) -> boolean
fifo write: @1699477125147866991 0x7f81ea069971 2625: ebg::a(dfj) -> boolean
fifo write: @1699477125147970893 0x7f81ea06ba7b 336: dhy$c::a() -> int
fifo write: @1699477125149167438 0x7f81ea06c27f 7270: io.netty.buffer.PooledByteBufAllocator::newDirectBuffer(int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125149242429 0x7f81e2bdf894 243: ake::a(cpc) -> boolean
fifo write: @1699477125149295180 0x7f81ea0715d0 83: dhl::d(int) -> int
fifo write: @1699477125149403871 0x7f81ea07199d 918: hq$1::a(Object) -> int
fifo write: @1699477125150715848 0x7f81e2bdfdd4 983: io.netty.buffer.PoolThreadCache::cacheForNormal(io.netty.buffer.PoolArena, int) -> io.netty.buffer.PoolThreadCache$MemoryRegionCache
fifo write: @1699477125153133269 0x7f81e2be0794 319: com.mojang.serialization.DynamicOps::emptyMap() -> Object
fifo write: @1699477125157409574 0x7f81e2be0c94 422: cxt$$Lambda$714.0x00007f8160366638::test(Object) -> boolean
fifo write: @1699477125157733849 0x7f81e2be125c 1688: cxt::c(dfj, ha) -> boolean
fifo write: @1699477125158230475 0x7f81ea0729ce 29: io.netty.buffer.LongLongHashMap::index(long) -> int
fifo write: @1699477125158387037 0x7f81ea072d07 54: asm::iterator() -> java.util.Iterator
fifo write: @1699477125158597260 0x7f81e2be20fc 2785: io.netty.buffer.PoolSubpage::allocate() -> long
fifo write: @1699477125158857353 0x7f81e2be3934 750: io.netty.buffer.PoolArena::lock() -> void
fifo write: @1699477125158952494 0x7f81ea0733c4 683: io.netty.util.internal.PlatformDependent0::copyMemory(Object, long, Object, long, long) -> void
fifo write: @1699477125158987645 0x7f81e2be4134 695: io.netty.buffer.PoolArena::unlock() -> void
fifo write: @1699477125163097427 0x7f81ea0742be 19230: ajy::a(aka, java.util.concurrent.Executor) -> void
fifo write: @1699477125164391224 0x7f81e2be4914 31: java.util.concurrent.locks.ReentrantReadWriteLock::<init>() -> void
fifo write: @1699477125165742601 0x7f81e2be4cf4 276: cxc::o(dfj) -> int
fifo write: @1699477125166055585 0x7f81e2be5294 581: eiz$$Lambda$5345.0x00007f8160a2f830::compare(Object, Object) -> int
fifo write: @1699477125166112016 0x7f81e2be5894 533: eiz::a(eiz, eiz) -> int
fifo write: @1699477125166333909 0x7f81e2be60b9 3187: cxc::n(dfj) -> java.util.OptionalInt
fifo write: @1699477125166433130 0x7f81e2be7668 1860: java.util.PriorityQueue::siftDownUsingComparator(int, Object, Object[], int, java.util.Comparator) -> void
fifo write: @1699477125166504121 0x7f81e2be8579 1922: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::shiftKeys(int) -> void
fifo write: @1699477125166571332 0x7f81e2be9434 418: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::removeEntry(int) -> boolean
fifo write: @1699477125166670843 0x7f81e2be9b3e 1808: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::remove(Object) -> boolean
fifo write: @1699477125166924156 0x7f81e2beab14 275: dfi$a$$Lambda$1539.0x00007f8160595310::<init>(dfi$a, cpb, gw) -> void
fifo write: @1699477125167007648 0x7f81e2beb0b9 755: dfi$a$$Lambda$1539.0x00007f8160595310::apply(Object) -> Object
fifo write: @1699477125167114179 0x7f81e2beb9ab 3327: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::putAndMoveToFirst(Object, byte) -> byte
fifo write: @1699477125167193400 0x7f81e2bed594 31: dfi$d$$Lambda$538.0x00007f81603129b8::evaluate(dfj, cpb, gw) -> ehn
fifo write: @1699477125167246061 0x7f81e2bed99d 336: dfi$a::a(cpb, gw, dfi$b) -> ehn
fifo write: @1699477125167411713 0x7f81ea082df5 872: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::put(int, Object) -> Object
fifo write: @1699477125167575095 0x7f81ea083a4f 35: cpx::e(int) -> int
fifo write: @1699477125167669236 0x7f81e2bee2d4 1419: eas::a(cpv) -> boolean
fifo write: @1699477125167772447 0x7f81e2beeed7 2037: dfi$d::a(dfj, cpb, gw) -> ehn
fifo write: @1699477125167871989 0x7f81e2beff14 230: eak$$Lambda$7856.0x00007f8160c8da00::<init>(cpv, gw) -> void
fifo write: @1699477125167937140 0x7f81ea083d57 35: eic::size() -> int
fifo write: @1699477125168267954 0x7f81e2bf04f7 3565: dfi$a::n(cpb, gw) -> ehn
fifo write: @1699477125168572968 0x7f81e2bf20d7 13688: eak::a(cpv, gw, dfj) -> eam
fifo write: @1699477125168635609 0x7f81e2bf74b7 958: eak$$Lambda$7856.0x00007f8160c8da00::get(short) -> Object
fifo write: @1699477125168701739 0x7f81e2bf7e94 853: eak::a(cpv, gw, short) -> com.mojang.datafixers.util.Pair
fifo write: @1699477125169072104 0x7f81e2bf890f 4958: cyl::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477125169841244 0x7f81e8bf75a8 27: vtable stub
fifo write: @1699477125170406351 0x7f81e2bfa994 159: java.util.ArrayDeque::push(Object) -> void
fifo write: @1699477125170489902 0x7f81e2bfae34 711: java.util.ArrayDeque::pop() -> Object
fifo write: @1699477125170898338 0x7f81e2bfb594 517: eiu::b(eiz) -> void
fifo write: @1699477125172049293 0x7f81e2bfbdc7 7263: eak::a(cpy, gw, int, ha, dfj, gw, it.unimi.dsi.fastutil.shorts.Short2ObjectMap, it.unimi.dsi.fastutil.shorts.Short2BooleanMap) -> int
fifo write: @1699477125172095553 0x7f81e2bfef54 87: java.lang.runtime.ObjectMethods::eq(long, long) -> boolean
fifo write: @1699477125172145884 0x7f81e2bff3b4 387: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::insert(int, short, boolean) -> void
fifo write: @1699477125172200805 0x7f81e2bffaa0 609: eam::a(cpb, gw, eal, ha) -> boolean
fifo write: @1699477125172274096 0x7f81e2c00137 499: eak::a(cpb, gw, dfj, ha, gw, dfj, eam, eal) -> boolean
fifo write: @1699477125172316536 0x7f81e2c007f4 90: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::isEmpty() -> boolean
fifo write: @1699477125173067166 0x7f81e2c00c99 2156: ebm::a(gw, ebm$c) -> void
fifo write: @1699477125173186337 0x7f81e2c01d94 164: eap::a(eal) -> boolean
fifo write: @1699477125173279348 0x7f81e2c02243 852: dfi$a::a(ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125173378520 0x7f81e2c02b9c 5846: ebm::a() -> void
fifo write: @1699477125173459321 0x7f81e2c0565e 2666: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::add(Object) -> boolean
fifo write: @1699477125174241121 0x7f81ea084738 1873: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::rehash(int) -> void
fifo write: @1699477125174389013 0x7f81ea085c29 24: arw::b(int, int, int) -> long
fifo write: @1699477125174558625 0x7f81ea085f11 13: Long::compare(long, long) -> int
fifo write: @1699477125174950730 0x7f81ea086338 3620: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::equals(Object) -> boolean
fifo write: @1699477125175230204 0x7f81ea088c59 110: cpv::l(gw) -> dhq
fifo write: @1699477125177176369 0x7f81e2c06b14 234: it.unimi.dsi.fastutil.objects.AbstractObject2DoubleMap::<init>() -> void
fifo write: @1699477125177222549 0x7f81e2c06f94 137: it.unimi.dsi.fastutil.objects.AbstractObject2DoubleFunction::<init>() -> void
fifo write: @1699477125177272990 0x7f81e2c073ba 792: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::<init>(int) -> void
fifo write: @1699477125177320861 0x7f81e2c07bf9 846: aeh::<init>(biq) -> void
fifo write: @1699477125177482373 0x7f81e2c08494 93: bkk::hashCode() -> int
fifo write: @1699477125177660865 0x7f81e2c088b7 1050: bki::c(bkk$a) -> java.util.Set
fifo write: @1699477125177737436 0x7f81e2c09257 1388: bki$$Lambda$7235.0x00007f8160bb2d78::apply(Object) -> Object
fifo write: @1699477125177839057 0x7f81ea0890cc 3: dhf::u() -> long
fifo write: @1699477125177880728 0x7f81e2c09d94 247: bpe::<init>(bji) -> void
fifo write: @1699477125179103724 0x7f81e2c0a67f 11635: biq::<init>(biu, cpv) -> void
fifo write: @1699477125179208775 0x7f81e2c0eed4 678: aaw::a(so) -> void
fifo write: @1699477125182546988 0x7f81e2c0f694 269: com.mojang.serialization.Codec$15::write(com.mojang.serialization.DynamicOps, Double) -> Object
fifo write: @1699477125182631369 0x7f81e2c0fbb4 623: com.mojang.serialization.Codec$15::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477125182682960 0x7f81e2c102b7 637: ri::a(double) -> rq
fifo write: @1699477125182739391 0x7f81e2c109b7 745: ri::createDouble(double) -> Object
fifo write: @1699477125184738796 0x7f81ea089532 6873: akc$$Lambda$5458.0x00007f8160a7c588::run() -> void
fifo write: @1699477125185193742 0x7f81ea08e7fc 4110: eig::a(double, double, double) -> eig
fifo write: @1699477125186932264 0x7f81ea090f38 3309: akq::a(dhq, int) -> void
fifo write: @1699477125187237418 0x7f81ea093a60 7111: akc::a(java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477125187295479 0x7f81ea098bf8 744: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getInt(Object) -> int
fifo write: @1699477125188507094 0x7f81ea0995fc 531: io.netty.buffer.AbstractByteBuf::ensureWritable(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125188932050 0x7f81e2c11174 44: buw::h(double) -> boolean
fifo write: @1699477125192142671 0x7f81e97a7548 1560: io.netty.buffer.AbstractByteBuf::writeBytes(io.netty.buffer.ByteBuf, int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125192284163 0x7f81e9961bfb 1020: io.netty.buffer.PooledUnsafeDirectByteBuf::setBytes(int, io.netty.buffer.ByteBuf, int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125192444035 0x7f81e2c115b9 2517: biq::be() -> boolean
fifo write: @1699477125194220368 0x7f81e2c12834 845: bwq::i() -> boolean
fifo write: @1699477125194364610 0x7f81e2c131bc 2740: bwq::cN() -> bjg
fifo write: @1699477125196254204 0x7f81e995d4b6 6984: eaa::b() -> void
fifo write: @1699477125196674140 0x7f81e995c20b 1076: io.netty.buffer.UnsafeByteBufUtil::setBytes(io.netty.buffer.AbstractByteBuf, long, int, io.netty.buffer.ByteBuf, int, int) -> void
fifo write: @1699477125196720970 0x7f81e9832bdc 123: dfl$$Lambda$4001.0x00007f816083f440::apply(Object) -> Object
fifo write: @1699477125197261947 0x7f81e8bf75d8 27: vtable stub
fifo write: @1699477125197676523 0x7f81e2c1479c 12874: biq::aq() -> void
fifo write: @1699477125197846435 0x7f81e2c195b4 845: bwq::gv() -> boolean
fifo write: @1699477125200712532 0x7f81e2c19e74 27: com.google.common.collect.EmptyImmutableListMultimap::asMap() -> com.google.common.collect.ImmutableMap
fifo write: @1699477125200781943 0x7f81e2c1a214 185: com.google.common.collect.ImmutableMultimap$$Lambda$5209.0x00007f81609a1418::<init>(java.util.function.BiConsumer) -> void
fifo write: @1699477125201036566 0x7f81e2c1a71c 1964: com.google.common.collect.ImmutableMultimap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477125201368000 0x7f81e99598ef 2984: biq::bd() -> void
fifo write: @1699477125201650994 0x7f81e1868a14 334: djl$a::<init>(djl, dja, long, dje) -> void
fifo write: @1699477125201706685 0x7f81e2c1b5b4 631: djl::b(dja) -> boolean
fifo write: @1699477125201760165 0x7f81e2c1bd34 596: djl::e(dja) -> void
fifo write: @1699477125201920217 0x7f81e2c1c414 332: akq$a::c(Object) -> void
fifo write: @1699477125202111260 0x7f81e2c1c95e 1277: djc::a(dja) -> void
fifo write: @1699477125202190591 0x7f81e1868594 109: ako::b(biq) -> void
fifo write: @1699477125202231371 0x7f81e2c1d434 700: biu::q() -> boolean
fifo write: @1699477125202358843 0x7f81e2c1db94 185: aka$b$$Lambda$7309.0x00007f8160bcbd30::<init>(aka$b) -> void
fifo write: @1699477125203005631 0x7f81e9958630 1517: hq$$Lambda$1976.0x00007f8160615e68::apply(Object) -> Object
fifo write: @1699477125203077732 0x7f81e2c1e181 4805: akq$a::e(biq) -> void
fifo write: @1699477125203197234 0x7f81e2c20461 5564: aka::a(biq) -> void
fifo write: @1699477125203505438 0x7f81e2c229d7 1238: dhf::e() -> java.util.Collection
fifo write: @1699477125203652900 0x7f81e2c23584 3329: akp::<init>(akq, biq, int, boolean, java.util.function.Consumer) -> void
fifo write: @1699477125203787842 0x7f81e2c24c87 3458: aka$b::<init>(aka, biq, int, int, boolean) -> void
fifo write: @1699477125204216147 0x7f81e2c266ce 7774: djl::a(dja, boolean) -> boolean
fifo write: @1699477125204270518 0x7f81e2c29add 721: io.netty.buffer.PoolChunk::insertAvailRun(int, int, long) -> void
fifo write: @1699477125204330279 0x7f81e2c2a3fc 1225: io.netty.buffer.IntPriorityQueue::offer(int) -> void
fifo write: @1699477125206237383 0x7f81e1c6cab4 552: io.netty.buffer.PoolChunk::removeAvailRun0(long) -> void
fifo write: @1699477125206313614 0x7f81e2c2b059 992: io.netty.buffer.IntPriorityQueue::sink(int) -> void
fifo write: @1699477125208073387 0x7f81e1cf9694 185: bpd::<init>(bji) -> void
fifo write: @1699477125210599159 0x7f81e1f827d7 1036: io.netty.buffer.PoolThreadCache::allocateNormal(io.netty.buffer.PoolArena, io.netty.buffer.PooledByteBuf, int, int) -> boolean
fifo write: @1699477125210637280 0x7f81e98328cc 6: dcv::q() -> dfj
fifo write: @1699477125211696413 0x7f81e2c2bc1f 3314: io.netty.buffer.PoolArena::tcacheAllocateNormal(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf, int, int) -> void
fifo write: @1699477125212178459 0x7f81e8bf7608 27: vtable stub
fifo write: @1699477125212245080 0x7f81e8bf7638 27: vtable stub
fifo write: @1699477125212749256 0x7f81e1c68f94 137: it.unimi.dsi.fastutil.objects.AbstractObject2BooleanFunction::<init>() -> void
fifo write: @1699477125215166158 0x7f81e8bf7668 27: vtable stub
fifo write: @1699477125215474312 0x7f81e1c6c517 117: eak$$Lambda$7859.0x00007f8160c90a18::get(short) -> boolean
fifo write: @1699477125215754415 0x7f81e25755dc 985: eak::a(gw, cpy, dfj, short) -> boolean
fifo write: @1699477125215951258 0x7f81e2352494 181: cpv::a(ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477125216041369 0x7f81e24ea43e 826: ebm$b::a(cpv) -> boolean
fifo write: @1699477125216106020 0x7f81e24c2437 698: ebm::a(ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477125216202131 0x7f81e243c0eb 974: ebo::a(cpv, dfj, gw, csv, gw, boolean) -> void
fifo write: @1699477125216288682 0x7f81e2391614 434: ebm$d::<init>(ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477125216743678 0x7f81e99542fc 6111: cqf::a(cpc) -> java.util.List
fifo write: @1699477125216792689 0x7f81e24a2f43 852: dfi$a::a(cpv, gw, csv, gw, boolean) -> void
fifo write: @1699477125216824779 0x7f81e24c1f19 82: ebm$d::a(cpv) -> boolean
fifo write: @1699477125216871980 0x7f81e24a2617 586: ebo::a(cpw, ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477125216918010 0x7f81e24cf21a 1257: csv::a(dfj, dfj, cpw, gw, int, int) -> void
fifo write: @1699477125217465347 0x7f81e2825bf4 27: io.netty.channel.epoll.EpollSocketChannel::config() -> io.netty.channel.epoll.EpollChannelConfig
fifo write: @1699477125217558019 0x7f81e26ecbf4 1690: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::removeLastByte() -> byte
fifo write: @1699477125217613709 0x7f81e22d4879 2188: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477125217686940 0x7f81e22d4194 173: io.netty.util.concurrent.AbstractScheduledEventExecutor::getCurrentTimeNanos() -> long
fifo write: @1699477125221205416 0x7f81e97a71cc 3: dfi$a::j() -> boolean
fifo write: @1699477125221273606 0x7f81e2397b1e 1699: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getOrDefault(Object, int) -> int
fifo write: @1699477125222163298 0x7f81e239723d 826: dfi$a::b(akq, gw, asc) -> void
fifo write: @1699477125223323633 0x7f81e2559a29 6301: dam::b(dfj, akq, gw, asc) -> void
fifo write: @1699477125236036656 0x7f81e99a5956 9145: cpf::g(biq, ehi) -> java.util.Optional
fifo write: @1699477125237864290 0x7f81e2c2d68f 6634: cpm::c(biq, ehi) -> java.util.List
fifo write: @1699477125240613695 0x7f81e24cec94 342: brp::d() -> void
fifo write: @1699477125244895911 0x7f81e2558f97 1005: java.util.stream.ReduceOps::makeRef(java.util.function.BinaryOperator) -> java.util.stream.TerminalOp
fifo write: @1699477125244993392 0x7f81e2558477 1391: java.util.stream.ReferencePipeline::reduce(java.util.function.BinaryOperator) -> java.util.Optional
fifo write: @1699477125245072273 0x7f81e2557e94 379: java.util.stream.ReduceOps$2::<init>(java.util.stream.StreamShape, java.util.function.BinaryOperator) -> void
fifo write: @1699477125248206433 0x7f81e2c301ba 839: biq::j(int) -> void
fifo write: @1699477125248625879 0x7f81e8bf7698 27: vtable stub
fifo write: @1699477125249308868 0x7f81e2c30cbc 8093: bjg::fh() -> void
fifo write: @1699477125249810884 0x7f81e2c33e7d 2156: com.google.common.collect.TopKSelector::partition(int, int, int) -> int
fifo write: @1699477125251496666 0x7f81e24ce794 258: dzw::b(int) -> int
fifo write: @1699477125252348987 0x7f81e2c34eb4 39: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::<init>() -> void
fifo write: @1699477125252400668 0x7f81e2c35294 234: it.unimi.dsi.fastutil.objects.AbstractObject2BooleanMap::<init>() -> void
fifo write: @1699477125252766772 0x7f81e2c357bc 2025: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::<init>(int, float) -> void
fifo write: @1699477125253546562 0x7f81e2c367b4 279: bjg::a(bjs, bir) -> float
fifo write: @1699477125253642744 0x7f81e2c36cd4 452: eba::<init>() -> void
fifo write: @1699477125253683864 0x7f81e2c37317 346: eaw::<init>() -> void
fifo write: @1699477125253731195 0x7f81e2c378bd 986: ebd::<init>(eba, int) -> void
fifo write: @1699477125254076679 0x7f81e2c38239 416: biq::n(boolean) -> void
fifo write: @1699477125254108340 0x7f81e2c388b9 416: biq::d(boolean) -> void
fifo write: @1699477125254219151 0x7f81e2c38f74 1309: bsp::<init>(bji, cpv) -> void
fifo write: @1699477125254364343 0x7f81e2c39a94 367: biq::i(boolean) -> void
fifo write: @1699477125254541465 0x7f81e2c3a017 476: bkk$a::a(int) -> bkk$a
fifo write: @1699477125254705287 0x7f81e2c3a694 185: biu$1$$Lambda$7217.0x00007f8160ba8f08::<init>(java.util.function.Consumer) -> void
fifo write: @1699477125254825619 0x7f81e2c3ac1c 2307: biq::a(float, float) -> void
fifo write: @1699477125254890880 0x7f81e2c3bd94 185: biu$$Lambda$7218.0x00007f8160ba9150::<init>(cpv) -> void
fifo write: @1699477125255355686 0x7f81e2c3c257 1568: biu::a(cpv, biu) -> biq
fifo write: @1699477125255503828 0x7f81e2c3d077 1922: biu$$Lambda$7218.0x00007f8160ba9150::apply(Object) -> Object
fifo write: @1699477125256242907 0x7f81e2c3e157 4195: biu$1$$Lambda$7216.0x00007f8160ba8cd0::accept(Object) -> void
fifo write: @1699477125256658342 0x7f81e2c3feff 6854: biu$1::a(cpv, java.util.function.Consumer, rq) -> void
fifo write: @1699477125259582270 0x7f81ea09a65d 32358: ako::t() -> void
fifo write: @1699477125260271118 0x7f81e8bf76c8 27: vtable stub
fifo write: @1699477125260358329 0x7f81e2c42b14 513: aki$$Lambda$5373.0x00007f8160a53740::accept(Object) -> void
fifo write: @1699477125260415780 0x7f81e2c43114 189: akb$$Lambda$7781.0x00007f8160c7aa88::<init>(akb, long) -> void
fifo write: @1699477125267499792 0x7f81ea0afb12 64757: biq::aO() -> void
fifo write: @1699477125267603713 0x7f81e2c435d7 1136: akb::a(long) -> Runnable
fifo write: @1699477125267657084 0x7f81e2c44097 1795: akb::b(long) -> com.mojang.datafixers.util.Either
fifo write: @1699477125267705974 0x7f81e2c44f17 1908: akb$$Lambda$7118.0x00007f8160a5b880::get() -> Object
fifo write: @1699477125267928557 0x7f81e2c46907 25817: biq::g(qw) -> void
fifo write: @1699477125267969658 0x7f81e2c51f94 240: akb::c(long) -> void
fifo write: @1699477125268005138 0x7f81e2c52414 109: aki$c$$Lambda$7770.0x00007f8160c786b8::run() -> void
fifo write: @1699477125268037619 0x7f81e2c52894 350: akb$$Lambda$7781.0x00007f8160c7aa88::run() -> void
fifo write: @1699477125268050429 0x7f81e8bf76f8 27: vtable stub
fifo write: @1699477125268084259 0x7f81e2c52e14 109: aki$c$$Lambda$7787.0x00007f8160c7b610::run() -> void
fifo write: @1699477125268121180 0x7f81e2c53294 234: aki$c$$Lambda$7787.0x00007f8160c7b610::<init>(aki$c, long, aku) -> void
fifo write: @1699477125268193081 0x7f81e2c53877 2760: akc$$Lambda$7120.0x00007f8160a5bcf0::apply(Object) -> Object
fifo write: @1699477125268230691 0x7f81e2c54c14 532: aki$$Lambda$7788.0x00007f8160c7e000::test(Object) -> boolean
fifo write: @1699477125268272612 0x7f81e2c552f7 1558: aki$c::c(long, aku) -> void
fifo write: @1699477125268325662 0x7f81e2c55f8e 13: java.util.stream.ReferencePipeline::makeNodeBuilder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477125268364693 0x7f81e2c5639c 1274: ebg::<init>() -> void
fifo write: @1699477125268442004 0x7f81e2c56f37 2390: akc::a(Runnable) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125268484674 0x7f81e2c58154 1319: eiw::a(eiu, eiu) -> int
fifo write: @1699477125268513115 0x7f81e2c58c14 240: eiw::c(eiz) -> void
fifo write: @1699477125268582846 0x7f81e2c590f4 1866: eiw$$Lambda$5341.0x00007f8160a2a998::compare(Object, Object) -> int
fifo write: @1699477125268614586 0x7f81e2c59eb4 766: eiu::c() -> eiz
fifo write: @1699477125268646226 0x7f81e2c5a614 491: eam::b(eal) -> boolean
fifo write: @1699477125268677877 0x7f81e2c5ac16 592: eam::a(cpv, gw) -> void
fifo write: @1699477125268709527 0x7f81e2c5b294 372: eal::a(aqh) -> boolean
fifo write: @1699477125268783558 0x7f81e2c5b8f7 5138: akq$$Lambda$7300.0x00007f8160bc1d38::accept(Object, Object) -> void
fifo write: @1699477125268872449 0x7f81e2c5d987 7811: akq::a(gw, eal) -> void
fifo write: @1699477125268904820 0x7f81e2c60734 39: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::<init>() -> void
fifo write: @1699477125268967691 0x7f81e2c60c5c 4991: eak::b(cpv, gw, eam) -> void
fifo write: @1699477125269000551 0x7f81e2c62d14 137: it.unimi.dsi.fastutil.shorts.AbstractShort2ObjectFunction::<init>() -> void
fifo write: @1699477125269032311 0x7f81e2c63114 234: it.unimi.dsi.fastutil.shorts.AbstractShort2ObjectMap::<init>() -> void
fifo write: @1699477125269064852 0x7f81e2c635b4 39: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::<init>() -> void
fifo write: @1699477125269096252 0x7f81e2c63994 234: it.unimi.dsi.fastutil.shorts.AbstractShort2BooleanMap::<init>() -> void
fifo write: @1699477125269126763 0x7f81e2c63e14 137: it.unimi.dsi.fastutil.shorts.AbstractShort2BooleanFunction::<init>() -> void
fifo write: @1699477125269225744 0x7f81e2c6446f 10650: eak::a(cpv, gw, eam) -> void
fifo write: @1699477125269271475 0x7f81e2c6853c 2025: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::<init>(int, float) -> void
fifo write: @1699477125269313315 0x7f81e2c695bc 2025: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::<init>(int, float) -> void
fifo write: @1699477125269377826 0x7f81e2c6a594 134: dfi::a(dfj, cpv, gw, csv, gw, boolean) -> void
fifo write: @1699477125269471817 0x7f81e2c6ac77 8556: eak::b(cpv, gw, dfj) -> java.util.Map
fifo write: @1699477125270054875 0x7f81e2c6e7d4 87: ajz::d(int) -> boolean
fifo write: @1699477125270224027 0x7f81e2c6ec34 575: aki::d(long) -> boolean
fifo write: @1699477125270289918 0x7f81e2c6f334 866: akq::a(long) -> boolean
fifo write: @1699477125275576976 0x7f81e2c6fcd7 858: com.google.common.primitives.Doubles$DoubleArrayAsList::get(int) -> Double
fifo write: @1699477125275629107 0x7f81e2c70657 963: com.google.common.primitives.Doubles$DoubleArrayAsList::get(int) -> Object
fifo write: @1699477125279946772 0x7f81e8bf7728 27: vtable stub
fifo write: @1699477125281194458 0x7f81e99784b5 4012: ako::a(int, int) -> dhq
fifo write: @1699477125284018004 0x7f81e9bb9792 5588: akb::a() -> java.util.stream.Stream
fifo write: @1699477125284075155 0x7f81e2c71074 3257: btx::a(bji) -> boolean
fifo write: @1699477125285254500 0x7f81e19674b4 539: byu::y() -> boolean
fifo write: @1699477125286082081 0x7f81e2c7269f 5228: byu::l() -> void
fifo write: @1699477125287298306 0x7f81e18d2234 1572: eak::c(eam, cpb, gw) -> boolean
fifo write: @1699477125287377897 0x7f81e2c74bd7 2408: eak::a(eam, cpb, gw) -> float
fifo write: @1699477125287505839 0x7f81e1c667b4 1757: hy::i(hy) -> int
fifo write: @1699477125288125737 0x7f81e2c75dff 3819: bru::h() -> void
fifo write: @1699477125290260905 0x7f81e2c77a5f 5412: biq::aO() -> void
fifo write: @1699477125291854245 0x7f81e184e514 31: djl::j(dja) -> void
fifo write: @1699477125291921826 0x7f81e1c14014 461: djl$$Lambda$7307.0x00007f8160bc9b28::accept(Object) -> void
fifo write: @1699477125292427363 0x7f81e1867034 1421: apk::equals(Object) -> boolean
fifo write: @1699477125293109861 0x7f81e2c7a131 3597: bq::b(akr, biq) -> ecq
fifo write: @1699477125296440984 0x7f81e1daf2b4 602: dzw::a(int, int) -> int
fifo write: @1699477125296557866 0x7f81e23d2317 1690: eaf::a(int, int, int) -> int
fifo write: @1699477125299857149 0x7f81e2215694 137: bkf::<init>() -> void
fifo write: @1699477125299922789 0x7f81e217fb74 464: bkn::a(biu) -> bkl
fifo write: @1699477125299990410 0x7f81e25d8bbd 855: bhl::<init>(bjg) -> void
fifo write: @1699477125300012091 0x7f81e8bf7758 27: vtable stub
fifo write: @1699477125300030951 0x7f81e8bf7788 27: vtable stub
fifo write: @1699477125300108262 0x7f81e8bf77b8 27: vtable stub
fifo write: @1699477125300265894 0x7f81e239c4fd 1816: bkj::<init>(bkl) -> void
fifo write: @1699477125300287154 0x7f81e8bf77e8 27: vtable stub
fifo write: @1699477125300499267 0x7f81e2521314 185: bpc::<init>(bji) -> void
fifo write: @1699477125300571398 0x7f81e1866ab4 286: bji::a_() -> void
fifo write: @1699477125300750110 0x7f81e2600814 185: boz::<init>(bji) -> void
fifo write: @1699477125300801401 0x7f81e1eda3e7 292: bji::F() -> boz
fifo write: @1699477125301087674 0x7f81e23dd07c 1858: bjg::a_() -> void
fifo write: @1699477125301124935 0x7f81e1fb72f9 854: btk::<init>(bji) -> void
fifo write: @1699477125301718753 0x7f81e24f8101 6069: bji::<init>(biu, cpv) -> void
fifo write: @1699477125304429508 0x7f81e2c7c0df 24205: bjg::<init>(biu, cpv) -> void
fifo write: @1699477125305559962 0x7f81e9a791e2 19797: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477125305625723 0x7f81e26a23d4 1263: biq::cc() -> boolean
fifo write: @1699477125305678404 0x7f81e24445ef 479: cmg$$Lambda$1566.0x00007f816059bbf8::apply(Object) -> Object
fifo write: @1699477125305720374 0x7f81e27609f4 474: cmg::b(cjf) -> boolean
fifo write: @1699477125305773245 0x7f81e273ffb4 818: cmg$$Lambda$1567.0x00007f816059be38::test(Object) -> boolean
fifo write: @1699477125305816446 0x7f81e28b7883 636: cmg$$Lambda$1568.0x00007f816059c088::apply(Object) -> Object
fifo write: @1699477125311597560 0x7f81e8bf7818 27: vtable stub
fifo write: @1699477125311610920 0x7f81e8bf7848 27: vtable stub
fifo write: @1699477125311622950 0x7f81e8bf7878 27: vtable stub
fifo write: @1699477125311672820 0x7f81e8bf78a8 27: vtable stub
fifo write: @1699477125312140546 0x7f81e14d2c14 31: bso::<init>(bji, cpv) -> void
fifo write: @1699477125312808045 0x7f81e25abd77 2989: bso::a(int) -> ebd
fifo write: @1699477125313635306 0x7f81e283e4e7 7157: bkj::a(rc) -> void
fifo write: @1699477125315255887 0x7f81e1ec72fa 203: bji::b(cpv) -> bsp
fifo write: @1699477125316716945 0x7f81e27f02b7 987: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::fixPointers(int, int) -> void
fifo write: @1699477125318728611 0x7f81e277a2b5 7087: dks::a(int, int, int, dfj) -> boolean
fifo write: @1699477125318803032 0x7f81e253d214 816: dfi$a::t() -> boolean
fifo write: @1699477125320159020 0x7f81e9998c51 16049: bjg::b_() -> void
fifo write: @1699477125320211141 0x7f81e1642254 1040: java.util.EnumMap::put(Enum, Object) -> Object
fifo write: @1699477125331720539 0x7f81e97e9b7b 28205: io.netty.channel.AbstractChannelHandlerContext::invokeWrite0(Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477125335350805 0x7f81e97660b8 1432: bfr::run() -> void
fifo write: @1699477125336945286 0x7f81e8bf78d8 27: vtable stub
fifo write: @1699477125339050293 0x7f81e923d8cc 2: bpt::h() -> int
fifo write: @1699477125346139574 0x7f81ea0e159a 76413: biq::a(aqh, double) -> boolean
fifo write: @1699477125347602283 0x7f81e9f8f972 21810: io.netty.channel.AbstractChannelHandlerContext::write(Object, boolean, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477125347776936 0x7f81e9589a50 2961: io.netty.buffer.AbstractReferenceCountedByteBuf::release() -> boolean
fifo write: @1699477125347913907 0x7f81e2ad3e90 15778: biq::a(aqh, double) -> boolean
fifo write: @1699477125347944688 0x7f81e91ed194 279: bjg::dR() -> boolean
fifo write: @1699477125348226691 0x7f81e9caba4c 2: eaz::hashCode() -> int
fifo write: @1699477125349569419 0x7f81e18f6714 185: java.util.Comparator$$Lambda$336.0x00007f81601d1158::<init>(java.util.function.ToIntFunction) -> void
fifo write: @1699477125349890023 0x7f81e26acafc 2126: java.util.Comparator::comparingInt(java.util.function.ToIntFunction) -> java.util.Comparator
fifo write: @1699477125350834665 0x7f81e15de014 259: io.netty.buffer.AbstractByteBuf::writerIndex(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125352360035 0x7f81e1a7f114 267: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::enqueue(long) -> void
fifo write: @1699477125352414795 0x7f81e234f614 470: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::reduce() -> void
fifo write: @1699477125352626068 0x7f81e2482834 486: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::dequeueLong() -> long
fifo write: @1699477125352818111 0x7f81e18f6fb4 1058: ead::c(gw) -> dfj
fifo write: @1699477125352889922 0x7f81e249ae19 1838: ead::a(int, int) -> dhs
fifo write: @1699477125354671015 0x7f81e1bd3e14 240: qx::a(java.io.DataOutput) -> void
fifo write: @1699477125356119323 0x7f81e9d0d604 13663: bjg::l() -> void
fifo write: @1699477125356162354 0x7f81e1766814 31: bjp::<init>(biu, cpv) -> void
fifo write: @1699477125356259755 0x7f81e996a9ec 2325: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477125356926154 0x7f81e9d30673 216: biq::cf() -> eio
fifo write: @1699477125361600143 0x7f81e9e9134a 3878: bjg::a(ehn, float) -> ehn
fifo write: @1699477125362481785 0x7f81e9d52ee0 4439: bjg::aJ() -> float
fifo write: @1699477125364562422 0x7f81e9debde8 12061: bjg::h(ehn) -> void
fifo write: @1699477125364642053 0x7f81e1f49514 260: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$FastEntryIterator::next() -> it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapEntry
fifo write: @1699477125364699543 0x7f81e1d82c14 357: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477125364767664 0x7f81e25b57f4 1508: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477125364837165 0x7f81e16b0034 757: eas::a(eam, cpb, gw, eal, ha) -> boolean
fifo write: @1699477125365837268 0x7f81e245f117 11583: eak::a(cpv, gw, eam, dfj) -> void
fifo write: @1699477125366298934 0x7f81e9391bda 1002: biq::a(double, boolean, dfj, gw) -> void
fifo write: @1699477125368937048 0x7f81e18db874 101: dzs::a(int) -> int
fifo write: @1699477125370485568 0x7f81e2466e5e 2780: io.netty.channel.AbstractChannelHandlerContext::invokeChannelRead(Object) -> void
fifo write: @1699477125370767542 0x7f81e23a4b5c 3614: io.netty.channel.AbstractChannelHandlerContext::invokeChannelRead(io.netty.channel.AbstractChannelHandlerContext, Object) -> void
fifo write: @1699477125371851546 0x7f81e946ec64 1371: akt::b(dhf, cpc) -> void
fifo write: @1699477125372363912 0x7f81e94ac5b7 3268: akd::a(long, long, int) -> int
fifo write: @1699477125372756247 0x7f81e9456e5a 2405: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::getAndMoveToFirst(Object) -> byte
fifo write: @1699477125372793748 0x7f81e92ac7b1 170: ajz::a(int) -> dhk
fifo write: @1699477125372884929 0x7f81e90c27b9 212: rd::<init>(long[]) -> void
fifo write: @1699477125373124722 0x7f81e9323bd1 126: csv$a::equals(Object) -> boolean
fifo write: @1699477125373307434 0x7f81e94ac25b 23: eas::a(eal) -> boolean
fifo write: @1699477125373646869 0x7f81e9275b74 276: csv$a::hashCode() -> int
fifo write: @1699477125374509090 0x7f81e93afc53 532: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::moveIndexToFirst(int) -> void
fifo write: @1699477125378106716 0x7f81e97e5fd5 4061: he$c::a(aqh) -> boolean
fifo write: @1699477125378222598 0x7f81e9d17a50 79: io.netty.buffer.UnpooledHeapByteBuf::_setByte(int, int) -> void
fifo write: @1699477125382211499 0x7f81e9b4c836 27215: ajy::a(dhq) -> void
fifo write: @1699477125383309723 0x7f81e9a1d0d4 1765: cqg$d::a(bjj, cpc) -> boolean
fifo write: @1699477125386638796 0x7f81e2561d10 15814: biq::a(aqh, double) -> boolean
fifo write: @1699477125388086814 0x7f81e2c8587f 40373: bjg::b_() -> void
fifo write: @1699477125390671058 0x7f81e9e8de5a 1329: dhy$c::a(so) -> void
fifo write: @1699477125390727659 0x7f81e189b8d4 692: eak::a(eam) -> float
fifo write: @1699477125391320736 0x7f81e183d190 15034: biq::a(aqh, double) -> boolean
fifo write: @1699477125392352649 0x7f81e9b35a78 2747: ehx::<init>(biq) -> void
fifo write: @1699477125392466441 0x7f81e2a5d90c 7144: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477125392654283 0x7f81e99520d6 2879: io.netty.buffer.AbstractReferenceCountedByteBuf::handleRelease(boolean) -> boolean
fifo write: @1699477125393443864 0x7f81e193b194 113: arw::a(float) -> float
fifo write: @1699477125393571835 0x7f81e2ae7b77 7429: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477125394117592 0x7f81e1c12ed4 144: ehr::h(boolean, boolean) -> boolean
fifo write: @1699477125394150673 0x7f81e1f4a814 288: ehr$$Lambda$588.0x00007f816031f2e8::apply(boolean, boolean) -> boolean
fifo write: @1699477125394817581 0x7f81e2398b56 1513: djf::a(ehi, aqn) -> void
fifo write: @1699477125395427229 0x7f81e229ff56 9269: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477125396696516 0x7f81e9966dd3 1304: biq::bY() -> boolean
fifo write: @1699477125396814177 0x7f81e9d52a27 37: hw::a(double) -> int
fifo write: @1699477125398469978 0x7f81e9d84044 8415: bjg::c_() -> boolean
fifo write: @1699477125398527469 0x7f81e1e6e014 372: dhl::a(int, int) -> void
fifo write: @1699477125398576440 0x7f81e2256ad4 112: ead$a::c(long, ha) -> long
fifo write: @1699477125398669081 0x7f81e229139c 2247: hw::a(int, int, int, it.unimi.dsi.fastutil.longs.LongConsumer) -> void
fifo write: @1699477125398730872 0x7f81e9b4bfd0 119: all$$Lambda$7940.0x00007f8160c9f368::applyAsInt(Object) -> int
fifo write: @1699477125398800073 0x7f81e1d43c74 151: ead$a::a(int, boolean, ha) -> long
fifo write: @1699477125398851083 0x7f81e9d4a511 62: ead$a::a(long, ha) -> boolean
fifo write: @1699477125399373970 0x7f81e26053ff 3740: ead::a(long, dfj, long, dfj, ha) -> boolean
fifo write: @1699477125400135540 0x7f81e255f827 4733: eaa::a(long, int) -> void
fifo write: @1699477125400510495 0x7f81e9753456 215: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::relaxedPoll() -> Object
fifo write: @1699477125400845669 0x7f81e287ccd7 8186: dzu::a(long, long, int) -> void
fifo write: @1699477125401344726 0x7f81e94ed930 143: gw::a(long, ha) -> long
fifo write: @1699477125401759611 0x7f81e9951c41 25: gw$a::f(long) -> gw$a
fifo write: @1699477125403824468 0x7f81e9b2ae9a 6881: yk::a(cpc, eab, cqe, int, java.util.BitSet, java.util.BitSet, java.util.List) -> void
fifo write: @1699477125404314174 0x7f81e99fb05a 145: aka$$Lambda$5459.0x00007f8160a7c7b0::apply(int) -> Object
fifo write: @1699477125404679569 0x7f81e9b87dd3 40: biq::J() -> void
fifo write: @1699477125405190695 0x7f81e9e8a054 757: dhl::a() -> byte[]
fifo write: @1699477125408903082 0x7f81e22ce4b4 335: bil::a(aee) -> void
fifo write: @1699477125409076305 0x7f81e97600f4 2011: eaa::e(long) -> int
fifo write: @1699477125409131025 0x7f81e9deaa38 1427: biq::b(boolean, ehn) -> void
fifo write: @1699477125409405449 0x7f81e9d32730 91: io.netty.buffer.AbstractByteBuf::checkIndexBounds(int, int, int) -> void
fifo write: @1699477125410218589 0x7f81e9b1a122 1365: ajy::a(java.util.concurrent.CompletableFuture, String) -> void
fifo write: @1699477125410259500 0x7f81e9bf5564 197: csv::a(cpb, biq) -> void
fifo write: @1699477125412272176 0x7f81e9becd99 3875: biq::bw() -> boolean
fifo write: @1699477125412714092 0x7f81e9cb3937 272: ac::a(java.util.Optional, java.util.function.Consumer, Runnable) -> java.util.Optional
fifo write: @1699477125413025806 0x7f81e2281b16 37: bqy::<init>(bjp, double, int) -> void
fifo write: @1699477125413076726 0x7f81e2289494 31: bqy::<init>(bjp, double) -> void
fifo write: @1699477125413153587 0x7f81e22e2db4 39: bqj::<init>(bji, Class, float) -> void
fifo write: @1699477125413211348 0x7f81e2311c96 37: bqj::<init>(bji, Class, float, float) -> void
fifo write: @1699477125413268709 0x7f81e2286d94 185: bqj$$Lambda$7227.0x00007f8160bb0e18::<init>(bji) -> void
fifo write: @1699477125413588083 0x7f81e23cb81c 1498: bqy::<init>(bjp, double, int, boolean) -> void
fifo write: @1699477125414025878 0x7f81e249c4f8 4343: bqj::<init>(bji, Class, float, float, boolean) -> void
fifo write: @1699477125414221581 0x7f81e2253e14 454: akq::c(long) -> boolean
fifo write: @1699477125414258871 0x7f81e2409094 341: djl::a(long) -> boolean
fifo write: @1699477125414625556 0x7f81e9cae1d0 111: Enum::compareTo(Enum) -> int
fifo write: @1699477125415656320 0x7f81e9e689d0 167: cpv::X() -> cpr
fifo write: @1699477125415696530 0x7f81e99e70d8 311: it.unimi.dsi.fastutil.longs.LongOpenHashSet::contains(long) -> boolean
fifo write: @1699477125415843112 0x7f81e9e691d1 38: eal::a(eal) -> boolean
fifo write: @1699477125416189466 0x7f81e9e95a30 24: ehr$$Lambda$584.0x00007f816031ea68::apply(boolean, boolean) -> boolean
fifo write: @1699477125416914926 0x7f81e234edf4 97: czw::a(cbu, cpb, gw, dfj, eal) -> boolean
fifo write: @1699477125417076438 0x7f81e9d824f0 651: akq::a(long) -> boolean
fifo write: @1699477125419072424 0x7f81e9bdd2d7 22458: aka::a(ajy, int, java.util.function.IntFunction) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125419136324 0x7f81e97a68d7 256: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::find(short) -> int
fifo write: @1699477125419176185 0x7f81e1952ff4 23: cpv::F_() -> long
fifo write: @1699477125419227206 0x7f81e2357299 42: eiz::<init>(Object, gw, long, long) -> void
fifo write: @1699477125419285636 0x7f81e1f373a1 786: cpw::a(gw, Object, int) -> eiz
fifo write: @1699477125419340287 0x7f81e1ffa739 862: eiu::a(eiz) -> void
fifo write: @1699477125419383908 0x7f81e1d09274 47: akq::K() -> eiv
fifo write: @1699477125419432618 0x7f81e902eeb5 86: eak::a(gw, gw) -> short
fifo write: @1699477125419501269 0x7f81e22b017c 2955: eiw::a(eiz) -> void
fifo write: @1699477125419563740 0x7f81e1fae194 365: eak$$Lambda$7857.0x00007f8160c90000::<init>(eak, cpv, gw, gw, dfj) -> void
fifo write: @1699477125419616251 0x7f81e25db5b4 560: cpw::a(gw, eal, int) -> void
fifo write: @1699477125421486605 0x7f81e21b918f 21743: cxi::a(cpv, gw, dfj) -> boolean
fifo write: @1699477125421597166 0x7f81e9c6d514 1484: cpr::b(cpr$e) -> boolean
fifo write: @1699477125424033818 0x7f81e9b3544c 3: io.netty.channel.epoll.EpollEventArray::memoryAddress() -> long
fifo write: @1699477125424569655 0x7f81e9d6ff93 864: dhf::a(dks$a, int, int) -> int
fifo write: @1699477125425402195 0x7f81e9034079 2601: eag::g(long) -> dhl
fifo write: @1699477125430048485 0x7f81e9d28533 3368: akd::a(long, long, int) -> int
fifo write: @1699477125430624132 0x7f81e9d27f78 151: java.util.Spliterator$OfLong::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477125435744578 0x7f81e9abd265 3006: cqg::a(bjj, akq, dhq, cqg$c, cqg$a) -> void
fifo write: @1699477125438704266 0x7f81e9ead6b3 2252: cqg::a(cpv, dhq) -> gw
fifo write: @1699477125439221813 0x7f81e9abce50 71: dfi$d$$Lambda$498.0x00007f81602f7700::test(dfj, cpb, gw) -> boolean
fifo write: @1699477125439320204 0x7f81e22d0974 2706: biq::bb() -> boolean
fifo write: @1699477125440434749 0x7f81e22854b9 416: bzq::w(boolean) -> void
fifo write: @1699477125440515600 0x7f81e243d1d6 1741: djf::a(ehi, aqn) -> void
fifo write: @1699477125441083517 0x7f81e2b40a9f 5412: bzq::l() -> void
fifo write: @1699477125441660924 0x7f81e2b74e3f 6890: byr::b_() -> void
fifo write: @1699477125442941381 0x7f81e9a7769b 2093: ri$d::a(rq) -> ri$f
fifo write: @1699477125443513188 0x7f81e97aaf72 6966: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::computeIfAbsent(short, it.unimi.dsi.fastutil.shorts.Short2ObjectFunction) -> Object
fifo write: @1699477125443907963 0x7f81e2c951bf 39834: bjg::h(ehn) -> void
fifo write: @1699477125443933874 0x7f81e9cb1bdb 36: aqn$a::a() -> boolean
fifo write: @1699477125444915006 0x7f81e9bd46b5 17198: java.io.DataOutputStream::write(byte[], int, int) -> void
fifo write: @1699477125446755240 0x7f81e9fa875d 31409: biq::a(bjm, ehn) -> void
fifo write: @1699477125446797621 0x7f81e99ebe9d 418: biq::bl() -> boolean
fifo write: @1699477125446920812 0x7f81e2ca4bb9 23194: bji::fg() -> void
fifo write: @1699477125453848302 0x7f81e23f03b4 167: biq::aH() -> gw
fifo write: @1699477125455162739 0x7f81e9fa5e99 2726: dje::a(ehi, aqn) -> aqn$a
fifo write: @1699477125455300201 0x7f81e16b2bd9 1170: java.util.Collections$SetFromMap::<init>(java.util.Map) -> void
fifo write: @1699477125455445812 0x7f81e26d8bb9 2435: aqs::add(Object) -> boolean
fifo write: @1699477125455626965 0x7f81e26e54f4 226: ecq$a$$Lambda$7800.0x00007f8160c80698::get() -> Object
fifo write: @1699477125458040226 0x7f81e25aab34 410: io.netty.buffer.AbstractByteBuf::setIndex(int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125458934787 0x7f81e2abf1c7 10981: yf::<init>(dhq) -> void
fifo write: @1699477125459713117 0x7f81e9dd172b 15728: eak::a(ha, cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477125459819198 0x7f81e9a5ce79 1298: bjg::bv() -> boolean
fifo write: @1699477125459849709 0x7f81e27e7494 195: bro::<init>(bjp, double) -> void
fifo write: @1699477125459880099 0x7f81e2431794 63: bro::<init>(bjp, double, float) -> void
fifo write: @1699477125459912209 0x7f81e2031114 197: ead::b(long, long) -> void
fifo write: @1699477125460316645 0x7f81e994e633 2960: djf$$Lambda$7340.0x00007f8160bd2228::accept(Object) -> aqn$a
fifo write: @1699477125460364415 0x7f81e26bf33c 1587: bqw::<init>(bji) -> void
fifo write: @1699477125461629771 0x7f81e27ed199 256: io.netty.buffer.AbstractByteBuf::readBytes(byte[]) -> io.netty.buffer.ByteBuf
fifo write: @1699477125465373160 0x7f81e9c3f150 1925: dib::a() -> int
fifo write: @1699477125466327562 0x7f81e26da717 516: eap$a::d(eam) -> int
fifo write: @1699477125469083208 0x7f81e2484317 106: io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache::initBuf(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, io.netty.buffer.PooledByteBuf, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477125472594673 0x7f81e96b6bbd 2329: dhk::toString() -> String
fifo write: @1699477125473077709 0x7f81e9fa59de 97: java.util.ImmutableCollections$Set12::contains(Object) -> boolean
fifo write: @1699477125473218961 0x7f81e2165319 2190: yk::a(so) -> void
fifo write: @1699477125474670570 0x7f81e2a87294 427: io.netty.channel.SingleThreadEventLoop::hasTasks() -> boolean
fifo write: @1699477125474767641 0x7f81e24f7994 347: io.netty.util.concurrent.SingleThreadEventExecutor::hasTasks() -> boolean
fifo write: @1699477125475543541 0x7f81e9a0409e 761: eak::a(cpb, gw, dfj, eal) -> boolean
fifo write: @1699477125475886535 0x7f81e9badb34 4075: dib::b(so) -> void
fifo write: @1699477125475947846 0x7f81e9bd3e4c 2: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::size() -> int
fifo write: @1699477125476469663 0x7f81e9033732 225: io.netty.util.internal.PlatformDependent::copyMemory(byte[], int, long, long) -> void
fifo write: @1699477125477190322 0x7f81e22e05b4 588: io.netty.util.concurrent.AbstractScheduledEventExecutor::peekScheduledTask() -> io.netty.util.concurrent.ScheduledFutureTask
fifo write: @1699477125477302684 0x7f81e2647614 327: io.netty.util.internal.DefaultPriorityQueue::peek() -> Object
fifo write: @1699477125477373475 0x7f81e226c914 233: io.netty.util.internal.DefaultPriorityQueue::peek() -> io.netty.util.internal.PriorityQueueNode
fifo write: @1699477125478443309 0x7f81e9b1bf61 769: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::offer(Object) -> boolean
fifo write: @1699477125479543693 0x7f81e9e85188 1131: io.netty.buffer.AbstractByteBuf::writeBytes(byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125479791596 0x7f81e9b051d3 488: io.netty.buffer.PooledUnsafeDirectByteBuf::setBytes(int, byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125480648977 0x7f81e994e095 224: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap, it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$1) -> void
fifo write: @1699477125480878400 0x7f81e1d3b717 667: eiy::a(eiz, java.util.function.Function, long) -> qw
fifo write: @1699477125480962881 0x7f81e1b7d4d4 1345: java.util.PriorityQueue$Itr::next() -> Object
fifo write: @1699477125481072382 0x7f81e9e9b1ca 581: io.netty.buffer.UnsafeByteBufUtil::setBytes(io.netty.buffer.AbstractByteBuf, long, int, byte[], int, int) -> void
fifo write: @1699477125481926573 0x7f81e99be313 3772: aka$$Lambda$5475.0x00007f8160a7f028::apply(Object) -> Object
fifo write: @1699477125482015314 0x7f81e9ae0695 224: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap) -> void
fifo write: @1699477125483945159 0x7f81e9997b03 945: aka$$Lambda$7173.0x00007f8160b9ec48::<init>(aka, cpc, ajy, dhk, java.util.concurrent.Executor) -> void
fifo write: @1699477125484049040 0x7f81e9d0c3f9 753: qw::a(String, String) -> void
fifo write: @1699477125496701663 0x7f81e25cc29f 2958: bum::l() -> void
fifo write: @1699477125497781577 0x7f81e9f5adad 15817: cqg::a(bjj, akq, dhf, gw, cqg$c, cqg$a) -> void
fifo write: @1699477125497822938 0x7f81e211eb94 793: rb::equals(Object) -> boolean
fifo write: @1699477125498134682 0x7f81e9dcec20 3600: com.mojang.serialization.Codec$19::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477125498336465 0x7f81e2cad45f 16702: bum::X() -> void
fifo write: @1699477125498558717 0x7f81e97d00aa 3450: ri::createLongList(java.util.stream.LongStream) -> Object
fifo write: @1699477125500228539 0x7f81e9cda3af 3684: aka::a(cpc, ajy, dhk, java.util.concurrent.Executor, com.mojang.datafixers.util.Either) -> java.util.concurrent.CompletionStage
fifo write: @1699477125500343520 0x7f81e256b014 488: java.io.DataOutputStream::writeDouble(double) -> void
fifo write: @1699477125502645300 0x7f81e2318714 181: ctd::a(dfj, cpb, gw, ebc) -> boolean
fifo write: @1699477125503637263 0x7f81e2cb4787 33549: biq::a(bjm, ehn) -> void
fifo write: @1699477125503694714 0x7f81e22a3eb4 930: bum::aR() -> boolean
fifo write: @1699477125505334435 0x7f81e1e70ab4 845: bwq::gw() -> boolean
fifo write: @1699477125505759100 0x7f81e1fa1efc 5924: cab::l() -> void
fifo write: @1699477125505991533 0x7f81e8bf7908 27: vtable stub
fifo write: @1699477125506174085 0x7f81e2603294 586: eam::d() -> float
fifo write: @1699477125506557290 0x7f81e231467f 8088: cab::b_() -> void
fifo write: @1699477125507681465 0x7f81e9ce1417 2204: biq::z() -> void
fifo write: @1699477125508360563 0x7f81e2475f57 1958: cpy::c(gw, int) -> int
fifo write: @1699477125508415524 0x7f81e2687917 2823: eab::a(gw, int) -> int
fifo write: @1699477125508848189 0x7f81e9dce3d3 312: it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap::getDouble(Object) -> double
fifo write: @1699477125514319700 0x7f81e2445494 337: all$$Lambda$7946.0x00007f8160ca46c0::applyAsLong(Object) -> long
fifo write: @1699477125514383461 0x7f81e2b70594 450: java.util.stream.ReferencePipeline$5$1::accept(Object) -> void
fifo write: @1699477125514455252 0x7f81e1d4e754 1188: all$$Lambda$7947.0x00007f8160ca48e0::apply(long) -> Object
fifo write: @1699477125514794926 0x7f81e26b7114 483: all$$Lambda$7948.0x00007f8160ca4b08::test(Object) -> boolean
fifo write: @1699477125515249192 0x7f81e256c1b7 1409: all::a(alp, akq, dhq) -> void
fifo write: @1699477125515490055 0x7f81e1e0053f 812: yg::<init>(dhq, eab, java.util.BitSet, java.util.BitSet) -> void
fifo write: @1699477125515777049 0x7f81e2543bf4 65: io.netty.buffer.UnpooledHeapByteBuf::setArray(byte[]) -> void
fifo write: @1699477125516805922 0x7f81e9baa513 3628: aka$$Lambda$7173.0x00007f8160b9ec48::apply(Object) -> Object
fifo write: @1699477125516899233 0x7f81e26a1a5e 828: yg::a(so) -> void
fifo write: @1699477125517177397 0x7f81e26a8b97 6656: io.netty.buffer.UnpooledHeapByteBuf::<init>(io.netty.buffer.ByteBufAllocator, byte[], int) -> void
fifo write: @1699477125517225698 0x7f81e228347e 1063: yf::a(so) -> void
fifo write: @1699477125519777901 0x7f81e241a7b4 916: eap::b(cpy) -> int
fifo write: @1699477125520801174 0x7f81e9650174 5379: cpy::c(ehi) -> java.util.stream.Stream
fifo write: @1699477125521698815 0x7f81ea0a45b9 17992: eak::a(cpb, eal, gw, dfj, ha, gw, dfj, eam) -> boolean
fifo write: @1699477125522336564 0x7f81e23d1640 847: dfi$a::b(cpw, gw, int, int) -> void
fifo write: @1699477125522406524 0x7f81e28f9f34 1206: buj::a(dfj) -> java.util.Optional
fifo write: @1699477125525440144 0x7f81e27170b7 2933: dha::a(cpc) -> boolean
fifo write: @1699477125525488634 0x7f81e2a72394 224: dhp::getNoiseBiome(int, int, int) -> he
fifo write: @1699477125525669047 0x7f81e2134656 928: cpy::getNoiseBiome(int, int, int) -> he
fifo write: @1699477125526107192 0x7f81e28381c6 5646: cqg::a(akq, dhq, cqg$d, boolean, boolean, boolean) -> void
fifo write: @1699477125526806901 0x7f81e9bb62d4 2119: bji::aq() -> void
fifo write: @1699477125531123786 0x7f81e9bb44f5 2704: dhu::a() -> int
fifo write: @1699477125532352782 0x7f81e9bb3cd7 264: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::find(short) -> int
fifo write: @1699477125534688842 0x7f81e9d4bcd8 8375: biq::aB() -> void
fifo write: @1699477125536078230 0x7f81e98d2f7e 11166: djf::a(ehi, aqn) -> void
fifo write: @1699477125536172981 0x7f81e9970699 694: io.netty.buffer.AbstractByteBuf::writeShort(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125536212322 0x7f81e9ae0153 84: biq::i(double, double, double) -> double
fifo write: @1699477125537143364 0x7f81e964fc50 135: io.netty.buffer.UnpooledHeapByteBuf::_setShort(int, int) -> void
fifo write: @1699477125538551262 0x7f81e964f7b9 4: io.netty.buffer.AbstractByteBuf::isReadable() -> boolean
fifo write: @1699477125539909930 0x7f81e98d2a03 46: com.mojang.serialization.Codec::listOf() -> com.mojang.serialization.Codec
fifo write: @1699477125544529429 0x7f81e9a22080 7382: biq::a(aqh, double) -> boolean
fifo write: @1699477125545150737 0x7f81e8bf7938 27: vtable stub
fifo write: @1699477125547000481 0x7f81e9af4798 3559: aka::a(cpc, ajy, dhk, java.util.concurrent.Executor, java.util.List) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125549582384 0x7f81e98d23fe 331: biq::f(double, double, double) -> void
fifo write: @1699477125550087801 0x7f81e2ae4c14 114: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapEntry::getValue() -> Object
fifo write: @1699477125550121971 0x7f81e2afcc14 110: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapEntry::getIntKey() -> int
fifo write: @1699477125550175572 0x7f81e2577d14 260: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$FastEntryIterator::next() -> it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapEntry
fifo write: @1699477125550214303 0x7f81e27a4014 357: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477125550768230 0x7f81e9c444f6 14629: rl::a(java.io.DataOutput) -> void
fifo write: @1699477125552812496 0x7f81e9c43714 783: bqj::a() -> boolean
fifo write: @1699477125553830639 0x7f81e9e38a78 6108: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::computeIfAbsent(short, it.unimi.dsi.fastutil.shorts.Short2BooleanFunction) -> boolean
fifo write: @1699477125553969191 0x7f81e9cedd31 20: ehn::h() -> double
fifo write: @1699477125557489956 0x7f81e2712e99 96: java.util.zip.Deflater::deflate(byte[]) -> int
fifo write: @1699477125558186255 0x7f81e2753f1f 11742: bsn::c() -> void
fifo write: @1699477125559070846 0x7f81e9a17834 1723: cpm::a(double, double, double, double, boolean) -> cbu
fifo write: @1699477125559118057 0x7f81e26dfbbc 503: java.util.zip.Deflater::reset() -> void
fifo write: @1699477125559673404 0x7f81e9a73c6f 2920: bjg::F() -> void
fifo write: @1699477125559921547 0x7f81e9ced950 67: io.netty.buffer.SizeClasses::sizeIdx2size(int) -> int
fifo write: @1699477125560979791 0x7f81e1a16b37 1059: dia::a(short, int, cpc) -> gw
fifo write: @1699477125562538931 0x7f81e9cfcdb7 3731: bjg::dX() -> void
fifo write: @1699477125565257576 0x7f81e9ec0d94 7079: dhu::b(so) -> void
fifo write: @1699477125565583560 0x7f81e9f56a3c 5184: ebg::a(cpb, gw) -> double
fifo write: @1699477125566979708 0x7f81e21b43b7 12327: cpv::a(gw, dfj, int, int) -> boolean
fifo write: @1699477125567024239 0x7f81e9e38453 334: java.util.EnumMap::entrySet() -> java.util.Set
fifo write: @1699477125567456734 0x7f81e2690396 165: cpv::a(gw, dfj, int) -> boolean
fifo write: @1699477125567515155 0x7f81e2720d14 47: dhr::a(int, int, int, dfj) -> dfj
fifo write: @1699477125567585476 0x7f81e2742439 676: dhy::a(int, Object) -> Object
fifo write: @1699477125567655617 0x7f81e1fc1cbd 355: asj::a(int, int) -> int
fifo write: @1699477125567703638 0x7f81e25ed75c 944: dhy::a(int, int, int, Object) -> Object
fifo write: @1699477125567876490 0x7f81e22be9c1 3492: dhr::a(int, int, int, dfj, boolean) -> dfj
fifo write: @1699477125567919240 0x7f81e23214f4 47: akq::L() -> eiv
fifo write: @1699477125568085613 0x7f81e9eacfdd 238: eiz$$Lambda$5344.0x00007f8160a2f598::compare(Object, Object) -> int
fifo write: @1699477125568160604 0x7f81e27535bc 600: cvn::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125568218354 0x7f81e2557734 600: cpw::a(gw, csv, int) -> void
fifo write: @1699477125568373356 0x7f81e9acad62 1497: io.netty.buffer.PooledByteBuf::init(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, int, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477125568728521 0x7f81e9e70ce2 1497: io.netty.buffer.PooledByteBuf::init0(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, int, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477125569101076 0x7f81e9976daf 1581: eas::a(cpv) -> boolean
fifo write: @1699477125569192637 0x7f81e9ee25d1 158: hy::equals(Object) -> boolean
fifo write: @1699477125569306598 0x7f81e26a7e54 1419: eap::a(cpv) -> boolean
fifo write: @1699477125569354089 0x7f81e287c234 916: eap::c(cpy) -> int
fifo write: @1699477125569937376 0x7f81e254186a 1388: csv::b(dfj, cpw, gw) -> dfj
fifo write: @1699477125570850058 0x7f81e2cc16cf 14951: dhq::a(gw, dfj, boolean) -> dfj
fifo write: @1699477125571598338 0x7f81e9cd9b8b 54: java.util.EnumMap$EntrySet::iterator() -> java.util.Iterator
fifo write: @1699477125574759439 0x7f81e26ba914 185: cxt$$Lambda$714.0x00007f8160366638::<init>(dfj) -> void
fifo write: @1699477125575509538 0x7f81e27af73f 2236: cxt::n(dfj) -> boolean
fifo write: @1699477125575734711 0x7f81e2494207 4885: cyl::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125576571022 0x7f81e9f563d6 137: eiz$1::a(eiz, eiz) -> boolean
fifo write: @1699477125576641873 0x7f81e9f55d61 202: eiz$1::equals(Object, Object) -> boolean
fifo write: @1699477125577541204 0x7f81e9d73fe1 146: dfi$a::a(ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125580832626 0x7f81e22bd214 1195: cyl::b(dfj, ha) -> boolean
fifo write: @1699477125582658980 0x7f81e9cd97b0 10: cpv::F_() -> long
fifo write: @1699477125583467840 0x7f81e9835492 1517: eid$$Lambda$829.0x00007f81603a4000::merge(int, int, int) -> boolean
fifo write: @1699477125584609785 0x7f81e9d736b0 523: dfi$d$$Lambda$538.0x00007f81603129b8::evaluate(dfj, cpb, gw) -> ehn
fifo write: @1699477125584765297 0x7f81e9e9d130 611: dfi$a$$Lambda$1539.0x00007f8160595310::apply(Object) -> Object
fifo write: @1699477125585240853 0x7f81e9eb3210 523: dfi$d::a(dfj, cpb, gw) -> ehn
fifo write: @1699477125585291224 0x7f81e9eb2d49 142: dia::a(short, int, cpc) -> gw
fifo write: @1699477125593186776 0x7f81ea046518 17070: bsp::c() -> void
fifo write: @1699477125593267597 0x7f81e27218d7 1097: dhu::a(Object) -> int
fifo write: @1699477125593293097 0x7f81e8bf7968 27: vtable stub
fifo write: @1699477125594891888 0x7f81ea09b00d 14741: eak::a(cpv, gw, dfj) -> eam
fifo write: @1699477125596715571 0x7f81e2722bde 1087: cxi::a(dfj, cpv, gw, csv, gw, boolean) -> void
fifo write: @1699477125596843233 0x7f81e281eede 2897: cxi::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125596918464 0x7f81e2712594 167: eak::a(cpv, gw, eam, eam) -> int
fifo write: @1699477125596988595 0x7f81e9e9cccc 3: dfi$a::g() -> boolean
fifo write: @1699477125597614833 0x7f81e25d8274 825: hw::b(gw) -> short
fifo write: @1699477125597765265 0x7f81e274fe17 125: eak$$Lambda$7857.0x00007f8160c90000::get(short) -> boolean
fifo write: @1699477125597840756 0x7f81e25eccb7 515: eak::a(cpv, gw, gw, dfj, short) -> boolean
fifo write: @1699477125598374123 0x7f81e27108c0 831: dfi$a::b(cpv, gw, dfj, boolean) -> void
fifo write: @1699477125598521265 0x7f81e26b9840 831: dfi$a::a(cpv, gw, dfj, boolean) -> void
fifo write: @1699477125598611606 0x7f81e25459fc 3273: ead::a(cpb, gw, dfj, dfj) -> boolean
fifo write: @1699477125598817158 0x7f81e2b74514 539: ebm$b::<init>(gw, csv, ha) -> void
fifo write: @1699477125599008621 0x7f81e2350f12 1759: dfi$a::a(cpw, gw, int, int) -> void
fifo write: @1699477125599167683 0x7f81e261b787 8140: dfi::a(dfj, cpv, gw, dfj, boolean) -> void
fifo write: @1699477125599286475 0x7f81e244cfd7 4570: akq::a(gw, dfj, dfj) -> void
fifo write: @1699477125600102585 0x7f81e26e6b8f 9108: akq::a(gw, dfj, dfj, int) -> void
fifo write: @1699477125600320368 0x7f81e9ebdd56 3962: eig::b(ha) -> eig
fifo write: @1699477125600835475 0x7f81e27edfff 4683: cpv::o(gw) -> boolean
fifo write: @1699477125601853128 0x7f81e287af57 1168: dhp::h() -> java.util.Map
fifo write: @1699477125602909961 0x7f81e26e5f54 1025: cqn::b(gw) -> java.util.Map
fifo write: @1699477125603472279 0x7f81e2836279 4176: cqg::a(gw, akq, bjj, cqn) -> boolean
fifo write: @1699477125603635061 0x7f81e159f126 5045: dhg::a(he, cqn, bjj, gw) -> bfm
fifo write: @1699477125604753475 0x7f81e9f8bc6f 4958: cyl::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477125604886857 0x7f81ea09a8d0 155: io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher::match(Object) -> boolean
fifo write: @1699477125618251199 0x7f81e2cc797f 19281: bjg::l() -> void
fifo write: @1699477125618333030 0x7f81e27d3c17 328: ebg::a(ehi, Object) -> boolean
fifo write: @1699477125618386020 0x7f81e284d394 444: ebg$$Lambda$7377.0x00007f8160be6728::getBoolean(Object) -> boolean
fifo write: @1699477125618421011 0x7f81e282a874 226: cqi::B_() -> dha
fifo write: @1699477125618466101 0x7f81e27a4f14 144: cqi::c(biq, ehi) -> java.util.List
fifo write: @1699477125621329848 0x7f81e2afad14 331: biq::bO() -> boolean
fifo write: @1699477125621381309 0x7f81e294d394 484: bvn::b_() -> void
fifo write: @1699477125621430870 0x7f81e21b3a94 543: bvn::X() -> void
fifo write: @1699477125630815800 0x7f81e26413b4 870: ead::a(gw) -> void
fifo write: @1699477125631170265 0x7f81e27a90d4 87: eaf::a(int) -> boolean
fifo write: @1699477125631966995 0x7f81e21b3514 31: io.netty.buffer.SizeClasses::pages2pageIdx(int) -> int
fifo write: @1699477125632026916 0x7f81e256df14 303: io.netty.buffer.IntPriorityQueue::poll() -> int
fifo write: @1699477125632155487 0x7f81e26bc457 550: io.netty.buffer.PoolChunk::splitLargeRun(long, int) -> long
fifo write: @1699477125632573733 0x7f81e213613d 842: dfi$a::a(akq, gw, asc) -> void
fifo write: @1699477125632679304 0x7f81e269ad6b 4489: eiw::a(java.util.Queue, eiu, long, int) -> void
fifo write: @1699477125632736995 0x7f81e256d894 594: akq$$Lambda$7299.0x00007f8160bbf5a8::accept(Object, Object) -> void
fifo write: @1699477125632836206 0x7f81e27c765c 3735: io.netty.buffer.PoolChunk::allocateRun(int) -> long
fifo write: @1699477125632868166 0x7f81ea09a2cc 3: dfi$a::k() -> boolean
fifo write: @1699477125632899387 0x7f81ea099fcc 3: dfi$a::r() -> boolean
fifo write: @1699477125633376063 0x7f81e24babb4 1299: akq::d(gw, csv) -> void
fifo write: @1699477125633431744 0x7f81e262f9d4 1030: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet::add(short) -> boolean
fifo write: @1699477125633560045 0x7f81e2619f81 2993: ajy::a(gw) -> void
fifo write: @1699477125635683103 0x7f81e271fad7 1370: cpy::A(gw) -> boolean
fifo write: @1699477125635920036 0x7f81e1b8c8e7 4340: eap::b(cpy, gw) -> boolean
fifo write: @1699477125636311731 0x7f81e271c461 2492: cqv::a(gw) -> he
fifo write: @1699477125638271036 0x7f81ea03fe97 10853: aka$a::a(long, int, ajy, int) -> ajy
fifo write: @1699477125682350804 0x7f81e92702ac 33: bus::a(bus) -> bsp
fifo write: @1699477125682438085 0x7f81e926ffac 33: bus::b(bus) -> asc
fifo write: @1699477125683472268 0x7f81ea038df8 12067: aki$a::a(long, int) -> void
fifo write: @1699477125683866823 0x7f81e926fbe4 71: cpv::d(int, int) -> dhq
fifo write: @1699477125683976175 0x7f81e926f894 1: Float::isNaN(float) -> boolean
fifo write: @1699477125685531195 0x7f81e97595d3 132: bjg::q(boolean) -> void
fifo write: @1699477125693511338 0x7f81ea117521 38027: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125693598519 0x7f81e97ced1d 2096: java.lang.ref.ReferenceQueue::remove(long) -> java.lang.ref.Reference
fifo write: @1699477125693640919 0x7f81e9758f68 31: io.netty.buffer.AbstractByteBufAllocator::ioBuffer() -> io.netty.buffer.ByteBuf
fifo write: @1699477125693810592 0x7f81e9f88e37 4577: java.util.concurrent.CompletableFuture$UniCompose::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125694429730 0x7f81e28cb1b9 1010: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::resize(int, int) -> void
fifo write: @1699477125695556144 0x7f81e9e619dc 1295: io.netty.handler.codec.MessageToByteEncoder::write(io.netty.channel.ChannelHandlerContext, Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477125695710506 0x7f81e2842b06 4821: java.util.concurrent.CompletableFuture$BiRelay::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125695946469 0x7f81e27b4a9b 1949: eak::a(int, boolean) -> eam
fifo write: @1699477125696014100 0x7f81e27790f9 2149: eak::e(eam) -> int
fifo write: @1699477125696151732 0x7f81e2428c5e 1087: cxi::b(dfj, cpv, gw, dfj, boolean) -> void
fifo write: @1699477125696422525 0x7f81e18377d7 13688: eak::a(cpv, gw, dfj) -> eam
fifo write: @1699477125697518900 0x7f81e2290394 362: dzs::a(int, double, double, double, double) -> double
fifo write: @1699477125706423194 0x7f81e283316f 1528: io.netty.buffer.PoolArena::allocateNormal(io.netty.buffer.PooledByteBuf, int, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477125711452539 0x7f81e2135c14 144: io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue::getNextBufferSize(Object[]) -> int
fifo write: @1699477125711509639 0x7f81e26bbf1a 308: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields::soProducerIndex(long) -> void
fifo write: @1699477125711605321 0x7f81e2ad2c59 1251: io.netty.util.concurrent.DefaultPromise::addListener(io.netty.util.concurrent.GenericFutureListener) -> io.netty.util.concurrent.Promise
fifo write: @1699477125711693872 0x7f81e2719397 1613: io.netty.util.internal.shaded.org.jctools.util.RangeUtil::checkPositive(long, String) -> long
fifo write: @1699477125711891064 0x7f81e2582196 1861: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::resize(long, Object[], long, Object, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> void
fifo write: @1699477125712128037 0x7f81e2454a7c 2134: bhl::c() -> void
fifo write: @1699477125721946394 0x7f81e2581b14 196: djh$1::a(Object) -> Object
fifo write: @1699477125725401889 0x7f81e2576cf7 1560: dzu::a(long, dfj) -> int
fifo write: @1699477125725705132 0x7f81e24542f4 483: ha::values() -> ha[]
fifo write: @1699477125725786433 0x7f81e228fe94 288: cxc::a(dfj, akq, gw, asc) -> void
fifo write: @1699477125729239497 0x7f81e2ccf7af 8650: dzu::a(long, long) -> void
fifo write: @1699477125729341569 0x7f81e16dd067 3361: cxc::a(dfj, cpw, gw) -> dfj
fifo write: @1699477125732734553 0x7f81ea0339f4 8348: cmg::a() -> cjf[]
fifo write: @1699477125732814244 0x7f81e2576054 1166: djl::a(gw) -> boolean
fifo write: @1699477125732881434 0x7f81e251fa57 1279: akq::f(gw) -> boolean
fifo write: @1699477125732974716 0x7f81e251f167 811: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::newBufferPoll(Object[], long) -> Object
fifo write: @1699477125733053857 0x7f81e26dddbe 281: io.netty.buffer.PoolChunkList::free(io.netty.buffer.PoolChunk, long, int, java.nio.ByteBuffer) -> boolean
fifo write: @1699477125733130088 0x7f81e26dd3d7 1063: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::nextBuffer(Object[], long) -> Object[]
fifo write: @1699477125733176898 0x7f81ea033512 45: StringConcatHelper::checkOverflow(long) -> long
fifo write: @1699477125734000279 0x7f81e97589d0 155: dfi$a::d() -> boolean
fifo write: @1699477125734791579 0x7f81e2789d27 3849: io.netty.buffer.PoolArena::freeChunk(io.netty.buffer.PoolChunk, long, int, io.netty.buffer.PoolArena$SizeClass, java.nio.ByteBuffer, boolean) -> void
fifo write: @1699477125735740871 0x7f81ea130ca7 10077: aka::a(long, int, ajy, int) -> ajy
fifo write: @1699477125735892433 0x7f81e2cd35ec 8421: io.netty.buffer.PoolChunk::free(long, int, java.nio.ByteBuffer) -> void
fifo write: @1699477125736779765 0x7f81ea136bde 10324: eak::a(cpy, gw, int, ha, dfj, gw, it.unimi.dsi.fastutil.shorts.Short2ObjectMap, it.unimi.dsi.fastutil.shorts.Short2BooleanMap) -> int
fifo write: @1699477125736827105 0x7f81e9b9bd5e 141: eam::a(cpb, gw, eal, ha) -> boolean
fifo write: @1699477125739348128 0x7f81e9e431d1 946: eak::a(cpb, gw, dfj, ha, gw, dfj, eam, eal) -> boolean
fifo write: @1699477125740273540 0x7f81e9e6439e 1407: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::<init>(int, float) -> void
fifo write: @1699477125740447832 0x7f81e9fd831e 1415: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::<init>(int, float) -> void
fifo write: @1699477125741004769 0x7f81e9e63ed3 124: eam::e() -> int
fifo write: @1699477125744646176 0x7f81e251eb94 93: com.sun.crypto.provider.AESCipher::engineUpdate(byte[], int, int, byte[], int) -> int
fifo write: @1699477125746152566 0x7f81e1e030f7 1658: bri::a() -> boolean
fifo write: @1699477125746916936 0x7f81e1e01efc 2362: io.netty.channel.AbstractChannelHandlerContext::invokeChannelReadComplete(io.netty.channel.AbstractChannelHandlerContext) -> void
fifo write: @1699477125748947702 0x7f81e9fd7e4c 9: cbu::fS() -> cbr
fifo write: @1699477125749546000 0x7f81e2cd7362 8442: com.sun.crypto.provider.CipherCore::update(byte[], int, int, byte[], int) -> int
fifo write: @1699477125749946205 0x7f81e9b9b8d0 183: io.netty.buffer.AbstractByteBuf::readerIndex(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477125751181041 0x7f81e9b9b3b9 82: io.netty.buffer.AbstractByteBuf::checkReadableBounds(io.netty.buffer.ByteBuf, int) -> void
fifo write: @1699477125751269232 0x7f81e225e179 2817: io.netty.channel.AbstractChannelHandlerContext::invokeChannelReadComplete() -> void
fifo write: @1699477125754580514 0x7f81e9b80a27 1128: io.netty.buffer.AbstractByteBuf::writeBytes(io.netty.buffer.ByteBuf) -> io.netty.buffer.ByteBuf
fifo write: @1699477125755486616 0x7f81e1e017f4 98: bji::fR() -> boolean
fifo write: @1699477125756506809 0x7f81e26dc839 872: io.netty.channel.ChannelOutboundBuffer::addFlush() -> void
fifo write: @1699477125758602736 0x7f81e225daf7 328: io.netty.buffer.Unpooled::wrappedBuffer(byte[]) -> io.netty.buffer.ByteBuf
fifo write: @1699477125762829700 0x7f81ea13c979 2501: ebg::d(gw) -> double
fifo write: @1699477125764937717 0x7f81ea13ef78 18577: dhq::H() -> void
fifo write: @1699477125765270732 0x7f81e225d334 728: com.google.common.cache.LocalCache$Segment::postWriteCleanup() -> void
fifo write: @1699477125768395902 0x7f81ea14b72d 32040: aka::a(ajy, dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125768467883 0x7f81e2cdb234 530: ha$a::e() -> ha$c
fifo write: @1699477125768614155 0x7f81e2cdb9d7 4159: cvp::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125768720906 0x7f81e9f6dbd0 135: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::enqueue(long) -> void
fifo write: @1699477125768823148 0x7f81e2cdd6ba 840: dfi$a::a(cpy, gw) -> boolean
fifo write: @1699477125768910179 0x7f81e2cdded7 1370: ctd::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125769940592 0x7f81ea161f50 2411: so::a(java.util.Collection, so$b) -> void
fifo write: @1699477125770015473 0x7f81e9f6cbd5 1174: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::reduce() -> void
fifo write: @1699477125770373148 0x7f81e9cfb537 1945: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2ObjectFunction) -> Object
fifo write: @1699477125770939815 0x7f81e9a21a5b 100: eas::a(eam, cpb, gw, eal, ha) -> boolean
fifo write: @1699477125771367410 0x7f81e2cdea39 905: ctd::a(dfj, cpy, gw) -> boolean
fifo write: @1699477125771432541 0x7f81e9a216d3 80: com.google.common.cache.LocalCache::segmentFor(int) -> com.google.common.cache.LocalCache$Segment
fifo write: @1699477125771742645 0x7f81e8bf7998 27: vtable stub
fifo write: @1699477125773077793 0x7f81e9a209d4 1319: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::dequeueLong() -> long
fifo write: @1699477125773463188 0x7f81e2cdf2b4 840: czt::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125773523218 0x7f81e2cdfb34 1209: czt::d(dfj, cpb, gw) -> boolean
fifo write: @1699477125774658853 0x7f81e2ce05f4 3552: cuz::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125774895936 0x7f81e2ce1f2f 7268: dbc::a(dfj, cpy, gw) -> boolean
fifo write: @1699477125776392785 0x7f81e2ce4bb4 1209: dbc::d(dfj, cpb, gw) -> boolean
fifo write: @1699477125777183455 0x7f81e2ce5621 2185: cuz::a(dfj, cpy, gw) -> boolean
fifo write: @1699477125781297098 0x7f81e9af3b18 904: cpw::a(gw, Object, int) -> eiz
fifo write: @1699477125782839688 0x7f81e2ce6699 1926: io.netty.channel.ChannelOutboundBuffer::removeBytes(long) -> void
fifo write: @1699477125783407665 0x7f81e2ce76bc 3821: cvp::h(dfj) -> boolean
fifo write: @1699477125783501796 0x7f81e9af3279 758: eiz::<init>(Object, gw, long, long) -> void
fifo write: @1699477125783830381 0x7f81e2ce8fd4 6421: csv::j(dfj) -> boolean
fifo write: @1699477125784949645 0x7f81e2ceb504 6400: cyl::a(cpy, gw, ha, boolean) -> dgg
fifo write: @1699477125793904681 0x7f81e2cedd5c 1172: cwc::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125793983822 0x7f81e2cee7fc 2056: cvp::a(dfj, boolean, ha) -> boolean
fifo write: @1699477125795355209 0x7f81e2cefa3f 7787: cxt::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125798672502 0x7f81ea164832 39695: ako::t() -> void
fifo write: @1699477125800561647 0x7f81ea17e9d4 5180: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::add(Object) -> boolean
fifo write: @1699477125804109732 0x7f81ea182295 8312: eiu::<init>(java.util.List) -> void
fifo write: @1699477125804947092 0x7f81e9af2c57 256: eak::h(eam) -> boolean
fifo write: @1699477125816255018 0x7f81e2cf2c14 167: bqb::b() -> boolean
fifo write: @1699477125816698764 0x7f81e2cf309a 615: cpm::a(bts, bjg, double, double, double) -> cbu
fifo write: @1699477125818008641 0x7f81e9c74096 231: biq::bf() -> void
fifo write: @1699477125818990544 0x7f81e9c73bd6 125: biq::bM() -> boolean
fifo write: @1699477125822267786 0x7f81e2cf3794 335: bjp::h(gw) -> float
fifo write: @1699477125822418498 0x7f81e2cf3c94 735: btx::b(bjp, gw) -> boolean
fifo write: @1699477125822937065 0x7f81e2cf4494 240: java.util.stream.ReduceOps$2ReducingSink::<init>(java.util.function.BinaryOperator) -> void
fifo write: @1699477125822991705 0x7f81e2cf4967 354: java.util.stream.ReduceOps$2::makeSink() -> java.util.stream.ReduceOps$2ReducingSink
fifo write: @1699477125823023246 0x7f81e228faf4 24: java.util.stream.ReduceOps$2ReducingSink::begin(long) -> void
fifo write: @1699477125823065816 0x7f81e2cf4e97 545: java.util.stream.ReduceOps$2::makeSink() -> java.util.stream.ReduceOps$AccumulatingSink
fifo write: @1699477125823212668 0x7f81e2cf5554 1096: java.util.stream.ReduceOps$2ReducingSink::get() -> java.util.Optional
fifo write: @1699477125823256809 0x7f81e2cf5f57 1184: java.util.stream.ReduceOps$2ReducingSink::get() -> Object
fifo write: @1699477125824390233 0x7f81e2cf6abf 7622: btx::a(bjp, gw) -> boolean
fifo write: @1699477125825317955 0x7f81e2cf9a7f 7772: bwq::l() -> void
fifo write: @1699477125825581129 0x7f81e2cfd17f 9769: bwq::b_() -> void
fifo write: @1699477125827760856 0x7f81ea1872d5 7098: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::computeIfAbsent(short, it.unimi.dsi.fastutil.shorts.Short2BooleanFunction) -> boolean
fifo write: @1699477125829822773 0x7f81ea18be15 7972: eiw::a(eiz) -> void
fifo write: @1699477125829894224 0x7f81e2d00db4 1995: cvn::h(dfj) -> boolean
fifo write: @1699477125829950194 0x7f81e2428854 99: ead$a::b(long, ha) -> long
fifo write: @1699477125830031405 0x7f81e2d01ca3 2116: cvn::a(dfj, akq, gw, asc) -> void
fifo write: @1699477125830173217 0x7f81e2d02c34 453: ebm::a(gw, csv, ha) -> void
fifo write: @1699477125830318999 0x7f81e2d032d7 1186: eas::b(eam) -> dfj
fifo write: @1699477125830621303 0x7f81e2d03d34 690: com.google.common.cache.LocalCache$Segment::drainReferenceQueues() -> void
fifo write: @1699477125830729534 0x7f81e2d0465c 2549: com.google.common.cache.LocalCache$Segment::runLockedCleanup(long) -> void
fifo write: @1699477125831044988 0x7f81e2d05dbf 6091: io.netty.buffer.PoolChunk::allocate(io.netty.buffer.PooledByteBuf, int, int, io.netty.buffer.PoolThreadCache) -> boolean
fifo write: @1699477125832525998 0x7f81e2d08a40 2971: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477125833016864 0x7f81e2d0a1b9 602: io.netty.buffer.PoolChunk::removeAvailRun(long) -> void
fifo write: @1699477125833105555 0x7f81e2d0a9df 1130: io.netty.buffer.IntPriorityQueue::remove(int) -> void
fifo write: @1699477125837544802 0x7f81e9ed0f44 1702: cti::g(dfj) -> boolean
fifo write: @1699477125838095980 0x7f81e9a71cd1 2146: ebg::a(dfj) -> boolean
fifo write: @1699477125840576342 0x7f81e2d0b63d 880: qw::a(String, short) -> void
fifo write: @1699477125841207000 0x7f81e2d0bf14 425: qw::a(String, boolean) -> void
fifo write: @1699477125844845007 0x7f81e9c72d1c 1003: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477125844959788 0x7f81e2d0c534 929: io.netty.channel.AbstractChannel::remoteAddress() -> java.net.SocketAddress
fifo write: @1699477125845014469 0x7f81e93d7a4c 6: dvm::k() -> dvz
fifo write: @1699477125845069680 0x7f81e93d774c 6: dvm::i() -> ha
fifo write: @1699477125845225722 0x7f81e2d0cf39 1731: sw::a(io.netty.util.Attribute, vd) -> void
fifo write: @1699477125848709047 0x7f81ea1918a3 27711: eak::b(cpv, gw, eam) -> void
fifo write: @1699477125848778517 0x7f81e93d6ff3 324: bji::a(eax) -> float
fifo write: @1699477125849430916 0x7f81ea1a3def 9091: cpw::a(gw, csv, int) -> void
fifo write: @1699477125849476566 0x7f81e93d6cd3 44: biq::cZ() -> biq
fifo write: @1699477125849542197 0x7f81e93d6809 382: eak$$Lambda$7858.0x00007f8160c90540::<init>(cpy, gw) -> void
fifo write: @1699477125849597268 0x7f81e94c5450 296: ha$c::iterator() -> java.util.Iterator
fifo write: @1699477125851510022 0x7f81e94c4c28 739: eak$$Lambda$7859.0x00007f8160c90a18::<init>(eak, gw, cpy, dfj) -> void
fifo write: @1699477125851611983 0x7f81e94c3f54 648: java.util.EnumMap$EntryIterator::next() -> Object
fifo write: @1699477125851815876 0x7f81e93d62d0 43: com.google.common.cache.LocalCache::usesValueReferences() -> boolean
fifo write: @1699477125851991818 0x7f81e9cf71d9 4: com.google.common.cache.LocalCache::usesKeyReferences() -> boolean
fifo write: @1699477125852203101 0x7f81e9cf68d4 648: java.util.EnumMap$EntryIterator::next() -> java.util.Map$Entry
fifo write: @1699477125853452937 0x7f81e9cf6159 662: java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl::compareAndSet(Object, Object, Object) -> boolean
fifo write: @1699477125858622674 0x7f81ea1a9f6d 17395: eak::a(cpv, gw, dfj) -> eam
fifo write: @1699477125861345419 0x7f81e8bf79c8 27: vtable stub
fifo write: @1699477125861366609 0x7f81e8bf79f8 27: vtable stub
fifo write: @1699477125864788833 0x7f81ea00eff7 2072: biq::b(int, boolean) -> void
fifo write: @1699477125864870854 0x7f81e2d0dc94 586: eam::g() -> dfj
fifo write: @1699477125865782626 0x7f81e9cf5a41 530: java.util.Arrays::copyOf(long[], int) -> long[]
fifo write: @1699477125870514007 0x7f81e983b350 75: io.netty.handler.codec.CodecOutputList::getUnsafe(int) -> Object
fifo write: @1699477125875254118 0x7f81e9f86d4b 2871: bjg::E() -> java.util.Map
fifo write: @1699477125876109549 0x7f81ea1b4ddb 3046: java.util.concurrent.CompletableFuture::uniApplyStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125883681156 0x7f81e8bf7a28 27: vtable stub
fifo write: @1699477125884039301 0x7f81e2d0e38a 915: gw::j() -> gw$a
fifo write: @1699477125884733650 0x7f81e983af51 150: ebg::a(cpb, gw, eax) -> eax
fifo write: @1699477125885852504 0x7f81ea1b7021 7813: eak::a(cpy, gw, int, ha, dfj, gw, it.unimi.dsi.fastutil.shorts.Short2ObjectMap, it.unimi.dsi.fastutil.shorts.Short2BooleanMap) -> int
fifo write: @1699477125888093913 0x7f81e2d0ec54 1394: eak::g(eam) -> boolean
fifo write: @1699477125889307409 0x7f81e983a0f4 923: bqy::a() -> boolean
fifo write: @1699477125890272282 0x7f81e24396f4 29: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::incBalance() -> void
fifo write: @1699477125895385938 0x7f81e9572fd6 253: java.util.BitSet::nextSetBit(int) -> int
fifo write: @1699477125896171028 0x7f81ea1bbe74 8417: cmg::a() -> cjf[]
fifo write: @1699477125896222108 0x7f81e9572ccc 2: it.unimi.dsi.fastutil.shorts.ShortArrayList::size() -> int
fifo write: @1699477125899036564 0x7f81e2d0f8c8 2987: java.lang.invoke.MethodHandleImpl::valueConversion(Class, Class, boolean, boolean) -> Object
fifo write: @1699477125900058367 0x7f81e2d111f4 91: eck::F() -> cqo
fifo write: @1699477125900114428 0x7f81e2d11614 283: ecm::M() -> cec
fifo write: @1699477125900277820 0x7f81e2d11b94 757: akq::G() -> cec
fifo write: @1699477125900399751 0x7f81e8bf5100 480: I2C/C2I adapters(0xbb7e7e7ebb)
fifo write: @1699477125902768822 0x7f81ea1c16ee 32588: eak::a(cpv, gw, eam, dfj) -> void
fifo write: @1699477125903320519 0x7f81e2d12697 11583: eak::a(cpv, gw, eam, dfj) -> void
fifo write: @1699477125903436721 0x7f81e9571a0c 115: cvn::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477125903529972 0x7f81e2d16bf4 151: ead$a::b(int, boolean, ha) -> long
fifo write: @1699477125904098869 0x7f81e2d1715f 3634: eaf::d(long) -> int
fifo write: @1699477125904470604 0x7f81e2d18c6f 5766: eaf::a(long, long) -> void
fifo write: @1699477125904889379 0x7f81e9a12940 73: java.util.stream.StreamOpFlag::fromCharacteristics(java.util.Spliterator) -> int
fifo write: @1699477125905456257 0x7f81e24ffc74 83: java.util.concurrent.CompletableFuture::encodeValue(Object) -> Object
fifo write: @1699477125906454390 0x7f81e9a122b3 228: did::a(dhq, hb) -> void
fifo write: @1699477125907119758 0x7f81e2d1b614 101: aki$$Lambda$7845.0x00007f8160c8a108::run() -> void
fifo write: @1699477125907173019 0x7f81e2d1ba14 189: aki$$Lambda$7845.0x00007f8160c8a108::<init>(aki, long) -> void
fifo write: @1699477125907252790 0x7f81e2d1be94 197: akc$b::<init>(Runnable, long, boolean) -> void
fifo write: @1699477125907392992 0x7f81e2d1c314 361: akc$$Lambda$5376.0x00007f8160a53ff8::accept(Object) -> void
fifo write: @1699477125907452523 0x7f81e2d1c8d1 304: akc::a(Runnable, long, boolean) -> akc$b
fifo write: @1699477125907619485 0x7f81e2d1ce77 1817: aki$$Lambda$7789.0x00007f8160c7e250::accept(Object) -> void
fifo write: @1699477125907727666 0x7f81e2d1dcf7 1458: aki::a(long, com.mojang.datafixers.util.Either) -> void
fifo write: @1699477125907784697 0x7f81e2d1e899 104: akc::a(bfq, akc$b) -> void
fifo write: @1699477125907952179 0x7f81e2d1ed34 674: aki::j(long) -> void
fifo write: @1699477125908327014 0x7f81ea1d5074 4603: ead::a(int, int) -> dhs
fifo write: @1699477125908388955 0x7f81e2d1f4cc 676: java.lang.invoke.LambdaForm$MH.0x00007f8160c8cc00::linkToTargetMethod(Object, Object, long, int, Object, Object) -> Object
fifo write: @1699477125908482816 0x7f81e2d1fc83 1581: java.lang.invoke.LambdaForm$DMH.0x00007f8160c8c400::newInvokeSpecial(Object, Object, Object, long, int, Object) -> Object
fifo write: @1699477125908526186 0x7f81e2d20814 287: akc$$Lambda$7847.0x00007f8160c8a550::<init>(akc, bfq, long, boolean, Runnable) -> void
fifo write: @1699477125908593157 0x7f81e2d20dd9 669: akc::a(bfq, long, boolean, Runnable) -> void
fifo write: @1699477125908624638 0x7f81e2d21594 134: aki$$Lambda$7846.0x00007f8160c8a330::run() -> void
fifo write: @1699477125908654898 0x7f81e2d21994 117: akc$$Lambda$7847.0x00007f8160c8a550::run() -> void
fifo write: @1699477125909014793 0x7f81e2d21eb7 2336: akc::a(bfq, long, Runnable, boolean) -> void
fifo write: @1699477125911193001 0x7f81e9a11bd3 344: eac::a(int) -> void
fifo write: @1699477125915154632 0x7f81e2d22f54 306: dhf::a(dfj) -> boolean
fifo write: @1699477125915219993 0x7f81e2d23494 650: dhf$$Lambda$7979.0x00007f8160ca8e30::test(Object) -> boolean
fifo write: @1699477125917759056 0x7f81e2d2424f 18483: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477125917831616 0x7f81e2d2bd14 183: dhl::a(int, int, int, int) -> void
fifo write: @1699477125918853260 0x7f81e9a11859 58: dhf$$Lambda$7979.0x00007f8160ca8e30::test(Object) -> boolean
fifo write: @1699477125919748961 0x7f81e2d2c194 224: dhp::a_(gw) -> dfj
fifo write: @1699477125919803862 0x7f81e2d2c634 583: ead$a::a(boolean, boolean, boolean, boolean, boolean) -> long
fifo write: @1699477125921661556 0x7f81e9a11170 215: dib::a(java.util.function.Predicate) -> boolean
fifo write: @1699477125922090281 0x7f81e9e8c6dc 949: dhl::a(int, int) -> void
fifo write: @1699477125922420736 0x7f81e2d2d077 8314: eaf::a(long, long, int) -> void
fifo write: @1699477125922469626 0x7f81e9e8bbd8 921: dhl::a(int, int, int, int) -> void
fifo write: @1699477125923437739 0x7f81ea1d815e 6527: ead::c(gw) -> dfj
fifo write: @1699477125924447962 0x7f81ea1dc753 380: dzw::a(int, int) -> int
fifo write: @1699477125925492645 0x7f81ea1dcf67 5379: java.util.concurrent.SynchronousQueue$TransferStack::transfer(Object, boolean, long) -> Object
fifo write: @1699477125926754241 0x7f81ea1e014c 87: dhf::b(boolean) -> void
fifo write: @1699477125926808542 0x7f81ea1e04d0 63: it.unimi.dsi.fastutil.objects.AbstractObjectList::ensureIndex(int) -> void
fifo write: @1699477125928016457 0x7f81ea1e0850 91: com.mojang.datafixers.types.templates.Const$PrimitiveType::toString() -> String
fifo write: @1699477125928488863 0x7f81ea1e0c49 1099: com.mojang.serialization.codecs.PairCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477125931821236 0x7f81ea1e23a3 31520: eak::a(cpv, gw, eam) -> void
fifo write: @1699477125946132041 0x7f81e2d30ad7 1212: ako::a(gw) -> void
fifo write: @1699477125947353097 0x7f81ea1f5e15 2161: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::rehash(int) -> void
fifo write: @1699477125948330419 0x7f81e2d31614 189: cph::a(dks$a, gw) -> gw
fifo write: @1699477125948435401 0x7f81e2d31a96 37: cqt::a(cpy, gw) -> boolean
fifo write: @1699477125948498182 0x7f81e2d31eb4 162: cqt::c(gw) -> boolean
fifo write: @1699477125948601043 0x7f81e2d32390 1289: cpy::a(dks$a, gw) -> gw
fifo write: @1699477125948791275 0x7f81e2d32e54 1120: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::get(long) -> float
fifo write: @1699477125948835716 0x7f81e2d33a79 1242: cqt::e(gw) -> float
fifo write: @1699477125948926177 0x7f81e2d345ee 3293: cpv::a(dks$a, int, int) -> int
fifo write: @1699477125948996218 0x7f81e2d35c1c 2335: cqt::f(gw) -> float
fifo write: @1699477125949071159 0x7f81e26bcef4 65: cqt::g() -> float
fifo write: @1699477125949162790 0x7f81e2d36d39 338: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::put(long, float) -> float
fifo write: @1699477125949226581 0x7f81e2d37354 885: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::find(long) -> int
fifo write: @1699477125949285752 0x7f81e2d37d14 160: sun.misc.Unsafe::getInt(long) -> int
fifo write: @1699477125949317492 0x7f81e2d380f7 355: io.netty.util.internal.PlatformDependent::getInt(long) -> int
fifo write: @1699477125949346622 0x7f81e2d385f4 261: io.netty.util.internal.PlatformDependent0::getInt(long) -> int
fifo write: @1699477125951521380 0x7f81ea1f7b44 43804: eak::b(cpv, gw, dfj) -> java.util.Map
fifo write: @1699477125951737183 0x7f81e2d39067 29690: cqt::a(cpy, gw, boolean) -> boolean
fifo write: @1699477125951771463 0x7f81ea20eb73 276: biq::c(dfj) -> boolean
fifo write: @1699477125951887765 0x7f81ea20f200 883: cpw::b(int, int) -> boolean
fifo write: @1699477125952457232 0x7f81ea210275 5084: ead::a(int, int) -> dhs
fifo write: @1699477125952811606 0x7f81e2d432b8 145: bru::a(double) -> ehi
fifo write: @1699477125953431144 0x7f81ea2133dc 211: bqu::a() -> boolean
fifo write: @1699477125953529866 0x7f81e2d437b4 845: bwq::gx() -> boolean
fifo write: @1699477125954069533 0x7f81e2d441bf 4591: bwq::gF() -> void
fifo write: @1699477125956448433 0x7f81e8bf4800 456: I2C/C2I adapters(0xbb6b6)
fifo write: @1699477125957517497 0x7f81e2d46114 118: java.util.ImmutableCollections$Set12::size() -> int
fifo write: @1699477125959021287 0x7f81ea213db9 2911: coz::<init>(cpf, biq, ehi, boolean, java.util.function.BiFunction) -> void
fifo write: @1699477125959948699 0x7f81ea215953 104: biq::e(ehn) -> double
fifo write: @1699477125960470215 0x7f81e2d465fe 1277: io.netty.channel.ChannelOutboundBuffer::forEachFlushedMessage(io.netty.channel.ChannelOutboundBuffer$MessageProcessor) -> void
fifo write: @1699477125962390570 0x7f81e2d4727c 1688: com.google.common.cache.LocalCache$Segment::drainKeyReferenceQueue() -> void
fifo write: @1699477125963904950 0x7f81e2d4845f 11860: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477125964621509 0x7f81ea215e13 5052: java.util.PriorityQueue::poll() -> Object
fifo write: @1699477125965453430 0x7f81e2d4d0df 11855: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477125966714996 0x7f81e2d51d67 10536: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477125968151255 0x7f81ea0df594 1715: hw::a(int, int, int, it.unimi.dsi.fastutil.longs.LongConsumer) -> void
fifo write: @1699477125973509043 0x7f81ea0ded7f 448: dhu::a(java.util.function.Predicate) -> boolean
fifo write: @1699477125981614978 0x7f81e2d57987 71588: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477125988864021 0x7f81e27abcb4 1404: dks$$Lambda$1674.0x00007f81605c0df8::test(Object) -> boolean
fifo write: @1699477125988939882 0x7f81e27aacf4 2317: dks$a$$Lambda$1676.0x00007f81605c1298::test(Object) -> boolean
fifo write: @1699477125989003923 0x7f81e2b21b54 1520: dks$a$$Lambda$1675.0x00007f81605c1048::test(Object) -> boolean
fifo write: @1699477125989066064 0x7f81e2b208d4 2899: dks$a::a(dfj) -> boolean
fifo write: @1699477125989109194 0x7f81e27aa754 310: dks::a(dfj) -> boolean
fifo write: @1699477125989168665 0x7f81e2b20194 654: dks$$Lambda$1673.0x00007f81605c0ba8::test(Object) -> boolean
fifo write: @1699477125989229746 0x7f81e2d74134 2094: dks$a::b(dfj) -> boolean
fifo write: @1699477125991650047 0x7f81e2d74fb4 1112: cpy::c(gw, int) -> int
fifo write: @1699477125993472841 0x7f81e2d77107 72214: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477125993505641 0x7f81e2b1fc14 416: coy::b(gw, int) -> int
fifo write: @1699477125993564062 0x7f81e2d93d5e 3667: dzw::a(cpb, int, int, int) -> boolean
fifo write: @1699477125993620063 0x7f81e2d95a7f 3289: akt::a(gw) -> void
fifo write: @1699477125993983457 0x7f81ea0d7a78 15412: qt::a(java.io.DataOutput) -> void
fifo write: @1699477125994037858 0x7f81e2d9717f 4470: dam::b(dfj, cpy, gw) -> boolean
fifo write: @1699477125994068418 0x7f81e2d98ed6 928: cpy::getNoiseBiome(int, int, int) -> he
fifo write: @1699477125994430633 0x7f81e2d99714 555: cpy::A(gw) -> boolean
fifo write: @1699477125994545364 0x7f81e2d99d57 1799: dam::c(dfj, cpy, gw) -> boolean
fifo write: @1699477125994733927 0x7f81e2d9ae3f 10045: akq::a(boolean, gw) -> void
fifo write: @1699477125997533513 0x7f81e2776c14 23: com.google.common.collect.ImmutableList::equals(Object) -> boolean
fifo write: @1699477125998022139 0x7f81e94ae44c 2: crd$a::b() -> int
fifo write: @1699477125998112000 0x7f81e2d9ed14 333: crd$$Lambda$7990.0x00007f8160cae000::applyAsInt(Object) -> int
fifo write: @1699477125998189231 0x7f81e2d9f214 333: crd$$Lambda$7991.0x00007f8160cae220::applyAsInt(Object) -> int
fifo write: @1699477125998296763 0x7f81e2d9f734 531: java.util.TreeMap::callMappingFunctionWithCheck(Object, java.util.function.Function) -> Object
fifo write: @1699477125998347493 0x7f81e94ae14c 2: crd$a::a() -> int
fifo write: @1699477125998962981 0x7f81e2d9fd94 340: java.util.TreeSet::add(Object) -> boolean
fifo write: @1699477125999181754 0x7f81e2da03fc 3946: com.google.common.collect.Lists::equalsImpl(java.util.List, Object) -> boolean
fifo write: @1699477125999408587 0x7f81e2da1e66 5593: java.util.TreeMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477125999476268 0x7f81e2da4694 185: crd$$Lambda$7992.0x00007f8160cae440::<init>(org.apache.commons.lang3.mutable.MutableInt) -> void
fifo write: @1699477125999538798 0x7f81e2da4b14 285: crd$a::<init>(int, int, dum) -> void
fifo write: @1699477125999596339 0x7f81e2da5014 185: crd$$Lambda$7993.0x00007f8160cae930::<init>(java.util.Comparator) -> void
fifo write: @1699477125999694880 0x7f81e94ade4c 6: hi$a::e() -> java.util.List
fifo write: @1699477125999782881 0x7f81e2da5503 1140: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::computeIfAbsent(Object, it.unimi.dsi.fastutil.objects.Object2IntFunction) -> int
fifo write: @1699477126000058355 0x7f81e94adad9 46: crd$$Lambda$7990.0x00007f8160cae000::applyAsInt(Object) -> int
fifo write: @1699477126000372259 0x7f81e2da6157 4084: dum::hashCode() -> int
fifo write: @1699477126000444430 0x7f81e94ad759 46: crd$$Lambda$7991.0x00007f8160cae220::applyAsInt(Object) -> int
fifo write: @1699477126000528821 0x7f81e94ace08 631: com.google.common.collect.ImmutableList::hashCode() -> int
fifo write: @1699477126001178459 0x7f81e2da7e67 6364: dum::equals(Object) -> boolean
fifo write: @1699477126004069217 0x7f81e2daa7d4 173: crd::a(int, crd$a) -> boolean
fifo write: @1699477126004172798 0x7f81e2daac94 520: crd$$Lambda$7995.0x00007f8160caefb8::test(Object) -> boolean
fifo write: @1699477126004234489 0x7f81e9d8094c 6: crd$a::c() -> dum
fifo write: @1699477126004418971 0x7f81e2dab314 237: dls::<init>(long, long) -> void
fifo write: @1699477126004474272 0x7f81e8bf2a80 480: I2C/C2I adapters(0xbbeabbaa)
fifo write: @1699477126005256952 0x7f81ea01ffac 791: java.util.Map::getOrDefault(Object, Object) -> Object
fifo write: @1699477126005560926 0x7f81e94aca97 32: java.util.TreeMap::leftOf(java.util.TreeMap$Entry) -> java.util.TreeMap$Entry
fifo write: @1699477126006486688 0x7f81e2dab814 240: dhy$$Lambda$8000.0x00007f8160cb0000::accept(int) -> void
fifo write: @1699477126006544159 0x7f81e2dabc94 375: it.unimi.dsi.fastutil.ints.IntArraySet::findKey(int) -> int
fifo write: @1699477126006672240 0x7f81e2dac2da 1257: it.unimi.dsi.fastutil.ints.IntArraySet::add(int) -> boolean
fifo write: @1699477126006937764 0x7f81e2dacef4 159: it.unimi.dsi.fastutil.ints.IntArraySet$1::hasNext() -> boolean
fifo write: @1699477126007009085 0x7f81e2dad394 311: it.unimi.dsi.fastutil.ints.AbstractIntCollection::forEach(it.unimi.dsi.fastutil.ints.IntConsumer) -> void
fifo write: @1699477126007073135 0x7f81e2dad894 167: it.unimi.dsi.fastutil.ints.IntIterable::forEach(it.unimi.dsi.fastutil.ints.IntConsumer) -> void
fifo write: @1699477126007410900 0x7f81e94ac54c 6: dhy$c::e() -> dhw
fifo write: @1699477126007542751 0x7f81e2dadd14 513: dhg$$Lambda$7999.0x00007f8160cafd50::accept(Object) -> void
fifo write: @1699477126007608062 0x7f81e2dae2f7 434: dhy::a(java.util.function.Consumer, dhw, int) -> void
fifo write: @1699477126007660793 0x7f81e2dae8b4 526: dhy$$Lambda$8001.0x00007f8160cb0238::accept(int) -> void
fifo write: @1699477126007717954 0x7f81e2daef34 596: it.unimi.dsi.fastutil.ints.IntArraySet$1::nextInt() -> int
fifo write: @1699477126007868226 0x7f81e2daf69e 423: asz::a(java.util.function.IntConsumer) -> void
fifo write: @1699477126009096472 0x7f81e9a79c34 16659: dzu::a(long, long, int) -> void
fifo write: @1699477126009153602 0x7f81e2dafc94 144: dls::<init>(dlh$a) -> void
fifo write: @1699477126009768490 0x7f81e8bf7a58 168: itable stub
fifo write: @1699477126010817684 0x7f81e17b5294 286: java.util.stream.Streams$StreamBuilderImpl::<init>(Object) -> void
fifo write: @1699477126010872464 0x7f81e2db0114 272: cpy::s(gw) -> he
fifo write: @1699477126010946335 0x7f81e2db0667 427: java.util.stream.Stream::of(Object) -> java.util.stream.Stream
fifo write: @1699477126011061717 0x7f81e2db0c95 108: cpm::a(biq, double) -> cbu
fifo write: @1699477126011804516 0x7f81e1a16514 345: akx::b(int, int) -> boolean
fifo write: @1699477126011886168 0x7f81e1a15e54 603: cpy::w(gw) -> float
fifo write: @1699477126011934888 0x7f81e1a15996 173: akx::a(int, int) -> dhf
fifo write: @1699477126012091030 0x7f81e2db11b9 1043: akx::a_(gw) -> dfj
fifo write: @1699477126012140471 0x7f81e1a15194 390: cpy::t(gw) -> boolean
fifo write: @1699477126012725018 0x7f81e2db1b77 1517: ehx::a(eig, gw, boolean) -> boolean
fifo write: @1699477126012804609 0x7f81e996be57 1109: it.unimi.dsi.fastutil.ints.IntArraySet::add(int) -> boolean
fifo write: @1699477126013076613 0x7f81ea01fc4c 6: crd$b::b() -> java.util.function.ToIntFunction
fifo write: @1699477126014223608 0x7f81e2db2c75 17317: akx::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477126014308639 0x7f81e9a78ef0 639: dhr::a(int, int, int) -> dfj
fifo write: @1699477126017410569 0x7f81e9fab17e 24994: dig::a(akq, dhf) -> qw
fifo write: @1699477126017609841 0x7f81e9fa8775 3546: asj::a(java.util.function.IntConsumer) -> void
fifo write: @1699477126017661032 0x7f81e9fa834c 6: cqt::d() -> cqu
fifo write: @1699477126017715733 0x7f81e1dadd34 757: akx::a(dks$a, int, int) -> int
fifo write: @1699477126018033917 0x7f81e9ccf313 4860: java.util.PriorityQueue::poll() -> Object
fifo write: @1699477126018107628 0x7f81e996b256 1030: it.unimi.dsi.fastutil.ints.IntArraySet::add(int) -> boolean
fifo write: @1699477126019126751 0x7f81e9c2be30 711: cpy::a(int, int, dhk) -> dhf
fifo write: @1699477126019337294 0x7f81e9c2aa90 1187: dia::a_(gw) -> dfj
fifo write: @1699477126019791870 0x7f81ea01f5f3 96: bit$$Lambda$1498.0x00007f8160585028::test(Object) -> boolean
fifo write: @1699477126020715691 0x7f81e9c29d72 1054: dhy$$Lambda$8000.0x00007f8160cb0000::accept(int) -> void
fifo write: @1699477126021216848 0x7f81e22eacb4 982: akx::H_() -> int
fifo write: @1699477126021294059 0x7f81e996a913 472: bpv::a() -> boolean
fifo write: @1699477126021338929 0x7f81e9c29a4c 6: dia::x() -> dkg
fifo write: @1699477126021666384 0x7f81e1e29b6f 5303: aka::a(ajy, dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477126021700194 0x7f81e226fc34 982: akx::I_() -> int
fifo write: @1699477126021770365 0x7f81e9ff00d3 1222: com.google.common.base.Suppliers$NonSerializableMemoizingSupplier::get() -> Object
fifo write: @1699477126022186090 0x7f81e16c8114 109: dlt::g() -> long
fifo write: @1699477126022603615 0x7f81e2158914 240: akx::a() -> cpc
fifo write: @1699477126022774418 0x7f81e1bd9d94 256: dhf::y() -> boolean
fifo write: @1699477126024749233 0x7f81e9fee983 1594: dhf::a(dks$a, int, int) -> int
fifo write: @1699477126024924775 0x7f81e225b6c1 3965: akx::f_(gw) -> boolean
fifo write: @1699477126025148408 0x7f81e26efe94 185: dor$$Lambda$8016.0x00007f8160cb3738::<init>(dhd) -> void
fifo write: @1699477126025289390 0x7f81e23d9fb4 612: dor::a(asc, float) -> boolean
fifo write: @1699477126025394371 0x7f81e1a84f97 345: dhy::b(int, int, int, Object) -> Object
fifo write: @1699477126025608044 0x7f81e9c294b1 8: dhy$d::a(int, int, int) -> int
fifo write: @1699477126025875657 0x7f81e2853ab4 1244: dzd::a(dfj, asc) -> boolean
fifo write: @1699477126026080980 0x7f81e26bd97e 1449: dor::a(dfj, java.util.function.Function, asc, dqi, dqi$a, gw$a) -> boolean
fifo write: @1699477126026651397 0x7f81e9fee0d0 135: akx::H_() -> int
fifo write: @1699477126026844730 0x7f81e253b107 3651: dhd::a(gw) -> dhr
fifo write: @1699477126026916191 0x7f81e9feddcc 9: io.netty.channel.epoll.EpollChannelConfig::getMaxBytesPerGatheringWrite() -> long
fifo write: @1699477126026972471 0x7f81e9fedacc 3: io.netty.channel.unix.IovArray::size() -> long
fifo write: @1699477126027014942 0x7f81e9fed7cc 3: io.netty.channel.unix.IovArray::maxBytes() -> long
fifo write: @1699477126028371200 0x7f81e9fed4cc 6: io.netty.channel.AbstractChannel::unsafe() -> io.netty.channel.Channel$Unsafe
fifo write: @1699477126029836168 0x7f81e9fecb56 705: dhu::a(Object) -> int
fifo write: @1699477126030394356 0x7f81e9fec753 172: java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl::accessCheck(Object) -> void
fifo write: @1699477126031488810 0x7f81e9debbc3 10419: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477126031538550 0x7f81e9fec250 135: akx::I_() -> int
fifo write: @1699477126031631942 0x7f81e907ec78 745: io.netty.util.Recycler$LocalPool::release(io.netty.util.Recycler$DefaultHandle, boolean) -> void
fifo write: @1699477126031677882 0x7f81e907e653 116: asz::a(int) -> int
fifo write: @1699477126032675075 0x7f81e93143d3 424: asj::a(int, int) -> int
fifo write: @1699477126033951672 0x7f81e99a0ef4 9175: java.util.TreeMap::fixAfterInsertion(java.util.TreeMap$Entry) -> void
fifo write: @1699477126037372826 0x7f81e9b75478 971: dhy::a(int, Object) -> Object
fifo write: @1699477126039996440 0x7f81e9b92f1f 9421: java.util.TreeMap::addEntry(Object, Object, java.util.TreeMap$Entry, boolean) -> void
fifo write: @1699477126040301914 0x7f81e9aad55c 307: akx::f_(gw) -> boolean
fifo write: @1699477126041986695 0x7f81e9313f4c 6: dun::d() -> cqp
fifo write: @1699477126042030556 0x7f81e968aa4c 6: dun::f() -> dhg
fifo write: @1699477126042171168 0x7f81e1dfe6a6 2238: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::rehash(int) -> void
fifo write: @1699477126042305319 0x7f81e28d0ef4 232: dum::a(dup, dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477126042370690 0x7f81e215b099 605: dum$$Lambda$8005.0x00007f8160cb0ee8::apply(Object) -> Object
fifo write: @1699477126045070735 0x7f81e2dbafa7 71904: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477126045143496 0x7f81e1a7f114 472: dnw$$Lambda$8017.0x00007f8160cb6298::test(Object) -> boolean
fifo write: @1699477126045204927 0x7f81e27e8314 345: dor$$Lambda$8016.0x00007f8160cb3738::apply(Object) -> Object
fifo write: @1699477126045484760 0x7f81ea067276 961: dhy::b(int, int, int, Object) -> Object
fifo write: @1699477126045605102 0x7f81e22b8354 1408: dhd::b(gw) -> dfj
fifo write: @1699477126045712823 0x7f81e9b9294c 6: dun::e() -> java.util.Optional
fifo write: @1699477126045754884 0x7f81e9b7514c 6: akx::E_() -> cqv
fifo write: @1699477126047788490 0x7f81ea06692d 510: dkh::i() -> float
fifo write: @1699477126048249915 0x7f81e2a72d05 15752: dor::a(cqp, asc, dqi, double, double, double, double, double, double, int, int, int, int, int) -> boolean
fifo write: @1699477126048291496 0x7f81e9b74dcc 6: dny::d() -> asc
fifo write: @1699477126048325116 0x7f81ea0664cc 6: dny::b() -> cqp
fifo write: @1699477126048359337 0x7f81e9ced64c 6: dny::e() -> gw
fifo write: @1699477126048411737 0x7f81e9ced1cc 6: dny::f() -> dqa
fifo write: @1699477126048604800 0x7f81e1492074 2: dlm$b::a(dlp) -> int
fifo write: @1699477126048659811 0x7f81e15bbf74 515: dhg::b(he) -> cqu
fifo write: @1699477126048729492 0x7f81e16b0034 885: dhg$$Lambda$4059.0x00007f816088cc80::apply(Object) -> Object
fifo write: @1699477126049199428 0x7f81ea06b550 163: dzd::a(dfj, asc) -> boolean
fifo write: @1699477126049504712 0x7f81ea06a6a6 929: dor::a(dfj, java.util.function.Function, asc, dqi, dqi$a, gw$a) -> boolean
fifo write: @1699477126049597683 0x7f81e228733f 4908: dor::a(dny) -> boolean
fifo write: @1699477126050114619 0x7f81e9460d30 2205: dhd::a(gw) -> dhr
fifo write: @1699477126050988281 0x7f81e247bd18 510: cpx::d(int) -> boolean
fifo write: @1699477126051066532 0x7f81ea06a34c 2: dlp::a() -> int
fifo write: @1699477126051821181 0x7f81ea034545 6008: dhr::a(int, int, int, dfj, boolean) -> dfj
fifo write: @1699477126052147386 0x7f81e2419b17 1554: duo::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477126052563111 0x7f81e936b31d 2299: akx::a(dks$a, int, int) -> int
fifo write: @1699477126052646962 0x7f81ea0698d4 626: com.mojang.serialization.DataResult$$Lambda$3965.0x00007f8160838788::apply(Object) -> Object
fifo write: @1699477126052735813 0x7f81e16f6d14 141: dut$$Lambda$8007.0x00007f8160cb1a00::apply(int) -> Object
fifo write: @1699477126052816844 0x7f81e170b75a 982: duh::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477126053186229 0x7f81e27cb337 14017: dor::a(cqp, asc, dqi, double, double, double, double, double, double, int, int, int, int, int) -> boolean
fifo write: @1699477126053251650 0x7f81e1d7587f 1897: duj::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477126053310311 0x7f81e19cc614 487: dhg::a(he) -> cqu
fifo write: @1699477126053344261 0x7f81e22cfbb4 705: cqu::a(dum) -> boolean
fifo write: @1699477126053381062 0x7f81e18f6fd4 891: dhf::k() -> dhk
fifo write: @1699477126053417852 0x7f81e1daf2d7 825: dia::getNoiseBiome(int, int, int) -> he
fifo write: @1699477126055816313 0x7f81ea1c61fb 39210: eay::c(int, int, int) -> eax
fifo write: @1699477126055916984 0x7f81e2270d5c 3051: dua::a(dun, asc, gw) -> boolean
fifo write: @1699477126055998865 0x7f81e25af877 1642: dor::a(dfj, java.util.function.Function, asc, dqi, dqi$a, gw$a) -> boolean
fifo write: @1699477126056138017 0x7f81e1523b20 255: dnj::a(cqp, dhg, asc, gw) -> boolean
fifo write: @1699477126056177008 0x7f81e2318c19 375: dum$$Lambda$8006.0x00007f8160cb13d8::accept(Object) -> void
fifo write: @1699477126056238358 0x7f81e21337f7 383: dum::a(dnj, dun, asc, org.apache.commons.lang3.mutable.MutableBoolean, gw) -> void
fifo write: @1699477126056286159 0x7f81e196965f 823: dnw::a(dqa, cqp, dhg, asc, gw) -> boolean
fifo write: @1699477126056392200 0x7f81e234f614 420: dny::<init>(java.util.Optional, cqp, dhg, asc, gw, dqa) -> void
fifo write: @1699477126057149070 0x7f81e28d6b85 14013: dor::a(cqp, asc, dqi, double, double, double, double, double, double, int, int, int, int, int) -> boolean
fifo write: @1699477126057881480 0x7f81ea0338c6 430: dhf::a(it.unimi.dsi.fastutil.shorts.ShortList[], int) -> it.unimi.dsi.fastutil.shorts.ShortList
fifo write: @1699477126058465347 0x7f81e94608d0 99: dlt::g() -> long
fifo write: @1699477126058863482 0x7f81e25d1aa1 1634: dtr::a(asc, dlp) -> int
fifo write: @1699477126059089585 0x7f81e9369f78 1431: arw::b(asc, int, int) -> int
fifo write: @1699477126059430120 0x7f81e9460415 224: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap, it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$1) -> void
fifo write: @1699477126059903816 0x7f81e2b660fc 1205: dts::a(asc, dlp) -> int
fifo write: @1699477126059958007 0x7f81e1f37337 733: bfy::a(asc) -> int
fifo write: @1699477126060002697 0x7f81e248bf74 260: arw::c(asc, float, float) -> float
fifo write: @1699477126060039518 0x7f81e1ad0194 109: dkt::k() -> double
fifo write: @1699477126060105308 0x7f81e24bdcf4 220: dlm$a::a(dlp) -> int
fifo write: @1699477126060152099 0x7f81e2482814 612: bfy::a(asc, float, float, float, float) -> int
fifo write: @1699477126060197780 0x7f81e9febad0 379: dlr::c(int) -> int
fifo write: @1699477126060247470 0x7f81e2b7ffbc 1346: dku::b() -> double
fifo write: @1699477126060285971 0x7f81e9369c4c 6: dkx::f() -> dla
fifo write: @1699477126060520524 0x7f81e26b66d9 1064: java.util.stream.Streams$RangeIntSpliterator::forEachRemaining(java.util.function.IntConsumer) -> void
fifo write: @1699477126060600445 0x7f81e2a4309e 1881: java.util.Spliterator$OfInt::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477126060889569 0x7f81e27ace94 275: dum$$Lambda$8005.0x00007f8160cb0ee8::<init>(dup, dun, asc) -> void
fifo write: @1699477126060927219 0x7f81e22d9c94 400: hi$b::b() -> int
fifo write: @1699477126061054011 0x7f81e24f0819 707: gw::a(hy) -> gw
fifo write: @1699477126061137162 0x7f81e2a1e527 2187: dur::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477126061256433 0x7f81e9feaa85 1651: dia::a(short, int) -> void
fifo write: @1699477126061440056 0x7f81e945fdcc 2: dla::c() -> int
fifo write: @1699477126061475626 0x7f81e9fea74c 2: dla::d() -> int
fifo write: @1699477126061865261 0x7f81e253ef17 406: java.util.stream.Stream::of(Object[]) -> java.util.stream.Stream
fifo write: @1699477126062169295 0x7f81e9fea44c 3: org.apache.commons.lang3.mutable.MutableBoolean::isTrue() -> boolean
fifo write: @1699477126062382588 0x7f81e25f6314 147: java.util.stream.Streams$RangeIntSpliterator::<init>(int, int, int) -> void
fifo write: @1699477126062425828 0x7f81e1952ff4 8: java.util.stream.Streams$RangeIntSpliterator::estimateSize() -> long
fifo write: @1699477126062475549 0x7f81e25da294 332: java.util.stream.Streams$RangeIntSpliterator::<init>(int, int, boolean) -> void
fifo write: @1699477126062559470 0x7f81e26c0294 240: java.util.stream.Sink$ChainedInt::begin(long) -> void
fifo write: @1699477126062686232 0x7f81e24fe637 502: java.util.stream.IntPipeline$1::<init>(java.util.stream.IntPipeline, java.util.stream.AbstractPipeline, java.util.stream.StreamShape, int, java.util.function.IntFunction) -> void
fifo write: @1699477126062760263 0x7f81e2b0ac34 1075: java.util.stream.IntPipeline$1$1::<init>(java.util.stream.IntPipeline$1, java.util.stream.Sink) -> void
fifo write: @1699477126062835104 0x7f81e22c0ca0 619: java.util.stream.IntPipeline::mapToObj(java.util.function.IntFunction, int) -> java.util.stream.Stream
fifo write: @1699477126062906225 0x7f81e2a1412d 1184: java.util.stream.IntPipeline$1::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477126062969545 0x7f81e27aee3d 808: java.util.stream.IntStream::range(int, int) -> java.util.stream.IntStream
fifo write: @1699477126063021976 0x7f81e9fe9df6 379: java.util.stream.AbstractPipeline::close() -> void
fifo write: @1699477126063446762 0x7f81e27a81b7 887: dfi$a::a(hi) -> boolean
fifo write: @1699477126063507432 0x7f81e299cff7 2025: hi$a::a(he) -> boolean
fifo write: @1699477126064443204 0x7f81e9fe9acc 6: bfk$b::b() -> Object
fifo write: @1699477126064544126 0x7f81e26cfb34 450: java.util.stream.IntPipeline::mapToObj(java.util.function.IntFunction) -> java.util.stream.Stream
fifo write: @1699477126064715118 0x7f81e9fe97cc 6: dny::c() -> dhg
fifo write: @1699477126065124333 0x7f81e183c5f4 12676: dor::a(cqp, asc, dqi, double, double, double, double, double, double, int, int, int, int, int) -> boolean
fifo write: @1699477126065181684 0x7f81e2841db9 860: ctd::a(dfj, cpy, gw) -> boolean
fifo write: @1699477126065348956 0x7f81e245f147 10488: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477126065433527 0x7f81e9e3b8e7 1000: dkh::j() -> double
fifo write: @1699477126065503418 0x7f81e1bfb4d9 1994: dmk::test(Object, Object) -> boolean
fifo write: @1699477126065565729 0x7f81e25c51bf 1342: dmk::a(cqp, gw) -> boolean
fifo write: @1699477126065616550 0x7f81e2219634 1123: dmf::a(dfj) -> boolean
fifo write: @1699477126065675730 0x7f81e2b2af94 218: dun::<init>(cqp, dhg, java.util.Optional) -> void
fifo write: @1699477126065724991 0x7f81e2578694 264: gw$a::b(int, int, int) -> gw
fifo write: @1699477126065769602 0x7f81e1fb9014 137: org.apache.commons.lang3.mutable.MutableBoolean::<init>() -> void
fifo write: @1699477126065814192 0x7f81e27b6a94 555: dkv::f() -> int
fifo write: @1699477126065857033 0x7f81e2541114 555: dkv::d() -> int
fifo write: @1699477126065913153 0x7f81e2a2b8de 1242: dlp::<init>(dhg, cpx) -> void
fifo write: @1699477126065951244 0x7f81e9fe94cc 2: dqn::a() -> int
fifo write: @1699477126065991154 0x7f81e9fe91cc 6: dqn::d() -> he
fifo write: @1699477126066069975 0x7f81e2b6b014 320: dum$$Lambda$8006.0x00007f8160cb13d8::<init>(dnj, dun, asc, org.apache.commons.lang3.mutable.MutableBoolean) -> void
fifo write: @1699477126066133426 0x7f81e28b6637 624: dum::a(cqp, dhg, asc, gw) -> boolean
fifo write: @1699477126066173797 0x7f81e9fe8ecc 6: dqs::a() -> dsb
fifo write: @1699477126066231007 0x7f81e2bbcf14 296: dub::a(dun, asc, gw) -> boolean
fifo write: @1699477126066427380 0x7f81e9e3a273 1828: java.util.stream.ReferencePipeline$7$1::accept(Object) -> void
fifo write: @1699477126066474211 0x7f81e9fe8856 187: gw::b(int, int, int) -> gw
fifo write: @1699477126066728134 0x7f81e284a4cf 5895: dum::a(dun, asc, gw) -> boolean
fifo write: @1699477126067176180 0x7f81e9e39e50 71: dzs::a(int) -> int
fifo write: @1699477126067247481 0x7f81e2a4f734 793: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::insert(int, long, float) -> void
fifo write: @1699477126067342982 0x7f81e281e4ed 717: dzr::a(double, double, boolean) -> double
fifo write: @1699477126067400413 0x7f81e26452bc 1747: dzs::a(double, double) -> double
fifo write: @1699477126067579405 0x7f81e9e398ee 322: java.util.stream.ReferencePipeline$7::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477126068502517 0x7f81e999991f 10900: aki::a(long, aku) -> void
fifo write: @1699477126068598368 0x7f81e26ea81e 5871: cqt::a(cpy, gw, boolean) -> boolean
fifo write: @1699477126068673309 0x7f81e27c9501 3878: cqt::b(cpy, gw) -> boolean
fifo write: @1699477126068690069 0x7f81e8bf2780 496: I2C/C2I adapters(0xaaabbbbb)
fifo write: @1699477126068703929 0x7f81e8bf2480 488: I2C/C2I adapters(0xaabbbaa7e)
fifo write: @1699477126068719850 0x7f81e8bf2180 480: I2C/C2I adapters(0xaabbbbb)
fifo write: @1699477126068731500 0x7f81e8bf1e80 528: I2C/C2I adapters(0xaaabbbaaa7e)
fifo write: @1699477126068749350 0x7f81e8bf1b80 488: I2C/C2I adapters(0x7e7e7e7e7e7e7e)
fifo write: @1699477126068761160 0x7f81e8bf1880 480: I2C/C2I adapters(0xaaabbbb)
fifo write: @1699477126069795233 0x7f81e9e38ef7 873: java.util.stream.ReferencePipeline::flatMap(java.util.function.Function) -> java.util.stream.Stream
fifo write: @1699477126069842224 0x7f81e1fc2314 137: com.google.common.hash.AbstractHasher::<init>() -> void
fifo write: @1699477126069931805 0x7f81e2972fd7 642: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher::<init>(java.security.MessageDigest, int, com.google.common.hash.MessageDigestHashFunction$1) -> void
fifo write: @1699477126069985566 0x7f81e17fd1b4 542: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher::<init>(java.security.MessageDigest, int) -> void
fifo write: @1699477126070024336 0x7f81e26b7bb4 380: com.google.common.hash.AbstractByteHasher::<init>() -> void
fifo write: @1699477126070066167 0x7f81e9e38930 71: java.util.ArrayDeque::circularClear(Object[], int, int) -> void
fifo write: @1699477126070139418 0x7f81e2b030ff 2906: com.google.common.hash.MessageDigestHashFunction::newHasher() -> com.google.common.hash.Hasher
fifo write: @1699477126070221609 0x7f81e226d71c 2169: cxc::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477126070265669 0x7f81e2a289b4 730: cpw::a(gw, eal, int) -> void
fifo write: @1699477126070381971 0x7f81e2bee01f 4836: dia::a_(gw) -> dfj
fifo write: @1699477126070442201 0x7f81e2753597 533: ebo::a(cpw, ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477126070514712 0x7f81e2aafae7 3316: cxc::a(dfj, cpw, gw) -> dfj
fifo write: @1699477126070562523 0x7f81e1a16b37 1149: csv::a(dfj, dfj, cpw, gw, int, int) -> void
fifo write: @1699477126070589863 0x7f81e99993d0 111: eam::c() -> boolean
fifo write: @1699477126070639674 0x7f81e29e73e3 802: com.google.common.hash.HashCode::fromBytesNoCopy(byte[]) -> com.google.common.hash.HashCode
fifo write: @1699477126070687915 0x7f81e1b54714 2741: dlu::a(dhf, gw) -> void
fifo write: @1699477126070735385 0x7f81e2a65957 1025: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher::update(byte[], int, int) -> void
fifo write: @1699477126070805366 0x7f81e28c7f1f 5004: dia::b_(gw) -> eam
fifo write: @1699477126070843327 0x7f81e2ac3834 691: com.google.common.hash.HashCode$BytesHashCode::<init>(byte[]) -> void
fifo write: @1699477126070872577 0x7f81e227fb94 137: com.google.common.hash.HashCode::<init>() -> void
fifo write: @1699477126071471455 0x7f81e2adcf9f 5911: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher::hash() -> com.google.common.hash.HashCode
fifo write: @1699477126071680087 0x7f81e2bbb359 1483: eap::b(cpy, gw) -> boolean
fifo write: @1699477126072011121 0x7f81e2c6f354 980: cqn::b(gw) -> java.util.Map
fifo write: @1699477126072558088 0x7f81e2787519 4131: cqg::a(gw, akq, bjj, cqn) -> boolean
fifo write: @1699477126073248257 0x7f81e9998a9c 503: cqf::a(cpc, bjj) -> void
fifo write: @1699477126073303558 0x7f81e2298174 90: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet$SetIterator::hasNext() -> boolean
fifo write: @1699477126073686853 0x7f81ea1c2fd5 3244: cqv::a(gw) -> he
fifo write: @1699477126075163272 0x7f81ea1c2657 402: it.unimi.dsi.fastutil.shorts.ShortIterator::next() -> Short
fifo write: @1699477126079138533 0x7f81e1e6dc34 767: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::insert(int, Object, boolean) -> void
fifo write: @1699477126081397172 0x7f81e288c2d4 1058: brb::a() -> boolean
fifo write: @1699477126081859108 0x7f81e2bf887c 5095: bre::a() -> boolean
fifo write: @1699477126082265724 0x7f81e2a512df 5674: bpu::a() -> boolean
fifo write: @1699477126082322004 0x7f81e27a5b94 367: cpy::z(gw) -> int
fifo write: @1699477126082863271 0x7f81e23be53c 5124: bwq::eX() -> boolean
fifo write: @1699477126086859333 0x7f81ea13acbc 2379: dzn::<init>(asc) -> void
fifo write: @1699477126087889026 0x7f81ea1c2353 36: biq::df() -> float
fifo write: @1699477126088495274 0x7f81e2878bf7 2406: akt::c(gw) -> void
fifo write: @1699477126088587425 0x7f81e268ec77 2492: akt$$Lambda$7860.0x00007f8160c90f58::run() -> void
fifo write: @1699477126089062631 0x7f81ea13730f 5085: cqg$$Lambda$7312.0x00007f8160bcc830::accept(Object) -> void
fifo write: @1699477126089120022 0x7f81e249adf7 2277: eab::a(gw) -> void
fifo write: @1699477126089221564 0x7f81e2292b87 6925: dzu::a(long) -> void
fifo write: @1699477126089273594 0x7f81e2a86717 287: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::expand() -> void
fifo write: @1699477126089316005 0x7f81e2b880b6 922: eaf::b(int, int, int) -> void
fifo write: @1699477126089450246 0x7f81e2b02334 1017: eag::l(long) -> boolean
fifo write: @1699477126090000184 0x7f81e2a9add5 4896: eaf::a(int, int, int, int) -> void
fifo write: @1699477126090484340 0x7f81ea136ecc 3: io.netty.handler.codec.ByteToMessageDecoder::isSingleDecode() -> boolean
fifo write: @1699477126091043257 0x7f81e9bc1b68 5548: cqg::a(gw, biq, cqj, cqf, bjj, it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap, dhq) -> void
fifo write: @1699477126091228669 0x7f81e1863687 7687: eaf::a(long) -> void
fifo write: @1699477126091608864 0x7f81e2bf20f5 12193: eaf::b(int, int, int, int) -> void
fifo write: @1699477126095004658 0x7f81e9f41e23 42275: eay::a(int, int, int) -> eaz
fifo write: @1699477126095131599 0x7f81ea1c16f2 766: io.netty.util.Recycler$DefaultHandle::unguardedRecycle(Object) -> void
fifo write: @1699477126095244341 0x7f81e9bc0790 1147: dia::a_(gw) -> dfj
fifo write: @1699477126095285691 0x7f81e2b01414 165: ead::c(long, long) -> void
fifo write: @1699477126095345882 0x7f81e9bc018d 436: ebg$$Lambda$7361.0x00007f8160bda8d8::<init>(ebg, int, int, int, bji) -> void
fifo write: @1699477126095391463 0x7f81ea1369d8 99: ead::c(gw) -> dfj
fifo write: @1699477126095457313 0x7f81e9bbf919 410: qw::l(String) -> String
fifo write: @1699477126095838108 0x7f81e2a2d797 6195: eaf::a(long, ha, int, boolean, int) -> void
fifo write: @1699477126102394213 0x7f81ea1c1156 97: cpc::equals(Object) -> boolean
fifo write: @1699477126112616355 0x7f81e9bbee53 408: dha::a(gw) -> boolean
fifo write: @1699477126113112821 0x7f81e2691a61 2492: cqv::a(gw) -> he
fifo write: @1699477126113330134 0x7f81e9bbeb4c 6: dvo$a::a() -> he
fifo write: @1699477126113547137 0x7f81e2d234b9 530: zh::a(so) -> void
fifo write: @1699477126113705569 0x7f81e2a489b4 808: io.netty.util.concurrent.SingleThreadEventExecutor::pollTask() -> Runnable
fifo write: @1699477126113766010 0x7f81e2ae17b7 621: io.netty.channel.epoll.EpollEventArray::getInt(int, int) -> int
fifo write: @1699477126114679081 0x7f81e9bbe84c 6: dvm::f() -> dva
fifo write: @1699477126115018066 0x7f81e28bf8dc 1273: java.util.Collections$UnmodifiableMap::values() -> java.util.Collection
fifo write: @1699477126116064229 0x7f81e9f3ff95 2386: java.util.concurrent.CompletableFuture$BiRelay::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477126116375833 0x7f81ea0a033c 5685: eaa::a(long, int) -> void
fifo write: @1699477126117068242 0x7f81e2ae09be 964: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::get(Object) -> Object
fifo write: @1699477126117309345 0x7f81e9f3ee39 1022: so::l(int) -> so
fifo write: @1699477126120301863 0x7f81e2805139 2908: bpt::a() -> boolean
fifo write: @1699477126121648011 0x7f81e9f3d340 2195: cpy::a(int, int, dhk) -> dhf
fifo write: @1699477126122281049 0x7f81e9f3cb53 184: bm$a::a(dfj) -> boolean
fifo write: @1699477126122386350 0x7f81e2b23494 234: it.unimi.dsi.fastutil.shorts.AbstractShortCollection::<init>() -> void
fifo write: @1699477126122732855 0x7f81e2bffeb7 965: eiw::b(eiz) -> void
fifo write: @1699477126123103079 0x7f81e2c60c5c 4959: eak::b(cpv, gw, eam) -> void
fifo write: @1699477126123469904 0x7f81e2a878d4 2202: ctd::d(dfj, cpb, gw) -> boolean
fifo write: @1699477126128969205 0x7f81e9d0e3aa 15332: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477126129005605 0x7f81e2afa514 411: cpy::f(int, int) -> boolean
fifo write: @1699477126132022274 0x7f81e2c05657 2913: dhf::c() -> java.util.Set
fifo write: @1699477126138741241 0x7f81e9bbe253 192: eab::e() -> int
fifo write: @1699477126139181357 0x7f81e9d0d513 723: qw::a(String, byte[]) -> void
fifo write: @1699477126141489906 0x7f81e26f67df 3436: brd::a() -> boolean
fifo write: @1699477126143130537 0x7f81e22e4974 98: bwt::gR() -> boolean
fifo write: @1699477126143562603 0x7f81e23bdbb4 988: bit$$Lambda$1494.0x00007f81605846e8::test(Object) -> boolean
fifo write: @1699477126143599793 0x7f81e2beb074 647: bit::g(biq) -> boolean
fifo write: @1699477126143835466 0x7f81e2c02514 230: apm$$Lambda$1671.0x00007f81605bebd0::<init>(apm, apl) -> void
fifo write: @1699477126144196651 0x7f81e249e877 1768: apm::a(Object, apl) -> apk
fifo write: @1699477126144521495 0x7f81e253353b 4583: cpm::a(double, double, double, double) -> boolean
fifo write: @1699477126144671277 0x7f81ea09f61c 775: cmg::a(cjf) -> boolean
fifo write: @1699477126144714317 0x7f81e2afd121 1637: aki$c::d(long, aku) -> void
fifo write: @1699477126145044582 0x7f81e28d1bdc 1119: cwc::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477126146812755 0x7f81e9f0b407 16559: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477126146975127 0x7f81ea09c9f9 3807: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477126148293404 0x7f81ea09bfb5 666: Long::formatUnsignedLong0(long, int, byte[], int, int) -> void
fifo write: @1699477126152309256 0x7f81e9f0121d 17100: ebg::a(cpb, int, int, int) -> eax
fifo write: @1699477126164496153 0x7f81e28d13b4 620: arg::skip(long) -> long
fifo write: @1699477126164625785 0x7f81ea09bab0 147: eiz::a(eiz, eiz) -> int
fifo write: @1699477126164668665 0x7f81e9d0d031 54: rt::a(int) -> rs
fifo write: @1699477126164795757 0x7f81e2afbb12 1714: dfi$a::a(cpw, gw, int, int) -> void
fifo write: @1699477126165371224 0x7f81ea09b5d0 163: java.util.EnumMap$EntryIterator$Entry::getValue() -> Object
fifo write: @1699477126165491346 0x7f81e28821de 2852: cxi::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477126169095661 0x7f81e2a9a3b4 696: java.util.ArrayDeque::element() -> Object
fifo write: @1699477126169147702 0x7f81e22f5934 471: java.util.ArrayDeque::getFirst() -> Object
fifo write: @1699477126169180673 0x7f81ea09b2d0 47: rf::c() -> void
fifo write: @1699477126172842510 0x7f81e2a32187 12937: ajy::a(dhq) -> void
fifo write: @1699477126173418237 0x7f81e22b0161 2407: qw$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126173742281 0x7f81e9efe837 3768: ehq$$Lambda$598.0x00007f8160327c20::merge(int, int, int) -> boolean
fifo write: @1699477126173922584 0x7f81ea09acd0 79: qw::g() -> boolean
fifo write: @1699477126175595305 0x7f81e9efc41c 3583: ehq::a(ehr, ehw, int, int, ehw, int, int, ehq, int, int, int[], boolean[], int, int, int) -> boolean
fifo write: @1699477126176192213 0x7f81e9efc0cc 2: sa::b() -> int
fifo write: @1699477126176321335 0x7f81e22f5334 513: ro$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126176393186 0x7f81e22fdcbc 1978: rc$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126179137241 0x7f81e9efb5f0 705: qw::a(String, byte) -> void
fifo write: @1699477126179875401 0x7f81e283aa0f 6589: cpm::c(biq, ehi) -> java.util.List
fifo write: @1699477126179931251 0x7f81e22f4ca7 431: rs$b::a(java.io.DataInput, int, rf) -> void
fifo write: @1699477126180454898 0x7f81e8bf7b10 27: vtable stub
fifo write: @1699477126182093479 0x7f81e2543614 501: bqn::h() -> void
fifo write: @1699477126183004701 0x7f81e2d2bd14 240: he$c::c() -> java.util.stream.Stream
fifo write: @1699477126183045342 0x7f81e2542e34 764: eam::k() -> java.util.stream.Stream
fifo write: @1699477126183084782 0x7f81e2affa94 481: biq$$Lambda$7951.0x00007f8160ca5df8::accept(Object) -> void
fifo write: @1699477126184120805 0x7f81e9efafb4 12: java.util.UUID::hashCode() -> int
fifo write: @1699477126185371872 0x7f81e254e3bf 25560: bqn::a() -> boolean
fifo write: @1699477126185670705 0x7f81e2aff514 416: rs$a::b(java.io.DataInput, rf) -> void
fifo write: @1699477126188800266 0x7f81e2542914 240: ry::e() -> int
fifo write: @1699477126189949741 0x7f81ea0d5a76 2253: bji::dx() -> void
fifo write: @1699477126190161323 0x7f81e9efa5fe 361: java.io.DataInputStream::skipBytes(int) -> int
fifo write: @1699477126190332426 0x7f81ea0d56cc 3: io.netty.handler.codec.CodecOutputList::insertSinceRecycled() -> boolean
fifo write: @1699477126190432337 0x7f81ea0d4dcc 2: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::lastBytesRead() -> int
fifo write: @1699477126192229310 0x7f81e288632b 4967: java.util.HashMap::removeNode(int, Object, Object, boolean, boolean) -> java.util.HashMap$Node
fifo write: @1699477126195442351 0x7f81ea0d1a17 3844: bjg::em() -> void
fifo write: @1699477126201216555 0x7f81ea0d15cc 6: rz::b() -> rs
fifo write: @1699477126214900792 0x7f81ea0d11d3 116: eam::b() -> boolean
fifo write: @1699477126215668692 0x7f81e2c6ac57 8172: eak::b(cpv, gw, dfj) -> java.util.Map
fifo write: @1699477126217129431 0x7f81e2afec14 480: io.netty.handler.codec.CodecOutputList$CodecOutputLists::recycle(io.netty.handler.codec.CodecOutputList) -> void
fifo write: @1699477126217186341 0x7f81e2885834 885: io.netty.handler.codec.CodecOutputList::recycle() -> void
fifo write: @1699477126217273872 0x7f81ea0d0bd0 43: javax.crypto.Cipher::chooseFirstProvider() -> void
fifo write: @1699477126217469475 0x7f81e2b0e057 1275: io.netty.handler.codec.CodecOutputList$CodecOutputLists::getOrCreate() -> io.netty.handler.codec.CodecOutputList
fifo write: @1699477126228823711 0x7f81ea0d08cc 6: ebb::l() -> gw
fifo write: @1699477126229669192 0x7f81e2b0d734 579: java.util.function.Predicate::lambda$and$0(java.util.function.Predicate, Object) -> boolean
fifo write: @1699477126229743013 0x7f81e2adbab4 929: java.util.function.Predicate$$Lambda$1500.0x00007f81601e3ca8::test(Object) -> boolean
fifo write: @1699477126234514194 0x7f81ea0cf616 1637: djg::a(java.util.function.Consumer) -> void
fifo write: @1699477126236195736 0x7f81ea0ce253 1296: bjg::eX() -> boolean
fifo write: @1699477126238412105 0x7f81ea0b7fae 47474: ebg::a(cpb, int, int, int, java.util.EnumSet, eax, gw) -> eax
fifo write: @1699477126252636918 0x7f81e2adad7e 1681: rx::a(rs) -> rn$a
fifo write: @1699477126265098708 0x7f81ea117521 38404: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477126267245796 0x7f81e2b0a219 597: eam::b(cpv, gw, asc) -> void
fifo write: @1699477126269270521 0x7f81ea10e289 12515: ebg::b(cpb, gw) -> eax
fifo write: @1699477126269553435 0x7f81e25475f7 17509: eap::b(cpv, gw, eam, asc) -> void
fifo write: @1699477126269844439 0x7f81ea0b6744 1285: eas$a::d(eam) -> int
fifo write: @1699477126271124205 0x7f81ea0b63cc 6: rz::a() -> java.util.List
fifo write: @1699477126272518743 0x7f81e2ada794 253: it.unimi.dsi.fastutil.shorts.ShortArrayList$1::<init>(it.unimi.dsi.fastutil.shorts.ShortArrayList, int) -> void
fifo write: @1699477126272987759 0x7f81ea0b5970 654: dij$$Lambda$5464.0x00007f8160a7d2b0::run() -> void
fifo write: @1699477126274665271 0x7f81ea0b5651 38: java.util.zip.InflaterInputStream::ensureOpen() -> void
fifo write: @1699477126275851186 0x7f81ea0b3799 2449: eiy::a(String, gw, int, ejd) -> qw
fifo write: @1699477126277915033 0x7f81ea0b33cc 6: rz::c() -> String
fifo write: @1699477126280555757 0x7f81ea0b2d50 63: bpn::a() -> boolean
fifo write: @1699477126280779470 0x7f81e2b09d94 185: btz$$Lambda$7359.0x00007f8160bd8cd8::<init>(bjp) -> void
fifo write: @1699477126280942832 0x7f81e2b09614 873: btz$$Lambda$7357.0x00007f8160bd8680::applyAsDouble(Object) -> double
fifo write: @1699477126281197415 0x7f81ea0b2964 63: cpx::d(int) -> boolean
fifo write: @1699477126282015566 0x7f81e27d435f 8774: btz::a(bjp, gw) -> gw
fifo write: @1699477126282052527 0x7f81ea0b2450 135: cqi::I_() -> int
fifo write: @1699477126282189898 0x7f81ea0b0d25 1889: dig::a(it.unimi.dsi.fastutil.shorts.ShortList[]) -> rc
fifo write: @1699477126282237779 0x7f81ea0b0557 316: cqi::d(gw) -> dhf
fifo write: @1699477126283913131 0x7f81ea0fb957 29779: akp::a() -> void
fifo write: @1699477126283973351 0x7f81e2b08d57 708: io.netty.channel.DefaultSelectStrategy::calculateStrategy(io.netty.util.IntSupplier, boolean) -> int
fifo write: @1699477126284046412 0x7f81ea0af2b3 1120: cbu::c(biv) -> cjf
fifo write: @1699477126284097023 0x7f81ea0faaf0 395: cpx::r(gw) -> boolean
fifo write: @1699477126287676929 0x7f81ea0f949e 1833: ebg::a(int, int, int, eax, float) -> eaz
fifo write: @1699477126296780256 0x7f81ea0f5537 4704: bji::fg() -> void
fifo write: @1699477126314184620 0x7f81e27ea394 370: eap::b(cpy) -> int
fifo write: @1699477126316777213 0x7f81e2357274 90: io.netty.util.concurrent.SingleThreadEventExecutor::isShuttingDown() -> boolean
fifo write: @1699477126316946455 0x7f81e27e9594 1901: io.netty.channel.SingleThreadEventLoop::afterRunningAllTasks() -> void
fifo write: @1699477126317001286 0x7f81e2b9283c 2372: io.netty.util.concurrent.SingleThreadEventExecutor::fetchFromScheduledTaskQueue() -> boolean
fifo write: @1699477126317058297 0x7f81e2acc999 1796: io.netty.util.concurrent.SingleThreadEventExecutor::runAllTasksFrom(java.util.Queue) -> boolean
fifo write: @1699477126317525243 0x7f81e2b05121 8043: io.netty.util.concurrent.SingleThreadEventExecutor::runAllTasks(long) -> boolean
fifo write: @1699477126318703798 0x7f81e27e8cb4 543: dhy$$Lambda$7048.0x00007f8160b83218::apply(Object) -> Object
fifo write: @1699477126319960644 0x7f81ea0f4489 382: dhy$$Lambda$7318.0x00007f8160bce3d8::<init>(dhy, dho) -> void
fifo write: @1699477126320428540 0x7f81e18377af 10379: dhy::a(hj, dhy$d) -> dhz$a
fifo write: @1699477126320477681 0x7f81ea0f3d4f 446: aqv::iterator() -> java.util.Iterator
fifo write: @1699477126322461277 0x7f81ea0f3850 167: eab::d() -> int
fifo write: @1699477126326015352 0x7f81ea0f34d0 75: dks::a() -> long[]
fifo write: @1699477126327152097 0x7f81ea0f2bcf 705: java.util.stream.StreamSupport::longStream(java.util.Spliterator$OfLong, boolean) -> java.util.stream.LongStream
fifo write: @1699477126328151910 0x7f81ea0f0cd7 2395: dig$$Lambda$7325.0x00007f8160bd4af0::apply(Object) -> Object
fifo write: @1699477126331308341 0x7f81e2b92294 335: bvq::h(ehn) -> void
fifo write: @1699477126331376972 0x7f81e2acbf54 973: bvt::aq() -> void
fifo write: @1699477126331417222 0x7f81ea0f092c 33: bvq::a(bvq) -> boolean
fifo write: @1699477126332203132 0x7f81e28d3d3c 6380: bvt::b(int) -> void
fifo write: @1699477126332512236 0x7f81e231999f 9238: bvq::b_() -> void
fifo write: @1699477126340006712 0x7f81ea0edb4d 4134: dho::d() -> java.util.List
fifo write: @1699477126344577981 0x7f81e2b91bb7 605: java.util.HashMap::remove(Object, Object) -> boolean
fifo write: @1699477126344735113 0x7f81e2bfdb03 2909: rx::a(rs, String) -> rn$a
fifo write: @1699477126362820026 0x7f81ea2195c9 25998: eak::a(cpv, gw, eam) -> void
fifo write: @1699477126365025184 0x7f81e2acb794 424: rd$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126367709029 0x7f81e2bfd010 1236: cpy::a(dks$a, gw) -> gw
fifo write: @1699477126368156135 0x7f81e24898ee 2773: aka::a(cpc, boolean) -> java.util.List
fifo write: @1699477126368289047 0x7f81e2841614 31: io.netty.channel.epoll.EpollEventArray::fd(int) -> int
fifo write: @1699477126368552900 0x7f81e2bfc2d9 1407: sm::t() -> void
fifo write: @1699477126368638231 0x7f81e28d32b4 796: io.netty.util.concurrent.AbstractScheduledEventExecutor::nextScheduledTaskDeadlineNanos() -> long
fifo write: @1699477126369195748 0x7f81e2bfbb74 215: io.netty.util.concurrent.AbstractScheduledEventExecutor::deadlineToDelayNanos(long) -> long
fifo write: @1699477126369279539 0x7f81e24892f4 337: io.netty.util.concurrent.ScheduledFutureTask::deadlineToDelayNanos(long, long) -> long
fifo write: @1699477126369354570 0x7f81e2866854 101: io.netty.channel.epoll.Native::epollTimerWasUsed(long) -> boolean
fifo write: @1699477126369464212 0x7f81e24888ba 983: io.netty.channel.epoll.Native::epollWait(io.netty.channel.unix.FileDescriptor, io.netty.channel.epoll.EpollEventArray, io.netty.channel.unix.FileDescriptor, int, int, long) -> long
fifo write: @1699477126369519382 0x7f81e2487dd7 1015: io.netty.channel.epoll.EpollEventLoop::epollWait(long) -> long
fifo write: @1699477126369679175 0x7f81e2b96be8 5482: io.netty.channel.epoll.EpollEventLoop::processReady(io.netty.channel.epoll.EpollEventArray, int) -> boolean
fifo write: @1699477126372723214 0x7f81ea218b50 139: java.util.EnumMap$EntryIterator$Entry::getKey() -> Enum
fifo write: @1699477126375867624 0x7f81ea217b15 991: qw$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126375921265 0x7f81ea217450 415: asz::a(int[]) -> void
fifo write: @1699477126376452392 0x7f81e8bf7b40 27: vtable stub
fifo write: @1699477126382679722 0x7f81e27ac734 823: cpb$$Lambda$7387.0x00007f8160be2f78::apply(Object, Object) -> Object
fifo write: @1699477126382743513 0x7f81e27a9e14 240: cpe$a::get(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477126382795914 0x7f81e2998516 107: cpe::a(dfj, cpb, gw) -> eig
fifo write: @1699477126382837374 0x7f81e2487694 243: cpe$b::a(eam) -> boolean
fifo write: @1699477126382908215 0x7f81e25db597 229: cpe$a$$Lambda$7379.0x00007f8160be7528::get(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477126383083438 0x7f81e14dd994 774: cpe$b::c(eam) -> boolean
fifo write: @1699477126383145328 0x7f81e26e5f34 1123: cpe$b$$Lambda$7385.0x00007f8160be28e0::test(Object) -> boolean
fifo write: @1699477126383213499 0x7f81e2d32357 1239: cpe::a(eam, cpb, gw) -> eig
fifo write: @1699477126383342601 0x7f81e281eee9 2455: cpb::a(ehn, ehn, gw, eig, dfj) -> ehj
fifo write: @1699477126383401572 0x7f81e2cf3099 367: cpv$$Lambda$7351.0x00007f8160bd1d60::accept(Object) -> aqn$a
fifo write: @1699477126383494963 0x7f81e1b8c93f 3273: cpb::a(cpe, gw) -> ehj
fifo write: @1699477126383616274 0x7f81ea2167b7 796: biq::be() -> boolean
fifo write: @1699477126383710676 0x7f81e16dd5c7 2816: cpv::a(java.util.function.Predicate, java.util.List, int, djh, biq) -> aqn$a
fifo write: @1699477126387524024 0x7f81ea22b6df 46219: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477126407165058 0x7f81e9a4b3df 4535: java.util.concurrent.CompletableFuture::join() -> Object
fifo write: @1699477126414981568 0x7f81e2b86ca0 2162: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::rehash(int) -> void
fifo write: @1699477126415884809 0x7f81e248d157 13688: eak::a(cpv, gw, dfj) -> eam
fifo write: @1699477126416808541 0x7f81e248c894 316: io.netty.channel.DefaultChannelPromise::addListener(io.netty.util.concurrent.GenericFutureListener) -> io.netty.channel.ChannelFuture
fifo write: @1699477126420428708 0x7f81e2b23940 653: cpw::a(biq, djt, ehn) -> void
fifo write: @1699477126424188907 0x7f81e241a7b4 702: ry::a(rq) -> void
fifo write: @1699477126424287888 0x7f81e2642c34 619: java.util.ArrayDeque::getLast() -> Object
fifo write: @1699477126426703799 0x7f81e29992f4 1413: io.netty.channel.ChannelFutureListener$3::operationComplete(io.netty.util.concurrent.Future) -> void
fifo write: @1699477126428075947 0x7f81e9ab2189 3296: biq::p(double, double, double) -> void
fifo write: @1699477126428337680 0x7f81e9a49b34 1883: bqa::a() -> boolean
fifo write: @1699477126434934105 0x7f81e9ab16dd 542: ro::a(java.io.DataInput) -> void
fifo write: @1699477126439665526 0x7f81e9aae556 3933: bjg::fh() -> void
fifo write: @1699477126439711076 0x7f81e2cdc367 2715: sa::a(rz) -> void
fifo write: @1699477126444777552 0x7f81e287c214 369: rz::<init>(java.util.List, rs, String) -> void
fifo write: @1699477126446533574 0x7f81ea0ec9fd 542: ro$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126448054754 0x7f81ea215d4c 6: ry::d() -> rq
fifo write: @1699477126451112193 0x7f81e2ad23b4 571: rz::<init>(rs, String) -> void
fifo write: @1699477126467719057 0x7f81e2b86714 204: sm$$Lambda$7610.0x00007f8160c4e6d8::run() -> void
fifo write: @1699477126467786538 0x7f81e2541854 1283: vc$2::a(vd, java.util.function.Consumer) -> void
fifo write: @1699477126467974360 0x7f81e16dcf94 315: zh::<init>(biq, byte) -> void
fifo write: @1699477126468470887 0x7f81e283679f 3378: sq::a(io.netty.channel.ChannelHandlerContext, vd, java.util.List) -> void
fifo write: @1699477126469877495 0x7f81e2ac4997 11735: io.netty.handler.codec.MessageToMessageEncoder::write(io.netty.channel.ChannelHandlerContext, Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477126471480546 0x7f81e278019f 7877: bsp::c() -> void
fifo write: @1699477126473975088 0x7f81ea0e9f1c 3431: dzy::a(long, long, int, boolean) -> void
fifo write: @1699477126474396023 0x7f81ea0e7394 3443: akd::b(long, int, boolean) -> void
fifo write: @1699477126477050997 0x7f81e2836194 267: cbu::cx() -> String
fifo write: @1699477126477102938 0x7f81e2134634 631: io.netty.channel.AbstractChannelHandlerContext::invokeFlush() -> void
fifo write: @1699477126477139829 0x7f81e2a44674 90: io.netty.channel.ChannelOutboundBuffer::isEmpty() -> boolean
fifo write: @1699477126477529474 0x7f81ea0e6d50 243: bm$$Lambda$7797.0x00007f8160c7da08::test(Object) -> boolean
fifo write: @1699477126482482867 0x7f81ea244118 20611: bjg::aq() -> void
fifo write: @1699477126491962299 0x7f81ea2553ca 18919: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477126496031692 0x7f81ea2635d6 28968: akp::a() -> void
fifo write: @1699477126508978448 0x7f81ea275b31 8430: biq::aq() -> void
fifo write: @1699477126514320477 0x7f81e24a2994 370: eap::a(cpy) -> int
fifo write: @1699477126514364528 0x7f81e297df14 370: eap::c(cpy) -> int
fifo write: @1699477126514409128 0x7f81ea0e6950 99: aka$$Lambda$7199.0x00007f8160ba3d70::get() -> Object
fifo write: @1699477126515054847 0x7f81e2b94a87 4808: cyl::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477126516525245 0x7f81ea27d496 14463: ajy::a(dhq) -> void
fifo write: @1699477126516662627 0x7f81e277f914 617: hw::d(short) -> int
fifo write: @1699477126516720308 0x7f81e2786e94 407: hw::d() -> int
fifo write: @1699477126516762419 0x7f81e2cdbd14 407: hw::e() -> int
fifo write: @1699477126516813069 0x7f81e24cf614 614: hw::e(short) -> int
fifo write: @1699477126516851310 0x7f81e2575a94 390: hw::f() -> int
fifo write: @1699477126516882820 0x7f81e2720114 617: hw::f(short) -> int
fifo write: @1699477126516946701 0x7f81ea0e5ef0 579: aka$$Lambda$7183.0x00007f8160ba1878::getAsInt() -> int
fifo write: @1699477126516999142 0x7f81e2b006d4 1147: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet$SetIterator::nextShort() -> short
fifo write: @1699477126517051742 0x7f81e2b22bb4 1139: ajy::a(java.util.List, cpv, gw, dfj) -> void
fifo write: @1699477126517523788 0x7f81ea0e5185 1015: akt::a(int, int, akt$a, Runnable) -> void
fifo write: @1699477126519899759 0x7f81e24766b7 731: cpm::a(bts, bjg, double, double, double) -> cbu
fifo write: @1699477126521616521 0x7f81e2786a14 175: biq::ay() -> void
fifo write: @1699477126522710365 0x7f81e2351694 856: biq::cV() -> biq
fifo write: @1699477126523096860 0x7f81e2ce5b59 1099: brf::a() -> boolean
fifo write: @1699477126523155651 0x7f81e2cdf234 845: bwq::gs() -> boolean
fifo write: @1699477126523239572 0x7f81ea0e4977 188: java.util.RegularEnumSet::add(Object) -> boolean
fifo write: @1699477126526810108 0x7f81ea0e35d3 1296: bjg::ev() -> boolean
fifo write: @1699477126530096130 0x7f81ea0e1298 3187: eag::a(long) -> int
fifo write: @1699477126546930997 0x7f81e27ae181 1426: java.util.zip.InflaterInputStream::skip(long) -> long
fifo write: @1699477126547432144 0x7f81ea2852d5 1947: rc$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126564057678 0x7f81e2291d37 799: akq::d(long) -> boolean
fifo write: @1699477126564566504 0x7f81e2b72e57 2909: ako::a(long) -> boolean
fifo write: @1699477126564897998 0x7f81ea0e0cb6 280: dij::a(java.util.function.Supplier, bfq) -> bft$b
fifo write: @1699477126565675988 0x7f81ea286a71 223: cqf$a$$Lambda$7863.0x00007f8160c92ad8::apply(Object, Object) -> Object
fifo write: @1699477126570083085 0x7f81ea287011 1291: cqf$a::a(bjj) -> void
fifo write: @1699477126570169966 0x7f81e291e05c 2717: bqh::a() -> boolean
fifo write: @1699477126570326048 0x7f81ea2883bf 2119: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::computeInt(Object, java.util.function.BiFunction) -> int
fifo write: @1699477126570340759 0x7f81e8bf7b70 27: vtable stub
fifo write: @1699477126570756804 0x7f81ea289bf1 418: bir::a(ehn) -> ehi
fifo write: @1699477126571843948 0x7f81ea28a270 251: bqw::a() -> boolean
fifo write: @1699477126571967130 0x7f81e2bc19f9 2430: io.netty.channel.AbstractChannel$AbstractUnsafe::flush0() -> void
fifo write: @1699477126572057471 0x7f81e249497c 3535: io.netty.channel.AbstractChannelHandlerContext::flush() -> io.netty.channel.ChannelHandlerContext
fifo write: @1699477126573373568 0x7f81ea28a874 2031: dzv::a(long) -> int
fifo write: @1699477126614354695 0x7f81e2291359 684: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapIterator::remove() -> void
fifo write: @1699477126614433866 0x7f81e2c2f2f9 1478: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapIterator::shiftKeys(int) -> void
fifo write: @1699477126614501407 0x7f81e2c2e33c 1848: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet::<init>(int, float) -> void
fifo write: @1699477126614854302 0x7f81e2ce37bc 3165: eak::a(cpw, gw, dfj, ha, eam) -> void
fifo write: @1699477126618108284 0x7f81ea28bfe6 468: com.google.common.collect.ImmutableMap::getOrDefault(Object, Object) -> Object
fifo write: @1699477126618201995 0x7f81ea28c832 361: io.netty.util.DefaultAttributeMap::searchAttributeByKey(io.netty.util.DefaultAttributeMap$DefaultAttribute[], io.netty.util.AttributeKey) -> int
fifo write: @1699477126618382737 0x7f81ea28cfd8 387: io.netty.util.DefaultAttributeMap::attr(io.netty.util.AttributeKey) -> io.netty.util.Attribute
fifo write: @1699477126625394708 0x7f81e2c2d854 953: bji::u(boolean) -> void
fifo write: @1699477126625681921 0x7f81e24cf1f4 71: ead$a::a(int, ha) -> long
fifo write: @1699477126626239808 0x7f81ea28d89c 2871: dju::a(djt, ehn, djt$a) -> void
fifo write: @1699477126626844686 0x7f81ea28f681 528: bqb::<init>() -> void
fifo write: @1699477126644225290 0x7f81ea28ff04 5595: cpy::z(gw) -> int
fifo write: @1699477126650656803 0x7f81ea293b10 9539: bjg::b_() -> void
fifo write: @1699477126653145834 0x7f81e2ce2bc7 1252: java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite::compareAndSet(java.lang.invoke.VarHandle, Object, long, long) -> boolean
fifo write: @1699477126666637699 0x7f81e2ced6be 2115: yo$b::a(so) -> void
fifo write: @1699477126668734266 0x7f81ea29b654 256: biq::e(double, double, double) -> void
fifo write: @1699477126668843787 0x7f81ea29baf3 480: biq::ao() -> ehi
fifo write: @1699477126670906464 0x7f81e2b226f4 152: ehn::f(ehn) -> double
fifo write: @1699477126690545726 0x7f81ea29c5e2 72: rs$b::a(java.io.DataInput, int, rf) -> void
fifo write: @1699477126717944369 0x7f81e2ce20d4 1382: bjg::c(bjg) -> boolean
fifo write: @1699477126718024090 0x7f81e2cec197 2833: cbu::en() -> boolean
fifo write: @1699477126720189288 0x7f81e27b3bf4 1542: ebg::a(cpb, int, int, int, java.util.EnumSet, eax, gw) -> eax
fifo write: @1699477126720526913 0x7f81e2ceb41f 1619: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477126720929588 0x7f81ea29cc50 275: dfi::a(dfj, cpb, gw, ebc) -> boolean
fifo write: @1699477126721326553 0x7f81e2ce5594 492: cpm$$Lambda$7337.0x00007f8160bd7610::test(Object) -> boolean
fifo write: @1699477126721662317 0x7f81e27b2977 2786: biq::h(biq) -> boolean
fifo write: @1699477126721676988 0x7f81e8bf7ba0 27: vtable stub
fifo write: @1699477126723332209 0x7f81ea29d259 106: cpw::ai() -> bgv
fifo write: @1699477126724818688 0x7f81e27b14fa 2556: java.util.concurrent.ForkJoinPool::tryCompensate(long) -> int
fifo write: @1699477126738285621 0x7f81e294a6bc 1223: java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite::getAndAdd(java.lang.invoke.VarHandle, Object, long) -> long
fifo write: @1699477126739367215 0x7f81e2947803 7296: java.lang.invoke.VarHandleGuards::guard_LJ_J(java.lang.invoke.VarHandle, Object, long, java.lang.invoke.VarHandle$AccessDescriptor) -> long
fifo write: @1699477126740886095 0x7f81e27f5e9a 1581: java.util.concurrent.ForkJoinPool::getAndAddCtl(long) -> long
fifo write: @1699477126740947816 0x7f81e27f511a 1565: java.util.concurrent.ForkJoinPool::compareAndSetCtl(long, long) -> boolean
fifo write: @1699477126749054020 0x7f81e27f435a 1455: cpc$1::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477126749674128 0x7f81e271fa94 327: sa::<init>(int, java.util.Map, java.util.Map) -> void
fifo write: @1699477126749784299 0x7f81e27b095a 1214: sa::<init>(int) -> void
fifo write: @1699477126749982382 0x7f81e2698326 5970: qw$1::c(java.io.DataInput, rn, rf) -> rn$b
fifo write: @1699477126750202915 0x7f81e2a50dc4 104: sa::a() -> sa
fifo write: @1699477126750274346 0x7f81e2350e37 887: ry::<init>() -> void
fifo write: @1699477126750713511 0x7f81e26975b4 1484: java.util.concurrent.ForkJoinPool::helpAsyncBlocker(java.util.concurrent.Executor, java.util.concurrent.ForkJoinPool$ManagedBlocker) -> void
fifo write: @1699477126750821133 0x7f81e2b72694 361: dij$$Lambda$8031.0x00007f8160cb8228::accept(Object) -> void
fifo write: @1699477126750992465 0x7f81e2475f14 275: dij$$Lambda$8032.0x00007f8160cb87b0::<init>(dij, cpc, rn) -> void
fifo write: @1699477126751114336 0x7f81e2cdb894 109: dij$$Lambda$8032.0x00007f8160cb87b0::get() -> Object
fifo write: @1699477126751188097 0x7f81ea29d950 441: dij$$Lambda$5462.0x00007f8160a7ce30::apply(Object) -> Object
fifo write: @1699477126751412750 0x7f81e269615f 2890: dij::a(cpc, rn) -> java.util.concurrent.CompletableFuture
fifo write: @1699477126751537322 0x7f81e2b3c6a7 4441: java.util.concurrent.ForkJoinPool::compensatedBlock(java.util.concurrent.ForkJoinPool$ManagedBlocker) -> void
fifo write: @1699477126751937457 0x7f81ea29e080 439: rs$a::b(java.io.DataInput, rf) -> void
fifo write: @1699477126752108289 0x7f81e2494094 424: qt$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126752563075 0x7f81e29d0d07 7807: rx::<init>(rz[]) -> void
fifo write: @1699477126752700816 0x7f81e29cfd99 1416: dim::a(cpc, rn) -> void
fifo write: @1699477126752802708 0x7f81ea29e91a 835: dij::a(java.util.function.Supplier) -> java.util.concurrent.CompletableFuture
fifo write: @1699477126752903259 0x7f81e27f2edc 2527: dij::b(cpc, rn) -> com.mojang.datafixers.util.Either
fifo write: @1699477126753130052 0x7f81ea29f5b0 897: bfq::c(java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477126753273704 0x7f81e278dd67 7865: dij::a(java.util.BitSet, cpc) -> void
fifo write: @1699477126755633694 0x7f81ea2a02f4 8539: cmg::a() -> cjf[]
fifo write: @1699477126758009095 0x7f81ea2a5b28 12083: bjg::h(ehn) -> void
fifo write: @1699477126758216458 0x7f81e2c67a1f 7108: ry::c(rs) -> void
fifo write: @1699477126763610357 0x7f81ea2af150 95: java.util.ArrayDeque::element() -> Object
fifo write: @1699477126764582070 0x7f81e27f225d 1441: ry::a(int) -> rn$b
fifo write: @1699477126764701191 0x7f81e2575594 250: ry::b() -> rn$b
fifo write: @1699477126764976395 0x7f81ea2af590 1267: rb$1::d(java.io.DataInput, rf) -> int
fifo write: @1699477126766071919 0x7f81ea2b0653 498: com.google.common.collect.RegularImmutableSet::contains(Object) -> boolean
fifo write: @1699477126766546275 0x7f81e278cb17 2085: rb$1::a(java.io.DataInput, rn, rf) -> rn$b
fifo write: @1699477126766925740 0x7f81e278bff7 1021: qw$1::a(java.io.DataInput, rn, rf) -> rn$b
fifo write: @1699477126767397496 0x7f81e27adc14 230: ry$$Lambda$3706.0x00007f81607ab8c8::<init>(ry, qw) -> void
fifo write: @1699477126767647959 0x7f81e291d5b4 1035: ry$$Lambda$3706.0x00007f81607ab8c8::accept(Object) -> void
fifo write: @1699477126767773591 0x7f81e2946db4 644: ry::a(qw, rq) -> void
fifo write: @1699477126767897803 0x7f81e2bc1494 127: rx::b(rs) -> rn$b
fifo write: @1699477126768046595 0x7f81e2b3b8f9 1500: rx::b() -> rn$b
fifo write: @1699477126768184826 0x7f81e2cde9f4 660: bty::a(bjp, gw) -> boolean
fifo write: @1699477126768243777 0x7f81e29cf334 1009: bty$$Lambda$7372.0x00007f8160be4000::test(Object) -> boolean
fifo write: @1699477126768471190 0x7f81e2c65717 5187: ry::b(rs) -> rn$b
fifo write: @1699477126769021367 0x7f81e2b39e46 3936: rh::a(java.io.DataInput, rn, rf) -> void
fifo write: @1699477126769531994 0x7f81ea2b0dd6 497: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::moveIndexToFirst(int) -> void
fifo write: @1699477126770035410 0x7f81e2c64bb4 1066: biq::ck() -> boolean
fifo write: @1699477126770954552 0x7f81e2c64234 924: biq::aD() -> void
fifo write: @1699477126771836824 0x7f81ea2b1610 2183: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::getAndMoveToFirst(long) -> Object
fifo write: @1699477126772593103 0x7f81e8bf7bd0 27: vtable stub
fifo write: @1699477126777145401 0x7f81ea2b31db 392: java.util.ArrayDeque::addFirst(Object) -> void
fifo write: @1699477126781932383 0x7f81ea2b3de5 20384: biq::a(bjm, ehn) -> void
fifo write: @1699477126782004704 0x7f81ea2c2013 1026: rx::a(rs) -> rn$a
fifo write: @1699477126784995743 0x7f81ea2c2e5b 392: java.util.ArrayDeque::push(Object) -> void
fifo write: @1699477126787878720 0x7f81ea2c35fb 7501: dim::b(cpc) -> dil
fifo write: @1699477126787953351 0x7f81e2ba3e94 432: rs$a::a(java.io.DataInput, int, rf) -> void
fifo write: @1699477126804164439 0x7f81e2ba3923 419: java.util.Spliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477126807045116 0x7f81ea2c8477 5433: java.util.concurrent.CompletableFuture::waitingGet(boolean) -> Object
fifo write: @1699477126809627360 0x7f81e8bf1400 432: I2C/C2I adapters(0xa7ea)
fifo write: @1699477126809980354 0x7f81e2bed5be 37: dkf::b(int, int, int) -> double
fifo write: @1699477126810044875 0x7f81e2ba34e2 84: dkf::a(int, double, int) -> double
fifo write: @1699477126810563922 0x7f81ea2cbd8a 129: dkf::b(int, int, int) -> double
fifo write: @1699477126810712074 0x7f81ea2cc18a 113: dkf::a(int, double, int) -> double
fifo write: @1699477126811586985 0x7f81ea2cc6d9 15686: dil::a(cpc) -> java.io.DataInputStream
fifo write: @1699477126811758447 0x7f81e8bf4500 496: I2C/C2I adapters(0xbabbaaab)
fifo write: @1699477126815046780 0x7f81e2ba2977 1395: dkm$m::a(dkl$f) -> dkl
fifo write: @1699477126815701978 0x7f81e2ba1b7a 1886: dkm$j::a(dkl$f) -> dkl
fifo write: @1699477126815749429 0x7f81e2ba1694 185: dkw$$Lambda$8043.0x00007f8160cbe238::<init>(dkw) -> void
fifo write: @1699477126815994452 0x7f81e2ba0917 1795: dkw$$Lambda$8042.0x00007f8160cbe000::apply(dkl) -> dkl
fifo write: @1699477126816054983 0x7f81e2b9fc77 1589: dkw::a(dkl) -> dkl
fifo write: @1699477126816101713 0x7f81e2bffa94 47: java.util.AbstractList$RandomAccessSpliterator::estimateSize() -> long
fifo write: @1699477126816316426 0x7f81e2b9f0fe 1161: zz::a(so) -> void
fifo write: @1699477126816561649 0x7f81ea2d53d0 67: io.netty.channel.epoll.AbstractEpollStreamChannel::isOpen() -> boolean
fifo write: @1699477126816709561 0x7f81e2b9ea94 339: dkm$n::<init>(dkm$n$a, dkl, double, double, double) -> void
fifo write: @1699477126816931124 0x7f81e2b9e1b4 1070: java.util.AbstractList$RandomAccessSpliterator::<init>(java.util.List) -> void
fifo write: @1699477126817579872 0x7f81e28325d4 1167: dkw$g::a(dkl$b) -> double
fifo write: @1699477126817786095 0x7f81e2831d3a 856: dkm$s::a(dkl$f) -> dkl
fifo write: @1699477126817840506 0x7f81e2831201 1274: dkm$v::a(dkl$f) -> dkl
fifo write: @1699477126817887456 0x7f81ea2d57d0 231: dkm$w$a::a(dkm$w$b) -> float
fifo write: @1699477126817926747 0x7f81ea2d5ccc 6: dkw$g::k() -> dkl
fifo write: @1699477126817976528 0x7f81ea2d5fdd 254: dkm$w$a::a(Object) -> float
fifo write: @1699477126818233701 0x7f81e282e867 6124: dkm$n::equals(Object) -> boolean
fifo write: @1699477126818304792 0x7f81e27df6c7 5196: ara$e::a(Object) -> float
fifo write: @1699477126818509884 0x7f81ea2d6539 98: java.lang.invoke.LambdaForm$DMH.0x00007f816024fc00::invokeStatic(Object, double, double) -> int
fifo write: @1699477126818832599 0x7f81e282d621 1781: java.util.AbstractList$RandomAccessSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477126819608699 0x7f81ea2d6950 75: java.util.PriorityQueue$Itr::hasNext() -> boolean
fifo write: @1699477126819833322 0x7f81ea2d6cd8 447: dkm$s::equals(Object) -> boolean
fifo write: @1699477126820293027 0x7f81e2b9db14 400: dkw$h::a() -> double
fifo write: @1699477126820330468 0x7f81e282d014 400: dkw$h::b() -> double
fifo write: @1699477126820596961 0x7f81ea2d7a54 467: dkm$n::hashCode() -> int
fifo write: @1699477126820712033 0x7f81ea2d8540 702: dkm$a::a(dkl$b) -> double
fifo write: @1699477126820887405 0x7f81ea2d9074 323: dkw$$Lambda$8042.0x00007f8160cbe000::apply(dkl) -> dkl
fifo write: @1699477126820940186 0x7f81ea2d96dd 362: java.util.stream.Nodes$ArrayNode::<init>(long, java.util.function.IntFunction) -> void
fifo write: @1699477126821360481 0x7f81ea2d9c5e 249: java.lang.invoke.LambdaForm$MH.0x00007f8160a3dc00::invoke(Object, Object, Object) -> int
fifo write: @1699477126821848237 0x7f81ea2da5cc 6: dkm$j::j() -> he
fifo write: @1699477126823043122 0x7f81e282ca94 369: dkw$$Lambda$8043.0x00007f8160cbe238::apply(Object) -> Object
fifo write: @1699477126823478898 0x7f81e27dd85a 4408: dkw::b(dkl) -> dkl
fifo write: @1699477126823887413 0x7f81e27dc0bf 3157: dkm$g::hashCode() -> int
fifo write: @1699477126824340179 0x7f81e8bf4200 480: I2C/C2I adapters(0xbaaabaa)
fifo write: @1699477126824545692 0x7f81e2a5b27f 5696: dkm$z::hashCode() -> int
fifo write: @1699477126825261231 0x7f81e27db277 1691: dkw$$Lambda$8044.0x00007f8160cbf9c0::apply(dkl) -> dkl
fifo write: @1699477126825312921 0x7f81ea2dabcc 6: dkw$d::k() -> dkl
fifo write: @1699477126825518514 0x7f81ea2daf0e 925: dkm$j::a(dkl$f) -> dkl
fifo write: @1699477126825780157 0x7f81ea2db9f8 279: dkw::a(dkl) -> dkl
fifo write: @1699477126826170383 0x7f81e2a5a3d7 1410: dkm$n::a(dkl$f) -> dkl
fifo write: @1699477126827453899 0x7f81ea2dbfae 1762: dkm$m::a(dkl$f) -> dkl
fifo write: @1699477126827744113 0x7f81ea2dd111 1: java.lang.runtime.ObjectMethods::eq(Object, Object) -> boolean
fifo write: @1699477126827946005 0x7f81e27da91a 817: java.lang.invoke.MethodType::methodType(Class, Class, Class[]) -> java.lang.invoke.MethodType
fifo write: @1699477126828759526 0x7f81ea2dd489 382: dkm$l::<init>(dkm$l$a, dkl) -> void
fifo write: @1699477126829067690 0x7f81e2c2d414 79: io.netty.channel.AbstractChannelHandlerContext::fireChannelRead(Object) -> io.netty.channel.ChannelHandlerContext
fifo write: @1699477126829221892 0x7f81ea2dd9cf 216: java.util.concurrent.ConcurrentHashMap::isEmpty() -> boolean
fifo write: @1699477126829897991 0x7f81ea2ddedf 900: java.util.stream.Nodes::builder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477126830490078 0x7f81e2a59677 1691: dkw$$Lambda$8058.0x00007f8160cc1498::apply(dkl) -> dkl
fifo write: @1699477126831108196 0x7f81e2a589fc 1359: dkm$v::a(dkl$b) -> double
fifo write: @1699477126831245878 0x7f81e2a57937 2326: crg::getNoiseBiome(int, int, int, crc$f) -> he
fifo write: @1699477126831334729 0x7f81ea2de8f0 667: dkm$m::a(dkl$f) -> dkl
fifo write: @1699477126831384860 0x7f81e2a5663c 2063: crc$f::a(int, int, int) -> crc$h
fifo write: @1699477126833368655 0x7f81ea2df160 255: dkw$g::a(dkl$b) -> double
fifo write: @1699477126835057447 0x7f81e99c5b60 1363: dkm$a::a(dkl$b) -> double
fifo write: @1699477126835809757 0x7f81e9c4cc14 486: java.lang.invoke.LambdaForm$MH.0x00007f8160259000::reinvoke(Object, Object, Object) -> int
fifo write: @1699477126841130006 0x7f81e2d4257e 1681: rx::a(rs) -> rn$a
fifo write: @1699477126844592390 0x7f81e9bb0fd3 157: java.util.concurrent.CompletableFuture$Signaller::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477126845105977 0x7f81e22eacb4 1035: ry$$Lambda$3707.0x00007f81607ac148::accept(Object) -> void
fifo write: @1699477126845151687 0x7f81e24fadb4 644: ry::b(qw, rq) -> void
fifo write: @1699477126851116954 0x7f81e9a41fe0 1651: rd$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126853410133 0x7f81ea15744e 18989: dkm$w::a(dkl$b) -> double
fifo write: @1699477126853462894 0x7f81e2544f14 424: ra$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126856473443 0x7f81ea15463c 3353: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477126859295769 0x7f81ea14c2a0 10718: bjg::l() -> void
fifo write: @1699477126861385966 0x7f81ea2df873 10937: ara$e$$Lambda$5357.0x00007f8160a3ef28::apply(Object) -> Object
fifo write: @1699477126864033341 0x7f81e2d9ed57 896: akq$$Lambda$5347.0x00007f8160a2d000::test(long) -> boolean
fifo write: @1699477126866109947 0x7f81e282c414 532: csv::i(dfj) -> int
fifo write: @1699477126867683178 0x7f81e287ea97 4066: bsn::a() -> boolean
fifo write: @1699477126868578659 0x7f81e2721f34 235: apc::a(float) -> float
fifo write: @1699477126868666890 0x7f81e27218b4 358: aan::<init>(he, ape, double, double, double, float, float, long) -> void
fifo write: @1699477126868789452 0x7f81e2dac2d7 1090: hm::d(Object) -> he
fifo write: @1699477126868892833 0x7f81e28affd7 1555: cpv::a(cbu, double, double, double, apc, ape, float, float, long) -> void
fifo write: @1699477126869034805 0x7f81e287da3a 2046: akq::a(cbu, double, double, double, he, ape, float, float, long) -> void
fifo write: @1699477126869481111 0x7f81ea2e6033 2596: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477126870722186 0x7f81e287d317 560: cpv::a(cbu, double, double, double, apc, ape, float, float) -> void
fifo write: @1699477126871444366 0x7f81ea2e7b2a 3305: java.util.HashMap::removeNode(int, Object, Object, boolean, boolean) -> java.util.HashMap$Node
fifo write: @1699477126873420501 0x7f81e9cf1061 168: java.util.HashMap::remove(Object, Object) -> boolean
fifo write: @1699477126875647680 0x7f81ea2e9a12 2897: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477126889930934 0x7f81ea2ec120 7799: rx::a(rs, String) -> rn$a
fifo write: @1699477126893094885 0x7f81e9d6ff93 954: rx::a(rs) -> rn$a
fifo write: @1699477126899094612 0x7f81e996c458 307: java.util.zip.InflaterInputStream::skip(long) -> long
fifo write: @1699477126904588002 0x7f81e2d419da 1399: ry::a(double) -> rn$b
fifo write: @1699477126904647523 0x7f81e2d40a17 2048: qx$1::a(java.io.DataInput, rn, rf) -> rn$b
fifo write: @1699477126908717846 0x7f81e15b6514 31: ry::b(rs, int) -> rn$a
fifo write: @1699477126908771907 0x7f81e2d3ff54 1282: ry$$Lambda$3708.0x00007f81607ac780::accept(Object) -> void
fifo write: @1699477126914663383 0x7f81e287cab4 757: eas::a(eam, cpb, gw, eal, ha) -> boolean
fifo write: @1699477126914837425 0x7f81e2d3e727 2823: bsp::b(gw) -> boolean
fifo write: @1699477126915174879 0x7f81e996bf29 22: java.util.concurrent.ForkJoinTask$RunnableExecuteAction::<init>(Runnable) -> void
fifo write: @1699477126916928292 0x7f81e26d4c94 167: it.unimi.dsi.fastutil.shorts.ShortIterator::next() -> Object
fifo write: @1699477126917132354 0x7f81e2d3df19 629: ajy$$Lambda$7961.0x00007f8160ca2458::accept(Object, Object) -> void
fifo write: @1699477126917168985 0x7f81e2d3d999 275: java.util.BitSet::clear() -> void
fifo write: @1699477126917250146 0x7f81e2d3cfb7 1236: ajy::b(java.util.List, cpv, gw, dfj) -> void
fifo write: @1699477126917322017 0x7f81e193b194 39: so::a(long) -> so
fifo write: @1699477126917410998 0x7f81e2d3c89e 657: td::a(io.netty.buffer.ByteBuf, long) -> io.netty.buffer.ByteBuf
fifo write: @1699477126919956700 0x7f81e2d3c314 484: ehx$$Lambda$7343.0x00007f8160bd2d28::test(Object) -> boolean
fifo write: @1699477126920892762 0x7f81e2d3b491 1752: biq::a(apc, float, float) -> void
fifo write: @1699477126921702713 0x7f81e9a41bbb 96: ebg::a(eax) -> boolean
fifo write: @1699477126923767429 0x7f81e8bf7c00 27: vtable stub
fifo write: @1699477126924028523 0x7f81e27390ae 15528: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477126924193335 0x7f81e2d3a9d9 1080: bil::c_(int) -> void
fifo write: @1699477126936583095 0x7f81e9c2e673 798: sa::a(rz) -> void
fifo write: @1699477126941326606 0x7f81ea2f1160 1651: qt$1::b(java.io.DataInput, rf) -> void
fifo write: @1699477126942346719 0x7f81ea2f2819 4839: qw$1::c(java.io.DataInput, rn, rf) -> rn$b
fifo write: @1699477126965280154 0x7f81e9a41784 127: java.util.concurrent.ForkJoinPool::execute(Runnable) -> void
fifo write: @1699477126966454169 0x7f81e2d39b1e 1606: alm::a(vd, sv) -> void
fifo write: @1699477126971125619 0x7f81ea14b053 80: bil::m_() -> boolean
fifo write: @1699477126971626866 0x7f81e2d39514 366: ecq::c(eey) -> Object
fifo write: @1699477126971669006 0x7f81e2dab814 240: ecw::d(eey) -> Object
fifo write: @1699477126972455166 0x7f81e2d38fb4 324: dkm$o::b() -> double
fifo write: @1699477126972505517 0x7f81ea2f6a64 18: dkl$d::a(dkl$f) -> dkl
fifo write: @1699477126972752520 0x7f81ea2f6d4c 6: dkw$f::k() -> dkl
fifo write: @1699477126973259797 0x7f81e273715f 4027: dkm$q::hashCode() -> int
fifo write: @1699477126973392658 0x7f81ea2f7354 235: dkm$h::equals(Object) -> boolean
fifo write: @1699477126974425712 0x7f81ea2f7efd 2090: akx::a(int, int) -> dhf
fifo write: @1699477126974501153 0x7f81ea2f98d3 132: java.util.AbstractList$RandomAccessSpliterator::getFence() -> int
fifo write: @1699477126974552033 0x7f81e2736600 795: dzn::a(double, double, double, double, double) -> double
fifo write: @1699477126974614724 0x7f81ea2f9d74 323: dkw$$Lambda$8044.0x00007f8160cbf9c0::apply(dkl) -> dkl
fifo write: @1699477126974670755 0x7f81ea2fa3e4 75: dkm$p::a(dkl$b) -> double
fifo write: @1699477126974723716 0x7f81ea2fa7b3 252: ara$e::a(float[], java.util.List, float[]) -> void
fifo write: @1699477126974767086 0x7f81e2d38a74 101: dzq::a(int) -> dzn
fifo write: @1699477126974805477 0x7f81e273601c 274: arw::b(double, double, double) -> double
fifo write: @1699477126974833997 0x7f81e1b768f4 5: dkw::b() -> int
fifo write: @1699477126974864647 0x7f81e2735b74 79: arw::a(double, double, double, double, double) -> double
fifo write: @1699477126974891808 0x7f81e284cff4 5: dkw::a() -> int
fifo write: @1699477126974923438 0x7f81e2872af4 5: dkw::c() -> int
fifo write: @1699477126975227052 0x7f81e27353bc 728: dkm$o::a(dkl$b) -> double
fifo write: @1699477126975295513 0x7f81ea2fad7d 146: dkm$aa::a(dkl$b) -> double
fifo write: @1699477126975436795 0x7f81e27349d4 889: dkw$f::a(dkl$b) -> double
fifo write: @1699477126975482255 0x7f81e27344f4 105: dkw$1::a(int) -> dkl$b
fifo write: @1699477126975517176 0x7f81ea2fb250 87: dzq::a(int) -> dzn
fifo write: @1699477126975600927 0x7f81ea2fb5eb 304: dkw$g::a(dkl$b) -> double
fifo write: @1699477126975645387 0x7f81ea2fbc4c 6: dkm$g::aw_() -> dkl
fifo write: @1699477126975739189 0x7f81ea2fbf4c 6: dkm$z::j() -> dkl
fifo write: @1699477126976271386 0x7f81ea2fcb95 343: dzn::a(double, double, double, double, double) -> double
fifo write: @1699477126976548609 0x7f81e27323bf 3575: dzm::a(dkl$b) -> double
fifo write: @1699477126976682481 0x7f81e2731bb4 608: dkm$x::a(dkl$b) -> double
fifo write: @1699477126976727231 0x7f81ea2fd24c 9: dkw::d() -> dlu
fifo write: @1699477126976769902 0x7f81e27311dc 998: dkm$z::a(dkl$b, double) -> double
fifo write: @1699477126976832323 0x7f81ea2fd5e0 811: dkm$a::a(dkl$b) -> double
fifo write: @1699477126976917114 0x7f81e2730c14 279: dkm$g::a(double) -> double
fifo write: @1699477126976954964 0x7f81e294d014 23: dkm$z$a$$Lambda$3470.0x00007f81607620a0::get(double) -> double
fifo write: @1699477126976987555 0x7f81e27305d4 373: dkz$a::b(double) -> double
fifo write: @1699477126977321349 0x7f81ea2fe2d0 71: dkw$1::a(int) -> dkl$b
fifo write: @1699477126977475601 0x7f81e272fcb4 880: dkm$q::a(dkl$b) -> double
fifo write: @1699477126977814955 0x7f81e272f6b4 313: dkm$z::b() -> double
fifo write: @1699477126977850536 0x7f81e272f094 445: dkm$e::a(dkl$b, double) -> double
fifo write: @1699477126978122949 0x7f81ea2fe6a0 584: dkm$a::a(dkl$b) -> double
fifo write: @1699477126978815428 0x7f81ea2fefcc 9: dkw$i::k() -> dkl
fifo write: @1699477126979365565 0x7f81e272e657 895: dkw$i::a(dkl$b) -> double
fifo write: @1699477126979406296 0x7f81ea2ff5d3 196: dkm$o::a(dkl$b) -> double
fifo write: @1699477126979861862 0x7f81ea2ffbd4 2119: bur::b_() -> void
fifo write: @1699477126980055804 0x7f81e272ddd9 768: dkw$d::a(dkl$b) -> double
fifo write: @1699477126980143015 0x7f81e272d974 21: dke$c::a(int, int, int) -> int
fifo write: @1699477126980214236 0x7f81e272d574 101: dkw::a(double, dkw$i) -> void
fifo write: @1699477126980245237 0x7f81e272d194 52: dkw$i::c(double) -> void
fifo write: @1699477126980287807 0x7f81e272cb94 431: dkw$$Lambda$8067.0x00007f8160cc2880::accept(Object) -> void
fifo write: @1699477126980740283 0x7f81e272c594 450: dkw$$Lambda$8066.0x00007f8160cc2650::accept(Object) -> void
fifo write: @1699477126980780734 0x7f81e272c099 116: dkw$i::b(double) -> void
fifo write: @1699477126980819914 0x7f81e272bc74 101: dkw::b(double, dkw$i) -> void
fifo write: @1699477126980888305 0x7f81e272b894 47: dkw::a(int) -> dkl$b
fifo write: @1699477126981135518 0x7f81e272adb7 1091: dkw::c(int) -> dkw
fifo write: @1699477126981642935 0x7f81e272a2d4 1167: dkw$g::a(dkl$b) -> double
fifo write: @1699477126981687605 0x7f81e2729d94 217: dke$b::a(int) -> dfj
fifo write: @1699477126981745796 0x7f81e27297df 441: java.lang.invoke.Invokers$Holder::linkToTargetMethod(double, Object) -> Object
fifo write: @1699477126981832147 0x7f81e2726bbc 5836: dkf::a(dkl$b) -> double
fifo write: @1699477126982020930 0x7f81e2dd7c05 10061: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477126982063840 0x7f81e2726497 308: dke$c::a(int) -> int
fifo write: @1699477126982137981 0x7f81e272599f 1427: java.lang.invoke.LambdaForm$DMH.0x00007f8160770c00::newInvokeSpecial(Object, double) -> Object
fifo write: @1699477126982180032 0x7f81e2725417 313: dke$c::b(int) -> int
fifo write: @1699477126982222502 0x7f81e2724f14 253: dke$c::a(int, int) -> double
fifo write: @1699477126982265523 0x7f81e2724a17 308: dke$c::c(int) -> int
fifo write: @1699477126982319874 0x7f81e27244f4 296: dkv::a(dke$b, int, dke$b, dke$b, int, int, int) -> dke$b
fifo write: @1699477126982363254 0x7f81e2723f17 395: dkv$$Lambda$8041.0x00007f8160cbaaa0::computeFluid(int, int, int) -> dke$b
fifo write: @1699477126982397665 0x7f81e2723b14 142: dkw$$Lambda$8067.0x00007f8160cc2880::<init>(double) -> void
fifo write: @1699477126982430645 0x7f81e2ddc894 248: dkw::e() -> dfj
fifo write: @1699477126982477226 0x7f81e2ddcd34 504: dkw$$Lambda$8045.0x00007f8160cbd000::calculate(dkl$b) -> dfj
fifo write: @1699477126982517766 0x7f81e2ddd477 1267: dkw::c(int, double) -> void
fifo write: @1699477126982570807 0x7f81e2dde01c 2138: dke$c::a(long) -> dke$b
fifo write: @1699477126982614897 0x7f81e2ddf279 1322: dtw::calculate(dkl$b) -> dfj
fifo write: @1699477126982688558 0x7f81e2ddfd17 359: dkw::a(dkl, dkl$b) -> dfj
fifo write: @1699477126982851050 0x7f81e27236f4 101: dkw::c(double, dkw$i) -> void
fifo write: @1699477126982896611 0x7f81e2de0294 450: dkw$$Lambda$8065.0x00007f8160cc2420::accept(Object) -> void
fifo write: @1699477126982951002 0x7f81e2de08d4 1260: dkw$e::a(dkl$b) -> double
fifo write: @1699477126982985942 0x7f81e2de14b9 228: dkw$i::a(double) -> void
fifo write: @1699477126983298716 0x7f81e2de1b14 239: org.apache.commons.lang3.mutable.MutableDouble::<init>(double) -> void
fifo write: @1699477126983328317 0x7f81ea301fb1 24: dkw$i::c(double) -> void
fifo write: @1699477126983442348 0x7f81ea3022d1 98: dkw$$Lambda$8067.0x00007f8160cc2880::accept(Object) -> void
fifo write: @1699477126983673801 0x7f81e2de21bf 6487: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477126983709942 0x7f81e2de4e94 142: dkw$$Lambda$8066.0x00007f8160cc2650::<init>(double) -> void
fifo write: @1699477126983907264 0x7f81e2de52f7 1251: dkw::b(int, double) -> void
fifo write: @1699477126984090656 0x7f81ea3026d0 95: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::back(int) -> int
fifo write: @1699477126985609996 0x7f81ea302dd1 122: dkw$$Lambda$8066.0x00007f8160cc2650::accept(Object) -> void
fifo write: @1699477126986328965 0x7f81ea3031af 2: dkl$e::<init>(int, int, int) -> void
fifo write: @1699477126986768241 0x7f81e2de5dfa 111: dkw::a(int, int, dkw$i) -> void
fifo write: @1699477126986830932 0x7f81e2de6214 458: dkw$$Lambda$8064.0x00007f8160cc21f0::accept(Object) -> void
fifo write: @1699477126986936483 0x7f81e2de6834 577: dkw$i::b(int, int) -> void
fifo write: @1699477126987487990 0x7f81ea3037d3 308: dkw$i::a(dkl$b) -> double
fifo write: @1699477126987523891 0x7f81e2de7194 142: dkw$$Lambda$8065.0x00007f8160cc2420::<init>(double) -> void
fifo write: @1699477126987569371 0x7f81ea303dd6 613: dke$c::a(long) -> dke$b
fifo write: @1699477126987730353 0x7f81e2de75f7 1251: dkw::a(int, double) -> void
fifo write: @1699477126988014627 0x7f81ea30464c 6: dkx::g() -> dfj
fifo write: @1699477126988045878 0x7f81ea30494c 3: dke$c::a() -> boolean
fifo write: @1699477126988151399 0x7f81e2de8157 895: dkw$i::a(dkl$b) -> double
fifo write: @1699477126988363412 0x7f81e2de8b97 76: dlc$$Lambda$8046.0x00007f8160cbd430::calculate(dkl$b) -> dfj
fifo write: @1699477126988421962 0x7f81e2de9014 802: aa::a(cpc) -> boolean
fifo write: @1699477126988837858 0x7f81e2de9a21 3436: dlc::a(dkl, dfj, dlf, dkl, dkl, dkl$b) -> dfj
fifo write: @1699477126990829353 0x7f81ea305253 304: dkw$i::a(dkl$b) -> double
fifo write: @1699477126992001038 0x7f81ea305855 43: dke$b::a(int) -> dfj
fifo write: @1699477126992093049 0x7f81ea305b52 465: dkw$e::a(dkl$b) -> double
fifo write: @1699477126992150980 0x7f81ea3062e0 379: dkf::a(dkl$b) -> double
fifo write: @1699477126992192910 0x7f81e2deb4be 818: dkm$p::a(double[], dkl$a) -> void
fifo write: @1699477126992562185 0x7f81e2debe46 4006: dkm$a::a(double[], dkl$a) -> void
fifo write: @1699477126993273734 0x7f81e2dedd43 906: dkw::a(double[], dkl) -> void
fifo write: @1699477126993528587 0x7f81ea306b72 737: dkw::c(int, double) -> void
fifo write: @1699477126993779081 0x7f81ea307650 75: dkv$$Lambda$8041.0x00007f8160cbaaa0::computeFluid(int, int, int) -> dke$b
fifo write: @1699477126994466960 0x7f81ea3079f0 707: dkw$$Lambda$8045.0x00007f8160cbd000::calculate(dkl$b) -> dfj
fifo write: @1699477126995826927 0x7f81ea308451 174: dkw$$Lambda$8065.0x00007f8160cc2420::accept(Object) -> void
fifo write: @1699477126996318614 0x7f81ea3088d6 329: dkw::a(int) -> dkl$b
fifo write: @1699477126996775769 0x7f81ea308fd6 337: dkw::c(int) -> dkw
fifo write: @1699477126997883554 0x7f81ea309753 2510: dtw::calculate(dkl$b) -> dfj
fifo write: @1699477126998010375 0x7f81ea30b6e0 1550: dkm$q::a(dkl$b) -> double
fifo write: @1699477126998543602 0x7f81ea30cac4 3123: dks::a(int, int, int, dfj) -> boolean
fifo write: @1699477126999012728 0x7f81ea30f142 69: aa::a(cpc) -> boolean
fifo write: @1699477126999263672 0x7f81ea30f5d7 2294: dkw::e() -> dfj
fifo write: @1699477126999307752 0x7f81e2dee779 1322: dtw::calculate(dkl$b) -> dfj
fifo write: @1699477127000345865 0x7f81ea3113dc 123: dkw$d::a(dkl$b) -> double
fifo write: @1699477127000886752 0x7f81ea3118e5 802: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477127001044955 0x7f81e2def237 589: dkw$i::a(double[], dkl$a) -> void
fifo write: @1699477127001081155 0x7f81e2def917 237: dkl$d::a(double[], dkl$a) -> void
fifo write: @1699477127001898036 0x7f81ea3125f0 791: dkw$i::b(int, int) -> void
fifo write: @1699477127002282080 0x7f81ea3130a6 5804: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477127002824687 0x7f81e2defda3 532: dkw$1::a(double[], dkl) -> void
fifo write: @1699477127002858328 0x7f81e2df0534 485: dkm$q::b() -> double
fifo write: @1699477127003284623 0x7f81e2df0c03 1486: dkm$q::a(double[], dkl$a) -> void
fifo write: @1699477127003355274 0x7f81ea3173f2 845: dkw::b(int, double) -> void
fifo write: @1699477127003615598 0x7f81e2df1934 485: dkm$q::a() -> double
fifo write: @1699477127005612753 0x7f81e9901f4b 372: java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial(Object, int, int) -> Object
fifo write: @1699477127005986748 0x7f81e2df2288 10433: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477127006025189 0x7f81e9441f28 55: Math::floorDiv(int, int) -> int
fifo write: @1699477127007063992 0x7f81e2df731f 6454: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477127007113043 0x7f81e147b794 143: dkw$$Lambda$8064.0x00007f8160cc21f0::<init>(int, int) -> void
fifo write: @1699477127007334856 0x7f81e2dfa06d 2549: dkw::b(int, int) -> void
fifo write: @1699477127009239920 0x7f81e9a2c4f3 1732: dkw::a(double[], dkl) -> void
fifo write: @1699477127011078664 0x7f81e1a84f94 240: dlt$a::a(int, int, int) -> asc
fifo write: @1699477127011171745 0x7f81e14a97bd 835: dlt::<init>(long, long) -> void
fifo write: @1699477127011226936 0x7f81e15ddb94 185: dkw$$Lambda$8068.0x00007f8160cc2cb8::<init>(dkw) -> void
fifo write: @1699477127011313187 0x7f81ea056dcc 2: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::attemptedBytesRead() -> int
fifo write: @1699477127011637751 0x7f81ea1d9003 5152: dzm::a(dkl$b) -> double
fifo write: @1699477127011735063 0x7f81e16cbf06 1145: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::computeIfAbsent(long, it.unimi.dsi.fastutil.longs.Long2IntFunction) -> int
fifo write: @1699477127011904705 0x7f81e9c2ab74 2449: dkm$a::a(double[], dkl$a) -> void
fifo write: @1699477127011972176 0x7f81e16ea19f 1814: dkw::a(int, int) -> int
fifo write: @1699477127012274409 0x7f81ea1c348a 2971: dkw$g::a(dkl$b) -> double
fifo write: @1699477127012330800 0x7f81e9a496cc 3: io.netty.channel.epoll.EpollRecvByteAllocatorHandle::isReceivedRdHup() -> boolean
fifo write: @1699477127015058645 0x7f81e980b6be 2337: dkm$p::a(double[], dkl$a) -> void
fifo write: @1699477127015555551 0x7f81e2ae0614 23: dkm$z$a$$Lambda$3471.0x00007f81607625c8::get(double) -> double
fifo write: @1699477127015702773 0x7f81e215bd14 503: dkz$a::a(double) -> double
fifo write: @1699477127016297511 0x7f81e19b9dce 17279: dkv::a(dlu, cqn, dlg, dhf, int, int) -> dhf
fifo write: @1699477127016369852 0x7f81e9a1fef0 355: dkm$o::a(dkl$b) -> double
fifo write: @1699477127016469113 0x7f81e9a3a47a 1585: dkw::a(double[], dkl) -> void
fifo write: @1699477127018664031 0x7f81e9cf19a7 904: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477127018988065 0x7f81e2dfb92e 17499: dkv::a(dlu, cqn, dlg, dhf, int, int) -> dhf
fifo write: @1699477127019289939 0x7f81e9deddfd 12503: ara$e::a(asv, float[], java.util.List, float[]) -> ara$e
fifo write: @1699477127019335260 0x7f81e16cb27c 1271: dkw::a(long) -> int
fifo write: @1699477127020394424 0x7f81ea06a730 995: dkw::a(double[], dkl) -> void
fifo write: @1699477127021589799 0x7f81e9cf14d6 21: arw::b(double, double, double) -> double
fifo write: @1699477127022787754 0x7f81e9c9ef83 6627: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477127023441583 0x7f81ea1c2e58 31: arw::a(double, double, double, double, double) -> double
fifo write: @1699477127024731690 0x7f81e980a84f 764: dlc$$Lambda$8046.0x00007f8160cbd430::calculate(dkl$b) -> dfj
fifo write: @1699477127024857671 0x7f81e9d8253d 738: dlc::a(dkl, dfj, dlf, dkl, dkl, dkl$b) -> dfj
fifo write: @1699477127025240006 0x7f81ea1d8a35 37: dkm$g::a(double) -> double
fifo write: @1699477127026395311 0x7f81ea1d84f4 199: dkw$f::a(dkl$b) -> double
fifo write: @1699477127026632954 0x7f81e9c9be65 4375: dkm$a::a(double[], dkl$a) -> void
fifo write: @1699477127026855837 0x7f81e9debad3 2406: dtw::calculate(dkl$b) -> dfj
fifo write: @1699477127027051299 0x7f81e9afc3fa 1542: dkw::a(double[], dkl) -> void
fifo write: @1699477127027948171 0x7f81e226fc79 1322: dtw::calculate(dkl$b) -> dfj
fifo write: @1699477127028863273 0x7f81e2a5d99f 6454: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477127028988164 0x7f81e2b48208 10433: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477127029445930 0x7f81e9c9a60d 2106: dkm$p::a(double[], dkl$a) -> void
fifo write: @1699477127033217799 0x7f81e9c977fa 1497: dkw::a(double[], dkl) -> void
fifo write: @1699477127033528023 0x7f81e9c96cf0 895: dkw$$Lambda$8064.0x00007f8160cc21f0::accept(Object) -> void
fifo write: @1699477127035955744 0x7f81e9c95d27 952: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477127036327799 0x7f81e2718559 1263: dlv::a(akx, int, int) -> dlv
fifo write: @1699477127037889029 0x7f81e2903314 2477: sun.security.provider.MD5::clone() -> Object
fifo write: @1699477127039118785 0x7f81e23c0807 1696: com.google.common.hash.AbstractByteHasher::putBytes(byte[]) -> com.google.common.hash.Hasher
fifo write: @1699477127039219136 0x7f81e2853ad7 1119: com.google.common.hash.AbstractByteHasher::update(byte[]) -> void
fifo write: @1699477127039383168 0x7f81e22f80df 2667: com.google.common.hash.AbstractHasher::putString(CharSequence, java.nio.charset.Charset) -> com.google.common.hash.Hasher
fifo write: @1699477127039594741 0x7f81e255f7b7 4135: dlh::a(String) -> dlh$a
fifo write: @1699477127039791233 0x7f81e253b117 3123: com.google.common.hash.AbstractHashFunction::hashString(CharSequence, java.nio.charset.Charset) -> com.google.common.hash.HashCode
fifo write: @1699477127039870374 0x7f81e23229e5 829: sun.security.provider.MD5::implCompress(byte[], int) -> void
fifo write: @1699477127039941625 0x7f81e268d2b4 709: sun.security.provider.MD5::implCompressCheck(byte[], int) -> void
fifo write: @1699477127040007126 0x7f81e14ab9f4 366: dlh$a::a(long, long) -> dlh$a
fifo write: @1699477127040075767 0x7f81e1f43594 488: com.google.common.hash.HashCode$BytesHashCode::asBytes() -> byte[]
fifo write: @1699477127040145878 0x7f81e25f35b7 830: dlt::<init>(dlh$a) -> void
fifo write: @1699477127040247259 0x7f81e26bd9a7 1975: sun.security.provider.ByteArrayAccess::i2bLittle(int[], int, byte[], int, int) -> void
fifo write: @1699477127040421051 0x7f81e9c9440d 2254: dkm$p::a(double[], dkl$a) -> void
fifo write: @1699477127040834157 0x7f81e2842b50 4534: sun.security.provider.MD5::implDigest(byte[], int) -> void
fifo write: @1699477127041450335 0x7f81e248b374 67: dlj$k::c() -> long
fifo write: @1699477127041591956 0x7f81e292c234 571: dlj$w::tryApply(int, int, int) -> dfj
fifo write: @1699477127041742478 0x7f81e26f5c59 1164: dlj$i::b() -> boolean
fifo write: @1699477127041906570 0x7f81e1fc1c94 463: dlk$1::a(int) -> dfj
fifo write: @1699477127042131733 0x7f81e16db277 844: dlj$y$a::a() -> boolean
fifo write: @1699477127042265485 0x7f81e2977081 1330: dlj$p::tryApply(int, int, int) -> dfj
fifo write: @1699477127042470098 0x7f81e23112b4 1163: dlk::a(dfj) -> boolean
fifo write: @1699477127042587599 0x7f81e2883714 196: dlj$g$$Lambda$8073.0x00007f8160ccc228::<init>(dlj$g, int, int, int) -> void
fifo write: @1699477127042645970 0x7f81e1c4f114 190: dlj$g$a::b() -> boolean
fifo write: @1699477127042766312 0x7f81e2be58b4 747: dlj$c$a::a() -> boolean
fifo write: @1699477127042939244 0x7f81e1dd1b06 1284: dlj$g::a(int, int, int, int, int, int) -> void
fifo write: @1699477127043023375 0x7f81e28af7b7 709: he$c::a(java.util.function.Predicate) -> boolean
fifo write: @1699477127043076786 0x7f81e9c9a1d0 35: dlj$k::c() -> long
fifo write: @1699477127043177337 0x7f81e2b4681f 2185: dlj$g::b() -> int
fifo write: @1699477127043248138 0x7f81e1531c94 484: dlj$c$$Lambda$4044.0x00007f81608899c0::test(Object) -> boolean
fifo write: @1699477127043308859 0x7f81e25d7ef4 6: dlj$r::tryApply(int, int, int) -> dfj
fifo write: @1699477127043377349 0x7f81e1dadd59 638: dlj$t$a::a() -> boolean
fifo write: @1699477127043437170 0x7f81e1dd1414 613: dia::z() -> cpx
fifo write: @1699477127043759694 0x7f81e2a4e425 2234: dlk$1::a(int, dfj) -> void
fifo write: @1699477127044235791 0x7f81e9c90f56 4715: dtw::calculate(dkl$b) -> dfj
fifo write: @1699477127044842328 0x7f81e9c99de6 91: dlj$w::tryApply(int, int, int) -> dfj
fifo write: @1699477127045346405 0x7f81e2d2722f 11335: dia::a(gw, dfj, boolean) -> dfj
fifo write: @1699477127045546877 0x7f81e9c8f90d 1903: java.lang.invoke.VarHandleGuards::guard_LI_I(java.lang.invoke.VarHandle, Object, int, java.lang.invoke.VarHandle$AccessDescriptor) -> int
fifo write: @1699477127045675949 0x7f81e23e7914 109: dlj$g$$Lambda$8073.0x00007f8160ccc228::get() -> Object
fifo write: @1699477127045730430 0x7f81e2113914 339: dlj$z$a::a() -> boolean
fifo write: @1699477127045805011 0x7f81e2234514 361: dlk$$Lambda$8071.0x00007f8160cc6210::apply(Object) -> Object
fifo write: @1699477127045881202 0x7f81e1fb8557 1223: dlj$g::a(int, int, int) -> he
fifo write: @1699477127045991633 0x7f81e9c99a58 18: dhr::a(int, int, int, dfj) -> dfj
fifo write: @1699477127046469349 0x7f81e9c8f1d0 377: dlj$i::b() -> boolean
fifo write: @1699477127047325760 0x7f81e2e03e10 32331: sun.security.provider.MD5::implCompress0(byte[], int) -> void
fifo write: @1699477127047552463 0x7f81ea1b472c 456: com.google.common.base.Suppliers::memoize(com.google.common.base.Supplier) -> com.google.common.base.Supplier
fifo write: @1699477127047589214 0x7f81e2976b34 214: dlt::i() -> float
fifo write: @1699477127047811957 0x7f81ea1b278e 3302: java.security.Provider$ServiceKey::<init>(String, String, boolean) -> void
fifo write: @1699477127047864967 0x7f81e16c80f4 79: arw::b(double, double, double, double, double) -> double
fifo write: @1699477127048462565 0x7f81e2b01b37 616: he$c::a(aev) -> boolean
fifo write: @1699477127050239318 0x7f81ea1b1810 1450: dlj$y$a::a() -> boolean
fifo write: @1699477127050778775 0x7f81ea1b0490 1147: dlk$1::a(int) -> dfj
fifo write: @1699477127050848836 0x7f81e9c8e8d6 169: dlk::a(dfj) -> boolean
fifo write: @1699477127050965077 0x7f81ea1af67b 1009: dlj$p::tryApply(int, int, int) -> dfj
fifo write: @1699477127051654296 0x7f81ea1aee70 419: dlj$g$a::b() -> boolean
fifo write: @1699477127052334985 0x7f81ea1a9d03 7421: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477127052600348 0x7f81e9b5a370 359: dlj$g::b() -> int
fifo write: @1699477127052708740 0x7f81e9b59905 900: dlj$g::a(int, int, int, int, int, int) -> void
fifo write: @1699477127053492200 0x7f81e9b593d1 158: dlj$t$a::a() -> boolean
fifo write: @1699477127054495743 0x7f81e9b586f0 569: dlj$c$$Lambda$4044.0x00007f81608899c0::test(Object) -> boolean
fifo write: @1699477127054693436 0x7f81e9b58350 43: dia::z() -> cpx
fifo write: @1699477127055825710 0x7f81e97484f0 613: he$c::a(java.util.function.Predicate) -> boolean
fifo write: @1699477127057317709 0x7f81e977dd99 614: dlk$1::a(int, dfj) -> void
fifo write: @1699477127057758495 0x7f81e9ae4c94 2007: dlj$c$a::a() -> boolean
fifo write: @1699477127058594836 0x7f81e978dbd6 4389: dzn::<init>(asc) -> void
fifo write: @1699477127058817269 0x7f81ea1bea75 2902: dia::a(gw, dfj, boolean) -> dfj
fifo write: @1699477127064343929 0x7f81e21c0e79 2188: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477127066260814 0x7f81e97849b5 8048: cqv::a(gw) -> he
fifo write: @1699477127066894982 0x7f81e2873dce 6047: cqg::a(bka$c, cpy, gw, biu) -> boolean
fifo write: @1699477127067060104 0x7f81e977f12f 544: cpv::R() -> gw
fifo write: @1699477127067611561 0x7f81e17dcf9a 268: io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField::soProducerLimit(long) -> void
fifo write: @1699477127068026577 0x7f81e222f5f4 599: dlk::a(int, int) -> int
fifo write: @1699477127068866148 0x7f81e291369f 15205: dlk::a(dlg, cqv, hq, boolean, dlp, dhf, dkw, dlj$o) -> void
fifo write: @1699477127068917308 0x7f81e228c614 366: cgi::b() -> int
fifo write: @1699477127068977859 0x7f81e1b9ee54 1159: cgi::a(int) -> cjf
fifo write: @1699477127069245303 0x7f81ea1bd050 1967: dia::getNoiseBiome(int, int, int) -> he
fifo write: @1699477127069867131 0x7f81e8bf3f00 480: I2C/C2I adapters(0x7eb7e7e7eab)
fifo write: @1699477127070001732 0x7f81e8bf3c00 480: I2C/C2I adapters(0xb7eb7e7e7ea)
fifo write: @1699477127070549269 0x7f81e1ed9645 435: dlr::b(long) -> void
fifo write: @1699477127071904247 0x7f81e97ba81f 4346: cpy::getNoiseBiome(int, int, int) -> he
fifo write: @1699477127071941837 0x7f81e22c9414 348: cpc::c() -> int
fifo write: @1699477127071976078 0x7f81e236f594 348: cpc::b() -> int
fifo write: @1699477127072134150 0x7f81e2253917 248: dmv::a(asc) -> boolean
fifo write: @1699477127072275112 0x7f81e22ccf0a 1701: dlr::c(long, int, int) -> void
fifo write: @1699477127072728448 0x7f81e1ba4357 1056: dmx::a(cpc, double, double, int, int, float) -> boolean
fifo write: @1699477127073197114 0x7f81e236e994 428: it.unimi.dsi.fastutil.objects.Object2IntFunctions$SynchronizedFunction::put(Object, int) -> int
fifo write: @1699477127073825742 0x7f81e97481cc 2: dlp::b() -> int
fifo write: @1699477127074050425 0x7f81e8bf3900 488: I2C/C2I adapters(0xbbb7e7e7eab)
fifo write: @1699477127074372139 0x7f81e2c14d14 9223: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477127076602578 0x7f81e9783ca1 489: dkm$v::a(dkl$b) -> double
fifo write: @1699477127077272546 0x7f81e14dd134 857: dmu::a(dmq, asc) -> boolean
fifo write: @1699477127077313217 0x7f81e2406c94 380: dmu::a(dmt, asc) -> boolean
fifo write: @1699477127077444288 0x7f81e19c5374 262: arw::b(asc, float, float) -> float
fifo write: @1699477127077784823 0x7f81e25c6e14 367: bgi::a(asc) -> float
fifo write: @1699477127077864324 0x7f81ea2d8cb9 74: java.lang.invoke.Invokers$Holder::linkToTargetMethod(double, Object) -> Object
fifo write: @1699477127079210931 0x7f81e2a330f4 9089: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477127079455394 0x7f81e28645b4 1287: java.util.Objects::requireNonNullElseGet(Object, java.util.function.Supplier) -> Object
fifo write: @1699477127079995311 0x7f81e2764e94 275: dkv$$Lambda$8078.0x00007f8160cccd40::<init>(dkv, cpc, dlg) -> void
fifo write: @1699477127080029252 0x7f81e1b65c94 109: dkv$$Lambda$8078.0x00007f8160cccd40::get() -> Object
fifo write: @1699477127080078462 0x7f81e247bd14 608: dhf::a(java.util.function.Supplier) -> cqu
fifo write: @1699477127080165214 0x7f81e2a46914 380: dmp::a(dmo, asc) -> boolean
fifo write: @1699477127080248355 0x7f81e2569734 737: dmp::a(dmq, asc) -> boolean
fifo write: @1699477127080295715 0x7f81ea2dcb49 370: java.lang.invoke.LambdaForm$DMH.0x00007f8160770c00::newInvokeSpecial(Object, double) -> Object
fifo write: @1699477127080338426 0x7f81e1800bf9 1592: dkv::a(cpc, dlg) -> cqu
fifo write: @1699477127080436037 0x7f81e2adad74 1705: cqu::a(dko$a) -> Iterable
fifo write: @1699477127081515831 0x7f81e24b2eb4 484: it.unimi.dsi.fastutil.ints.IntArraySet::<init>() -> void
fifo write: @1699477127081606072 0x7f81e2431b94 185: dhy$$Lambda$8000.0x00007f8160cb0000::<init>(it.unimi.dsi.fastutil.ints.IntSet) -> void
fifo write: @1699477127081640053 0x7f81e243cc14 185: dhg$$Lambda$7999.0x00007f8160cafd50::<init>(java.util.Set) -> void
fifo write: @1699477127081698683 0x7f81e1cdf1de 1118: java.util.PrimitiveIterator$OfInt::forEachRemaining(java.util.function.IntConsumer) -> void
fifo write: @1699477127081739154 0x7f81e22e1014 230: dhy$$Lambda$8001.0x00007f8160cb0238::<init>(java.util.function.Consumer, dhw) -> void
fifo write: @1699477127081778014 0x7f81e2aff567 347: it.unimi.dsi.fastutil.ints.IntArraySet::iterator() -> it.unimi.dsi.fastutil.ints.IntIterator
fifo write: @1699477127081818935 0x7f81e26b9394 247: it.unimi.dsi.fastutil.ints.IntArraySet$1::<init>(it.unimi.dsi.fastutil.ints.IntArraySet) -> void
fifo write: @1699477127081890246 0x7f81e2742439 770: it.unimi.dsi.fastutil.ints.IntIterable::forEach(java.util.function.IntConsumer) -> void
fifo write: @1699477127082396892 0x7f81e2979802 5357: dhy::a(java.util.function.Consumer) -> void
fifo write: @1699477127082608985 0x7f81e8bf3600 464: I2C/C2I adapters(0xbbaa7e7e)
fifo write: @1699477127084088524 0x7f81ea2dc7cc 44: akx::a(java.util.function.Supplier) -> void
fifo write: @1699477127084138605 0x7f81e290f714 505: dhg$$Lambda$8002.0x00007f8160cb0848::apply(Object) -> Object
fifo write: @1699477127084180815 0x7f81e26efe94 167: it.unimi.dsi.fastutil.objects.Object2IntFunction::applyAsInt(Object) -> int
fifo write: @1699477127084250436 0x7f81e2bbd4f4 466: dhg::a(it.unimi.dsi.fastutil.ints.IntSet, crd$b, dum) -> void
fifo write: @1699477127084320217 0x7f81e2ae23b4 812: dhg$$Lambda$8003.0x00007f8160cb0a88::accept(Object) -> void
fifo write: @1699477127085077917 0x7f81ea1bc470 715: dks::a(int, int, int) -> void
fifo write: @1699477127085707985 0x7f81ea1bbd5d 182: dks$$Lambda$1674.0x00007f81605c0df8::test(Object) -> boolean
fifo write: @1699477127086312823 0x7f81e17ebe74 1345: dhy$c::a(dhw, aqp) -> void
fifo write: @1699477127087976514 0x7f81e9b4cf36 17154: ead::d() -> int
fifo write: @1699477127088022304 0x7f81e2a2a194 185: dut$$Lambda$8007.0x00007f8160cb1a00::<init>(gw) -> void
fifo write: @1699477127088060365 0x7f81e264d114 219: dhr::a() -> void
fifo write: @1699477127088102505 0x7f81e2904c14 219: dhr::b() -> void
fifo write: @1699477127088239537 0x7f81e22ca8bf 2167: dut::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477127088282968 0x7f81e2bfa994 240: duf::a(asc, gw) -> int
fifo write: @1699477127088385619 0x7f81e2c14494 289: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477127088440030 0x7f81e28ede97 106: dhd$$Lambda$8015.0x00007f8160cb3260::get(long) -> Object
fifo write: @1699477127088580241 0x7f81e22c8354 1234: dhd::a(gw, int, long) -> dhr
fifo write: @1699477127088635422 0x7f81ea2dbf4f 148: dum$$Lambda$8005.0x00007f8160cb0ee8::apply(Object) -> Object
fifo write: @1699477127088835075 0x7f81e2b14fe3 1221: dhy$c::a(dhw, aqp) -> void
fifo write: @1699477127088958126 0x7f81e2af145f 2091: dnw::a(java.util.function.Function, gw, java.util.function.Predicate) -> boolean
fifo write: @1699477127089159029 0x7f81e2acb114 240: dun::a(dks$a, int, int) -> int
fifo write: @1699477127089387652 0x7f81e9b4c896 51: gw::h(int) -> gw
fifo write: @1699477127089705966 0x7f81e22f4cd9 1343: akx::a(gw, java.util.function.Predicate) -> boolean
fifo write: @1699477127089769327 0x7f81e9a6f94c 3: java.util.OptionalInt::isPresent() -> boolean
fifo write: @1699477127089933939 0x7f81e23ea194 1175: dns::c(dfj) -> boolean
fifo write: @1699477127090111221 0x7f81e2453c14 334: java.util.OptionalInt::getAsInt() -> int
fifo write: @1699477127090168952 0x7f81e239d334 1519: dnr$$Lambda$8086.0x00007f8160cce528::test(Object) -> boolean
fifo write: @1699477127090209202 0x7f81e27a5b97 346: bgj::a(asc) -> int
fifo write: @1699477127090365674 0x7f81e271e294 733: cpy::x(gw) -> dhf
fifo write: @1699477127090433385 0x7f81e2b13016 181: cqd::a(gw, dfj, int) -> boolean
fifo write: @1699477127090592317 0x7f81e9a6eb26 893: dor::a(dfj, java.util.function.Function, asc, dqi, dqi$a, gw$a) -> boolean
fifo write: @1699477127090639228 0x7f81e18db894 139: dfi$d$$Lambda$500.0x00007f81602f7b40::test(dfj, cpb, gw) -> boolean
fifo write: @1699477127090687459 0x7f81e1fb7f9a 366: dfi$a::q(cpb, gw) -> boolean
fifo write: @1699477127090860191 0x7f81e97b8638 3155: asj::a(java.util.function.IntConsumer) -> void
fifo write: @1699477127091164985 0x7f81e182d212 1853: dki::a(cqb, int, java.util.function.Predicate, java.util.function.Predicate, gw$a, int, ha) -> java.util.OptionalInt
fifo write: @1699477127091280916 0x7f81e22fdfb4 2191: dns::b(dfj) -> boolean
fifo write: @1699477127091490669 0x7f81e2883c54 1762: dns::c(cpw, gw) -> boolean
fifo write: @1699477127091542240 0x7f81e2b140b4 1519: dnr$$Lambda$8087.0x00007f8160cce778::test(Object) -> boolean
fifo write: @1699477127091671891 0x7f81e2763514 428: dki$b::c() -> java.util.OptionalInt
fifo write: @1699477127091735132 0x7f81e2a3b894 1175: dns::d(dfj) -> boolean
fifo write: @1699477127091942105 0x7f81e23a97ef 13252: akx::a(gw, dfj, int, int) -> boolean
fifo write: @1699477127092018406 0x7f81e1e56be5 5312: dns::a(ha, int, boolean, java.util.function.Consumer) -> void
fifo write: @1699477127092066396 0x7f81e297d614 275: dns$$Lambda$8022.0x00007f8160cb7478::<init>(cpw, gw$a, ha) -> void
fifo write: @1699477127092603503 0x7f81e22b3db7 4766: dns::a(cpw, gw, ha, int, boolean) -> void
fifo write: @1699477127092781896 0x7f81e2a9a3b4 691: hi$b::a(int) -> he
fifo write: @1699477127092975088 0x7f81e271c457 2858: dpe::a(dny) -> boolean
fifo write: @1699477127093268152 0x7f81e28fb9ff 5394: dug::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477127093304382 0x7f81e9a6e7d7 43: java.util.stream.ReferencePipeline$7$1::begin(long) -> void
fifo write: @1699477127093340673 0x7f81e9a6e2cc 6: cqu::b() -> java.util.List
fifo write: @1699477127093571466 0x7f81e28fb194 328: it.unimi.dsi.fastutil.objects.AbstractObjectList::<init>() -> void
fifo write: @1699477127093775888 0x7f81e2c11d34 1211: duu::a(dun, asc, gw) -> boolean
fifo write: @1699477127094605559 0x7f81e2c11537 726: dte::a(cqb, gw) -> boolean
fifo write: @1699477127094644270 0x7f81e2b9d214 621: dpi::c(cqb, gw) -> boolean
fifo write: @1699477127094777671 0x7f81e2acfcd4 1889: dpi$$Lambda$8093.0x00007f8160ccf750::test(Object) -> boolean
fifo write: @1699477127094900123 0x7f81e214df94 1548: dpi::c(dfj) -> boolean
fifo write: @1699477127095453440 0x7f81e1e566f4 6: dsk::a(asc, gw) -> dfj
fifo write: @1699477127096239930 0x7f81e228d174 91: java.util.OptionalInt::isEmpty() -> boolean
fifo write: @1699477127096319711 0x7f81e97b76cc 2: dva::h() -> int
fifo write: @1699477127096389042 0x7f81e97b73cc 2: dva::i() -> int
fifo write: @1699477127096417103 0x7f81e97b70cc 2: dva::g() -> int
fifo write: @1699477127096594085 0x7f81e2d5168f 11127: dia::a(gw, dfj, boolean) -> dfj
fifo write: @1699477127096626455 0x7f81e97b6db0 25: hy::hashCode() -> int
fifo write: @1699477127096663566 0x7f81e214d699 574: dva::b(hy) -> boolean
fifo write: @1699477127096702416 0x7f81e22b3694 386: dva::c(int, int, int) -> boolean
fifo write: @1699477127096876768 0x7f81e8bf3300 536: I2C/C2I adapters(0xaaababaaab)
fifo write: @1699477127096976060 0x7f81e8bf2d80 536: I2C/C2I adapters(0xbaaababaaa)
fifo write: @1699477127097018460 0x7f81e8bf0e00 480: I2C/C2I adapters(0xbaaabab)
fifo write: @1699477127097270144 0x7f81e8bf0b00 456: I2C/C2I adapters(0xaaabab)
fifo write: @1699477127097359595 0x7f81e8bf7c30 168: itable stub
fifo write: @1699477127097686679 0x7f81e2ba4457 891: ehw::b(gu, int, int, int) -> boolean
fifo write: @1699477127097874451 0x7f81e1e3ef94 576: eiy$1::equals(Object, Object) -> boolean
fifo write: @1699477127097966113 0x7f81e2a3185e 2666: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::add(Object) -> boolean
fifo write: @1699477127098064424 0x7f81e220f634 717: eiy$1::a(eiy, eiy) -> boolean
fifo write: @1699477127098103154 0x7f81e27b9d14 509: eix::a(eiy) -> void
fifo write: @1699477127098136055 0x7f81e97b5ecc 6: akx::L() -> eiv
fifo write: @1699477127098168745 0x7f81e97b5bcc 6: akx::z_() -> ecd
fifo write: @1699477127098201086 0x7f81e97b58cc 6: dia::o() -> ejc
fifo write: @1699477127098728972 0x7f81e9802ade 3261: akx::a_(gw) -> dfj
fifo write: @1699477127098787033 0x7f81e22be9d7 3593: dpd::a(dny) -> boolean
fifo write: @1699477127099184838 0x7f81e97b554c 6: bfk$b::a() -> bfj
fifo write: @1699477127101468428 0x7f81e97fd031 8071: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477127101556799 0x7f81e982a7b2 1332: cpw::a(gw, csv, int) -> void
fifo write: @1699477127102187697 0x7f81e97fc098 1097: cpw::a(gw, Object, int) -> eiz
fifo write: @1699477127102806315 0x7f81e9828e4c 2700: java.lang.invoke.DirectMethodHandle$Constructor::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm, java.lang.invoke.MemberName, boolean, java.lang.invoke.MemberName, Class) -> void
fifo write: @1699477127102837675 0x7f81e9828a95 1: ead$a::c(long) -> boolean
fifo write: @1699477127103284721 0x7f81e9828759 66: it.unimi.dsi.fastutil.PriorityQueue::isEmpty() -> boolean
fifo write: @1699477127103614835 0x7f81e2acf714 330: dhq::E() -> void
fifo write: @1699477127104402466 0x7f81e2c30ca7 7272: aka::a(ajy, dhf) -> dhf
fifo write: @1699477127104598948 0x7f81e225b6d7 4090: cvp::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477127105065404 0x7f81e9826570 2606: cxc::n(dfj) -> java.util.OptionalInt
fifo write: @1699477127105472999 0x7f81e2cb7e87 20991: eaf::b(cpc) -> void
fifo write: @1699477127105622331 0x7f81e9825524 889: ead::a(long, dfj, long, dfj, ha) -> boolean
fifo write: @1699477127117437673 0x7f81ea049fc5 18733: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477127118499887 0x7f81ea257a04 21112: dkv::a(dlu, cqn, dlg, dhf, int, int) -> dhf
fifo write: @1699477127118672259 0x7f81e2a40178 1095: it.unimi.dsi.fastutil.shorts.AbstractShortList::ensureIndex(int) -> void
fifo write: @1699477127123526452 0x7f81ea2570cc 3: Short::shortValue() -> short
fifo write: @1699477127125944773 0x7f81e982178c 5904: eid::b(eig, eig, ehr) -> eig
fifo write: @1699477127126577031 0x7f81ea25564a 1805: dig::a(it.unimi.dsi.fastutil.shorts.ShortList[]) -> rc
fifo write: @1699477127126734173 0x7f81e27fd9c0 2963: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477127127376701 0x7f81ea254ea8 219: cpy::w(gw) -> float
fifo write: @1699477127129079773 0x7f81e9821253 84: bur::X() -> void
fifo write: @1699477127129828873 0x7f81e9820f4c 2: ceh::a() -> int
fifo write: @1699477127129905964 0x7f81e2a3f914 275: eim$$Lambda$7802.0x00007f8160c80fa0::<init>(eim, java.util.function.Consumer, String) -> void
fifo write: @1699477127129965545 0x7f81e22b1214 402: java.util.Collections$EmptyList::forEach(java.util.function.Consumer) -> void
fifo write: @1699477127130003015 0x7f81e22b0b14 608: cbu::gg() -> eim
fifo write: @1699477127130359160 0x7f81e22122a7 2295: eim::a(eip, String, java.util.function.Consumer) -> void
fifo write: @1699477127130439121 0x7f81e9820a69 348: java.util.Spliterators$IteratorSpliterator::<init>(java.util.Collection, int) -> void
fifo write: @1699477127130891107 0x7f81ea047ff0 1889: btz$$Lambda$7359.0x00007f8160bd8cd8::test(Object) -> boolean
fifo write: @1699477127154122786 0x7f81ea198f6d 17307: eak::a(cpv, gw, dfj) -> eam
fifo write: @1699477127162661285 0x7f81ea0feb56 31729: dor::a(cqp, asc, dqi, double, double, double, double, double, double, int, int, int, int, int) -> boolean
fifo write: @1699477127164742832 0x7f81e9820650 103: java.util.ArrayDeque::clear() -> void
fifo write: @1699477127170573797 0x7f81e9820053 36: biq::dg() -> float
fifo write: @1699477127171526520 0x7f81e2211af4 400: bqi::a(biq) -> boolean
fifo write: @1699477127171574050 0x7f81e22b03b4 741: bqi$$Lambda$7963.0x00007f8160ca28c0::test(Object) -> boolean
fifo write: @1699477127172575563 0x7f81e2ace637 877: apo::b(cbu, apk, int) -> void
fifo write: @1699477127172645954 0x7f81e2acdf94 428: it.unimi.dsi.fastutil.objects.Object2IntFunctions$SynchronizedFunction::getInt(Object) -> int
fifo write: @1699477127172741505 0x7f81e1e3eb14 240: apo::a(cbu, apk, int) -> void
fifo write: @1699477127172775196 0x7f81e2acd734 550: apj::a(cbu, apk, int) -> void
fifo write: @1699477127172850637 0x7f81e25e9794 140: akr$$Lambda$7801.0x00007f8160c80b20::<init>(int) -> void
fifo write: @1699477127173398394 0x7f81e23a755f 4755: cbu::a(aew) -> void
fifo write: @1699477127173438084 0x7f81e2ba061c 1935: ead::d() -> int
fifo write: @1699477127173546216 0x7f81e2bee039 4670: akr::a(apk, int) -> void
fifo write: @1699477127173623877 0x7f81e2d24fbc 4764: cbu::b(apk) -> void
fifo write: @1699477127176359302 0x7f81ea046658 1585: biq::bm() -> float
fifo write: @1699477127216604190 0x7f81e2ba0074 216: arw::j(double) -> int
fifo write: @1699477127218145600 0x7f81ea0fd6f6 893: cpy::f(int, int) -> boolean
fifo write: @1699477127219068412 0x7f81ea046050 91: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapEntry::getValue() -> Object
fifo write: @1699477127219110162 0x7f81e981f9d0 83: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapEntry::getIntKey() -> int
fifo write: @1699477127219159173 0x7f81e25b7cdc 3284: djg::a() -> void
fifo write: @1699477127220991737 0x7f81ea0fd256 217: java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater::getAndAdd(Object, long) -> long
fifo write: @1699477127265767573 0x7f81e23a659e 1479: yo$a::a(so) -> void
fifo write: @1699477127267969312 0x7f81e25b77f4 103: ehn::b(ehn) -> double
fifo write: @1699477127268027142 0x7f81e2d248d4 448: biq::d(double) -> double
fifo write: @1699477127268120394 0x7f81e2d24394 198: biq::c(double) -> double
fifo write: @1699477127268162404 0x7f81e2d23bd4 448: biq::g(double) -> double
fifo write: @1699477127268283176 0x7f81e286e8b4 532: biy::y() -> int
fifo write: @1699477127268326426 0x7f81e286e394 198: biq::e(double) -> double
fifo write: @1699477127268379027 0x7f81e286de14 416: biq::dt() -> double
fifo write: @1699477127268430828 0x7f81e286d914 198: biq::f(double) -> double
fifo write: @1699477127268592480 0x7f81e25e23f9 1829: bqx::a() -> boolean
fifo write: @1699477127268807412 0x7f81e2ba267f 2484: biy::b_() -> void
fifo write: @1699477127270804728 0x7f81e286d394 231: cjf::b() -> boolean
fifo write: @1699477127273481983 0x7f81ea0fbb52 1773: cbt::a(int) -> cjf
fifo write: @1699477127275123313 0x7f81ea195c80 4713: java.util.Arrays::binarySearch0(Object[], int, int, Object, java.util.Comparator) -> int
fifo write: @1699477127376337457 0x7f81ea1936d7 3583: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::remove(long) -> Object
fifo write: @1699477127379745501 0x7f81ea1f2da1 3765: dam::b(dfj, cpy, gw) -> boolean
fifo write: @1699477127421053862 0x7f81e2ba1b59 635: dzx::a(long) -> dhl
fifo write: @1699477127421121323 0x7f81e25e1574 1715: io.netty.util.concurrent.AbstractScheduledEventExecutor::pollScheduledTask(long) -> Runnable
fifo write: @1699477127421220704 0x7f81ea0fb791 50: ead$a::c(long, ha) -> long
fifo write: @1699477127421610760 0x7f81ea0fb356 69: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::ensureIndex(int) -> void
fifo write: @1699477127421971394 0x7f81ea19315a 177: it.unimi.dsi.fastutil.doubles.AbstractDoubleList::listIterator(int) -> it.unimi.dsi.fastutil.doubles.DoubleListIterator
fifo write: @1699477127466257995 0x7f81e27b9894 185: ajy$$Lambda$7937.0x00007f8160c9ecc0::<init>(vd) -> void
fifo write: @1699477127466305055 0x7f81e28f2574 473: ajy::a(vd, akr) -> void
fifo write: @1699477127466350496 0x7f81e28f1db4 811: ajy$$Lambda$7937.0x00007f8160c9ecc0::accept(Object) -> void
fifo write: @1699477127466476468 0x7f81e28f12f7 1306: ajy::a(java.util.List, vd) -> void
fifo write: @1699477127470985305 0x7f81e28f09b4 1016: bwt::gF() -> void
fifo write: @1699477127471110757 0x7f81e28ef777 2292: bwt::eX() -> boolean
fifo write: @1699477127511612769 0x7f81ea1ec5d6 9433: ebm::a(gw, ebm$c) -> void
fifo write: @1699477127515823953 0x7f81ea192dd0 63: asm::c(int) -> void
fifo write: @1699477127516050736 0x7f81ea19269c 684: asm::<init>(int, java.util.Comparator) -> void
fifo write: @1699477127524736448 0x7f81ea1ea035 2520: bru::a() -> boolean
fifo write: @1699477127546403437 0x7f81ea1e4b7d 7798: bts::a(bjg, bjg) -> boolean
fifo write: @1699477127566171231 0x7f81ea1922d0 43: cpv::x_() -> eab
fifo write: @1699477127568105826 0x7f81e21ca754 1219: bvq$a::a() -> boolean
fifo write: @1699477127568530591 0x7f81e21c8efc 3436: bvq$b::e() -> void
fifo write: @1699477127576516425 0x7f81ea191553 1012: eaw::a(int) -> void
fifo write: @1699477127578125925 0x7f81ea1e34a2 1541: ebd::a(eaz, java.util.Set) -> float
fifo write: @1699477127614150119 0x7f81e21c8554 962: ebb::d() -> eaz
fifo write: @1699477127622245423 0x7f81e21c7f54 411: bzt$c::a() -> boolean
fifo write: @1699477127622895602 0x7f81e19b86af 2296: aog::a(cbu, double, double, double, double, aev, vd) -> void
fifo write: @1699477127666064897 0x7f81ea1e2d64 79: io.netty.buffer.AbstractByteBuf::checkReadableBytes0(int) -> void
fifo write: @1699477127668406818 0x7f81e19b7b59 1262: bzt::l() -> void
fifo write: @1699477127668484139 0x7f81e19b70d4 985: bzt::w(boolean) -> void
fifo write: @1699477127668963845 0x7f81e19b68b4 633: bzt::y() -> boolean
fifo write: @1699477127669000575 0x7f81e16e9834 861: bzt::c_() -> boolean
fifo write: @1699477127669662824 0x7f81e2cb481f 7621: bsq::c() -> void
fifo write: @1699477127716778450 0x7f81ea1e2119 718: bsp::b(gw) -> boolean
fifo write: @1699477127720549399 0x7f81ea0cd990 519: ebb::a(biq, int) -> ehn
fifo write: @1699477127723191853 0x7f81ea1e1c50 83: dhq$d::b() -> boolean
fifo write: @1699477127723462397 0x7f81ea0cd5d3 60: biq::cX() -> boolean
fifo write: @1699477127768244013 0x7f81ea0ccbd0 343: dfi$a::o(cpb, gw) -> boolean
fifo write: @1699477127772202584 0x7f81ea0cc521 482: java.util.IdentityHashMap$IdentityHashMapIterator::<init>(java.util.IdentityHashMap) -> void
fifo write: @1699477127818112595 0x7f81ea0cb653 488: io.netty.buffer.PooledUnsafeDirectByteBuf::getBytes(int, byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477127819323871 0x7f81ea0ca866 725: io.netty.buffer.AbstractByteBuf::readBytes(byte[], int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477127819419002 0x7f81e19b6114 342: brp::c() -> void
fifo write: @1699477127823786268 0x7f81ea0ca26a 298: java.util.IdentityHashMap$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477127866899104 0x7f81e2cb3f14 269: cxi::b(dfj, akq, gw, asc) -> void
fifo write: @1699477127869343245 0x7f81ea0c96d2 373: java.util.ArrayList::fastRemove(Object[], int) -> void
fifo write: @1699477127909979058 0x7f81ea0bcc77 17721: bsp::c() -> void
fifo write: @1699477127915139285 0x7f81ea0bc0d3 324: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::containsKey(int) -> boolean
fifo write: @1699477127918005112 0x7f81e16e765f 5092: bpd::a() -> void
fifo write: @1699477127918259245 0x7f81ea0bbd74 91: biq::s(float) -> void
fifo write: @1699477127935948823 0x7f81ea0b7ad0 5583: dhq$d::a() -> void
fifo write: @1699477127966719069 0x7f81e16e6ab7 1081: biq::bU() -> boolean
fifo write: @1699477127969772108 0x7f81e28b4b19 362: bit$$Lambda$7349.0x00007f8160bd1678::test(Object) -> boolean
fifo write: @1699477127969972250 0x7f81e28b4614 327: bus$k$$Lambda$7262.0x00007f8160bb8000::test(Object) -> boolean
fifo write: @1699477127970065502 0x7f81e28b3214 2889: bit::a(biq, eio, eio$a, biq) -> boolean
fifo write: @1699477128015120622 0x7f81ea20e5d3 281: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::tryRelease(int) -> boolean
fifo write: @1699477128016730062 0x7f81e21c7b14 31: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.shorts.ShortOpenHashSet, it.unimi.dsi.fastutil.shorts.ShortOpenHashSet$1) -> void
fifo write: @1699477128016823244 0x7f81e28b2c14 280: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.shorts.ShortOpenHashSet) -> void
fifo write: @1699477128017308590 0x7f81e27a4594 137: io.netty.util.Recycler$EnhancedHandle::<init>() -> void
fifo write: @1699477128017792626 0x7f81ea20dfdb 376: io.netty.handler.codec.CodecOutputList::add(Object) -> boolean
fifo write: @1699477128017895247 0x7f81ea20db56 278: io.netty.util.concurrent.DefaultPromise::addListener0(io.netty.util.concurrent.GenericFutureListener) -> void
fifo write: @1699477128020204107 0x7f81e28b253d 561: ebg::a(cpb, int, int, int) -> eax
fifo write: @1699477128020953947 0x7f81ea20ca28 1667: cpv::a(ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477128021785068 0x7f81e2bd1957 18206: ebg::b(cpb, gw) -> eax
fifo write: @1699477128023227146 0x7f81e28b1d34 693: cxi::a(dfj, cpb, gw, ebc) -> boolean
fifo write: @1699477128023693942 0x7f81e28baa99 4029: ebg::a(dfj) -> boolean
fifo write: @1699477128025231692 0x7f81e8bf7ce8 27: vtable stub
fifo write: @1699477128025580747 0x7f81e28b9ad4 2206: biq::y(biq) -> boolean
fifo write: @1699477128026362737 0x7f81e2ca35c8 25173: ebd::a(bdp, eaz, java.util.Map, float, int, float) -> ebb
fifo write: @1699477128026583720 0x7f81ea20c6d0 47: io.netty.channel.DefaultChannelPromise::executor() -> io.netty.util.concurrent.EventExecutor
fifo write: @1699477128029204383 0x7f81ea20b8ed 783: io.netty.util.concurrent.DefaultPromise::notifyListener0(io.netty.util.concurrent.Future, io.netty.util.concurrent.GenericFutureListener) -> void
fifo write: @1699477128048695804 0x7f81ea208299 5045: io.netty.util.concurrent.DefaultPromise::trySuccess(Object) -> boolean
fifo write: @1699477128068634751 0x7f81e2b18cf7 7367: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477128069167928 0x7f81ea207d5b 132: dfi$a::a(cpb, gw, ebc) -> boolean
fifo write: @1699477128071572529 0x7f81e2d4e70c 7144: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477128072934796 0x7f81ea207513 420: bpd::b() -> void
fifo write: @1699477128078610770 0x7f81e2c8c77f 63995: bym::l() -> void
fifo write: @1699477128084022309 0x7f81ea2052b0 3027: ako::c(int, int) -> dhs
fifo write: @1699477128114712754 0x7f81e2b183b9 740: so::a(java.util.UUID) -> so
fifo write: @1699477128114804865 0x7f81e2b9fc14 185: akp$$Lambda$7854.0x00007f8160c8b8d8::<init>(java.util.List) -> void
fifo write: @1699477128114867016 0x7f81ea204ddd 82: javax.crypto.Cipher::checkCipherState() -> void
fifo write: @1699477128114921887 0x7f81e28b1694 279: xh::<init>(Iterable) -> void
fifo write: @1699477128114958307 0x7f81e2b17f14 185: vb::<init>(Iterable) -> void
fifo write: @1699477128115065129 0x7f81e2d4d7d7 1787: wx::<init>(biq, int) -> void
fifo write: @1699477128115214581 0x7f81e28b8a04 1837: wx::<init>(int, java.util.UUID, double, double, double, float, float, biu, int, ehn, double) -> void
fifo write: @1699477128115355772 0x7f81e2b17a94 240: io.netty.util.concurrent.PromiseCombiner$1::<init>(io.netty.util.concurrent.PromiseCombiner) -> void
fifo write: @1699477128115448634 0x7f81e2c8aed7 1367: io.netty.util.concurrent.PromiseCombiner::<init>(io.netty.util.concurrent.EventExecutor) -> void
fifo write: @1699477128115557715 0x7f81ea2047dd 434: java.util.concurrent.locks.ReentrantReadWriteLock$Sync::tryAcquire(int) -> boolean
fifo write: @1699477128115875649 0x7f81e2c89d41 2247: io.netty.util.concurrent.PromiseCombiner::finish(io.netty.util.concurrent.Promise) -> void
fifo write: @1699477128116309705 0x7f81e2c87504 6310: cyl::a(cpy, gw, ha, boolean) -> dgg
fifo write: @1699477128116418726 0x7f81e2c85581 4072: wx::a(so) -> void
fifo write: @1699477128116501097 0x7f81ea2041d6 277: io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue::poll() -> Object
fifo write: @1699477128117353088 0x7f81e2bcb507 15408: akp::a(akr, java.util.function.Consumer) -> void
fifo write: @1699477128117391179 0x7f81ea203bd2 365: asm::d(int) -> void
fifo write: @1699477128117990566 0x7f81ea203850 71: io.netty.channel.epoll.EpollSocketChannel::remoteAddress() -> java.net.SocketAddress
fifo write: @1699477128118553544 0x7f81ea203251 218: javax.crypto.Cipher::getOutputSize(int) -> int
fifo write: @1699477128118968659 0x7f81ea202b50 523: sq$$Lambda$7605.0x00007f8160c4a228::accept(Object) -> void
fifo write: @1699477128120045383 0x7f81e2bca419 1745: bur::a(gw, cpy) -> float
fifo write: @1699477128120079963 0x7f81ea2027d3 56: bji::L() -> bsp
fifo write: @1699477128120220735 0x7f81ea201c64 507: sf::a(io.netty.buffer.ByteBuf) -> byte[]
fifo write: @1699477128121843646 0x7f81e2c84e97 237: bjg::D(biq) -> void
fifo write: @1699477128121892557 0x7f81e28b8394 279: bjg::g(biq) -> void
fifo write: @1699477128122738358 0x7f81e2e11687 6894: biq::a(gw, dfj, boolean, boolean, ehn) -> boolean
fifo write: @1699477128122826739 0x7f81e2e14347 5848: biq::g(biq) -> void
fifo write: @1699477128122862849 0x7f81e2d4ce34 576: bko::a(double) -> double
fifo write: @1699477128129202661 0x7f81ea1fff50 2263: ebg::a(dfj) -> boolean
fifo write: @1699477128129279262 0x7f81ea1fe9f9 2342: eaw::a(eaz) -> eaz
fifo write: @1699477128166176767 0x7f81e2bc9a67 877: aka::b(akr, int, int) -> boolean
fifo write: @1699477128166552252 0x7f81ea1fe55d 138: bdu::b(sn, int, java.net.SocketAddress, int) -> void
fifo write: @1699477128167174150 0x7f81e2bc8fd4 1053: brx::a() -> boolean
fifo write: @1699477128168732200 0x7f81e8bf7d18 27: vtable stub
fifo write: @1699477128169583451 0x7f81e8bf7d48 27: vtable stub
fifo write: @1699477128169602171 0x7f81e8bf7d78 27: vtable stub
fifo write: @1699477128170185209 0x7f81ea1fe04f 220: java.util.HashSet::remove(Object) -> boolean
fifo write: @1699477128170299810 0x7f81e2e16914 305: java.util.EnumMap$EnumMapIterator::checkLastReturnedIndex() -> void
fifo write: @1699477128170355741 0x7f81e2e16e14 236: java.util.EnumMap$EntryIterator::remove() -> void
fifo write: @1699477128170416772 0x7f81e2e173b4 955: java.util.EnumMap$EnumMapIterator::remove() -> void
fifo write: @1699477128171166761 0x7f81e2e17cd7 1556: cbu::bY() -> boolean
fifo write: @1699477128171718418 0x7f81ea1fdc9c 103: io.netty.util.concurrent.DefaultPromise::setUncancellable() -> boolean
fifo write: @1699477128174078509 0x7f81ea1fd25d 454: io.netty.channel.unix.IovArray::processMessage(Object) -> boolean
fifo write: @1699477128175176003 0x7f81ea1faee4 2247: sh::encode(io.netty.channel.ChannelHandlerContext, Object, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477128177004306 0x7f81ea1f8726 2701: tf::encode(io.netty.channel.ChannelHandlerContext, Object, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477128215395311 0x7f81e2e18a3d 847: dfi$a::a(cpb, gw, biu) -> boolean
fifo write: @1699477128215586803 0x7f81e2e1952d 9135: io.netty.handler.codec.MessageToMessageEncoder::writePromiseCombiner(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.CodecOutputList, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477128215603493 0x7f81e8bf7da8 27: vtable stub
fifo write: @1699477128218047435 0x7f81ea24273a 1133: so::b(long) -> so
fifo write: @1699477128221495579 0x7f81e28b7ff4 24: io.netty.channel.epoll.AbstractEpollStreamChannel::isActive() -> boolean
fifo write: @1699477128227364484 0x7f81ea23febf 2823: akq::a(gw, dfj, dfj, int) -> void
fifo write: @1699477128271550563 0x7f81ea318864 49310: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477128271638184 0x7f81e2e1cf74 269: arw::e(float) -> float
fifo write: @1699477128271884688 0x7f81e2e1da7f 19281: bjg::l() -> void
fifo write: @1699477128271957268 0x7f81e2e2567c 1802: io.netty.channel.epoll.AbstractEpollChannel::clearFlag(int) -> void
fifo write: @1699477128277617892 0x7f81ea23d676 2841: bwq::cN() -> bjg
fifo write: @1699477128316487532 0x7f81ea1f7e50 191: dhp::h() -> java.util.Map
fifo write: @1699477128321582578 0x7f81ea1f7a53 100: io.netty.channel.ChannelOutboundBuffer::setWritable(boolean) -> void
fifo write: @1699477128323134428 0x7f81ea23b5e0 2109: cqg::a(gw, akq, bjj, cqn) -> boolean
fifo write: @1699477128370021691 0x7f81ea23ad9a 461: ebg::a(eaz, eaz, eaz, eaz) -> boolean
fifo write: @1699477128370184093 0x7f81e8bf7dd8 27: vtable stub
fifo write: @1699477128371995217 0x7f81e2e26607 11055: io.netty.channel.epoll.AbstractEpollStreamChannel::doWrite(io.netty.channel.ChannelOutboundBuffer) -> void
fifo write: @1699477128413177907 0x7f81ea232309 12447: ebg::b(cpb, gw) -> eax
fifo write: @1699477128414744317 0x7f81e2e2aa46 5407: eap::a(cpv, gw, eam, eam) -> int
fifo write: @1699477128416051864 0x7f81e2e2cd39 1103: so::a(gw) -> so
fifo write: @1699477128426741802 0x7f81ea22ffa2 2260: aeh::c(aee, Object) -> void
fifo write: @1699477128432559606 0x7f81ea22d03c 4051: aeh::a(aee, Object) -> void
fifo write: @1699477128466237790 0x7f81e2e2d714 103: io.netty.buffer.PoolThreadCache$MemoryRegionCache::trim() -> void
fifo write: @1699477128466345662 0x7f81e2e2db74 335: io.netty.buffer.PoolThreadCache::trim(io.netty.buffer.PoolThreadCache$MemoryRegionCache) -> void
fifo write: @1699477128466423933 0x7f81e2e2e141 819: io.netty.buffer.PoolThreadCache$MemoryRegionCache::free(int, boolean) -> int
fifo write: @1699477128469224549 0x7f81e2e2e9b9 794: bji::P() -> void
fifo write: @1699477128469947998 0x7f81e8bf7e08 27: vtable stub
fifo write: @1699477128469967658 0x7f81e8bf7e38 27: vtable stub
fifo write: @1699477128469988549 0x7f81e8bf7e68 27: vtable stub
fifo write: @1699477128470171231 0x7f81e2e2f610 15034: biq::a(aqh, double) -> boolean
fifo write: @1699477128510755653 0x7f81ea33172c 11615: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477128515570195 0x7f81e2e35b14 302: io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue::isEmpty() -> boolean
fifo write: @1699477128519487636 0x7f81e2e360a9 1230: bua::a(asc, int, int, int, double, double, double) -> gw
fifo write: @1699477128520893194 0x7f81e2e36c34 450: it.unimi.dsi.fastutil.ints.IntArrayList::<init>(int) -> void
fifo write: @1699477128569276227 0x7f81e2e37277 1938: bjg::bs() -> boolean
fifo write: @1699477128570148338 0x7f81e2e3833c 5502: bki::h() -> double
fifo write: @1699477128585150941 0x7f81ea339201 5410: coy::b(gw, int) -> int
fifo write: @1699477128591125908 0x7f81ea33c8f7 5340: eab::a(gw, int) -> int
fifo write: @1699477128592991912 0x7f81ea33fdf4 5635: cpy::c(gw, int) -> int
fifo write: @1699477128593042333 0x7f81ea22c697 396: bjg::eP() -> void
fifo write: @1699477128608473432 0x7f81ea343780 7330: biq::a(aqh, double) -> boolean
fifo write: @1699477128615482612 0x7f81ea22c250 107: java.util.IdentityHashMap$IdentityHashMapIterator::nextIndex() -> int
fifo write: @1699477128618260708 0x7f81ea22bf50 43: io.netty.util.concurrent.SingleThreadEventExecutor::startThread() -> void
fifo write: @1699477128622714845 0x7f81ea348a0e 1125: io.netty.util.concurrent.SingleThreadEventExecutor::execute(Runnable, boolean) -> void
fifo write: @1699477128623019929 0x7f81e2e3a89f 7877: bsp::c() -> void
fifo write: @1699477128630497745 0x7f81ea349be2 3932: sm::a(vd, sv, boolean) -> void
fifo write: @1699477128666149194 0x7f81ea22ba8b 100: gw::c() -> gw
fifo write: @1699477128673710801 0x7f81ea22b650 107: java.util.stream.ReferencePipeline$7$1::cancellationRequested() -> boolean
fifo write: @1699477128674305189 0x7f81ea34c95d 2657: akw::b(long, aku) -> void
fifo write: @1699477128715869124 0x7f81e2e3dcf6 351: sun.security.util.ArrayUtil::nullAndBoundsCheck(byte[], int, int) -> void
fifo write: @1699477128715908795 0x7f81e2e3e277 339: sun.security.util.ArrayUtil::blockSizeCheck(int, int) -> void
fifo write: @1699477128723311930 0x7f81e2e3e7b4 167: byn::aG() -> gw
fifo write: @1699477128724013569 0x7f81ea22b1d0 151: io.netty.channel.ChannelOutboundBuffer::progress(long) -> void
fifo write: @1699477128727877089 0x7f81ea34ea70 1323: java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$784.0x00007f81601e0638::getAsBoolean() -> boolean
fifo write: @1699477128739737231 0x7f81ea3500ac 6183: ss::a(io.netty.channel.ChannelHandlerContext, vd, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477128743293137 0x7f81ea354dc1 6070: ss::encode(io.netty.channel.ChannelHandlerContext, Object, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477128765643455 0x7f81ea22ae4c 2: cjf::e(int) -> void
fifo write: @1699477128765673705 0x7f81ea3598cc 2: cjf::K() -> int
fifo write: @1699477128766567837 0x7f81ea359c03 444: dam::c(dfj, cpy, gw) -> boolean
fifo write: @1699477128769059829 0x7f81e2e3ec14 199: bji::s() -> void
fifo write: @1699477128771408799 0x7f81ea35a5be 1681: sm::c(vd, sv, boolean) -> void
fifo write: @1699477128794058021 0x7f81ea35bc09 9010: sl::encode(io.netty.channel.ChannelHandlerContext, Object, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477128795646922 0x7f81ea362789 8894: sl::a(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) -> void
fifo write: @1699477128796500243 0x7f81ea368fd6 577: io.netty.channel.ChannelOutboundBuffer::removeEntry(io.netty.channel.ChannelOutboundBuffer$Entry) -> void
fifo write: @1699477128797074060 0x7f81ea369753 181: io.netty.util.ReferenceCountUtil::safeRelease(Object) -> void
fifo write: @1699477128797423445 0x7f81ea369bc8 87: io.netty.util.internal.PromiseNotificationUtil::trySuccess(io.netty.util.concurrent.Promise, Object, io.netty.util.internal.logging.InternalLogger) -> void
fifo write: @1699477128798473488 0x7f81ea369f84 352: io.netty.channel.ChannelOutboundBuffer::decrementPendingOutboundBytes(long, boolean, boolean) -> void
fifo write: @1699477128802361238 0x7f81ea36a753 2956: io.netty.channel.ChannelOutboundBuffer::remove() -> boolean
fifo write: @1699477128804003329 0x7f81ea36cb1b 1285: io.netty.channel.ChannelOutboundBuffer$Entry::unguardedRecycle() -> void
fifo write: @1699477128804295353 0x7f81ea36dc60 367: bji::R() -> void
fifo write: @1699477128814456334 0x7f81ea36e948 11919: bjg::h(ehn) -> void
fifo write: @1699477128814704277 0x7f81e2e3f168 3140: eak::a(cpy, gw) -> int
fifo write: @1699477128816358928 0x7f81e2e40819 248: io.netty.buffer.AbstractByteBuf::readByte() -> byte
fifo write: @1699477128817628195 0x7f81ea377c75 354: cqn::b(gw) -> java.util.Map
fifo write: @1699477128831029187 0x7f81ea378637 3092: bjg::b(bkh) -> double
fifo write: @1699477128838463773 0x7f81ea37ae41 4788: dhg::a(he, cqn, bjj, gw) -> bfm
fifo write: @1699477128866698306 0x7f81e8bf7e98 27: vtable stub
fifo write: @1699477128875334127 0x7f81ea37e8d0 43: dhq$a::c() -> gw
fifo write: @1699477128875408018 0x7f81ea37ebd0 91: dhq$d::c() -> gw
fifo write: @1699477128875946795 0x7f81ea37efa7 144: ake::a(int, int, int, int, int, boolean) -> boolean
fifo write: @1699477128875991596 0x7f81ea37f3dd 186: ake::a(int, int) -> boolean
fifo write: @1699477128876022486 0x7f81ea37f8d0 187: ake$a::a(int, int, boolean) -> boolean
fifo write: @1699477128917563511 0x7f81ea37fdd0 155: io.netty.buffer.AbstractByteBufAllocator::directBuffer(int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477128921526532 0x7f81e2e41047 13294: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::add(long) -> boolean
fifo write: @1699477128923109173 0x7f81e2e46cf7 1773: bra::a() -> boolean
fifo write: @1699477128923285075 0x7f81ea380288 119: ehn::a(hy, double, double, double) -> ehn
fifo write: @1699477128924189546 0x7f81ea380797 124: ehn::c(hy) -> ehn
fifo write: @1699477128925337281 0x7f81e2e47cd7 2885: akp::b(akr) -> void
fifo write: @1699477128948159115 0x7f81ea380e01 6832: biq::a(aqh, double) -> boolean
fifo write: @1699477128967767347 0x7f81e97a37e6 4: arw::b(double, double) -> boolean
fifo write: @1699477128973106296 0x7f81e97a307c 18: biq::aH() -> gw
fifo write: @1699477128974735487 0x7f81e2e49987 33549: biq::a(bjm, ehn) -> void
fifo write: @1699477128975434426 0x7f81e2698297 6217: cqi::<init>(cpv, gw, gw) -> void
fifo write: @1699477128975465717 0x7f81e9a21a50 67: ebb::e() -> int
fifo write: @1699477128977967669 0x7f81e229feff 9343: bqi::a() -> boolean
fifo write: @1699477128978006529 0x7f81e9790b30 12: ehr$$Lambda$588.0x00007f816031f2e8::apply(boolean, boolean) -> boolean
fifo write: @1699477128978256683 0x7f81e28257f4 108: ecq::d() -> akq
fifo write: @1699477128978373644 0x7f81e223dd94 392: cs$$Lambda$7774.0x00007f8160c78fb8::test(Object) -> boolean
fifo write: @1699477128978502006 0x7f81e2724f14 327: efs::test(Object) -> boolean
fifo write: @1699477128978716259 0x7f81e2bfdadc 2669: efs::a(ecq) -> boolean
fifo write: @1699477128980638353 0x7f81e2cc9162 15639: cj::a(akq, double, double, double) -> boolean
fifo write: @1699477128981830469 0x7f81e2e56b57 19465: bq::a(akq, ehn, biq) -> boolean
fifo write: @1699477128982942933 0x7f81e2e5f77f 45779: akr::m() -> void
fifo write: @1699477128984631005 0x7f81e975a03d 2598: bpd::a() -> void
fifo write: @1699477129015705735 0x7f81e9773d53 452: asm$a::remove() -> void
fifo write: @1699477129017274525 0x7f81e28ad554 96: tc::a(byte) -> boolean
fifo write: @1699477129018137216 0x7f81e272fcb4 845: biq::cd() -> boolean
fifo write: @1699477129018724873 0x7f81e1b768f4 4: biq::aK() -> float
fifo write: @1699477129024854383 0x7f81ea2df14c 3: biq$c::a() -> boolean
fifo write: @1699477129031973335 0x7f81ea2e67d3 1272: byn::q() -> cjf
fifo write: @1699477129035986316 0x7f81ea2fd573 652: aka::a(akr, int, int) -> boolean
fifo write: @1699477129067705374 0x7f81ea3037d0 195: java.util.IdentityHashMap$KeyIterator::next() -> Object
fifo write: @1699477129074055056 0x7f81ea386018 10269: java.util.stream.StreamSpliterators$WrappingSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477129077566521 0x7f81e99c5b1e 1313: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::put(int, Object) -> Object
fifo write: @1699477129120789038 0x7f81e8befd80 448: I2C/C2I adapters(0xbaab7e)
fifo write: @1699477129120812368 0x7f81e8befa80 464: I2C/C2I adapters(0xbaab7ea)
fifo write: @1699477129122046904 0x7f81e2b91b99 699: ebg::a(bji, gw) -> eax
fifo write: @1699477129124511466 0x7f81ea38d476 18618: aka$b::b(akr) -> void
fifo write: @1699477129124616427 0x7f81e21d3b27 5646: bjg::B(biq) -> double
fifo write: @1699477129124650748 0x7f81ea2fb94c 6: ebf::d() -> eaz
fifo write: @1699477129124682958 0x7f81ea2fb5cc 6: cpv::ag() -> bhp
fifo write: @1699477129134489984 0x7f81ea39c4c6 4993: dam::b(dfj, akq, gw, asc) -> void
fifo write: @1699477129168062437 0x7f81e1a159b4 167: cpy::v(gw) -> float
fifo write: @1699477129171087826 0x7f81e21d11ca 431: djt$a::a(biq, dfj) -> djt$a
fifo write: @1699477129173158112 0x7f81ea3096c9 2922: com.sun.crypto.provider.CipherCore::update(byte[], int, int, byte[], int) -> int
fifo write: @1699477129217024127 0x7f81e297c514 31: io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue::poll() -> Object
fifo write: @1699477129217555504 0x7f81e220e494 240: bzi::a(gw, cpy) -> float
fifo write: @1699477129221029329 0x7f81e28867ff 4295: bqa::a() -> boolean
fifo write: @1699477129222061082 0x7f81e28caa16 592: eam::c(cpb, gw) -> ehn
fifo write: @1699477129222910973 0x7f81ea2e5fd0 239: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477129223705713 0x7f81e2e71af7 13987: eak::a(cpb, gw, eam) -> ehn
fifo write: @1699477129236365236 0x7f81e9ab51bf 3296: cox::a(akq, gw) -> void
fifo write: @1699477129268860204 0x7f81e2e775ea 9027: eig::a(gu, ehi, double) -> double
fifo write: @1699477129269344630 0x7f81e2acb794 617: byw::gn() -> boolean
fifo write: @1699477129269960878 0x7f81e9ab4cd4 232: bpe::a(double, double, double, double) -> void
fifo write: @1699477129273486414 0x7f81ea2c2451 466: cjf::a(cjf, cjf) -> boolean
fifo write: @1699477129320931704 0x7f81e9a55cc4 2149: io.netty.util.concurrent.AbstractEventExecutor::safeExecute(Runnable) -> void
fifo write: @1699477129355875435 0x7f81e9a55253 673: java.util.IdentityHashMap::remove(Object) -> Object
fifo write: @1699477129359228068 0x7f81ea3a0a40 10804: bjg::l() -> void
fifo write: @1699477129364166061 0x7f81e27ae174 1434: eap::a(eam, cpb, gw, eal, ha) -> boolean
fifo write: @1699477129378402515 0x7f81ea3a9055 5097: cpf::a(biq, ehi) -> boolean
fifo write: @1699477129421594081 0x7f81e9a54cd0 191: cpv::N() -> boolean
fifo write: @1699477129517823030 0x7f81e272789f 4380: cel::d() -> void
fifo write: @1699477129559177012 0x7f81e2ac3414 31: java.lang.invoke.DelegatingMethodHandle::<init>(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm) -> void
fifo write: @1699477129559575867 0x7f81e2729d94 258: akd::b(long, long, int) -> int
fifo write: @1699477129560048433 0x7f81e27269f4 989: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::remove(long) -> byte
fifo write: @1699477129560249146 0x7f81e2cc7417 3661: io.netty.channel.ChannelOutboundBuffer::clearNioBuffers() -> void
fifo write: @1699477129560388658 0x7f81e272da77 2622: dzy::b(long, long, int, boolean) -> void
fifo write: @1699477129560587130 0x7f81e27db270 1117: akd::a(long, int, boolean) -> void
fifo write: @1699477129560717812 0x7f81e2de2b5c 4707: dzy::a(long, long, int, int, int, boolean) -> void
fifo write: @1699477129560992836 0x7f81e1b89e34 862: aki$b::d(long) -> boolean
fifo write: @1699477129561234299 0x7f81e2734514 133: aki$b::b(long) -> int
fifo write: @1699477129562824089 0x7f81e2d42554 1387: akw::b(long) -> int
fifo write: @1699477129565797777 0x7f81e9a545db 408: akd::a(long, long, int) -> int
fifo write: @1699477129569206891 0x7f81ea3ac693 2345: io.netty.util.Recycler$LocalPool::claim() -> io.netty.util.Recycler$DefaultHandle
fifo write: @1699477129569937600 0x7f81e9ab44e0 41: akd::b(long, long, int) -> int
fifo write: @1699477129571934576 0x7f81e2886214 125: akc$$Lambda$5458.0x00007f8160a7c588::run() -> void
fifo write: @1699477129572347861 0x7f81e22d48c7 2113: akc::a(java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477129572703906 0x7f81e277adbf 5144: aki$c::a() -> void
fifo write: @1699477129578807225 0x7f81ea3ae29c 2615: dzy::a(long, long, int, int, int, boolean) -> void
fifo write: @1699477129585014225 0x7f81e2e7bc7f 19281: bjg::l() -> void
fifo write: @1699477129585386700 0x7f81ea3b075d 6494: dzy::b(long, long, int, boolean) -> void
fifo write: @1699477129585426280 0x7f81e9a54031 9: dzy::a(int, int) -> int
fifo write: @1699477129586730257 0x7f81ea3b5576 2583: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::rehash(int) -> void
fifo write: @1699477129590680007 0x7f81e277a0d7 1097: aki$a::c(long) -> int
fifo write: @1699477129590811789 0x7f81e2aeef94 93: aka$a::a(long, int, ajy, int) -> ajy
fifo write: @1699477129591041552 0x7f81e272b0df 1127: aki$a::a(long, int) -> void
fifo write: @1699477129591179554 0x7f81e2dde6eb 2779: aka::a(long, int, ajy, int) -> ajy
fifo write: @1699477129591318535 0x7f81e2e8393c 4144: dzy::b(int) -> int
fifo write: @1699477129591457527 0x7f81e272c8f4 1440: aki$a::b(long) -> int
fifo write: @1699477129591525358 0x7f81e2b0fc14 31: akw::a() -> void
fifo write: @1699477129591999284 0x7f81ea3b6cc3 2138: aki$c::a(long, int, boolean, boolean) -> void
fifo write: @1699477129594138582 0x7f81e2b6550e 21: dhy$d$$Lambda$7039.0x00007f8160b812c0::create(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477129594420456 0x7f81e2ddd167 2693: org.apache.commons.lang3.Validate::isTrue(boolean, String, Object[]) -> void
fifo write: @1699477129595227456 0x7f81ea3b83f3 960: aki$a::c(long) -> int
fifo write: @1699477129596062567 0x7f81e2e862ef 31353: ajy::a(aka, java.util.concurrent.Executor) -> void
fifo write: @1699477129596189128 0x7f81ea3b939d 4076: aki$b::a(long, int) -> void
fifo write: @1699477129596215369 0x7f81ea3bc091 4: ajz::e(int) -> boolean
fifo write: @1699477129598044072 0x7f81ea3bc3d0 575: aka$a::b(long) -> ajy
fifo write: @1699477129599732994 0x7f81ea3bd474 156: aki$c$$Lambda$7768.0x00007f8160c78258::<init>(aki$c, long) -> void
fifo write: @1699477129600272341 0x7f81ea3bd7f4 156: aki$c$$Lambda$7769.0x00007f8160c78480::<init>(aki$c, long) -> void
fifo write: @1699477129603362411 0x7f81ea3bdb78 1011: eac::a(long, int) -> void
fifo write: @1699477129604830600 0x7f81ea3bea3a 2320: dhu::<init>(hj, int, dhx, java.util.List) -> void
fifo write: @1699477129605940674 0x7f81ea3c0a5b 8480: akd::a(long, int, boolean) -> void
fifo write: @1699477129618921271 0x7f81ea3c66ac 30: io.netty.channel.DefaultChannelPipeline::access$600(io.netty.channel.DefaultChannelPipeline) -> io.netty.channel.Channel
fifo write: @1699477129625543087 0x7f81ea3c6a3f 276: java.util.zip.Inflater$InflaterZStreamRef::run() -> void
fifo write: @1699477129626507309 0x7f81ea3c7030 1452: java.util.concurrent.ForkJoinTask$RunnableExecuteAction::exec() -> boolean
fifo write: @1699477129629783601 0x7f81e2215094 473: ayy$$Lambda$6520.0x00007f8160b2c640::apply(Object) -> Object
fifo write: @1699477129629855772 0x7f81e2b0bcd9 982: aum$$Lambda$6579.0x00007f8160b342f0::apply(Object) -> Object
fifo write: @1699477129631267430 0x7f81e262b640 840: com.mojang.datafixers.NamedChoiceFinder::findType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, boolean) -> com.mojang.datafixers.util.Either
fifo write: @1699477129631884408 0x7f81ea3c8570 680: com.mojang.datafixers.optics.Traversal$$Lambda$5801.0x00007f8160ac0000::apply(Object) -> Object
fifo write: @1699477129632060701 0x7f81e249409a 802: com.mojang.datafixers.util.Either$Instance::lambda$traverse$7(com.mojang.datafixers.kinds.Applicative, Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477129632128392 0x7f81e2de903a 902: com.mojang.datafixers.util.Either$Instance$$Lambda$6712.0x00007f8160b479c8::apply(Object) -> Object
fifo write: @1699477129632464816 0x7f81e2e9327f 10375: eaa::a(ead) -> void
fifo write: @1699477129632982702 0x7f81ea3c8f6f 792: com.mojang.datafixers.optics.Optic$CompositionOptic$$Lambda$5702.0x00007f8160ab36c8::apply(Object) -> Object
fifo write: @1699477129633071564 0x7f81e25adf94 361: axz$$Lambda$5493.0x00007f8160a88460::apply(Object) -> Object
fifo write: @1699477129633171235 0x7f81e2d38a94 185: axz$$Lambda$6748.0x00007f8160b506d8::<init>(axz) -> void
fifo write: @1699477129634284729 0x7f81e27365b4 1102: com.mojang.datafixers.FunctionType$Instance::lambda$wander$3(com.mojang.datafixers.kinds.App2, Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477129636653989 0x7f81ea3c9b34 1345: ri::getNumberValue(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477129636721190 0x7f81ea3caa05 1651: dhf::a(short, int) -> void
fifo write: @1699477129636803811 0x7f81ea3cbb8d 885: java.util.stream.Collectors$CollectorImpl::<init>(java.util.function.Supplier, java.util.function.BiConsumer, java.util.function.BinaryOperator, java.util.Set) -> void
fifo write: @1699477129637963866 0x7f81e8bf0800 464: I2C/C2I adapters(0xbbbbbeb)
fifo write: @1699477129638121998 0x7f81ea3cc4d0 47: com.google.common.reflect.TypeToken$4::visitClass(Class) -> void
fifo write: @1699477129639084291 0x7f81ea3cce50 376: java.util.Collections$SetFromMap::iterator() -> java.util.Iterator
fifo write: @1699477129639735329 0x7f81e2b3e757 2489: ato::a(com.mojang.serialization.Dynamic, int, int) -> com.mojang.serialization.Dynamic
fifo write: @1699477129639904751 0x7f81e2e976e7 6042: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477129640031473 0x7f81e2e9a146 7923: java.util.concurrent.CompletableFuture$UniAccept::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477129640185335 0x7f81ea3cd513 1089: com.google.common.reflect.TypeVisitor::visit(java.lang.reflect.Type[]) -> void
fifo write: @1699477129641392210 0x7f81ea3ce1cc 6: bhp::k() -> bho
fifo write: @1699477129648942898 0x7f81e2723f14 230: diy::<init>(cpc, java.util.List) -> void
fifo write: @1699477129649036489 0x7f81e256ab94 185: djf$$Lambda$7213.0x00007f8160ba5c30::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectMap) -> void
fifo write: @1699477129649464625 0x7f81e2e9d877 2818: djf::b(long) -> java.util.stream.Stream
fifo write: @1699477129654403268 0x7f81ea3ce703 13098: dks::a(dhf, java.util.Set) -> void
fifo write: @1699477129654914174 0x7f81e2cdc354 2211: net.minecraft.server.MinecraftServer::bg() -> boolean
fifo write: @1699477129656433674 0x7f81e2de0979 982: ako::s() -> boolean
fifo write: @1699477129660112871 0x7f81ea3d874f 4322: com.google.common.reflect.TypeToken::someRawTypeIsSubclassOf(Class) -> boolean
fifo write: @1699477129660656438 0x7f81ea3dba70 4941: com.mojang.datafixers.TypedOptic$$Lambda$5698.0x00007f8160aad800::test(Object) -> boolean
fifo write: @1699477129664840142 0x7f81ea3df521 4668: com.google.common.reflect.TypeToken::isSubtypeOf(java.lang.reflect.Type) -> boolean
fifo write: @1699477129665526991 0x7f81e2bed594 54: java.util.zip.CRC32::update(int) -> void
fifo write: @1699477129665568642 0x7f81e2de0294 505: java.util.zip.CheckedInputStream::read() -> int
fifo write: @1699477129665883636 0x7f81e2e9ed7c 2219: java.util.zip.GZIPInputStream::readUByte(java.io.InputStream) -> int
fifo write: @1699477129666806108 0x7f81ea3e2990 2237: com.mojang.datafixers.types.templates.Named$NamedType::toString() -> String
fifo write: @1699477129667080111 0x7f81e2735714 240: qz::a(java.io.DataOutput) -> void
fifo write: @1699477129667246533 0x7f81ea3e464c 6: io.netty.channel.RecvByteBufAllocator$DelegatingHandle::delegate() -> io.netty.channel.RecvByteBufAllocator$Handle
fifo write: @1699477129667566787 0x7f81e28d2994 173: sun.misc.Unsafe::getByte(long) -> byte
fifo write: @1699477129667618038 0x7f81e2ddcb77 380: io.netty.util.internal.PlatformDependent::getByte(long) -> byte
fifo write: @1699477129667661099 0x7f81e2de2477 477: io.netty.buffer.UnsafeByteBufUtil::getByte(long) -> byte
fifo write: @1699477129667698619 0x7f81e2de1f74 280: io.netty.util.internal.PlatformDependent0::getByte(long) -> byte
fifo write: @1699477129669092587 0x7f81ea3e4a4a 3862: com.google.common.reflect.TypeToken::getRawTypes() -> com.google.common.collect.ImmutableSet
fifo write: @1699477129669208519 0x7f81ea3e77b7 2158: dhu::a(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477129677710178 0x7f81ea3e9476 533: dho::a(java.util.function.Predicate) -> boolean
fifo write: @1699477129680257851 0x7f81ea3e9d64 116: bfo::d(Runnable) -> void
fifo write: @1699477129702067742 0x7f81ea3ea14c 2: io.netty.buffer.PoolSubpage::setNextAvail(int) -> void
fifo write: @1699477129703165046 0x7f81ea3ea456 297: io.netty.handler.codec.CodecOutputList$CodecOutputLists::recycle(io.netty.handler.codec.CodecOutputList) -> void
fifo write: @1699477129704215449 0x7f81ea3ea8d2 609: io.netty.handler.codec.CodecOutputList::recycle() -> void
fifo write: @1699477129706925474 0x7f81ea3eb0ac 30: io.netty.channel.AbstractChannelHandlerContext$Tasks::access$1800(io.netty.channel.AbstractChannelHandlerContext$Tasks) -> io.netty.channel.AbstractChannelHandlerContext
fifo write: @1699477129708795008 0x7f81ea3eb3f6 2517: java.util.concurrent.CompletableFuture$UniExceptionally::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477129712024190 0x7f81ea3ecf90 1891: cpy::a(gw, gw) -> boolean
fifo write: @1699477129737257385 0x7f81ea3ee8e7 224: eiy$1::equals(Object, Object) -> boolean
fifo write: @1699477129737394707 0x7f81ea3eef57 2158: dhy$d$$Lambda$7039.0x00007f8160b812c0::create(int, hj, dhx, java.util.List) -> dhw
fifo write: @1699477129737881103 0x7f81ea3f0bd1 162: eiy$1::a(eiy, eiy) -> boolean
fifo write: @1699477129742765436 0x7f81ea3f12dc 6731: eig::a(gu, ehi, double) -> double
fifo write: @1699477129744932484 0x7f81ea3f70dd 1906: dzw::<init>(cpx) -> void
fifo write: @1699477129765097853 0x7f81ea3f85d9 74: hm$$Lambda$5282.0x00007f81609bdee8::apply(Object) -> Object
fifo write: @1699477129778428025 0x7f81e2de8534 522: java.util.stream.LongPipeline$9$1::accept(long) -> void
fifo write: @1699477129791122909 0x7f81ea3f8b44 9861: dhf::<init>(cpc, did, cpx, hq, long, dhr[], dlv) -> void
fifo write: @1699477129799053580 0x7f81ea3fe0f3 132: aka$$Lambda$7169.0x00007f8160b9e358::apply(Object) -> Object
fifo write: @1699477129799250183 0x7f81ea3fe557 178: aka$$Lambda$5472.0x00007f8160a7e6d8::apply(Object) -> Object
fifo write: @1699477129810940364 0x7f81e2ea00f9 1661: eid::b(eig, eig) -> boolean
fifo write: @1699477129811060895 0x7f81e2ea0e97 3410: dzw::a(cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477129812119959 0x7f81e2ea27f7 6772: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477129812357762 0x7f81ea3feb7e 413: dfi$a::b(cpb, gw) -> int
fifo write: @1699477129827039521 0x7f81e2ea571c 2695: biq::bj() -> boolean
fifo write: @1699477129831020162 0x7f81e2ea73bf 39420: bjg::aq() -> void
fifo write: @1699477129831098933 0x7f81ea3ff407 78: java.util.ImmutableCollections$Set12::iterator() -> java.util.Iterator
fifo write: @1699477129834222043 0x7f81ea3ff7e0 103: biq::cW() -> boolean
fifo write: @1699477129834738830 0x7f81e200ad74 161: cbu::cy() -> boolean
fifo write: @1699477129836873537 0x7f81e2eb626e 13482: com.google.common.cache.LocalCache$Segment::reclaimKey(com.google.common.cache.ReferenceEntry, int) -> boolean
fifo write: @1699477129860000005 0x7f81ea3ffd36 10325: eaa::a(ead) -> void
fifo write: @1699477129862433506 0x7f81ea406648 871: dzw::a(cpb, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477129863102255 0x7f81e980c8e4 233: eid::b(eig, eig) -> boolean
fifo write: @1699477129865171891 0x7f81e2ebc59c 12858: biq::aq() -> void
fifo write: @1699477129865703318 0x7f81e9cf191e 833: cel::a(int, cjf, java.util.function.Supplier) -> void
fifo write: @1699477129867387340 0x7f81ea407a10 11191: bjg::b_() -> void
fifo write: @1699477129867627633 0x7f81ea314a59 3471: com.mojang.serialization.MapCodec$1::toString() -> String
fifo write: @1699477129868346912 0x7f81e2ec147c 3369: cbt::j() -> void
fifo write: @1699477129869494037 0x7f81ea311de1 547: java.util.AbstractCollection::remove(Object) -> boolean
fifo write: @1699477129872594917 0x7f81e9afc80f 1034: cpw::a(gw, eal, int) -> void
fifo write: @1699477129874692104 0x7f81e9a3ab38 603: eak::a(eam, cpb, gw) -> float
fifo write: @1699477129881674634 0x7f81e9ca0a43 3516: dzw::a(dhf, int, int, int) -> int
fifo write: @1699477129883799532 0x7f81e2732aba 3463: biu::a(qw) -> java.util.Optional
fifo write: @1699477129883961144 0x7f81e2a5dee4 6076: biu::a(qw, cpv) -> java.util.Optional
fifo write: @1699477129895980798 0x7f81ea410993 8368: dzy::b(int) -> int
fifo write: @1699477129905909286 0x7f81e9c9a514 2115: ako::s() -> boolean
fifo write: @1699477129908322617 0x7f81ea41625c 6376: aki$c::a() -> void
fifo write: @1699477129919845175 0x7f81e9afc3cc 6: dgn::c() -> String
fifo write: @1699477129920500484 0x7f81e16db234 820: it.unimi.dsi.fastutil.longs.AbstractLongCollection::toLongArray() -> long[]
fifo write: @1699477129920666136 0x7f81e1d57079 88: it.unimi.dsi.fastutil.longs.LongIterators::unwrap(it.unimi.dsi.fastutil.longs.LongIterator, long[]) -> int
fifo write: @1699477129920744697 0x7f81e14d9ba3 1527: it.unimi.dsi.fastutil.longs.LongIterators::unwrap(it.unimi.dsi.fastutil.longs.LongIterator, long[], int, int) -> int
fifo write: @1699477129925234375 0x7f81e2720d14 79: io.netty.channel.AbstractChannelHandlerContext::fireChannelReadComplete() -> io.netty.channel.ChannelHandlerContext
fifo write: @1699477129927370053 0x7f81ea41af33 15641: akw::a() -> void
fifo write: @1699477129927598156 0x7f81ea425488 3283: sq::a(io.netty.channel.ChannelHandlerContext, vd, java.util.List) -> void
fifo write: @1699477129933907056 0x7f81e28d2594 93: cpc::b(cpc) -> int
fifo write: @1699477129933975497 0x7f81e1fc1c74 387: all::a(cpc, dhq) -> int
fifo write: @1699477129934050198 0x7f81e23112b4 733: all$$Lambda$7823.0x00007f8160c87150::applyAsInt(Object) -> int
fifo write: @1699477129964255997 0x7f81ea427ec6 12105: io.netty.handler.codec.MessageToMessageEncoder::write(io.netty.channel.ChannelHandlerContext, Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477129964727263 0x7f81ea2ff609 382: com.mojang.serialization.codecs.KeyDispatchCodec$$Lambda$5281.0x00007f81609bdca0::<init>(com.mojang.serialization.codecs.KeyDispatchCodec, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477129973716199 0x7f81e9c9eeaf 1890: aka$b$$Lambda$7309.0x00007f8160bcbd30::accept(Object) -> void
fifo write: @1699477129983993791 0x7f81ea430b3f 31408: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477129997239962 0x7f81ea4491af 17634: com.mojang.serialization.codecs.KeyDispatchCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477130002472299 0x7f81e9a3a7cc 6: io.netty.channel.AbstractChannel::pipeline() -> io.netty.channel.ChannelPipeline
fifo write: @1699477130002650081 0x7f81e8bf7ec8 27: vtable stub
fifo write: @1699477130015777761 0x7f81e9a3a44c 6: ake$a::a() -> cpc
fifo write: @1699477130023018264 0x7f81e2de80f7 108: ead$a::a(int, boolean) -> long
fifo write: @1699477130024964659 0x7f81e2ec38bf 39834: bjg::h(ehn) -> void
fifo write: @1699477130028593645 0x7f81ea2b5397 17326: bsp::c() -> void
fifo write: @1699477130064416247 0x7f81e28616d9 630: dho::a(Object) -> int
fifo write: @1699477130064841762 0x7f81e9c53b5b 36: czw::a(cbu, cpb, gw, dfj, eal) -> boolean
fifo write: @1699477130070354683 0x7f81e9fc2480 37: bzi::gi() -> void
fifo write: @1699477130072326338 0x7f81e980b5b7 668: bzi::b_() -> void
fifo write: @1699477130073117079 0x7f81e1b8bf94 355: io.netty.channel.AbstractChannel::flush() -> io.netty.channel.Channel
fifo write: @1699477130073167029 0x7f81e1ba4d94 237: io.netty.channel.DefaultChannelPipeline::flush() -> io.netty.channel.ChannelPipeline
fifo write: @1699477130121538002 0x7f81e1a15e14 601: cjf::g() -> int
fifo write: @1699477130143968861 0x7f81e9f05067 22036: biq::a(bjm, ehn) -> void
fifo write: @1699477130172901244 0x7f81e9af3b21 566: cpf::h(biq, ehi) -> eig
fifo write: @1699477130210699680 0x7f81e2332319 931: tc::a(io.netty.buffer.ByteBuf) -> int
fifo write: @1699477130215145227 0x7f81e14e6563 1109: eap::a(cpy, gw) -> boolean
fifo write: @1699477130216252362 0x7f81e2a6f32f 3694: cyl::b(dfj, akq, gw, asc) -> void
fifo write: @1699477130218780164 0x7f81e27390d8 16916: cyl::a(dfj, akq, gw, float) -> void
fifo write: @1699477130220883241 0x7f81ea2b40e7 699: cpv::a(djh, ehi, java.util.function.Predicate) -> java.util.List
fifo write: @1699477130221374288 0x7f81ea313560 1339: bus$a::a() -> boolean
fifo write: @1699477130246441920 0x7f81e9a22019 7483: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477130255445296 0x7f81e8bf7ef8 27: vtable stub
fifo write: @1699477130266673541 0x7f81ea312f4c 6: cel::g() -> cjf
fifo write: @1699477130279394954 0x7f81e9f01055 5157: cpf::a(biq, ehi) -> boolean
fifo write: @1699477130314168522 0x7f81e9fc215b 19: eap::a(eal) -> boolean
fifo write: @1699477130320544114 0x7f81e9fc1dcc 4: cbr::a() -> float
fifo write: @1699477130322322807 0x7f81e19691f4 90: io.netty.channel.AbstractChannelHandlerContext::isRemoved() -> boolean
fifo write: @1699477130365667765 0x7f81ea2b3d4c 2: ake$a::b() -> int
fifo write: @1699477130367079893 0x7f81ea2b37d0 83: brt::a() -> boolean
fifo write: @1699477130370894002 0x7f81e200a734 500: cbu::gj() -> qw
fifo write: @1699477130370971843 0x7f81e215b0b4 500: cbu::gi() -> qw
fifo write: @1699477130371219717 0x7f81e2218eb4 749: cbu::a(bjs) -> bir
fifo write: @1699477130371258877 0x7f81e9b3514c 6: akr::K() -> long
fifo write: @1699477130371348608 0x7f81e2049a99 2232: cbu::gc() -> boolean
fifo write: @1699477130371405939 0x7f81e9b34e4c 2: net.minecraft.server.MinecraftServer::al() -> int
fifo write: @1699477130371486230 0x7f81e25af89f 1719: cbu::g(bjs) -> boolean
fifo write: @1699477130372733046 0x7f81e2780667 7409: cbu::k(qw) -> void
fifo write: @1699477130372941989 0x7f81e2b7b35f 7110: cbu::c(qw) -> void
fifo write: @1699477130410215368 0x7f81e1d46274 90: io.netty.channel.DefaultChannelConfig::isAutoRead() -> boolean
fifo write: @1699477130415786370 0x7f81ea14e918 8808: cw::a(akr, java.util.function.Predicate) -> void
fifo write: @1699477130416018133 0x7f81ea13bed3 676: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::fixPointers(int, int) -> void
fifo write: @1699477130421978070 0x7f81e9b3484f 258: dzx::c() -> void
fifo write: @1699477130454366737 0x7f81e29029a2 768: io.netty.handler.codec.ByteToMessageDecoder::fireChannelRead(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.CodecOutputList, int) -> void
fifo write: @1699477130454493988 0x7f81e272a323 1539: io.netty.handler.codec.ByteToMessageDecoder::decodeRemovalReentryProtection(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) -> void
fifo write: @1699477130454591830 0x7f81e2256b14 147: io.netty.channel.unix.IovArray::memoryAddress(int) -> long
fifo write: @1699477130454648790 0x7f81e1969e94 290: io.netty.channel.unix.IovArray::maxBytes(long) -> void
fifo write: @1699477130454705641 0x7f81e2854d34 165: io.netty.channel.unix.FileDescriptor::writevAddresses(long, int) -> long
fifo write: @1699477130454777012 0x7f81e1f4fcb7 722: io.netty.channel.epoll.AbstractEpollStreamChannel::adjustMaxBytesPerGatheringWrite(long, long, long) -> void
fifo write: @1699477130454874223 0x7f81e2d74fdf 668: io.netty.channel.epoll.AbstractEpollStreamChannel::writeBytesMultiple(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.unix.IovArray) -> int
fifo write: @1699477130454953014 0x7f81e291b477 1276: io.netty.channel.epoll.EpollEventLoop::cleanIovArray() -> io.netty.channel.unix.IovArray
fifo write: @1699477130455029555 0x7f81e224d817 1613: io.netty.util.internal.ObjectUtil::checkPositive(long, String) -> long
fifo write: @1699477130470501115 0x7f81e2de6234 2137: csl::g(dfj) -> boolean
fifo write: @1699477130470556705 0x7f81e29eb594 832: cdl::a(dgn) -> com.mojang.datafixers.util.Pair
fifo write: @1699477130515312922 0x7f81ea13b6db 132: dfi$a::b(akq, gw, asc) -> void
fifo write: @1699477130520810162 0x7f81ea13b30f 62: java.util.PriorityQueue::iterator() -> java.util.Iterator
fifo write: @1699477130559265178 0x7f81e2a205be 3625: io.netty.handler.codec.ByteToMessageDecoder$1::cumulate(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) -> io.netty.buffer.ByteBuf
fifo write: @1699477130559400550 0x7f81e229bb8b 3898: io.netty.handler.codec.ByteToMessageDecoder::callDecode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) -> void
fifo write: @1699477130562709062 0x7f81e2b4736f 12024: io.netty.handler.codec.ByteToMessageDecoder::channelRead(io.netty.channel.ChannelHandlerContext, Object) -> void
fifo write: @1699477130569467949 0x7f81e26e721f 7877: bsp::c() -> void
fifo write: @1699477130569517159 0x7f81e9a73450 331: bqw::e() -> void
fifo write: @1699477130601652943 0x7f81e1c4f114 240: io.netty.channel.RecvByteBufAllocator$DelegatingHandle::lastBytesRead() -> int
fifo write: @1699477130601674994 0x7f81e8bf7f28 27: vtable stub
fifo write: @1699477130614062733 0x7f81ea111098 8784: cw::a(akr, java.util.function.Predicate) -> void
fifo write: @1699477130614982395 0x7f81e9a72d53 328: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477130621598410 0x7f81e284dbdf 5012: bpd::a() -> void
fifo write: @1699477130622303589 0x7f81e2691a17 2493: byn::H() -> boolean
fifo write: @1699477130670377898 0x7f81e2763b97 1809: apm::b(Object) -> apk
fifo write: @1699477130675055238 0x7f81e9debf36 1965: biq::bj() -> boolean
fifo write: @1699477130706058097 0x7f81e2732237 678: io.netty.buffer.PooledUnsafeDirectByteBuf::_getByte(int) -> byte
fifo write: @1699477130706165669 0x7f81e1dd14be 2431: io.netty.handler.codec.ByteToMessageDecoder::channelReadComplete(io.netty.channel.ChannelHandlerContext) -> void
fifo write: @1699477130718241514 0x7f81e9deb9cc 4: csv::j() -> float
fifo write: @1699477130719162746 0x7f81ea13ac50 87: hy::i(hy) -> int
fifo write: @1699477130763928213 0x7f81e9a729b6 15: io.netty.buffer.PooledByteBuf::reuse(int) -> void
fifo write: @1699477130768961427 0x7f81e1db4694 87: bty$$Lambda$7370.0x00007f8160bdfa00::get() -> Object
fifo write: @1699477130770052091 0x7f81e20144a6 9804: bty::a(bjp, int, int, double, double, float, boolean, int, int) -> gw
fifo write: @1699477130772467352 0x7f81e27abd19 1174: bjg::eW() -> float
fifo write: @1699477130815968392 0x7f81e14046be 2115: aau::a(so) -> void
fifo write: @1699477130818928970 0x7f81e223bbb4 764: bzt$a::a() -> boolean
fifo write: @1699477130836051211 0x7f81ea17ed77 4014: aka::l() -> void
fifo write: @1699477130867307443 0x7f81e2979294 31: aki$b::a() -> void
fifo write: @1699477130869979678 0x7f81e14d0781 1120: io.netty.buffer.PoolChunk::collapseNext(long) -> long
fifo write: @1699477130870026958 0x7f81e2046001 1120: io.netty.buffer.PoolChunk::collapsePast(long) -> long
fifo write: @1699477130871081722 0x7f81e9811bd3 760: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::removeEntry(int) -> byte
fifo write: @1699477130872869545 0x7f81e9a71c70 679: aki$b::b(long) -> int
fifo write: @1699477130873785397 0x7f81e9a49b15 1986: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::remove(long) -> byte
fifo write: @1699477130874408285 0x7f81e9eaaef0 683: aki$b::d(long) -> boolean
fifo write: @1699477130874875161 0x7f81ea2041d3 436: it.unimi.dsi.fastutil.longs.Long2IntFunctions$SynchronizedFunction::defaultReturnValue() -> int
fifo write: @1699477130875774803 0x7f81e9dbcbf0 1087: aki$c$$Lambda$7768.0x00007f8160c78258::getAsInt() -> int
fifo write: @1699477130877731438 0x7f81e974b07b 1433: it.unimi.dsi.fastutil.longs.Long2IntFunctions$SynchronizedFunction::put(long, int) -> int
fifo write: @1699477130878988364 0x7f81e2468383 1774: it.unimi.dsi.fastutil.longs.LongOpenHashSet::rehash(int) -> void
fifo write: @1699477130879288287 0x7f81e24ab8a7 8891: aki::a(aka) -> boolean
fifo write: @1699477130884740178 0x7f81e9ed8a60 10748: bjg::l() -> void
fifo write: @1699477130884799708 0x7f81ea17e8d8 18: aki$b::a() -> void
fifo write: @1699477130886813754 0x7f81e282255c 3645: bkk::a(qw) -> bkk
fifo write: @1699477130887568394 0x7f81e193b574 225: bsp::a(boolean) -> void
fifo write: @1699477130887887668 0x7f81e220f654 953: bji::t(boolean) -> void
fifo write: @1699477130888038960 0x7f81e199d214 185: brj$$Lambda$7226.0x00007f8160bb0bc0::<init>(brj) -> void
fifo write: @1699477130888093741 0x7f81e27bc937 1022: bts::c() -> bts
fifo write: @1699477130888933002 0x7f81e296aabc 3226: brj::<init>(bjp, double, cmg, boolean) -> void
fifo write: @1699477130889017223 0x7f81e2261f14 578: biu$$Lambda$7228.0x00007f8160bb1070::accept(Object) -> void
fifo write: @1699477130889088954 0x7f81e1ec4d77 229: biu::a(qw, biq) -> void
fifo write: @1699477130889176445 0x7f81e1c40f99 359: biu$$Lambda$7236.0x00007f8160bb2fb8::apply(Object) -> Object
fifo write: @1699477130889234566 0x7f81e2862c94 591: biu$1$$Lambda$7217.0x00007f8160ba8f08::apply(Object) -> Object
fifo write: @1699477130889286156 0x7f81e2321874 245: biu$1::a(java.util.function.Consumer, biq) -> biq
fifo write: @1699477130890658664 0x7f81e29231e7 20490: bjg::a(qw) -> void
fifo write: @1699477130890790266 0x7f81e277090f 6489: biu::a(qw, cpv, java.util.function.Function, biq) -> biq
fifo write: @1699477130900409009 0x7f81e9d57dd2 6994: akc$$Lambda$5458.0x00007f8160a7c588::run() -> void
fifo write: @1699477130903479009 0x7f81e974accc 6: io.netty.channel.DefaultChannelPipeline::voidPromise() -> io.netty.channel.ChannelPromise
fifo write: @1699477130910502789 0x7f81ea293ed0 8419: biq::aq() -> void
fifo write: @1699477130913076583 0x7f81ea131601 7771: akc::a(java.util.function.IntSupplier, cpc, int, java.util.function.IntConsumer) -> void
fifo write: @1699477130914058035 0x7f81e980f050 43: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::isEmpty() -> boolean
fifo write: @1699477130915584875 0x7f81e246a427 6881: dhy::a(dhy$c, int) -> dhy$c
fifo write: @1699477130917285977 0x7f81e24aa634 875: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::fixPointers(int) -> void
fifo write: @1699477130917341458 0x7f81e16498d4 921: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::removeEntry(int) -> Object
fifo write: @1699477130919426345 0x7f81ea277e74 5766: buw::b_() -> void
fifo write: @1699477130919898751 0x7f81e2268cd4 80: eaa$a::a(byte, boolean) -> byte
fifo write: @1699477130920407207 0x7f81e226fc74 964: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::remove(long) -> Object
fifo write: @1699477130920469778 0x7f81e28bab0e 3278: eaa::d(long, boolean) -> void
fifo write: @1699477130920523879 0x7f81ea130b7a 364: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::remove(long) -> Object
fifo write: @1699477130920653350 0x7f81e9cf3b13 1388: dho::a(Object) -> int
fifo write: @1699477130920800162 0x7f81e2a92c14 428: it.unimi.dsi.fastutil.longs.Long2ObjectFunctions$SynchronizedFunction::remove(long) -> Object
fifo write: @1699477130920856023 0x7f81e9dbc850 47: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::keySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477130924209566 0x7f81e28ea9b1 465: hr::d(aev) -> hq
fifo write: @1699477130924431508 0x7f81ea09c9f3 3859: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::remove(Object) -> boolean
fifo write: @1699477130925691225 0x7f81e2afec31 697: hr$c::c(aev) -> java.util.Optional
fifo write: @1699477130926357653 0x7f81e1daf2bd 934: qw::a(String, long) -> void
fifo write: @1699477130935774035 0x7f81e1f4a814 324: dva$$Lambda$7084.0x00007f8160a6ae28::apply(Object) -> Object
fifo write: @1699477130935868566 0x7f81e2b51a97 599: com.mojang.serialization.Codec$18::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477130935938487 0x7f81e1531c97 406: java.util.stream.IntStream::of(int[]) -> java.util.stream.IntStream
fifo write: @1699477130936009818 0x7f81e249639a 702: dva::c(dva) -> java.util.stream.IntStream
fifo write: @1699477130936125149 0x7f81e1fae839 933: java.util.Spliterators$IntArraySpliterator::forEachRemaining(java.util.function.IntConsumer) -> void
fifo write: @1699477130936234421 0x7f81e23f0397 237: com.mojang.serialization.Codec$18::write(com.mojang.serialization.DynamicOps, java.util.stream.IntStream) -> Object
fifo write: @1699477130936289932 0x7f81e2439a94 185: dvm$$Lambda$7390.0x00007f8160be1d80::<init>(org.slf4j.Logger) -> void
fifo write: @1699477130936338882 0x7f81e2444114 185: dvm$$Lambda$7391.0x00007f8160be8000::<init>(qw) -> void
fifo write: @1699477130936419503 0x7f81e2282317 641: dvm::a(qw, rq) -> void
fifo write: @1699477130936524945 0x7f81e24a4334 1030: dvm$$Lambda$7391.0x00007f8160be8000::accept(Object) -> void
fifo write: @1699477130936627916 0x7f81e25e04ba 2194: ri::createIntList(java.util.stream.IntStream) -> Object
fifo write: @1699477130936813598 0x7f81e28510ea 1983: ri::a(java.util.stream.IntStream) -> rq
fifo write: @1699477130939663685 0x7f81e19ba416 18798: dvm::a(dvy) -> qw
fifo write: @1699477130939734376 0x7f81e2352494 637: it.unimi.dsi.fastutil.shorts.ShortArrayList::listIterator(int) -> it.unimi.dsi.fastutil.shorts.ShortListIterator
fifo write: @1699477130941932204 0x7f81e8bf7f58 27: vtable stub
fifo write: @1699477130944189073 0x7f81e2444c16 181: cpm::a_(biq, ehi) -> java.util.List
fifo write: @1699477130944853312 0x7f81e2a2ca94 93: djf$$Lambda$7308.0x00007f8160bc9d60::get(long) -> Object
fifo write: @1699477130944890802 0x7f81e19b98f4 288: djf::f(long) -> long
fifo write: @1699477130944940523 0x7f81e1845f97 431: dje::<init>(Class, djn) -> void
fifo write: @1699477130945084525 0x7f81e28650fc 1647: djf::g(long) -> dje
fifo write: @1699477130945208007 0x7f81e2a2577d 1708: aqs::<init>(Class) -> void
fifo write: @1699477130945419279 0x7f81e24a65b4 523: biq::aS() -> boolean
fifo write: @1699477130966118665 0x7f81ea3a0f24 13781: eab::a(cqe, hw, dhl) -> void
fifo write: @1699477130974613585 0x7f81e26eee97 164: biq::j(boolean) -> void
fifo write: @1699477130974790747 0x7f81e25cb954 681: bjg::ep() -> void
fifo write: @1699477130975063850 0x7f81e278755c 3367: bjg::H() -> void
fifo write: @1699477130991045466 0x7f81ea1a439a 15737: eab::a(hw, boolean) -> void
fifo write: @1699477131009274211 0x7f81e9d02456 10756: dhy$$Lambda$7048.0x00007f8160b83218::apply(Object) -> Object
fifo write: @1699477131020052600 0x7f81e2013d97 208: cpm::a(Class, ehi, java.util.function.Predicate) -> java.util.List
fifo write: @1699477131035718341 0x7f81ea2a835f 10671: dhy::a(hj, dhy$d) -> dhz$a
fifo write: @1699477131037892699 0x7f81e9b52f74 8573: cmg::a() -> cjf[]
fifo write: @1699477131039870685 0x7f81e9d2981f 872: cel::b(int, cjf, java.util.function.Supplier) -> void
fifo write: @1699477131046539331 0x7f81e9e86c38 3075: bkj::c(bkh) -> double
fifo write: @1699477131053297138 0x7f81e915899d 6477: eaa::a(long, dhl) -> void
fifo write: @1699477131068121139 0x7f81e1e54034 691: cac::gn() -> boolean
fifo write: @1699477131068348062 0x7f81e1db565c 3058: cac::l() -> void
fifo write: @1699477131075525384 0x7f81e23c97b9 655: ra::a(java.io.DataOutput) -> void
fifo write: @1699477131088925976 0x7f81e9ee6099 4779: aki::a(aka) -> boolean
fifo write: @1699477131121177942 0x7f81e2970794 2182: eak::a(cpb, gw, ha) -> boolean
fifo write: @1699477131129156894 0x7f81e9618856 5168: cpf::a(biq, ehi) -> boolean
fifo write: @1699477131136600530 0x7f81e9f826c1 5164: dhg::a(he, cqn, bjj, gw) -> bfm
fifo write: @1699477131142838641 0x7f81ea2764b9 2042: cnq::a(cno, bjg) -> int
fifo write: @1699477131148213159 0x7f81ea454bc1 28260: dig::a(akq, dhf) -> qw
fifo write: @1699477131166864750 0x7f81e145e061 2505: zi::a(so) -> void
fifo write: @1699477131166967741 0x7f81e2855dfd 3691: zi::a(java.util.function.BiConsumer) -> void
fifo write: @1699477131176516584 0x7f81e9dfe33f 14418: bjg::aq() -> void
fifo write: @1699477131217305549 0x7f81ea29376c 18: gu$3::a(int, int, int, ha$a) -> int
fifo write: @1699477131265600571 0x7f81e24b0cff 4473: cqg::a(cpb, gw, dfj, eam, biu) -> boolean
fifo write: @1699477131265826394 0x7f81e2700f37 939: cqg::a(akq, cqn, dhg, bjj, gw, he) -> bfm
fifo write: @1699477131269218258 0x7f81e260f994 647: bwq::bs() -> boolean
fifo write: @1699477131278585388 0x7f81ea1a3c14 1: Double::isNaN(double) -> boolean
fifo write: @1699477131305482404 0x7f81ea0bfea8 12339: bjg::h(ehn) -> void
fifo write: @1699477131316046600 0x7f81e9ed7fd0 111: eam::f() -> boolean
fifo write: @1699477131317198285 0x7f81e2df28ee 18517: akq::a(dhq, int) -> void
fifo write: @1699477131321284488 0x7f81e297bbb7 1046: biq::bW() -> boolean
fifo write: @1699477131365254084 0x7f81e2c00c97 2323: bfl::a(java.util.List, int) -> java.util.Optional
fifo write: @1699477131419907267 0x7f81e277ff94 185: bit$$Lambda$7820.0x00007f8160c866b0::<init>(biq) -> void
fifo write: @1699477131419994068 0x7f81e26f5c34 1290: bit$$Lambda$7820.0x00007f8160c866b0::test(Object) -> boolean
fifo write: @1699477131420070279 0x7f81e22d1c57 1542: bqj::a(bji, bjg) -> boolean
fifo write: @1699477131420123360 0x7f81e2a1cdf4 955: bit::a(biq, biq) -> boolean
fifo write: @1699477131420187561 0x7f81e1c75737 1171: bit::b(biq) -> java.util.function.Predicate
fifo write: @1699477131420252442 0x7f81e2d99d97 1883: bqj$$Lambda$7227.0x00007f8160bb0e18::test(Object) -> boolean
fifo write: @1699477131460663232 0x7f81e1e6fdaf 310: jdk.internal.misc.Unsafe::getAndSetInt(Object, long, int) -> int
fifo write: @1699477131471466251 0x7f81e91585ac 33: bus::y(bus) -> asc
fifo write: @1699477131521153091 0x7f81e2e7755f 10046: cdl::q(double, double, double) -> ehn
fifo write: @1699477131549582237 0x7f81ea0743f6 27796: akq::a(dhq, int) -> void
fifo write: @1699477131551898046 0x7f81ea2757d3 1052: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477131570953582 0x7f81e8bf7f88 27: vtable stub
fifo write: @1699477131602925634 0x7f81ea03e4b6 10303: byn::l() -> void
fifo write: @1699477131602964814 0x7f81e915824c 2: io.netty.buffer.PooledHeapByteBuf::arrayOffset() -> int
fifo write: @1699477131603032715 0x7f81e1dada59 1500: io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe::recvBufAllocHandle() -> io.netty.channel.epoll.EpollRecvByteAllocatorHandle
fifo write: @1699477131615210111 0x7f81e2be5954 4487: biu::a(dfj) -> boolean
fifo write: @1699477131618880229 0x7f81e922e553 44: akq::f() -> afn
fifo write: @1699477131665059343 0x7f81e1478057 1646: coy::a(cqe, gw) -> int
fifo write: @1699477131669148236 0x7f81e2559a7f 5037: bus$k::e() -> void
fifo write: @1699477131669785944 0x7f81e922e1cc 6: akr::M() -> boolean
fifo write: @1699477131669920456 0x7f81ea3a0a4c 3: aby::a() -> boolean
fifo write: @1699477131677560504 0x7f81ea1bec0a 2593: bpd::a() -> void
fifo write: @1699477131711831836 0x7f81e1e3efb4 366: io.netty.util.Recycler$DefaultHandle::recycle(Object) -> void
fifo write: @1699477131711893286 0x7f81e2282e94 332: java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl::getAndSet(Object, int) -> int
fifo write: @1699477131711938717 0x7f81e2a81d59 1059: aka$b::a(java.util.List) -> void
fifo write: @1699477131715952789 0x7f81e16e7941 4590: bpv::<init>(bji) -> void
fifo write: @1699477131720910862 0x7f81e9bb1f33 2560: it.unimi.dsi.fastutil.objects.Object2ByteLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477131811701911 0x7f81e272da65 2410: com.sun.crypto.provider.CipherFeedback::decrypt(byte[], int, int, byte[], int) -> int
fifo write: @1699477131811758792 0x7f81e294ef14 285: io.netty.channel.ChannelOutboundHandlerAdapter::flush(io.netty.channel.ChannelHandlerContext) -> void
fifo write: @1699477131819359200 0x7f81e2313e94 356: biu::a(aqh) -> boolean
fifo write: @1699477131822493820 0x7f81e9d28559 1070: aka::l() -> void
fifo write: @1699477131827905300 0x7f81e2ae1354 205: cmg::b(int) -> cmg$c[]
fifo write: @1699477131827965781 0x7f81e2863714 296: cmg$$Lambda$1541.0x00007f81605970f0::apply(int) -> Object
fifo write: @1699477131828027132 0x7f81e8bf7fb8 27: vtable stub
fifo write: @1699477131828128243 0x7f81e2485277 1419: cmg::<init>(java.util.stream.Stream) -> void
fifo write: @1699477131828338776 0x7f81e1b9b1ca 1810: cmg::b(java.util.stream.Stream) -> cmg
fifo write: @1699477131830206709 0x7f81e16e7494 66: biq::a(bjs, bir) -> float
fifo write: @1699477131835715290 0x7f81e238c134 353: io.netty.util.Recycler$DefaultHandle::toAvailable() -> void
fifo write: @1699477131864771734 0x7f81e27071dc 3415: eap::a(cpw, gw, dfj, ha, eam) -> void
fifo write: @1699477131876165581 0x7f81e262be94 361: akq$$Lambda$7306.0x00007f8160bc4da0::accept(Object) -> void
fifo write: @1699477131914816319 0x7f81e27297d7 1186: eap::b(eam) -> dfj
fifo write: @1699477131940762613 0x7f81ea248397 17246: bsp::c() -> void
fifo write: @1699477131942704078 0x7f81ea02b81d 7114: eaa::d(long, boolean) -> void
fifo write: @1699477131944087505 0x7f81ea14d814 986: net.minecraft.server.MinecraftServer::bg() -> boolean
fifo write: @1699477131944365529 0x7f81e9cf2cf0 695: aki$a::b(long) -> int
fifo write: @1699477131947470729 0x7f81ea14c453 1272: bus::a() -> int
fifo write: @1699477131970788709 0x7f81e26d50f4 217: Math::round(float) -> int
fifo write: @1699477132018735516 0x7f81ea14bdd3 136: akq::i(biq) -> boolean
fifo write: @1699477132023718861 0x7f81ea2a6c5d 1301: cpv::a(java.util.function.Consumer, biq) -> void
fifo write: @1699477132024396289 0x7f81ea2a5a10 1125: akq$$Lambda$7330.0x00007f8160bd5a18::accept(Object) -> void
fifo write: @1699477132027712832 0x7f81e9b8ab9c 1001: akq::a(biq) -> void
fifo write: @1699477132035912787 0x7f81e2730c14 289: dkm$o::<init>(dkl$c, double, double) -> void
fifo write: @1699477132037628819 0x7f81e2b8af37 931: dkm$o::a(dkl$f) -> dkl
fifo write: @1699477132037950444 0x7f81e24711e7 6124: dkm$o::equals(Object) -> boolean
fifo write: @1699477132076512150 0x7f81e9d9bd78 12544: ara$e::a(asv, float[], java.util.List, float[]) -> ara$e
fifo write: @1699477132079520739 0x7f81e9b898f8 835: dkm$n::equals(Object) -> boolean
fifo write: @1699477132081854999 0x7f81e9dfcfd8 447: dkm$t::equals(Object) -> boolean
fifo write: @1699477132086313556 0x7f81e9d1e878 1175: dkm$v::equals(Object) -> boolean
fifo write: @1699477132086348047 0x7f81ea2a5650 63: dkm$v::b() -> double
fifo write: @1699477132086561610 0x7f81e9d0194e 28: dke$c::b(int) -> int
fifo write: @1699477132091405672 0x7f81e9d90dd6 16596: ead::d() -> int
fifo write: @1699477132091457213 0x7f81e9bb1996 416: dkm$n::<init>(dkm$n$a, dkl, double, double, double) -> void
fifo write: @1699477132091492353 0x7f81e9bb1492 109: Float::compare(float, float) -> int
fifo write: @1699477132091534884 0x7f81e9f820d3 144: java.util.AbstractList$RandomAccessSpliterator::estimateSize() -> long
fifo write: @1699477132092212293 0x7f81e1ea06d4 390: dkm$o::a() -> double
fifo write: @1699477132092493796 0x7f81e9f81a5e 249: java.lang.invoke.LambdaForm$MH.0x00007f8160a44000::invoke(Object, Object, Object) -> int
fifo write: @1699477132092819370 0x7f81e96182b2 121: java.lang.runtime.ObjectMethods::eq(float, float) -> boolean
fifo write: @1699477132093133014 0x7f81e9617eb9 94: java.lang.invoke.LambdaForm$DMH.0x00007f816024f400::invokeStatic(Object, float, float) -> int
fifo write: @1699477132095310592 0x7f81e9d8f4cc 2325: dkm$y::a(dkm$y$a, dkl, dkl) -> dkm$y
fifo write: @1699477132096925873 0x7f81ea10f980 1791: dkm$q::a(dkl$b) -> double
fifo write: @1699477132103291395 0x7f81e26056ef 3025: dke$c::b(int, int, int) -> dke$b
fifo write: @1699477132105015717 0x7f81e28be414 248: dkw::e() -> dfj
fifo write: @1699477132108872077 0x7f81e2b65514 93: dkw$$Lambda$8068.0x00007f8160cc2cb8::get(long) -> int
fifo write: @1699477132109900470 0x7f81e981c975 3978: dhy$c::a(dhw, aqp) -> void
fifo write: @1699477132110064682 0x7f81e9617b4f 60: cpx::r(gw) -> boolean
fifo write: @1699477132110384036 0x7f81e9617756 89: dkw::e() -> dfj
fifo write: @1699477132113023980 0x7f81e9d1dbd2 809: dkw::a(int, double) -> void
fifo write: @1699477132113328244 0x7f81e981c470 115: dlt::i() -> float
fifo write: @1699477132115315640 0x7f81e2254c54 560: dia::j(gw) -> short
fifo write: @1699477132115763176 0x7f81e2de2b47 5352: dia::e(gw) -> void
fifo write: @1699477132124861152 0x7f81e2740b94 324: dlj$w::<init>(dlj$e, dlj$u) -> void
fifo write: @1699477132124936963 0x7f81e27a4014 324: dlj$x::apply(Object) -> Object
fifo write: @1699477132124978454 0x7f81e285a814 389: dlj$i::<init>(dlj$g) -> void
fifo write: @1699477132125023485 0x7f81e2369f2d 1410: dlj$x::a(dlj$g) -> dlj$u
fifo write: @1699477132125054655 0x7f81e28c5694 190: dlj$g$a::b() -> boolean
fifo write: @1699477132126415463 0x7f81e981bfd0 127: dlj$z$a::a() -> boolean
fifo write: @1699477132126874648 0x7f81e2bd20df 13328: dlk::a(dlg, cqv, hq, boolean, dlp, dhf, dkw, dlj$o) -> void
fifo write: @1699477132128367478 0x7f81e2866c94 152: dlj$g::a(int, int) -> void
fifo write: @1699477132131204624 0x7f81ea469c91 11093: dkv::a(dlu, cqn, dlg, dhf, int, int) -> dhf
fifo write: @1699477132133414873 0x7f81ea10e8b0 1067: dlj$g$a::b() -> boolean
fifo write: @1699477132135194806 0x7f81e28e94a0 51: dmu$$Lambda$8081.0x00007f8160ccd5d0::shouldSkip(dms, double, double, double, int) -> boolean
fifo write: @1699477132135231786 0x7f81e29e9814 275: dmu::a(double, double, double, double) -> boolean
fifo write: @1699477132135268107 0x7f81e2902078 43: dmu::a(double, dms, double, double, double, int) -> boolean
fifo write: @1699477132135298477 0x7f81e1ec58f4 2: dhe::c(int, int, int) -> int
fifo write: @1699477132135637402 0x7f81e186d6bd 8108: dmu::a(dms, dmt, dhf, java.util.function.Function, long, dke, double, double, double, double, double, float, float, float, int, int, double, dhe, dmx$a) -> void
fifo write: @1699477132135925815 0x7f81ea10e24c 3: dmr::a() -> boolean
fifo write: @1699477132135973176 0x7f81e2904394 139: dhe$$Lambda$8077.0x00007f8160cccb20::test(int, int, int) -> boolean
fifo write: @1699477132136079617 0x7f81e24caa34 609: dhe::b(int, int, int) -> boolean
fifo write: @1699477132136187109 0x7f81e2a1f9d4 99: dmx::b(dmq) -> boolean
fifo write: @1699477132136280870 0x7f81e2a5d794 217: dhe::a(int, int, int) -> void
fifo write: @1699477132136510083 0x7f81e2c6f334 1128: dmx::a(dmq, dfj) -> boolean
fifo write: @1699477132136836747 0x7f81e2968f57 2815: dmx::a(dms, dmq, gw, dke) -> dfj
fifo write: @1699477132137173921 0x7f81ea0bc83d 3953: dia::a(gw, dfj, boolean) -> dfj
fifo write: @1699477132137311773 0x7f81e291f684 8129: dmx::a(dms, dmq, dhf, java.util.function.Function, dhe, gw$a, gw$a, dke, org.apache.commons.lang3.mutable.MutableBoolean) -> boolean
fifo write: @1699477132137656687 0x7f81e2db11f9 1099: dmu::a(asc) -> float
fifo write: @1699477132137949711 0x7f81e21a7b1f 6454: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477132138001012 0x7f81e9d1d270 243: dlj$g$$Lambda$8073.0x00007f8160ccc228::get() -> Object
fifo write: @1699477132138637890 0x7f81e9d8ee73 204: dlj$g::a(int, int, int) -> he
fifo write: @1699477132138988304 0x7f81e9d8ea50 107: dlk$$Lambda$8071.0x00007f8160cc6210::apply(Object) -> Object
fifo write: @1699477132139432950 0x7f81e2b44594 400: hi$b::a() -> java.util.stream.Stream
fifo write: @1699477132140397422 0x7f81e9ea0b54 283: dum::hashCode() -> int
fifo write: @1699477132140901269 0x7f81ea10df4c 6: crd$b::a() -> java.util.List
fifo write: @1699477132143171348 0x7f81e26bae14 270: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$ValueIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477132143270769 0x7f81e28ad994 428: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$1::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477132143368591 0x7f81e2880cb7 728: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::values() -> it.unimi.dsi.fastutil.objects.ObjectCollection
fifo write: @1699477132143435551 0x7f81e2a6d7ef 398: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$1::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477132143474452 0x7f81e2b94277 468: dlh::b(long) -> dlh$a
fifo write: @1699477132143509082 0x7f81e2afcbf4 109: dlh::c(long) -> dlh$a
fifo write: @1699477132143554173 0x7f81e26ba214 395: dnw::a(java.util.function.Function, gw) -> boolean
fifo write: @1699477132143593893 0x7f81e2a3e274 1462: dhd::close() -> void
fifo write: @1699477132143630744 0x7f81e26e698e 460: dlh$a::a() -> dlh$a
fifo write: @1699477132144098250 0x7f81e9ea084c 6: dpx::b() -> dlz
fifo write: @1699477132144259772 0x7f81e9ea054c 6: dpx::a() -> dsj
fifo write: @1699477132144291692 0x7f81e9ea024c 6: dsj$a::a() -> dlz
fifo write: @1699477132144539986 0x7f81e28af7d7 590: dlt::b(long) -> void
fifo write: @1699477132144897490 0x7f81e2a83316 1891: dki::a(cqb, gw, int, java.util.function.Predicate, java.util.function.Predicate) -> java.util.Optional
fifo write: @1699477132144999502 0x7f81e292c217 554: arw::b(float, float, float, float, float) -> float
fifo write: @1699477132145060222 0x7f81e2b38f14 412: arw::b(float, float, float) -> float
fifo write: @1699477132145137683 0x7f81e297ce54 647: dnr::a(int, int, int, int, dpy) -> double
fifo write: @1699477132145195344 0x7f81e2bd1594 263: dkh::h() -> boolean
fifo write: @1699477132145334496 0x7f81e2de8b94 137: dki::<init>() -> void
fifo write: @1699477132145643300 0x7f81e28325d9 1260: akx::b_(gw) -> eam
fifo write: @1699477132145891623 0x7f81e202fcf4 5: dki$b::g() -> int
fifo write: @1699477132146102276 0x7f81e2df1fca 106: dki::b(int, int) -> dki$b
fifo write: @1699477132146167987 0x7f81e2afa514 428: dki$b::b() -> java.util.OptionalInt
fifo write: @1699477132146228607 0x7f81e2b46737 682: dki$b::<init>(int, int) -> void
fifo write: @1699477132146543162 0x7f81e2a84d97 3435: dki::a(java.util.OptionalInt, java.util.OptionalInt) -> dki
fifo write: @1699477132146881616 0x7f81e2b4dc14 505: cqu$$Lambda$8010.0x00007f8160cb2088::apply(Object) -> Object
fifo write: @1699477132147289241 0x7f81e2a84774 222: dmj::a(dfj) -> boolean
fifo write: @1699477132148073221 0x7f81e2ed3461 20946: dnr::a(cqp, asc, gw, int, int, float, double, int, float, dpy) -> void
fifo write: @1699477132148190523 0x7f81e2b1f934 691: dlr::b(long, int, int) -> void
fifo write: @1699477132149134775 0x7f81e2b7a8b4 488: it.unimi.dsi.fastutil.objects.ObjectArrayList::<init>() -> void
fifo write: @1699477132149177446 0x7f81e1dca394 1175: doo::c(dfj) -> boolean
fifo write: @1699477132149310197 0x7f81e1e93cb7 915: it.unimi.dsi.fastutil.objects.AbstractObjectList::iterator() -> java.util.Iterator
fifo write: @1699477132149733503 0x7f81e2a8feb1 4143: doo::a(cqp, gw, dfj, dqf, asc, java.util.List) -> boolean
fifo write: @1699477132152354127 0x7f81e27bf35a 5467: dhf::a(java.util.function.Predicate, java.util.function.BiConsumer) -> void
fifo write: @1699477132154691957 0x7f81e2edcce7 22013: eaf::b(cpc) -> void
fifo write: @1699477132168061409 0x7f81e2d3e727 3557: ri$c::a(rq) -> ri$f
fifo write: @1699477132169554268 0x7f81e256a7f4 3: io.netty.buffer.UnpooledUnsafeDirectByteBuf::addr(int) -> long
fifo write: @1699477132190477647 0x7f81ea470bea 18439: dlk::a(dlg, cqv, hq, boolean, dlp, dhf, dkw, dlj$o) -> void
fifo write: @1699477132201687342 0x7f81ea245392 4117: dhy$c::a(dhw, aqp) -> void
fifo write: @1699477132202052546 0x7f81e9e9f262 77: cpy::s(gw) -> he
fifo write: @1699477132207714669 0x7f81ea24397a 2690: ead::c(long, long) -> void
fifo write: @1699477132212358589 0x7f81e9e9e1f2 1366: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::removeEntry(int) -> Object
fifo write: @1699477132219979527 0x7f81ea47c80d 32501: dor::a(cqp, asc, dqi, double, double, double, double, double, double, int, int, int, int, int) -> boolean
fifo write: @1699477132220398403 0x7f81e2a8f634 524: biq::j(double, double, double) -> void
fifo write: @1699477132269893850 0x7f81e2704f34 528: io.netty.util.concurrent.PromiseCombiner::tryPromise() -> boolean
fifo write: @1699477132315105462 0x7f81e9e9ddcc 2: dis$a::d() -> int
fifo write: @1699477132370840339 0x7f81e2735bd9 877: bqw::c() -> void
fifo write: @1699477132414995158 0x7f81ea098550 83: java.util.ArrayDeque::peek() -> Object
fifo write: @1699477132415849459 0x7f81ea09824c 3: dis::h() -> boolean
fifo write: @1699477132416024381 0x7f81e2885e14 31: wx::<init>(biq) -> void
fifo write: @1699477132416059161 0x7f81e2885877 206: biq::di() -> vd
fifo write: @1699477132416573748 0x7f81e159fd1c 3121: bru::<init>(bji, Class, int, boolean, boolean, java.util.function.Predicate) -> void
fifo write: @1699477132421388820 0x7f81e2ae4c96 45: io.netty.channel.AbstractChannelHandlerContext::writeAndFlush(Object, io.netty.channel.ChannelPromise) -> io.netty.channel.ChannelFuture
fifo write: @1699477132421517282 0x7f81e2930fd4 822: io.netty.channel.AbstractChannelHandlerContext::invokeWriteAndFlush(Object, io.netty.channel.ChannelPromise) -> void
fifo write: @1699477132421786655 0x7f81e2d97d87 3901: io.netty.channel.AbstractChannelHandlerContext::writeAndFlush(Object) -> io.netty.channel.ChannelFuture
fifo write: @1699477132421883446 0x7f81e1c2cfff 4139: io.netty.channel.DefaultChannelPipeline::writeAndFlush(Object) -> io.netty.channel.ChannelFuture
fifo write: @1699477132421981847 0x7f81e2cd967f 4249: io.netty.channel.AbstractChannel::writeAndFlush(Object) -> io.netty.channel.ChannelFuture
fifo write: @1699477132425144718 0x7f81e2b2a914 428: it.unimi.dsi.fastutil.longs.Long2IntFunctions$SynchronizedFunction::remove(long) -> int
fifo write: @1699477132425209309 0x7f81e270dd34 468: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::removeEntry(int) -> int
fifo write: @1699477132425281360 0x7f81e2725974 952: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::remove(long) -> int
fifo write: @1699477132425347900 0x7f81e277a0b9 1004: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477132428158457 0x7f81ea097b53 368: it.unimi.dsi.fastutil.longs.LongOpenHashSet::shiftKeys(int) -> void
fifo write: @1699477132440720409 0x7f81ea09784c 6: dyx::d() -> czh
fifo write: @1699477132443925580 0x7f81ea09754c 6: dvo::a() -> java.util.List
fifo write: @1699477132443980170 0x7f81ea09724c 6: dvo::b() -> dwf
fifo write: @1699477132444115582 0x7f81ea096f4c 3: dhh::d() -> long
fifo write: @1699477132444160223 0x7f81ea096c4c 2: dwf::i() -> int
fifo write: @1699477132444297724 0x7f81e2b2a494 240: cqn::a(hw, dvi, dic) -> dvq
fifo write: @1699477132444355755 0x7f81e2ae4694 487: dhf::a(dvi) -> dvq
fifo write: @1699477132444415076 0x7f81e287af54 1081: dwe::a(asc, int) -> int
fifo write: @1699477132444805121 0x7f81e270f9f7 1869: dlr::<init>(asc) -> void
fifo write: @1699477132444875272 0x7f81e2977519 492: dhg$$Lambda$8025.0x00007f8160cb5208::accept(Object) -> void
fifo write: @1699477132444929662 0x7f81e2de5634 715: dlr::a(long, int, int, int) -> void
fifo write: @1699477132444989143 0x7f81e2d97694 333: dwd::a(dhh, int, int) -> boolean
fifo write: @1699477132445057984 0x7f81e2ad14ca 1769: dwf::b(dhh, int, int) -> boolean
fifo write: @1699477132445513780 0x7f81e287085f 3131: dwd::a(long, int, int) -> cpc
fifo write: @1699477132445747813 0x7f81ea09694c 4: dlu$a::a() -> double
fifo write: @1699477132445793964 0x7f81ea09664c 4: dlu$a::b() -> double
fifo write: @1699477132446048557 0x7f81e248d5c7 11794: dhg::a(cqn, hw, dhf, dhh, cpc, hr, dlg, dzc, he) -> void
fifo write: @1699477132446708865 0x7f81e2a1a127 5741: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477132446771996 0x7f81e2640ff4 19: java.nio.Buffer::clear() -> java.nio.Buffer
fifo write: @1699477132447243312 0x7f81e248cd94 244: dlu$a::<init>(double, double) -> void
fifo write: @1699477132447626257 0x7f81e2d970eb 358: dlu$1::a(int, int) -> dlu$a
fifo write: @1699477132448625990 0x7f81e2b24a8c 1935: dkw$g::<init>(dkw, dkl, boolean) -> void
fifo write: @1699477132448833153 0x7f81e159f6af 310: jdk.internal.misc.Unsafe::getAndBitwiseOrInt(Object, long, int) -> int
fifo write: @1699477132449019205 0x7f81e24812cb 2070: java.util.concurrent.ForkJoinTask::getAndBitwiseOrStatus(int) -> int
fifo write: @1699477132449144707 0x7f81e2a4e963 1666: java.lang.invoke.VarHandleInts$FieldInstanceReadWrite::getAndBitwiseOr(java.lang.invoke.VarHandle, Object, int) -> int
fifo write: @1699477132449676854 0x7f81e2a18a7f 2812: java.util.concurrent.ForkJoinTask::doExec() -> int
fifo write: @1699477132450521075 0x7f81e2cd7a9f 3652: java.util.concurrent.ForkJoinPool$WorkQueue::getAndClearSlot(java.util.concurrent.ForkJoinTask[], int) -> java.util.concurrent.ForkJoinTask
fifo write: @1699477132450675527 0x7f81e2e95a26 3422: java.lang.invoke.VarHandleReferences$Array::getAndSet(java.lang.invoke.VarHandle, Object, int, Object) -> Object
fifo write: @1699477132450905980 0x7f81e2460480 7887: java.lang.invoke.VarHandleGuards::guard_LIL_L(java.lang.invoke.VarHandle, Object, int, Object, java.lang.invoke.VarHandle$AccessDescriptor) -> Object
fifo write: @1699477132451334925 0x7f81e245ef3f 2163: java.util.concurrent.ForkJoinTask::setDone() -> int
fifo write: @1699477132454192122 0x7f81e2c135f7 1995: java.security.MessageDigest$Delegate::clone() -> Object
fifo write: @1699477132454230583 0x7f81ea09634c 6: akx::C() -> akq
fifo write: @1699477132461277833 0x7f81e2cd714c 676: java.lang.invoke.LambdaForm$MH.0x00007f816008cc00::linkToTargetMethod(Object, Object, int, int, Object, Object) -> Object
fifo write: @1699477132461447036 0x7f81e2704b94 31: java.util.concurrent.CompletableFuture$AsyncSupply::exec() -> boolean
fifo write: @1699477132461568177 0x7f81e2a58a83 1565: java.lang.invoke.LambdaForm$DMH.0x00007f816008c400::newInvokeSpecial(Object, Object, Object, int, int, Object) -> Object
fifo write: @1699477132464772659 0x7f81e2687c19 2156: ebm::a(gw, ebm$c) -> void
fifo write: @1699477132469946755 0x7f81e2278f79 1379: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::shiftKeys(int) -> void
fifo write: @1699477132470729765 0x7f81ea09393c 3489: java.util.concurrent.ForkJoinPool::scan(java.util.concurrent.ForkJoinPool$WorkQueue, int, int) -> int
fifo write: @1699477132473895896 0x7f81e1ca82d9 748: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::remove() -> void
fifo write: @1699477132474593875 0x7f81e2426e20 2316: java.util.HashMap$TreeNode::find(int, Object, Class) -> java.util.HashMap$TreeNode
fifo write: @1699477132475155392 0x7f81e2734a01 1293: io.netty.buffer.AbstractByteBufAllocator::buffer(int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477132475224983 0x7f81e27db65d 943: io.netty.buffer.AbstractByteBuf::readBytes(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477132475292884 0x7f81e159efb9 310: ako$b::x() -> boolean
fifo write: @1699477132480695233 0x7f81e2c13114 185: dkm$w$$Lambda$5356.0x00007f8160a3ed00::<init>(dkl$f) -> void
fifo write: @1699477132480787675 0x7f81ea08d130 243: java.lang.invoke.VarHandleReferences$Array::runtimeTypeCheck(java.lang.invoke.VarHandleReferences$Array, Object[], Object) -> Object
fifo write: @1699477132480848145 0x7f81e1c2bfa2 2131: dkm$w::a(dkl$f) -> dkl
fifo write: @1699477132480920976 0x7f81ea08dc19 666: java.util.AbstractList$RandomAccessSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477132482449826 0x7f81ea48c498 12747: aki$a::a(long, int) -> void
fifo write: @1699477132482654459 0x7f81ea08c35a 1213: java.util.concurrent.ForkJoinPool$WorkQueue::nextLocalTask(int) -> java.util.concurrent.ForkJoinTask
fifo write: @1699477132482788590 0x7f81e270d914 39: dkm$aa::b() -> double
fifo write: @1699477132483071544 0x7f81e2c16be7 6396: dkm$w::equals(Object) -> boolean
fifo write: @1699477132483235576 0x7f81ea08bed0 171: dhf::g() -> java.util.Map
fifo write: @1699477132483465809 0x7f81ea08b378 695: java.util.ImmutableCollections$AbstractImmutableList::equals(Object) -> boolean
fifo write: @1699477132486532668 0x7f81ea08a430 1285: dkm$k::a(dkl$f) -> dkl
fifo write: @1699477132491409851 0x7f81e270f594 39: dkm$aa::a() -> double
fifo write: @1699477132491623864 0x7f81e2a14bff 2629: dkm$aa::equals(Object) -> boolean
fifo write: @1699477132491745775 0x7f81ea347258 2389: dkm$a::a(dkl$f) -> dkl
fifo write: @1699477132491788666 0x7f81e2977014 244: dkm$w::a() -> double
fifo write: @1699477132491829486 0x7f81e1c2b994 244: dkm$w::b() -> double
fifo write: @1699477132491870797 0x7f81ea089fdc 46: dkw$h::b() -> double
fifo write: @1699477132492300582 0x7f81ea3461d8 663: dkm$k::equals(Object) -> boolean
fifo write: @1699477132492793679 0x7f81e9b4d922 9776: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477132492866980 0x7f81e9b4d45c 46: dkw$h::a() -> double
fifo write: @1699477132492949901 0x7f81e9b4cc70 364: dkm$t::a(dkl$f) -> dkl
fifo write: @1699477132493036972 0x7f81ea0899f0 364: dkm$s::a(dkl$f) -> dkl
fifo write: @1699477132493288695 0x7f81ea345408 1213: dkm$k::a(dkm$k$a, dkl) -> dkm$k
fifo write: @1699477132493367086 0x7f81ea0893d0 71: dkm$v::a() -> double
fifo write: @1699477132497090954 0x7f81ea344b55 194: dkm$w$a::equals(Object) -> boolean
fifo write: @1699477132497162735 0x7f81ea3445eb 343: java.util.Collections$UnmodifiableCollection::iterator() -> java.util.Iterator
fifo write: @1699477132497216576 0x7f81ea343fcc 4: dkm$g::b() -> double
fifo write: @1699477132497246726 0x7f81ea343ccc 4: dzm::b() -> double
fifo write: @1699477132498212269 0x7f81e2c151e5 3171: io.netty.handler.flow.FlowControlHandler::dequeue(io.netty.channel.ChannelHandlerContext, int) -> int
fifo write: @1699477132498282920 0x7f81ea3439cc 4: dkm$g::a() -> double
fifo write: @1699477132498382941 0x7f81e2a4e394 169: io.netty.channel.DefaultChannelPipeline$TailContext::channelReadComplete(io.netty.channel.ChannelHandlerContext) -> void
fifo write: @1699477132498516593 0x7f81e2278814 167: su::a(vd) -> boolean
fifo write: @1699477132508579682 0x7f81e2962b94 863: dkw$i::a(int, int) -> double[]
fifo write: @1699477132508665203 0x7f81ea03d8b6 779: dkm$v::<init>(dkl, dkl, dkl, double, double, dkl$c) -> void
fifo write: @1699477132508781744 0x7f81e2d294a7 5741: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477132508837585 0x7f81e2c14994 379: dkm$q::<init>(dkl, double, double, dkl, dkl) -> void
fifo write: @1699477132508892556 0x7f81e2ceb3ff 1660: dkm$q::a(dkl$f) -> dkl
fifo write: @1699477132509005997 0x7f81ea03cd54 419: dkm$o::hashCode() -> int
fifo write: @1699477132513231292 0x7f81ea03c4ea 562: java.util.HashMap$Values::iterator() -> java.util.Iterator
fifo write: @1699477132514665570 0x7f81ea03bdfa 354: dkm$n::a(dkl$f) -> dkl
fifo write: @1699477132514927824 0x7f81ea3747d2 5887: dkm$v::a(dkl$f) -> dkl
fifo write: @1699477132515224608 0x7f81ea03aaf8 787: ara$e::equals(Object) -> boolean
fifo write: @1699477132515274758 0x7f81e27db1d4 86: java.lang.runtime.ObjectMethods::eq(int, int) -> boolean
fifo write: @1699477132515708454 0x7f81e2d28d17 514: dib::a(Object) -> int
fifo write: @1699477132515949097 0x7f81e2962614 289: dkm$g::<init>(dkl, double, double) -> void
fifo write: @1699477132516006758 0x7f81e2d28591 640: dkm$g::a(dkl$f) -> dkl
fifo write: @1699477132516063178 0x7f81e2d27f14 369: dkm$z::<init>(dkl, dkl$c, dkm$z$a) -> void
fifo write: @1699477132516260991 0x7f81e2d273e1 1174: dkm$z::a(dkl$f) -> dkl
fifo write: @1699477132516389383 0x7f81e2d26f14 243: io.netty.handler.codec.MessageToMessageDecoder::acceptInboundMessage(Object) -> boolean
fifo write: @1699477132516443973 0x7f81ea3435cc 2: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::attemptedBytesRead(int) -> void
fifo write: @1699477132516563435 0x7f81e2e9505e 881: dkw$i::<init>(dkw, dkl) -> void
fifo write: @1699477132517004300 0x7f81e2e93cb9 2560: io.netty.channel.AbstractChannelHandlerContext::invokeRead() -> void
fifo write: @1699477132517246874 0x7f81ea03a531 147: dkm$aa::hashCode() -> int
fifo write: @1699477132517685099 0x7f81ea039b73 858: java.util.Collections$UnmodifiableMap::values() -> java.util.Collection
fifo write: @1699477132517909002 0x7f81e2dd91a7 7890: io.netty.handler.codec.MessageToMessageDecoder::channelRead(io.netty.channel.ChannelHandlerContext, Object) -> void
fifo write: @1699477132519937248 0x7f81e2e92fef 1191: dhr::a(cqw, crc$f, int, int, int) -> void
fifo write: @1699477132522038415 0x7f81e16c1994 103: asz::a(int, int) -> int
fifo write: @1699477132522532202 0x7f81e18a1177 1715: dkw$$Lambda$8056.0x00007f8160cc1028::apply(dkl) -> dkl
fifo write: @1699477132522893307 0x7f81e2dd81f7 1715: dkw$$Lambda$8057.0x00007f8160cc1260::apply(dkl) -> dkl
fifo write: @1699477132523535305 0x7f81e2dd7937 486: dhy::onResize(int, Object) -> int
fifo write: @1699477132523614846 0x7f81e2dee4f7 1715: dkw$$Lambda$8059.0x00007f8160cc16d0::apply(dkl) -> dkl
fifo write: @1699477132524570298 0x7f81e2dedeeb 352: dhy::e() -> dhy
fifo write: @1699477132526141288 0x7f81e2deab07 8038: dkm$z::equals(Object) -> boolean
fifo write: @1699477132528006583 0x7f81ea3708d2 6514: dkw$$Lambda$8043.0x00007f8160cbe238::apply(Object) -> Object
fifo write: @1699477132529044536 0x7f81ea03984c 6: aka::c() -> dlg
fifo write: @1699477132529618853 0x7f81ea038c78 757: dhy::a(int, Object) -> Object
fifo write: @1699477132530424393 0x7f81ea493c93 4145: crc$f::a(int, int, int) -> crc$h
fifo write: @1699477132531221403 0x7f81ea497674 17835: ara$e::a(Object) -> float
fifo write: @1699477132531380876 0x7f81e2de98f7 1715: dkw$$Lambda$8055.0x00007f8160cc0df0::apply(dkl) -> dkl
fifo write: @1699477132531444926 0x7f81ea36fb96 771: dhy::b(int, int, int, Object) -> Object
fifo write: @1699477132531533107 0x7f81e2538f77 1715: dkw$$Lambda$8054.0x00007f8160cc0bb8::apply(dkl) -> dkl
fifo write: @1699477132531893682 0x7f81ea4a215e 5043: crg::getNoiseBiome(int, int, int, crc$f) -> he
fifo write: @1699477132531934503 0x7f81ea36f4f4 323: dkw$$Lambda$8058.0x00007f8160cc1498::apply(dkl) -> dkl
fifo write: @1699477132531961053 0x7f81ea36f1c7 15: dke$c::c(int) -> int
fifo write: @1699477132532999776 0x7f81ea4a5fe3 6625: dkw::b(dkl) -> dkl
fifo write: @1699477132533113628 0x7f81e2e33167 6316: dkm$q::equals(Object) -> boolean
fifo write: @1699477132533732886 0x7f81ea36ecd0 123: dkm$w::hashCode() -> int
fifo write: @1699477132533782286 0x7f81ea36e8d0 155: dkw$$Lambda$8043.0x00007f8160cbe238::apply(Object) -> Object
fifo write: @1699477132534972422 0x7f81ea4a9df8 763: dkm$a::equals(Object) -> boolean
fifo write: @1699477132536458171 0x7f81ea4ab092 4113: dhy$c::a(dhw, aqp) -> void
fifo write: @1699477132539737683 0x7f81ea4adbba 513: dkm$z::a(dkl$b, double) -> double
fifo write: @1699477132541842490 0x7f81ea4ae522 1277: dkm$x::a(dkl$b) -> double
fifo write: @1699477132549695501 0x7f81ea4af6ff 896: java.util.stream.ReferencePipeline::makeNodeBuilder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477132551162480 0x7f81ea4b0184 1252: dhy$a::a(hj, dhx, int) -> dhy$c
fifo write: @1699477132560647252 0x7f81e28ee514 163: java.nio.ByteBuffer::clear() -> java.nio.ByteBuffer
fifo write: @1699477132560681763 0x7f81ea4b0f4c 2: dla::f() -> int
fifo write: @1699477132560864815 0x7f81ea4b134f 1024: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477132560960356 0x7f81ea4b2491 2102: dhr::a(cqw, crc$f, int, int, int) -> void
fifo write: @1699477132563703042 0x7f81ea4b3ba2 9025: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477132568571615 0x7f81e2a28c94 199: dkw$d::<init>(dkl) -> void
fifo write: @1699477132568641156 0x7f81ea4b8dd0 71: java.nio.ByteBuffer::array() -> byte[]
fifo write: @1699477132568870498 0x7f81ea4b9263 6693: dkw::b(dkl) -> dkl
fifo write: @1699477132568921779 0x7f81ea4bd0d3 256: dkm$g::hashCode() -> int
fifo write: @1699477132568957860 0x7f81e2de0f14 400: cpw::ah() -> long
fifo write: @1699477132569221113 0x7f81ea4bd7d0 63: dkm$o::b() -> double
fifo write: @1699477132569285474 0x7f81e2c74bb7 2167: dkm$e::hashCode() -> int
fifo write: @1699477132570507500 0x7f81e2de0914 285: dkw$f::<init>(dkw, dkl) -> void
fifo write: @1699477132570558540 0x7f81ea4be24c 6: dkm$e::j() -> dkl
fifo write: @1699477132570697052 0x7f81e2538a7a 129: java.util.HashMap::replacementTreeNode(java.util.HashMap$Node, java.util.HashMap$Node) -> java.util.HashMap$TreeNode
fifo write: @1699477132570891405 0x7f81e2e30767 5898: dkm$g::equals(Object) -> boolean
fifo write: @1699477132570938385 0x7f81ea4beb4c 5: io.netty.channel.epoll.EpollRecvByteAllocatorHandle::edgeTriggered(boolean) -> void
fifo write: @1699477132570983766 0x7f81ea4bee4c 2: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator::maxMessagesPerRead() -> int
fifo write: @1699477132571057267 0x7f81ea4bf12c 30: io.netty.channel.epoll.AbstractEpollStreamChannel::access$400(io.netty.channel.epoll.AbstractEpollStreamChannel) -> java.util.Queue
fifo write: @1699477132571116727 0x7f81ea4bf44c 44: io.netty.channel.unix.PreferredDirectByteBufAllocator::updateAllocator(io.netty.buffer.ByteBufAllocator) -> void
fifo write: @1699477132571162148 0x7f81e2538334 718: bjo::O_() -> bjg
fifo write: @1699477132571226599 0x7f81e2537a34 929: bkb::d() -> java.util.UUID
fifo write: @1699477132571276610 0x7f81ea4bf7cc 2: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl::guess() -> int
fifo write: @1699477132571368461 0x7f81ea4bdb59 110: dkm$e::a(dkl$b, double) -> double
fifo write: @1699477132572521576 0x7f81ea4bff9a 18460: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477132572675398 0x7f81e2e2fb63 1018: dkm$x::a(double[], dkl$a) -> void
fifo write: @1699477132572824409 0x7f81ea4ccacc 6: dis$a::c() -> bgd
fifo write: @1699477132572965481 0x7f81e2a18594 42: dzm::a() -> double
fifo write: @1699477132573108703 0x7f81ea4ccdd0 83: dkm$z::b() -> double
fifo write: @1699477132576744879 0x7f81e2ea2ce7 6396: dkm$e::equals(Object) -> boolean
fifo write: @1699477132576875251 0x7f81ea4cd1da 108: dkm$q::b() -> double
fifo write: @1699477132577020643 0x7f81ea4cbe74 577: dkm$z::hashCode() -> int
fifo write: @1699477132584825264 0x7f81ea4cd8f2 693: dkw$1::a(double[], dkl) -> void
fifo write: @1699477132584960535 0x7f81ea4ce413 677: dkw::a(long) -> int
fifo write: @1699477132587140254 0x7f81e2e2f594 397: dlj$d::apply(Object) -> Object
fifo write: @1699477132587309406 0x7f81e2b0fc14 31: dlj$k::<init>(dlj$g) -> void
fifo write: @1699477132587399467 0x7f81e17f5a74 6: dlj$d::a(dlj$g) -> dlj$u
fifo write: @1699477132587798272 0x7f81e28376d9 638: dlj$t$a::a() -> boolean
fifo write: @1699477132589907829 0x7f81e2836d97 784: biq::h(double, double, double) -> void
fifo write: @1699477132596488023 0x7f81ea4ceed0 171: dlj$t$a::a() -> boolean
fifo write: @1699477132596726336 0x7f81ea4cf475 3322: dkm$q::a(double[], dkl$a) -> void
fifo write: @1699477132597242603 0x7f81e2e8415f 3089: biq::a(double, double, double, float, float) -> void
fifo write: @1699477132600572516 0x7f81e2836697 395: dkv$$Lambda$8041.0x00007f8160cbaaa0::computeFluid(int, int, int) -> dke$b
fifo write: @1699477132600707718 0x7f81ea4d1cfd 226: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::insert(int, long, int) -> void
fifo write: @1699477132600757199 0x7f81ea4d22d3 116: dkt::b(long) -> void
fifo write: @1699477132601023932 0x7f81ea4d2de3 6577: dkw::b(dkl) -> dkl
fifo write: @1699477132604806381 0x7f81e2c6a594 142: dmu$$Lambda$8081.0x00007f8160ccd5d0::<init>(double) -> void
fifo write: @1699477132604907542 0x7f81ea4d6b64 68: dkh::g() -> long
fifo write: @1699477132606466162 0x7f81ea4d6ede 129: dmx::a(cpc, double, double, int, int, float) -> boolean
fifo write: @1699477132606843617 0x7f81ea4d7359 50: dks$$Lambda$1673.0x00007f81605c0ba8::test(Object) -> boolean
fifo write: @1699477132625489817 0x7f81e277c839 1082: io.netty.channel.epoll.EpollRecvByteAllocatorStreamingHandle::maybeMoreDataToRead() -> boolean
fifo write: @1699477132625537198 0x7f81e2e83b94 240: io.netty.channel.RecvByteBufAllocator$DelegatingHandle::attemptedBytesRead() -> int
fifo write: @1699477132625829841 0x7f81ea4d76d4 239: bql::a() -> boolean
fifo write: @1699477132628253053 0x7f81ea4d7dc1 6034: dkw$i::a(double[], dkl$a) -> void
fifo write: @1699477132630456531 0x7f81ea4dc11a 217: dkz$a::a(double) -> double
fifo write: @1699477132633586892 0x7f81ea4dc5d7 34: dmu::a(double, dms, double, double, double, int) -> boolean
fifo write: @1699477132633747714 0x7f81ea4dc8fc 34: dmu$$Lambda$8081.0x00007f8160ccd5d0::shouldSkip(dms, double, double, double, int) -> boolean
fifo write: @1699477132633930166 0x7f81e277c294 336: cbu::h(int) -> void
fifo write: @1699477132637992368 0x7f81ea4dccb3 1728: dkw::a(int, int) -> int
fifo write: @1699477132643523069 0x7f81ea4de730 52: dkv$$Lambda$8041.0x00007f8160cbaaa0::computeFluid(int, int, int) -> dke$b
fifo write: @1699477132644056256 0x7f81e2ac8104 7292: cbu::a(ehn, bjm) -> ehn
fifo write: @1699477132645338762 0x7f81e2ac4e42 4196: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477132655911649 0x7f81e277b934 1075: cbu::aU() -> biq$b
fifo write: @1699477132656089381 0x7f81e2ea0f3f 4021: cbu::aJ() -> float
fifo write: @1699477132656159392 0x7f81e2ac4534 667: crj::a(dkl, dkl, dkl$b) -> boolean
fifo write: @1699477132656232583 0x7f81e2e2458f 2369: vf::a(vd, su, bfo) -> void
fifo write: @1699477132656444366 0x7f81ea4deab2 3621: dkw::b(int, int) -> void
fifo write: @1699477132656512387 0x7f81ea4e12f3 532: dks::a(int, int) -> int
fifo write: @1699477132656606598 0x7f81e2e2293f 4290: dlj$q::a(dlj$g) -> dlj$u
fifo write: @1699477132656845931 0x7f81e277b0ba 927: dlj$c::apply(Object) -> Object
fifo write: @1699477132656895872 0x7f81e2ea0812 490: dlj$c::a(dlj$g) -> dlj$e
fifo write: @1699477132657047644 0x7f81e2ea0094 373: dlj$c$a::<init>(dlj$c, dlj$g) -> void
fifo write: @1699477132657120625 0x7f81ea4e1d01 937: dlj$x::apply(Object) -> Object
fifo write: @1699477132657750543 0x7f81e2d8009a 54577: cbu::r(double, double, double) -> void
fifo write: @1699477132657787173 0x7f81e284cff4 67: dlj$j::c() -> long
fifo write: @1699477132659017669 0x7f81ea4e2bf0 874: dlj$x::a(dlj$g) -> dlj$u
fifo write: @1699477132659169281 0x7f81e2e22314 324: dlj$l::apply(Object) -> Object
fifo write: @1699477132659312423 0x7f81ea4e3559 62: dlj$d::apply(Object) -> Object
fifo write: @1699477132659447695 0x7f81ea4e2791 194: dlj$i::<init>(dlj$g) -> void
fifo write: @1699477132659595677 0x7f81e2e21e14 324: dlj$t::apply(Object) -> Object
fifo write: @1699477132659744968 0x7f81e2e216ba 698: dlj$t::a(dlj$g) -> dlj$e
fifo write: @1699477132659894170 0x7f81e2e21114 381: dlj$t$a::<init>(dlj$t, dlj$g, boolean) -> void
fifo write: @1699477132660048472 0x7f81e2e208ba 927: dlj$z::apply(Object) -> Object
fifo write: @1699477132662438503 0x7f81ea4e3955 954: cqv::a(gw) -> he
fifo write: @1699477132663298434 0x7f81ea4e4650 251: dhe::b(int, int, int) -> boolean
fifo write: @1699477132663607598 0x7f81ea4e4f50 35: dlj$j::c() -> long
fifo write: @1699477132663796090 0x7f81e2e1f6b7 2492: dlj$l::a(dlj$g) -> dlj$e
fifo write: @1699477132663944012 0x7f81e2e1f094 373: dlj$z$a::<init>(dlj$z, dlj$g) -> void
fifo write: @1699477132664099114 0x7f81e2e1e83a 927: dlj$aa::apply(Object) -> Object
fifo write: @1699477132664247626 0x7f81e2e1e212 490: dlj$aa::a(dlj$g) -> dlj$e
fifo write: @1699477132664400308 0x7f81e2e1dc14 373: dlj$aa$a::<init>(dlj$aa, dlj$g) -> void
fifo write: @1699477132664556630 0x7f81e2e1d414 401: dlj$s::apply(Object) -> Object
fifo write: @1699477132664706892 0x7f81e2872af4 60: dlj$s::a(dlj$g) -> dlj$e
fifo write: @1699477132664860154 0x7f81e277ac14 88: dmp$$Lambda$8082.0x00007f8160ccd7f0::shouldSkip(dms, double, double, double, int) -> boolean
fifo write: @1699477132665001655 0x7f81e2e2f191 10: dmp::a(float[], dms, double, double, double, int) -> boolean
fifo write: @1699477132668561371 0x7f81e2d7eb2e 222: dmp::a(dms, float[], double, double, double, int) -> boolean
fifo write: @1699477132668684353 0x7f81e2d7e614 324: dlj$q::apply(Object) -> Object
fifo write: @1699477132668873185 0x7f81e2d7b2e2 4804: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477132668987847 0x7f81e2d7ab14 476: dlj$l$a::<init>(dlj$l, dlj$g, dzp) -> void
fifo write: @1699477132669084888 0x7f81e2d7a694 109: dkw$i::l() -> void
fifo write: @1699477132669195620 0x7f81e2d7a014 508: dkw$$Lambda$8069.0x00007f8160cc3940::accept(Object) -> void
fifo write: @1699477132669298461 0x7f81ea4e524c 6: dlj$y::c() -> dlm
fifo write: @1699477132669392632 0x7f81ea4e554c 6: dlj$y::d() -> dlm
fifo write: @1699477132669522864 0x7f81ea4e584c 6: dlj$y::b() -> aew
fifo write: @1699477132669615145 0x7f81e2d78b27 2442: dke$c::a(int, int, int, dke$b, int, boolean) -> int
fifo write: @1699477132669704906 0x7f81e2d7789a 1837: dke$c::a(int, int, int, dke$b, int) -> dfj
fifo write: @1699477132669773577 0x7f81e2d77314 279: dlj$p::<init>(java.util.List) -> void
fifo write: @1699477132669840068 0x7f81e2d76f14 31: dlj$j::<init>(dlj$g) -> void
fifo write: @1699477132669921389 0x7f81e2d76912 490: dlj$z::a(dlj$g) -> dlj$e
fifo write: @1699477132678847534 0x7f81ea4e5ff0 17788: dkv::a(dlu, cqn, dlg, dhf, int, int) -> dhf
fifo write: @1699477132679076707 0x7f81e2ee65f4 2116: alp::a(vd) -> boolean
fifo write: @1699477132679212699 0x7f81e2d760b4 793: alp::c() -> boolean
fifo write: @1699477132686391771 0x7f81e2ee7697 3132: vf::a(vd, su, akq) -> void
fifo write: @1699477132686961138 0x7f81ea4f0821 6948: java.util.concurrent.ConcurrentHashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477132694951661 0x7f81ea4f4902 6610: dks::a(int, int, int, dfj) -> boolean
fifo write: @1699477132695927424 0x7f81ea4fa1c6 12992: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477132704871369 0x7f81ea504231 7643: dke$c::a(dkl$b, double) -> dfj
fifo write: @1699477132719838652 0x7f81ea5094f3 204: dlj$g::a(int, int, int) -> he
fifo write: @1699477132720051705 0x7f81ea509b70 239: dlj$g$$Lambda$8073.0x00007f8160ccc228::get() -> Object
fifo write: @1699477132720232807 0x7f81ea50a256 289: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::poll() -> Object
fifo write: @1699477132720407489 0x7f81ea50a956 289: io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue::poll() -> Object
fifo write: @1699477132729425015 0x7f81e2ee8c20 2055: dkw::a(boolean, int) -> void
fifo write: @1699477132729644958 0x7f81e2ee9dda 1295: dlj$n::apply(Object) -> Object
fifo write: @1699477132729841440 0x7f81e2eea886 870: dlj$n::a(dlj$g) -> dlj$e
fifo write: @1699477132730025043 0x7f81ea50b052 313: java.util.IdentityHashMap::containsKey(Object) -> boolean
fifo write: @1699477132731006825 0x7f81e2eeb0b4 1163: dlk::a(dfj) -> boolean
fifo write: @1699477132731947247 0x7f81e2d75b94 279: dlj$m::<init>(dlj$e) -> void
fifo write: @1699477132737135034 0x7f81e2eeba94 185: dkv$$Lambda$8080.0x00007f8160ccd188::<init>(cqv) -> void
fifo write: @1699477132738014116 0x7f81e2eebf37 678: dmv::a(dms, dhf, java.util.function.Function, asc, dke, cpc, dhe) -> boolean
fifo write: @1699477132738099187 0x7f81e2eec694 495: dmu::a(dms, dmq, dhf, java.util.function.Function, asc, dke, cpc, dhe) -> boolean
fifo write: @1699477132740028202 0x7f81e2eecf07 7032: dmu::a(dms, dmt, dhf, java.util.function.Function, asc, dke, cpc, dhe) -> boolean
fifo write: @1699477132740182294 0x7f81e2ef0114 143: org.apache.commons.lang3.mutable.MutableBoolean::<init>(boolean) -> void
fifo write: @1699477132740367186 0x7f81ea50b6b0 47: dmx::b(dmq) -> boolean
fifo write: @1699477132741515641 0x7f81e2ef0874 9089: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477132741812385 0x7f81ea50c2d1 34: dlm$a::a(dlp) -> int
fifo write: @1699477132742830128 0x7f81ea50c636 3739: dlj$q::a(dlj$g) -> dlj$u
fifo write: @1699477132755905296 0x7f81e2ef50a6 2230: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::rehash(int) -> void
fifo write: @1699477132761026742 0x7f81ea50edea 27922: dlk::a(dlg, cqv, hq, boolean, dlp, dhf, dkw, dlj$o) -> void
fifo write: @1699477132767655648 0x7f81ea51fe50 67: dls::<init>(long, long) -> void
fifo write: @1699477132780828307 0x7f81ea520254 2537: bqa::a() -> boolean
fifo write: @1699477132783473731 0x7f81ea521e5a 65: com.google.common.collect.SingletonImmutableBiMap::get(Object) -> Object
fifo write: @1699477132784036248 0x7f81ea5221cc 6: dlg::c() -> dlk
fifo write: @1699477132784100969 0x7f81ea5224d9 70: dlj$q::apply(Object) -> Object
fifo write: @1699477132784159540 0x7f81e2ef6514 401: dlj$h::apply(Object) -> Object
fifo write: @1699477132784218181 0x7f81e2ef6a94 185: dlj$b$$Lambda$8072.0x00007f8160ccc000::<init>(dlk) -> void
fifo write: @1699477132784274531 0x7f81e297db74 60: dlj$h::a(dlj$g) -> dlj$e
fifo write: @1699477132784327802 0x7f81e2ef6f14 324: dlj$y::apply(Object) -> Object
fifo write: @1699477132784387673 0x7f81e2ef7414 230: dlg$$Lambda$7983.0x00007f8160cab3a8::<init>(dlg, aew) -> void
fifo write: @1699477132784511914 0x7f81ea5228b0 1095: dmv::a(asc) -> boolean
fifo write: @1699477132784590225 0x7f81e2ef7914 484: dlj$y$a::<init>(dlj$y, dlj$g, int, int, dlf) -> void
fifo write: @1699477132784634776 0x7f81ea5238cc 6: dms::d() -> dlg
fifo write: @1699477132784708757 0x7f81e2ef7f77 1537: dlj$b::a(dlj$g) -> dlj$u
fifo write: @1699477132784792278 0x7f81e2ef8c17 1883: dlj$b::apply(Object) -> Object
fifo write: @1699477132784842329 0x7f81ea523bcc 6: dms::c() -> hr
fifo write: @1699477132785052741 0x7f81e2ef9a77 1780: dlg::a(aew) -> dlf
fifo write: @1699477132785197503 0x7f81e2efa867 3070: dlj$y::a(dlj$g) -> dlj$e
fifo write: @1699477132785272674 0x7f81ea523ef0 143: dmp::a(float[], dms, double, double, double, int) -> boolean
fifo write: @1699477132785355235 0x7f81ea524370 195: dmp$$Lambda$8082.0x00007f8160ccd7f0::shouldSkip(dms, double, double, double, int) -> boolean
fifo write: @1699477132785687970 0x7f81ea524870 143: dmp::a(dms, float[], double, double, double, int) -> boolean
fifo write: @1699477132786378578 0x7f81ea524ce4 159: dlj$c::apply(Object) -> Object
fifo write: @1699477132786620632 0x7f81e2efbef4 763: dmp::a(dmo, asc, double, float, float) -> double
fifo write: @1699477132787171669 0x7f81ea525211 204: dlj$k::<init>(dlj$g) -> void
fifo write: @1699477132787386631 0x7f81ea525681 504: dlj$l::apply(Object) -> Object
fifo write: @1699477132787758176 0x7f81e29ca674 60: dlj$a::a(dlj$g) -> dlj$e
fifo write: @1699477132787831347 0x7f81e2efc794 401: dlj$a::apply(Object) -> Object
fifo write: @1699477132787893468 0x7f81e29eb1f4 60: dlj$v::a(dlj$g) -> dlj$e
fifo write: @1699477132787976029 0x7f81e2efcd14 401: dlj$v::apply(Object) -> Object
fifo write: @1699477132788028950 0x7f81e2efd294 167: dlj$g$c::<init>(dlj$g) -> void
fifo write: @1699477132788080080 0x7f81e2efd694 167: dlj$g$b::<init>(dlj$g) -> void
fifo write: @1699477132788124301 0x7f81e2efda94 167: dlj$g$d::<init>(dlj$g) -> void
fifo write: @1699477132788172972 0x7f81e2efde94 240: dlj$g$a::<init>(dlj$g) -> void
fifo write: @1699477132788256553 0x7f81e2efe320 169: dms::a(java.util.function.Function, dhf, gw, boolean) -> java.util.Optional
fifo write: @1699477132788362354 0x7f81ea525fe4 207: dlj$t::apply(Object) -> Object
fifo write: @1699477132788417935 0x7f81e2efe81d 108: dkv$$Lambda$8074.0x00007f8160ccc468::getNoiseBiome(int, int, int) -> he
fifo write: @1699477132788607467 0x7f81e2efed5f 3295: dlj$g::<init>(dlk, dlg, dhf, dkw, java.util.function.Function, hq, dlp) -> void
fifo write: @1699477132788667868 0x7f81e2f00594 285: dkv::a(dlg, int, int, int) -> he
fifo write: @1699477132788723089 0x7f81e2f00a94 230: dmx$$Lambda$8135.0x00007f8160cd3628::<init>(dhf, gw$a) -> void
fifo write: @1699477132788784239 0x7f81e2f00f94 361: dkv$$Lambda$8080.0x00007f8160ccd188::apply(Object) -> Object
fifo write: @1699477132789088113 0x7f81e2f01536 1312: dmx::a(dhf, gw$a, dfj) -> void
fifo write: @1699477132789146794 0x7f81e2f01ffc 1671: dmx$$Lambda$8135.0x00007f8160cd3628::accept(Object) -> void
fifo write: @1699477132789301676 0x7f81e2f02dc5 2414: dlk::a(dlj$o, dms, java.util.function.Function, dhf, dkw, gw, boolean) -> java.util.Optional
fifo write: @1699477132789379867 0x7f81ea526578 478: dlj$l::a(dlj$g) -> dlj$e
fifo write: @1699477132790023765 0x7f81ea526e64 159: dlj$z::apply(Object) -> Object
fifo write: @1699477132794392881 0x7f81ea527446 4839: dlr::c(long, int, int) -> void
fifo write: @1699477132802606687 0x7f81e2f04094 462: dva::a(dva) -> boolean
fifo write: @1699477132804290209 0x7f81ea52a3d3 1208: dhe::a(int, int, int) -> void
fifo write: @1699477132805392733 0x7f81e2ad1074 2: bga::a(asc) -> int
fifo write: @1699477132806317935 0x7f81ea52b0f7 6396: aka::l() -> void
fifo write: @1699477132806680240 0x7f81e2f04774 380: dlm$c::a(dlp) -> int
fifo write: @1699477132808895568 0x7f81ea530454 50: akx::a(gw, java.util.function.Predicate) -> boolean
fifo write: @1699477132809160472 0x7f81e2f04d19 359: dns$$Lambda$8022.0x00007f8160cb7478::accept(Object) -> void
fifo write: @1699477132809433565 0x7f81e2f052d4 1148: cpy::y(gw) -> boolean
fifo write: @1699477132809792900 0x7f81ea530a84 9958: dmu::a(dms, dmt, dhf, java.util.function.Function, long, dke, double, double, double, double, double, float, float, float, int, int, double, dhe, dmx$a) -> void
fifo write: @1699477132809869361 0x7f81e2f05d01 2126: dns::a(cpw, gw$a, ha, dfj) -> void
fifo write: @1699477132809925582 0x7f81ea536359 146: dnr$$Lambda$8086.0x00007f8160cce528::test(Object) -> boolean
fifo write: @1699477132810809003 0x7f81e2f06c74 346: arw::a(asc, int, int) -> int
fifo write: @1699477132811812776 0x7f81e2f07221 2132: cuz::a(dfj, cpy, gw) -> boolean
fifo write: @1699477132811873727 0x7f81e2f081be 730: dte::b(cqb, gw) -> boolean
fifo write: @1699477132812572296 0x7f81e2f08a3c 4921: com.google.common.collect.Iterators$ConcatenatedIterator::hasNext() -> boolean
fifo write: @1699477132813018421 0x7f81e2f0a920 75: dzb$$Lambda$8099.0x00007f8160ccae48::consume(ha, int, int, int) -> void
fifo write: @1699477132813144293 0x7f81e2f0ad94 93: akx::F_() -> long
fifo write: @1699477132813199704 0x7f81e2f0b1b4 747: eje::a(eiz) -> void
fifo write: @1699477132813389436 0x7f81e2f0ba20 2514: dzb::a(int, int, int, cpw, int, ha, int, int, int) -> void
fifo write: @1699477132813495878 0x7f81e2f0ce5c 1619: akx$$Lambda$7981.0x00007f8160caaf18::apply(Object) -> Object
fifo write: @1699477132813648059 0x7f81e2f0dad9 1252: akx::k(gw) -> ejc
fifo write: @1699477132813715730 0x7f81e2f0e5b1 1286: eix::a(eiz) -> void
fifo write: @1699477132815406362 0x7f81ea536939 1978: dku::b() -> double
fifo write: @1699477132815677115 0x7f81ea5384b5 2658: bfy::a(asc) -> int
fifo write: @1699477132815772646 0x7f81e2f0f0d7 457: dmu::a(dms, dmt, dhf, java.util.function.Function, dke, double, double, double, float, double, dhe, dmx$a) -> void
fifo write: @1699477132816099281 0x7f81e2f0f717 1071: bka::a(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477132816402444 0x7f81ea53a82f 2008: dkt::k() -> double
fifo write: @1699477132816461735 0x7f81e2f10094 185: eje::<init>(java.util.function.Function) -> void
fifo write: @1699477132816610497 0x7f81e2f1056f 133: java.util.HashMap$Values::spliterator() -> java.util.Spliterator
fifo write: @1699477132816672278 0x7f81e2f10994 293: java.util.HashMap$ValueSpliterator::<init>(java.util.HashMap, int, int, int, int) -> void
fifo write: @1699477132817111404 0x7f81e2f10f39 680: java.util.concurrent.CompletableFuture$UniWhenComplete::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477132817210115 0x7f81e2f11794 275: cqn::<init>(cpw, dlq, dvj) -> void
fifo write: @1699477132817721591 0x7f81e2f11ea7 4627: java.util.concurrent.CompletableFuture::uniWhenComplete(Object, java.util.function.BiConsumer, java.util.concurrent.CompletableFuture$UniWhenComplete) -> boolean
fifo write: @1699477132818081826 0x7f81e2f14194 230: dmp$$Lambda$8082.0x00007f8160ccd7f0::<init>(dmp, float[]) -> void
fifo write: @1699477132819329922 0x7f81ea53c352 1750: cpw::a(gw, csv, int) -> void
fifo write: @1699477132820051762 0x7f81ea53d580 1206: duo::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477132820667029 0x7f81ea53e4d0 204: java.util.stream.IntPipeline$1$1::accept(int) -> void
fifo write: @1699477132821024694 0x7f81ea53ed60 18: gu$1::a(int, int, int, ha$a) -> int
fifo write: @1699477132821121465 0x7f81e2f14694 96: dje::b(dja) -> boolean
fifo write: @1699477132821379349 0x7f81e2f14b39 2435: aqs::remove(Object) -> boolean
fifo write: @1699477132821437979 0x7f81e2f15c59 1336: djl::a(long, dje) -> void
fifo write: @1699477132824498029 0x7f81e2f1685a 1085: cqn::a(akx) -> cqn
fifo write: @1699477132826911160 0x7f81ea53f110 2881: dfi$a::a(hi) -> boolean
fifo write: @1699477132827329786 0x7f81ea541688 8855: dor::a(dny) -> boolean
fifo write: @1699477132828815955 0x7f81ea5463f3 714: dlt::<init>(long, long) -> void
fifo write: @1699477132829894309 0x7f81ea546cf8 2788: hi$a::a(he) -> boolean
fifo write: @1699477132829949789 0x7f81ea548de9 829: dlt$a::a(int, int, int) -> asc
fifo write: @1699477132832861547 0x7f81ea5497f0 115: dlt::j() -> double
fifo write: @1699477132853032267 0x7f81ea54a1fa 20889: dlk::a(dlg, cqv, hq, boolean, dlp, dhf, dkw, dlj$o) -> void
fifo write: @1699477132862538688 0x7f81ea556bba 1349: dlk::a(int, int) -> int
fifo write: @1699477132864678526 0x7f81ea557cb9 8385: dmx::a(dms, dmq, dhf, java.util.function.Function, dhe, gw$a, gw$a, dke, org.apache.commons.lang3.mutable.MutableBoolean) -> boolean
fifo write: @1699477132865541637 0x7f81e2f172d9 1206: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477132865583548 0x7f81e2f17ed4 1214: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::removeFirstFloat() -> float
fifo write: @1699477132867684635 0x7f81ea55e5f3 660: akq::f(gw) -> boolean
fifo write: @1699477132878179300 0x7f81e2f18b94 167: java.nio.ByteBuffer::clear() -> java.nio.Buffer
fifo write: @1699477132895824617 0x7f81ea55f1f7 6404: aka::l() -> void
fifo write: @1699477132898046676 0x7f81ea564610 659: bgi::a(asc) -> float
fifo write: @1699477132900631839 0x7f81ea565101 668: hi$b::iterator() -> java.util.Iterator
fifo write: @1699477132904810433 0x7f81ea566102 60651: dkv::a(dlu, cqn, dlg, dhf, int, int) -> dhf
fifo write: @1699477132904880493 0x7f81e2f18f94 230: dhg$$Lambda$8004.0x00007f8160cb0cc0::<init>(hq, dum) -> void
fifo write: @1699477132904956224 0x7f81e2f194d7 1143: dum::b(cqp, dhg, asc, gw) -> boolean
fifo write: @1699477132905034225 0x7f81ea581cd9 106: dhg$$Lambda$4059.0x00007f816088cc80::apply(Object) -> Object
fifo write: @1699477132905513082 0x7f81e2f1a014 167: gw::g() -> gw
fifo write: @1699477132905596103 0x7f81e2f1a494 167: gw::f() -> gw
fifo write: @1699477132905684834 0x7f81e2f1a914 167: gw::h() -> gw
fifo write: @1699477132905727974 0x7f81e2f1ad94 167: gw::e() -> gw
fifo write: @1699477132905790955 0x7f81ea58244c 6: com.google.common.collect.ImmutableSortedMap::values() -> com.google.common.collect.ImmutableCollection
fifo write: @1699477132907334245 0x7f81e2f1b557 12220: doo::a(dny) -> boolean
fifo write: @1699477132907423856 0x7f81e2f20374 108: ako::i() -> dlg
fifo write: @1699477132907587268 0x7f81ea5827b4 1828: dua::a(dun, asc, gw) -> boolean
fifo write: @1699477132913504985 0x7f81ea583fc3 38251: dor::a(cqp, asc, dqi, double, double, double, double, double, double, int, int, int, int, int) -> boolean
fifo write: @1699477132913580796 0x7f81e2f207e3 683: dnr::a(cqp, gw, int, ha) -> void
fifo write: @1699477132913643457 0x7f81ea596115 224: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap) -> void
fifo write: @1699477132913996941 0x7f81ea59664a 1322: asz::a(java.util.function.IntConsumer) -> void
fifo write: @1699477132914649540 0x7f81ea597556 349: gw$a::b(int, int, int) -> gw
fifo write: @1699477132914746951 0x7f81e2f210f4 1721: drm::b(asc, int, int, int, int, boolean) -> boolean
fifo write: @1699477132914899413 0x7f81e2f21f14 636: eam::a(eal) -> boolean
fifo write: @1699477132914980704 0x7f81e2f225b4 1090: drm$$Lambda$8096.0x00007f8160cca238::test(Object) -> boolean
fifo write: @1699477132915194147 0x7f81e2f22f59 1584: akx::b(gw, java.util.function.Predicate) -> boolean
fifo write: @1699477132915257067 0x7f81e2f23bb4 658: dpi$1::a(gw, dfj) -> void
fifo write: @1699477132915320778 0x7f81e2f24314 757: drm::a(eam) -> boolean
fifo write: @1699477132915367249 0x7f81e2f24a96 37: ehq::c(int, int, int) -> void
fifo write: @1699477132915430160 0x7f81e2f24e76 238: dpi::b(cqd, gw, dfj) -> void
fifo write: @1699477132915493800 0x7f81e2f25354 738: java.util.HashMap$HashIterator::remove() -> void
fifo write: @1699477132915604322 0x7f81e2f25d07 3486: drm::a(cqb, drm$b, asc, dqw, gw) -> boolean
fifo write: @1699477132916341171 0x7f81e2f278b7 19217: dph::a(dny) -> boolean
fifo write: @1699477132917129632 0x7f81e2f2e634 596: it.unimi.dsi.fastutil.objects.ObjectArraySet$1::next() -> Object
fifo write: @1699477132918209746 0x7f81ea597bfd 462: dks$a$$Lambda$1676.0x00007f81605c1298::test(Object) -> boolean
fifo write: @1699477132918435048 0x7f81ea598470 903: dum$$Lambda$8006.0x00007f8160cb13d8::accept(Object) -> void
fifo write: @1699477132918562530 0x7f81ea5992a1 868: dmk::test(Object, Object) -> boolean
fifo write: @1699477132918615471 0x7f81ea59a053 52: dmf::a(dfj) -> boolean
fifo write: @1699477132919276499 0x7f81ea59a433 1696: dts::a(asc, dlp) -> int
fifo write: @1699477132920268922 0x7f81ea59bbf9 976: dny::<init>(java.util.Optional, cqp, dhg, asc, gw, dqa) -> void
fifo write: @1699477132920605916 0x7f81ea59c6a8 2295: arw::c(asc, float, float) -> float
fifo write: @1699477132933416531 0x7f81ea59e558 10463: dor::a(dny) -> boolean
fifo write: @1699477132947908357 0x7f81e2f2ed94 185: cqn$$Lambda$7956.0x00007f8160ca71d8::<init>(com.google.common.collect.ImmutableList$Builder) -> void
fifo write: @1699477132947959108 0x7f81e2f2f214 523: dhf::b(dvi) -> it.unimi.dsi.fastutil.longs.LongSet
fifo write: @1699477132948431024 0x7f81e2f2f909 3432: cqn::a(dvi, it.unimi.dsi.fastutil.longs.LongSet, java.util.function.Consumer) -> void
fifo write: @1699477132948660957 0x7f81e2f31309 3237: cqn::a(hw, dvi) -> java.util.List
fifo write: @1699477132952672769 0x7f81ea5a4d10 1864: cpy::t(gw) -> boolean
fifo write: @1699477132952800480 0x7f81ea5a6872 1218: asz::a(java.util.function.IntConsumer) -> void
fifo write: @1699477132952842051 0x7f81ea5a770b 62: gw::j() -> gw$a
fifo write: @1699477132952911562 0x7f81ea5a7ade 459: duh::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477132953023103 0x7f81ea5a8322 1239: duj::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477132953054734 0x7f81e2f32994 240: dun::c() -> int
fifo write: @1699477132953341287 0x7f81ea5a952e 23: dlh::a(long) -> long
fifo write: @1699477132953540520 0x7f81e2f32ed7 2760: dui::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477132953853124 0x7f81ea5a987d 330: dks$a$$Lambda$1675.0x00007f81605c1048::test(Object) -> boolean
fifo write: @1699477132953976246 0x7f81e2f3439c 388: java.util.stream.Collectors$$Lambda$7986.0x00007f8160964890::accept(Object, Object) -> void
fifo write: @1699477132954032026 0x7f81e2b13cf4 67: dvi::c() -> dko$b
fifo write: @1699477132954117908 0x7f81e2f34934 701: dhg$$Lambda$7984.0x00007f8160cab5f0::apply(Object) -> Object
fifo write: @1699477132954196479 0x7f81e2f35094 185: java.util.stream.Collectors$$Lambda$7988.0x00007f8160964d18::<init>(java.util.function.Supplier) -> void
fifo write: @1699477132954237929 0x7f81ea5a9fcc 3: dlq::c() -> boolean
fifo write: @1699477132954298230 0x7f81ea5aa2d0 55: it.unimi.dsi.fastutil.ints.IntArraySet$1::hasNext() -> boolean
fifo write: @1699477132954384261 0x7f81e2f35514 230: dhg$$Lambda$8003.0x00007f8160cb0a88::<init>(it.unimi.dsi.fastutil.ints.IntSet, crd$b) -> void
fifo write: @1699477132954464702 0x7f81e2f35a14 988: dhg::a(dvi) -> Integer
fifo write: @1699477132954612644 0x7f81e2f36434 2198: java.util.stream.Collectors::lambda$groupingBy$53(java.util.function.Function, java.util.function.Supplier, java.util.function.BiConsumer, java.util.Map, Object) -> void
fifo write: @1699477132954679815 0x7f81e2f37414 230: dhg$$Lambda$8012.0x00007f8160cb2960::<init>(hq, dvi) -> void
fifo write: @1699477132954774846 0x7f81e2f37914 420: dhg$$Lambda$8013.0x00007f8160cb2b88::<init>(dhg, cqp, cqn, dlr, dhf, cpc) -> void
fifo write: @1699477132955207812 0x7f81ea5aa5d8 459: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::get(long) -> float
fifo write: @1699477132957487611 0x7f81ea5ab2c0 45670: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477132957680443 0x7f81e2f3863f 25125: don::a(dny) -> boolean
fifo write: @1699477132958420693 0x7f81ea5c70d0 135: dkv::f() -> int
fifo write: @1699477132958481874 0x7f81ea5c7550 135: dkv::d() -> int
fifo write: @1699477132959422836 0x7f81ea5c7ad3 3208: cqt::e(gw) -> float
fifo write: @1699477132960350928 0x7f81e2f4220f 11578: dia::a(gw, dfj, boolean) -> dfj
fifo write: @1699477132960864245 0x7f81ea5c9be3 1260: dlp::<init>(dhg, cpx) -> void
fifo write: @1699477132960940116 0x7f81ea5caeba 774: dur::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477132961419432 0x7f81e2f4708f 11103: dia::a(gw, dfj, boolean) -> dfj
fifo write: @1699477132966901322 0x7f81ea5cbc70 3029: dor$$Lambda$8016.0x00007f8160cb3738::apply(Object) -> Object
fifo write: @1699477132969330103 0x7f81ea5ce4d4 439: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset::firstEntry() -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477132970132753 0x7f81e2f4baf4 941: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::remove(int) -> Object
fifo write: @1699477132970223405 0x7f81e2f4c5b4 875: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::fixPointers(int) -> void
fifo write: @1699477132970319776 0x7f81e2f4d0d4 961: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::removeEntry(int) -> Object
fifo write: @1699477132970418857 0x7f81e2f4daf9 1872: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477132972401993 0x7f81e2f4ea17 525: org.apache.commons.lang3.mutable.MutableDouble::getValue() -> Double
fifo write: @1699477132973031821 0x7f81ea5ceedc 4131: dia::a(gw, dfj, boolean) -> dfj
fifo write: @1699477132974054994 0x7f81ea5d210b 974: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Subset::iterator() -> it.unimi.dsi.fastutil.longs.LongBidirectionalIterator
fifo write: @1699477132974172376 0x7f81ea5d2f53 556: dkv$$Lambda$8078.0x00007f8160cccd40::<init>(dkv, cpc, dlg) -> void
fifo write: @1699477132974803954 0x7f81ea5d35fa 575: dmx::a(dms, dmq, gw, dke) -> dfj
fifo write: @1699477132975583504 0x7f81e2f4f094 621: dns::b(cpw, gw) -> boolean
fifo write: @1699477132975849877 0x7f81e2f4f754 2383: dns$$Lambda$8085.0x00007f8160cce2d8::test(Object) -> boolean
fifo write: @1699477132975919308 0x7f81e2f50734 2036: dns::e(dfj) -> boolean
fifo write: @1699477132976987562 0x7f81ea5d42a5 8300: cqt::f(gw) -> float
fifo write: @1699477132980496207 0x7f81e2f51579 1378: dnw::a(cqp, gw) -> void
fifo write: @1699477132980609199 0x7f81e2f5221e 1807: dsj::a(cqp, asc, gw) -> dfj
fifo write: @1699477132980784631 0x7f81e2f53092 1270: dnq::a(dpx, cqp, asc, int, int, gw$a) -> boolean
fifo write: @1699477132980857092 0x7f81e2f53d09 915: dnr::a(asc, int, int, float, int, dpy) -> int
fifo write: @1699477132981171346 0x7f81e2f54717 2662: dnr::a(cpw, gw) -> boolean
fifo write: @1699477132981484900 0x7f81e2f55a34 647: dki$c::c() -> java.util.OptionalInt
fifo write: @1699477132981815914 0x7f81ea5d978c 275: akq::a(gw, dfj, dfj) -> void
fifo write: @1699477132982634975 0x7f81e2f56194 488: dqf$$Lambda$8088.0x00007f8160cce9c8::test(Object) -> boolean
fifo write: @1699477132982694546 0x7f81e2f56754 87: dqf::a(ha, ha) -> boolean
fifo write: @1699477132983214172 0x7f81e2f56c7f 3474: dou::a(dny) -> boolean
fifo write: @1699477132983274053 0x7f81ea5da068 199: dzs::a(int, double, double, double, double) -> double
fifo write: @1699477132983421645 0x7f81e2f58494 621: dns::a(cpw, gw) -> boolean
fifo write: @1699477132983578137 0x7f81e2f58b34 1519: dns$$Lambda$8011.0x00007f8160cb2710::test(Object) -> boolean
fifo write: @1699477132983644368 0x7f81e2f596d4 672: dom$b::a(gw) -> gw
fifo write: @1699477132983716389 0x7f81ea5da54c 2: dva::j() -> int
fifo write: @1699477132983949812 0x7f81ea5da84c 6: dxf$a::d() -> dfj
fifo write: @1699477132984000982 0x7f81e2f59e94 354: dvm::b(int) -> int
fifo write: @1699477132984063543 0x7f81e2f5a434 829: dvm::b(int, int) -> int
fifo write: @1699477132984123344 0x7f81e2f5adb4 817: dvm::a(int, int) -> int
fifo write: @1699477132984171355 0x7f81ea5dab4c 6: dxf$a::e() -> dfj
fifo write: @1699477132984218335 0x7f81ea5dae4c 6: dxf$a::b() -> dfj
fifo write: @1699477132984283646 0x7f81e2f5b734 1402: dvm::b(int, int, int) -> gw$a
fifo write: @1699477132984461568 0x7f81ea5db12f 6: gw$a::<init>(int, int, int) -> void
fifo write: @1699477132987270414 0x7f81ea5db459 50: dnw$$Lambda$8017.0x00007f8160cb6298::test(Object) -> boolean
fifo write: @1699477132987707930 0x7f81e2f5c314 589: bfx::a(asc, float, float, float, float) -> float
fifo write: @1699477132987775391 0x7f81e2f5ca17 702: dnr::a(asc, float, float, float, float) -> float
fifo write: @1699477132988788983 0x7f81ea5dbbdd 9448: dum::a(dun, asc, gw) -> boolean
fifo write: @1699477132988859154 0x7f81e2f5d2ff 3137: dnr::a(dny) -> boolean
fifo write: @1699477132988959206 0x7f81e2f5eca6 6593: dnr::b(cqp, gw) -> boolean
fifo write: @1699477132989006206 0x7f81e2f61574 382: ha::b(asc) -> ha
fifo write: @1699477132989066397 0x7f81e2f61af7 289: ac::a(Object[], asc) -> Object
fifo write: @1699477132990085020 0x7f81ea5e0d53 556: dum$$Lambda$8005.0x00007f8160cb0ee8::<init>(dup, dun, asc) -> void
fifo write: @1699477132991086203 0x7f81ea5e13ed 219: java.util.stream.Stream::of(Object) -> java.util.stream.Stream
fifo write: @1699477132991726841 0x7f81ea5e1a28 739: dum$$Lambda$8006.0x00007f8160cb13d8::<init>(dnj, dun, asc, org.apache.commons.lang3.mutable.MutableBoolean) -> void
fifo write: @1699477132992871516 0x7f81e2f62014 47: dom$a::a(float) -> int
fifo write: @1699477132992954757 0x7f81e2f62454 327: dns::a(double, double, double, double) -> double
fifo write: @1699477132993285352 0x7f81ea5e2211 54: ead$a::b(long, ha) -> long
fifo write: @1699477132993577205 0x7f81e2f62c22 6258: dhf::a(java.util.function.Predicate, java.util.function.BiConsumer) -> void
fifo write: @1699477132995076765 0x7f81e2f65b67 19424: eaf::b(cpc) -> void
fifo write: @1699477132997141361 0x7f81ea5e268b 3714: cqd::a(gw, dfj, int) -> boolean
fifo write: @1699477132998236335 0x7f81ea5e54bd 7481: djf::a(ehi, aqn) -> void
fifo write: @1699477132998275566 0x7f81e2f6e914 546: drg::a(asc, int, int, int, int, boolean) -> boolean
fifo write: @1699477132998382927 0x7f81e2f6f014 361: dva$$Lambda$8097.0x00007f8160cca9c8::accept(Object) -> void
fifo write: @1699477132998421848 0x7f81e2f6f5b4 666: com.google.common.collect.Iterators$ConcatenatedIterator::next() -> Object
fifo write: @1699477132998545929 0x7f81e2f6fd54 2065: dva::a(gw) -> dva
fifo write: @1699477132998843053 0x7f81e2f70d34 389: dus::a(dun, asc, gw) -> boolean
fifo write: @1699477132999332990 0x7f81ea5eb077 436: java.util.stream.Streams$RangeIntSpliterator::forEachRemaining(java.util.function.IntConsumer) -> void
fifo write: @1699477133000842969 0x7f81ea5eb8ca 307: java.util.concurrent.CompletableFuture::completedFuture(Object) -> java.util.concurrent.CompletableFuture
fifo write: @1699477133001863652 0x7f81ea5ebe10 925: dub::a(dun, asc, gw) -> boolean
fifo write: @1699477133002297218 0x7f81ea5ecccc 2: it.unimi.dsi.fastutil.ints.IntArraySet::size() -> int
fifo write: @1699477133008418187 0x7f81e2f71314 361: it.unimi.dsi.fastutil.objects.ObjectArrayList$$Lambda$391.0x00007f816024ade8::accept(Object, Object) -> void
fifo write: @1699477133009070165 0x7f81ea5ed2d8 123: dfi$a::l(cpb, gw) -> eig
fifo write: @1699477133010318441 0x7f81e2f71814 230: dhk$$Lambda$7965.0x00007f8160ca2f58::<init>(dhk, bdy) -> void
fifo write: @1699477133010528594 0x7f81e2f71d14 185: dhk$$Lambda$7967.0x00007f8160ca33c8::<init>(dhk) -> void
fifo write: @1699477133010760447 0x7f81e2f721da 819: bdu::a(cpc, aev, String) -> bdy
fifo write: @1699477133010830808 0x7f81e2f72ad4 1665: dhk$$Lambda$7967.0x00007f8160ca33c8::accept(Object) -> void
fifo write: @1699477133011007420 0x7f81e2f73797 2006: dhk$$Lambda$7965.0x00007f8160ca2f58::apply(Object) -> Object
fifo write: @1699477133011048780 0x7f81ea5ed6dd 1004: ehq::<init>(int, int, int) -> void
fifo write: @1699477133011203822 0x7f81e2f746d4 1290: dhk::b(dhf) -> void
fifo write: @1699477133011381045 0x7f81e2f7517f 1618: dhk::a(bdy, com.mojang.datafixers.util.Either) -> com.mojang.datafixers.util.Either
fifo write: @1699477133011575037 0x7f81ea5ee150 175: cqu::a(dko$a) -> Iterable
fifo write: @1699477133012359697 0x7f81e2f76127 9522: dhk::a(java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List) -> java.util.concurrent.CompletableFuture
fifo write: @1699477133013359480 0x7f81ea5ee611 78: dia::j(gw) -> short
fifo write: @1699477133013572513 0x7f81ea5ee974 611: dhf::a(java.util.function.Supplier) -> cqu
fifo write: @1699477133015707080 0x7f81e2f79d14 571: bzi::b(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477133015886953 0x7f81e2f7a4bc 2455: bzi::a(cqk, gw, asc) -> boolean
fifo write: @1699477133016316328 0x7f81e2f7b737 816: dfi$a::a(cxq) -> dfj
fifo write: @1699477133016428710 0x7f81e2f7bf57 1214: dvm::a(cpb, int, int, int, dva) -> dfj
fifo write: @1699477133016485260 0x7f81e2f7ca37 832: dfi$a::a(czh) -> dfj
fifo write: @1699477133016935966 0x7f81e2f7d2d4 5287: dxe$c::a(cpy, int, int, int, dva) -> boolean
fifo write: @1699477133017084348 0x7f81e2f7f381 6108: dvm::a(cqp, dfj, int, int, int, dva) -> void
fifo write: @1699477133017163279 0x7f81e2f81a7f 4470: dam::b(dfj, cpy, gw) -> boolean
fifo write: @1699477133018588807 0x7f81ea5ef574 10723: bpi::a() -> boolean
fifo write: @1699477133018639128 0x7f81ea5f715b 224: dfi$a::a(cpb, gw, ha, dax) -> boolean
fifo write: @1699477133018687739 0x7f81e2f837d4 1673: dnw$$Lambda$8014.0x00007f8160cb2dc0::test(Object) -> boolean
fifo write: @1699477133018725829 0x7f81e2f84414 1324: dnw::a(aqh, dfj) -> boolean
fifo write: @1699477133018982362 0x7f81ea5f76dc 119: dfi$a::d(cpb, gw, ha) -> boolean
fifo write: @1699477133023477241 0x7f81ea5f7d7e 12319: dum::a(cqp, dhg, asc, gw) -> boolean
fifo write: @1699477133023750324 0x7f81e2f84f1e 1697: dtt::a(asc, dlp) -> int
fifo write: @1699477133024129159 0x7f81e2f85db7 624: dum::a(cqp, dhg, asc, gw) -> boolean
fifo write: @1699477133024162869 0x7f81e2f86596 181: cqd::a(gw, dfj, int) -> boolean
fifo write: @1699477133024662346 0x7f81e9759e37 3339: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::remove(long) -> Object
fifo write: @1699477133024966330 0x7f81e9c04c04 75: cqt::a(cpy, gw, boolean) -> boolean
fifo write: @1699477133025460186 0x7f81e9c042cf 705: java.util.stream.StreamSupport::intStream(java.util.Spliterator$OfInt, boolean) -> java.util.stream.IntStream
fifo write: @1699477133026089294 0x7f81ea2bbc7d 12734: dum::a(dun, asc, gw) -> boolean
fifo write: @1699477133028879960 0x7f81e2f86a14 144: dpk$$Lambda$8021.0x00007f8160cb7258::get() -> Object
fifo write: @1699477133028944211 0x7f81e2f86df4 870: dpk::d(dfj) -> boolean
fifo write: @1699477133028997842 0x7f81e2f875b4 1214: dpk$$Lambda$8018.0x00007f8160cb64e8::test(Object) -> boolean
fifo write: @1699477133029486558 0x7f81e2f8801c 3921: dpk::a(cqp, gw, dqy) -> java.util.OptionalInt
fifo write: @1699477133030046365 0x7f81e2f89bbf 9636: dpk::a(dny) -> boolean
fifo write: @1699477133031495703 0x7f81ea3aa17d 2692: akq::a(bdp, biq) -> void
fifo write: @1699477133031531254 0x7f81e9c03fd7 35: java.util.stream.Sink$ChainedInt::end() -> void
fifo write: @1699477133031800367 0x7f81ea151f90 2789: akq$$Lambda$7306.0x00007f8160bc4da0::accept(Object) -> void
fifo write: @1699477133032406945 0x7f81ea2b5a07 10565: eaf::b(cpc) -> void
fifo write: @1699477133032482156 0x7f81e9c03267 513: dki::a(cqb, int, java.util.function.Predicate, java.util.function.Predicate, gw$a, int, ha) -> java.util.OptionalInt
fifo write: @1699477133034989858 0x7f81ea150b8f 1432: bgj::a(asc) -> int
fifo write: @1699477133035318643 0x7f81e2f8d7bc 2403: dhg::a(cqp, java.util.Set, cpc) -> void
fifo write: @1699477133038266471 0x7f81ea14e8a1 2711: ctd::a(dfj, cpy, gw) -> boolean
fifo write: @1699477133042586376 0x7f81e9f24a2c 4531: dns::c(cpw, gw) -> boolean
fifo write: @1699477133063684378 0x7f81e9f2256d 3043: dhf::a(java.util.function.Predicate, java.util.function.BiConsumer) -> void
fifo write: @1699477133066767128 0x7f81e2e976a9 6301: dam::b(dfj, akq, gw, asc) -> void
fifo write: @1699477133075328718 0x7f81e9f210f3 1882: it.unimi.dsi.fastutil.objects.ObjectArraySet::add(Object) -> boolean
fifo write: @1699477133075546691 0x7f81ea2b4e50 139: it.unimi.dsi.fastutil.ints.IntArraySet$1::nextInt() -> int
fifo write: @1699477133080081319 0x7f81e1d82c14 187: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::getWorkingMax() -> int
fifo write: @1699477133080795808 0x7f81ea3a9cf3 171: it.unimi.dsi.fastutil.objects.ObjectArrayList$1::<init>(it.unimi.dsi.fastutil.objects.ObjectArrayList, int) -> void
fifo write: @1699477133084813110 0x7f81ea3a99cc 6: cxu$c::a() -> gw
fifo write: @1699477133084929291 0x7f81e247f53e 680: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477133085962135 0x7f81ea3a9373 280: ctd::d(dfj, cpb, gw) -> boolean
fifo write: @1699477133086036036 0x7f81e9f20af0 264: java.util.stream.ReduceOps$3::getOpFlags() -> int
fifo write: @1699477133086283159 0x7f81e9f2011f 576: java.util.Spliterator$OfInt::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477133086887337 0x7f81e9f1ee75 1844: it.unimi.dsi.fastutil.objects.ObjectArraySet::add(Object) -> boolean
fifo write: @1699477133091651758 0x7f81ea3a8ed0 67: java.util.stream.Sink$ChainedInt::begin(long) -> void
fifo write: @1699477133092204115 0x7f81e9f16f97 12595: eaf::b(cpc) -> void
fifo write: @1699477133092869324 0x7f81e9f167bb 293: java.util.stream.IntStream::range(int, int) -> java.util.stream.IntStream
fifo write: @1699477133093265639 0x7f81e9f16400 75: cqt::b(cpy, gw) -> boolean
fifo write: @1699477133093906247 0x7f81e9f15972 946: java.util.stream.IntPipeline::mapToObj(java.util.function.IntFunction, int) -> java.util.stream.Stream
fifo write: @1699477133096420249 0x7f81e2e51347 11302: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477133097202369 0x7f81ea5fe5a2 2606: dum::a(cqp, dhg, asc, gw) -> boolean
fifo write: @1699477133098711559 0x7f81e9d6d834 3204: dhf::a(java.util.function.Predicate, java.util.function.BiConsumer) -> void
fifo write: @1699477133099517359 0x7f81ea059c55 126: java.lang.invoke.LambdaForm$MH.0x00007f81601b5400::linkToTargetMethod(Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477133099797293 0x7f81e2c01db4 617: dki$c::b() -> java.util.OptionalInt
fifo write: @1699477133100108207 0x7f81ea1af357 35: duf::a(asc, gw) -> int
fifo write: @1699477133100849726 0x7f81e9b2fed0 5055: dpd::a(dny) -> boolean
fifo write: @1699477133101090059 0x7f81e9b402ef 1922: dhg$$Lambda$7999.0x00007f8160cafd50::accept(Object) -> void
fifo write: @1699477133101153490 0x7f81ea1aee50 131: akx::b(int, int) -> boolean
fifo write: @1699477133102154623 0x7f81e99db9de 5647: dke$c::b(int, int, int) -> dke$b
fifo write: @1699477133102214064 0x7f81e271dd14 240: djf$$Lambda$7213.0x00007f8160ba5c30::apply(long) -> Object
fifo write: @1699477133102269494 0x7f81e25b4f94 482: djf$$Lambda$7214.0x00007f8160ba85a8::test(Object) -> boolean
fifo write: @1699477133103662352 0x7f81ea0faadc 451: java.lang.invoke.LambdaForm$DMH.0x00007f81601b5000::newInvokeSpecial(Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477133104374242 0x7f81e9a59e0f 2242: dhy$$Lambda$8001.0x00007f8160cb0238::accept(int) -> void
fifo write: @1699477133106050253 0x7f81ea30f902 2309: akx::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477133108061159 0x7f81e9f013bf 4510: cpy::getNoiseBiome(int, int, int) -> he
fifo write: @1699477133114639274 0x7f81ea194205 1623: dki::a(cqb, gw, int, java.util.function.Predicate, java.util.function.Predicate) -> java.util.Optional
fifo write: @1699477133114709715 0x7f81e9d6d276 193: dnr::a(int, int, int, int, dpy) -> double
fifo write: @1699477133114778316 0x7f81e2260994 673: java.util.DualPivotQuicksort::insertionSort(int[], int, int) -> void
fifo write: @1699477133115501625 0x7f81ea193726 429: dnw::a(java.util.function.Function, gw, java.util.function.Predicate) -> boolean
fifo write: @1699477133116360386 0x7f81e2234514 466: dss$a$$Lambda$8141.0x00007f8160cdd0d0::applyAsInt(Object) -> int
fifo write: @1699477133116788351 0x7f81e8bf7fe8 168: itable stub
fifo write: @1699477133116864072 0x7f81e2994fd4 1055: dgj::equals(Object) -> boolean
fifo write: @1699477133117935256 0x7f81e9c4d128 331: ehw::b(gu, int, int, int) -> boolean
fifo write: @1699477133118062068 0x7f81e9f00ed9 54: dhf::y() -> boolean
fifo write: @1699477133119125971 0x7f81e1837774 9089: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477133119325544 0x7f81e234edf4 111: cqn::a() -> boolean
fifo write: @1699477133119375385 0x7f81e2979274 93: java.util.Arrays::sort(int[]) -> void
fifo write: @1699477133119424845 0x7f81e231ef14 119: it.unimi.dsi.fastutil.ints.IntArraySet::toIntArray() -> int[]
fifo write: @1699477133119676768 0x7f81e1bac3c0 991: java.util.DualPivotQuicksort::sort(int[], int, int, int) -> void
fifo write: @1699477133120956755 0x7f81e26e78e6 5318: java.util.DualPivotQuicksort::sort(java.util.DualPivotQuicksort$Sorter, int[], int, int, int) -> void
fifo write: @1699477133122850549 0x7f81ea60058a 35704: dor::a(cqp, asc, dqi, double, double, double, double, double, double, int, int, int, int, int) -> boolean
fifo write: @1699477133122904180 0x7f81e23e7914 157: biq::b(aqh) -> double
fifo write: @1699477133122964931 0x7f81e9c4cbd9 146: dnr$$Lambda$8087.0x00007f8160cce778::test(Object) -> boolean
fifo write: @1699477133123594979 0x7f81e21f1f97 5570: dos::a(dny) -> boolean
fifo write: @1699477133124137266 0x7f81e2e3a87c 8496: dos::a(cpw, gw, asc) -> java.util.Optional
fifo write: @1699477133124215287 0x7f81e9a585ee 322: java.util.stream.IntPipeline$1::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477133125207110 0x7f81e9a58053 216: ThreadLocal$ThreadLocalMap::getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry) -> ThreadLocal$ThreadLocalMap$Entry
fifo write: @1699477133125864278 0x7f81e9dba7d8 3539: java.util.PriorityQueue::add(Object) -> boolean
fifo write: @1699477133128077887 0x7f81e9f14821 1413: dut::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477133128800096 0x7f81e9a57d4c 2: dla::e() -> int
fifo write: @1699477133132074228 0x7f81e27f02bd 1502: com.google.common.base.Preconditions::checkArgument(boolean, String, int) -> void
fifo write: @1699477133132395723 0x7f81ea1551c9 2872: java.util.PrimitiveIterator$OfInt::forEachRemaining(java.util.function.IntConsumer) -> void
fifo write: @1699477133132609175 0x7f81ea1545d4 572: dkm$q::hashCode() -> int
fifo write: @1699477133132919169 0x7f81ea37b1d4 5188: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::add(Object) -> boolean
fifo write: @1699477133142118337 0x7f81e9dee29d 9831: dhq::a(gw, dfj, boolean) -> dfj
fifo write: @1699477133143978171 0x7f81ea2a2a7b 3547: cxt::a(dfj, ha) -> boolean
fifo write: @1699477133144410847 0x7f81ea2a0c3e 2815: java.util.concurrent.CompletableFuture::uniApplyStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477133157320033 0x7f81e27253f7 359: io.netty.util.internal.PlatformDependent::getLong(long) -> long
fifo write: @1699477133157365324 0x7f81e26bd297 506: io.netty.buffer.UnsafeByteBufUtil::getLong(long) -> long
fifo write: @1699477133157400924 0x7f81e2976b19 240: io.netty.buffer.AbstractByteBuf::readLong() -> long
fifo write: @1699477133157437585 0x7f81e25c7394 183: io.netty.buffer.PooledUnsafeDirectByteBuf::_getLong(int) -> long
fifo write: @1699477133157473265 0x7f81e27344f4 265: io.netty.util.internal.PlatformDependent0::getLong(long) -> long
fifo write: @1699477133157504776 0x7f81e2bffa94 164: sun.misc.Unsafe::getLong(long) -> long
fifo write: @1699477133163970999 0x7f81e2adc797 511: drh::a(asc, int, int, int, int, boolean) -> boolean
fifo write: @1699477133169572501 0x7f81e272b0b7 987: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::fixPointers(int, int) -> void
fifo write: @1699477133173493482 0x7f81ea0920b7 2132: dhy::a(java.util.function.Consumer) -> void
fifo write: @1699477133180126876 0x7f81e2ec40ff 40373: bjg::b_() -> void
fifo write: @1699477133183412589 0x7f81ea259cc4 14982: dkv::a(dlu, cqn, dlg, dhf, int, int) -> dhf
fifo write: @1699477133183683512 0x7f81ea1ee2ac 9469: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477133183869045 0x7f81e24ac5b7 6947: coz::computeNext() -> Object
fifo write: @1699477133183915055 0x7f81ea37ad50 55: dfi$a::f() -> boolean
fifo write: @1699477133183973136 0x7f81e2db0114 348: dhg$$Lambda$7998.0x00007f8160cafb18::accept(Object) -> void
fifo write: @1699477133188065529 0x7f81ea1ec47d 2234: akx::a(int, int) -> dhf
fifo write: @1699477133194138977 0x7f81ea5dc870 5261: dpd::a(dny) -> boolean
fifo write: @1699477133194236049 0x7f81e16b0041 589: ac::b(it.unimi.dsi.fastutil.objects.ObjectArrayList, asc) -> void
fifo write: @1699477133195475855 0x7f81ea5e265e 3345: akx::a_(gw) -> dfj
fifo write: @1699477133195545775 0x7f81e2b9db14 594: dzu$$Lambda$7978.0x00007f8160ca8bf8::accept(Object, Object) -> void
fifo write: @1699477133197733924 0x7f81ea615865 38954: eak::b(cpv, gw, eam) -> void
fifo write: @1699477133197801485 0x7f81e272c5fc 1933: dzu::a(gw, dfj) -> void
fifo write: @1699477133198546014 0x7f81ea30bf43 4108: akx::a(dks$a, int, int) -> int
fifo write: @1699477133198799837 0x7f81e9d6ce58 123: dfi$a::a(cpy, gw) -> boolean
fifo write: @1699477133199874861 0x7f81ea258753 1272: biq::ci() -> int
fifo write: @1699477133200510470 0x7f81e27b7957 4310: cmg::a(cpu[]) -> cmg
fifo write: @1699477133200610781 0x7f81e29ecd57 3225: cmg::a(java.util.stream.Stream) -> cmg
fifo write: @1699477133200937245 0x7f81e981d640 2319: cpy::a(int, int, dhk) -> dhf
fifo write: @1699477133202597476 0x7f81e2a1a137 5749: cxt::a(cpb, ha, gw, dfj) -> boolean
fifo write: @1699477133207310237 0x7f81e9ec8a4f 11628: doo::a(cqp, gw, dfj, dqf, asc, java.util.List) -> boolean
fifo write: @1699477133218337029 0x7f81e9fae9c7 19882: dnr::a(cqp, asc, gw, int, int, float, double, int, float, dpy) -> void
fifo write: @1699477133218400180 0x7f81e9c8eb91 58: csv::a(dfj, dfj, cpw, gw, int, int) -> void
fifo write: @1699477133224432487 0x7f81e98d3759 13338: cpc$1::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477133224827462 0x7f81ea24577f 3843: ebo::a(cpw, ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477133225330978 0x7f81ea1f34f0 3942: ebm$d::a(cpv) -> boolean
fifo write: @1699477133225545981 0x7f81ea0bd1ba 3047: ebm$b::a(cpv) -> boolean
fifo write: @1699477133225683983 0x7f81e2ac4ebf 6819: coz::computeNext() -> Object
fifo write: @1699477133225985377 0x7f81e98d2d67 280: ebo::a(cpv, dfj, gw, csv, gw, boolean) -> void
fifo write: @1699477133226048138 0x7f81e9d8ee61 146: dfi$a::a(cpv, gw, csv, gw, boolean) -> void
fifo write: @1699477133228245946 0x7f81ea2452b3 55: ehi::a(double, double, double, double, double, double) -> boolean
fifo write: @1699477133228571360 0x7f81e2886399 5246: bji::dx() -> void
fifo write: @1699477133231667070 0x7f81ea469add 9754: ebm::a() -> void
fifo write: @1699477133231743471 0x7f81e2270da7 2666: io.netty.channel.epoll.AbstractEpollStreamChannel::doWriteMultiple(io.netty.channel.ChannelOutboundBuffer) -> int
fifo write: @1699477133231799372 0x7f81ea1f2cd0 331: java.util.IdentityHashMap$KeySet::contains(Object) -> boolean
fifo write: @1699477133244046089 0x7f81e9fac7b6 2509: io.netty.util.internal.InternalThreadLocalMap::slowGet() -> io.netty.util.internal.InternalThreadLocalMap
fifo write: @1699477133249415439 0x7f81ea52be64 5851: coz::computeNext() -> Object
fifo write: @1699477133258226662 0x7f81e248bf94 240: so::readDouble() -> double
fifo write: @1699477133258278413 0x7f81e24bdd14 188: io.netty.buffer.AbstractByteBuf::readDouble() -> double
fifo write: @1699477133261027948 0x7f81e1732b74 989: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::remove(long) -> byte
fifo write: @1699477133261761218 0x7f81e244cfbc 4144: dzy::b(int) -> int
fifo write: @1699477133266210275 0x7f81ea62befa 28363: dns::a(cpw, gw, ha, int, boolean) -> void
fifo write: @1699477133266256646 0x7f81e1850894 361: djl$$Lambda$7215.0x00007f8160ba87f8::accept(Object) -> void
fifo write: @1699477133266287436 0x7f81e16f6cf4 51: dje::a(djn) -> djn
fifo write: @1699477133266412308 0x7f81e27dc8e7 13578: djl::a(djn, dje) -> void
fifo write: @1699477133269384345 0x7f81e8bf0500 568: I2C/C2I adapters(0xbbbbbbbbebbb)
fifo write: @1699477133270593891 0x7f81e17ebe59 1343: dvm::a(java.util.List, dva) -> dvm
fifo write: @1699477133270658232 0x7f81e28b7374 49: dva::a(int, int, int) -> dva
fifo write: @1699477133270756303 0x7f81e9dba44c 2: dva::l() -> int
fifo write: @1699477133270792094 0x7f81e9dba14c 2: dvm::g() -> int
fifo write: @1699477133270904865 0x7f81ea30b9d9 102: dva::a(dva) -> boolean
fifo write: @1699477133271080327 0x7f81e28be414 240: java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$783.0x00007f81601e0388::accept(Object) -> void
fifo write: @1699477133271176539 0x7f81e1a7f114 361: dva$$Lambda$8028.0x00007f8160cb5ad0::accept(Object) -> void
fifo write: @1699477133271239169 0x7f81e1a84f94 470: dvm$$Lambda$8026.0x00007f8160cb5648::apply(Object) -> Object
fifo write: @1699477133271377571 0x7f81e16cb254 1134: dva::b(dva) -> dva
fifo write: @1699477133271432522 0x7f81e272f0d7 1132: java.util.ArrayList$ArrayListSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477133271559124 0x7f81e21c0eba 1762: java.util.stream.SpinedBuffer::get(long) -> Object
fifo write: @1699477133272278213 0x7f81e18db894 31: dwa::a(dva) -> dvm
fifo write: @1699477133272544786 0x7f81e19f3386 2027: dxe::a(dvm, dvn, asc, int, int, int, ha, int) -> dxe$c
fifo write: @1699477133272603457 0x7f81e1c667f7 1427: dxe::a(dvn, asc, int, int, int, ha, int, dxf$a) -> dxe$c
fifo write: @1699477133273318266 0x7f81e2097634 602: java.util.concurrent.CompletableFuture$UniWhenComplete::<init>(java.util.concurrent.Executor, java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture, java.util.function.BiConsumer) -> void
fifo write: @1699477133273584600 0x7f81e220b200 3337: java.util.concurrent.CompletableFuture::uniWhenCompleteStage(java.util.concurrent.Executor, java.util.function.BiConsumer) -> java.util.concurrent.CompletableFuture
fifo write: @1699477133273614810 0x7f81e28c5694 189: cqv::<init>(cqv$a, long) -> void
fifo write: @1699477133274108056 0x7f81e9c95cb0 969: java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$784.0x00007f81601e0638::getAsBoolean() -> boolean
fifo write: @1699477133274221168 0x7f81e1b89e8a 766: cpc::l() -> gw
fifo write: @1699477133279480806 0x7f81ea37260c 2679: ebm::a() -> void
fifo write: @1699477133280192575 0x7f81ea3711f8 827: dkm$o::equals(Object) -> boolean
fifo write: @1699477133280225595 0x7f81e21f6714 480: java.io.DataOutputStream::writeFloat(float) -> void
fifo write: @1699477133281886607 0x7f81ea090eb0 1169: dhr::a() -> void
fifo write: @1699477133281988138 0x7f81e9fab04c 1969: dhr::a(cqw, crc$f, int, int, int) -> void
fifo write: @1699477133283385166 0x7f81e2004a94 230: akq$$Lambda$7176.0x00007f8160b9f320::<init>(akq, dhf) -> void
fifo write: @1699477133284115536 0x7f81e2287337 5177: akq::a(dhf) -> void
fifo write: @1699477133285381412 0x7f81e1aa2e14 334: java.nio.Buffer::nextPutIndex(int) -> int
fifo write: @1699477133285570564 0x7f81e1f625df 1321: jdk.internal.misc.ScopedMemoryAccess::putLongUnaligned(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, long, boolean) -> void
fifo write: @1699477133285654265 0x7f81e18c0b3c 746: jdk.internal.misc.ScopedMemoryAccess::putLongUnalignedInternal(jdk.internal.misc.ScopedMemoryAccess$Scope, Object, long, long, boolean) -> void
fifo write: @1699477133286012670 0x7f81e2cdc347 2517: java.nio.HeapByteBuffer::putLong(long) -> java.nio.ByteBuffer
fifo write: @1699477133286399025 0x7f81e2201397 2626: sun.security.provider.SHA2$SHA256::clone() -> Object
fifo write: @1699477133286467396 0x7f81e226a014 2524: sun.security.provider.SHA2::clone() -> Object
fifo write: @1699477133286672698 0x7f81e2253914 288: com.google.common.hash.AbstractByteHasher::putLong(long) -> com.google.common.hash.Hasher
fifo write: @1699477133286816490 0x7f81e28e9474 232: com.google.common.hash.Java8Compatibility::clear(java.nio.Buffer) -> void
fifo write: @1699477133286891551 0x7f81e2578697 188: com.google.common.hash.AbstractHashFunction::newHasher(int) -> com.google.common.hash.Hasher
fifo write: @1699477133287041493 0x7f81e2290394 240: com.google.common.hash.HashCode$BytesHashCode::asLong() -> long
fifo write: @1699477133287175875 0x7f81e1ba4374 1046: com.google.common.hash.AbstractHashFunction::hashLong(long) -> com.google.common.hash.HashCode
fifo write: @1699477133287308356 0x7f81e22f4cbd 1502: com.google.common.base.Preconditions::checkState(boolean, String, int) -> void
fifo write: @1699477133287412018 0x7f81e2d32ee6 2404: com.google.common.hash.AbstractByteHasher::update(int) -> com.google.common.hash.Hasher
fifo write: @1699477133287463798 0x7f81e2902094 185: akx$$Lambda$7982.0x00007f8160cab160::<init>(akx) -> void
fifo write: @1699477133287556799 0x7f81e1fb8597 1643: cqv::a(long) -> long
fifo write: @1699477133287595660 0x7f81e2904394 185: akx$$Lambda$7981.0x00007f8160caaf18::<init>(akx) -> void
fifo write: @1699477133287748662 0x7f81e18dc519 707: dlf::a(gw) -> asc
fifo write: @1699477133288330329 0x7f81e9faaccc 6: dky::i() -> dkl
fifo write: @1699477133288401130 0x7f81e9faa94c 6: dlg::a() -> dky
fifo write: @1699477133288450921 0x7f81e9d1d8cc 6: dky::h() -> dkl
fifo write: @1699477133289053439 0x7f81e9d1d250 191: dhp::g() -> java.util.Map
fifo write: @1699477133289354553 0x7f81e1dcb56e 407: java.util.HashMap::replacementNode(java.util.HashMap$Node, java.util.HashMap$Node) -> java.util.HashMap$Node
fifo write: @1699477133290493167 0x7f81e29322ef 14235: akx::<init>(akq, java.util.List, dhk, int) -> void
fifo write: @1699477133290553708 0x7f81e27249f7 303: arw::a(int, int) -> int
fifo write: @1699477133291007484 0x7f81e9b754ce 1060: dkm$o::a(dkl$f) -> dkl
fifo write: @1699477133312138986 0x7f81e9b2ed0a 1177: dkm$x::a(double[], dkl$a) -> void
fifo write: @1699477133315943045 0x7f81e2993874 222: hb::c() -> int
fifo write: @1699477133315985636 0x7f81e2a1f9f4 222: hb::b() -> int
fifo write: @1699477133320047738 0x7f81ea257432 1506: cpw::a(gw, eal, int) -> void
fifo write: @1699477133321494437 0x7f81ea4a6713 4984: dib::a(Object) -> int
fifo write: @1699477133323390741 0x7f81e220cd9c 2970: bjg::s() -> void
fifo write: @1699477133323445502 0x7f81ea4a6357 35: afp::run() -> void
fifo write: @1699477133323625954 0x7f81e9d5f27f 630: java.util.Spliterators$IteratorSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477133323865687 0x7f81e2419ad4 1155: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::nextLong() -> long
fifo write: @1699477133327642006 0x7f81ea4bb64c 2366: cpf::a(biq, ehi) -> boolean
fifo write: @1699477133329489810 0x7f81ea4fd338 9946: java.util.stream.StreamSpliterators$WrappingSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477133332106603 0x7f81ea39d317 4082: bji::fX() -> boolean
fifo write: @1699477133338786489 0x7f81e9b4e42c 9274: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477133350974536 0x7f81e9f29147 33724: cpv::a(gw, dfj, int) -> boolean
fifo write: @1699477133364750653 0x7f81ea4b991d 2198: dmu::a(asc) -> float
fifo write: @1699477133365618615 0x7f81e97fd013 8040: dzy::b(int) -> int
fifo write: @1699477133366657438 0x7f81ea4a5eb5 68: dva::c(int, int, int) -> boolean
fifo write: @1699477133366700739 0x7f81ea4b9150 99: dva::b(hy) -> boolean
fifo write: @1699477133366992282 0x7f81e9f28359 266: duu::a(dun, asc, gw) -> boolean
fifo write: @1699477133369223431 0x7f81ea2a0770 155: eak::a(eam) -> float
fifo write: @1699477133373118551 0x7f81ea6407cc 36359: cpv::a(gw, dfj, int, int) -> boolean
fifo write: @1699477133373473676 0x7f81e9785b29 9357: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477133374800363 0x7f81ea2a0235 50: ha::values() -> ha[]
fifo write: @1699477133375285599 0x7f81ea4fbbb3 1744: cpm::a(biq, double) -> cbu
fifo write: @1699477133377750620 0x7f81ea370ed1 46: java.util.OptionalInt::getAsInt() -> int
fifo write: @1699477133377799381 0x7f81e247bd14 532: dki$b::d() -> java.util.OptionalInt
fifo write: @1699477133378368718 0x7f81e27dbf94 275: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::<init>(it.unimi.dsi.fastutil.objects.ObjectArrayList, int, int, boolean) -> void
fifo write: @1699477133378410369 0x7f81e2dab314 253: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::estimateSize() -> long
fifo write: @1699477133382739685 0x7f81e186d5f7 7837: dom::a(dny) -> boolean
fifo write: @1699477133383363853 0x7f81e1f37314 970: dns::a(ha, dgg) -> dfj
fifo write: @1699477133384764511 0x7f81ea654ea2 4505: akx::a(gw, dfj, int, int) -> boolean
fifo write: @1699477133386100588 0x7f81ea65872b 4596: cqd::a(gw, dfj, int) -> boolean
fifo write: @1699477133395035613 0x7f81ea65bfdc 5604: dug::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477133414928989 0x7f81e9b4de50 155: dhq::D() -> akj
fifo write: @1699477133416496349 0x7f81e9b4d7b9 202: ead::a(cpb, dfj, gw, dfj, gw, ha, int) -> int
fifo write: @1699477133416802073 0x7f81e2b4d0dc 1288: xf::a(so) -> void
fifo write: @1699477133460277553 0x7f81e27269d7 1735: dvm::b(cpy, int, int, int, dva) -> boolean
fifo write: @1699477133460382674 0x7f81ea5dc259 74: dhg$$Lambda$8002.0x00007f8160cb0848::apply(Object) -> Object
fifo write: @1699477133466312491 0x7f81ea66051f 2328: cpy::x(gw) -> dhf
fifo write: @1699477133466567604 0x7f81e291fa37 7890: dpc::a(dny) -> boolean
fifo write: @1699477133466700046 0x7f81ea4f9fb6 2318: dia::e(gw) -> void
fifo write: @1699477133468233635 0x7f81ea5dbad3 356: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::get(Object) -> Object
fifo write: @1699477133468304686 0x7f81e2aeca4b 3931: dos::a(cpw, asc, gw, dqj) -> void
fifo write: @1699477133472624772 0x7f81ea662216 3425: dtr::a(asc, dlp) -> int
fifo write: @1699477133475158175 0x7f81ea664af6 3733: dhd::a(gw, int, long) -> dhr
fifo write: @1699477133476202088 0x7f81e981d24c 6: cxu$c::b() -> ha
fifo write: @1699477133476337840 0x7f81e20e6e04 591: it.unimi.dsi.fastutil.objects.ObjectArrayList$$Lambda$390.0x00007f816024abc8::get() -> Object
fifo write: @1699477133478051412 0x7f81e1a15194 809: bka::a(biu) -> bka$c
fifo write: @1699477133485028531 0x7f81ea6678d0 1991: dpe::a(dny) -> boolean
fifo write: @1699477133494198010 0x7f81ea52b000 763: it.unimi.dsi.fastutil.objects.Object2IntFunction::applyAsInt(Object) -> int
fifo write: @1699477133494934929 0x7f81e27b6a94 624: dlx::test(Object, Object) -> boolean
fifo write: @1699477133494981170 0x7f81e2de75fe 1333: dlx::a(cqp, gw) -> boolean
fifo write: @1699477133497615144 0x7f81ea669330 1985: dhg$$Lambda$8003.0x00007f8160cb0a88::accept(Object) -> void
fifo write: @1699477133498233852 0x7f81ea0678d3 368: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$ValueIterator::next() -> Object
fifo write: @1699477133500974007 0x7f81e978470f 1088: dia::b_(gw) -> eam
fifo write: @1699477133504402751 0x7f81e2dacf6b 105: it.unimi.dsi.fastutil.objects.ObjectArrayList::spliterator() -> it.unimi.dsi.fastutil.objects.ObjectSpliterator
fifo write: @1699477133504459051 0x7f81e1ad0199 96: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::<init>(it.unimi.dsi.fastutil.objects.ObjectArrayList) -> void
fifo write: @1699477133504505262 0x7f81e22c9417 286: it.unimi.dsi.fastutil.objects.ObjectArrayList::spliterator() -> java.util.Spliterator
fifo write: @1699477133509137322 0x7f81e284a4ff 5362: dug::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477133509567897 0x7f81e25031bf 6819: coz::computeNext() -> Object
fifo write: @1699477133510077514 0x7f81e2a5a021 9325: aka::a(akr) -> void
fifo write: @1699477133510474689 0x7f81ea067250 91: cxt$$Lambda$714.0x00007f8160366638::test(Object) -> boolean
fifo write: @1699477133514362599 0x7f81e1fc2716 348: akq::b(gw, csv) -> void
fifo write: @1699477133514456161 0x7f81e222f5b4 814: dfi$a::n() -> boolean
fifo write: @1699477133515162640 0x7f81e981c854 135: dgj::equals(Object) -> boolean
fifo write: @1699477133516517047 0x7f81e28e9db4 1519: dom$$Lambda$8083.0x00007f8160ccda18::test(Object) -> boolean
fifo write: @1699477133521938817 0x7f81e2912e1f 18294: dkv::a(akx, long, dlg, cqv, cqn, dhf, dko$a) -> void
fifo write: @1699477133527444897 0x7f81ea66ab4c 3105: cxc::a(dfj, cpw, gw) -> dfj
fifo write: @1699477133527765612 0x7f81e17fd9d7 2543: dhk$d::doWork(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477133528233228 0x7f81e202fcf4 47: dli::c(int) -> int
fifo write: @1699477133528898956 0x7f81e2a2b8d9 1190: java.util.ImmutableCollections$ListN::indexOf(Object) -> int
fifo write: @1699477133531601411 0x7f81e257a33c 2372: io.netty.channel.AbstractChannelHandlerContext::read() -> io.netty.channel.ChannelHandlerContext
fifo write: @1699477133532482502 0x7f81e291f494 164: dla::a() -> int
fifo write: @1699477133532668645 0x7f81e21fe114 530: com.google.common.hash.HashCode$BytesHashCode::padToLong() -> long
fifo write: @1699477133533001969 0x7f81ea39cc54 267: sun.security.provider.DigestBase::engineDigest(byte[], int, int) -> int
fifo write: @1699477133534386197 0x7f81e28bab0d 2497: dij::a(int, int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477133543592855 0x7f81ea66dde6 6025: coz::computeNext() -> Object
fifo write: @1699477133549391970 0x7f81ea67276b 9545: cpv::a(gw, dfj, int, int) -> boolean
fifo write: @1699477133555413638 0x7f81e2369efe 1378: dmp::a(dms, dmo, asc) -> float[]
fifo write: @1699477133558315565 0x7f81ea679366 9010: cpv::a(gw, dfj, int) -> boolean
fifo write: @1699477133558510908 0x7f81e21e927f 16543: dkv::a(akx, long, dlg, cqv, cqn, dhf, dko$a) -> void
fifo write: @1699477133570471541 0x7f81ea39c950 55: it.unimi.dsi.fastutil.objects.ObjectArraySet$1::hasNext() -> boolean
fifo write: @1699477133599059900 0x7f81e982ad21 506: dmu::a(dmq, asc) -> boolean
fifo write: @1699477133600790542 0x7f81e2219634 1032: dmg::a(dfj) -> boolean
fifo write: @1699477133600829652 0x7f81e26e7037 751: eam::a(hi) -> boolean
fifo write: @1699477133602795858 0x7f81ea67fd2b 11617: cpv::a(gw, dfj, int, int) -> boolean
fifo write: @1699477133602878299 0x7f81e2113934 409: drl::a(asc, int, int, int, int, boolean) -> boolean
fifo write: @1699477133603904502 0x7f81ea687cc4 24541: dmu::a(dms, dmt, dhf, java.util.function.Function, asc, dke, cpc, dhe) -> boolean
fifo write: @1699477133603975023 0x7f81e239d3a7 1629: drm::a(cqb, drm$b, asc, dqw, gw, int, int, boolean) -> void
fifo write: @1699477133605812936 0x7f81e982a759 46: dss$a$$Lambda$8141.0x00007f8160cdd0d0::applyAsInt(Object) -> int
fifo write: @1699477133606337323 0x7f81ea39c350 107: dun::a(dks$a, int, int) -> int
fifo write: @1699477133610723809 0x7f81ea69534f 98: dki$b::c() -> java.util.OptionalInt
fifo write: @1699477133619229889 0x7f81ea69585e 3333: akx::b_(gw) -> eam
fifo write: @1699477133620230412 0x7f81ea698626 11262: cpv::a(gw, dfj, int) -> boolean
fifo write: @1699477133620972332 0x7f81ea6a0118 5152: cxc::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477133622405230 0x7f81e2251b34 532: cdl::x() -> int
fifo write: @1699477133622458651 0x7f81e234f634 534: cdl::w() -> float
fifo write: @1699477133622505541 0x7f81e2318c34 256: cdl::s() -> double
fifo write: @1699477133622785995 0x7f81e144c0d9 867: cdm::v() -> void
fifo write: @1699477133623020688 0x7f81e16ea194 1864: cdl::aJ() -> float
fifo write: @1699477133623112169 0x7f81ea6a3e19 882: java.util.List::spliterator() -> java.util.Spliterator
fifo write: @1699477133624248334 0x7f81e1f0fc37 1361: dpk::a(cpw, gw) -> boolean
fifo write: @1699477133626285600 0x7f81e2ea8b4f 33024: cdl::c(gw, dfj) -> void
fifo write: @1699477133626367701 0x7f81e2de1b14 208: java.util.Spliterators$LongIteratorSpliterator::<init>(java.util.PrimitiveIterator$OfLong, int) -> void
fifo write: @1699477133626452872 0x7f81e170b75e 1118: java.util.PrimitiveIterator$OfLong::forEachRemaining(java.util.function.LongConsumer) -> void
fifo write: @1699477133626551054 0x7f81e28376ee 1015: java.util.Spliterators::spliteratorUnknownSize(java.util.PrimitiveIterator$OfLong, int) -> java.util.Spliterator$OfLong
fifo write: @1699477133627280223 0x7f81e2d6601f 37185: cdl::l() -> void
fifo write: @1699477133627360224 0x7f81e2541134 674: java.util.Spliterators$LongIteratorSpliterator::getComparator() -> java.util.Comparator
fifo write: @1699477133627422335 0x7f81ea6a47d0 87: dls::<init>(dlh$a) -> void
fifo write: @1699477133627469705 0x7f81e236f594 175: arw::f(double) -> double
fifo write: @1699477133627518326 0x7f81e27aa3f4 21: org.joml.Math::invsqrt(double) -> double
fifo write: @1699477133627569557 0x7f81e25c6e14 268: java.util.Spliterator::hasCharacteristics(int) -> boolean
fifo write: @1699477133627646928 0x7f81e28366b4 494: java.util.Spliterators$LongIteratorSpliterator::forEachRemaining(java.util.function.LongConsumer) -> void
fifo write: @1699477133627722999 0x7f81e2a59614 507: java.util.LinkedList::node(int) -> java.util.LinkedList$Node
fifo write: @1699477133627775389 0x7f81e25eb6f4 146: java.util.LinkedList::isPositionIndex(int) -> boolean
fifo write: @1699477133627862391 0x7f81e251fa57 1282: java.util.AbstractSequentialList::iterator() -> java.util.Iterator
fifo write: @1699477133627942912 0x7f81e14a97d7 853: java.util.LinkedList::listIterator(int) -> java.util.ListIterator
fifo write: @1699477133628013682 0x7f81e2579617 585: java.util.LinkedList$ListItr::<init>(java.util.LinkedList, int) -> void
fifo write: @1699477133628089493 0x7f81e24ab637 1523: java.util.LinkedList::checkPositionIndex(int) -> void
fifo write: @1699477133628141734 0x7f81ea6a4bd0 51: java.util.LinkedList$ListItr::hasNext() -> boolean
fifo write: @1699477133629870486 0x7f81ea6a52a3 9536: java.util.TimSort::mergeHi(int, int, int, int) -> void
fifo write: @1699477133630277801 0x7f81ea6a9f53 620: java.util.LinkedList$ListItr::next() -> Object
fifo write: @1699477133630816128 0x7f81ea6aa94d 7840: java.util.TimSort::gallopRight(Object, Object[], int, int, int, java.util.Comparator) -> int
fifo write: @1699477133631323205 0x7f81ea6afad3 76: java.util.LinkedList::node(int) -> java.util.LinkedList$Node
fifo write: @1699477133631875522 0x7f81ea6afed2 1754: cpw::a(gw, eal, int) -> void
fifo write: @1699477133632095224 0x7f81ea6b1153 353: java.util.AbstractSequentialList::iterator() -> java.util.Iterator
fifo write: @1699477133632246676 0x7f81ea6b1827 564: java.util.LinkedList$ListItr::<init>(java.util.LinkedList, int) -> void
fifo write: @1699477133644006728 0x7f81e2d5361f 44415: doc::a(dny) -> boolean
fifo write: @1699477133648428105 0x7f81e2f8f69f 44402: doc::a(dny) -> boolean
fifo write: @1699477133654028177 0x7f81ea6b21ad 11075: dzu::a(long, long) -> void
fifo write: @1699477133658174480 0x7f81ea6b8790 103: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$1::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477133658274432 0x7f81ea6b8c5b 96: eas::a(eam, cpb, gw, eal, ha) -> boolean
fifo write: @1699477133658362543 0x7f81ea6b90d3 354: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::values() -> it.unimi.dsi.fastutil.objects.ObjectCollection
fifo write: @1699477133675292780 0x7f81e26d0b16 181: cpm::a(Class, ehi) -> java.util.List
fifo write: @1699477133678723595 0x7f81ea6ba487 33968: don::a(dny) -> boolean
fifo write: @1699477133678935667 0x7f81e2bd25bf 13935: byn::l() -> void
fifo write: @1699477133710536335 0x7f81ea6cf7d5 15344: doc::a(dny) -> boolean
fifo write: @1699477133738193670 0x7f81ea6d9fe6 6049: coz::computeNext() -> Object
fifo write: @1699477133767854922 0x7f81ea6de750 115: djf$$Lambda$7340.0x00007f8160bd2228::accept(Object) -> aqn$a
fifo write: @1699477133767895063 0x7f81ea6deb4c 9: biq::cw() -> String
fifo write: @1699477133770007530 0x7f81e8bf80a0 27: vtable stub
fifo write: @1699477133776575075 0x7f81ea6df24f 2172: bvn::b_() -> void
fifo write: @1699477133815036740 0x7f81e2d294a7 5741: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477133819356095 0x7f81ea6e144c 9: alp::p() -> akr
fifo write: @1699477133826753150 0x7f81ea6e1824 3712: bus$k::a(dfj) -> boolean
fifo write: @1699477133828162188 0x7f81ea6e4557 3765: bus$k$$Lambda$7262.0x00007f8160bb8000::test(Object) -> boolean
fifo write: @1699477133872051913 0x7f81ea6e729e 1661: com.google.common.collect.Lists::indexOfRandomAccess(java.util.List, Object) -> int
fifo write: @1699477133873679154 0x7f81ea6e84fc 1920: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil::drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int) -> int
fifo write: @1699477133918453181 0x7f81ea6e9b1b 168: bpe::a(float, float, float) -> float
fifo write: @1699477133966058194 0x7f81e2a1e53f 2435: cpv::Y() -> boolean
fifo write: @1699477133968998832 0x7f81e2968c57 3348: bus$k::n() -> void
fifo write: @1699477133969063742 0x7f81ea6e9fd3 56: bji::I() -> bpe
fifo write: @1699477133972829300 0x7f81ea6ea868 18348: cqg::a(bka$c, cpy, gw, biu) -> boolean
fifo write: @1699477134014232354 0x7f81e263181d 182: akd::b(long, int, boolean) -> void
fifo write: @1699477134014283014 0x7f81e228b5bc 914: dzy::a(long, long, int, boolean) -> void
fifo write: @1699477134017600497 0x7f81e2da60fc 4358: dhq::a(gw, dhq$b) -> dcv
fifo write: @1699477134068167238 0x7f81e9afcd70 443: aqn$$Lambda$7339.0x00007f8160bd2000::accept(Object) -> aqn$a
fifo write: @1699477134070783032 0x7f81ea1b5873 2001: biq::B() -> java.util.stream.Stream
fifo write: @1699477134070869823 0x7f81ea1b51d3 376: aqs::iterator() -> java.util.Iterator
fifo write: @1699477134073781010 0x7f81e97bb71b 3057: cqg::a(akq, cqn, dhg, bjj, gw, he) -> bfm
fifo write: @1699477134076143981 0x7f81ea5fc6d9 2314: dje::a(ehi, aqn) -> aqn$a
fifo write: @1699477134106082486 0x7f81ea5bdc87 16595: ebg::a(cpb, gw$a, eax) -> eax
fifo write: @1699477134120468441 0x7f81e22d4874 1841: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::parent(it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry) -> it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry
fifo write: @1699477134125345534 0x7f81e21f1814 453: akv$$Lambda$5447.0x00007f8160a78e60::applyAsLong(Object) -> long
fifo write: @1699477134134676104 0x7f81e9afc7cc 6: aka::b() -> dhh
fifo write: @1699477134134737745 0x7f81e97bb34c 6: dhh::a() -> java.util.List
fifo write: @1699477134134793586 0x7f81e97bad53 404: sun.security.provider.DigestBase::engineDigest() -> byte[]
fifo write: @1699477134135528585 0x7f81e27a5b97 613: dhf::a(java.util.function.Function) -> dkw
fifo write: @1699477134135566586 0x7f81e97baa4c 6: dhh::c() -> dlg
fifo write: @1699477134137610582 0x7f81e28d75af 16561: dkw::<init>(int, dlg, int, int, dla, dkm$c, dkx, dke$a, dlu) -> void
fifo write: @1699477134137676763 0x7f81e9f21642 1318: dlr::b(long) -> void
fifo write: @1699477134161245756 0x7f81e9f210d0 71: dkm$o::a() -> double
fifo write: @1699477134171606799 0x7f81ea5b8902 8913: java.util.HashMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477134172016635 0x7f81ea5fb760 1011: eak::a(cpb, eal, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477134173033298 0x7f81e2931a97 36: java.util.concurrent.CompletableFuture::whenComplete(java.util.function.BiConsumer) -> java.util.concurrent.CompletableFuture
fifo write: @1699477134173133889 0x7f81e26c0294 240: aka$$Lambda$8107.0x00007f8160cd4240::execute(Runnable) -> void
fifo write: @1699477134173206040 0x7f81e1c531ff 558: java.lang.invoke.LambdaForm$MH.0x00007f8160cd1800::linkToTargetMethod(Object, Object, Object, long, Object) -> Object
fifo write: @1699477134173303311 0x7f81e2db0634 466: java.util.concurrent.CompletableFuture::thenAcceptAsync(java.util.function.Consumer, java.util.concurrent.Executor) -> java.util.concurrent.CompletableFuture
fifo write: @1699477134173361552 0x7f81e2b77c94 185: aka$$Lambda$8108.0x00007f8160cd4468::<init>(ajy) -> void
fifo write: @1699477134173437823 0x7f81e262be94 279: aka$$Lambda$8106.0x00007f8160cd4000::<init>(aka, ajy, java.util.concurrent.CompletableFuture, long) -> void
fifo write: @1699477134173533884 0x7f81e27891b9 1287: java.lang.invoke.LambdaForm$DMH.0x00007f8160cd1000::newInvokeSpecial(Object, Object, Object, Object, long) -> Object
fifo write: @1699477134174052291 0x7f81e25bec94 185: aka$$Lambda$8107.0x00007f8160cd4240::<init>(java.util.Queue) -> void
fifo write: @1699477134175100444 0x7f81e26ea81f 5446: aka::a(long, ajy) -> void
fifo write: @1699477134175347168 0x7f81e2764e99 380: aka$$Lambda$8106.0x00007f8160cd4000::accept(Object) -> void
fifo write: @1699477134175725442 0x7f81e2bd1c77 229: aka::a(ajy, Void, Throwable) -> void
fifo write: @1699477134175884625 0x7f81e2211336 833: aka$$Lambda$8108.0x00007f8160cd4468::accept(Object, Object) -> void
fifo write: @1699477134176171598 0x7f81e2766803 2982: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::remove(long, Object) -> boolean
fifo write: @1699477134176645674 0x7f81e27eb064 3958: aka::a(ajy, java.util.concurrent.CompletableFuture, long, dhf) -> void
fifo write: @1699477134176955928 0x7f81ea5fadaa 545: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::nextLong() -> long
fifo write: @1699477134179713254 0x7f81ea5f9df0 1025: com.mojang.serialization.codecs.RecordCodecBuilder$2::toString() -> String
fifo write: @1699477134183406291 0x7f81e27a4014 76: dkw::b(int) -> void
fifo write: @1699477134190707295 0x7f81ea5b5e14 3373: eiy::a(java.util.function.Function) -> qw
fifo write: @1699477134191358694 0x7f81e2901134 554: dkw::h() -> void
fifo write: @1699477134202312865 0x7f81ea5b3aef 2390: cxi::c(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477134216892232 0x7f81ea5f8750 1323: dhr::b() -> void
fifo write: @1699477134252684293 0x7f81ea6f7f3e 19485: ajy::a(aka, java.util.concurrent.Executor) -> void
fifo write: @1699477134269918994 0x7f81ea5b26a9 1722: com.google.common.collect.ImmutableList::contains(Object) -> boolean
fifo write: @1699477134270762985 0x7f81ea5b141a 1689: com.google.common.collect.ImmutableList::indexOf(Object) -> int
fifo write: @1699477134271273462 0x7f81ea5b00f8 1775: com.google.common.collect.Lists::indexOfImpl(java.util.List, Object) -> int
fifo write: @1699477134280387800 0x7f81ea5f80cc 6: dkx::j() -> dlj$o
fifo write: @1699477134317485987 0x7f81ea5af7a1 506: dmp::a(dmq, asc) -> boolean
fifo write: @1699477134319686705 0x7f81ea5f7bb9 124: dlh::b(long) -> dlh$a
fifo write: @1699477134320515096 0x7f81ea5af36c 155: com.google.common.collect.TransformedIterator::<init>(java.util.Iterator) -> void
fifo write: @1699477134321615640 0x7f81e27ace94 354: bfi$$Lambda$8023.0x00007f8160cb76b0::apply(Object) -> Object
fifo write: @1699477134321962335 0x7f81e2b8ffba 2557: bfi::a(asc) -> java.util.Optional
fifo write: @1699477134323032149 0x7f81ea5ae7f0 583: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::nextLong() -> long
fifo write: @1699477134323551775 0x7f81ea5adfee 494: dlt::b(long) -> void
fifo write: @1699477134324772731 0x7f81e1bfb4f7 2177: daf::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477134328710722 0x7f81ea5ad1e6 1438: dlr::b(long, int, int) -> void
fifo write: @1699477134330532495 0x7f81e27c94ec 3345: cxt::a(cpb, dfj, gw, ha) -> boolean
fifo write: @1699477134330871719 0x7f81ea5acc5d 190: dpi$$Lambda$8093.0x00007f8160ccf750::test(Object) -> boolean
fifo write: @1699477134333373801 0x7f81ea5abdea 1401: ehq::a(int, int, int, boolean) -> void
fifo write: @1699477134338118303 0x7f81ea706c5c 6303: byu::l() -> void
fifo write: @1699477134340870978 0x7f81e27e7914 243: dki$c::<init>(int, boolean) -> void
fifo write: @1699477134346921856 0x7f81ea5ab491 478: dkh::h() -> boolean
fifo write: @1699477134356629691 0x7f81e2a56eab 4087: dbc::a(dfj, cpy, gw) -> boolean
fifo write: @1699477134360414440 0x7f81e2a34854 7045: dmp::a(dms, dmo, dhf, java.util.function.Function, long, dke, double, double, double, float, float, float, int, int, double, dhe) -> void
fifo write: @1699477134365154311 0x7f81e27e8314 466: dss$a$$Lambda$8139.0x00007f8160cdcc58::applyAsInt(Object) -> int
fifo write: @1699477134365570226 0x7f81e2821e94 99: dre::a(int, int) -> int
fifo write: @1699477134366202804 0x7f81ea5ab14c 6: drm$a::a() -> gw
fifo write: @1699477134367255818 0x7f81e23825f4 65: biu::k() -> float
fifo write: @1699477134367314939 0x7f81ea5aadcc 3: akx::A() -> long
fifo write: @1699477134367362409 0x7f81e285a819 186: cpy::c(int, int) -> cpb
fifo write: @1699477134370070854 0x7f81ea70bea6 1189: dzb$$Lambda$8099.0x00007f8160ccae48::consume(ha, int, int, int) -> void
fifo write: @1699477134371580684 0x7f81ea70d080 79: bjg::fd() -> float
fifo write: @1699477134372907051 0x7f81e2b01414 422: akx::a(cpc, int) -> boolean
fifo write: @1699477134372945001 0x7f81e297c514 112: dih::b(cpc, int) -> boolean
fifo write: @1699477134373557369 0x7f81e284df95 3776: dij::a(cpc, int) -> boolean
fifo write: @1699477134373743461 0x7f81e276c7dc 3813: dlu::a(akx) -> dlu
fifo write: @1699477134374423640 0x7f81ea70d5f3 13579: dou::a(dny) -> boolean
fifo write: @1699477134381028945 0x7f81ea7158f6 2209: bji::dx() -> void
fifo write: @1699477134388060476 0x7f81ea71774c 2: bgj::a() -> int
fifo write: @1699477134407482296 0x7f81e26b66d7 1261: dpi$$Lambda$8090.0x00007f8160ccee58::accept(Object, Object) -> void
fifo write: @1699477134407556087 0x7f81e276bf94 642: dpi::b(java.util.Set, cqp, gw, dfj) -> void
fifo write: @1699477134408509639 0x7f81ea717a4c 3: drm$a::c() -> boolean
fifo write: @1699477134409325509 0x7f81ea717d4c 2: drm$a::b() -> int
fifo write: @1699477134409801156 0x7f81e2e21fa4 5161: ehw::a(ehw$a, gu) -> void
fifo write: @1699477134410191831 0x7f81e22dd1de 1155: dte::a(cqb, java.util.function.BiConsumer, asc, gw, dqw, java.util.function.Function) -> boolean
fifo write: @1699477134412418449 0x7f81ea718050 387: eaa::j(long) -> boolean
fifo write: @1699477134413039177 0x7f81e2b13014 688: dml::test(Object, Object) -> boolean
fifo write: @1699477134413165159 0x7f81e290e214 331: dmh::a(cqp, gw) -> boolean
fifo write: @1699477134413228520 0x7f81e215bcb4 969: dmh::test(Object, Object) -> boolean
fifo write: @1699477134413936929 0x7f81ea718833 1812: com.google.common.collect.Iterators$ConcatenatedIterator::hasNext() -> boolean
fifo write: @1699477134416557742 0x7f81ea719c2e 2799: eix::a(eiz) -> void
fifo write: @1699477134417435443 0x7f81ea71b590 2451: akx$$Lambda$7981.0x00007f8160caaf18::apply(Object) -> Object
fifo write: @1699477134420300380 0x7f81ea71d2cf 98: dki$b::b() -> java.util.OptionalInt
fifo write: @1699477134421496396 0x7f81ea71d77f 2703: akq::d(gw, csv) -> void
fifo write: @1699477134422591820 0x7f81ea71f8f0 2826: akq$$Lambda$7299.0x00007f8160bbf5a8::accept(Object, Object) -> void
fifo write: @1699477134442032280 0x7f81ea721bcc 2: dpx::d() -> int
fifo write: @1699477134443018913 0x7f81ea722652 21299: don::a(dny) -> boolean
fifo write: @1699477134443122294 0x7f81ea73000c 443: dmv::a(dms, dhf, java.util.function.Function, asc, dke, cpc, dhe) -> boolean
fifo write: @1699477134443210895 0x7f81ea730873 1464: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477134444215028 0x7f81ea731ad5 304: java.util.Spliterators$IteratorSpliterator::estimateSize() -> long
fifo write: @1699477134445793479 0x7f81e2d38f74 372: dpk::a(asc, dqy, gw) -> boolean
fifo write: @1699477134445850789 0x7f81e22c0c34 737: dpk$$Lambda$8128.0x00007f8160cd2238::test(Object) -> boolean
fifo write: @1699477134447529881 0x7f81e21fb274 226: akx::G_() -> hr
fifo write: @1699477134467435047 0x7f81ea731fd0 375: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$MapIterator::nextEntry() -> int
fifo write: @1699477134474126554 0x7f81ea73296a 8615: dnq::a(dpx, cqp, asc, int, int, gw$a) -> boolean
fifo write: @1699477134479141718 0x7f81ea7385d3 204: com.google.common.cache.LocalCache$Segment::enqueueNotification(Object, int, Object, int, com.google.common.cache.RemovalCause) -> void
fifo write: @1699477134482190437 0x7f81e2b21b7c 1388: aka::a(ajy) -> java.util.concurrent.CompletableFuture
fifo write: @1699477134482861786 0x7f81ea738b00 619: com.google.common.cache.LocalCache$AccessQueue::remove(Object) -> boolean
fifo write: @1699477134486906018 0x7f81ea7392d0 43: io.netty.channel.AbstractChannelHandlerContext::channel() -> io.netty.channel.Channel
fifo write: @1699477134519554408 0x7f81ea739a90 12061: bjg::b_() -> void
fifo write: @1699477134540009832 0x7f81e2214a94 279: dkm$e::<init>(dkl) -> void
fifo write: @1699477134540252905 0x7f81ea7438d4 12: java.util.stream.ReferencePipeline$$Lambda$4.0x00007f8160046c40::apply(int) -> Object
fifo write: @1699477134567178011 0x7f81e2b78cb4 1041: bvu$b::h() -> boolean
fifo write: @1699477134567301702 0x7f81ea743c1a 597: arw::b(asc, float, float) -> float
fifo write: @1699477134567530965 0x7f81e27bfb7c 4175: bry::a() -> boolean
fifo write: @1699477134567607196 0x7f81e2d5145c 2911: bvu$a::a() -> boolean
fifo write: @1699477134567690197 0x7f81e21d83fc 4175: brz::a() -> boolean
fifo write: @1699477134567901990 0x7f81e2b201b4 419: bpj::a() -> boolean
fifo write: @1699477134568109063 0x7f81e2a32e5f 3187: bpz::a() -> boolean
fifo write: @1699477134568295185 0x7f81e2ea57ff 6341: brg::a() -> boolean
fifo write: @1699477134573125488 0x7f81e2e1ff57 1947: java.util.BitSet::nextSetBit(int) -> int
fifo write: @1699477134586828794 0x7f81ea74481f 6220: dug::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477134597809505 0x7f81e2b14fb4 1332: dol::c(dfj) -> boolean
fifo write: @1699477134599341845 0x7f81ea749230 1241: eiw$$Lambda$5346.0x00007f8160a2fd10::accept(Object, Object) -> void
fifo write: @1699477134602971302 0x7f81e2def237 636: dte::b(cqb, java.util.function.BiConsumer, asc, gw, dqw) -> boolean
fifo write: @1699477134606530357 0x7f81e22ab95f 1986: dmm::a(cqp, gw) -> boolean
fifo write: @1699477134606662389 0x7f81e2df0779 2670: dmm::test(Object, Object) -> boolean
fifo write: @1699477134606884412 0x7f81ea74a800 223: dte::a(cqb, gw) -> boolean
fifo write: @1699477134608928428 0x7f81ea74aecc 6: dia::E() -> java.util.List
fifo write: @1699477134611066006 0x7f81e24caa34 795: czt::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477134618068986 0x7f81ea74b6fa 10643: dkv::a(akx, long, dlg, cqv, cqn, dhf, dko$a) -> void
fifo write: @1699477134629784917 0x7f81ea752316 1669: eaw::b(int) -> void
fifo write: @1699477134663627593 0x7f81e2254cb4 159: io.netty.channel.unix.Socket::sendAddress(long, int, int) -> int
fifo write: @1699477134663749824 0x7f81e277ac9c 1364: io.netty.channel.epoll.AbstractEpollStreamChannel::writeBytes(io.netty.channel.ChannelOutboundBuffer, io.netty.buffer.ByteBuf) -> int
fifo write: @1699477134663848466 0x7f81e29f5821 2664: io.netty.channel.epoll.AbstractEpollChannel::doWriteBytes(io.netty.channel.ChannelOutboundBuffer, io.netty.buffer.ByteBuf) -> int
fifo write: @1699477134666180155 0x7f81e2632c94 357: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477134679302574 0x7f81e220e93a 921: dkm$e::a(dkl$f) -> dkl
fifo write: @1699477134680168996 0x7f81ea75374c 6: dky::a() -> dkl
fifo write: @1699477134680214946 0x7f81ea753d4c 6: dky::d() -> dkl
fifo write: @1699477134680522800 0x7f81ea75404c 6: dky::b() -> dkl
fifo write: @1699477134680566361 0x7f81ea75434c 6: dky::c() -> dkl
fifo write: @1699477134683341176 0x7f81ea754f54 55: jdk.internal.misc.Unsafe::putIntUnaligned(Object, long, int, boolean) -> void
fifo write: @1699477134687824034 0x7f81ea755316 2701: java.util.concurrent.CompletableFuture$UniAccept::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477134721916253 0x7f81e2b660dc 1067: java.util.stream.AbstractPipeline::onClose(Runnable) -> java.util.stream.BaseStream
fifo write: @1699477134722479740 0x7f81ea756fd8 118: qx::a(double) -> qx
fifo write: @1699477134727343273 0x7f81e27ea8f4 232: java.util.stream.Collectors::lambda$groupingBy$52(java.util.function.Supplier, Object) -> Object
fifo write: @1699477134727423624 0x7f81e2b6b014 329: java.util.stream.Collectors$$Lambda$7988.0x00007f8160964d18::apply(Object) -> Object
fifo write: @1699477134727549366 0x7f81ea75734c 6: ehv::a() -> it.unimi.dsi.fastutil.doubles.DoubleList
fifo write: @1699477134728474828 0x7f81e29f4487 2565: cyl::c(cpy, gw, ha) -> boolean
fifo write: @1699477134729117366 0x7f81e2b9eac7 348: dki::c(int) -> dki
fifo write: @1699477134729824135 0x7f81e2bbcf14 283: eiu::a(gw, Object) -> boolean
fifo write: @1699477134729963626 0x7f81e22ccf1e 1621: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::contains(Object) -> boolean
fifo write: @1699477134730261580 0x7f81e21d75f7 1642: eiw::a(gw, Object) -> boolean
fifo write: @1699477134730548714 0x7f81e27a81d4 606: dul::a(asc, gw) -> int
fifo write: @1699477134730613795 0x7f81ea757684 135: dte::b(cqb, gw) -> boolean
fifo write: @1699477134736893695 0x7f81e27b7474 22: it.unimi.dsi.fastutil.shorts.ShortArrayList::clear() -> void
fifo write: @1699477134767025574 0x7f81e2ba066d 2252: hw::g(short) -> gw
fifo write: @1699477134769274293 0x7f81ea757e70 355: java.util.Spliterators$DoubleArraySpliterator::tryAdvance(java.util.function.DoubleConsumer) -> boolean
fifo write: @1699477134775318030 0x7f81e2ec2c59 1135: akr::n() -> void
fifo write: @1699477134781321777 0x7f81ea75877a 13517: com.google.common.cache.LocalCache$Segment::runLockedCleanup(long) -> void
fifo write: @1699477134856645777 0x7f81e2842094 228: com.google.common.primitives.Floats::isFinite(float) -> boolean
fifo write: @1699477134856705798 0x7f81e28b6997 170: aby::a(abc) -> void
fifo write: @1699477134856746019 0x7f81e284d9f4 81: aby::b(double) -> double
fifo write: @1699477134856786069 0x7f81e29f3ff4 81: aby::a(double) -> double
fifo write: @1699477134856848250 0x7f81ea760dcc 3: net.minecraft.server.MinecraftServer::Z() -> boolean
fifo write: @1699477134856893080 0x7f81e2a565b4 295: alp::a(double) -> double
fifo write: @1699477134856928881 0x7f81e2b0fbf4 81: aby::a(float) -> float
fifo write: @1699477134856957501 0x7f81e2c007f4 81: aby::c(double) -> double
fifo write: @1699477134864052092 0x7f81e2fa21c7 47033: alp::a(aby) -> void
fifo write: @1699477134865663303 0x7f81e2b862f4 91: io.netty.channel.AbstractChannel::voidPromise() -> io.netty.channel.ChannelPromise
fifo write: @1699477134975307394 0x7f81ea7610d0 123: sm::k() -> boolean
fifo write: @1699477134985398894 0x7f81ea761718 3656: bus$k::a(java.util.function.Predicate, double) -> java.util.Optional
fifo write: @1699477135023188001 0x7f81ea76437a 245: eaf::d(long) -> int
fifo write: @1699477135070007503 0x7f81ea7649fc 18: biq::aF() -> gw
fifo write: @1699477135070175525 0x7f81e2d35bf4 2551: biq$$Lambda$7346.0x00007f8160bd3a68::test(Object) -> boolean
fifo write: @1699477135070389948 0x7f81e2397234 528: cs::a(akr) -> void
fifo write: @1699477135074022835 0x7f81e2fb6007 33549: biq::a(bjm, ehn) -> void
fifo write: @1699477135078586604 0x7f81ea764e28 1722: bsp::b(ehn) -> void
fifo write: @1699477135166697478 0x7f81e2b85ed4 90: io.netty.channel.unix.FileDescriptor::isInputShutdown(int) -> boolean
fifo write: @1699477135166736739 0x7f81e26b5994 237: io.netty.channel.unix.Socket::isInputShutdown() -> boolean
fifo write: @1699477135166790939 0x7f81e27aee34 584: io.netty.channel.epoll.AbstractEpollChannel::shouldBreakEpollInReady(io.netty.channel.ChannelConfig) -> boolean
fifo write: @1699477135166832400 0x7f81e2a298b9 964: io.netty.buffer.PooledHeapByteBuf::array() -> byte[]
fifo write: @1699477135216543269 0x7f81e2405db4 1247: akp::a(vd) -> void
fifo write: @1699477135220969126 0x7f81e27e8cd4 560: byn::E() -> void
fifo write: @1699477135271922862 0x7f81ea76687d 306: biq$$Lambda$7346.0x00007f8160bd3a68::test(Object) -> boolean
fifo write: @1699477135371222250 0x7f81e2861af4 98: bus::t() -> boolean
fifo write: @1699477135374097068 0x7f81e2fc337f 27082: cbu::l() -> void
fifo write: @1699477135377635653 0x7f81ea767021 3757: dam::b(dfj, cpy, gw) -> boolean
fifo write: @1699477135414163743 0x7f81ea76a050 587: akw::b(long) -> int
fifo write: @1699477135423761886 0x7f81e2defdd7 770: ajy::a(aka, akj) -> void
fifo write: @1699477135424548786 0x7f81ea76ab02 2365: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477135427619036 0x7f81e2930314 243: dwf$c::a(long, int, int, int, float) -> boolean
fifo write: @1699477135430402862 0x7f81e2d0e334 1019: hw::a(dhf) -> hw
fifo write: @1699477135431654718 0x7f81e2861694 243: dvx::a() -> boolean
fifo write: @1699477135431701579 0x7f81e2e1f614 444: dvq::b() -> boolean
fifo write: @1699477135432362407 0x7f81e2ef176c 7652: dhg::a(cqp, cqn, dhf) -> void
fifo write: @1699477135435281035 0x7f81ea76c289 3002: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477135437747027 0x7f81e2e2f614 248: dla::<init>(int, int, int, int) -> void
fifo write: @1699477135438408455 0x7f81e2a8adbc 2814: java.util.HashMap$TreeNode::treeify(java.util.HashMap$Node[]) -> void
fifo write: @1699477135443073835 0x7f81e226fc5c 1214: dla::a(cpx) -> dla
fifo write: @1699477135459210153 0x7f81ea76dda5 5821: dkm$a::a(double[], dkl$a) -> void
fifo write: @1699477135465056898 0x7f81ea771dc2 2198: dkt::<init>(long) -> void
fifo write: @1699477135468024726 0x7f81ea773292 573: dkm$a::a(double[], dkl$a) -> void
fifo write: @1699477135468572473 0x7f81ea7739d0 135: io.netty.handler.codec.CodecOutputList$CodecOutputLists::getOrCreate() -> io.netty.handler.codec.CodecOutputList
fifo write: @1699477135471136816 0x7f81e2f487c7 7774: akt::h(cpc) -> void
fifo write: @1699477135473585118 0x7f81e2ebd36a 9027: eig::a(gu, ehi, double) -> double
fifo write: @1699477135476133501 0x7f81e2e2f174 93: bus$k::k() -> boolean
fifo write: @1699477135477040442 0x7f81e28ec0b7 4580: bus$k::i() -> boolean
fifo write: @1699477135477103413 0x7f81e27beed4 1281: bus$a::b() -> boolean
fifo write: @1699477135483002859 0x7f81ea773e38 2283: dkl$d::a(double[], dkl$a) -> void
fifo write: @1699477135516359668 0x7f81ea775acc 3: java.time.Instant::getEpochSecond() -> long
fifo write: @1699477135542533885 0x7f81ea775ec2 5187: bus$k::a(java.util.function.Predicate, double) -> java.util.Optional
fifo write: @1699477135546719639 0x7f81ea779184 717: hr::d(aev) -> hq
fifo write: @1699477135577357074 0x7f81e2a89874 3274: io.netty.channel.epoll.AbstractEpollStreamChannel::doWriteSingle(io.netty.channel.ChannelOutboundBuffer) -> int
fifo write: @1699477135581817471 0x7f81e28d6c94 109: ako::a(biq) -> void
fifo write: @1699477135581877722 0x7f81e28d6694 332: akq$a::b(Object) -> void
fifo write: @1699477135582221736 0x7f81e29877d9 1497: djl::f(dja) -> void
fifo write: @1699477135582296927 0x7f81e2b7ff74 941: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::remove(int) -> Object
fifo write: @1699477135582362798 0x7f81e21fbd54 1794: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477135582479650 0x7f81e2f46e59 2997: aka::b(biq) -> void
fifo write: @1699477135582707443 0x7f81e2d7e634 892: djc::b(dja) -> void
fifo write: @1699477135582762833 0x7f81e28bfcb4 897: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::removeEntry(int) -> Object
fifo write: @1699477135582799994 0x7f81e2adad79 1242: aka$b::a() -> void
fifo write: @1699477135583231219 0x7f81e21c4301 4661: akq$a::f(biq) -> void
fifo write: @1699477135587194450 0x7f81ea77a150 10817: dkv::a(akx, long, dlg, cqv, cqn, dhf, dko$a) -> void
fifo write: @1699477135587848758 0x7f81ea780953 108: bvn::X() -> void
fifo write: @1699477135591431204 0x7f81ea780f28 979: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$3::<init>(com.mojang.serialization.codecs.RecordCodecBuilder$Instance, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder, com.mojang.serialization.codecs.RecordCodecBuilder) -> void
fifo write: @1699477135611710785 0x7f81e21c35b4 1398: cuz::b(cpy, gw, dfj) -> dfj
fifo write: @1699477135623901933 0x7f81e2daefaa 1385: hw::j() -> gw
fifo write: @1699477135625633225 0x7f81e2ebcb94 207: dki::a(java.util.OptionalInt) -> dki
fifo write: @1699477135626836580 0x7f81e2ebc2ba 830: qw::a(String, float) -> void
fifo write: @1699477135627223415 0x7f81ea781ccc 3: biu::b() -> boolean
fifo write: @1699477135627745222 0x7f81e21a92b2 3192: biq::a(double[]) -> rc
fifo write: @1699477135627796522 0x7f81e2a435b9 843: java.util.stream.Streams$ConcatSpliterator::characteristics() -> int
fifo write: @1699477135627844743 0x7f81e2883fde 1236: biq::b(biq$c) -> void
fifo write: @1699477135627967935 0x7f81e28bf894 31: java.util.stream.Streams$ConcatSpliterator$OfRef::<init>(java.util.Spliterator, java.util.Spliterator) -> void
fifo write: @1699477135628092756 0x7f81e28eb734 850: java.util.stream.Streams$ConcatSpliterator::<init>(java.util.Spliterator, java.util.Spliterator) -> void
fifo write: @1699477135628148127 0x7f81e28206d9 1503: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator::characteristics() -> int
fifo write: @1699477135628238478 0x7f81e21a7a04 3367: java.util.stream.StreamSpliterators$WrappingSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477135628294279 0x7f81e182d5d9 1398: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator::estimateSize() -> long
fifo write: @1699477135628368890 0x7f81e28eb14a 447: java.util.stream.Streams::composedClose(java.util.stream.BaseStream, java.util.stream.BaseStream) -> Runnable
fifo write: @1699477135628458861 0x7f81e1d75eb4 1029: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator::getExactSizeIfKnown() -> long
fifo write: @1699477135629009848 0x7f81e2a4ae47 7706: djl$a::a(biq$c) -> void
fifo write: @1699477135636729008 0x7f81e2a49b68 2287: dns::a(cqp, gw, int) -> boolean
fifo write: @1699477135640089151 0x7f81e2830abf 3942: bgk::a(asc) -> int
fifo write: @1699477135643244672 0x7f81ea78201d 1196: Iterable::spliterator() -> java.util.Spliterator
fifo write: @1699477135651924883 0x7f81e2203627 14717: dhq::<init>(akq, dia, dhq$c) -> void
fifo write: @1699477135654653798 0x7f81e2502357 1455: duv::a(dun, asc, gw) -> boolean
fifo write: @1699477135655805283 0x7f81e282db97 7129: dpf::a(dny) -> boolean
fifo write: @1699477135657437274 0x7f81ea782f77 5500: dhg::a(cqp, java.util.Set, cpc) -> void
fifo write: @1699477135660180260 0x7f81e182d194 167: bil::<init>(biu, cpv) -> void
fifo write: @1699477135660428433 0x7f81e2a491d9 560: bil::a_() -> void
fifo write: @1699477135660478763 0x7f81e27aad1f 2099: bur::<init>(biu, cpv) -> void
fifo write: @1699477135660892159 0x7f81e2e4ff3c 1998: bpn::<init>(bur, double, Class) -> void
fifo write: @1699477135661145402 0x7f81ea786a40 1279: dmp::a(dms, dmo, asc) -> float[]
fifo write: @1699477135671345503 0x7f81ea787e06 17173: dkv::a(akx, long, dlg, cqv, cqn, dhf, dko$a) -> void
fifo write: @1699477135671984771 0x7f81ea792528 383: ehw::a(gu, int, int, int) -> boolean
fifo write: @1699477135687160147 0x7f81ea7931b8 10599: dnr::a(dny) -> boolean
fifo write: @1699477135688250350 0x7f81ea7994e4 159: dlj$aa::apply(Object) -> Object
fifo write: @1699477135700906634 0x7f81e2e4cb7c 8262: daw::a(dfj, cpy, gw) -> boolean
fifo write: @1699477135713044810 0x7f81e2fce037 31852: dhg::a(cqp, dhf, cqn) -> void
fifo write: @1699477135717668319 0x7f81e2e4ac21 4375: cxt::c(dfj, cpb, gw, ha) -> dfj
fifo write: @1699477135717719790 0x7f81e282d054 1007: ha::a(ha$a, ha$b) -> ha
fifo write: @1699477135719932299 0x7f81e282ca74 119: it.unimi.dsi.fastutil.objects.ObjectArrayList::copyArraySafe(Object[], int) -> Object[]
fifo write: @1699477135719994619 0x7f81e2a42ff4 274: it.unimi.dsi.fastutil.objects.ObjectArrayList::copyArrayFromSafe(it.unimi.dsi.fastutil.objects.ObjectArrayList) -> Object[]
fifo write: @1699477135722205668 0x7f81ea7999cc 6: dkx::k() -> java.util.List
fifo write: @1699477135722248348 0x7f81ea799ccc 6: dky::g() -> dkl
fifo write: @1699477135722293579 0x7f81ea799fcc 6: dky::f() -> dkl
fifo write: @1699477135722327309 0x7f81ea79a2cc 6: dky::e() -> dkl
fifo write: @1699477135722358380 0x7f81ea79a5cc 6: dky::j() -> dkl
fifo write: @1699477135723580096 0x7f81e8bf80d0 27: vtable stub
fifo write: @1699477135727391875 0x7f81ea79a8d3 128: eam::a(cpv, gw) -> void
fifo write: @1699477135729032876 0x7f81e299d5d9 805: java.util.PriorityQueue::grow(int) -> void
fifo write: @1699477135729350840 0x7f81e2a307ea 1343: csv::b(dfj, cpw, gw) -> dfj
fifo write: @1699477135729562203 0x7f81e2e8073f 8211: dhq::H() -> void
fifo write: @1699477135736253308 0x7f81e2e495ec 2936: dhf::a(cqw, crc$f) -> void
fifo write: @1699477135763543610 0x7f81e1d75834 399: bqa::<init>(bur, double) -> void
fifo write: @1699477135763921975 0x7f81e2e7f3b9 2125: bil::a(qw) -> void
fifo write: @1699477135763997356 0x7f81e2ef0b57 896: akq$$Lambda$5342.0x00007f8160a2ac30::test(long) -> boolean
fifo write: @1699477135764072767 0x7f81e2a8791c 1466: bqu::<init>(bjp, double) -> void
fifo write: @1699477135764134098 0x7f81e2e7e07e 2364: bur::a(qw) -> void
fifo write: @1699477135764769196 0x7f81ea79ace4 75: cxc::a(dfj, akq, gw, asc) -> void
fifo write: @1699477135769783510 0x7f81ea79b1d3 3423: doo::a(dny) -> boolean
fifo write: @1699477135770542830 0x7f81ea79dea3 504: java.util.stream.DoublePipeline::forEachWithCancel(java.util.Spliterator, java.util.stream.Sink) -> boolean
fifo write: @1699477135772657237 0x7f81ea79ebd9 234: dns::b(cpw, gw) -> boolean
fifo write: @1699477135776029240 0x7f81ea79f25f 112: drm::b(asc, int, int, int, int, boolean) -> boolean
fifo write: @1699477135776154342 0x7f81e299cf97 180: gw::b(int) -> gw
fifo write: @1699477135776422345 0x7f81e140b2e0 1809: gw::a(ha, int) -> gw
fifo write: @1699477135776471936 0x7f81ea79f644 75: dpi::b(cqd, gw, dfj) -> void
fifo write: @1699477135778247839 0x7f81ea79fa21 1122: ead::a(cpb, gw, dfj, dfj) -> boolean
fifo write: @1699477135787360927 0x7f81ea7a0bf4 693: dhl::b() -> dhl
fifo write: @1699477135790183823 0x7f81ea7a13f9 854: io.netty.buffer.AbstractByteBuf::writeBytes(byte[]) -> io.netty.buffer.ByteBuf
fifo write: @1699477135791175185 0x7f81ea7a2437 1516: dmp::a(dms, dmo, asc) -> float[]
fifo write: @1699477135792029306 0x7f81ea7a3654 255: java.util.HashMap$HashIterator::remove() -> void
fifo write: @1699477135795583552 0x7f81ea7a3be5 1366: ehq::c(int, int, int) -> void
fifo write: @1699477135804793721 0x7f81ea7a4afa 2720: akb::a(long, boolean) -> void
fifo write: @1699477135804958873 0x7f81ea7a6ed4 39: java.util.HashMap::getOrDefault(Object, Object) -> Object
fifo write: @1699477135807677508 0x7f81ea7a749a 4265: ehw::a(ehw$a, gu) -> void
fifo write: @1699477135810838839 0x7f81ea7aa7a2 2659: dum::b(cqp, dhg, asc, gw) -> boolean
fifo write: @1699477135814219662 0x7f81e26b55f4 4: bfz::a(asc) -> float
fifo write: @1699477135814341504 0x7f81e2ef0514 383: dmp::a(dms, dmq, dhf, java.util.function.Function, asc, dke, cpc, dhe) -> boolean
fifo write: @1699477135814405015 0x7f81e2202ab4 520: bgh::a(asc) -> float
fifo write: @1699477135814748099 0x7f81e2e7c79f 3073: dmp::a(dms, dmo, dhf, java.util.function.Function, asc, dke, cpc, dhe) -> boolean
fifo write: @1699477135825904213 0x7f81e21f0e05 279: ac::a(String, java.util.function.Supplier) -> java.util.function.Supplier
fifo write: @1699477135828758159 0x7f81ea7ac4cc 1790: bfl::a(java.util.List, int) -> java.util.Optional
fifo write: @1699477135829943265 0x7f81e21f0994 240: java.util.stream.SortedOps$RefSortingSink$$Lambda$475.0x00007f81601dbf28::accept(Object) -> void
fifo write: @1699477135830081777 0x7f81e2731837 927: java.util.stream.SortedOps$RefSortingSink::accept(Object) -> void
fifo write: @1699477135831690057 0x7f81e2731174 144: hx::a(java.util.UUID) -> int[]
fifo write: @1699477135831722978 0x7f81e21f025a 253: hx::a(long, long) -> int[]
fifo write: @1699477135831767628 0x7f81e2bea3ea 636: rj::a(java.util.UUID) -> ra
fifo write: @1699477135831815929 0x7f81e2e7bcda 1111: qw::a(String, java.util.UUID) -> void
fifo write: @1699477135831850639 0x7f81e2e49114 136: bpn::<init>(bur, double) -> void
fifo write: @1699477135832241964 0x7f81e2e7b614 345: akx::b(int, int) -> boolean
fifo write: @1699477135832452507 0x7f81e2a79ae4 3373: java.util.stream.Stream::concat(java.util.stream.Stream, java.util.stream.Stream) -> java.util.stream.Stream
fifo write: @1699477135866778379 0x7f81ea7ada90 103: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$KeySet::iterator() -> java.util.Iterator
fifo write: @1699477135920323238 0x7f81e2a78b99 1604: cel::l() -> void
fifo write: @1699477135926354995 0x7f81e2be9f14 240: so::readFloat() -> float
fifo write: @1699477135926404116 0x7f81e2a78619 240: io.netty.buffer.AbstractByteBuf::readInt() -> int
fifo write: @1699477135926452297 0x7f81e2be9a94 183: io.netty.buffer.PooledUnsafeDirectByteBuf::_getInt(int) -> int
fifo write: @1699477135926498857 0x7f81e2a77fb9 540: io.netty.buffer.AbstractByteBuf::readFloat() -> float
fifo write: @1699477135926587538 0x7f81e2a77897 614: io.netty.buffer.UnsafeByteBufUtil::getInt(long) -> int
fifo write: @1699477136019425963 0x7f81ea7adfc4 1357: eap$a::d(eam) -> int
fifo write: @1699477136066927145 0x7f81e2a77414 185: ehl::<init>(ehn) -> void
fifo write: @1699477136066999205 0x7f81e2a76d94 382: ehj::<init>(boolean, ehn, ha, gw, boolean) -> void
fifo write: @1699477136120335602 0x7f81e2a765d4 610: io.netty.channel.AbstractChannelHandlerContext$Tasks$4::run() -> void
fifo write: @1699477136120397923 0x7f81e2a75d94 733: io.netty.channel.AbstractChannelHandlerContext::access$2200(io.netty.channel.AbstractChannelHandlerContext) -> void
fifo write: @1699477136165167619 0x7f81ea7af370 371: akq$$Lambda$7300.0x00007f8160bc1d38::accept(Object, Object) -> void
fifo write: @1699477136216246027 0x7f81e2a75814 358: io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry::recycle() -> void
fifo write: @1699477136216613691 0x7f81e2a74f37 848: io.netty.buffer.PoolThreadCache$MemoryRegionCache::freeEntry(io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry, boolean) -> void
fifo write: @1699477136216690632 0x7f81e2a73d17 2313: aka::e(akr) -> void
fifo write: @1699477136223484069 0x7f81ea7afa4c 6: ehj::a() -> gw
fifo write: @1699477136224397731 0x7f81e2a73734 191: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::clear() -> void
fifo write: @1699477136237267817 0x7f81ea7afd75 2076: java.util.concurrent.CompletableFuture$UniRelay::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477136290186098 0x7f81ea7b14ce 7425: eig::a(gu, ehi, double) -> double
fifo write: @1699477136353652905 0x7f81ea7b7b67 22036: biq::a(bjm, ehn) -> void
fifo write: @1699477136360016107 0x7f81ea7c7334 4252: java.util.zip.DeflaterOutputStream::finish() -> void
fifo write: @1699477136371558295 0x7f81e2a73194 483: all$$Lambda$7822.0x00007f8160c86f00::test(Object) -> boolean
fifo write: @1699477136371662207 0x7f81e2dfa8d4 1188: all$$Lambda$7821.0x00007f8160c86cd8::apply(long) -> Object
fifo write: @1699477136375227153 0x7f81ea7c967b 2815: akb::a(long, boolean) -> void
fifo write: @1699477136384234919 0x7f81e2df513f 13981: dkv::a(java.util.concurrent.Executor, dlu, dlg, cqn, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477136400712071 0x7f81ea7cbdcc 3: dkx::n() -> boolean
fifo write: @1699477136407785901 0x7f81ea7cc0f0 375: com.google.common.collect.Iterators$6::transform(Object) -> Object
fifo write: @1699477136409189179 0x7f81e2df2fa7 4662: cuz::a(cpw, dfj, gw, int) -> void
fifo write: @1699477136409267850 0x7f81ea7cc874 151: akx::b(gw, java.util.function.Predicate) -> boolean
fifo write: @1699477136414817042 0x7f81e2f6ddd4 1289: dkv::a(java.util.Set, dhf, Throwable) -> void
fifo write: @1699477136419108717 0x7f81e2a72b94 487: dia::a(dko$a) -> dhe
fifo write: @1699477136419438072 0x7f81e2f6c472 3717: eix::b(long, java.util.function.Function) -> rq
fifo write: @1699477136439340708 0x7f81ea7ccfff 4988: ehw::a(ehw$a, gu) -> void
fifo write: @1699477136451207870 0x7f81ea7d06b3 3116: com.google.common.collect.Iterators$ConcatenatedIterator::next() -> Object
fifo write: @1699477136467580352 0x7f81ea7d28b0 3661: dph::a(dny) -> boolean
fifo write: @1699477136468416092 0x7f81ea7d5c4f 200: dva$$Lambda$8097.0x00007f8160cca9c8::accept(Object) -> void
fifo write: @1699477136474495940 0x7f81e2f6a9ff 3661: bjg::d(bkh) -> void
fifo write: @1699477136624026185 0x7f81ea7d6233 2360: eaw::c() -> eaz
fifo write: @1699477136624195067 0x7f81ea7d78b4 31: eaz::d(eaz) -> float
fifo write: @1699477136667481184 0x7f81e2df27b4 613: cfy::a(int) -> cjf
fifo write: @1699477136715905177 0x7f81ea7d7bd3 32: zh::<init>(biq, byte) -> void
fifo write: @1699477136719981490 0x7f81e2f6a41c 228: biq::b(bjs) -> void
fifo write: @1699477136720231833 0x7f81e2f6921f 2284: alm::f() -> void
fifo write: @1699477136728367298 0x7f81ea7d7fd0 3256: io.netty.util.internal.ObjectPool$RecyclerObjectPool::get() -> Object
fifo write: @1699477136764021177 0x7f81e284cff4 14: alm::g() -> void
fifo write: @1699477136764331751 0x7f81e2f68a94 651: net.minecraft.server.MinecraftServer$$Lambda$7296.0x00007f8160bbef28::accept(Object) -> void
fifo write: @1699477136764588994 0x7f81e2f68574 310: net.minecraft.server.MinecraftServer::d(akr) -> void
fifo write: @1699477136767308789 0x7f81e2f68174 91: akr::I() -> biq
fifo write: @1699477136767429321 0x7f81e2f67b94 379: akr::o() -> void
fifo write: @1699477136767636163 0x7f81e2f66bb9 1751: aks::a() -> void
fifo write: @1699477136767780625 0x7f81e2f661b7 900: cba::a() -> void
fifo write: @1699477136768092579 0x7f81e2ee5379 2536: akr::p() -> void
fifo write: @1699477136768666437 0x7f81e2ee229f 7370: akr::l() -> void
fifo write: @1699477136769081952 0x7f81e2eddb7f 11190: afe::b(akr) -> void
fifo write: @1699477136770579781 0x7f81e2f65d14 172: cbu::av() -> int
fifo write: @1699477136770648162 0x7f81e2f655b4 580: cbu::bd() -> void
fifo write: @1699477136770749883 0x7f81ea7da731 374: ehi::hashCode() -> int
fifo write: @1699477136770815154 0x7f81e2edd214 592: akr::J() -> void
fifo write: @1699477136770917856 0x7f81e2fdbcb4 1735: dha::a(ehi) -> boolean
fifo write: @1699477136771026667 0x7f81e2edcc14 484: cbu::fg() -> void
fifo write: @1699477136771255020 0x7f81e2fdcb17 2444: cbu::eX() -> boolean
fifo write: @1699477136771365701 0x7f81e2fdddf7 3111: cbu::fd() -> float
fifo write: @1699477136771500823 0x7f81e2edc71c 228: cbu::i(qw) -> void
fifo write: @1699477136771662905 0x7f81e2fdf4b4 759: sm$$Lambda$7804.0x00007f8160c81408::run() -> void
fifo write: @1699477136772342564 0x7f81e2fdfeff 7240: cbu::h(ehn) -> void
fifo write: @1699477136773401588 0x7f81e2fe341f 16337: alp::e() -> void
fifo write: @1699477136774647953 0x7f81e2fea09f 14532: cbu::gf() -> void
fifo write: @1699477136775052318 0x7f81e2fefe5f 21203: cbu::b_() -> void
fifo write: @1699477136867102333 0x7f81ea7dad9c 923: dzy::a(long, long, int, boolean) -> void
fifo write: @1699477136915986873 0x7f81ea7dba4c 6: it.unimi.dsi.fastutil.objects.AbstractObject2ObjectFunction::defaultReturnValue() -> Object
fifo write: @1699477136916100864 0x7f81e28b65f4 47: io.netty.util.internal.ThreadLocalRandom::next(int) -> int
fifo write: @1699477136917106197 0x7f81ea7dbd94 847: akd::b(long, int, boolean) -> void
fifo write: @1699477136920299608 0x7f81e2ff8314 384: biq::a(gw) -> dfj
fifo write: @1699477136920444240 0x7f81e2ff8894 743: biq$$Lambda$7392.0x00007f8160be8c28::apply(Object) -> Object
fifo write: @1699477136964877892 0x7f81e2ff9019 50: bru::<init>(bji, Class, boolean) -> void
fifo write: @1699477137119054886 0x7f81e2ff9474 2594: io.netty.channel.AbstractChannelHandlerContext::safeExecute(io.netty.util.concurrent.EventExecutor, Runnable, io.netty.channel.ChannelPromise, Object, boolean) -> boolean
fifo write: @1699477137126614553 0x7f81e2ffa807 4846: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477137129363419 0x7f81e2ffd087 5314: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477137133302959 0x7f81ea7dcbe9 5854: dam::b(dfj, akq, gw, asc) -> void
fifo write: @1699477137144427152 0x7f81ea7e11ff 3304: dhf::a(java.util.function.Predicate, java.util.function.BiConsumer) -> void
fifo write: @1699477137147485532 0x7f81e2fff9f4 95: dhf::s() -> boolean
fifo write: @1699477137147547623 0x7f81e2fffe37 341: dlv::a(dhf, gw$a) -> double
fifo write: @1699477137148020419 0x7f81e3000461 647: dlv::b(dhf, gw$a) -> double
fifo write: @1699477137148476035 0x7f81e3000d97 5923: dlv::a(dhf, gw) -> boolean
fifo write: @1699477137150135436 0x7f81e3003194 255: java.util.ImmutableCollections$AbstractImmutableList::contains(Object) -> boolean
fifo write: @1699477137151213710 0x7f81e8bf0080 504: I2C/C2I adapters(0xaabbbbbb)
fifo write: @1699477137151647326 0x7f81e3003674 483: hb::values() -> hb[]
fifo write: @1699477137151661196 0x7f81e8bef780 456: I2C/C2I adapters(0xaabbbb)
fifo write: @1699477137151926869 0x7f81e8bef480 512: I2C/C2I adapters(0xaabbbaa7eb)
fifo write: @1699477137152098011 0x7f81e8bef180 512: I2C/C2I adapters(0xbaabbbaa7e)
fifo write: @1699477137152457816 0x7f81ea7e53cc 4: org.apache.commons.lang3.mutable.MutableDouble::doubleValue() -> double
fifo write: @1699477137152511927 0x7f81e292ff74 13: org.apache.commons.lang3.mutable.MutableDouble::add(double) -> void
fifo write: @1699477137152678309 0x7f81e3003bf4 45: arw::f(double, double) -> double
fifo write: @1699477137152740140 0x7f81e3003ff4 226: dhp::t() -> dlv
fifo write: @1699477137152820361 0x7f81e300450f 1380: dlv::a(int, int, dlv$c) -> void
fifo write: @1699477137152895792 0x7f81e300511a 73: dlu$$Lambda$8157.0x00007f8160ce0200::consume(int, int, double) -> void
fifo write: @1699477137152988843 0x7f81e30055dc 732: dlu::a(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, int, int, double) -> void
fifo write: @1699477137153081994 0x7f81e3005f4c 676: java.lang.invoke.LambdaForm$MH.0x00007f8160cd9c00::linkToTargetMethod(int, int, Object, Object, Object, Object) -> Object
fifo write: @1699477137153259026 0x7f81e3006703 1565: java.lang.invoke.LambdaForm$DMH.0x00007f8160cd9400::newInvokeSpecial(Object, int, int, Object, Object, Object) -> Object
fifo write: @1699477137153316757 0x7f81e3007274 377: dlv::b(int) -> int
fifo write: @1699477137153373748 0x7f81e3007774 369: dlv::c(int) -> int
fifo write: @1699477137153458809 0x7f81e3007c99 632: dlu$$Lambda$8155.0x00007f8160cdbac0::accept(Object, Object) -> void
fifo write: @1699477137153564180 0x7f81e30083d4 1141: it.unimi.dsi.fastutil.longs.Long2ObjectMap$$Lambda$8156.0x00007f8160cdbcf8::accept(Object) -> void
fifo write: @1699477137153623141 0x7f81ea7e56cc 4: org.apache.commons.lang3.mutable.MutableDouble::setValue(double) -> void
fifo write: @1699477137153739383 0x7f81e3008f14 281: dlu$$Lambda$8157.0x00007f8160ce0200::<init>(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble) -> void
fifo write: @1699477137153832864 0x7f81e30094b4 723: it.unimi.dsi.fastutil.longs.Long2ObjectMap::lambda$forEach$0(java.util.function.BiConsumer, it.unimi.dsi.fastutil.longs.Long2ObjectMap$Entry) -> void
fifo write: @1699477137153928495 0x7f81e3009e7f 1605: dlu::a(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, Long, dlv) -> void
fifo write: @1699477137154213049 0x7f81e300ac89 2124: dlv::a(cqp, int, int, boolean) -> java.util.Set
fifo write: @1699477137154438662 0x7f81e300bfc1 4979: dlv::a(dhf, java.util.Set) -> void
fifo write: @1699477137156360416 0x7f81ea7e59dd 282: java.util.ImmutableCollections$ListN::indexOf(Object) -> int
fifo write: @1699477137157242118 0x7f81e300e097 1001: dlu::a(dlu$b, int, int, int, int, int) -> double
fifo write: @1699477137157420460 0x7f81e300eb34 1314: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntrySet::fastForEach(java.util.function.Consumer) -> void
fifo write: @1699477137158671446 0x7f81e300f8da 4502: dkw::b(dkl) -> dkl
fifo write: @1699477137158837948 0x7f81e301162e 351: dkw$f::a(dkl$b) -> double
fifo write: @1699477137159117961 0x7f81ea7e603c 2340: java.util.concurrent.CompletableFuture::uniComposeStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477137159194592 0x7f81e3011d94 47: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::long2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477137159316154 0x7f81e3012194 281: dlu$$Lambda$8155.0x00007f8160cdbac0::<init>(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble) -> void
fifo write: @1699477137159390795 0x7f81e3012714 185: it.unimi.dsi.fastutil.longs.Long2ObjectMap$$Lambda$8156.0x00007f8160cdbcf8::<init>(java.util.function.BiConsumer) -> void
fifo write: @1699477137159635878 0x7f81e3012c3c 2382: it.unimi.dsi.fastutil.longs.Long2ObjectMap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477137159697329 0x7f81e3013d1f 1352: dlu::a(int, int, int, dlu$b) -> double
fifo write: @1699477137160094864 0x7f81ea7e7759 154: dfi$a::k(cpb, gw) -> eig
fifo write: @1699477137160226086 0x7f81e3014b1c 5124: dlu::a(int, int) -> dlu$a
fifo write: @1699477137160729132 0x7f81e8beee80 480: I2C/C2I adapters(0xbaaabbb)
fifo write: @1699477137161143147 0x7f81e8beeb80 456: I2C/C2I adapters(0xaaabbb)
fifo write: @1699477137161440401 0x7f81e8bee880 496: I2C/C2I adapters(0xaabbaabb)
fifo write: @1699477137161795626 0x7f81e8bee580 496: I2C/C2I adapters(0xbaabbaab)
fifo write: @1699477137162281982 0x7f81e3016e9d 62: dlu$$Lambda$8165.0x00007f8160ce1798::consume(int, int, he) -> void
fifo write: @1699477137162401874 0x7f81e3017334 623: dlu::a(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableObject, int, int, he) -> void
fifo write: @1699477137162863269 0x7f81e3017b14 236: dlu$$Lambda$8165.0x00007f8160ce1798::<init>(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableObject) -> void
fifo write: @1699477137162964781 0x7f81e30180b9 1460: java.lang.invoke.LambdaForm$DMH.0x00007f8160650000::newInvokeSpecial(Object, int, int, Object, Object) -> Object
fifo write: @1699477137163092462 0x7f81e3018b99 624: dlu$$Lambda$8160.0x00007f8160ce0878::accept(Object, Object) -> void
fifo write: @1699477137163254955 0x7f81e30193b1 3726: dlv::a(int, int, int, dlv$a) -> void
fifo write: @1699477137163366006 0x7f81e301ad49 671: java.lang.invoke.LambdaForm$MH.0x00007f8160ce7400::linkToTargetMethod(int, int, Object, Object, Object) -> Object
fifo write: @1699477137163726911 0x7f81e301b47e 2011: dlu::a(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableObject, Long, dlv) -> void
fifo write: @1699477137164603352 0x7f81ea7e9a3a 1845: dlv::a(int, int, dlv$c) -> void
fifo write: @1699477137164648663 0x7f81e301c3f4 483: bjj::values() -> bjj[]
fifo write: @1699477137164682353 0x7f81e301ca37 333: dlu::a(double) -> double
fifo write: @1699477137164952576 0x7f81e301cfcc 676: java.lang.invoke.LambdaForm$MH.0x00007f8160ce5400::linkToTargetMethod(int, int, int, Object, Object, Object) -> Object
fifo write: @1699477137165001447 0x7f81e301d6a0 113: dlu$$Lambda$8159.0x00007f8160ce0650::getNoiseBiome(int, int, int, crc$f) -> he
fifo write: @1699477137165148369 0x7f81e301db14 240: dlu$$Lambda$8160.0x00007f8160ce0878::<init>(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableObject) -> void
fifo write: @1699477137165206910 0x7f81e301e034 411: dlu::a(cqw, int, int, int, crc$f) -> he
fifo write: @1699477137165427103 0x7f81e301e6b9 1303: java.lang.invoke.LambdaForm$DMH.0x00007f8160ce4c00::newInvokeSpecial(Object, int, int, int, Object, Object) -> Object
fifo write: @1699477137165642025 0x7f81e301f2c0 3525: dlu::a(int, int, int) -> he
fifo write: @1699477137167793643 0x7f81e3020b97 3641: cjf::p() -> cjf
fifo write: @1699477137169943881 0x7f81ea7eb430 1551: dhp::a_(gw) -> dfj
fifo write: @1699477137170578229 0x7f81e3022614 31: so::m() -> int
fifo write: @1699477137172492114 0x7f81ea7ecb0f 2602: dhr::a(cqw, crc$f, int, int, int) -> void
fifo write: @1699477137175039857 0x7f81ea7ee97d 3926: dlv::a(dhf, gw$a) -> double
fifo write: @1699477137175296800 0x7f81ea7f1d50 103: it.unimi.dsi.fastutil.objects.ObjectArrayList::get(int) -> Object
fifo write: @1699477137175772356 0x7f81ea7f2691 51: dlv::b(int) -> int
fifo write: @1699477137176646707 0x7f81ea7f2ab5 3952: dlv::a(dhf, gw) -> boolean
fifo write: @1699477137176694388 0x7f81ea7f5c91 39: dlv::c(int) -> int
fifo write: @1699477137179564515 0x7f81ea7f6606 337: dlu$$Lambda$8165.0x00007f8160ce1798::consume(int, int, he) -> void
fifo write: @1699477137179653526 0x7f81ea7f6bd9 330: dlu::a(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableObject, int, int, he) -> void
fifo write: @1699477137181419978 0x7f81ea7f71c1 1302: dlv::a(int, int, int, dlv$a) -> void
fifo write: @1699477137181472239 0x7f81ea7f8383 188: dlu$$Lambda$8157.0x00007f8160ce0200::consume(int, int, double) -> void
fifo write: @1699477137182739775 0x7f81ea7f88da 165: dlu::a(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, int, int, double) -> void
fifo write: @1699477137183082120 0x7f81ea7f8f73 4872: dlv::b(dhf, gw$a) -> double
fifo write: @1699477137183218911 0x7f81ea7fccac 2418: dhr::a(cqw, crc$f, int, int, int) -> void
fifo write: @1699477137183325363 0x7f81ea7fe5cb 711: dlu$$Lambda$8157.0x00007f8160ce0200::<init>(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble) -> void
fifo write: @1699477137188213956 0x7f81e3022a34 387: djl::g(long) -> boolean
fifo write: @1699477137188304627 0x7f81e3023014 185: djl$$Lambda$8109.0x00007f8160cd46a0::<init>(djl) -> void
fifo write: @1699477137188371158 0x7f81e302351f 1533: djl::d(long) -> boolean
fifo write: @1699477137188412699 0x7f81e3024194 243: diy::c() -> boolean
fifo write: @1699477137188502600 0x7f81e3024699 2429: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::clone() -> it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap
fifo write: @1699477137188574741 0x7f81e3025794 671: java.util.UUID::equals(Object) -> boolean
fifo write: @1699477137188629511 0x7f81e3025f34 498: djl$$Lambda$7311.0x00007f8160bcc5d8::test(long) -> boolean
fifo write: @1699477137188792023 0x7f81e302688f 7437: djl::a(long, java.util.function.Consumer) -> boolean
fifo write: @1699477137188931525 0x7f81ea7fed3c 1683: dhp::getNoiseBiome(int, int, int) -> he
fifo write: @1699477137189946368 0x7f81e3029d3f 15500: dii::a(diy) -> void
fifo write: @1699477137190064870 0x7f81e936bc53 2021: dlu$$Lambda$8160.0x00007f8160ce0878::accept(Object, Object) -> void
fifo write: @1699477137190264122 0x7f81e9803fa5 1687: dlu::a(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableObject, Long, dlv) -> void
fifo write: @1699477137190845730 0x7f81e9618e00 5537: dkw::b(dkl) -> dkl
fifo write: @1699477137191153514 0x7f81e96186d3 346: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::long2ObjectEntrySet() -> it.unimi.dsi.fastutil.longs.Long2ObjectMap$FastEntrySet
fifo write: @1699477137191399297 0x7f81e9b327a4 1932: dlu::a(int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, Long, dlv) -> void
fifo write: @1699477137196121668 0x7f81e936b64b 473: dlu$$Lambda$8160.0x00007f8160ce0878::<init>(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableObject) -> void
fifo write: @1699477137201201603 0x7f81e9da4636 2186: dlu$$Lambda$8155.0x00007f8160cdbac0::accept(Object, Object) -> void
fifo write: @1699477137201695519 0x7f81e9fdd630 4498: it.unimi.dsi.fastutil.longs.Long2ObjectMap$$Lambda$8156.0x00007f8160cdbcf8::accept(Object) -> void
fifo write: @1699477137202232546 0x7f81ea40c62f 5731: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntrySet::fastForEach(java.util.function.Consumer) -> void
fifo write: @1699477137202310137 0x7f81e98039d3 346: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::long2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477137202645411 0x7f81e8bee280 520: I2C/C2I adapters(0xaaabbbbbb)
fifo write: @1699477137203015966 0x7f81e9803114 223: dkw$f::a(dkl$b) -> double
fifo write: @1699477137203620524 0x7f81ea2f8e5f 464: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntrySet::fastForEach(java.util.function.Consumer) -> void
fifo write: @1699477137203670275 0x7f81e1655af7 926: dlu::a(dlu$b, int, int, int, int, int) -> double
fifo write: @1699477137204736838 0x7f81ea2f89d9 114: dkm$e::a(dkl$b, double) -> double
fifo write: @1699477137205705341 0x7f81ea2f818f 444: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntrySet::fastForEach(java.util.function.Consumer) -> void
fifo write: @1699477137206206797 0x7f81e1a16514 295: dlu$$Lambda$8171.0x00007f8160ce2268::<init>(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble) -> void
fifo write: @1699477137206413910 0x7f81e1bd483e 1586: java.lang.invoke.LambdaForm$DMH.0x00007f8160ce8c00::newInvokeSpecial(Object, int, int, int, Object, Object, Object) -> Object
fifo write: @1699477137206514091 0x7f81e1cdf24f 689: java.lang.invoke.LambdaForm$MH.0x00007f8160ce9400::linkToTargetMethod(int, int, int, Object, Object, Object, Object) -> Object
fifo write: @1699477137207120029 0x7f81e18416b7 4531: dlu::a(dkl$b, double) -> double
fifo write: @1699477137209316798 0x7f81e18401e9 2470: dlv::b(dhf, int, int) -> java.util.List
fifo write: @1699477137209932756 0x7f81e9f3d341 2266: dlu::a(cqw, int, int, int, crc$f) -> he
fifo write: @1699477137212575410 0x7f81e9b32007 352: dkw$g::a(dkl$b) -> double
fifo write: @1699477137213176887 0x7f81e183e667 3284: dlv::a(dhf, int, int, int) -> double[]
fifo write: @1699477137214876179 0x7f81e245a9b9 470: dkw::c(int, int) -> dlu$a
fifo write: @1699477137215531198 0x7f81e25e37b4 535: dkw$a::a(dkl$b) -> double
fifo write: @1699477137215712550 0x7f81e22cb0b4 880: dkm$q::a(dkl$b) -> double
fifo write: @1699477137215901313 0x7f81e22ca817 575: dkw$a::a(dkl$f) -> dkl
fifo write: @1699477137216298418 0x7f81e9b31490 887: dlu::a(dlu$b, int, int, int, int, int) -> double
fifo write: @1699477137217076738 0x7f81e9b30fe7 100: dhf::k() -> dhk
fifo write: @1699477137217218389 0x7f81e22bedf9 2611: dkm$a::a(dkl$b) -> double
fifo write: @1699477137218360664 0x7f81e8bed500 552: I2C/C2I adapters(0xaaabbbaaa7eb)
fifo write: @1699477137218661678 0x7f81e9b30855 174: dkm$w::equals(Object) -> boolean
fifo write: @1699477137218679808 0x7f81e8bed200 552: I2C/C2I adapters(0xbaaabbbaaa7e)
fifo write: @1699477137218754949 0x7f81e8becf00 448: I2C/C2I adapters(0xbaaa7e)
fifo write: @1699477137219632370 0x7f81ea407d5f 6084: it.unimi.dsi.fastutil.longs.Long2ObjectMap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477137220049295 0x7f81e9fdbc0d 1958: dkm$x::a(double[], dkl$a) -> void
fifo write: @1699477137220109356 0x7f81e9b2fd20 540: dkm$a::a(dkl$b) -> double
fifo write: @1699477137220243788 0x7f81e1bd9d94 242: dlv::e() -> int
fifo write: @1699477137220295369 0x7f81e25e321d 86: dlu$$Lambda$8172.0x00007f8160ce26a0::consume(int, int, int, double) -> void
fifo write: @1699477137220629423 0x7f81e27383dc 651: dlu::a(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, int, int, int, double) -> void
fifo write: @1699477137220679743 0x7f81e2737e94 333: dlv::d() -> int
fifo write: @1699477137222562138 0x7f81e2605afd 2747: dlv::a(int, int, int, int, dlv$b) -> void
fifo write: @1699477137222796031 0x7f81e2605314 295: dlu$$Lambda$8172.0x00007f8160ce26a0::<init>(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble) -> void
fifo write: @1699477137222871622 0x7f81e9fdaec1 994: dlu::a(dlu$b, int, int, int, int, int) -> double
fifo write: @1699477137225190962 0x7f81e297ce19 640: dlu$$Lambda$8171.0x00007f8160ce2268::accept(Object, Object) -> void
fifo write: @1699477137225295553 0x7f81e9fda570 501: it.unimi.dsi.fastutil.longs.Long2ObjectMap$$Lambda$8156.0x00007f8160cdbcf8::accept(Object) -> void
fifo write: @1699477137225356604 0x7f81e2ba4734 535: dkw$b::a(dkl$b) -> double
fifo write: @1699477137225410715 0x7f81e2a14514 439: dlv::a(int) -> int
fifo write: @1699477137226453378 0x7f81e2737086 1758: dlu::a(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, Long, dlv) -> void
fifo write: @1699477137227108726 0x7f81ea8004b9 6117: dlu::a(int, int, int) -> he
fifo write: @1699477137227184557 0x7f81e22be917 114: dlu$$Lambda$8169.0x00007f8160ce1e10::get(dlv, int, int, int) -> double
fifo write: @1699477137227464201 0x7f81e9fd9adf 490: it.unimi.dsi.fastutil.longs.Long2ObjectMap::lambda$forEach$0(java.util.function.BiConsumer, it.unimi.dsi.fastutil.longs.Long2ObjectMap$Entry) -> void
fifo write: @1699477137227586313 0x7f81e2b14114 1146: dlv::b(int, int, int) -> double
fifo write: @1699477137227869976 0x7f81ea804d8d 202: dlu$$Lambda$8172.0x00007f8160ce26a0::consume(int, int, int, double) -> void
fifo write: @1699477137227966358 0x7f81e2a83af7 800: dlv::a(double[], int) -> double
fifo write: @1699477137228636586 0x7f81ea80537f 1123: it.unimi.dsi.fastutil.longs.Long2ObjectMap::forEach(java.util.function.BiConsumer) -> void
fifo write: @1699477137228943280 0x7f81ea806560 183: dlu::a(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, int, int, int, double) -> void
fifo write: @1699477137230593891 0x7f81ea806bc0 6538: dlu$$Lambda$8159.0x00007f8160ce0650::getNoiseBiome(int, int, int, crc$f) -> he
fifo write: @1699477137230734103 0x7f81ea80b9a0 2075: dkm$q::a(dkl$b) -> double
fifo write: @1699477137230782664 0x7f81e2a727f4 39: arw::a(double, int) -> int
fifo write: @1699477137231512993 0x7f81ea80d4a4 1063: dlv::a(int, int, int, int, dlv$b) -> void
fifo write: @1699477137235627396 0x7f81ea80e4cb 731: dlu$$Lambda$8172.0x00007f8160ce26a0::<init>(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble) -> void
fifo write: @1699477137235719028 0x7f81ea80ed4f 1804: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::rehash(int) -> void
fifo write: @1699477137242897950 0x7f81ea80ff33 1477: dlu$$Lambda$8171.0x00007f8160ce2268::accept(Object, Object) -> void
fifo write: @1699477137245350621 0x7f81ea81140f 1217: dlu::a(int, int, int, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, org.apache.commons.lang3.mutable.MutableDouble, Long, dlv) -> void
fifo write: @1699477137245429292 0x7f81e2af141a 1773: dke$c::a(int, int, int, int) -> int
fifo write: @1699477137245735436 0x7f81ea812689 66: org.apache.commons.lang3.mutable.MutableDouble::getValue() -> Double
fifo write: @1699477137247734352 0x7f81ea812cf6 7405: dlv::a(akx, int, int) -> dlv
fifo write: @1699477137247977935 0x7f81ea818285 6046: dlu::a(int, int, int, dlu$b) -> double
fifo write: @1699477137248812786 0x7f81e2b67617 98: dlu$$Lambda$8154.0x00007f8160cdb8a0::get(dlv, int, int, int) -> double
fifo write: @1699477137248870347 0x7f81e2a832d4 670: dlv::a(int, int, int) -> double
fifo write: @1699477137262338360 0x7f81ea81b916 1069: dkw::a(boolean, int) -> void
fifo write: @1699477137268938945 0x7f81ea81c9ce 7811: dkm$x::a(double[], dkl$a) -> void
fifo write: @1699477137270717418 0x7f81e2f85db7 565: dkw$i::a(double[], dkl$a) -> void
fifo write: @1699477137273284641 0x7f81ea822073 7674: dkw::c(int, int) -> dlu$a
fifo write: @1699477137283472972 0x7f81ea827453 7786: dkw$a::a(dkl$b) -> double
fifo write: @1699477137306027522 0x7f81ea82c9f2 9870: eaf::a(long, long) -> void
fifo write: @1699477137310485180 0x7f81ea832a82 28374: ajy::a(dhk, aka) -> java.util.concurrent.CompletableFuture
fifo write: @1699477137314916267 0x7f81e2a32434 945: byy::gd() -> dfj
fifo write: @1699477137333282203 0x7f81ea846c80 175: cpy::y(gw) -> boolean
fifo write: @1699477137334082823 0x7f81ea4075cc 2: java.util.Spliterators$AbstractSpliterator::characteristics() -> int
fifo write: @1699477137336127360 0x7f81ea8471f0 521: dom$b::a(gw) -> gw
fifo write: @1699477137336917920 0x7f81ea847b60 179: dns::a(ha, dgg) -> dfj
fifo write: @1699477137346516683 0x7f81e8bedf80 496: I2C/C2I adapters(0x7e7e7e7e7e7e7eb)
fifo write: @1699477137347214692 0x7f81ea848650 79: java.lang.invoke.LambdaForm::parameter(int) -> java.lang.invoke.LambdaForm$Name
fifo write: @1699477137349322199 0x7f81ea8489cc 2: bgj::b() -> int
fifo write: @1699477137351879492 0x7f81e2ef00f4 175: java.util.stream.IntStream::empty() -> java.util.stream.IntStream
fifo write: @1699477137351950533 0x7f81e2dadd34 491: java.util.Spliterators$EmptySpliterator$OfInt::forEachRemaining(java.util.function.IntConsumer) -> void
fifo write: @1699477137356734255 0x7f81ea849030 755: dns$$Lambda$8022.0x00007f8160cb7478::accept(Object) -> void
fifo write: @1699477137361106021 0x7f81ea849f8c 5800: ehw::a(ehw$a, gu) -> void
fifo write: @1699477137372659590 0x7f81e183d039 2946: sm::d() -> void
fifo write: @1699477137393681460 0x7f81e2a31cb4 609: dhe::b(int, int, int) -> boolean
fifo write: @1699477137394063015 0x7f81e2a14094 31: dlu$$Lambda$8175.0x00007f8160ce2f20::getDistance(double, double, double) -> double
fifo write: @1699477137394099756 0x7f81e2bfa994 31: dlu$$Lambda$8176.0x00007f8160ce3148::test(int, int, int) -> boolean
fifo write: @1699477137394144726 0x7f81e183c466 1381: dlu::a(java.util.List, double, double, double) -> double
fifo write: @1699477137394183297 0x7f81e297b317 829: dlu::a(dlu$c, int, int, int) -> boolean
fifo write: @1699477137394219617 0x7f81e2a317a3 48: dlu$$Lambda$8174.0x00007f8160ce2d00::getDistance(double, double, double) -> double
fifo write: @1699477137394250958 0x7f81e2dae898 83: dlu::a(double, double, double, double, double, double, double) -> double
fifo write: @1699477137394284588 0x7f81e297ac34 271: dlu::a(double, double, double, double, double, double) -> double
fifo write: @1699477137394758864 0x7f81e2cc2b74 9089: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477137399735989 0x7f81e2cc2114 621: dse::a(gw, double) -> double
fifo write: @1699477137403544937 0x7f81e2cc17fc 963: dsf::a(java.util.List, double) -> dfj
fifo write: @1699477137403607308 0x7f81e297a514 629: dsd::a(gw) -> double
fifo write: @1699477137406158181 0x7f81ea84dd4c 6: arp::b() -> Comparable
fifo write: @1699477137406215011 0x7f81ea84e04c 6: arp::a() -> Comparable
fifo write: @1699477137408517981 0x7f81ea84eda4 31671: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477137409911159 0x7f81ea8646cf 2802: drm::a(cqb, drm$b, asc, dqw, gw) -> boolean
fifo write: @1699477137414385867 0x7f81e2cc1334 39: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::<init>(int) -> void
fifo write: @1699477137414463898 0x7f81e2979717 1507: cqf$$Lambda$7862.0x00007f8160c92898::apply(Object) -> Object
fifo write: @1699477137414497878 0x7f81e2f64c74 987: cqf$a::<init>() -> void
fifo write: @1699477137414585490 0x7f81e2f64223 1093: cqf::a(akr) -> cqf$a
fifo write: @1699477137416881429 0x7f81ea866eb3 16: io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue::isEmpty() -> boolean
fifo write: @1699477137419181109 0x7f81ea8671b5 4: bqw::b() -> boolean
fifo write: @1699477137419759296 0x7f81e2f63c14 359: dsf::a(java.util.List, gw, double) -> dfj
fifo write: @1699477137421792872 0x7f81e2f62ef7 1649: eay::c(int, int, int) -> eax
fifo write: @1699477137422065856 0x7f81e2db8d79 900: eay::a(int, int, int) -> eaz
fifo write: @1699477137422129687 0x7f81ea8674fa 171: eay$$Lambda$7373.0x00007f8160be4258::<init>(eay, int, int, int) -> void
fifo write: @1699477137426051367 0x7f81e2db739a 3750: dsl::a(asc, gw) -> dfj
fifo write: @1699477137426798626 0x7f81e2db67b7 1331: cxl::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477137427827790 0x7f81e95be21c 3712: cxi::a(cpv, gw, dfj) -> boolean
fifo write: @1699477137428019492 0x7f81e994ee80 2599: dhe::b(int, int, int) -> boolean
fifo write: @1699477137430972810 0x7f81e2db44df 5274: dnq::a(dny) -> boolean
fifo write: @1699477137432223236 0x7f81ea46a08f 12932: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477137432259457 0x7f81e14dd134 609: dhe::b(int, int, int) -> boolean
fifo write: @1699477137434099671 0x7f81e302ffc7 10438: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477137435921494 0x7f81e1837c74 9089: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477137439253687 0x7f81e95bdb50 139: it.unimi.dsi.fastutil.objects.ObjectArraySet$1::next() -> Object
fifo write: @1699477137440498693 0x7f81e21b55e7 7705: dlu::a(akx, dhf) -> void
fifo write: @1699477137440549574 0x7f81e287caba 838: qw::a(String, double) -> void
fifo write: @1699477137442111404 0x7f81e2873dd1 5752: dom$a::a(cqp, asc, dom$b) -> void
fifo write: @1699477137444708477 0x7f81e9ae8af3 797: eiy::a(long, long) -> eiz
fifo write: @1699477137447301940 0x7f81ea33a1fd 2694: dlu::a(dhf, gw) -> void
fifo write: @1699477137449026623 0x7f81e28de5a7 2871: dsd::a(asc, gw) -> dfj
fifo write: @1699477137449972175 0x7f81e994e552 679: com.google.common.collect.Lists::newArrayListWithCapacity(int) -> java.util.ArrayList
fifo write: @1699477137450832246 0x7f81e2aafac1 3460: dhr::a(int, int, int, dfj, boolean) -> dfj
fifo write: @1699477137452918643 0x7f81e9e6cc2f 1601: eap::a(cpv) -> boolean
fifo write: @1699477137456572490 0x7f81e95fdc9f 2956: csv::b(dfj, cpw, gw) -> dfj
fifo write: @1699477137457851067 0x7f81e294f914 2741: dlu::a(dhf, gw) -> void
fifo write: @1699477137459718571 0x7f81e2ed4642 20863: dpi::a(cpw, dva, java.util.Set, java.util.Set, java.util.Set) -> ehw
fifo write: @1699477137459893453 0x7f81ea65cd18 6503: java.util.TimSort::mergeLo(int, int, int, int) -> void
fifo write: @1699477137461829578 0x7f81ea4698e8 57: rf::a() -> rf
fifo write: @1699477137461861728 0x7f81ea65c7d9 70: arg::close() -> void
fifo write: @1699477137464430381 0x7f81ea52be45 5623: dhr::a(int, int, int, dfj, boolean) -> dfj
fifo write: @1699477137465924620 0x7f81ea65be60 642: java.util.concurrent.CompletableFuture$Signaller::block() -> boolean
fifo write: @1699477137473972864 0x7f81ea339155 1086: ehi::equals(Object) -> boolean
fifo write: @1699477137480213194 0x7f81e189b8b7 644: io.netty.buffer.UnpooledUnsafeDirectByteBuf::_setByte(int, int) -> void
fifo write: @1699477137480256255 0x7f81e271e2b7 678: io.netty.buffer.UnpooledUnsafeDirectByteBuf::_getByte(int) -> byte
fifo write: @1699477137489762867 0x7f81ea672152 17657: doc::a(dny) -> boolean
fifo write: @1699477137492651844 0x7f81e2234514 424: java.util.concurrent.CompletableFuture$Signaller::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477137497000340 0x7f81e9a49b18 1971: java.util.concurrent.ForkJoinPool::awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue) -> int
fifo write: @1699477137497831781 0x7f81ea7a4b3c 2686: dim::a(cpc, rn) -> void
fifo write: @1699477137498210366 0x7f81ea1aee50 171: dhf::h() -> java.util.Map
fifo write: @1699477137498290007 0x7f81ea1d84d0 135: dhf::a(dvi) -> dvq
fifo write: @1699477137499416592 0x7f81e95732cc 3: dkx::a() -> boolean
fifo write: @1699477137499765706 0x7f81e9c9be8f 3826: dij$$Lambda$8032.0x00007f8160cb87b0::get() -> Object
fifo write: @1699477137500041390 0x7f81e9a7305a 108: dkm$q::a() -> double
fifo write: @1699477137500627567 0x7f81e9d43cd1 90: dkm$aa::equals(Object) -> boolean
fifo write: @1699477137502437920 0x7f81e9572fcc 6: akx::C_() -> dis
fifo write: @1699477137502809265 0x7f81ea4d3e1e 3683: dij::b(cpc, rn) -> com.mojang.datafixers.util.Either
fifo write: @1699477137502861086 0x7f81e9a72d4c 2: cht::a() -> int
fifo write: @1699477137507962841 0x7f81e175faf4 2: io.netty.buffer.PooledByteBuf::idx(int) -> int
fifo write: @1699477137522732091 0x7f81e9fa5ebe 2847: eiw::a(java.util.Queue, eiu, long, int) -> void
fifo write: @1699477137523797105 0x7f81e2bb339f 7877: bsp::c() -> void
fifo write: @1699477137528107400 0x7f81ea66ed79 5577: eiw::a(java.util.function.BiConsumer) -> void
fifo write: @1699477137529895843 0x7f81e25e3e74 5: io.netty.buffer.AbstractByteBuf::markReaderIndex() -> io.netty.buffer.ByteBuf
fifo write: @1699477137530030405 0x7f81e14baa94 240: so::readableBytes() -> int
fifo write: @1699477137547023104 0x7f81ea30f980 2395: dhe::b(int, int, int) -> boolean
fifo write: @1699477137548564524 0x7f81e2f39262 21697: dpi::a(cpw, dva, java.util.Set, java.util.Set, java.util.Set) -> ehw
fifo write: @1699477137553533568 0x7f81e277d174 13: io.netty.buffer.AbstractByteBuf::clear() -> io.netty.buffer.ByteBuf
fifo write: @1699477137553708010 0x7f81e226d75e 1885: te::decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) -> void
fifo write: @1699477137553775541 0x7f81e22c835e 1382: te::a(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) -> boolean
fifo write: @1699477137554109625 0x7f81e9b4f1b9 5357: dkw$i::a(double[], dkl$a) -> void
fifo write: @1699477137565094526 0x7f81e9b4edd0 35: hb::b() -> int
fifo write: @1699477137565126507 0x7f81e9b4ead0 35: hb::c() -> int
fifo write: @1699477137566557185 0x7f81e8bedc80 488: I2C/C2I adapters(0xbbbbbb66)
fifo write: @1699477137567267274 0x7f81ea386f89 12034: dmx::a(dms, dmq, dhf, java.util.function.Function, dke, double, double, double, double, double, dhe, dmx$a) -> boolean
fifo write: @1699477137568498750 0x7f81e2c726a4 5129: ehw::a(ehw$a, gu) -> void
fifo write: @1699477137568527680 0x7f81e9b4e7dc 29: com.google.common.collect.ImmutableMap::isEmpty() -> boolean
fifo write: @1699477137569869828 0x7f81e2d04697 2697: bjg::a(double, boolean, ehn) -> ehn
fifo write: @1699477137571860804 0x7f81e1446194 288: cxu$$Lambda$8133.0x00007f8160cd31b8::test(cpb, gw, cxu$c) -> boolean
fifo write: @1699477137571899464 0x7f81e16dcf94 324: cxu$c::<init>(gw, ha) -> void
fifo write: @1699477137572077056 0x7f81e1b7913c 968: cxu$a::a(cpb, gw, cxu$c) -> boolean
fifo write: @1699477137572268489 0x7f81e2c11574 2889: cxu$a::a(cpb, gw, gw, ha, dfj) -> boolean
fifo write: @1699477137572757605 0x7f81e2a2b8d9 1206: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477137577805260 0x7f81e21b3be9 3232: dpi::a(cqb, int, gw, dqw) -> int
fifo write: @1699477137583871778 0x7f81e9b4e2cc 2: bgv::a() -> int
fifo write: @1699477137585810983 0x7f81e21e9275 17285: akx::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477137587640796 0x7f81ea2577fb 729: com.google.common.cache.LocalCache$LoadingValueReference::<init>() -> void
fifo write: @1699477137588178303 0x7f81e2e97c2f 14711: dhq::a(gw, dfj, boolean) -> dfj
fifo write: @1699477137589586482 0x7f81e2fb9f56 19012: com.google.common.cache.LocalCache$Segment::lockedGetOrLoad(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477137621586444 0x7f81e9f05036 21415: java.util.concurrent.CompletableFuture$UniRun::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477137621627384 0x7f81e1b51974 179: io.netty.buffer.UnsafeByteBufUtil::getByte(byte[], int) -> byte
fifo write: @1699477137621691695 0x7f81e292ff74 23: io.netty.util.internal.PlatformDependent::getByte(byte[], int) -> byte
fifo write: @1699477137621733266 0x7f81e229ee34 636: io.netty.buffer.PooledUnsafeHeapByteBuf::_getByte(int) -> byte
fifo write: @1699477137621768846 0x7f81e19c5374 287: io.netty.util.internal.PlatformDependent0::getByte(byte[], int) -> byte
fifo write: @1699477137621813197 0x7f81e212d954 1212: sn$a::a(int, so) -> vd
fifo write: @1699477137621853617 0x7f81e1c89654 1086: sn$b::a(int, so) -> vd
fifo write: @1699477137621909898 0x7f81e1837414 372: sp::decode(io.netty.channel.ChannelHandlerContext, Object, java.util.List) -> void
fifo write: @1699477137621968459 0x7f81e21ac5f4 453: io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque::newInstance() -> io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque
fifo write: @1699477137622007669 0x7f81e236f594 436: java.util.ArrayDeque::offer(Object) -> boolean
fifo write: @1699477137622069560 0x7f81e2369ed9 1508: io.netty.handler.flow.FlowControlHandler::channelRead(io.netty.channel.ChannelHandlerContext, Object) -> void
fifo write: @1699477137622150231 0x7f81e1c69481 3382: sp::a(io.netty.channel.ChannelHandlerContext, vd, java.util.List) -> void
fifo write: @1699477137622208682 0x7f81e29dbba2 1815: bdu::a(sn, int, java.net.SocketAddress, int) -> void
fifo write: @1699477137622246082 0x7f81e220c894 159: java.util.ArrayDeque::offerLast(Object) -> boolean
fifo write: @1699477137622287813 0x7f81e2282a14 243: io.netty.channel.SimpleChannelInboundHandler::acceptInboundMessage(Object) -> boolean
fifo write: @1699477137622401214 0x7f81e2ccfe87 7595: sr::decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) -> void
fifo write: @1699477137622471855 0x7f81e280205e 3742: io.netty.channel.SimpleChannelInboundHandler::channelRead(io.netty.channel.ChannelHandlerContext, Object) -> void
fifo write: @1699477137627719412 0x7f81ea386960 73: java.util.stream.Collectors::toList() -> java.util.stream.Collector
fifo write: @1699477137654225234 0x7f81ea3863d6 213: java.util.BitSet::nextSetBit(int) -> int
fifo write: @1699477137663995689 0x7f81e8bf8100 27: vtable stub
fifo write: @1699477137673477791 0x7f81e9f2cc5b 23987: cyl::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477137711773014 0x7f81e2544a94 240: io.netty.channel.RecvByteBufAllocator$DelegatingHandle::lastBytesRead(int) -> void
fifo write: @1699477137711827025 0x7f81e1ca0894 140: io.netty.util.collection.IntObjectHashMap::hashIndex(int) -> int
fifo write: @1699477137711918026 0x7f81e228d174 67: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::lastBytesRead(int) -> void
fifo write: @1699477137711992697 0x7f81e29e9d94 355: io.netty.channel.AbstractChannel::read() -> io.netty.channel.Channel
fifo write: @1699477137712036018 0x7f81e25c0914 237: io.netty.channel.DefaultChannelPipeline::read() -> io.netty.channel.ChannelPipeline
fifo write: @1699477137712176799 0x7f81e271c488 2151: sk::decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) -> void
fifo write: @1699477137712424683 0x7f81e2b81a1c 2740: io.netty.channel.epoll.AbstractEpollChannel::doBeginRead() -> void
fifo write: @1699477137717083833 0x7f81e2ad1074 65: biu::l() -> float
fifo write: @1699477137756943756 0x7f81e2631814 240: io.netty.channel.RecvByteBufAllocator$DelegatingHandle::incMessagesRead(int) -> void
fifo write: @1699477137756992536 0x7f81e26a2f14 240: io.netty.channel.RecvByteBufAllocator$DelegatingHandle::attemptedBytesRead(int) -> void
fifo write: @1699477137757038617 0x7f81e2b08274 7: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::incMessagesRead(int) -> void
fifo write: @1699477137757093958 0x7f81e26efe94 39: io.netty.channel.DefaultChannelPipeline::fireChannelRead(Object) -> io.netty.channel.ChannelPipeline
fifo write: @1699477137757178569 0x7f81e1782594 540: io.netty.channel.epoll.EpollRecvByteAllocatorHandle::continueReading(io.netty.util.UncheckedBooleanSupplier) -> boolean
fifo write: @1699477137757241740 0x7f81e239b434 640: io.netty.channel.epoll.EpollRecvByteAllocatorHandle::continueReading() -> boolean
fifo write: @1699477137757466842 0x7f81e22510b4 1059: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::continueReading(io.netty.util.UncheckedBooleanSupplier) -> boolean
fifo write: @1699477137757838037 0x7f81e2b70d9f 3109: io.netty.channel.AbstractChannel$AbstractUnsafe::beginRead() -> void
fifo write: @1699477137770890145 0x7f81ea385d3d 338: gw::a(ho) -> gw
fifo write: @1699477137777712623 0x7f81e9f29779 5585: eiw::a(java.util.function.BiConsumer) -> void
fifo write: @1699477137792282620 0x7f81ea1efab4 6514: ead::e() -> int
fifo write: @1699477137802612233 0x7f81e2aa3c94 240: io.netty.channel.RecvByteBufAllocator$DelegatingHandle::reset(io.netty.channel.ChannelConfig) -> void
fifo write: @1699477137802689984 0x7f81e2a3ee94 416: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::allocate(io.netty.buffer.ByteBufAllocator) -> io.netty.buffer.ByteBuf
fifo write: @1699477137802743735 0x7f81e2b08974 3: io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe::epollInBefore() -> void
fifo write: @1699477137802819496 0x7f81e2ab3b94 339: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::reset(io.netty.channel.ChannelConfig) -> void
fifo write: @1699477137802909697 0x7f81e2be0c94 396: io.netty.channel.epoll.EpollRecvByteAllocatorHandle::allocate(io.netty.buffer.ByteBufAllocator) -> io.netty.buffer.ByteBuf
fifo write: @1699477137802981298 0x7f81e2d2c194 240: io.netty.channel.unix.PreferredDirectByteBufAllocator::ioBuffer(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477137803031369 0x7f81e2dafc94 191: io.netty.buffer.AbstractByteBuf::writableBytes() -> int
fifo write: @1699477137803137570 0x7f81e2ae23b4 894: io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe::recvBufAllocHandle() -> io.netty.channel.RecvByteBufAllocator$Handle
fifo write: @1699477137803187341 0x7f81e3008f34 242: io.netty.channel.unix.Socket::recvAddress(long, int, int) -> int
fifo write: @1699477137803239701 0x7f81e1ea0694 481: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl::lastBytesRead(int) -> void
fifo write: @1699477137803320162 0x7f81e1e70334 577: io.netty.handler.timeout.IdleStateHandler::channelRead(io.netty.channel.ChannelHandlerContext, Object) -> void
fifo write: @1699477137803411053 0x7f81e2d1719c 3725: io.netty.channel.epoll.AbstractEpollChannel::doReadBytes(io.netty.buffer.ByteBuf) -> int
fifo write: @1699477137803462704 0x7f81e2def914 243: io.netty.channel.epoll.EpollRecvByteAllocatorHandle$1::get() -> boolean
fifo write: @1699477137803516075 0x7f81e2f62a14 240: io.netty.channel.RecvByteBufAllocator$DelegatingHandle::readComplete() -> void
fifo write: @1699477137803613906 0x7f81e2f86594 39: io.netty.channel.DefaultChannelPipeline::fireChannelReadComplete() -> io.netty.channel.ChannelPipeline
fifo write: @1699477137803695377 0x7f81e2bbdb54 1160: io.netty.handler.flow.FlowControlHandler::read(io.netty.channel.ChannelHandlerContext) -> void
fifo write: @1699477137803776038 0x7f81e2f0ce54 1296: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl::record(int) -> void
fifo write: @1699477137803861959 0x7f81e1ad05d4 1101: io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe::epollInFinally(io.netty.channel.ChannelConfig) -> void
fifo write: @1699477137818717451 0x7f81e24b2e94 511: io.netty.buffer.PoolSubpage::addToPool(io.netty.buffer.PoolSubpage) -> void
fifo write: @1699477137818794372 0x7f81e2b1f937 589: io.netty.buffer.PoolSubpage::free(io.netty.buffer.PoolSubpage, int) -> boolean
fifo write: @1699477137857397959 0x7f81e228fe94 47: vf$$Lambda$7677.0x00007f8160c5f0d0::run() -> void
fifo write: @1699477137857454019 0x7f81e24c1ef4 80: io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle::totalBytesRead() -> int
fifo write: @1699477137857495180 0x7f81e264d114 247: io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl::readComplete() -> void
fifo write: @1699477137857535290 0x7f81e1533c14 532: io.netty.handler.flow.FlowControlHandler::isQueueEmpty() -> boolean
fifo write: @1699477137857614571 0x7f81e2741179 2072: vf::a(su, vd) -> void
fifo write: @1699477137857671462 0x7f81e214d6b9 885: io.netty.handler.timeout.IdleStateHandler::channelReadComplete(io.netty.channel.ChannelHandlerContext) -> void
fifo write: @1699477137857803964 0x7f81e24ea454 1072: io.netty.handler.flow.FlowControlHandler::channelReadComplete(io.netty.channel.ChannelHandlerContext) -> void
fifo write: @1699477137857903655 0x7f81e2690377 140: aka::b(akr, cpc) -> void
fifo write: @1699477137857945346 0x7f81e28b45f7 232: aka::d(akr, cpc) -> void
fifo write: @1699477137858012816 0x7f81e241b434 581: aka$$Lambda$7756.0x00007f8160c76258::accept(Object) -> void
fifo write: @1699477137858088877 0x7f81e2a9e594 279: ya::<init>(cpc) -> void
fifo write: @1699477137858234209 0x7f81e2579639 519: so::a(cpc) -> so
fifo write: @1699477137858273470 0x7f81e1ab10b9 608: ya::a(so) -> void
fifo write: @1699477137858708905 0x7f81e2a4733f 2767: all::a(akr, cpc) -> void
fifo write: @1699477137859598337 0x7f81e2f2861f 12452: io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe::epollInReady() -> void
fifo write: @1699477137863123942 0x7f81e2f172b7 987: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::fixPointers(int, int) -> void
fifo write: @1699477137865250319 0x7f81ea257391 114: java.util.Formatter$Conversion::isValid(char) -> boolean
fifo write: @1699477137866542736 0x7f81ea4d3531 386: java.util.Formatter$FormatSpecifier::print(Object, java.util.Locale) -> void
fifo write: @1699477137869578485 0x7f81e26da714 372: dxe$c::<init>(dvz, int, dxf$a, dva) -> void
fifo write: @1699477137870336825 0x7f81e2ae5094 93: dvm::a(int, int, int) -> void
fifo write: @1699477137871080744 0x7f81e251fa57 1199: com.mojang.datafixers.FunctionType$Instance$$Lambda$5892.0x00007f8160acd468::apply(Object) -> Object
fifo write: @1699477137873316943 0x7f81ea0d5a50 3286: com.mojang.datafixers.optics.Optic$CompositionOptic::eval(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477137874394447 0x7f81e2c00cbc 2025: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::<init>(int, float) -> void
fifo write: @1699477137874598720 0x7f81e2c144ec 128: dke::a(dkw, cpc, dky, dlf, int, int, dke$a) -> dke
fifo write: @1699477137875115866 0x7f81e290f720 113: dlu$$Lambda$8159.0x00007f8160ce0650::getNoiseBiome(int, int, int, crc$f) -> he
fifo write: @1699477137875629213 0x7f81e15e3a57 1138: dlc::a(dkl, dkl, dkl, dlf) -> dkw$c
fifo write: @1699477137878040624 0x7f81e2a6d799 88: it.unimi.dsi.fastutil.ints.IntArrayList::<init>(int[]) -> void
fifo write: @1699477137878243997 0x7f81e2e1e85f 788: it.unimi.dsi.fastutil.ints.IntArrayList::<init>(int[], int, int) -> void
fifo write: @1699477137878295108 0x7f81e1ed9637 451: ze::<init>(int[]) -> void
fifo write: @1699477137878518680 0x7f81e1b1baf7 1697: akp::a(akr) -> void
fifo write: @1699477137878887485 0x7f81e2d35c37 2008: ze::a(so) -> void
fifo write: @1699477137887420925 0x7f81e2b69605 3461: dky::a(dkl$f) -> dky
fifo write: @1699477137890916880 0x7f81ea4b59d3 5995: com.mojang.datafixers.functions.Functions::comp(com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.functions.PointFree) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477137891590668 0x7f81e9f28c80 179: dlu$$Lambda$8159.0x00007f8160ce0650::getNoiseBiome(int, int, int, crc$f) -> he
fifo write: @1699477137892720113 0x7f81e1468640 2796: dlu::a(int, int, int) -> he
fifo write: @1699477137896048946 0x7f81e2763234 679: io.netty.buffer.SizeClasses::pages2pageIdxCompute(int, boolean) -> int
fifo write: @1699477137899027164 0x7f81ea34e9f8 2189: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::rehash(int) -> void
fifo write: @1699477137900587244 0x7f81ea4d2cda 421: java.lang.invoke.LambdaForm$DMH.0x00007f8160ce4c00::newInvokeSpecial(Object, int, int, int, Object, Object) -> Object
fifo write: @1699477137901172542 0x7f81e2463794 309: sg::a(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) -> void
fifo write: @1699477137901260433 0x7f81e2569734 663: sg::decode(io.netty.channel.ChannelHandlerContext, Object, java.util.List) -> void
fifo write: @1699477137901569867 0x7f81e1a16b66 1095: javax.crypto.Cipher::update(byte[], int, int, byte[], int) -> int
fifo write: @1699477137901671848 0x7f81e1be5b97 1575: io.netty.buffer.PoolArena$HeapArena::newByteBuf(int) -> io.netty.buffer.PooledByteBuf
fifo write: @1699477137901754209 0x7f81e2f22f57 1357: io.netty.buffer.PooledUnsafeHeapByteBuf::newUnsafeInstance(int) -> io.netty.buffer.PooledUnsafeHeapByteBuf
fifo write: @1699477137901862051 0x7f81e269cdbc 2223: sf::a(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf) -> io.netty.buffer.ByteBuf
fifo write: @1699477137901984072 0x7f81e3004597 3555: io.netty.buffer.PooledByteBufAllocator::newHeapBuffer(int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477137902495099 0x7f81ea66e660 339: java.util.ImmutableCollections$AbstractImmutableList::contains(Object) -> boolean
fifo write: @1699477137904677256 0x7f81e9fabd0e 896: dkm$w$a::a(dkl$f) -> dkm$w$a
fifo write: @1699477137913267097 0x7f81e256d8b4 369: io.netty.buffer.AbstractByteBufAllocator::heapBuffer(int, int) -> io.netty.buffer.ByteBuf
fifo write: @1699477137913322048 0x7f81e294d3b4 575: io.netty.buffer.AbstractByteBufAllocator::heapBuffer(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477137914914649 0x7f81ea66e06b 484: dkw$$Lambda$8069.0x00007f8160cc3940::accept(Object) -> void
fifo write: @1699477137916699572 0x7f81ea03fbd6 10396: ara$e::a(ara$d) -> ara
fifo write: @1699477137917341580 0x7f81e27044b7 565: dkw$i::a(double[], dkl$a) -> void
fifo write: @1699477137917470172 0x7f81ea66dc4c 3: java.time.zone.ZoneOffsetTransition::toEpochSecond() -> long
fifo write: @1699477137917721675 0x7f81e293a4b4 1067: com.google.common.collect.Iterators$6::<init>(java.util.Iterator, com.google.common.base.Function) -> void
fifo write: @1699477137917833826 0x7f81e2f53057 1616: com.google.common.collect.Iterators::transform(java.util.Iterator, com.google.common.base.Function) -> java.util.Iterator
fifo write: @1699477137919427357 0x7f81e2545aa7 3077: dxe$a::a(dvy, qw) -> void
fifo write: @1699477137919938964 0x7f81e2f57087 2745: akt::a(cpc) -> void
fifo write: @1699477137919998444 0x7f81e2f5d30e 3278: eaa::d(long, boolean) -> void
fifo write: @1699477137920056635 0x7f81e9fab3d0 503: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet$SetIterator::nextShort() -> short
fifo write: @1699477137924343450 0x7f81e2c02be7 6042: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477137933790312 0x7f81e95fc356 1533: byn::aW() -> boolean
fifo write: @1699477138032298269 0x7f81e2acb117 180: cpf::b(ehi) -> boolean
fifo write: @1699477138032348030 0x7f81e27535da 495: biu::a(double, double, double) -> ehi
fifo write: @1699477138035048125 0x7f81e2419b19 1607: com.google.common.cache.LocalCache$Segment::removeCollectedEntry(com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477138036451953 0x7f81e2b94294 356: ebg::a(int, int, int) -> eaz
fifo write: @1699477138053077417 0x7f81e2453c7c 1688: cxu$b::a(dfj, ha) -> boolean
fifo write: @1699477138062785962 0x7f81ea1ef44c 4: crf::a() -> float
fifo write: @1699477138067954378 0x7f81ea1ef14c 7: bjg::fj() -> float
fifo write: @1699477138068061969 0x7f81e2f56b8e 107: coy::b(gw, int) -> int
fifo write: @1699477138068639417 0x7f81e1e683b7 1081: biq::bV() -> boolean
fifo write: @1699477138069034172 0x7f81e2b34d47 4730: ehx::<init>(biq) -> void
fifo write: @1699477138069615939 0x7f81ea1eede0 43: bji::ct() -> int
fifo write: @1699477138070555952 0x7f81e24a2f34 639: biq::i(int) -> boolean
fifo write: @1699477138071151979 0x7f81e212f199 5246: bji::dx() -> void
fifo write: @1699477138071277911 0x7f81ea1ee14e 720: ehx::<init>(boolean, double, cjf, java.util.function.Predicate, biq) -> void
fifo write: @1699477138072574488 0x7f81ea03f15d 194: dns$$Lambda$8085.0x00007f8160cce2d8::test(Object) -> boolean
fifo write: @1699477138076736111 0x7f81ea4b4609 1077: cqn::a(dvi, it.unimi.dsi.fastutil.longs.LongSet, java.util.function.Consumer) -> void
fifo write: @1699477138078481214 0x7f81e184ce7c 1264: dzw::a(cpb, int, int, gw, dfj, gw, dfj) -> boolean
fifo write: @1699477138079152403 0x7f81ea4b3ecc 44: dcv::a(cpv) -> void
fifo write: @1699477138080628002 0x7f81e28325dc 1168: dxe$c::a(cqp, dva, dfj, int, int, int) -> void
fifo write: @1699477138084570132 0x7f81ea03e114 790: dui::a_(dun, asc, gw) -> java.util.stream.Stream
fifo write: @1699477138085226780 0x7f81e228b5dd 999: dxe$a::a(cqp, dva, asc, float, int, int, int) -> void
fifo write: @1699477138099443874 0x7f81e9d6ded9 3055: aka::b(ajy, dhk) -> java.util.concurrent.CompletableFuture
fifo write: @1699477138100125392 0x7f81e9d6d753 124: dkw$b::a(dkl$b) -> double
fifo write: @1699477138106360342 0x7f81ea4b3a4c 6: dhg::c() -> cqx
fifo write: @1699477138107789361 0x7f81ea0eb776 1445: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477138111345917 0x7f81e2c5ac14 175: dsf::a(asc, gw) -> dfj
fifo write: @1699477138112189527 0x7f81e2ae0994 1167: java.util.HashMap$TreeNode::rotateRight(java.util.HashMap$TreeNode, java.util.HashMap$TreeNode) -> java.util.HashMap$TreeNode
fifo write: @1699477138113256271 0x7f81ea0e9370 2791: dwe::a(asc, int) -> int
fifo write: @1699477138121028861 0x7f81e2f38054 1262: bus$l::a() -> boolean
fifo write: @1699477138129170696 0x7f81ea412415 5310: cqn::a(hw, dvi) -> java.util.List
fifo write: @1699477138144682875 0x7f81ea11abd7 37224: akt::f() -> void
fifo write: @1699477138157033725 0x7f81ea3f3339 5313: dkw$i::a(double[], dkl$a) -> void
fifo write: @1699477138157888476 0x7f81ea0e7331 2716: java.util.stream.Collectors$$Lambda$7986.0x00007f8160964890::accept(Object, Object) -> void
fifo write: @1699477138164763534 0x7f81ea117ffd 2691: dlu::a(dhf, gw) -> void
fifo write: @1699477138167222985 0x7f81ea117579 976: dhg$$Lambda$8013.0x00007f8160cb2b88::<init>(dhg, cqp, cqn, dlr, dhf, cpc) -> void
fifo write: @1699477138175066647 0x7f81e2f8fd7f 43141: doc::a(dny) -> boolean
fifo write: @1699477138176031039 0x7f81ea3f189a 1904: cpm::c(biq, ehi) -> java.util.List
fifo write: @1699477138179208640 0x7f81e3035b5f 47024: doc::a(dny) -> boolean
fifo write: @1699477138183200491 0x7f81ea145c9d 7274: eaa::d(long, boolean) -> void
fifo write: @1699477138189749885 0x7f81ea116d4c 6: drb::c() -> java.util.OptionalInt
fifo write: @1699477138190840370 0x7f81e3019a14 2741: dlu::a(dhf, gw) -> void
fifo write: @1699477138199637363 0x7f81ea3f14cc 6: akx::D_() -> asc
fifo write: @1699477138202167445 0x7f81e2bc8bf4 5: dva::e() -> int
fifo write: @1699477138202273177 0x7f81e2f24b35 1857: dxe$a::a(dvn, asc, int, int, int, ha) -> dva
fifo write: @1699477138202437619 0x7f81e2a3d084 2071: dxe$a::<init>(int, asc, dva, ha, dxf$a) -> void
fifo write: @1699477138202481389 0x7f81e2c55f74 5: dva::c() -> int
fifo write: @1699477138202533970 0x7f81ea3f112f 16: dva::a(int, int, int) -> dva
fifo write: @1699477138202851894 0x7f81e2914a07 13180: ajy::a(dhp) -> void
fifo write: @1699477138202890975 0x7f81e2f4f094 268: dva::a(int, int, int, int) -> boolean
fifo write: @1699477138203206719 0x7f81ea411f50 43: ako::g() -> dhg
fifo write: @1699477138203251119 0x7f81e2db0cea 1700: dlr::a(long, int, int) -> long
fifo write: @1699477138203589384 0x7f81e23aa26b 9116: dxe$a::a(dvm, dvn, asc) -> void
fifo write: @1699477138204967421 0x7f81ea411a61 186: ctd::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477138206433390 0x7f81ea410c43 1012: dvm::a(java.util.List, dva) -> dvm
fifo write: @1699477138206945677 0x7f81e2bd15b4 696: djl$$Lambda$7850.0x00007f8160c8ac00::test(Object) -> boolean
fifo write: @1699477138206983027 0x7f81e2ccf4f4 323: djl::l(dja) -> boolean
fifo write: @1699477138207203810 0x7f81e24babf7 1508: djl$$Lambda$7851.0x00007f8160c8ae50::accept(Object) -> void
fifo write: @1699477138216612651 0x7f81e2503202 7286: cqg::a(int, Iterable, cqg$b, cqf) -> cqg$d
fifo write: @1699477138220464331 0x7f81ea144b94 1009: ako$$Lambda$7301.0x00007f8160bc2ec0::query(long, java.util.function.Consumer) -> void
fifo write: @1699477138221026108 0x7f81ea143278 2773: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477138240226396 0x7f81ea1426f2 925: ead::c() -> void
fifo write: @1699477138241020866 0x7f81e3016ed9 1206: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477138252821287 0x7f81ea410853 128: it.unimi.dsi.fastutil.longs.LongOpenHashSet::trim(int) -> boolean
fifo write: @1699477138266747186 0x7f81e2fb5e0f 9027: akq::a(gw, dfj, dfj, int) -> void
fifo write: @1699477138268244726 0x7f81ea1419f4 771: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477138273333861 0x7f81ea14160b 62: com.mojang.serialization.Encoder::comap(java.util.function.Function) -> com.mojang.serialization.Encoder
fifo write: @1699477138276827946 0x7f81e2f6f057 1551: biq::aE() -> void
fifo write: @1699477138278038422 0x7f81e2e87107 33484: biq::a(bjm, ehn) -> void
fifo write: @1699477138300055885 0x7f81ea64e558 8275: eiu::a(long, java.util.function.Function) -> rc
fifo write: @1699477138301625906 0x7f81ea140dd3 624: io.netty.channel.ChannelOutboundBuffer::addFlush() -> void
fifo write: @1699477138317609911 0x7f81ea648718 8781: cw::a(akr, java.util.function.Predicate) -> void
fifo write: @1699477138322893309 0x7f81e2e8589e 1689: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getInt(Object) -> int
fifo write: @1699477138333255352 0x7f81ea644e36 4360: biq::aJ() -> float
fifo write: @1699477138339911868 0x7f81ea6406f8 6392: io.netty.util.concurrent.SingleThreadEventExecutor::runAllTasks(long) -> boolean
fifo write: @1699477138365994634 0x7f81e28ea9b4 829: bki::a(bkk$a) -> java.util.Set
fifo write: @1699477138366093985 0x7f81e27f4374 1510: bkj::b() -> java.util.Collection
fifo write: @1699477138368683888 0x7f81e2f04074 382: biq::dM() -> bhp
fifo write: @1699477138434513526 0x7f81ea8679d9 5339: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477138471478421 0x7f81e2dfc8ae 15528: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477138472260191 0x7f81e2d4e73f 6961: ebg::d(gw) -> double
fifo write: @1699477138520164377 0x7f81e221ced4 851: csv::a(cpv, dfj, gw, biq, float) -> void
fifo write: @1699477138522351606 0x7f81ea1402fc 655: eaf::a(int, int, int) -> int
fifo write: @1699477138522819082 0x7f81ea13f795 670: io.netty.channel.ChannelOutboundBuffer::removeBytes(long) -> void
fifo write: @1699477138572591643 0x7f81e2ec56bf 39420: bjg::aq() -> void
fifo write: @1699477138618124609 0x7f81ea13ee53 488: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap$KeyIterator::next() -> Object
fifo write: @1699477138620558379 0x7f81e2f8db3f 2980: bqo::n() -> boolean
fifo write: @1699477138625035907 0x7f81e3019294 234: aki$c$$Lambda$8103.0x00007f8160ccb908::<init>(aki$c, long, aku) -> void
fifo write: @1699477138625081778 0x7f81e2964f94 109: aki$c$$Lambda$8102.0x00007f8160ccb6d8::run() -> void
fifo write: @1699477138625151179 0x7f81e2a59914 224: aki$c::b(long, aku) -> void
fifo write: @1699477138625197799 0x7f81e2aea914 358: aki$c$$Lambda$8103.0x00007f8160ccb908::run() -> void
fifo write: @1699477138625437422 0x7f81e2d42577 1558: aki$c::a(long, aku) -> void
fifo write: @1699477138628000386 0x7f81e2eebf34 459: aka::h(cpc) -> void
fifo write: @1699477138628126237 0x7f81e2b0e057 1155: aka::g(cpc) -> dhf
fifo write: @1699477138629183421 0x7f81e2fb5774 108: ako::h() -> dhh
fifo write: @1699477138629416884 0x7f81e27f1e14 87: dhk$$Lambda$1680.0x00007f81605c2ac8::doWork(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477138629555676 0x7f81e2880d4f 761: java.lang.invoke.LambdaForm$MH.0x00007f8160cb4c00::linkToTargetMethod(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477138629678847 0x7f81e2acfd90 1632: java.lang.invoke.LambdaForm$DMH.0x00007f8160cb4800::newInvokeSpecial(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477138629760208 0x7f81e2700f34 571: dhg$$Lambda$8025.0x00007f8160cb5208::<init>(dhg, cqn, hw, dhf, dhh, cpc, hr, dlg, dzc) -> void
fifo write: @1699477138629803169 0x7f81e27f1a14 39: dwf$c$$Lambda$2827.0x00007f81606ca1f8::shouldGenerate(long, int, int, int, float) -> boolean
fifo write: @1699477138629840449 0x7f81e28afb94 39: dwf$c$$Lambda$2828.0x00007f81606ca418::shouldGenerate(long, int, int, int, float) -> boolean
fifo write: @1699477138629906580 0x7f81e2ec3c3f 2482: dhh::b() -> void
fifo write: @1699477138630074732 0x7f81e2db2df7 3119: dhg::a(hr, dhh, cqn, dhf, dzc) -> void
fifo write: @1699477138630149173 0x7f81e2a90a8b 2263: dwf::c(long, int, int, int, float) -> boolean
fifo write: @1699477138630198594 0x7f81e2f8276b 2111: dwf::b(long, int, int, int, float) -> boolean
fifo write: @1699477138630684340 0x7f81e2912c9f 3774: dhh::a(dwc) -> java.util.List
fifo write: @1699477138630788082 0x7f81e244cfbf 4511: dwc::a(dhh, int, int) -> boolean
fifo write: @1699477138631194287 0x7f81e2ebdc2a 8606: dhk::f(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477138631491051 0x7f81ea86b7d3 140: it.unimi.dsi.fastutil.objects.AbstractObjectList::iterator() -> it.unimi.dsi.fastutil.objects.ObjectListIterator
fifo write: @1699477138631799575 0x7f81e243c0fc 1263: dkv::a(dhf, cqn, dlu, dlg) -> dkw
fifo write: @1699477138631908926 0x7f81e2912614 230: dkf::<init>(it.unimi.dsi.fastutil.objects.ObjectListIterator, it.unimi.dsi.fastutil.objects.ObjectListIterator) -> void
fifo write: @1699477138632034408 0x7f81e2db2794 283: dkf$$Lambda$8040.0x00007f8160cba658::<init>(cpc, it.unimi.dsi.fastutil.objects.ObjectList, int, int, it.unimi.dsi.fastutil.objects.ObjectList) -> void
fifo write: @1699477138632223240 0x7f81e2f819d7 1311: dkw::a(dhf, dlg, dkm$c, dkx, dke$a, dlu) -> dkw
fifo write: @1699477138632467173 0x7f81e2c5bc69 4143: cqn::a(cpc, java.util.function.Predicate) -> java.util.List
fifo write: @1699477138632671176 0x7f81e28fb9bf 5712: dkf::a(cqn, cpc) -> dkf
fifo write: @1699477138633532167 0x7f81ea86bc8e 493: dkm$w::a(dkl$f) -> dkl
fifo write: @1699477138642893237 0x7f81ea86c4b6 2172: dlu::a(int, int, int) -> he
fifo write: @1699477138656818347 0x7f81ea86e11c 2343: sun.security.provider.SHA2::implDigest(byte[], int) -> void
fifo write: @1699477138665121453 0x7f81ea86fdd9 166: eap::c(cpy) -> int
fifo write: @1699477138668633279 0x7f81e2904c74 953: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::remove(long) -> long
fifo write: @1699477138668690609 0x7f81e28af794 139: akt$$Lambda$8121.0x00007f8160cd71b8::getAsInt() -> int
fifo write: @1699477138668970663 0x7f81e2ec3714 101: akt$$Lambda$8122.0x00007f8160cd73d8::run() -> void
fifo write: @1699477138669630961 0x7f81e2afa4f4 483: dko$a::values() -> dko$a[]
fifo write: @1699477138670608734 0x7f81e2cdd6e7 445: dia::q() -> dhf$a
fifo write: @1699477138672875913 0x7f81e2f1bbc7 10397: aka::i(cpc) -> boolean
fifo write: @1699477138676820244 0x7f81e2f1b214 243: byn::b(byn) -> boolean
fifo write: @1699477138676874875 0x7f81e2994fb4 605: byn$$Lambda$7393.0x00007f8160be8e70::test(Object) -> boolean
fifo write: @1699477138677710525 0x7f81e2bc3b5e 1261: bua::a(java.util.function.Supplier, java.util.function.ToDoubleFunction) -> ehn
fifo write: @1699477138677745776 0x7f81ea8702cc 2: bkk$a::a() -> int
fifo write: @1699477138678021039 0x7f81e2b8b414 115: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::pred(boolean) -> void
fifo write: @1699477138686145264 0x7f81e2f274e3 1268: io.netty.buffer.LongLongHashMap::put(long, long) -> long
fifo write: @1699477138688616126 0x7f81e2e2fb14 656: io.netty.channel.AbstractChannelHandlerContext::voidPromise() -> io.netty.channel.ChannelPromise
fifo write: @1699477138688936470 0x7f81ea8705d0 91: io.netty.util.concurrent.DefaultPromise::isSuccess() -> boolean
fifo write: @1699477138720813120 0x7f81e2de5277 36: cnq::f(bjg) -> int
fifo write: @1699477138743335690 0x7f81ea870bf6 6429: cab::l() -> void
fifo write: @1699477138769543997 0x7f81e8bf8130 27: vtable stub
fifo write: @1699477138787670260 0x7f81ea8760b0 723: dmp::a(dmo, asc, double, float, float) -> double
fifo write: @1699477138788518561 0x7f81ea876bd9 62: dlj$s::apply(Object) -> Object
fifo write: @1699477138808010052 0x7f81ea876fa8 359: dnr::a(cpw, gw) -> boolean
fifo write: @1699477138808318836 0x7f81ea877850 87: dqf$$Lambda$8088.0x00007f8160cce9c8::test(Object) -> boolean
fifo write: @1699477138810318722 0x7f81ea877bd9 78: drg::a(asc, int, int, int, int, boolean) -> boolean
fifo write: @1699477138814598657 0x7f81e2ebd037 710: bfx::a(asc) -> float
fifo write: @1699477138817185410 0x7f81ea877fd3 672: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::fixPointers(int, int) -> void
fifo write: @1699477138817429633 0x7f81e2b8af14 31: eag::a(long) -> int
fifo write: @1699477138841980469 0x7f81ea878bfe 4177: cab::b_() -> void
fifo write: @1699477138847315358 0x7f81ea87c8f3 1376: it.unimi.dsi.fastutil.longs.Long2FloatLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477138886737005 0x7f81e2dfb4a3 1915: it.unimi.dsi.fastutil.objects.ObjectIterators::unwrap(java.util.Iterator, Object[], int, int) -> int
fifo write: @1699477138919349065 0x7f81e3007814 185: byn$$Lambda$7393.0x00007f8160be8e70::<init>(byn) -> void
fifo write: @1699477138919744060 0x7f81e19e29ff 3819: byn::G() -> void
fifo write: @1699477138942943479 0x7f81e28c8ef4 2096: dvm::a(cqp, dva, int, int, int, int, int, int, dfj, dfj, boolean) -> void
fifo write: @1699477138966651054 0x7f81ea87e017 17182: bsp::c() -> void
fifo write: @1699477138966916687 0x7f81ea88aa6f 308: java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock() -> boolean
fifo write: @1699477138981124290 0x7f81e19e2414 109: io.netty.buffer.PoolChunk::insertAvailRun0(int, long) -> void
fifo write: @1699477138993054184 0x7f81ea88b31d 19996: dhq::a(gw, dfj, boolean) -> dfj
fifo write: @1699477138998891738 0x7f81ea1c44f8 2825: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::rehash(int) -> void
fifo write: @1699477139005988850 0x7f81e9fde1fd 2696: dlu::a(dhf, gw) -> void
fifo write: @1699477139009957291 0x7f81ea10fd15 1555: dho::a() -> int
fifo write: @1699477139029630054 0x7f81ea10f8cc 6: clp::n() -> cjf
fifo write: @1699477139030222232 0x7f81e9785bd9 6346: dho::b(so) -> void
fifo write: @1699477139032245638 0x7f81e25e3254 1355: io.netty.channel.DefaultChannelPipeline$HeadContext::readIfIsAutoRead() -> void
fifo write: @1699477139032980298 0x7f81e9b2ecf4 1292: com.mojang.datafixers.TypedOptic::inj1(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477139034224493 0x7f81ea2fe673 428: dlv::b(int, int, int) -> double
fifo write: @1699477139034787181 0x7f81ea4e4650 187: dvm::a(int, int) -> int
fifo write: @1699477139035245766 0x7f81e9b31ad0 163: dvm::b(int, int) -> int
fifo write: @1699477139048807081 0x7f81e9f48552 17113: doc::a(dny) -> boolean
fifo write: @1699477139121559587 0x7f81ea4dacd7 1384: biq::i(int) -> boolean
fifo write: @1699477139124209591 0x7f81ea4d921f 2031: cph::c(biq, ehi) -> java.util.List
fifo write: @1699477139124326053 0x7f81ea4bdb61 60: arw::g(float) -> float
fifo write: @1699477139128682389 0x7f81e9f461f8 2755: ehx::<init>(biq) -> void
fifo write: @1699477139133603362 0x7f81ea89767d 33158: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477139227194046 0x7f81e9f441f6 2309: bji::dx() -> void
fifo write: @1699477139230017013 0x7f81e9f42323 2115: aka::a(akr) -> void
fifo write: @1699477139321500950 0x7f81e9b31451 290: cqi::c(int, int) -> cpb
fifo write: @1699477139375804089 0x7f81e9f41d50 127: cpv::V() -> long
fifo write: @1699477139391329799 0x7f81e9f4190c 45: dlu$1::a(int, int) -> dlu$a
fifo write: @1699477139391550192 0x7f81e23a9494 1167: java.util.HashMap$TreeNode::rotateLeft(java.util.HashMap$TreeNode, java.util.HashMap$TreeNode) -> java.util.HashMap$TreeNode
fifo write: @1699477139395180088 0x7f81e2e35b4a 261: cpc::a(int, int) -> cpc
fifo write: @1699477139396177681 0x7f81e2f4ea17 575: dkw$b::a(dkl$f) -> dkl
fifo write: @1699477139428923822 0x7f81ea40ebec 2742: dlu::a(akx) -> dlu
fifo write: @1699477139430078617 0x7f81ea1c3771 858: dfl::b(dgm) -> boolean
fifo write: @1699477139432100993 0x7f81e9fdd5d3 556: com.mojang.serialization.codecs.RecordCodecBuilder::<init>(java.util.function.Function, java.util.function.Function, com.mojang.serialization.MapDecoder) -> void
fifo write: @1699477139432755322 0x7f81ea1c3350 67: dkm$w::a() -> double
fifo write: @1699477139433277589 0x7f81ea4d8dd0 67: dkm$w::b() -> double
fifo write: @1699477139437140568 0x7f81ea8affee 22875: biq::a(bjm, ehn) -> void
fifo write: @1699477139446086813 0x7f81e22cb0b7 910: bus$1::a(gw) -> boolean
fifo write: @1699477139446876083 0x7f81ea408df7 8656: dhg::a(cqp, cqn, dhf) -> void
fifo write: @1699477139447414100 0x7f81ea408774 222: ehn::d() -> ehn
fifo write: @1699477139448227451 0x7f81ea4083d8 113: qz::a(float) -> qz
fifo write: @1699477139449421756 0x7f81e297ce34 536: io.netty.buffer.LongLongHashMap::remove(long) -> void
fifo write: @1699477139462143710 0x7f81e1559674 108: io.netty.util.collection.IntObjectHashMap::toExternal(Object) -> Object
fifo write: @1699477139462295572 0x7f81e2990834 807: io.netty.util.collection.IntObjectHashMap::indexOf(int) -> int
fifo write: @1699477139468854496 0x7f81ea4080cc 9: byy::b() -> java.util.UUID
fifo write: @1699477139468891797 0x7f81ea407c4c 5: byy::a() -> int
fifo write: @1699477139504345673 0x7f81ea4d8183 710: dlj$n::apply(Object) -> Object
fifo write: @1699477139515041141 0x7f81e2718574 1768: byy::U() -> boolean
fifo write: @1699477139555890347 0x7f81ea6d213c 11251: eiw::a(long) -> void
fifo write: @1699477139563637426 0x7f81ea6cfe11 2922: djg::a() -> void
fifo write: @1699477139563868509 0x7f81ea4d7cd0 103: dhl::a(int, int, int) -> int
fifo write: @1699477139600130785 0x7f81ea8c0396 5567: dlu::a(akx) -> dlu
fifo write: @1699477139645320177 0x7f81ea6cf3b5 710: java.util.DualPivotQuicksort::insertionSort(int[], int, int) -> void
fifo write: @1699477139652041614 0x7f81ea8c3605 1434: it.unimi.dsi.fastutil.objects.ObjectArrayList$$Lambda$391.0x00007f816024ade8::accept(Object, Object) -> void
fifo write: @1699477139653406502 0x7f81e18db494 144: dki$a::c() -> java.util.OptionalInt
fifo write: @1699477139653475542 0x7f81e2217394 144: dki$a::b() -> java.util.OptionalInt
fifo write: @1699477139654848060 0x7f81e245a999 404: cxu$$Lambda$8131.0x00007f8160cd2910::apply(Object) -> Object
fifo write: @1699477139654920791 0x7f81e2a72397 52: cxu::b(dfj, cpw, gw, ha, boolean, ha) -> java.util.Optional
fifo write: @1699477139654991112 0x7f81e2f596b7 611: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477139655080263 0x7f81e3007294 185: cxu$$Lambda$8133.0x00007f8160cd31b8::<init>(cxu$b) -> void
fifo write: @1699477139655139124 0x7f81e3018b94 238: cxu$$Lambda$8134.0x00007f8160cd33e0::<init>(cxu, cpw, boolean) -> void
fifo write: @1699477139655218715 0x7f81e1f37314 500: cxu$$Lambda$8132.0x00007f8160cd2b58::test(Object) -> boolean
fifo write: @1699477139655402217 0x7f81e2605459 3662: cxu::a(dfj, cpb, gw, ha, ha, cxu$d) -> java.util.Optional
fifo write: @1699477139655804393 0x7f81e30095a7 3138: cxu::a(dfj, cpw, gw, ha, ha, boolean) -> java.util.Optional
fifo write: @1699477139657294232 0x7f81e2f25c97 3606: dom$$Lambda$8084.0x00007f8160ccdc68::test(Object) -> boolean
fifo write: @1699477139657435273 0x7f81e301f574 3257: dns::a(dfj) -> boolean
fifo write: @1699477139659631441 0x7f81ea8c4a8d 31519: doc::a(dny) -> boolean
fifo write: @1699477139666314727 0x7f81e301f114 31: djl::a(dja) -> boolean
fifo write: @1699477139666578221 0x7f81ea6cf088 45: java.util.stream.Collectors$$Lambda$58.0x00007f816003cca0::get() -> Object
fifo write: @1699477139669761582 0x7f81ea8da957 37624: akt::f() -> void
fifo write: @1699477139669815103 0x7f81e18f6fb4 778: dvm::b(int, int) -> int
fifo write: @1699477139669947534 0x7f81ea8f0fac 5596: ehw::a(ehw$a, gu) -> void
fifo write: @1699477139670505192 0x7f81ea8f4d9c 439: dvm::b(int, int, int) -> gw$a
fifo write: @1699477139673487020 0x7f81ea8f56cc 2: dva::k() -> int
fifo write: @1699477139697277466 0x7f81ea8f61a3 6618: dvm::a(cqp, dfj, int, int, int, dva) -> void
fifo write: @1699477139699284551 0x7f81ea8fac4c 4: it.unimi.dsi.fastutil.longs.AbstractLong2FloatFunction::defaultReturnValue(float) -> void
fifo write: @1699477139700543548 0x7f81ea8fafa0 463: dus::a(dun, asc, gw) -> boolean
fifo write: @1699477139705315359 0x7f81ea8fb86a 242: com.google.common.collect.RegularImmutableSet::spliterator() -> java.util.Spliterator
fifo write: @1699477139731133322 0x7f81e27383f0 784: java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock() -> boolean
fifo write: @1699477139732524400 0x7f81ea8fc700 789: java.util.AbstractQueue::add(Object) -> boolean
fifo write: @1699477139732992436 0x7f81ea8fd154 139: com.google.common.base.Equivalence::equivalent(Object, Object) -> boolean
fifo write: @1699477139733597093 0x7f81e3048a7e 17911: com.google.common.cache.LocalCache$Segment::storeLoadedValue(Object, int, com.google.common.cache.LocalCache$LoadingValueReference, Object) -> boolean
fifo write: @1699477139734793079 0x7f81ea8fd5f0 311: com.google.common.cache.LocalCache$Segment::getNextEvictable() -> com.google.common.cache.ReferenceEntry
fifo write: @1699477139735984164 0x7f81ea8fde32 2053: cpv::P() -> void
fifo write: @1699477139742369586 0x7f81ea8ffd67 7497: akq::a(gw, dfj, dfj, int) -> void
fifo write: @1699477139744392632 0x7f81e2f0ec14 185: dia$$Lambda$8076.0x00007f8160ccc8d8::<init>(dia) -> void
fifo write: @1699477139744651426 0x7f81e2737077 1689: dia::b(dko$a) -> dhe
fifo write: @1699477139770385697 0x7f81e2f0e53e 445: yj::a(so) -> void
fifo write: @1699477139775442192 0x7f81e2f194b7 1169: byw::cy() -> boolean
fifo write: @1699477139776494435 0x7f81ea905876 4256: com.google.common.cache.LocalCache$Segment::removeEntryFromChain(com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477139782481762 0x7f81ea9083ef 5772: com.google.common.cache.LocalCache$Segment::removeValueFromChain(com.google.common.cache.ReferenceEntry, com.google.common.cache.ReferenceEntry, Object, int, Object, com.google.common.cache.LocalCache$ValueReference, com.google.common.cache.RemovalCause) -> com.google.common.cache.ReferenceEntry
fifo write: @1699477139784103003 0x7f81ea90bef0 1272: com.mojang.datafixers.TypedOptic::list(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477139786644016 0x7f81ea90cf4d 747: dvy::a(akq) -> dvy
fifo write: @1699477139791012562 0x7f81ea90d920 1856: com.mojang.serialization.codecs.RecordCodecBuilder$Instance::ap2(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477139827215478 0x7f81e2c61081 4793: bvl$f::a(cpy, gw) -> boolean
fifo write: @1699477139832056451 0x7f81ea90ef15 1421: bqo::n() -> boolean
fifo write: @1699477139840073323 0x7f81ea91010a 2603: bvl$f::a(cpy, gw) -> boolean
fifo write: @1699477139877633867 0x7f81ea9126f9 14975: bjg::aq() -> void
fifo write: @1699477139878170964 0x7f81ea91f02a 18260: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477139891009199 0x7f81ea92ac15 2730: dik::a(int) -> int
fifo write: @1699477139915513364 0x7f81ea92c9d2 205: dfi::a(dfj, cpv, gw, dfj, boolean) -> void
fifo write: @1699477139916645969 0x7f81e1656014 517: java.util.stream.Streams$ConcatSpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477139935553692 0x7f81ea92d3b7 4688: bji::fg() -> void
fifo write: @1699477139967699186 0x7f81e2c60af4 56: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry::pred(it.unimi.dsi.fastutil.longs.LongAVLTreeSet$Entry) -> void
fifo write: @1699477139970433641 0x7f81ea9312d0 43: io.netty.channel.AbstractChannel::eventLoop() -> io.netty.channel.EventLoop
fifo write: @1699477140065254911 0x7f81e3007d37 2439: dzv::a(long) -> int
fifo write: @1699477140076480396 0x7f81ea931699 2613: ebg::d(gw) -> double
fifo write: @1699477140085087547 0x7f81ea9338d0 327: dhg$$Lambda$8025.0x00007f8160cb5208::accept(Object) -> void
fifo write: @1699477140085575703 0x7f81e1655a94 39: dhk$$Lambda$1682.0x00007f81605c2f08::doWork(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477140085734245 0x7f81e2a90594 87: dhk$$Lambda$1683.0x00007f81605c3150::doWork(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477140085869777 0x7f81e2a8fe04 431: dhk::e(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477140085973148 0x7f81e2f21894 365: dkv$$Lambda$8035.0x00007f8160cb92b0::<init>(dkv, dlu, dlg, cqn, dhf) -> void
fifo write: @1699477140086049459 0x7f81e2f21414 125: dkv$$Lambda$8035.0x00007f8160cb92b0::get() -> Object
fifo write: @1699477140086135710 0x7f81e253e494 39: dkv::b(dlu, dlg, cqn, dhf) -> dhf
fifo write: @1699477140086189761 0x7f81e253de94 320: dkv$$Lambda$8037.0x00007f8160cb9c30::<init>(dkv, cqn, dlu, dlg) -> void
fifo write: @1699477140086308852 0x7f81e25d1af4 1376: dhk::e(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477140086455404 0x7f81e2f04db7 1735: dkv::a(java.util.concurrent.Executor, dlg, dlu, cqn, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477140086518395 0x7f81e253d91d 38: dkv::c(cqn, dlu, dlg, dhf) -> dkw
fifo write: @1699477140086567276 0x7f81e301e099 388: dkv$$Lambda$8037.0x00007f8160cb9c30::apply(Object) -> Object
fifo write: @1699477140087014171 0x7f81e3012857 4525: dkv::a(dlu, dlg, cqn, dhf) -> void
fifo write: @1699477140087893882 0x7f81e301d6b4 570: crc$f::<init>(dkl, dkl, dkl, dkl, dkl, dkl, java.util.List) -> void
fifo write: @1699477140088040424 0x7f81e301bf94 185: dkw$$Lambda$8056.0x00007f8160cc1028::<init>(dkw) -> void
fifo write: @1699477140088118235 0x7f81e301bb14 185: dkw$$Lambda$8055.0x00007f8160cc0df0::<init>(dkw) -> void
fifo write: @1699477140088188886 0x7f81e301b414 185: dkw$$Lambda$8058.0x00007f8160cc1498::<init>(dkw) -> void
fifo write: @1699477140088234987 0x7f81e28c8a14 185: dkw$$Lambda$8054.0x00007f8160cc0bb8::<init>(dkw) -> void
fifo write: @1699477140088274117 0x7f81e28c8594 185: dkw$$Lambda$8057.0x00007f8160cc1260::<init>(dkw) -> void
fifo write: @1699477140088312708 0x7f81e28c8114 185: dkw$$Lambda$8059.0x00007f8160cc16d0::<init>(dkw) -> void
fifo write: @1699477140090204852 0x7f81e2ee9537 898: dhk$$Lambda$8036.0x00007f8160cb94d8::apply(Object) -> Object
fifo write: @1699477140090265653 0x7f81e2ee8e77 553: dhk::d(dhf) -> com.mojang.datafixers.util.Either
fifo write: @1699477140095102505 0x7f81e22bfbb4 369: dkw::f() -> void
fifo write: @1699477140103484623 0x7f81ea93408e 7095: dwf::b(dhh, int, int) -> boolean
fifo write: @1699477140126936605 0x7f81ea938171 8462: dhg::a(cqp, cqn, dhf) -> void
fifo write: @1699477140127064516 0x7f81ea93dd48 75: Math::floorMod(int, int) -> int
fifo write: @1699477140128767738 0x7f81e22bf694 313: dkw::g() -> void
fifo write: @1699477140129322455 0x7f81ea93e0f9 187: java.util.HashMap$KeySpliterator::<init>(java.util.HashMap, int, int, int, int) -> void
fifo write: @1699477140131205580 0x7f81ea93e4fa 873: java.util.stream.SpinedBuffer::accept(Object) -> void
fifo write: @1699477140164611469 0x7f81e300e7d6 9220: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477140165239058 0x7f81ea93f286 17260: dhg::a(cqn, hw, dhf, dhh, cpc, hr, dlg, dzc, he) -> void
fifo write: @1699477140166510824 0x7f81e300e014 139: csw$$Lambda$560.0x00007f8160318440::test(dfj, cpb, gw) -> boolean
fifo write: @1699477140186194647 0x7f81ea949529 6526: bua::a(gw, int, java.util.function.Predicate) -> gw
fifo write: @1699477140187449473 0x7f81e22bed87 950: dia::c(dko$a) -> dhe
fifo write: @1699477140187493464 0x7f81e2887a54 1392: dia$$Lambda$8076.0x00007f8160ccc8d8::apply(Object) -> Object
fifo write: @1699477140187521544 0x7f81e2887237 841: dhe::<init>(int, int) -> void
fifo write: @1699477140217827245 0x7f81e2886e14 31: akq::b(biq) -> boolean
fifo write: @1699477140218043707 0x7f81e2886274 1096: akq::j(biq) -> boolean
fifo write: @1699477140224611792 0x7f81ea94de99 598: io.netty.buffer.AbstractByteBuf::writeInt(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477140269526490 0x7f81ea94e953 228: bqy::b() -> boolean
fifo write: @1699477140290295697 0x7f81ea94f000 191: dns::a(double, double, double, double) -> double
fifo write: @1699477140290340818 0x7f81ea94f414 239: dom$a::a(float) -> int
fifo write: @1699477140299257742 0x7f81e294526d 600: cpc::a(cpc, int) -> java.util.stream.Stream
fifo write: @1699477140299290753 0x7f81e2944857 993: dlt::<init>(long) -> void
fifo write: @1699477140299423824 0x7f81e2943b19 1689: java.util.AbstractCollection::retainAll(java.util.Collection) -> boolean
fifo write: @1699477140299835970 0x7f81e2de2f47 4413: java.util.stream.Collectors::groupingBy(java.util.function.Function, java.util.function.Supplier, java.util.stream.Collector) -> java.util.stream.Collector
fifo write: @1699477140321223315 0x7f81e284b6f7 2613: hm::a() -> java.util.List
fifo write: @1699477140321806412 0x7f81ea94fb7c 18: byn::aG() -> gw
fifo write: @1699477140334837350 0x7f81ea94fed6 115: dki$c::c() -> java.util.OptionalInt
fifo write: @1699477140341990182 0x7f81ea9502fc 185: cqn::a(hw, dvi, dic) -> dvq
fifo write: @1699477140342949295 0x7f81e284ae39 721: java.util.HashMap$TreeNode::untreeify(java.util.HashMap) -> java.util.HashMap$Node
fifo write: @1699477140346639642 0x7f81e2de2a14 87: dhk$$Lambda$1684.0x00007f81605c3370::doWork(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477140346702583 0x7f81e284a714 385: dkv$$Lambda$8060.0x00007f8160cc1908::<init>(dkv, dlu, cqn, dlg, dhf, int, int) -> void
fifo write: @1699477140346747234 0x7f81e2943614 136: dkv$$Lambda$8060.0x00007f8160cc1908::get() -> Object
fifo write: @1699477140346797104 0x7f81e284a314 39: dkv::b(dlu, cqn, dlg, dhf, int, int) -> dhf
fifo write: @1699477140347066888 0x7f81e2e237ef 1373: dhk::d(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477140347116728 0x7f81ea950855 74: net.minecraft.server.MinecraftServer::at() -> boolean
fifo write: @1699477140372459495 0x7f81ea950c70 1073: com.mojang.serialization.Decoder$5::toString() -> String
fifo write: @1699477140372991571 0x7f81e2e23214 332: dhk$$Lambda$8063.0x00007f8160cc1d68::apply(Object) -> Object
fifo write: @1699477140373059862 0x7f81e2e22c14 581: dkv$$Lambda$8061.0x00007f8160cc1b30::accept(Object, Object) -> void
fifo write: @1699477140373199974 0x7f81e2e22814 39: dhk$$Lambda$1685.0x00007f81605c3590::doWork(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477140373640050 0x7f81e22b5296 1188: dkv::a(akx, cqn, dlg, dhf) -> void
fifo write: @1699477140373803312 0x7f81e2e21eac 661: dhk::d(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477140373886903 0x7f81e22b42d7 1936: dhk::c(dhf) -> com.mojang.datafixers.util.Either
fifo write: @1699477140373965724 0x7f81e22b3c94 320: dkv$$Lambda$8070.0x00007f8160cc3b70::<init>(dkv, cqn, dlu, dlg) -> void
fifo write: @1699477140374377849 0x7f81e2a54fff 3066: dkv::a(dhf, dlp, dlg, cqn, cqv, hq, dlu) -> void
fifo write: @1699477140381205397 0x7f81e22b3694 39: dhk$$Lambda$1686.0x00007f81605c37d8::doWork(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477140381580602 0x7f81e2a53eed 1938: dhk::c(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477140382497603 0x7f81e3050f67 10012: dlu::a(cqp, dia) -> void
fifo write: @1699477140385742585 0x7f81ea951cc6 649: dvm::a(cpb, int, int, int, dva) -> dfj
fifo write: @1699477140392716975 0x7f81ea952b86 9898: dhg::a(cqn, hw, dhf, dhh, cpc, hr, dlg, dzc, he) -> void
fifo write: @1699477140400577526 0x7f81ea958c7d 241: net.minecraft.server.MinecraftServer::d(Runnable) -> void
fifo write: @1699477140419767353 0x7f81e2d1a9f9 1275: bfr::i() -> void
fifo write: @1699477140423130446 0x7f81e2c1741f 5328: bjg::a(ehn, float) -> ehn
fifo write: @1699477140423717654 0x7f81e2c16994 576: dvm::a(cqp, dva, asc, float, int, int, int, dfj) -> void
fifo write: @1699477140425565888 0x7f81e2f21077 36: ead$a::a(int) -> long
fifo write: @1699477140427399702 0x7f81ea9593e8 1203: dxe$c::a(cpy, int, int, int, dva) -> boolean
fifo write: @1699477140430083866 0x7f81ea95a939 2934: aka::a(akr) -> void
fifo write: @1699477140433469909 0x7f81ea95d0f5 702: dvm::b(cpy, int, int, int, dva) -> boolean
fifo write: @1699477140435908491 0x7f81e305503f 11258: dxe$c::a(cpw, dva) -> boolean
fifo write: @1699477140438853499 0x7f81ea95de0b 58: net.minecraft.server.MinecraftServer::f(Runnable) -> Runnable
fifo write: @1699477140458290749 0x7f81ea95e1d6 115: dki$c::b() -> java.util.OptionalInt
fifo write: @1699477140463020310 0x7f81e305a0ff 21889: dol::a(dny) -> boolean
fifo write: @1699477140463059780 0x7f81e2d1a314 536: cpc$1::<init>(long, int, cpc, cpc, int, int) -> void
fifo write: @1699477140463091901 0x7f81e2d19e94 232: java.util.Spliterators$AbstractSpliterator::<init>(long, int) -> void
fifo write: @1699477140463116211 0x7f81e2d19a94 31: dom$a::a() -> int
fifo write: @1699477140465587223 0x7f81e2d18b17 2090: hm::iterator() -> java.util.Iterator
fifo write: @1699477140465787646 0x7f81e2f0a077 1474: biu::a(cpv) -> biq
fifo write: @1699477140469810777 0x7f81e247184f 5670: dum::a(dun, asc, gw) -> boolean
fifo write: @1699477140473448764 0x7f81ea95e8d1 46: rb::equals(Object) -> boolean
fifo write: @1699477140547575408 0x7f81ea95ec17 3180: eag::a(long) -> int
fifo write: @1699477140560012938 0x7f81ea960e57 28: dlm$c::a(dlp) -> int
fifo write: @1699477140560547065 0x7f81e2470f94 183: dhk$$Lambda$1688.0x00007f81605c3c68::doWork(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477140560919050 0x7f81e2f08e9c 2365: dhk::c(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477140561440506 0x7f81e2f08994 243: bfm::d() -> boolean
fifo write: @1699477140564686868 0x7f81ea961293 1092: dpf::a(dny) -> boolean
fifo write: @1699477140565340707 0x7f81e2f08197 399: java.util.LinkedHashSet::spliterator() -> java.util.Spliterator
fifo write: @1699477140565416398 0x7f81e2d2b894 185: bqc$$Lambda$7829.0x00007f8160c856e0::<init>(bqb) -> void
fifo write: @1699477140565447408 0x7f81e2d2b414 185: bqc$$Lambda$7832.0x00007f8160c88000::<init>(bqb) -> void
fifo write: @1699477140565971245 0x7f81e2d2995c 4281: bqc::a(bqb) -> void
fifo write: @1699477140620125682 0x7f81e306317f 15303: bpe::a() -> void
fifo write: @1699477140644848969 0x7f81ea9626ac 18777: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477140716654474 0x7f81ea96e51e 1415: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::<init>(int, float) -> void
fifo write: @1699477140730834756 0x7f81ea96f44f 5024: bzq::l() -> void
fifo write: @1699477140754083865 0x7f81e2d291b4 527: aby$b::a(su) -> void
fifo write: @1699477140767717121 0x7f81ea9739d0 171: io.netty.channel.SingleThreadEventLoop::hasTasks() -> boolean
fifo write: @1699477140781875763 0x7f81ea974078 2278: byr::b_() -> void
fifo write: @1699477140789238758 0x7f81ea97657a 2690: ead::b(long, long) -> void
fifo write: @1699477140821111387 0x7f81ea977e19 1163: bqc::a(int, bqb) -> void
fifo write: @1699477140824547982 0x7f81e2ac7834 418: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::removeEntry(int) -> boolean
fifo write: @1699477140824624463 0x7f81e2ac6979 1914: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::shiftKeys(int) -> void
fifo write: @1699477140824699714 0x7f81e2ac6189 729: java.lang.invoke.LambdaForm$MH.0x00007f8160259000::reinvoke(Object, Object, Object) -> int
fifo write: @1699477140824765915 0x7f81e2ac533e 1553: it.unimi.dsi.fastutil.objects.ObjectOpenHashSet::remove(Object) -> boolean
fifo write: @1699477140845009445 0x7f81e3002b14 365: dlc$$Lambda$8046.0x00007f8160cbd430::<init>(dkl, dfj, dlf, dkl, dkl) -> void
fifo write: @1699477140845462871 0x7f81e300083a 5096: dke$c::<init>(dkw, cpc, dky, dlf, int, int, dke$a) -> void
fifo write: @1699477140845998588 0x7f81e2bc7434 1949: java.util.HashMap$TreeNode::moveRootToFront(java.util.HashMap$Node[], java.util.HashMap$TreeNode) -> void
fifo write: @1699477140846529485 0x7f81e2bc67d4 982: dky::<init>(dkl, dkl, dkl, dkl, dkl, dkl, dkl, dkl, dkl, dkl, dkl, dkl, dkl, dkl, dkl) -> void
fifo write: @1699477140869609882 0x7f81ea978ea4 8611: dhg::a(cqp, cqn, dhf) -> void
fifo write: @1699477140876523800 0x7f81ea97f190 2225: com.mojang.serialization.codecs.OptionalFieldCodec::toString() -> String
fifo write: @1699477140880806166 0x7f81e2d28cf4 90: it.unimi.dsi.fastutil.objects.ObjectArraySet::isEmpty() -> boolean
fifo write: @1699477140881138690 0x7f81e2fffe14 770: biq::e(qw) -> boolean
fifo write: @1699477140881691977 0x7f81e2bc4eb2 3192: biq::a(float[]) -> rc
fifo write: @1699477140882942883 0x7f81e2eeced7 7562: biq::bu() -> String
fifo write: @1699477140883069345 0x7f81e30692b4 973: biq::ad() -> tl
fifo write: @1699477140883375499 0x7f81e3069f07 9020: biq::d(qw) -> boolean
fifo write: @1699477140883414599 0x7f81e306d9b4 539: biq::cA() -> boolean
fifo write: @1699477140883804574 0x7f81e306e56e 14956: bki::g() -> qw
fifo write: @1699477140884251440 0x7f81ea980eb0 2987: com.mojang.serialization.codecs.RecordCodecBuilder$Instance$3::toString() -> String
fifo write: @1699477140884348231 0x7f81ea9833db 45: cjf::b() -> boolean
fifo write: @1699477140887842977 0x7f81e3074ce7 38198: biq::f(qw) -> qw
fifo write: @1699477140887888687 0x7f81e2ac4c94 434: io.netty.buffer.PoolSubpage::removeFromPool() -> void
fifo write: @1699477140892525546 0x7f81ea33a619 3017: dlu::a(int, int) -> dlu$a
fifo write: @1699477140918953487 0x7f81e994f5f8 2081: it.unimi.dsi.fastutil.shorts.Short2BooleanOpenHashMap::rehash(int) -> void
fifo write: @1699477140931294855 0x7f81ea035454 4275: bum::l() -> void
fifo write: @1699477140945861973 0x7f81ea46af3c 9247: ebg::a(eaz[], eaz) -> int
fifo write: @1699477140969129913 0x7f81e994f197 232: dia::a(dhk) -> void
fifo write: @1699477140971515053 0x7f81e2cc55e4 4344: bjg::j(ehn) -> ehn
fifo write: @1699477140972742359 0x7f81e26a7e88 987: java.util.EnumSet::of(Enum, Enum, Enum, Enum) -> java.util.EnumSet
fifo write: @1699477140975313382 0x7f81ea25318f 2211: arf$3::toString() -> String
fifo write: @1699477140978925408 0x7f81ea251bce 1851: com.mojang.serialization.Codec::comapFlatMap(java.util.function.Function, java.util.function.Function) -> com.mojang.serialization.Codec
fifo write: @1699477140983805881 0x7f81e21b0614 39: dhk$$Lambda$1687.0x00007f81605c3a20::doWork(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477140984003424 0x7f81e23949d7 703: dhk::b(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477140984065915 0x7f81e25ad8f0 348: java.util.stream.Collectors$$Lambda$7985.0x00007f8160964670::get() -> Object
fifo write: @1699477140984114405 0x7f81e25c9b94 205: dom$a::<init>(gw, boolean, int, double, double) -> void
fifo write: @1699477141002633564 0x7f81ea24e78b 4719: com.google.common.cache.LocalCache$Segment::setValue(com.google.common.cache.ReferenceEntry, Object, Object, long) -> void
fifo write: @1699477141017104100 0x7f81ea24b51a 4201: com.google.common.cache.LocalCache$Segment::evictEntries(com.google.common.cache.ReferenceEntry) -> void
fifo write: @1699477141017345723 0x7f81e994ed55 118: com.google.common.cache.LocalCache$Strength$1::referenceValue(com.google.common.cache.LocalCache$Segment, com.google.common.cache.ReferenceEntry, Object, int) -> com.google.common.cache.LocalCache$ValueReference
fifo write: @1699477141027066068 0x7f81ea248ddc 3451: com.google.common.cache.LocalCache$Segment::recordWrite(com.google.common.cache.ReferenceEntry, int, long) -> void
fifo write: @1699477141027396102 0x7f81ea034dd9 166: eap::b(cpy) -> int
fifo write: @1699477141058952408 0x7f81e2261194 31: aka::b(ajy, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477141059042989 0x7f81e2a31c94 445: aka$$Lambda$7964.0x00007f8160ca2b10::apply(Object) -> Object
fifo write: @1699477141059218732 0x7f81e2f2e5f4 488: dhk::a(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477141059395164 0x7f81e2b85894 585: dhk$$Lambda$1693.0x00007f81605c68a8::doWork(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477141059584326 0x7f81e1b54737 2201: aka::a(dia, dhq) -> void
fifo write: @1699477141059641197 0x7f81e2ab0237 2319: aka$$Lambda$7966.0x00007f8160ca31a0::run(dhq) -> void
fifo write: @1699477141059719158 0x7f81e2a3051f 1939: aka::a(akq, java.util.List) -> void
fifo write: @1699477141068878416 0x7f81e2cc4ccf 719: dxe$c::a(cpb, dva, int, int, int, int) -> boolean
fifo write: @1699477141069307711 0x7f81e2cc2e20 4826: dxe$a::a(cqp, dva, int, int, int, int, int, asc) -> void
fifo write: @1699477141077543217 0x7f81e21bf67c 3869: cun::a(dfj, cxq) -> dfj
fifo write: @1699477141078603511 0x7f81e21bbbb7 8842: dxe$a::a(cqp, cqn, dhg, asc, dva, cpc, gw) -> void
fifo write: @1699477141080941971 0x7f81ea1d223d 10496: dum::a(dun, asc, gw) -> boolean
fifo write: @1699477141086763506 0x7f81e2d6199c 10922: cun::a(dfj, czh) -> dfj
fifo write: @1699477141098205943 0x7f81ea1ce0d5 5222: dpk::a(dny) -> boolean
fifo write: @1699477141104803578 0x7f81ea1cc668 1656: dxe$c::a(cqp, dva, dfj, int, int, int) -> void
fifo write: @1699477141125564345 0x7f81ea1cb570 1195: yf::a(dhq) -> int
fifo write: @1699477141152165238 0x7f81e2cc2814 159: io.netty.buffer.AbstractByteBuf::readUnsignedByte() -> short
fifo write: @1699477141163535414 0x7f81ea983ab3 12491: yf::a(so, dhq) -> void
fifo write: @1699477141165770172 0x7f81ea1ca4e4 1531: io.netty.buffer.PooledUnsafeDirectByteBuf::init(io.netty.buffer.PoolChunk, java.nio.ByteBuffer, long, int, int, int, io.netty.buffer.PoolThreadCache) -> void
fifo write: @1699477141166036826 0x7f81ea034750 83: io.netty.buffer.PooledUnsafeDirectByteBuf::initMemoryAddress() -> void
fifo write: @1699477141168558728 0x7f81e21baa34 2019: ctc::g(dfj) -> boolean
fifo write: @1699477141173092557 0x7f81ea1c7813 4016: dtt::a(asc, dlp) -> int
fifo write: @1699477141181257032 0x7f81ea98c633 2614: cuz::a(dfj, cpy, gw) -> boolean
fifo write: @1699477141187012776 0x7f81e2bdf394 185: dzu$$Lambda$7978.0x00007f8160ca8bf8::<init>(dzu) -> void
fifo write: @1699477141187058246 0x7f81e2aafa37 605: dhf::a(java.util.function.BiConsumer) -> void
fifo write: @1699477141187431131 0x7f81e21b937f 3162: dzu::b(cpc) -> void
fifo write: @1699477141200190815 0x7f81e30856e7 42420: bji::b(qw) -> void
fifo write: @1699477141209652557 0x7f81ea98e851 8906: dpi::a(cpw, dva, java.util.Set, java.util.Set, java.util.Set) -> ehw
fifo write: @1699477141218404830 0x7f81e21b8d14 246: so::readUnsignedByte() -> short
fifo write: @1699477141227888282 0x7f81e2d60eb4 688: alp::m() -> void
fifo write: @1699477141228077774 0x7f81e2b85134 617: bjg::fi() -> boolean
fifo write: @1699477141231590610 0x7f81e2d5ff97 1750: dhk$$Lambda$1690.0x00007f81605c6220::doWork(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477141231739492 0x7f81e2d5f0f7 1669: dhk::b(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477141234626319 0x7f81e2d5ec94 39: dhk$$Lambda$1692.0x00007f81605c6660::doWork(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477141234685279 0x7f81e2d5e7f4 226: akx::B_() -> dha
fifo write: @1699477141234729160 0x7f81e2d5e014 809: bka::b(biu) -> dks$a
fifo write: @1699477141235075604 0x7f81e2d5d71c 990: dhk::a(dhk, akq, dhg, java.util.List, dhf) -> void
fifo write: @1699477141235333758 0x7f81e2d5adae 6544: cqg::a(cpy, biu, int, int) -> gw
fifo write: @1699477141235977586 0x7f81e2d57fff 6746: dkv::a(akx) -> void
fifo write: @1699477141237264722 0x7f81e3095967 15032: cqg::a(cqk, he, cpc, asc) -> void
fifo write: @1699477141267898867 0x7f81e2d57914 185: aby::<init>(double, double, double, float, float, boolean, boolean, boolean) -> void
fifo write: @1699477141278235080 0x7f81e309c641 23136: it.unimi.dsi.fastutil.longs.LongAVLTreeSet::remove(long) -> boolean
fifo write: @1699477141278888018 0x7f81e2d573b4 295: alp::b(double) -> double
fifo write: @1699477141279101101 0x7f81e2d565d4 1662: alp::b(double, double, double, float, float) -> boolean
fifo write: @1699477141279515096 0x7f81e2d55217 2200: alp::a(cpy, ehi, double, double, double) -> boolean
fifo write: @1699477141279580277 0x7f81e2d5421e 1696: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::getBoolean(Object) -> boolean
fifo write: @1699477141279667438 0x7f81e2d5342f 1710: akr::a(double, double, double, boolean) -> void
fifo write: @1699477141279783680 0x7f81e30a6277 1908: cpf::d(biq, ehi) -> Iterable
fifo write: @1699477141289683657 0x7f81ea247ef9 1410: it.unimi.dsi.fastutil.longs.LongOpenHashSet::rehash(int) -> void
fifo write: @1699477141314229463 0x7f81e30a7074 1779: cvr::o(dfj) -> int
fifo write: @1699477141322548190 0x7f81ea1c66f9 1083: com.mojang.serialization.MapCodec$MapCodecCodec::toString() -> String
fifo write: @1699477141344789266 0x7f81ea1c5d65 590: java.nio.channels.spi.AbstractInterruptibleChannel::end(boolean) -> void
fifo write: @1699477141369840268 0x7f81e2d52f14 240: cpv::W() -> long
fifo write: @1699477141415434675 0x7f81e2d52a14 39: bka$$Lambda$7878.0x00007f8160c97980::test(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477141465779123 0x7f81ea46aa4c 4: bkk::d() -> double
fifo write: @1699477141468546698 0x7f81ea46a74c 3: bvl$c::c() -> boolean
fifo write: @1699477141539431841 0x7f81ea995a32 3703: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477141573280446 0x7f81e30a7db4 780: eac::a(long, int, int) -> void
fifo write: @1699477141573327137 0x7f81e30a8634 722: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::removeEntry(int) -> boolean
fifo write: @1699477141573375478 0x7f81e30a8eb4 875: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::fixPointers(int) -> void
fifo write: @1699477141573512829 0x7f81ea998930 2270: eak::e(eam) -> int
fifo write: @1699477141573557720 0x7f81e30a99f4 965: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::remove(long) -> boolean
fifo write: @1699477141575721517 0x7f81ea99a4f2 641: io.netty.channel.AbstractChannelHandlerContext::findContextInbound(int) -> io.netty.channel.AbstractChannelHandlerContext
fifo write: @1699477141596471864 0x7f81ea99b0ce 1699: dkm$q::a(dkl$f) -> dkl
fifo write: @1699477141600455556 0x7f81e30aa54a 1753: dwf::b(dhh, int, int) -> boolean
fifo write: @1699477141601197625 0x7f81ea99c2f9 578: dkm$z::equals(Object) -> boolean
fifo write: @1699477141603865750 0x7f81e30ab3fe 1657: java.util.HashMap::treeifyBin(java.util.HashMap$Node[], int) -> void
fifo write: @1699477141617515025 0x7f81e30ac0f4 31: Math::floorDiv(long, int) -> long
fifo write: @1699477141621831511 0x7f81ea99d458 6201: dwd::a(dhh, int, int) -> boolean
fifo write: @1699477141626535802 0x7f81ea9a0879 786: dkm$q::equals(Object) -> boolean
fifo write: @1699477141638868470 0x7f81e30ac4b7 726: bsp::a(java.util.Set, int, boolean, int) -> ebb
fifo write: @1699477141638937871 0x7f81e30accda 1369: bsp::a(gw, int) -> ebb
fifo write: @1699477141639047172 0x7f81e8bf8160 27: vtable stub
fifo write: @1699477141639363066 0x7f81e30ad923 5218: dhf::a(int, int) -> boolean
fifo write: @1699477141639737671 0x7f81e30afb4f 6600: bsp::a(java.util.Set, int, boolean, int, float) -> ebb
fifo write: @1699477141643649672 0x7f81ea46a2d2 169: io.netty.buffer.AbstractByteBufAllocator::calculateNewCapacity(int, int) -> int
fifo write: @1699477141648124789 0x7f81ea9a1ab6 2401: io.netty.buffer.PooledByteBuf::capacity(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477141648937620 0x7f81ea469e64 91: io.netty.buffer.AbstractByteBuf::checkNewCapacity(int) -> void
fifo write: @1699477141649878722 0x7f81ea9a385d 322: io.netty.buffer.PoolArena$DirectArena::memoryCopy(Object, int, io.netty.buffer.PooledByteBuf, int) -> void
fifo write: @1699477141650694012 0x7f81ea9a4051 254: io.netty.buffer.PoolArena$DirectArena::memoryCopy(java.nio.ByteBuffer, int, io.netty.buffer.PooledByteBuf, int) -> void
fifo write: @1699477141652396824 0x7f81ea9a47cd 2054: io.netty.buffer.PoolArena::reallocate(io.netty.buffer.PooledByteBuf, int) -> void
fifo write: @1699477141665977069 0x7f81ea9a6050 151: java.time.temporal.ChronoField::checkValidValue(long) -> long
fifo write: @1699477141672381271 0x7f81e30b28cd 2358: biq::a(float, float, bho) -> boolean
fifo write: @1699477141728625745 0x7f81ea9a68d0 3938: cxi::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477141735447063 0x7f81ea9a92d3 5765: bpe::a() -> void
fifo write: @1699477141765992226 0x7f81e30b3b2f 1390: bji::a(asc, float, biv) -> void
fifo write: @1699477141767759628 0x7f81e30b4694 31: biq::a(biq$c) -> void
fifo write: @1699477141767789239 0x7f81e30b4a94 167: biq::aa() -> void
fifo write: @1699477141767921321 0x7f81e30b4f14 354: biq::bB() -> void
fifo write: @1699477141768053282 0x7f81e30b54b4 999: eim::f(String) -> boolean
fifo write: @1699477141768171934 0x7f81e30b5dd9 3100: eim::d(String, eij) -> void
fifo write: @1699477141768773261 0x7f81e30b72b9 2099: bsp::a(ebb, double) -> boolean
fifo write: @1699477141771449106 0x7f81e30b849f 1619: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477141771743330 0x7f81ea9ad7ca 109: java.lang.invoke.LambdaForm$MH.0x00007f8160bdd000::linkToTargetMethod(Object, int, int, int, Object, Object) -> Object
fifo write: @1699477141773039646 0x7f81ea9adbdb 424: java.lang.invoke.LambdaForm$DMH.0x00007f8160690800::newInvokeSpecial(Object, Object, int, int, int, Object) -> Object
fifo write: @1699477141773539363 0x7f81e30b94d7 18206: ebg::b(cpb, gw) -> eax
fifo write: @1699477141774840450 0x7f81e30bfb74 1771: cbu::t() -> void
fifo write: @1699477141774884880 0x7f81e30c0bd9 2908: cjb::a() -> void
fifo write: @1699477141775120203 0x7f81e30c201c 1701: cbu::s() -> void
fifo write: @1699477141775784132 0x7f81e30c2f7c 7843: cbu::fL() -> void
fifo write: @1699477141776214457 0x7f81e30c6687 14048: ceh::a(cbu) -> void
fifo write: @1699477141798397303 0x7f81e96966bc 10511: bjg::a(ehn, float) -> ehn
fifo write: @1699477141798455364 0x7f81e281be0e 777: dom::a(gw, boolean, asc, int, bgb, bgb) -> dom$a
fifo write: @1699477141798693937 0x7f81e2a14be6 2537: dom$a::a(cqp, dom$b) -> boolean
fifo write: @1699477141802878790 0x7f81ea098bf8 653: drm::a(cqb, drm$b, asc, dqw, gw, int, int, boolean) -> void
fifo write: @1699477141808012286 0x7f81e2b11eea 431: cxu$e$1::a(gw, ha, ha) -> cxu$c
fifo write: @1699477141808936638 0x7f81e297df6a 300: cqv::a(cqv$a) -> cqv
fifo write: @1699477141809411814 0x7f81ea0eb7d0 1068: dpf::a(dny) -> boolean
fifo write: @1699477141819822839 0x7f81e1f01e94 280: ebg::a(cqi, bji) -> void
fifo write: @1699477141819865039 0x7f81e1d53d34 183: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::clear() -> void
fifo write: @1699477141819982701 0x7f81e21f93b7 1715: btx::a(bjp, int) -> boolean
fifo write: @1699477141820032942 0x7f81e29cfd94 1435: eba::a(cqi, bji) -> void
fifo write: @1699477141820119053 0x7f81e28b7394 185: ebd$$Lambda$7363.0x00007f8160bdb280::<init>(ebd) -> void
fifo write: @1699477141820166233 0x7f81e2632c94 345: ebd$$Lambda$7363.0x00007f8160bdb280::apply(Object) -> Object
fifo write: @1699477141820205424 0x7f81e2704499 699: eba::b(gw) -> eaz
fifo write: @1699477141820304835 0x7f81e2993899 124: ebf::<init>(eaz) -> void
fifo write: @1699477141820346806 0x7f81e290f777 223: eba::a(eaz) -> ebf
fifo write: @1699477141820385936 0x7f81e25be514 725: ebd::a(gw) -> ebf
fifo write: @1699477141820464997 0x7f81e2b006e1 1618: ebg::c(gw) -> eaz
fifo write: @1699477141820630889 0x7f81e2e1d434 753: cqi::a() -> bdp
fifo write: @1699477141820799331 0x7f81e272b0f9 1452: ebb::<init>(java.util.List, gw, boolean) -> void
fifo write: @1699477141820839812 0x7f81e2ba4434 1070: eaz::c(gw) -> float
fifo write: @1699477141820873512 0x7f81e14dd139 775: ebg::b() -> void
fifo write: @1699477141820925103 0x7f81e2a2b8f7 1266: ebd::a(eaz, gw, boolean) -> ebb
fifo write: @1699477141820952763 0x7f81e1a8f774 41: eba::b() -> void
fifo write: @1699477141820989964 0x7f81e2a3c294 135: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::clear() -> void
fifo write: @1699477141823276063 0x7f81ea730893 1104: ebg::a(cpb, gw$a) -> eax
fifo write: @1699477141825061166 0x7f81e2ffa7ff 5344: bsp::R_() -> void
fifo write: @1699477141836143689 0x7f81e1ab3299 88: it.unimi.dsi.fastutil.objects.ObjectArrayList::<init>(Object[]) -> void
fifo write: @1699477141836236140 0x7f81e2945a6c 259: ac::b(Object[], asc) -> java.util.List
fifo write: @1699477141836318851 0x7f81e2efbeb7 966: ha::a(asc) -> java.util.Collection
fifo write: @1699477141836396362 0x7f81e20621df 1004: it.unimi.dsi.fastutil.objects.ObjectArrayList::<init>(Object[], int, int) -> void
fifo write: @1699477141836502593 0x7f81e2f85e4f 689: java.lang.invoke.LambdaForm$MH.0x00007f8160cd8400::linkToTargetMethod(Object, Object, Object, Object, Object, int, Object) -> Object
fifo write: @1699477141836582294 0x7f81e2d7a014 380: cxu$$Lambda$8131.0x00007f8160cd2910::<init>(cxu, dfj, cpw, gw, ha, boolean) -> void
fifo write: @1699477141836642895 0x7f81e2df1919 472: cxu$$Lambda$8134.0x00007f8160cd33e0::apply(Object) -> Object
fifo write: @1699477141836700756 0x7f81e2a2af17 52: cxu::a(cpw, boolean, cxu$c) -> java.util.Optional
fifo write: @1699477141836784467 0x7f81e3016f88 1592: java.lang.invoke.LambdaForm$DMH.0x00007f81605e0000::newInvokeSpecial(Object, Object, Object, Object, Object, Object, int) -> Object
fifo write: @1699477141836832958 0x7f81e2cdb894 224: cxu$a::a(dfj, cpb, gw, ha) -> dfj
fifo write: @1699477141836891988 0x7f81e23d22f7 1604: cxu::a(cpw, cxu$c, boolean) -> java.util.Optional
fifo write: @1699477141836940009 0x7f81e301e65e 1181: cxu$b::a(cpw, cxu$c, dfj, boolean) -> boolean
fifo write: @1699477141843459533 0x7f81e2a1fa54 919: it.unimi.dsi.fastutil.objects.Object2ObjectMap::putIfAbsent(Object, Object) -> Object
fifo write: @1699477141843497273 0x7f81e2f56194 383: java.util.Random::nextLong() -> long
fifo write: @1699477141843552494 0x7f81e17ebe39 1059: it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap::containsKey(Object) -> boolean
fifo write: @1699477141843650015 0x7f81e2e1ff41 2203: bki::d(bkk) -> void
fifo write: @1699477141851169642 0x7f81e269ad9f 4783: cxu::a(dfj, cpw, gw, ha, asc, boolean) -> java.util.Optional
fifo write: @1699477141857148879 0x7f81e8bf8190 27: vtable stub
fifo write: @1699477141857164499 0x7f81e8bf81c0 27: vtable stub
fifo write: @1699477141857178329 0x7f81e8bf81f0 27: vtable stub
fifo write: @1699477141857876958 0x7f81e2f37934 453: io.netty.util.internal.InternalThreadLocalMap::random() -> io.netty.util.internal.ThreadLocalRandom
fifo write: @1699477141857980710 0x7f81e1fb363a 568: dli::<init>(long) -> void
fifo write: @1699477141858112281 0x7f81e29832e7 4080: asc::c() -> asc
fifo write: @1699477141858210012 0x7f81e2b2b697 4151: io.netty.util.internal.ThreadLocalRandom::current() -> io.netty.util.internal.ThreadLocalRandom
fifo write: @1699477141858236603 0x7f81e3003194 206: dli::b(long) -> void
fifo write: @1699477141858270283 0x7f81e2f6e914 185: bkk$$Lambda$7949.0x00007f8160ca5998::<init>(String) -> void
fifo write: @1699477141858298454 0x7f81e2273214 296: bki::c(bkk) -> void
fifo write: @1699477141858690399 0x7f81e2423d78 5886: bkk::<init>(String, double, bkk$a) -> void
fifo write: @1699477141862589209 0x7f81e27f2ebd 2648: dvm::a(cqp, dva, asc, float, int, int, int, int, int, int, dfj, dfj, boolean, boolean) -> void
fifo write: @1699477141864429772 0x7f81ea1a5423 13020: dpi::a(cpw, dva, java.util.Set, java.util.Set, java.util.Set) -> ehw
fifo write: @1699477141882936250 0x7f81e2272b94 312: java.lang.ref.Reference::enqueueFromPending() -> void
fifo write: @1699477141882999361 0x7f81e1c2bf54 1478: java.lang.ref.ReferenceQueue::enqueue(java.lang.ref.Reference) -> boolean
fifo write: @1699477141885989500 0x7f81e26dcf14 183: biq::ak() -> void
fifo write: @1699477141897320936 0x7f81e287af54 1070: bhf::a(int) -> cjf
fifo write: @1699477141898053145 0x7f81ea1a45f7 260: bjg::a(bkh) -> bki
fifo write: @1699477141898159997 0x7f81ea1a40ea 309: java.util.Arrays$ArrayList::set(int, Object) -> Object
fifo write: @1699477141900508536 0x7f81e9d18d9c 459: dsf::a(java.util.List, double) -> dfj
fifo write: @1699477141905835915 0x7f81e2ef511f 2544: biq::b(double, double, double, float, float) -> void
fifo write: @1699477141905889536 0x7f81e9d18100 902: eig::a(ha) -> eig
fifo write: @1699477141915516900 0x7f81e26dc814 214: java.time.temporal.ValueRange::isIntValue() -> boolean
fifo write: @1699477141916569004 0x7f81e2b10014 39: bka$$Lambda$7905.0x00007f8160c99dc0::test(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477141938513136 0x7f81e8bf8220 27: vtable stub
fifo write: @1699477141939093283 0x7f81e8bf8250 27: vtable stub
fifo write: @1699477141966037000 0x7f81e2b11394 192: cph::a(biq, eig) -> boolean
fifo write: @1699477141966086101 0x7f81e2b10c94 315: cpf::f(biq) -> boolean
fifo write: @1699477141966563907 0x7f81e2b94a46 4941: cpm::a(biq, eig) -> boolean
fifo write: @1699477141975270439 0x7f81ea331780 10982: dhq::H() -> void
fifo write: @1699477142039119390 0x7f81e9dffd05 15970: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477142041347049 0x7f81e1468517 3164: dzb::a(gw, cxq, czh, gw) -> gw
fifo write: @1699477142053596796 0x7f81ea33cc33 5112: ac::b(it.unimi.dsi.fastutil.objects.ObjectArrayList, asc) -> void
fifo write: @1699477142056101809 0x7f81ea7bbb9e 21245: ebd::a(bdp, eaz, java.util.Map, float, int, float) -> ebb
fifo write: @1699477142068402657 0x7f81e2714cfc 2169: eim::a(biq) -> void
fifo write: @1699477142118080716 0x7f81e2cde614 117: java.time.temporal.ChronoField::checkValidIntValue(long) -> int
fifo write: @1699477142118143437 0x7f81e2ce6ae0 1240: java.time.temporal.ValueRange::checkValidIntValue(long, java.time.temporal.TemporalField) -> int
fifo write: @1699477142118184778 0x7f81e2f4feb4 800: java.time.temporal.ValueRange::isValidIntValue(long) -> boolean
fifo write: @1699477142137992373 0x7f81ea111618 6791: bwq::l() -> void
fifo write: @1699477142153514672 0x7f81e9dee38f 7869: bwq::b_() -> void
fifo write: @1699477142166452059 0x7f81e21ff8c7 3390: cpy::d(ehi) -> boolean
fifo write: @1699477142216106858 0x7f81ea28b4d0 135: bqb::a(java.util.EnumSet) -> void
fifo write: @1699477142216552594 0x7f81ea28b059 146: java.util.RegularEnumSet::addAll(java.util.Collection) -> boolean
fifo write: @1699477142218615030 0x7f81ea28a88a 285: ri$c::a(rq) -> ri$f
fifo write: @1699477142230164959 0x7f81ea66ee92 3642: bjg::a(double, boolean, dfj, gw) -> void
fifo write: @1699477142265890998 0x7f81e2cdde94 233: bgw::<init>(bgv, long, long, float) -> void
fifo write: @1699477142265926149 0x7f81e2ce6614 183: dis::b(long) -> int
fifo write: @1699477142265960529 0x7f81e17463b4 703: cqc::an() -> float
fifo write: @1699477142266184862 0x7f81e2f4f714 375: asc::a(double, double) -> double
fifo write: @1699477142266240083 0x7f81e1efa874 1333: bgw::a(bgv, long, long, float) -> float
fifo write: @1699477142266282703 0x7f81e1efa214 185: cqk$$Lambda$7950.0x00007f8160ca5bc0::<init>(cqk) -> void
fifo write: @1699477142266403995 0x7f81e1745e14 489: cqk$$Lambda$7950.0x00007f8160ca5bc0::accept(Object) -> void
fifo write: @1699477142266661648 0x7f81e294fd97 1798: biq::cR() -> java.util.stream.Stream
fifo write: @1699477142266863401 0x7f81e2d08a97 3283: cqk::a_(biq) -> void
fifo write: @1699477142266903521 0x7f81ea110f4c 6: java.time.Clock$SystemClock::getZone() -> java.time.ZoneId
fifo write: @1699477142267006933 0x7f81e2b44034 383: java.time.LocalDate::get(java.time.temporal.TemporalField) -> int
fifo write: @1699477142267210355 0x7f81e25dd75f 3687: bji::a(cqk, bgw, bjk, bjz, qw) -> bjz
fifo write: @1699477142267869114 0x7f81e2b6d37c 5324: java.time.LocalDate::get0(java.time.temporal.TemporalField) -> int
fifo write: @1699477142269258712 0x7f81e2b43714 881: ha::a(float, float, float) -> ha
fifo write: @1699477142270046602 0x7f81e294f894 167: it.unimi.dsi.fastutil.ints.Int2ObjectFunction::apply(int) -> Object
fifo write: @1699477142270144023 0x7f81e2f550b7 1084: bvl$g::a(int) -> bvl$g
fifo write: @1699477142270211284 0x7f81e2f546d7 916: aqr$$Lambda$5147.0x00007f8160995d50::apply(int) -> Object
fifo write: @1699477142270270415 0x7f81e24e8694 814: aqr::a(java.util.function.IntFunction, Object, int) -> Object
fifo write: @1699477142282866267 0x7f81ea124cb9 16407: byn::l() -> void
fifo write: @1699477142318908570 0x7f81e24e8037 623: akq$a::g(biq) -> void
fifo write: @1699477142318950951 0x7f81e24e75b4 964: akq$a::a(Object) -> void
fifo write: @1699477142319278585 0x7f81e2f5ddf7 1622: bvl::gd() -> bvl$g
fifo write: @1699477142331157488 0x7f81e2f32f03 3830: java.util.HashMap$TreeNode::split(java.util.HashMap, java.util.HashMap$Node[], int, int) -> void
fifo write: @1699477142337251606 0x7f81e9b049d2 293: com.google.common.hash.HashCode$BytesHashCode::padToLong() -> long
fifo write: @1699477142338587224 0x7f81e9b04374 323: dkw$$Lambda$8056.0x00007f8160cc1028::apply(dkl) -> dkl
fifo write: @1699477142339850600 0x7f81e9b03cf4 323: dkw$$Lambda$8057.0x00007f8160cc1260::apply(dkl) -> dkl
fifo write: @1699477142341171737 0x7f81e9b03674 323: dkw$$Lambda$8059.0x00007f8160cc16d0::apply(dkl) -> dkl
fifo write: @1699477142358442439 0x7f81ea8003f7 6288: dij::a(cpc, int) -> boolean
fifo write: @1699477142375355117 0x7f81ea7158b9 2802: eaa::d(long) -> dhl
fifo write: @1699477142382747132 0x7f81e30cd647 70427: dig::a(akq, dhf) -> qw
fifo write: @1699477142406756910 0x7f81e2f5d734 527: aby$a::a(su) -> void
fifo write: @1699477142421190007 0x7f81e231495f 7644: djl$a::a(djn, djn) -> void
fifo write: @1699477142467951048 0x7f81e9ff974f 588: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::nextBuffer(Object[], long) -> Object[]
fifo write: @1699477142470107226 0x7f81e2ae4534 835: dfi$a::l() -> cza
fifo write: @1699477142472348315 0x7f81e1fa1f1f 6032: biq::bk() -> void
fifo write: @1699477142473604181 0x7f81e9ff8f50 480: apk::hashCode() -> int
fifo write: @1699477142515636571 0x7f81e2f5d214 367: bka$$Lambda$7873.0x00007f8160c96ee0::test(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477142515765403 0x7f81e2ae38dc 1411: bum::b(biu, cpw, bjk, gw, asc) -> boolean
fifo write: @1699477142518264455 0x7f81e9dfeca9 1354: dvm::a(cqp, dva, int, int, int, int, int, int, dfj, dfj, boolean) -> void
fifo write: @1699477142545391364 0x7f81e19ea03e 2523: dsg::a(asc, gw) -> dfj
fifo write: @1699477142566110661 0x7f81e2ae31b4 611: bji::a(cpy) -> boolean
fifo write: @1699477142574554159 0x7f81e2b43274 232: sm::a(vd, su) -> void
fifo write: @1699477142574775692 0x7f81e19e8e3e 1834: sm::a(io.netty.channel.ChannelHandlerContext, vd) -> void
fifo write: @1699477142578315068 0x7f81e9ff8bd0 103: ha$a::e() -> ha$c
fifo write: @1699477142587558237 0x7f81e274e7c7 3473: dxe$a::a(cqp, dva, int, int, int) -> void
fifo write: @1699477142620236808 0x7f81e2ae2c14 185: cpb$$Lambda$7387.0x00007f8160be2f78::<init>(cpb) -> void
fifo write: @1699477142621339932 0x7f81e1472797 6520: cpb::a(ehn, ehn, Object, java.util.function.BiFunction, java.util.function.Function) -> Object
fifo write: @1699477142623597821 0x7f81ea11db41 9146: cwc::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477142637357938 0x7f81e9b4fae8 4431: dos::a(cpw, asc, gw, dqj) -> void
fifo write: @1699477142649496394 0x7f81ea84a5fa 5224: cxt::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477142658679312 0x7f81e274e294 196: drm$a::<init>(gw, int, boolean) -> void
fifo write: @1699477142670325972 0x7f81ea849e6a 399: java.util.Set::spliterator() -> java.util.Spliterator
fifo write: @1699477142670389263 0x7f81e274de94 101: ehi::c(ehn) -> ehi
fifo write: @1699477142674491886 0x7f81e9ff83d0 243: dks::a(dhf, dks$a, long[]) -> void
fifo write: @1699477142723613097 0x7f81e9b4f3cc 2: java.util.EnumMap::size() -> int
fifo write: @1699477142725312869 0x7f81e9a3e594 3319: zh::a(so) -> void
fifo write: @1699477142766266556 0x7f81e274d814 39: bka$$Lambda$7918.0x00007f8160c9b960::test(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477142815255667 0x7f81e2c05194 39: bka$$Lambda$7909.0x00007f8160c9a640::test(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477142819491531 0x7f81e9b4f0cc 4: bpe::f() -> double
fifo write: @1699477142819526931 0x7f81e9dfe94c 4: bpe::e() -> double
fifo write: @1699477142819554732 0x7f81e9dfe64c 4: bpe::d() -> double
fifo write: @1699477142869189241 0x7f81e9dfe34c 4: bsp::a(double) -> void
fifo write: @1699477142874824643 0x7f81e9b364d6 1425: bum::aR() -> boolean
fifo write: @1699477142915776690 0x7f81e2c04ab7 506: bsb::<init>(bji, boolean) -> void
fifo write: @1699477142921536164 0x7f81e2b0513f 6819: coz::computeNext() -> Object
fifo write: @1699477142965889245 0x7f81e2d97097 467: bjp::a(cpw, bjk) -> boolean
fifo write: @1699477142990599213 0x7f81e9a27d66 5981: coz::computeNext() -> Object
fifo write: @1699477143020719650 0x7f81e9a3d273 932: cpy::A(gw) -> boolean
fifo write: @1699477143020927433 0x7f81e9a27653 9: dli::c(int) -> int
fifo write: @1699477143069216494 0x7f81e2a86e59 1120: eaa::a(long, byte) -> void
fifo write: @1699477143070715904 0x7f81e2f7d4ff 10359: eaa::a(ead) -> void
fifo write: @1699477143070767174 0x7f81e27fd9fe 3521: eaa::d(long, boolean) -> void
fifo write: @1699477143071101869 0x7f81e2334b14 167: it.unimi.dsi.fastutil.longs.LongIterator::next() -> Object
fifo write: @1699477143071176480 0x7f81e271f614 199: it.unimi.dsi.fastutil.longs.LongIterator::next() -> Long
fifo write: @1699477143071483334 0x7f81e298a98e 3278: eaa::d(long, boolean) -> void
fifo write: @1699477143072447176 0x7f81e1ad5794 403: eag::a(int) -> boolean
fifo write: @1699477143074656394 0x7f81e2bb34aa 7892: dkw::a(dky, java.util.List) -> crc$f
fifo write: @1699477143074919068 0x7f81e15074b7 1287: hw::a(long, ha) -> long
fifo write: @1699477143075152031 0x7f81e2f5a51f 4316: eag::i(long) -> void
fifo write: @1699477143077799264 0x7f81e1461bc1 1566: bjg::a(float, float, bho) -> boolean
fifo write: @1699477143078020587 0x7f81e2ad1494 1826: bjg::d(float, float) -> int
fifo write: @1699477143080804033 0x7f81e2726a03 1675: byw$b::a(cpy, gw) -> boolean
fifo write: @1699477143087523410 0x7f81ea0f5970 4489: arf$1::toString() -> String
fifo write: @1699477143087569171 0x7f81e9dfdd91 46: eaa$a::a(byte, int) -> byte
fifo write: @1699477143087609231 0x7f81ea88aa10 11: eaa$a::a(byte, boolean) -> byte
fifo write: @1699477143093328165 0x7f81ea7b7fb7 4814: eaa::a(long, byte) -> void
fifo write: @1699477143117065360 0x7f81ea2bc4d0 6682: he$c::toString() -> String
fifo write: @1699477143120573495 0x7f81e8bf8280 27: vtable stub
fifo write: @1699477143168584162 0x7f81e1b787da 1048: bus::l(gw) -> boolean
fifo write: @1699477143170658119 0x7f81e2f62054 1125: sm::c() -> void
fifo write: @1699477143170761601 0x7f81e14b84f9 1879: bjg::e(float, float) -> float
fifo write: @1699477143170804161 0x7f81e27d2c14 185: sm$$Lambda$7804.0x00007f8160c81408::<init>(sm) -> void
fifo write: @1699477143171210786 0x7f81e29f1f21 4752: all::a(akr) -> void
fifo write: @1699477143171350728 0x7f81e276c7dc 4613: sm::s() -> void
fifo write: @1699477143209629951 0x7f81ea0f52d0 91: io.netty.util.internal.DefaultPriorityQueue::peek() -> Object
fifo write: @1699477143222560347 0x7f81e968b495 363: arf::a(com.mojang.serialization.Codec, java.util.function.Function, java.util.function.Function) -> com.mojang.serialization.Codec
fifo write: @1699477143264206853 0x7f81e2b2a499 82: ebm$d::a(cpv) -> boolean
fifo write: @1699477143265142565 0x7f81e283a91c 5846: ebm::a() -> void
fifo write: @1699477143282954384 0x7f81ea13d29d 2030: eaa::d(long, boolean) -> void
fifo write: @1699477143283466391 0x7f81e2c6141f 3457: dvq::a(cqp, cqn, dhg, asc, dva, cpc) -> void
fifo write: @1699477143304836956 0x7f81e1a64099 399: dpi$$Lambda$8095.0x00007f8160cca000::accept(Object) -> void
fifo write: @1699477143304893657 0x7f81e1bec47c 277: dpi::a(dqw, cqp, drm$b, asc, int, int, int, drm$a) -> void
fifo write: @1699477143304929087 0x7f81e2b3fa94 240: drm::a(asc) -> int
fifo write: @1699477143304982158 0x7f81e14129bb 645: drm::a(cqb, drm$b, asc, dqw, int, drm$a, int, int) -> void
fifo write: @1699477143311418801 0x7f81e2e8ac5f 22351: dol::a(dny) -> boolean
fifo write: @1699477143311958828 0x7f81e99af157 35: com.google.common.collect.SingletonImmutableBiMap::containsKey(Object) -> boolean
fifo write: @1699477143324399518 0x7f81ea2bbe6f 296: java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock() -> boolean
fifo write: @1699477143332541943 0x7f81e25b7f97 2823: eab::a(gw, int) -> int
fifo write: @1699477143336393822 0x7f81e2e3e794 109: akx::a(int, int, int) -> he
fifo write: @1699477143336485163 0x7f81e2442bb6 756: akq::a(int, int, int) -> he
fifo write: @1699477143351162222 0x7f81e9e91296 4566: aeh::c() -> java.util.List
fifo write: @1699477143365226603 0x7f81ea80873e 4067: cvp::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477143366246366 0x7f81ea13cbf4 323: dkw$$Lambda$8054.0x00007f8160cc0bb8::apply(dkl) -> dkl
fifo write: @1699477143367010296 0x7f81e1c2b9d4 265: bgw::d() -> float
fifo write: @1699477143368036239 0x7f81ea941454 10785: dhq::H() -> void
fifo write: @1699477143368086790 0x7f81ea7b7874 323: dkw$$Lambda$8055.0x00007f8160cc0df0::apply(dkl) -> dkl
fifo write: @1699477143381853147 0x7f81e2031114 240: io.netty.buffer.ByteBufOutputStream::writeShort(int) -> void
fifo write: @1699477143381897397 0x7f81e1d72f94 358: so::writeShort(int) -> io.netty.buffer.ByteBuf
fifo write: @1699477143398211937 0x7f81e2063194 459: dpk$$Lambda$8129.0x00007f8160cd2490::test(Object) -> boolean
fifo write: @1699477143398259098 0x7f81e148fc94 31: dpk::d(cqp, gw) -> boolean
fifo write: @1699477143398942067 0x7f81e2b40a66 6264: dpk::b(cqp, gw) -> boolean
fifo write: @1699477143416147498 0x7f81e1bd89bf 1784: brt::<init>(bjp, Class[]) -> void
fifo write: @1699477143421068762 0x7f81ea13c8ac 33: bvl::a(bvl) -> boolean
fifo write: @1699477143518625307 0x7f81e9fbeecc 1701: cxi::a(dfj, cpv, gw, csv, gw, boolean) -> void
fifo write: @1699477143518988751 0x7f81ea2bbb2c 33: bvl::b(bvl) -> bpc
fifo write: @1699477143568096703 0x7f81e2ee9df9 1111: ehn::equals(Object) -> boolean
fifo write: @1699477143568297206 0x7f81e3019e97 1875: cpb::a(cpe) -> ehj
fifo write: @1699477143607860745 0x7f81e9386586 12378: ebg::b(cpb, gw) -> eax
fifo write: @1699477143724265682 0x7f81e9b35f68 176: bjn::a(akq, boolean) -> void
fifo write: @1699477143771978406 0x7f81e99aed07 81: akr::a(dfj) -> void
fifo write: @1699477143781365247 0x7f81e8bed800 560: I2C/C2I adapters(0xbaabbbbbbbb)
fifo write: @1699477143781386687 0x7f81e8c2ad80 504: I2C/C2I adapters(0xbbbababa)
fifo write: @1699477143781407437 0x7f81e8c2aa00 664: I2C/C2I adapters(0xbaaaaabbabbbbbb)
fifo write: @1699477143785004874 0x7f81e935229c 1506: dia::<init>(cpc, did, dhr[], eix, eix, cpx, hq, dlv) -> void
fifo write: @1699477143788132964 0x7f81e2260974 872: dzb$a::a(csv, dzb$c) -> boolean
fifo write: @1699477143788201845 0x7f81e2f70d34 1223: dzb$a$$Lambda$8194.0x00007f8160ceede0::test(Object) -> boolean
fifo write: @1699477143788603710 0x7f81ea7b74cc 6: dyx::e() -> gw
fifo write: @1699477143788651871 0x7f81e9b359cc 6: dyx::c() -> cxq
fifo write: @1699477143788671051 0x7f81e8c2a680 688: I2C/C2I adapters(0xbaaaaabbabbbbbbb)
fifo write: @1699477143788804693 0x7f81e8c2a300 688: I2C/C2I adapters(0xbbaaaaabbabbbbbb)
fifo write: @1699477143788896684 0x7f81e8c29f80 664: I2C/C2I adapters(0xbbaaaaabbabbbbb)
fifo write: @1699477143789285249 0x7f81e8c29c00 688: I2C/C2I adapters(0xbbbaaaaabbabbbbb)
fifo write: @1699477143789861857 0x7f81e9634b50 179: dzb$a$$Lambda$8194.0x00007f8160ceede0::test(Object) -> boolean
fifo write: @1699477143811629347 0x7f81ea93f317 3110: jdk.internal.org.objectweb.asm.Frame::accept(jdk.internal.org.objectweb.asm.MethodWriter) -> void
fifo write: @1699477143827083395 0x7f81e2f8db3c 2940: eab::a(cqe, hw, dhl) -> void
fifo write: @1699477143832870779 0x7f81ea0e1629 2739: hq::r() -> com.mojang.serialization.Codec
fifo write: @1699477143837909854 0x7f81ea806fd3 1620: bri::a() -> boolean
fifo write: @1699477143842027948 0x7f81ea2eac30 1230: eaa::c(long, boolean) -> void
fifo write: @1699477143842225590 0x7f81ea93ef59 62: dlj$h::apply(Object) -> Object
fifo write: @1699477143846068580 0x7f81ea0e1212 69: Math::addExact(long, long) -> long
fifo write: @1699477143866897967 0x7f81e2bde43c 1635: bql::<init>(bjp, double, boolean) -> void
fifo write: @1699477143968089779 0x7f81ea806a53 128: biq::f(biq) -> double
fifo write: @1699477143968807769 0x7f81e295fc19 5246: bji::dx() -> void
fifo write: @1699477143981578713 0x7f81e1f834bd 1290: cpc::a(cpc, cpc) -> java.util.stream.Stream
fifo write: @1699477144000946252 0x7f81ea2410f5 1474: dxe$a::a(cqp, dva, asc, float, int, int, int) -> void
fifo write: @1699477144008117465 0x7f81e2b35937 2464: dov::a(dny) -> boolean
fifo write: @1699477144018815162 0x7f81e2c03b17 1940: bvl$a::a() -> boolean
fifo write: @1699477144020863238 0x7f81ea23fe35 948: bpt::a() -> boolean
fifo write: @1699477144022513130 0x7f81e24a2f8f 628: cxu$e$2::a(gw, ha, ha) -> cxu$c
fifo write: @1699477144023830887 0x7f81e9634254 471: drh::a(asc, int, int, int, int, boolean) -> boolean
fifo write: @1699477144066535676 0x7f81e3019994 185: bpi$$Lambda$7258.0x00007f8160bb7018::<init>(java.util.function.Predicate) -> void
fifo write: @1699477144066808710 0x7f81e2c02a97 1828: bpi::<init>(bjp, Class, float, double, double) -> void
fifo write: @1699477144067249956 0x7f81e2d4ec1a 5872: bpi::<init>(bjp, Class, java.util.function.Predicate, float, double, double, java.util.function.Predicate) -> void
fifo write: @1699477144069962630 0x7f81ea2e994e 1733: dkm$z::a(dkl$f) -> dkl
fifo write: @1699477144087486905 0x7f81e9633cd9 146: dlj$b::apply(Object) -> Object
fifo write: @1699477144090047928 0x7f81e93855a3 822: dlj$y::apply(Object) -> Object
fifo write: @1699477144095691721 0x7f81e9384310 1147: akt$$Lambda$7860.0x00007f8160c90f58::run() -> void
fifo write: @1699477144143786460 0x7f81ea02cad3 7707: dhy$$Lambda$7043.0x00007f8160b82498::apply(Object) -> Object
fifo write: @1699477144178935472 0x7f81e9a2471f 3786: cqg::a(int, Iterable, cqg$b, cqf) -> cqg$d
fifo write: @1699477144215569273 0x7f81e2b8af14 367: bka$$Lambda$7907.0x00007f8160c9a200::test(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477144215609974 0x7f81e286d374 361: dlr::a(int, int, long, long) -> asc
fifo write: @1699477144216180391 0x7f81e2c72b66 5049: bzr::c(biu, cpw, bjk, gw, asc) -> boolean
fifo write: @1699477144232969918 0x7f81ea8a46b7 15401: bum::X() -> void
fifo write: @1699477144233723217 0x7f81e9383bff 268: alm::a(vd, sv) -> void
fifo write: @1699477144317271012 0x7f81e2155b17 2183: bus::gz() -> boolean
fifo write: @1699477144366625947 0x7f81e2c72514 115: ehj::c() -> ehl$a
fifo write: @1699477144367642450 0x7f81e28a20b7 829: cpe::<init>(ehn, ehn, cpe$a, cpe$b, biq) -> void
fifo write: @1699477144368969177 0x7f81e2f7bf37 1081: byw::bZ() -> boolean
fifo write: @1699477144369129669 0x7f81e2d4e594 265: bjg::dQ() -> boolean
fifo write: @1699477144369269901 0x7f81e261cd37 3881: byw::bd() -> void
fifo write: @1699477144369928859 0x7f81e2b75a3f 5595: byw::h(ehn) -> void
fifo write: @1699477144370945943 0x7f81ea02b719 1687: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::resize(long, Object[], long, Object, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> void
fifo write: @1699477144371128935 0x7f81e1837bdf 11204: byw$d::a() -> void
fifo write: @1699477144537406864 0x7f81ea119114 5455: zz::a(so) -> void
fifo write: @1699477144542283397 0x7f81e9a23414 1233: bfr::i() -> void
fifo write: @1699477144545600499 0x7f81e9383459 174: cqn::a(akx) -> cqn
fifo write: @1699477144588517972 0x7f81ea8a123a 4110: dhy::b(hj, com.mojang.serialization.Codec, dhy$d, Object) -> com.mojang.serialization.Codec
fifo write: @1699477144589111659 0x7f81ea11896e 322: java.util.stream.LongPipeline$1::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477144616748725 0x7f81e270d914 139: csw$$Lambda$805.0x00007f816038df08::test(dfj, cpb, gw) -> boolean
fifo write: @1699477144642873321 0x7f81ea89c5d5 8807: dmp::a(dms, dmo, dhf, java.util.function.Function, long, dke, double, double, double, float, float, float, int, int, double, dhe) -> void
fifo write: @1699477144643764962 0x7f81ea1182d5 343: java.util.function.Predicate$$Lambda$1500.0x00007f81601e3ca8::test(Object) -> boolean
fifo write: @1699477144718793468 0x7f81e2b11837 464: bvl$d::a(double, double, double, double) -> void
fifo write: @1699477144720009904 0x7f81e9a23050 67: aqs::size() -> int
fifo write: @1699477144720377518 0x7f81e9a22d0b 46: it.unimi.dsi.fastutil.objects.ObjectArraySet::iterator() -> java.util.Iterator
fifo write: @1699477144734203376 0x7f81e2ecb87f 21179: dol::a(dny) -> boolean
fifo write: @1699477144749529843 0x7f81e2f04794 185: bjg$$Lambda$8113.0x00007f8160cd4fa0::<init>(qw) -> void
fifo write: @1699477144749703185 0x7f81e16af4b4 718: bkg::a(com.mojang.serialization.DynamicOps) -> com.mojang.serialization.DataResult
fifo write: @1699477144749801557 0x7f81e21549bf 2200: bil::b(qw) -> void
fifo write: @1699477144749848217 0x7f81e270f574 108: bkg$1$$Lambda$7223.0x00007f8160baecb8::get() -> Object
fifo write: @1699477144749970129 0x7f81e2f31147 3337: bur::b(qw) -> void
fifo write: @1699477144750024689 0x7f81e2f2f96a 3339: bkj::c() -> rc
fifo write: @1699477144750121201 0x7f81e2154414 230: bkg$1$$Lambda$8115.0x00007f8160cd5628::<init>(com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> void
fifo write: @1699477144750180651 0x7f81e2691054 1041: bkg::j() -> java.util.stream.Stream
fifo write: @1699477144750225212 0x7f81e1ea1f14 185: bjg$$Lambda$8116.0x00007f8160cd5860::<init>(org.slf4j.Logger) -> void
fifo write: @1699477144750286793 0x7f81e2701894 185: bjg$$Lambda$8117.0x00007f8160cd5a98::<init>(qw) -> void
fifo write: @1699477144750606157 0x7f81e261b6e7 2837: bkg$1::a(bkg, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477144750699798 0x7f81e2590a07 3199: bkg$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477144758896114 0x7f81ea897755 8811: dmp::a(dms, dmo, dhf, java.util.function.Function, long, dke, double, double, double, float, float, float, int, int, double, dhe) -> void
fifo write: @1699477144765341516 0x7f81ea89724c 2: brb::c(int) -> void
fifo write: @1699477144767650006 0x7f81e27a9116 37: bsn::a(ehn, ehn) -> boolean
fifo write: @1699477144768158073 0x7f81e258f6fb 2280: bsp::a(bji, ehn, ehn, boolean) -> boolean
fifo write: @1699477144776557341 0x7f81ea9ae397 5148: dnw::a(cqp, gw) -> void
fifo write: @1699477144778014570 0x7f81e9a224d3 404: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477144781756268 0x7f81e9a221d0 43: dhp::f() -> cpc
fifo write: @1699477144819042417 0x7f81ea9b1e44 1387: dol::a(dny) -> boolean
fifo write: @1699477144825057545 0x7f81e1afd794 487: bkk::b() -> String
fifo write: @1699477144878770636 0x7f81e211ebb4 647: Exception::<init>(String) -> void
fifo write: @1699477144890361265 0x7f81e8bf82b0 27: vtable stub
fifo write: @1699477144898400149 0x7f81e2ef21e7 6643: com.mojang.datafixers.functions.Fold::all(com.mojang.datafixers.functions.PointFreeRule) -> java.util.Optional
fifo write: @1699477144898646222 0x7f81e2bddb34 635: java.lang.invoke.MethodHandleImpl$CountingWrapper::<init>(java.lang.invoke.MethodHandle, java.lang.invoke.LambdaForm, java.util.function.Function, java.util.function.Function, int) -> void
fifo write: @1699477144904496917 0x7f81e9a21ecc 2: com.google.common.collect.RegularImmutableSet::hashCode() -> int
fifo write: @1699477144907350324 0x7f81ea896b68 45: com.google.common.collect.ImmutableSet::builder() -> com.google.common.collect.ImmutableSet$Builder
fifo write: @1699477144910947690 0x7f81ea9b34f6 2697: ebm::a() -> void
fifo write: @1699477144911381815 0x7f81ea9b55f4 1292: com.mojang.datafixers.TypedOptic::proj1(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477144911704879 0x7f81ea9b63f4 1296: com.mojang.datafixers.TypedOptic::inj2(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477144913046497 0x7f81ea9b7206 1552: com.mojang.datafixers.types.templates.Product$ProductType::fixLeft(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144915305206 0x7f81ea9b8386 1552: com.mojang.datafixers.types.templates.Sum$SumType::fixLeft(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144915896994 0x7f81ea9b9506 1536: com.mojang.datafixers.types.templates.Product$ProductType::fixRight(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144917165130 0x7f81ea9ba606 1536: com.mojang.datafixers.types.templates.Sum$SumType::fixRight(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144918483167 0x7f81ea9bb732 2720: com.google.common.collect.ImmutableSet$Builder::build() -> com.google.common.collect.ImmutableSet
fifo write: @1699477144921510476 0x7f81ea9bd430 1350: com.mojang.datafixers.optics.Prism$$Lambda$5800.0x00007f8160abfb30::apply(Object) -> Object
fifo write: @1699477144921868490 0x7f81ea9be4cc 6: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl::getRawType() -> Class
fifo write: @1699477144921928611 0x7f81e2c01db9 432: java.lang.reflect.Method::hashCode() -> int
fifo write: @1699477144922319426 0x7f81e2fb6d61 6640: com.google.common.reflect.TypeVisitor::visit(java.lang.reflect.Type[]) -> void
fifo write: @1699477144922758292 0x7f81ea9be901 4611: com.mojang.datafixers.types.templates.Product$ProductType::mergeViews(com.mojang.datafixers.RewriteResult, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144924222110 0x7f81ea9c1b81 4611: com.mojang.datafixers.types.templates.Sum$SumType::mergeViews(com.mojang.datafixers.RewriteResult, com.mojang.datafixers.RewriteResult) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144924476424 0x7f81ea9c4dd3 6443: com.mojang.datafixers.functions.Functions::comp(com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.functions.PointFree) -> com.mojang.datafixers.functions.PointFree
fifo write: @1699477144925104172 0x7f81ea9c8604 7907: com.google.common.cache.LocalCache$Segment::lockedGetOrLoad(Object, int, com.google.common.cache.CacheLoader) -> Object
fifo write: @1699477144925804981 0x7f81e2fb5c23 1662: cvr::a(cpy, gw) -> int
fifo write: @1699477144925892572 0x7f81ea9ccf64 128: com.google.common.collect.ImmutableSet$Builder::addAll(Iterable) -> com.google.common.collect.ImmutableSet$Builder
fifo write: @1699477144926242146 0x7f81ea9cd457 96: com.mojang.datafixers.TypedOptic::sType() -> com.mojang.datafixers.types.Type
fifo write: @1699477144927299530 0x7f81ea9cd889 382: com.mojang.datafixers.TypedOptic::<init>(java.util.Set, java.util.List) -> void
fifo write: @1699477144929579029 0x7f81ea9cde90 2133: com.google.common.reflect.TypeToken::someRawTypeIsSubclassOf(Class) -> boolean
fifo write: @1699477144930004335 0x7f81e2f55d14 198: bzi::<init>(biu, cpv) -> void
fifo write: @1699477144930153827 0x7f81ea9cf7d0 211: com.mojang.datafixers.types.families.ListAlgebra::apply(int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144931018458 0x7f81ea9cfd33 979: com.mojang.datafixers.optics.Prism::lambda$eval$1(com.mojang.datafixers.optics.profunctors.Cocartesian, com.mojang.datafixers.kinds.App2) -> com.mojang.datafixers.kinds.App2
fifo write: @1699477144931500504 0x7f81ea9d0beb 1802: com.google.common.reflect.TypeToken::getRawTypes() -> com.google.common.collect.ImmutableSet
fifo write: @1699477144931691497 0x7f81ea9d222a 3179: Module::implIsExportedOrOpen(String, Module, boolean) -> boolean
fifo write: @1699477144931843689 0x7f81ea9d4894 2776: com.google.common.reflect.TypeToken::isSubtypeOf(java.lang.reflect.Type) -> boolean
fifo write: @1699477144932343615 0x7f81ea9d660c 77: com.mojang.datafixers.types.templates.Product::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477144932773311 0x7f81ea9d6ae3 871: Module::isStaticallyExportedOrOpen(String, Module, boolean) -> boolean
fifo write: @1699477144933312818 0x7f81ea9d7a10 2824: com.mojang.datafixers.TypedOptic$$Lambda$5698.0x00007f8160aad800::test(Object) -> boolean
fifo write: @1699477144933379349 0x7f81ea9d988c 77: com.mojang.datafixers.types.templates.Sum::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477144933595481 0x7f81ea9d9e10 5835: com.mojang.datafixers.TypedOptic::compose(com.mojang.datafixers.TypedOptic) -> com.mojang.datafixers.TypedOptic
fifo write: @1699477144933662702 0x7f81ea9dd7d7 35: com.mojang.datafixers.types.templates.Tag::hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction) -> java.util.function.IntFunction
fifo write: @1699477144934083158 0x7f81ea9ddad1 126: Class::getMethod0(String, Class[]) -> java.lang.reflect.Method
fifo write: @1699477144934412182 0x7f81e2e88b5f 4183: byy::b_() -> void
fifo write: @1699477144935141341 0x7f81e2596c5f 5473: byy::X() -> void
fifo write: @1699477144937504782 0x7f81ea9ddfa4 1289: Class::getMethod(String, Class[]) -> java.lang.reflect.Method
fifo write: @1699477144937702794 0x7f81ea9def50 67: PublicMethods$MethodList::getMostSpecific() -> java.lang.reflect.Method
fifo write: @1699477144938155210 0x7f81ea9df2d0 144: java.util.stream.Sink$ChainedLong::end() -> void
fifo write: @1699477144940795604 0x7f81ea9df814 3522: com.mojang.datafixers.types.templates.Sum$$Lambda$5991.0x00007f8160adcc18::apply(int) -> Object
fifo write: @1699477144942716369 0x7f81ea9e1c81 2181: jdk.internal.reflect.Reflection::verifyModuleAccess(Module, Class) -> boolean
fifo write: @1699477144944239978 0x7f81ea9e35cc 9021: java.lang.reflect.AccessibleObject::checkAccess(Class, Class, Class, int) -> void
fifo write: @1699477144944474691 0x7f81ea9e923c 3189: com.mojang.datafixers.types.templates.Sum::lambda$hmap$4(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144944823305 0x7f81ea9eb5f7 4329: com.mojang.datafixers.types.templates.Product$$Lambda$6012.0x00007f8160adfa38::apply(int) -> Object
fifo write: @1699477144944948707 0x7f81ea9ee5a3 1336: io.netty.buffer.ByteBufOutputStream::write(byte[], int, int) -> void
fifo write: @1699477144947138485 0x7f81ea9efb8f 4473: com.mojang.datafixers.types.templates.Product::lambda$hmap$4(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int) -> com.mojang.datafixers.RewriteResult
fifo write: @1699477144948157998 0x7f81ea9f2b9c 2542: byw$b::a(cpy, gw) -> boolean
fifo write: @1699477144948389521 0x7f81ea9f56a2 3125: jdk.internal.reflect.Reflection::verifyMemberAccess(Class, Class, Class, int) -> boolean
fifo write: @1699477144949224742 0x7f81ea9f772b 8226: java.lang.reflect.AccessibleObject::verifyAccess(Class, Class, Class, int) -> boolean
fifo write: @1699477144972113297 0x7f81ea9fc862 305: ctd::a(dfj, cpb, gw, ebc) -> boolean
fifo write: @1699477144973161110 0x7f81e258f194 185: bkg$$Lambda$7955.0x00007f8160ca6fa0::<init>(bkg) -> void
fifo write: @1699477144973234061 0x7f81e2977034 1041: bjg::aa() -> void
fifo write: @1699477144973523975 0x7f81e2b34c7c 1554: bkg::a() -> void
fifo write: @1699477144973622566 0x7f81e2595c97 1838: bjg::a(biq$c) -> void
fifo write: @1699477145026443266 0x7f81e2383357 1380: bqo::a() -> boolean
fifo write: @1699477145027415298 0x7f81e259513e 875: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetSpliterator::forEachRemaining(java.util.function.LongConsumer) -> void
fifo write: @1699477145044495108 0x7f81ea9fd364 4895: cjf::<init>(cpu, int) -> void
fifo write: @1699477145066120636 0x7f81e2b144b4 442: cqg$d::a(bjj, cpc) -> boolean
fifo write: @1699477145066175227 0x7f81e298a494 96: cqg$$Lambda$7852.0x00007f8160c8b288::test(biu, gw, dhf) -> boolean
fifo write: @1699477145066380420 0x7f81e23372d4 1463: cqg::a(akq, bji, double) -> boolean
fifo write: @1699477145066715644 0x7f81e2e8763c 2727: cqg$d::a(biu, gw, dhf) -> boolean
fifo write: @1699477145066933617 0x7f81e2a5c2df 3260: cqg::a(akq, biu) -> bji
fifo write: @1699477145067945299 0x7f81e2b14094 39: bka$$Lambda$7867.0x00007f8160c96220::test(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477145068508177 0x7f81e2a59edc 5048: byw::a(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477145078924381 0x7f81eaa00b7d 830: io.netty.channel.ChannelOutboundBuffer::forEachFlushedMessage(io.netty.channel.ChannelOutboundBuffer$MessageProcessor) -> void
fifo write: @1699477145108244728 0x7f81eaa0244e 29309: dig::a(akq, buf, cpc, qw) -> dia
fifo write: @1699477145120836190 0x7f81e2ef1917 615: ebg::a(gw) -> boolean
fifo write: @1699477145129563112 0x7f81eaa19534 3103: eap::b(cpy, gw) -> boolean
fifo write: @1699477145168621455 0x7f81eaa1c1f8 724: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::getInt(Object) -> int
fifo write: @1699477145269658195 0x7f81eaa1cc14 904: bqy::a() -> boolean
fifo write: @1699477145270787159 0x7f81e2131527 5748: cpv::c_(gw) -> dcv
fifo write: @1699477145270908981 0x7f81eaa1dad4 1747: cqg$d::a(bjj, cpc) -> boolean
fifo write: @1699477145279993188 0x7f81eaa1f516 2643: bji::dx() -> void
fifo write: @1699477145377569203 0x7f81e25f7d94 313: java.util.zip.GZIPInputStream::ensureOpen() -> void
fifo write: @1699477145377705085 0x7f81e2b74c8a 1053: java.util.zip.GZIPInputStream::read(byte[], int, int) -> int
fifo write: @1699477145393874143 0x7f81eaa219b2 3275: dkm$g::a(dkl$f) -> dkl
fifo write: @1699477145420506136 0x7f81eaa23d7b 292: eab::a(cqe, hw, dhl) -> void
fifo write: @1699477145423205150 0x7f81eaa24477 788: it.unimi.dsi.fastutil.longs.LongIterator::next() -> Object
fifo write: @1699477145434812299 0x7f81eaa2533d 5808: cqg::a(int, Iterable, cqg$b, cqf) -> cqg$d
fifo write: @1699477145448497915 0x7f81eaa296b7 5279: dhk::a(java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List) -> java.util.concurrent.CompletableFuture
fifo write: @1699477145467634142 0x7f81e2e86db7 829: dxe$b::a(cqp, dva, int, int, int, int) -> void
fifo write: @1699477145486736297 0x7f81eaa2cbb7 2380: dol::a(dny) -> boolean
fifo write: @1699477145523877085 0x7f81e258ed14 243: dhq$d::b() -> boolean
fifo write: @1699477145532998613 0x7f81eaa2f05a 3379: dzx::a(long) -> dhl
fifo write: @1699477145557894813 0x7f81eaa316d1 22786: dhg::a(cqp, dhf, cqn) -> void
fifo write: @1699477145582619901 0x7f81eaa3fdcb 5281: dol::a(dny) -> boolean
fifo write: @1699477145585496678 0x7f81eaa43df3 4033: dom$a::a(cqp, asc, dom$b) -> void
fifo write: @1699477145588792470 0x7f81e25f7694 440: dpi$1::<init>(dpi, java.util.Set, cqp) -> void
fifo write: @1699477145588843961 0x7f81e2e86894 230: dpi$$Lambda$8090.0x00007f8160ccee58::<init>(java.util.Set, cqp) -> void
fifo write: @1699477145588934782 0x7f81e2b81494 230: dpi$$Lambda$8089.0x00007f8160ccec20::<init>(java.util.Set, cqp) -> void
fifo write: @1699477145588972052 0x7f81e2b80c14 473: dte::a(asc) -> int
fifo write: @1699477145589017143 0x7f81e2130f14 230: dpi$$Lambda$8091.0x00007f8160ccf2d0::<init>(java.util.Set, cqp) -> void
fifo write: @1699477145589052023 0x7f81e2ef1494 240: drm::a(asc, int) -> int
fifo write: @1699477145589094064 0x7f81e2130a14 230: dpi$$Lambda$8092.0x00007f8160ccf508::<init>(gw, asc) -> void
fifo write: @1699477145590443151 0x7f81e248de87 10904: dpi::a(cqp, asc, gw, java.util.function.BiConsumer, java.util.function.BiConsumer, drm$b, dqw) -> boolean
fifo write: @1699477145590635244 0x7f81e304157f 18549: dpi::a(dny) -> boolean
fifo write: @1699477145615704707 0x7f81e2b27a14 93: cqg$$Lambda$7853.0x00007f8160c8b6b0::run(bji, dhf) -> void
fifo write: @1699477145615814868 0x7f81e248d537 443: cqj::a(gw, double) -> void
fifo write: @1699477145616029971 0x7f81e2e9b1c7 6100: cpv::d_(gw) -> bgw
fifo write: @1699477145616643609 0x7f81e2e9941c 4034: cqg$d::a(bji, dhf) -> void
fifo write: @1699477145660393151 0x7f81eaa46e7a 489: io.netty.buffer.AbstractByteBuf::writeDouble(double) -> io.netty.buffer.ByteBuf
fifo write: @1699477145685965210 0x7f81eaa478d0 103: java.util.stream.ReferencePipeline$4$1::accept(Object) -> void
fifo write: @1699477145727811239 0x7f81e2ec65e0 13066: bso::a(gw, int) -> ebb
fifo write: @1699477145777817702 0x7f81eaa47cf4 667: cpv::m(gw) -> boolean
fifo write: @1699477145916445045 0x7f81eaa488dc 167: io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue::newBufferPoll(Object[], long) -> Object
fifo write: @1699477145969905933 0x7f81e2ec5ef4 104: bpe::b() -> boolean
fifo write: @1699477145970253898 0x7f81e212f0bf 3871: bvl::i(double) -> void
fifo write: @1699477145975598187 0x7f81eaa48e55 2896: cpv::a(dks$a, int, int) -> int
fifo write: @1699477145976554259 0x7f81eaa4b553 132: java.nio.DirectIntBufferS::put(int, int) -> java.nio.IntBuffer
fifo write: @1699477145990274305 0x7f81eaa4bac2 6633: java.io.BufferedOutputStream::flush() -> void
fifo write: @1699477146043506140 0x7f81eaa4f2d4 9347: ebg::a(cpb, int, int, int, java.util.EnumSet, eax, gw) -> eax
fifo write: @1699477146156302952 0x7f81eaa54cbb 21077: ebd::a(bdp, eaz, java.util.Map, float, int, float) -> ebb
fifo write: @1699477146165562750 0x7f81eaa60659 78: Byte::equals(Object) -> boolean
fifo write: @1699477146166645594 0x7f81e2ec561e 1012: bji::a(biu, cpw, bjk, gw, asc) -> boolean
fifo write: @1699477146171227623 0x7f81e2ec4db4 282: bvl::b_() -> void
fifo write: @1699477146171344635 0x7f81e2e98754 1322: bvl$d::a() -> void
fifo write: @1699477146171389446 0x7f81e2e98114 334: bvl$c::b() -> void
fifo write: @1699477146172899535 0x7f81e2dff57f 9103: bvl::X() -> void
fifo write: @1699477146174080760 0x7f81e2e97894 529: akr::c(gw) -> void
fifo write: @1699477146174206272 0x7f81e2dfe9b4 1019: cbu::c(dfj) -> boolean
fifo write: @1699477146177586665 0x7f81eaa60a90 1672: io.netty.util.concurrent.DefaultPromise::notifyListenersNow() -> void
fifo write: @1699477146179779803 0x7f81eaa61fbd 2150: io.netty.util.concurrent.DefaultPromise::notifyListeners() -> void
fifo write: @1699477146193526010 0x7f81e2dfe5b4 39: it.unimi.dsi.fastutil.longs.LongOpenHashSet::<init>() -> void
fifo write: @1699477146198846568 0x7f81eaa63950 635: dhk$$Lambda$7965.0x00007f8160ca2f58::apply(Object) -> Object
fifo write: @1699477146232829665 0x7f81e2dfe094 223: bsp::a(double, double, double, double) -> boolean
fifo write: @1699477146232913437 0x7f81eaa642dc 18: bqb::b() -> boolean
fifo write: @1699477146270564521 0x7f81e303ec7f 5444: cpv::P() -> void
fifo write: @1699477146279829921 0x7f81eaa647ea 12716: sun.nio.ch.IOUtil::write(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477146286860311 0x7f81eaa6cbba 10593: akt::h(cpc) -> void
fifo write: @1699477146289132610 0x7f81eaa74c58 5315: sun.nio.ch.FileChannelImpl::write(java.nio.ByteBuffer, long) -> int
fifo write: @1699477146311169674 0x7f81e2dfdc14 243: akk::e(akr) -> boolean
fifo write: @1699477146311351586 0x7f81e2dfccf4 1950: aka::c(akr) -> boolean
fifo write: @1699477146321382045 0x7f81eaa77ad0 35: dhq$a::b() -> boolean
fifo write: @1699477146335500997 0x7f81eaa78153 22224: eaa::a(ead) -> void
fifo write: @1699477146369521884 0x7f81e303d597 3255: bqy::c() -> void
fifo write: @1699477146419208614 0x7f81e2dfc814 185: btz$$Lambda$7357.0x00007f8160bd8680::<init>(bjp) -> void
fifo write: @1699477146419300165 0x7f81e303d014 200: btz$$Lambda$7358.0x00007f8160bd88a8::<init>(bjp, int, int, boolean) -> void
fifo write: @1699477146419494237 0x7f81e303c30d 1638: btz::a(bjp, int, int) -> ehn
fifo write: @1699477146419676920 0x7f81e303acbc 3069: bro::h() -> ehn
fifo write: @1699477146419853192 0x7f81e303a257 886: ebg::a(double, double, double) -> ebf
fifo write: @1699477146420747173 0x7f81e303701f 7695: bso::R_() -> void
fifo write: @1699477146424263839 0x7f81e2dc9272 39094: ebg::a() -> eaz
fifo write: @1699477146431336729 0x7f81eaa85dfa 2614: eap::b(eam) -> dfj
fifo write: @1699477146436033040 0x7f81eaa87df7 4329: bjg::dV() -> void
fifo write: @1699477146474978061 0x7f81eaa8b162 47: java.util.OptionalInt::of(int) -> java.util.OptionalInt
fifo write: @1699477146475656260 0x7f81e2dc63a0 5902: java.util.concurrent.CompletableFuture::uniComposeStage(java.util.concurrent.Executor, java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477146487295289 0x7f81eaa8b7be 5270: dol::a(dny) -> boolean
fifo write: @1699477146492775710 0x7f81eaa8f4d9 2605: eiu::a(long) -> void
fifo write: @1699477146566927794 0x7f81e30362fe 1161: yo$c::a(so) -> void
fifo write: @1699477146580612190 0x7f81eaa91d77 30392: java.io.FilterOutputStream::close() -> void
fifo write: @1699477146625423746 0x7f81eaaa4e16 7220: dol::a(dny) -> boolean
fifo write: @1699477146659450604 0x7f81eaaaa673 15962: re::a(java.io.DataOutput) -> void
fifo write: @1699477146716222774 0x7f81e2237c94 23: java.time.Clock$SystemClock::instant() -> java.time.Instant
fifo write: @1699477146771377724 0x7f81eaab2658 1451: bus::d(int, boolean) -> void
fifo write: @1699477146821740542 0x7f81e3035d94 255: java.util.AbstractMap::isEmpty() -> boolean
fifo write: @1699477146863569410 0x7f81e30356b4 696: djl$$Lambda$8104.0x00007f8160ccbb38::test(Object) -> boolean
fifo write: @1699477146863601211 0x7f81e3035174 323: djl::n(dja) -> boolean
fifo write: @1699477146863640171 0x7f81e2dc58d4 963: djl$$Lambda$8105.0x00007f8160ccbd88::accept(Object) -> void
fifo write: @1699477146869707039 0x7f81e2dc5294 417: java.util.concurrent.CompletableFuture$CoCompletion::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477146869897031 0x7f81e8bf82e0 27: vtable stub
fifo write: @1699477146870734592 0x7f81e2dc4c17 533: ebo::a(cpw, ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477146873709020 0x7f81e2dc3d74 1782: java.util.IdentityHashMap::remove(Object) -> Object
fifo write: @1699477146874898636 0x7f81e2dc3359 960: eiw::a(cpc) -> void
fifo write: @1699477146875586644 0x7f81e2dc2d14 295: java.util.regex.Pattern$LastNode::match(java.util.regex.Matcher, int, CharSequence) -> boolean
fifo write: @1699477146876144622 0x7f81eaab3d4c 6: dzc$b::a() -> java.util.function.Function
fifo write: @1699477146876321214 0x7f81e2dc2459 872: java.util.zip.InflaterInputStream::read() -> int
fifo write: @1699477146882403922 0x7f81e2dc1e14 508: djl$$Lambda$8111.0x00007f8160cd4b18::test(Object) -> boolean
fifo write: @1699477146883050481 0x7f81e2dc0b4b 2623: dii::a(rc, biq) -> void
fifo write: @1699477146883655649 0x7f81e2dbed37 4485: biq::dJ() -> boolean
fifo write: @1699477146883853441 0x7f81e2dbd2b7 3798: djl$$Lambda$8109.0x00007f8160cd46a0::accept(Object) -> void
fifo write: @1699477146884030353 0x7f81e2dbbcb7 3069: dii$$Lambda$8112.0x00007f8160cd4d68::accept(Object) -> void
fifo write: @1699477146884234126 0x7f81e2dbb794 185: djl$$Lambda$8120.0x00007f8160cd6158::<init>(djl) -> void
fifo write: @1699477146884276417 0x7f81e2dba997 1721: biq::cS() -> java.util.stream.Stream
fifo write: @1699477146884490089 0x7f81e2dba034 966: djl$$Lambda$8120.0x00007f8160cd6158::accept(Object) -> void
fifo write: @1699477146884627031 0x7f81e2db9714 583: djl::g(dja) -> void
fifo write: @1699477146885029056 0x7f81e30e801f 3415: djl::k(dja) -> void
fifo write: @1699477146885881217 0x7f81e30e97c7 2303: java.util.Comparator::thenComparingInt(java.util.function.ToIntFunction) -> java.util.Comparator
fifo write: @1699477146892735655 0x7f81e30eab27 9172: dzb::a(hf, rc, rc) -> void
fifo write: @1699477146896932929 0x7f81e30eeacc 144: ac::a(it.unimi.dsi.fastutil.objects.ObjectArrayList, asc) -> java.util.List
fifo write: @1699477146897145112 0x7f81e30ef01c 1843: it.unimi.dsi.fastutil.objects.ObjectArrayList::<init>(it.unimi.dsi.fastutil.objects.ObjectList) -> void
fifo write: @1699477146897172392 0x7f81eaab404c 6: hc::a() -> ha
fifo write: @1699477146897214143 0x7f81eaab434c 6: dzb$c::b() -> dfj
fifo write: @1699477146897239643 0x7f81eaab464c 6: hc::b() -> ha
fifo write: @1699477146897307294 0x7f81eaab494c 6: ddu$a::c() -> String
fifo write: @1699477146897332714 0x7f81eaab4c4c 6: dzb$c::c() -> qw
fifo write: @1699477146899604174 0x7f81e30efef4 515: cwu::h(dfj) -> ha
fifo write: @1699477146899823767 0x7f81e30f0514 185: dzc$$Lambda$7088.0x00007f8160a6b908::<init>(dzc) -> void
fifo write: @1699477146900146321 0x7f81e30f09f7 1633: dzc::b(aew) -> java.util.Optional
fifo write: @1699477146900200671 0x7f81eaab4f4c 6: dzb$c::a() -> gw
fifo write: @1699477146900431244 0x7f81e30f179f 5587: dzc::a(aew) -> dzb
fifo write: @1699477146900516185 0x7f81e25d7ef4 44: dyx::a(czh) -> dyx
fifo write: @1699477146900572386 0x7f81eaab524c 6: czh::a() -> h
fifo write: @1699477146900724758 0x7f81e30f3ada 1165: dyx::<init>() -> void
fifo write: @1699477146901011532 0x7f81e30f457c 3237: h::a(ha) -> ha
fifo write: @1699477146902204397 0x7f81eaab5570 626: gw::a(hy) -> gw
fifo write: @1699477146902385699 0x7f81e2b39974 5: dva::d() -> int
fifo write: @1699477146902616962 0x7f81e2dfc414 47: dzb::a(gw, czh, gw, cxq) -> dva
fifo write: @1699477146902757634 0x7f81e30f5ebd 1009: hy::c(int, int, int) -> hy
fifo write: @1699477146902867685 0x7f81e30f67d7 1993: dzb::a(gw, czh, gw, cxq, hy) -> dva
fifo write: @1699477146902971357 0x7f81e30f7719 587: dva::a(hy) -> dva
fifo write: @1699477146903068478 0x7f81e30f7d94 185: dwo$$Lambda$7167.0x00007f8160b9da88::<init>(dzc) -> void
fifo write: @1699477146903140529 0x7f81e30f82b5 3082: dva::a(hy, hy) -> dva
fifo write: @1699477146903221780 0x7f81e30f9694 361: dwo$$Lambda$7167.0x00007f8160b9da88::apply(Object) -> Object
fifo write: @1699477146903281201 0x7f81e30f9cbf 2381: dwo::a(dzc) -> dzb
fifo write: @1699477146903508373 0x7f81eaab5f54 403: java.io.DataInputStream::readDouble() -> double
fifo write: @1699477146903825948 0x7f81eaab6756 101: java.util.stream.ReduceOps$6ReducingSink::accept(int) -> void
fifo write: @1699477146904627518 0x7f81e30fad99 251: dzb::b(dyx, gw) -> dva
fifo write: @1699477146904926192 0x7f81e30fb274 515: cwu::n(dfj) -> ha
fifo write: @1699477146904962162 0x7f81e30fb874 133: ddu$a::a(String, ddu$a) -> boolean
fifo write: @1699477146904999263 0x7f81e30fbd14 485: ddu$a$$Lambda$8213.0x00007f8160b60430::test(Object) -> boolean
fifo write: @1699477146905442628 0x7f81e30fc40f 2888: dwo::a(dzc, gw, czh) -> dva
fifo write: @1699477146906997038 0x7f81eaab6b4c 6: dwr::a() -> he
fifo write: @1699477146909746334 0x7f81e30fd8fa 1562: java.util.stream.IntPipeline::max() -> java.util.OptionalInt
fifo write: @1699477146909930386 0x7f81e30fe497 1005: java.util.stream.ReduceOps::makeInt(java.util.function.IntBinaryOperator) -> java.util.stream.TerminalOp
fifo write: @1699477146910010507 0x7f81e30fedf7 1391: java.util.stream.IntPipeline::reduce(java.util.function.IntBinaryOperator) -> java.util.OptionalInt
fifo write: @1699477146910156039 0x7f81e30ffa7f 4734: dwr::a(dzc) -> int
fifo write: @1699477146910216770 0x7f81e3101a14 379: java.util.stream.ReduceOps$7::<init>(java.util.stream.StreamShape, java.util.function.IntBinaryOperator) -> void
fifo write: @1699477146914072690 0x7f81e3101f94 31: jdk.nio.zipfs.ZipPath::resolve(String) -> java.nio.file.Path
fifo write: @1699477146914125750 0x7f81e3102354 118: hc::b(ha, ha) -> int
fifo write: @1699477146914185981 0x7f81e31027d4 562: jdk.nio.zipfs.ZipPath::resolve(String) -> jdk.nio.zipfs.ZipPath
fifo write: @1699477146916146066 0x7f81e3102f79 235: dzb::a(dyx, gw) -> gw
fifo write: @1699477146916278668 0x7f81e3103494 517: hc::a(ha, ha) -> hc
fifo write: @1699477146916363419 0x7f81e3103b14 199: dwk::<init>(int, int, int, int, dwr$a) -> void
fifo write: @1699477146916513571 0x7f81e3104097 1821: cwu::a(dfj, czh) -> dfj
fifo write: @1699477146917194770 0x7f81eaab7054 4975: bus::l() -> void
fifo write: @1699477146917245431 0x7f81e3104f57 763: h::a(hc) -> hc
fifo write: @1699477146917290171 0x7f81eaabb23c 43: aev::a(aev, aew) -> aev
fifo write: @1699477146917326602 0x7f81eaabb536 6: java.util.OptionalInt::orElse(int) -> int
fifo write: @1699477146917917679 0x7f81eaabb870 215: hm::b(aev) -> java.util.Optional
fifo write: @1699477146918488467 0x7f81e3105814 361: dwl$b$$Lambda$8212.0x00007f8160b60208::applyAsInt(Object) -> int
fifo write: @1699477146918534207 0x7f81e2b701f4 6: java.util.zip.CRC32::reset() -> void
fifo write: @1699477146920056777 0x7f81e3105e5f 2996: ddu$a::a(String) -> java.util.Optional
fifo write: @1699477146920280280 0x7f81e31075a7 8519: cwu::a(dzb$c, dzb$c) -> boolean
fifo write: @1699477146920330600 0x7f81e310adf4 483: ddu$a::values() -> ddu$a[]
fifo write: @1699477146920388961 0x7f81e310b394 185: ddu$a$$Lambda$8213.0x00007f8160b60430::<init>(String) -> void
fifo write: @1699477146920436622 0x7f81e310b814 185: cwu$$Lambda$8214.0x00007f8160ceb000::<init>(ha) -> void
fifo write: @1699477146920782966 0x7f81e310c01f 12181: dwl$b::a(dva, dzb$c) -> int
fifo write: @1699477146920895568 0x7f81eaabbe10 671: qx$1::c(java.io.DataInput, rf) -> rq
fifo write: @1699477146921230232 0x7f81eaabc94c 6: dyx::g() -> dva
fifo write: @1699477146924073658 0x7f81eaabcc88 1974: java.util.ArrayList::addAll(java.util.Collection) -> boolean
fifo write: @1699477146925079681 0x7f81e3110d54 973: dwl$b$$Lambda$8216.0x00007f8160ceb468::apply(Object) -> Object
fifo write: @1699477146925128692 0x7f81e3111654 973: dwl$b$$Lambda$8219.0x00007f8160cebb28::apply(Object) -> Object
fifo write: @1699477146925187852 0x7f81e3111f57 1200: dwl$b::b(he) -> Integer
fifo write: @1699477146925336354 0x7f81e31129d7 1200: dwl$b::a(he) -> Integer
fifo write: @1699477146925524437 0x7f81eaabdff7 516: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477146925623028 0x7f81e31134da 2224: dwl$b::a(dzb$c) -> aev
fifo write: @1699477146926450829 0x7f81eaabe9d2 397: java.lang.invoke.LambdaForm$DMH.0x00007f8160229000::newInvokeSpecial(Object, Object, Object, int) -> Object
fifo write: @1699477146926504269 0x7f81e31148be 3318: v::a(java.nio.file.Path, java.util.List) -> java.nio.file.Path
fifo write: @1699477146927598463 0x7f81e3115e17 1734: dyx::b(gw) -> asc
fifo write: @1699477146927869587 0x7f81e3116f0d 7742: dzb::a(gw, dyx, csv, boolean) -> it.unimi.dsi.fastutil.objects.ObjectArrayList
fifo write: @1699477146927931568 0x7f81e311a237 2960: dwo::a(dzc, gw, czh, asc) -> java.util.List
fifo write: @1699477146927961918 0x7f81e311b6f4 560: arw::a(hy) -> long
fifo write: @1699477146928007499 0x7f81e311bd94 230: dwl$b$$Lambda$8212.0x00007f8160b60208::<init>(dwl$b, dva) -> void
fifo write: @1699477146930699864 0x7f81e311c35f 2889: dyx::a(java.util.List, gw) -> dzb$a
fifo write: @1699477146932809831 0x7f81eaabf090 3691: com.google.common.collect.RegularImmutableSortedSet::indexOf(Object) -> int
fifo write: @1699477146938666556 0x7f81e311d819 723: gw::b(hy) -> gw
fifo write: @1699477146939033071 0x7f81e311df7a 402: ehi::a(dva) -> ehi
fifo write: @1699477146939370965 0x7f81e311e594 305: dwp::e() -> dwr$a
fifo write: @1699477146939665869 0x7f81e311eaf5 167: dva::b(int, int, int) -> dva
fifo write: @1699477146940402898 0x7f81eaac0ef0 263: h::a(ha) -> ha
fifo write: @1699477146941033876 0x7f81eaac1550 419: ddu$a$$Lambda$8213.0x00007f8160b60430::test(Object) -> boolean
fifo write: @1699477146941124107 0x7f81eaac1bb0 3: java.util.stream.ReduceOps$6ReducingSink::begin(long) -> void
fifo write: @1699477146951453401 0x7f81eaac1ed3 814: dzb::a(gw, cxq, czh, gw) -> gw
fifo write: @1699477146956797409 0x7f81e311eff4 483: czh::values() -> czh[]
fifo write: @1699477146957842922 0x7f81e311f5b7 966: czh::b(asc) -> java.util.List
fifo write: @1699477146960249893 0x7f81eaac2db8 1947: dwr::a(dzc) -> int
fifo write: @1699477146965506251 0x7f81eaac45df 1814: java.util.stream.FindOps$FindOp::evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) -> Object
fifo write: @1699477146966408093 0x7f81eaac5b57 241: java.util.stream.FindOps$FindSink::accept(Object) -> void
fifo write: @1699477146966684856 0x7f81eaac5fac 1: java.util.stream.FindOps$FindSink$OfRef$$Lambda$38.0x800000049::get() -> Object
fifo write: @1699477146966753087 0x7f81eaac62da 254: java.util.stream.FindOps$FindSink$OfRef::get() -> Object
fifo write: @1699477146970059230 0x7f81e311fe94 215: bsp::a(double, double, double, int) -> ebb
fifo write: @1699477146975669282 0x7f81eaac68ce 3355: cwu::a(dfj, czh) -> dfj
fifo write: @1699477146980566175 0x7f81eaac9325 1871: cwu::h(dfj) -> ha
fifo write: @1699477146997590264 0x7f81eaacac90 8926: dwl$b$$Lambda$8212.0x00007f8160b60208::applyAsInt(Object) -> int
fifo write: @1699477146999783022 0x7f81eaad1bc1 1165: dkw$g::<init>(dkw, dkl, boolean) -> void
fifo write: @1699477147010574111 0x7f81ea32a728 8854: dwl$b::a(dva, dzb$c) -> int
fifo write: @1699477147010621452 0x7f81ea937b55 170: dva::<init>(int, int, int, int, int, int) -> void
fifo write: @1699477147012202612 0x7f81ea937052 582: dwl$b::a(dzb$c) -> aev
fifo write: @1699477147018896248 0x7f81ea934ed0 2229: dwl$b$$Lambda$8216.0x00007f8160ceb468::apply(Object) -> Object
fifo write: @1699477147020226845 0x7f81e2647bb4 957: ebd$$Lambda$7364.0x00007f8160bdbbd8::apply(Object) -> Object
fifo write: @1699477147020297106 0x7f81e1b5ba37 595: ebd::b(java.util.Map, ebf) -> ebb
fifo write: @1699477147022495805 0x7f81ea934778 299: dzc::a(aew) -> dzb
fifo write: @1699477147024616092 0x7f81ea329ba4 788: dyx::<init>() -> void
fifo write: @1699477147025884918 0x7f81ea933f70 411: dwo$$Lambda$7167.0x00007f8160b9da88::apply(Object) -> Object
fifo write: @1699477147026397135 0x7f81ea3295d3 140: it.unimi.dsi.fastutil.objects.AbstractObjectList::iterator() -> java.util.Iterator
fifo write: @1699477147031889965 0x7f81eaad2d96 29191: eaa::a(ead) -> void
fifo write: @1699477147031936106 0x7f81ea32920f 54: it.unimi.dsi.fastutil.objects.ObjectArrayList::spliterator() -> java.util.Spliterator
fifo write: @1699477147031970186 0x7f81ea328ccf 136: dva::a(gw) -> dva
fifo write: @1699477147033796400 0x7f81ea3282f7 869: java.util.stream.ReferencePipeline::mapToInt(java.util.function.ToIntFunction) -> java.util.stream.IntStream
fifo write: @1699477147036484774 0x7f81ea3261d0 2229: dwl$b$$Lambda$8219.0x00007f8160cebb28::apply(Object) -> Object
fifo write: @1699477147038690483 0x7f81ea325bee 322: java.util.stream.ReferencePipeline$4::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477147041567670 0x7f81e2a7c537 11676: dkv::a(cpx, dlg, int, int, org.apache.commons.lang3.mutable.MutableObject, java.util.function.Predicate) -> java.util.OptionalInt
fifo write: @1699477147042058336 0x7f81ea321100 7365: dzb::a(gw, dyx, csv, boolean) -> it.unimi.dsi.fastutil.objects.ObjectArrayList
fifo write: @1699477147043190370 0x7f81ea32087b 308: dva::a(hy, hy) -> dva
fifo write: @1699477147044730050 0x7f81ea31fe59 598: hc::a(ha, ha) -> hc
fifo write: @1699477147048143524 0x7f81ea31dd34 2531: dzb::b(dyx, gw) -> dva
fifo write: @1699477147050989221 0x7f81eaae5c15 16449: cwu::a(dzb$c, dzb$c) -> boolean
fifo write: @1699477147051155553 0x7f81ea31bd3e 2477: dzb::a(gw, czh, gw, cxq) -> dva
fifo write: @1699477147054658528 0x7f81ea31967e 2887: dwo::a(dzc, gw, czh) -> dva
fifo write: @1699477147058988284 0x7f81e9af28d1 70: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::estimateSize() -> long
fifo write: @1699477147065810421 0x7f81ea318f5e 297: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::find(long) -> int
fifo write: @1699477147113869280 0x7f81ea31858b 528: java.util.stream.IntPipeline::max() -> java.util.OptionalInt
fifo write: @1699477147117182402 0x7f81ea31800b 46: java.util.stream.ReduceOps$7::makeSink() -> java.util.stream.ReduceOps$AccumulatingSink
fifo write: @1699477147119927728 0x7f81e1b22779 1403: bjn::a_(bjg) -> boolean
fifo write: @1699477147128078883 0x7f81e197e974 104: dwr::b() -> int
fifo write: @1699477147128127183 0x7f81e27ea394 167: it.unimi.dsi.fastutil.objects.ObjectArrayList::toArray() -> Object[]
fifo write: @1699477147128166964 0x7f81e2d976b4 329: dwr::b(asc) -> java.util.List
fifo write: @1699477147170556419 0x7f81eaaf0fc3 1307: dwo::a(dzc, gw, czh, asc) -> java.util.List
fifo write: @1699477147171733514 0x7f81eaaf2189 382: dwl$b$$Lambda$8212.0x00007f8160b60208::<init>(dwl$b, dva) -> void
fifo write: @1699477147185396090 0x7f81eaaf2656 115: java.util.stream.ReduceOps$6ReducingSink::get() -> Object
fifo write: @1699477147210568044 0x7f81eaaf2a57 739: it.unimi.dsi.fastutil.objects.ObjectArrayList::initArrayFromCapacity(int) -> void
fifo write: @1699477147218887451 0x7f81e262c434 891: csv::k() -> cja
fifo write: @1699477147219354367 0x7f81eaaf31d0 63: he$c::a(aev) -> boolean
fifo write: @1699477147268822633 0x7f81e26adf34 318: bjg::h(float) -> float
fifo write: @1699477147268872254 0x7f81e2832a34 615: biq::g(float) -> float
fifo write: @1699477147268927245 0x7f81e2a826d7 1048: biq::f(float) -> ehn
fifo write: @1699477147280023607 0x7f81e3120e27 38929: dwl$b::a(dve, org.apache.commons.lang3.mutable.MutableObject, int, boolean, cpx, dlg) -> void
fifo write: @1699477147287216490 0x7f81e3132447 35094: dwl$b::a(dve, org.apache.commons.lang3.mutable.MutableObject, int, boolean, cpx, dlg) -> void
fifo write: @1699477147287267061 0x7f81eaaf3583 308: ehi::a(dva) -> ehi
fifo write: @1699477147306206444 0x7f81eaaf3ba3 248: dva::b(int, int, int) -> dva
fifo write: @1699477147369102303 0x7f81e2ceb717 1000: biq::b(float, float) -> ehn
fifo write: @1699477147398000845 0x7f81eaaf437f 4538: dkv::a(cpx, dlg, int, int, org.apache.commons.lang3.mutable.MutableObject, java.util.function.Predicate) -> java.util.OptionalInt
fifo write: @1699477147462849929 0x7f81e2a7ba3a 517: dkv::a(int, int, dks$a, cpx, dlg) -> int
fifo write: @1699477147469708937 0x7f81e2a7b294 230: ebg$$Lambda$7377.0x00007f8160be6728::<init>(ebg, ehi) -> void
fifo write: @1699477147469962010 0x7f81e2f851f7 1468: ebg::a(ehi) -> boolean
fifo write: @1699477147471513380 0x7f81e2ed5dae 15528: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477147551705692 0x7f81eaaf7664 17210: dkw::<init>(int, dlg, int, int, dla, dkm$c, dkx, dke$a, dlu) -> void
fifo write: @1699477147577271721 0x7f81eab01773 4626: dkv::a(cpx, dlg, int, int, org.apache.commons.lang3.mutable.MutableObject, java.util.function.Predicate) -> java.util.OptionalInt
fifo write: @1699477147580331460 0x7f81e1ffa294 167: dhg::b(int, int, dks$a, cpx, dlg) -> int
fifo write: @1699477147580992419 0x7f81eab0484c 6: dky::l() -> dkl
fifo write: @1699477147581036069 0x7f81eab04b4c 6: dlg::d() -> dlf
fifo write: @1699477147581205962 0x7f81eab04e4c 6: dky::m() -> dkl
fifo write: @1699477147581238852 0x7f81eab0514c 6: dky::o() -> dkl
fifo write: @1699477147581270653 0x7f81eab0544c 6: dlg::e() -> dlf
fifo write: @1699477147581301423 0x7f81eab0574c 6: dky::n() -> dkl
fifo write: @1699477147581344863 0x7f81eab05a4c 6: dky::k() -> dkl
fifo write: @1699477147596417277 0x7f81e2448294 164: dla::b() -> int
fifo write: @1699477147621516020 0x7f81e2832594 240: dwa::a(dvm) -> void
fifo write: @1699477147622299440 0x7f81e2779726 1061: dcv::o() -> qw
fifo write: @1699477147631504899 0x7f81e2779074 135: buw::aR() -> boolean
fifo write: @1699477147684938226 0x7f81e2f07b97 386: ha$c::a(asc) -> ha
fifo write: @1699477147724454895 0x7f81e2f07694 324: cpb$$Lambda$7388.0x00007f8160be31b0::apply(Object) -> Object
fifo write: @1699477147724548946 0x7f81e2a71cd4 483: ehj::a(ehn, ha, gw) -> ehj
fifo write: @1699477147724616627 0x7f81e2a714bc 529: cpb::b(cpe) -> ehj
fifo write: @1699477147803756604 0x7f81eab063d4 31560: dwl$b::a(dve, org.apache.commons.lang3.mutable.MutableObject, int, boolean, cpx, dlg) -> void
fifo write: @1699477147810435420 0x7f81eab1d296 2791: java.util.concurrent.CompletableFuture$CoCompletion::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477147860002958 0x7f81e2e33114 7204: cyt::a(dfj, cxq) -> dfj
fifo write: @1699477147882395676 0x7f81eab1f151 22298: dhg::a(cqp, dhf, cqn) -> void
fifo write: @1699477147884744566 0x7f81eab2d476 1195: it.unimi.dsi.fastutil.longs.LongOpenHashSet::rehash(int) -> void
fifo write: @1699477147885230802 0x7f81eab2e1f0 171: ebg::h() -> double
fifo write: @1699477147941793730 0x7f81eab2e864 17030: dkw::<init>(int, dlg, int, int, dla, dkm$c, dkx, dke$a, dlu) -> void
fifo write: @1699477147970075694 0x7f81eab387f8 840: dwf::b(dhh, int, int) -> boolean
fifo write: @1699477147978836007 0x7f81e2f07174 91: dkx::b() -> boolean
fifo write: @1699477147978897257 0x7f81e1ae4f94 185: dkw$$Lambda$8044.0x00007f8160cbf9c0::<init>(dkw) -> void
fifo write: @1699477147979177451 0x7f81e1ae4a94 230: dkw$$Lambda$8045.0x00007f8160cbd000::<init>(dkw, dkl) -> void
fifo write: @1699477147983848491 0x7f81e18e3cfa 41: dkm::a(dkl, dkl) -> dkl
fifo write: @1699477147983911242 0x7f81e1ae4447 448: dkm::e(dkl) -> dkl
fifo write: @1699477147984321347 0x7f81e188fe74 91: dkx::c() -> boolean
fifo write: @1699477147984383868 0x7f81e188f994 279: dtw::<init>(java.util.List) -> void
fifo write: @1699477148005714972 0x7f81e25a191f 6454: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477148010338262 0x7f81eab39655 1118: dke$c::a(dkl$b, org.apache.commons.lang3.mutable.MutableDouble, dke$b, dke$b) -> double
fifo write: @1699477148078734191 0x7f81eab3a717 3068: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::find(Object) -> int
fifo write: @1699477148090494163 0x7f81eab3c8f3 6460: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::computeIfAbsent(Object, it.unimi.dsi.fastutil.objects.Object2BooleanFunction) -> boolean
fifo write: @1699477148092651460 0x7f81e188f294 621: ac::a(java.util.List, asc) -> Object
fifo write: @1699477148098209702 0x7f81e2b875d9 1251: com.google.common.collect.Sets$1::size() -> int
fifo write: @1699477148113475658 0x7f81e25a1294 185: dkw$$Lambda$8042.0x00007f8160cbe000::<init>(dkw) -> void
fifo write: @1699477148113548199 0x7f81e188eeb4 39: it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap::<init>() -> void
fifo write: @1699477148113602680 0x7f81e2b87114 240: dkw$1::<init>(dkw) -> void
fifo write: @1699477148113656231 0x7f81e2b86c14 240: dkw$a::<init>(dkw) -> void
fifo write: @1699477148113707951 0x7f81e2b1cb94 240: dkw$b::<init>(dkw) -> void
fifo write: @1699477148123886663 0x7f81e8bf8310 27: vtable stub
fifo write: @1699477148140704789 0x7f81eab40ca6 9385: java.util.TimSort::mergeLo(int, int, int, int) -> void
fifo write: @1699477148174134949 0x7f81e314253f 39420: bjg::aq() -> void
fifo write: @1699477148174226540 0x7f81e2deaa1f 7877: bsp::c() -> void
fifo write: @1699477148258062808 0x7f81eab45964 17014: dkw::<init>(int, dlg, int, int, dla, dkm$c, dkx, dke$a, dlu) -> void
fifo write: @1699477148259597208 0x7f81eab4f7f3 801: java.util.IdentityHashMap::remove(Object) -> Object
fifo write: @1699477148268174898 0x7f81eab50797 28950: eaa::a(ead) -> void
fifo write: @1699477148272147339 0x7f81e2b1bb14 1782: bpv::a() -> boolean
fifo write: @1699477148289620554 0x7f81e2883094 621: dte::c(cqb, gw) -> boolean
fifo write: @1699477148289702125 0x7f81e28825c7 1258: dte::a(cqb, java.util.function.BiConsumer, asc, gw, dqw) -> void
fifo write: @1699477148289984909 0x7f81e25cc217 3504: dte$$Lambda$8094.0x00007f8160ccf9a0::test(Object) -> boolean
fifo write: @1699477148290150581 0x7f81e2ed4f14 1244: dnw::b(dfj) -> boolean
fifo write: @1699477148290206782 0x7f81e2ed48b4 578: com.google.common.collect.FluentIterable$3::<init>(Iterable[]) -> void
fifo write: @1699477148290295923 0x7f81e1851c74 3163: dte::b(dfj) -> boolean
fifo write: @1699477148290447745 0x7f81e1851437 590: com.google.common.collect.AbstractIndexedListIterator::<init>(int) -> void
fifo write: @1699477148290517636 0x7f81e2ed40b7 785: com.google.common.collect.FluentIterable$3$1::<init>(com.google.common.collect.FluentIterable$3, int) -> void
fifo write: @1699477148290616347 0x7f81e2bdccea 1743: com.google.common.collect.FluentIterable$3::iterator() -> java.util.Iterator
fifo write: @1699477148290731249 0x7f81e2bdc20b 1283: com.google.common.collect.Iterators::concat(java.util.Iterator) -> java.util.Iterator
fifo write: @1699477148290794939 0x7f81e3016554 1172: com.google.common.collect.Iterators$ConcatenatedIterator::<init>(java.util.Iterator) -> void
fifo write: @1699477148293051239 0x7f81e3063d39 16170: cyt::a(dfj, czh) -> dfj
fifo write: @1699477148295900735 0x7f81e24720a4 3705: dxe$a::a(cqp, dva, int, int, int, int) -> boolean
fifo write: @1699477148300346952 0x7f81e28820f9 88: it.unimi.dsi.fastutil.objects.ObjectIterators::unwrap(java.util.Iterator, Object[]) -> int
fifo write: @1699477148300398343 0x7f81e2252674 23: it.unimi.dsi.fastutil.objects.ObjectArrays::stableSort(Object[], int, int, java.util.Comparator) -> void
fifo write: @1699477148300448333 0x7f81e24716b7 435: it.unimi.dsi.fastutil.objects.ObjectArrayList::sort(java.util.Comparator) -> void
fifo write: @1699477148300691576 0x7f81e3014ffc 3016: it.unimi.dsi.fastutil.objects.ObjectArrayList::<init>(java.util.Collection) -> void
fifo write: @1699477148315546238 0x7f81e30148f4 414: csw::c(dfj, cpb, gw, biu) -> Boolean
fifo write: @1699477148315606638 0x7f81e2bdb8b4 787: csw$$Lambda$557.0x00007f8160315d40::test(dfj, cpb, gw, Object) -> boolean
fifo write: @1699477148316519070 0x7f81e3063494 137: java.time.Clock::<init>() -> void
fifo write: @1699477148316679702 0x7f81e3062d94 279: java.time.Clock$SystemClock::<init>(java.time.ZoneId) -> void
fifo write: @1699477148316751453 0x7f81e30113f9 1149: java.time.zone.ZoneRules::getOffset(java.time.Instant) -> java.time.ZoneOffset
fifo write: @1699477148316933515 0x7f81e30106d7 1394: java.time.zone.ZoneRules::findYear(long, java.time.ZoneOffset) -> int
fifo write: @1699477148317043717 0x7f81e300f7c3 1913: java.time.Clock::systemDefaultZone() -> java.time.Clock
fifo write: @1699477148317159438 0x7f81e2f8c4b7 2473: java.time.LocalDate::now() -> java.time.LocalDate
fifo write: @1699477148317262489 0x7f81e300e557 1869: java.time.LocalDate::ofEpochDay(long) -> java.time.LocalDate
fifo write: @1699477148317317210 0x7f81e2f8bcb9 595: java.time.LocalDate::now(java.time.Clock) -> java.time.LocalDate
fifo write: @1699477148317387101 0x7f81e2f8b081 1217: java.time.LocalDate::ofInstant(java.time.Instant, java.time.ZoneId) -> java.time.LocalDate
fifo write: @1699477148331954738 0x7f81e3151b9f 39852: bjg::h(ehn) -> void
fifo write: @1699477148348943468 0x7f81eab636d0 115: java.util.stream.Sink$ChainedLong::begin(long) -> void
fifo write: @1699477148350011401 0x7f81eab63c61 5718: yk::<init>(cpc, eab, java.util.BitSet, java.util.BitSet) -> void
fifo write: @1699477148369660204 0x7f81e2f8a7d7 869: bjg::b(bgx) -> cjf
fifo write: @1699477148369853476 0x7f81e2f89e34 1007: ccn::a(bjg, cja) -> bgx
fifo write: @1699477148390230408 0x7f81e2b323ae 5971: bkk::e() -> qw
fifo write: @1699477148391811519 0x7f81eab670be 597: java.util.Arrays::copyOf(int[], int) -> int[]
fifo write: @1699477148393522881 0x7f81e31619a7 29135: bjg::b(qw) -> void
fifo write: @1699477148428755784 0x7f81eab676cc 3: bil$a::c() -> boolean
fifo write: @1699477148428796375 0x7f81eab679cc 2: bil$a::a() -> int
fifo write: @1699477148520059629 0x7f81e2b31479 1775: com.google.common.collect.Maps$TransformedEntriesMap::<init>(java.util.Map, com.google.common.collect.Maps$EntryTransformer) -> void
fifo write: @1699477148567541869 0x7f81eab67cd6 205: ajy::a(java.util.List, cpv, gw, dfj) -> void
fifo write: @1699477148621501583 0x7f81e316cb79 3538: byy$d::a() -> boolean
fifo write: @1699477148645167587 0x7f81eab681d0 2701: djf::a(long) -> java.util.stream.LongStream
fifo write: @1699477148670384562 0x7f81e2b308f4 964: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::remove(long) -> Object
fifo write: @1699477148675139824 0x7f81e8bf8340 27: vtable stub
fifo write: @1699477148675644830 0x7f81e2b2ff34 873: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::removeEntry(int) -> Object
fifo write: @1699477148678040381 0x7f81e316e4b4 399: io.netty.buffer.PoolSubpage::findNextAvail() -> int
fifo write: @1699477148684978780 0x7f81e316eb34 902: io.netty.buffer.PoolChunk::calculateRunSize(int) -> int
fifo write: @1699477148685072681 0x7f81e316f53a 648: io.netty.buffer.PoolSubpage::<init>(io.netty.buffer.PoolSubpage, io.netty.buffer.PoolChunk, int, int, int, int) -> void
fifo write: @1699477148723757329 0x7f81eab6a69f 3958: ebo::a(cpw, ha, dfj, gw, gw, int, int) -> void
fifo write: @1699477148791994936 0x7f81e316fdb7 1389: com.google.common.collect.FluentIterable::concatNoDefensiveCopy(Iterable[]) -> com.google.common.collect.FluentIterable
fifo write: @1699477148805753583 0x7f81eab6d380 18968: ebd::a(bdp, eaz, java.util.Map, float, int, float) -> ebb
fifo write: @1699477148805799384 0x7f81eab785f2 29: ehn::b(ehn) -> double
fifo write: @1699477148814720859 0x7f81eab78913 32: drl::a(asc, int, int, int, int, boolean) -> boolean
fifo write: @1699477148815487548 0x7f81e2b2fa94 39: bka$$Lambda$7886.0x00007f8160c95aa0::test(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477148815889623 0x7f81e31709b4 1808: biy::a(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477148816006665 0x7f81e2f89914 392: ehx$$Lambda$825.0x00007f816039a618::test(Object) -> boolean
fifo write: @1699477148816657193 0x7f81eab78c51 130: aee::equals(Object) -> boolean
fifo write: @1699477148820173029 0x7f81eab790d9 126: ehn::a(ho, double) -> boolean
fifo write: @1699477148829408868 0x7f81eab794e4 47: cqd::a(gw, dfj, int) -> boolean
fifo write: @1699477148831866509 0x7f81e3171d62 21625: dpi::a(cpw, dva, java.util.Set, java.util.Set, java.util.Set) -> ehw
fifo write: @1699477148869040307 0x7f81e8bf8370 168: itable stub
fifo write: @1699477148946236770 0x7f81e317aa57 1409: drg::a(cqb, drm$b, asc, dqw, int, drm$a, int, int, int) -> void
fifo write: @1699477149007998115 0x7f81eab79e03 39350: dhg::a(cqp, dhf, cqn) -> void
fifo write: @1699477149009298591 0x7f81e317b614 324: sn$$Lambda$7544.0x00007f8160c1b628::apply(Object) -> Object
fifo write: @1699477149009352822 0x7f81e317bb19 50: aby$a::<init>(double, double, double, boolean) -> void
fifo write: @1699477149009424213 0x7f81e317bf5c 1560: aby$a::b(so) -> aby$a
fifo write: @1699477149018855345 0x7f81eab90b34 3092: dol::a(dny) -> boolean
fifo write: @1699477149031227334 0x7f81eab935c2 4146: dom$a::a(cqp, asc, dom$b) -> void
fifo write: @1699477149032002064 0x7f81eab9689d 162: cpy::a(dks$a, gw) -> gw
fifo write: @1699477149034260273 0x7f81eab96e77 620: akq::a(boolean, gw) -> void
fifo write: @1699477149045719250 0x7f81eab9822c 14619: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477149069905251 0x7f81e317cdbb 1772: bus::d(int, boolean) -> void
fifo write: @1699477149073924093 0x7f81e317de5f 3461: bus::l() -> void
fifo write: @1699477149169891207 0x7f81e317f794 555: byy$c::a() -> boolean
fifo write: @1699477149170149221 0x7f81e317fed7 2934: byy$c::a(byy, bjg) -> boolean
fifo write: @1699477149170271132 0x7f81e3181217 3315: byy$c$$Lambda$8142.0x00007f8160cdd2f0::test(Object) -> boolean
fifo write: @1699477149170459355 0x7f81e3182774 1708: byy$a::a() -> boolean
fifo write: @1699477149170806249 0x7f81eaba1ad5 3587: io.netty.util.Recycler::get() -> Object
fifo write: @1699477149170882590 0x7f81e31835a7 5170: byy::g(cbu) -> boolean
fifo write: @1699477149171071283 0x7f81e3185af9 3538: byy$b::a() -> boolean
fifo write: @1699477149174031891 0x7f81eaba46be 16780: eak::a(cpb, gw, eam) -> ehn
fifo write: @1699477149175634931 0x7f81eabb0678 1663: aka::b(akr, int, int) -> boolean
fifo write: @1699477149364449599 0x7f81e31873f4 106: net.minecraft.server.MinecraftServer::aH() -> ect
fifo write: @1699477149470294881 0x7f81e318785f 1289: btz::a(bjp, int, int, java.util.function.ToDoubleFunction) -> ehn
fifo write: @1699477149487946688 0x7f81eabb1fcb 9653: dkv::a(cpx, dlg, int, int, org.apache.commons.lang3.mutable.MutableObject, java.util.function.Predicate) -> java.util.OptionalInt
fifo write: @1699477149493961926 0x7f81eabb8776 1945: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477149520360315 0x7f81eabb9ccc 4: dai::b() -> float
fifo write: @1699477149520411606 0x7f81eabb9fcc 4: dai::a() -> float
fifo write: @1699477149556306007 0x7f81eabba939 16091: bjg::aq() -> void
fifo write: @1699477149568987990 0x7f81e318841a 852: bus::b(gw, int) -> boolean
fifo write: @1699477149588783175 0x7f81eabc7fcc 6: dia::p() -> ejc
fifo write: @1699477149605111595 0x7f81eabc82cc 6: dss$a::b() -> asc
fifo write: @1699477149609664254 0x7f81e3188c14 343: dpi$$Lambda$8095.0x00007f8160cca000::<init>(dqw, cqp, drm$b, asc, int, int, int) -> void
fifo write: @1699477149610023678 0x7f81e3189357 3105: dva::a(Iterable) -> java.util.Optional
fifo write: @1699477149632047592 0x7f81e318a89c 1664: java.lang.ref.ReferenceQueue::remove(long) -> java.lang.ref.Reference
fifo write: @1699477149636908454 0x7f81e318b859 3041: gw::a(gw, gw) -> Iterable
fifo write: @1699477149645433194 0x7f81eabc86b0 3494: cvn::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477149648902229 0x7f81eabca870 2095: dpe::a(dny) -> boolean
fifo write: @1699477149649290854 0x7f81eabcc35c 147: hi$b::b() -> int
fifo write: @1699477149649971302 0x7f81eabcc7fd 254: hi$b::a(int) -> he
fifo write: @1699477149652983061 0x7f81eabcceb7 1408: dlj$g::a(int, int) -> void
fifo write: @1699477149655756916 0x7f81eabcdfe5 934: dpi::a(cqb, int, gw, dqw) -> int
fifo write: @1699477149691585457 0x7f81e1930334 154: bjg::b(bjs, bir) -> float
fifo write: @1699477149692984825 0x7f81e318ccdc 4959: eak::b(cpv, gw, eam) -> void
fifo write: @1699477149721841376 0x7f81ea9961be 2943: cvn::a(dfj, akq, gw, asc) -> void
fifo write: @1699477149727885284 0x7f81ea45d677 16871: bsp::c() -> void
fifo write: @1699477149727973696 0x7f81ea99583a 225: cvn::h(dfj) -> boolean
fifo write: @1699477149728891737 0x7f81e97cf950 647: it.unimi.dsi.fastutil.ints.IntArraySet::toIntArray() -> int[]
fifo write: @1699477149729160381 0x7f81e97cf5b3 56: java.util.Arrays::sort(int[]) -> void
fifo write: @1699477149729415004 0x7f81e97cf23a 65: java.util.DualPivotQuicksort::sort(int[], int, int, int) -> void
fifo write: @1699477149732666016 0x7f81e9c8a1bd 910: java.util.DualPivotQuicksort::sort(java.util.DualPivotQuicksort$Sorter, int[], int, int, int) -> void
fifo write: @1699477149743656647 0x7f81e97cec90 35: java.util.stream.StreamOpFlag::combineOpFlags(int, int) -> int
fifo write: @1699477149745605372 0x7f81e2cdb214 275: dsz$$Lambda$8150.0x00007f8160cdab90::<init>(dsz, gw, gw) -> void
fifo write: @1699477149753422863 0x7f81e24b9034 701: dnw::a(cqp, gw, dfj, java.util.function.Predicate) -> void
fifo write: @1699477149766808055 0x7f81eabcf388 15251: bjg::h(ehn) -> void
fifo write: @1699477149773956757 0x7f81ea6dba30 3316: dos::a(dny) -> boolean
fifo write: @1699477149814827143 0x7f81e2880534 814: dfi$a::m() -> boolean
fifo write: @1699477149822739725 0x7f81eabdaf43 16741: dpi::a(cpw, dva, java.util.Set, java.util.Set, java.util.Set) -> ehw
fifo write: @1699477149822787275 0x7f81e9c89cd0 123: dkm$e::hashCode() -> int
fifo write: @1699477149878047816 0x7f81e9c899cc 2: dsz$a::a() -> int
fifo write: @1699477149881266717 0x7f81e1e71db4 616: com.google.common.collect.Maps$IteratorBasedAbstractMap$1::<init>(com.google.common.collect.Maps$IteratorBasedAbstractMap) -> void
fifo write: @1699477149881318258 0x7f81e16b0086 726: com.google.common.collect.Maps$IteratorBasedAbstractMap::entrySet() -> java.util.Set
fifo write: @1699477149881356018 0x7f81e21fe114 422: com.google.common.collect.Maps$EntrySet::<init>() -> void
fifo write: @1699477149881428099 0x7f81e2135c14 240: com.google.common.collect.Maps$13::<init>(com.google.common.collect.Maps$EntryTransformer) -> void
fifo write: @1699477149881534091 0x7f81e2cc1794 784: com.google.common.collect.Maps::asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer) -> com.google.common.base.Function
fifo write: @1699477149886893620 0x7f81e2d23494 539: akx::x_() -> eab
fifo write: @1699477149912852073 0x7f81eabe834a 20359: dig::a(akq, dhf) -> qw
fifo write: @1699477149943197374 0x7f81eabf8799 16031: bjg::aq() -> void
fifo write: @1699477149964687590 0x7f81e9c89650 83: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapEntry::getLongKey() -> long
fifo write: @1699477149964760701 0x7f81e9c892d0 83: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapEntry::getLongValue() -> long
fifo write: @1699477149970545466 0x7f81e2b550f4 229: bsp::p() -> boolean
fifo write: @1699477150022857119 0x7f81ea6da45a 1329: bjg::c(dfj) -> boolean
fifo write: @1699477150075557786 0x7f81ea23818c 3375: so::a(hj, Object) -> void
fifo write: @1699477150162426473 0x7f81e2ba6614 103: it.unimi.dsi.fastutil.longs.LongOpenHashSet::realSize() -> int
fifo write: @1699477150172298621 0x7f81e2aece9c 3371: byr::y() -> void
fifo write: @1699477150172526214 0x7f81e22a41b9 535: dvm::a(cpc, int) -> boolean
fifo write: @1699477150174906154 0x7f81e26dd3b4 474: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::removeEntry(int) -> long
fifo write: @1699477150174999216 0x7f81e28814b9 1006: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::shiftKeys(int) -> void
fifo write: @1699477150177275905 0x7f81e239d399 1832: dhq::I() -> void
fifo write: @1699477150177506968 0x7f81ea237201 1435: dlr::a(long, int, int, int) -> void
fifo write: @1699477150191544108 0x7f81ea245bb7 3207: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::remove(long) -> Object
fifo write: @1699477150209719282 0x7f81ea1f3b3c 2725: eiw::a(long, int) -> void
fifo write: @1699477150210145307 0x7f81ea1e1c50 103: dzx::d(long) -> dhl
fifo write: @1699477150214376582 0x7f81ea2456d0 143: eiu::b() -> eiz
fifo write: @1699477150215352604 0x7f81ea6d9e95 224: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$MapIterator::<init>(it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap) -> void
fifo write: @1699477150237931535 0x7f81ea232234 5299: bus::b_() -> void
fifo write: @1699477150260424004 0x7f81ea400f16 7075: bus::X() -> void
fifo write: @1699477150265452909 0x7f81ea3e5590 2579: bpb::a() -> void
fifo write: @1699477150293283907 0x7f81ea3d8c38 8135: biq::aO() -> void
fifo write: @1699477150299522717 0x7f81e1a9f694 220: java.util.ImmutableCollections$ListN::toArray() -> Object[]
fifo write: @1699477150308591464 0x7f81e222db99 372: dsz$$Lambda$8150.0x00007f8160cdab90::apply(Object) -> Object
fifo write: @1699477150308772266 0x7f81e1a734b4 519: dsz::a(gw, gw, dfj) -> dfj
fifo write: @1699477150308847007 0x7f81e17bde54 1385: dsz::a(gw, gw) -> ha$a
fifo write: @1699477150309008039 0x7f81e2b55679 1443: dfl::b(dgm, Comparable) -> Object
fifo write: @1699477150311408340 0x7f81e230f319 375: dpi$$Lambda$8098.0x00007f8160ccac00::apply(Object) -> Object
fifo write: @1699477150311547131 0x7f81e2583a1d 415: dpi::a(cqp, java.util.Set, java.util.Set, java.util.Set, dva) -> Boolean
fifo write: @1699477150311606812 0x7f81e17127cc 580: java.lang.invoke.LambdaForm$MH.0x00007f8160cd0800::linkToTargetMethod(int, int, int, Object, int, Object) -> Object
fifo write: @1699477150311649433 0x7f81e2318714 198: dzb$$Lambda$8099.0x00007f8160ccae48::<init>(int, int, int, cpw, int) -> void
fifo write: @1699477150311795475 0x7f81e1755cb9 1292: java.lang.invoke.LambdaForm$DMH.0x00007f8160cd0000::newInvokeSpecial(Object, int, int, int, Object, int) -> Object
fifo write: @1699477150311831385 0x7f81e25c47b4 159: ehw::a(ehw$a) -> void
fifo write: @1699477150311908426 0x7f81e28c8eff 2536: dzb::a(cpw, int, ehw, int, int, int) -> void
fifo write: @1699477150354167500 0x7f81ea3d8659 46: dss$a$$Lambda$8139.0x00007f8160cdcc58::applyAsInt(Object) -> int
fifo write: @1699477150356243567 0x7f81e1952ff4 2: drh::a(asc, int, dqw) -> int
fifo write: @1699477150359197595 0x7f81e983a0ea 1181: java.util.TimSort::gallopLeft(Object, Object[], int, int, int, java.util.Comparator) -> int
fifo write: @1699477150359900754 0x7f81e940d03e 271: java.util.concurrent.CompletableFuture::asyncSupplyStage(java.util.concurrent.Executor, java.util.function.Supplier) -> java.util.concurrent.CompletableFuture
fifo write: @1699477150363575621 0x7f81e9a228d0 115: dhg$$Lambda$7998.0x00007f8160cafb18::accept(Object) -> void
fifo write: @1699477150367445980 0x7f81e283a97f 6724: dsz::a(cqb, java.util.function.BiConsumer, asc, gw, gw, boolean, dqw) -> boolean
fifo write: @1699477150379713798 0x7f81eac05ff9 33985: eaa::a(ead) -> void
fifo write: @1699477150381321319 0x7f81e25dc5b4 569: dpq::a(cqp, dhg, asc, gw) -> boolean
fifo write: @1699477150396531054 0x7f81ea4b65e7 2776: com.google.common.cache.LocalCache$Segment::storeLoadedValue(Object, int, com.google.common.cache.LocalCache$LoadingValueReference, Object) -> boolean
fifo write: @1699477150404665919 0x7f81e2e8ac5f 22351: dol::a(dny) -> boolean
fifo write: @1699477150425394086 0x7f81e9a55900 79: biq::equals(Object) -> boolean
fifo write: @1699477150430135777 0x7f81e2610206 4821: java.util.concurrent.CompletableFuture$BiRelay::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477150435742909 0x7f81ea3e4c74 279: czt::d(dfj, cpb, gw) -> boolean
fifo write: @1699477150439540348 0x7f81ea7e6041 1741: czt::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477150458991038 0x7f81ea3a33e7 8314: eak::b(cpv, gw, eam) -> void
fifo write: @1699477150465556332 0x7f81e295f924 5312: eiw::a(long) -> void
fifo write: @1699477150476354612 0x7f81e27c1a01 3995: ebd::a(cqi, bji, java.util.Set, float, int, float) -> ebb
fifo write: @1699477150487642607 0x7f81e26f1d97 253: java.util.stream.ReduceOps$5ReducingSink::accept(int) -> void
fifo write: @1699477150487690267 0x7f81e153a394 139: java.util.stream.IntPipeline$$Lambda$4068.0x00007f81608739a8::applyAsInt(int, int) -> int
fifo write: @1699477150541795163 0x7f81e1c76dd6 867: drh::a(cqb, drm$b, asc, dqw, int, drm$a, int, int, int) -> void
fifo write: @1699477150541988256 0x7f81e1930a07 2987: dtd::a(cqb, java.util.function.BiConsumer, asc, int, gw, dqw) -> java.util.List
fifo write: @1699477150545733224 0x7f81ea3ffc61 948: dpi::a(cqb, int, gw, dqw) -> int
fifo write: @1699477150554305534 0x7f81ea457d53 6872: dbc::a(dfj, cpy, gw) -> boolean
fifo write: @1699477150584727875 0x7f81ea3dfd36 3309: bus::gt() -> boolean
fifo write: @1699477150622911816 0x7f81ea4b58f4 759: eag::l(long) -> boolean
fifo write: @1699477150670652430 0x7f81e243009e 2130: ebb::a(ebb) -> boolean
fifo write: @1699477150823045150 0x7f81e9a1d6d3 1272: biq::aT() -> boolean
fifo write: @1699477150869769371 0x7f81ea3cd4f7 784: it.unimi.dsi.fastutil.shorts.ShortIterator::next() -> Object
fifo write: @1699477150913442733 0x7f81e19c2534 922: akq$a::d(Object) -> void
fifo write: @1699477150913494614 0x7f81e15dbeb4 576: akq$a::d(biq) -> void
fifo write: @1699477150913545225 0x7f81e14a6cd7 1093: djl::d(dja) -> void
fifo write: @1699477150913594615 0x7f81e22ad194 461: djg::b(biq) -> void
fifo write: @1699477150915423149 0x7f81eac1cb88 13882: bjg::h(ehn) -> void
fifo write: @1699477150915483410 0x7f81e9a1d056 205: ajy::b(java.util.List, cpv, gw, dfj) -> void
fifo write: @1699477150923455152 0x7f81e985166c 1918: cxi::b(dfj, cpv, gw, dfj, boolean) -> void
fifo write: @1699477150935902432 0x7f81ea3df3d5 174: dkm$e::equals(Object) -> boolean
fifo write: @1699477150942554838 0x7f81e9bb8658 587: dkm$g::equals(Object) -> boolean
fifo write: @1699477151019628139 0x7f81e1c59194 240: com.google.common.collect.Maps$IteratorBasedAbstractMap$1::iterator() -> java.util.Iterator
fifo write: @1699477151019834111 0x7f81e17681b7 2684: com.google.common.collect.Maps$TransformedEntriesMap::entryIterator() -> java.util.Iterator
fifo write: @1699477151020288497 0x7f81e22e6a14 240: com.google.common.collect.Maps$TransformedEntriesMap::size() -> int
fifo write: @1699477151020328258 0x7f81e2aa2994 505: qw$$Lambda$5307.0x00007f81609c3260::apply(Object) -> Object
fifo write: @1699477151129791776 0x7f81ea01175e 1861: it.unimi.dsi.fastutil.objects.ObjectIterators::unwrap(java.util.Iterator, Object[], int, int) -> int
fifo write: @1699477151141366655 0x7f81e2334af7 237: dpi::a(dss$a, dss) -> void
fifo write: @1699477151141405665 0x7f81e2adc794 586: dpi$$Lambda$8144.0x00007f8160cdd768::accept(Object) -> void
fifo write: @1699477151143019196 0x7f81e261463f 13419: dsp::a(dss$a) -> void
fifo write: @1699477151144189541 0x7f81e24a6134 138: dsz::a(int, int) -> boolean
fifo write: @1699477151144445974 0x7f81e1a20999 1027: dva::<init>(gw) -> void
fifo write: @1699477151179012729 0x7f81e1fc8994 1329: bwq::d(int, boolean) -> void
fifo write: @1699477151181635133 0x7f81e2538f54 1649: dsz::a(gw) -> int
fifo write: @1699477151193313153 0x7f81eac278f7 11696: cdl::q(double, double, double) -> ehn
fifo write: @1699477151193863410 0x7f81ea011051 438: apk::equals(Object) -> boolean
fifo write: @1699477151205721952 0x7f81e2ecb87f 21179: dol::a(dny) -> boolean
fifo write: @1699477151211092202 0x7f81e27383b4 799: dsz::b(int, int) -> float
fifo write: @1699477151212234256 0x7f81ea8ff273 576: java.util.TimSort::mergeCollapse() -> void
fifo write: @1699477151266905929 0x7f81ea010cd0 43: it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet::clear() -> void
fifo write: @1699477151278400107 0x7f81e2542494 105: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetSpliterator::characteristics() -> int
fifo write: @1699477151278624690 0x7f81e9a55250 99: dhq$d::b() -> boolean
fifo write: @1699477151285976134 0x7f81e29c5a07 3662: alp::a(abm) -> void
fifo write: @1699477151286087146 0x7f81e225b687 3860: abm::a(abc) -> void
fifo write: @1699477151286175107 0x7f81e2335a7f 3473: abm::a(su) -> void
fifo write: @1699477151286212077 0x7f81ea8fef4c 4: abm::a() -> float
fifo write: @1699477151300424970 0x7f81ea8fec53 9: io.netty.util.internal.ThreadLocalRandom::next(int) -> int
fifo write: @1699477151309243904 0x7f81e2f7657f 9112: dss$a::<init>(cqb, java.util.function.BiConsumer, asc, java.util.Set, java.util.Set, java.util.Set) -> void
fifo write: @1699477151315742557 0x7f81e299e3fb 1764: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet::rehash(int) -> void
fifo write: @1699477151374922319 0x7f81ea8fe1b4 611: bpv::a() -> boolean
fifo write: @1699477151418723812 0x7f81e2d996f4 403: aeg::a(so, Byte) -> void
fifo write: @1699477151418778382 0x7f81e1f10734 990: aeg$$Lambda$1397.0x00007f816054b5f0::accept(Object, Object) -> void
fifo write: @1699477151499615082 0x7f81eac2f373 8949: io.netty.channel.AbstractChannelHandlerContext::invokeChannelRead(io.netty.channel.AbstractChannelHandlerContext, Object) -> void
fifo write: @1699477151518737688 0x7f81e1cbd074 20: bsp::n() -> void
fifo write: @1699477151618221237 0x7f81ea8fddcc 6: dvx::c() -> java.util.List
fifo write: @1699477151618558572 0x7f81e9f45e4c 2: dwk::c() -> int
fifo write: @1699477151618606012 0x7f81e9f45b4c 2: dwk::a() -> int
fifo write: @1699477151618657033 0x7f81e9f4584c 6: dve::b() -> dwp
fifo write: @1699477151628215776 0x7f81e1effe54 144: dkf::a(int) -> boolean
fifo write: @1699477151628352648 0x7f81e282dffc 5597: dkf::a(dkl$b) -> double
fifo write: @1699477151628394599 0x7f81e9f4554c 2: dwk::b() -> int
fifo write: @1699477151629313010 0x7f81e2bbb377 1271: dkf::a(int, int, int, int) -> double
fifo write: @1699477151631085833 0x7f81ea372df5 2334: java.util.concurrent.CompletableFuture$BiRelay::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477151631199374 0x7f81e242dab4 1030: bjg$$Lambda$8117.0x00007f8160cd5a98::accept(Object) -> void
fifo write: @1699477151631251795 0x7f81e2355597 641: bjg::a(qw, rq) -> void
fifo write: @1699477151636765866 0x7f81e9f44480 1139: dkf::a(dkl$b) -> double
fifo write: @1699477151637732509 0x7f81ea372a14 71: dkf::a(int, int, int, int) -> double
fifo write: @1699477151637851530 0x7f81e1d14b77 1271: dkf::a(int, int, int, int) -> double
fifo write: @1699477151638037622 0x7f81e25037fc 5597: dkf::a(dkl$b) -> double
fifo write: @1699477151638093103 0x7f81ea37258b 62: cpc::l() -> gw
fifo write: @1699477151647527855 0x7f81eaa2d380 2251: dkf::a(dkl$b) -> double
fifo write: @1699477151651898391 0x7f81eaa2ca53 368: dkf::a(int, int, int, int) -> double
fifo write: @1699477151651944881 0x7f81ea3a2ee6 31: arw::g(double) -> double
fifo write: @1699477151768629742 0x7f81e27297f4 1333: bjg::eZ() -> float
fifo write: @1699477151768757704 0x7f81e280517f 2710: bjg::fa() -> void
fifo write: @1699477151816772521 0x7f81eac35cd3 7989: bus$1::c() -> void
fifo write: @1699477151816831522 0x7f81ea3a28e8 3: java.nio.ByteBuffer::order(java.nio.ByteOrder) -> java.nio.ByteBuffer
fifo write: @1699477151838282918 0x7f81e1add6d9 1260: akx::f(gw) -> void
fifo write: @1699477151863658664 0x7f81e2268d14 139: csw$$Lambda$763.0x00007f8160377520::test(dfj, cpb, gw) -> boolean
fifo write: @1699477151863704775 0x7f81e2ef6ef9 285: dpk::c(cqp, gw) -> int
fifo write: @1699477151863752495 0x7f81e24f0839 639: dpk$$Lambda$8130.0x00007f8160cd26e8::applyAsInt(Object) -> int
fifo write: @1699477151871435564 0x7f81ea89c90b 7660: java.util.TimSort::sort(Object[], int, int, java.util.Comparator, Object[], int, int) -> void
fifo write: @1699477151891125268 0x7f81e2fd2e9f 21933: dol::a(dny) -> boolean
fifo write: @1699477151904024653 0x7f81ea455099 4394: com.google.common.collect.ImmutableMap$Builder::build(boolean) -> com.google.common.collect.ImmutableMap
fifo write: @1699477151922207277 0x7f81e8bf8428 27: vtable stub
fifo write: @1699477151938539077 0x7f81ea1461d4 5779: yo$a::a(so) -> void
fifo write: @1699477151951714087 0x7f81ea89c3d9 146: dom$$Lambda$8083.0x00007f8160ccda18::test(Object) -> boolean
fifo write: @1699477151969354254 0x7f81e9e9e1be 1729: hn::a(int, Object) -> hn
fifo write: @1699477151970527309 0x7f81e996a902 498: eak::a(cpw, gw, dfj, ha, eam) -> void
fifo write: @1699477151977894294 0x7f81e264bb94 2541: biq::aI() -> float
fifo write: @1699477151977940464 0x7f81e2726a19 1749: bjg::eY() -> float
fifo write: @1699477151997234473 0x7f81e979339e 5454: cuz::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477152021139770 0x7f81ea145b2c 30: cqm::a(cqm) -> java.util.Optional
fifo write: @1699477152021204671 0x7f81e9571dac 30: cqm::b(cqm) -> qw
fifo write: @1699477152074114041 0x7f81e2432b20 1103: bts::a(bjg, bjg) -> boolean
fifo write: @1699477152081112691 0x7f81ea61e199 16115: bjg::aq() -> void
fifo write: @1699477152082414238 0x7f81ea4b127c 971: td::a(io.netty.buffer.ByteBuf, long) -> io.netty.buffer.ByteBuf
fifo write: @1699477152088970992 0x7f81e975a423 2142: biq::aZ() -> boolean
fifo write: @1699477152089557120 0x7f81ea454950 395: ajy$$Lambda$7961.0x00007f8160ca2458::accept(Object, Object) -> void
fifo write: @1699477152105309942 0x7f81eaab73f1 5125: bjg::c(gw) -> void
fifo write: @1699477152122231990 0x7f81e8bf8458 27: vtable stub
fifo write: @1699477152171968350 0x7f81eaab26a3 1424: bjg::eo() -> boolean
fifo write: @1699477152233426350 0x7f81eac3c7fe 27593: ebd::a(bdp, eaz, java.util.Map, float, int, float) -> ebb
fifo write: @1699477152358016622 0x7f81ea9b2cff 252: alm::b(vd) -> void
fifo write: @1699477152364545536 0x7f81eaab6e57 117: java.util.Optional::filter(java.util.function.Predicate) -> java.util.Optional
fifo write: @1699477152369056394 0x7f81ea667cfa 2201: java.util.concurrent.CompletableFuture::cancel(boolean) -> boolean
fifo write: @1699477152374683047 0x7f81e9759dcc 6: dve::e() -> java.util.List
fifo write: @1699477152374714277 0x7f81ea45464c 2: dve::d() -> int
fifo write: @1699477152375457166 0x7f81e229f8f4 67: dvi::d() -> dvt
fifo write: @1699477152375742460 0x7f81ea454235 35: dva::a(int, int, int, int) -> boolean
fifo write: @1699477152375873992 0x7f81ea9b27d4 139: dvm::a(cpc, int) -> boolean
fifo write: @1699477152383514130 0x7f81ea9b24cc 6: dkf$a::b() -> dvt
fifo write: @1699477152383558231 0x7f81ea9b21cc 2: dkf$a::c() -> int
fifo write: @1699477152383599491 0x7f81ea9b1ecc 6: dkf$a::a() -> dva
fifo write: @1699477152383709313 0x7f81e284dfdc 5155: dkf::a(dkl$b) -> double
fifo write: @1699477152405897168 0x7f81ea658de0 4655: dkf::a(dkl$b) -> double
fifo write: @1699477152406985752 0x7f81e2d1a9f7 1271: dkf::a(int, int, int, int) -> double
fifo write: @1699477152407084363 0x7f81e298515c 5155: dkf::a(dkl$b) -> double
fifo write: @1699477152408800165 0x7f81ea658559 306: dkf::a(int, int, int, int) -> double
fifo write: @1699477152423294012 0x7f81eaa8c7e0 4423: dkf::a(dkl$b) -> double
fifo write: @1699477152436844926 0x7f81eaaa7e4f 2864: brj$$Lambda$7226.0x00007f8160bb0bc0::test(Object) -> boolean
fifo write: @1699477152467900766 0x7f81eaa8c250 139: java.util.BitSet::clear() -> void
fifo write: @1699477152511646398 0x7f81ea3a139d 2342: java.security.MessageDigest$Delegate::clone() -> Object
fifo write: @1699477152519253756 0x7f81e2e85894 2010: bvl$f::a() -> boolean
fifo write: @1699477152519797933 0x7f81e2338059 3401: bpq::a() -> boolean
fifo write: @1699477152523521361 0x7f81ea9b1b5c 51: jdk.internal.misc.Unsafe::putLongUnaligned(Object, long, long, boolean) -> void
fifo write: @1699477152566431603 0x7f81ea3a102f 24: io.netty.channel.epoll.EpollEventArray::getInt(int, int) -> int
fifo write: @1699477152569745585 0x7f81e2298194 47: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::int2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477152569789866 0x7f81e22c9439 197: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::clear() -> void
fifo write: @1699477152569882667 0x7f81e233c03a 1013: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap::int2ObjectEntrySet() -> it.unimi.dsi.fastutil.ints.Int2ObjectSortedMap$FastSortedEntrySet
fifo write: @1699477152569943138 0x7f81e247f53a 922: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapEntrySet::fastIterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477152570000979 0x7f81e2adbb12 745: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapEntrySet::fastIterator() -> it.unimi.dsi.fastutil.objects.ObjectListIterator
fifo write: @1699477152570061369 0x7f81e1b237b4 627: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$FastEntryIterator::<init>(it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap) -> void
fifo write: @1699477152570115490 0x7f81e25dbc94 240: it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap$MapEntry::<init>(it.unimi.dsi.fastutil.ints.Int2ObjectLinkedOpenHashMap) -> void
fifo write: @1699477152577824949 0x7f81eaaa61d6 3079: com.google.common.hash.MessageDigestHashFunction::newHasher() -> com.google.common.hash.Hasher
fifo write: @1699477152589425028 0x7f81ea61b6b4 3242: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher::hash() -> com.google.common.hash.HashCode
fifo write: @1699477152597398741 0x7f81eaa8bee2 47: dki::c(int) -> dki
fifo write: @1699477152627301575 0x7f81ea1a7206 12489: dzw::a(cpb, int, int, int) -> boolean
fifo write: @1699477152635568042 0x7f81e266c197 232: cxv::d(dfj, cpb, gw) -> boolean
fifo write: @1699477152635893216 0x7f81e258211c 2582: cxv::a(dfj, cpy, gw) -> boolean
fifo write: @1699477152638904445 0x7f81eaaa541e 1415: it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap::<init>(int, float) -> void
fifo write: @1699477152654201202 0x7f81eaaa4b84 279: daf::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477152677056635 0x7f81ea3a0d4c 6: dyx::i() -> java.util.List
fifo write: @1699477152677131656 0x7f81e251f139 896: dyq::a(dfj, dfj, gw, gw, gw, asc) -> boolean
fifo write: @1699477152677243158 0x7f81e216fc94 867: dye::a(dfj, asc) -> boolean
fifo write: @1699477152677707854 0x7f81e2a86e34 1247: dys::a(dfj, asc) -> boolean
fifo write: @1699477152678392083 0x7f81e20a279a 2685: dyi::a(cpy, gw, gw, dzb$c, dzb$c, dyx) -> dzb$c
fifo write: @1699477152678500864 0x7f81e2dc3e2c 3465: dyu::a(cpy, gw, gw, dzb$c, dzb$c, dyx) -> dzb$c
fifo write: @1699477152678684756 0x7f81e1dd4bfc 3352: dyj::a(cpy, gw, gw, dzb$c, dzb$c, dyx) -> dzb$c
fifo write: @1699477152678852339 0x7f81e2a9a3b4 858: dyd::a(cpy, gw, gw, dzb$c, dzb$c, dyx) -> dzb$c
fifo write: @1699477152680655782 0x7f81ea1a6593 712: com.google.common.collect.ImmutableList::contains(Object) -> boolean
fifo write: @1699477152680863994 0x7f81ea1a59f2 893: com.google.common.collect.ImmutableList::indexOf(Object) -> int
fifo write: @1699477152683882423 0x7f81ea61aaf4 879: com.google.common.collect.Lists::indexOfRandomAccess(java.util.List, Object) -> int
fifo write: @1699477152684347769 0x7f81ea619e53 1056: com.google.common.collect.Lists::indexOfImpl(java.util.List, Object) -> int
fifo write: @1699477152685687927 0x7f81ea6191d0 861: dzb::a(dyx, gw) -> gw
fifo write: @1699477152712552442 0x7f81ea1a56cc 4: bil$a::d() -> float
fifo write: @1699477152724411174 0x7f81e1b216d7 1017: dxe$c::a(dvy, qw) -> void
fifo write: @1699477152730680245 0x7f81e2dab334 178: biq::de() -> double
fifo write: @1699477152789543112 0x7f81ea615bf6 4089: bwq::eX() -> boolean
fifo write: @1699477152806682652 0x7f81ea0c51ff 6090: aka::a(cpc, boolean) -> java.util.List
fifo write: @1699477152817612543 0x7f81ea1a5250 55: bsb::l() -> double
fifo write: @1699477152864740049 0x7f81e2d34594 3534: cta::h(dfj) -> boolean
fifo write: @1699477152867541375 0x7f81e1edb297 550: io.netty.channel.epoll.Native::epollWait(io.netty.channel.unix.FileDescriptor, io.netty.channel.epoll.EpollEventArray, int) -> int
fifo write: @1699477152916967860 0x7f81ea615650 95: akk::a() -> java.util.Set
fifo write: @1699477152966817742 0x7f81ea0c44f3 756: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::put(long, long) -> long
fifo write: @1699477152968032697 0x7f81eaa8b9d3 330: java.util.IdentityHashMap::keySet() -> java.util.Set
fifo write: @1699477153001449707 0x7f81ea0c007f 6078: aka::a(cpc, boolean) -> java.util.List
fifo write: @1699477153019079154 0x7f81eab3307d 7658: bts::a(bjg, bjg) -> boolean
fifo write: @1699477153110256157 0x7f81ea6151b0 75: djn::a(akj) -> djn
fifo write: @1699477153118036887 0x7f81eaa8b4d0 43: dwp::e() -> dwr$a
fifo write: @1699477153122867099 0x7f81eab324d6 453: it.unimi.dsi.fastutil.longs.LongOpenHashSet::removeEntry(int) -> boolean
fifo write: @1699477153127990904 0x7f81eab3114d 1310: dhf::a(cqw, crc$f) -> void
fifo write: @1699477153256475297 0x7f81ea0bf9dc 51: java.nio.ByteBuffer::clear() -> java.nio.Buffer
fifo write: @1699477153289203968 0x7f81eab30310 644: dpi$$Lambda$8090.0x00007f8160ccee58::accept(Object, Object) -> void
fifo write: @1699477153296880087 0x7f81e25b781d 515: dsz$a::<init>(gw, int) -> void
fifo write: @1699477153296959088 0x7f81eab2ff08 45: it.unimi.dsi.fastutil.objects.ObjectArrayList$$Lambda$390.0x00007f816024abc8::get() -> Object
fifo write: @1699477153297173330 0x7f81e2b22bb6 745: drl::a(cqb, drm$b, asc, dqw, int, drm$a, int, int, int) -> void
fifo write: @1699477153301821200 0x7f81eab2ecd2 1400: akt::a(gw) -> void
fifo write: @1699477153325189700 0x7f81eaafefdd 3202: dnr::a(asc, int, int, float, int, dpy) -> int
fifo write: @1699477153325927430 0x7f81eab2e659 146: dns$$Lambda$8011.0x00007f8160cb2710::test(Object) -> boolean
fifo write: @1699477153332324923 0x7f81e216e374 543: aew::a(char) -> boolean
fifo write: @1699477153340563938 0x7f81e279a594 160: ro::d() -> rq
fifo write: @1699477153342854778 0x7f81eaafe139 998: dyq::a(dfj, dfj, gw, gw, gw, asc) -> boolean
fifo write: @1699477153364073981 0x7f81eaafdd90 39: com.google.common.base.Preconditions::checkArgument(boolean, String, int) -> void
fifo write: @1699477153370198970 0x7f81e2b05121 8043: io.netty.util.concurrent.SingleThreadEventExecutor::runAllTasks(long) -> boolean
fifo write: @1699477153391528804 0x7f81e291017a 4532: net.minecraft.server.MinecraftServer::c(Runnable) -> void
fifo write: @1699477153391742206 0x7f81e2dd821c 1753: bfo::c(Runnable) -> void
fifo write: @1699477153418869225 0x7f81e257bc6d 516: dva::f() -> gw
fifo write: @1699477153422049066 0x7f81e1bee25a 1337: dfi$a::a(cpb, gw, ha) -> eig
fifo write: @1699477153423041709 0x7f81eaafda59 62: dlj$a::apply(Object) -> Object
fifo write: @1699477153521553906 0x7f81e2f6fdd4 4249: biq::aJ() -> float
fifo write: @1699477153522005352 0x7f81e233cc94 983: it.unimi.dsi.fastutil.ints.Int2ObjectMaps::fastIterable(it.unimi.dsi.fastutil.ints.Int2ObjectMap) -> it.unimi.dsi.fastutil.objects.ObjectIterable
fifo write: @1699477153522091963 0x7f81e282d994 240: it.unimi.dsi.fastutil.ints.Int2ObjectMaps$1::<init>(it.unimi.dsi.fastutil.objects.ObjectSet) -> void
fifo write: @1699477153681140968 0x7f81eaafbba0 2792: io.netty.util.concurrent.SingleThreadEventExecutor::execute(Runnable) -> void
fifo write: @1699477153794688818 0x7f81ea9692e3 7639: eay::a(int, int, int) -> eaz
fifo write: @1699477153807887509 0x7f81eaaf8bdc 3730: eay::c(int, int, int) -> eax
fifo write: @1699477153815830220 0x7f81e2367f94 327: io.netty.util.internal.DefaultPriorityQueue::peek() -> Object
fifo write: @1699477153830619441 0x7f81e2b14494 750: dkf$$Lambda$8039.0x00007f8160cba408::test(Object) -> boolean
fifo write: @1699477153830677461 0x7f81e2647614 328: dkf$a::<init>(dva, dvt, int) -> void
fifo write: @1699477153830941715 0x7f81e26b8274 405: dkf::a(dvi) -> boolean
fifo write: @1699477153831009876 0x7f81e2902514 240: cqn::a(hw, dvi, long, dic) -> void
fifo write: @1699477153831087867 0x7f81eaaf8553 180: java.nio.HeapByteBuffer::putLong(long) -> java.nio.ByteBuffer
fifo write: @1699477153831258699 0x7f81e2bc9a54 1124: dhf::a(dvi, long) -> void
fifo write: @1699477153838256359 0x7f81ea967697 2136: com.google.common.hash.AbstractByteHasher::update(int) -> com.google.common.hash.Hasher
fifo write: @1699477153842200130 0x7f81e2a7c517 11516: dkv::a(cpx, dlg, int, int, org.apache.commons.lang3.mutable.MutableObject, java.util.function.Predicate) -> java.util.OptionalInt
fifo write: @1699477153900825454 0x7f81e2c173d6 4363: java.util.HashMap$TreeNode::putTreeVal(java.util.HashMap, java.util.HashMap$Node[], int, Object, Object) -> java.util.HashMap$TreeNode
fifo write: @1699477153924861582 0x7f81ea965370 2661: akq$$Lambda$5347.0x00007f8160a2d000::test(long) -> boolean
fifo write: @1699477153966734581 0x7f81eaaf7dd8 167: bka::a(biu, cqk, bjk, gw, asc) -> boolean
fifo write: @1699477153971446822 0x7f81e25ba7af 8634: dzu::a(long, long) -> void
fifo write: @1699477154038499164 0x7f81e2d46612 1270: dnq::a(dpx, cqp, asc, int, int, gw$a) -> boolean
fifo write: @1699477154046993343 0x7f81ea964270 948: dte::a(cqb, java.util.function.BiConsumer, asc, gw, dqw, java.util.function.Function) -> boolean
fifo write: @1699477154078705501 0x7f81e2dee4d7 1711: dvm::b(cpy, int, int, int, dva) -> boolean
fifo write: @1699477154082220526 0x7f81e2ba1b5c 1168: dxe$c::a(cqp, dva, dfj, int, int, int) -> void
fifo write: @1699477154082411769 0x7f81e1e93cdd 999: dxe$a::a(cqp, dva, asc, float, int, int, int) -> void
fifo write: @1699477154093706124 0x7f81eaaf77cc 3: dyx::j() -> boolean
fifo write: @1699477154095144703 0x7f81ea9191e2 7983: dks::a(int, int, int, dfj) -> boolean
fifo write: @1699477154095313565 0x7f81eaaf744c 3: dyx::h() -> boolean
fifo write: @1699477154095844632 0x7f81e1cbee97 2402: com.google.common.collect.Maps::transformValues(java.util.Map, com.google.common.base.Function) -> java.util.Map
fifo write: @1699477154095971503 0x7f81e2762a14 784: com.google.common.collect.Maps::asEntryTransformer(com.google.common.base.Function) -> com.google.common.collect.Maps$EntryTransformer
fifo write: @1699477154096016764 0x7f81e2aec914 240: com.google.common.collect.Maps$9::<init>(com.google.common.base.Function) -> void
fifo write: @1699477154096273477 0x7f81e140d7b1 1893: com.google.common.collect.Maps::transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer) -> java.util.Map
fifo write: @1699477154096688843 0x7f81e2798117 3510: qw::h() -> qw
fifo write: @1699477154101837018 0x7f81e30ffe7f 3740: ead::a(long, dfj, long, dfj, ha) -> boolean
fifo write: @1699477154102018691 0x7f81ea96237a 2432: dhy::a(dhy$c, int) -> dhy$c
fifo write: @1699477154103484299 0x7f81e1cbb71c 1935: ead::d() -> int
fifo write: @1699477154103751923 0x7f81ea918956 121: dfi$a::a(czh) -> dfj
fifo write: @1699477154104140968 0x7f81ea91854f 98: com.google.common.collect.SingletonImmutableList::iterator() -> com.google.common.collect.UnmodifiableIterator
fifo write: @1699477154106089343 0x7f81ea9178f5 346: ead::a(dfj, long, ha) -> eig
fifo write: @1699477154117369368 0x7f81ea91418e 5332: dyu::a(cpy, gw, gw, dzb$c, dzb$c, dyx) -> dzb$c
fifo write: @1699477154128422981 0x7f81e2a2671f 4192: aew::a(com.mojang.brigadier.StringReader) -> aew
fifo write: @1699477154129038738 0x7f81e2613e74 67: hm$1::f() -> aev
fifo write: @1699477154129101129 0x7f81ea913d4c 6: fi$a::a() -> dfj
fifo write: @1699477154129197440 0x7f81e2f75e14 185: hg$c$$Lambda$4224.0x00007f81608b2c30::<init>(cec) -> void
fifo write: @1699477154129342542 0x7f81e2977c0a 586: hg::a(java.util.function.Predicate) -> hg
fifo write: @1699477154129496034 0x7f81e24683e1 2241: hg$c::a(cec) -> hg
fifo write: @1699477154129560275 0x7f81e30ff914 185: hg$a::<init>(hg) -> void
fifo write: @1699477154129607816 0x7f81e1bd5a94 479: hg$1::<init>(hg, hg, java.util.function.Predicate) -> void
fifo write: @1699477154130165613 0x7f81ea886f0c 5664: eid::b(eig, eig, ehr) -> eig
fifo write: @1699477154133186941 0x7f81e24c6f37 2032: com.mojang.brigadier.StringReader::readUnquotedString() -> String
fifo write: @1699477154133266702 0x7f81e268ecd7 2092: com.mojang.brigadier.StringReader::readString() -> String
fifo write: @1699477154133668288 0x7f81ea912864 1179: ead::a(long, dfj, long, dfj, ha) -> boolean
fifo write: @1699477154134224615 0x7f81e1eaf4d4 1023: cpy::a(aev) -> hg
fifo write: @1699477154135229678 0x7f81ea880398 10391: eaf::a(long, long, int) -> void
fifo write: @1699477154135385670 0x7f81ea912414 87: ead$a::a(int, boolean, ha) -> long
fifo write: @1699477154135597852 0x7f81ea912153 56: eaf::a(long, ha, int, boolean, int) -> void
fifo write: @1699477154136567185 0x7f81ea87f674 1130: ehq$$Lambda$596.0x00007f81603277d0::<init>(ehz, ehz, ehr, ehw, ehw, ehq, int[]) -> void
fifo write: @1699477154136845889 0x7f81e8c29900 496: I2C/C2I adapters(0xbbb6bbbbe)
fifo write: @1699477154138335468 0x7f81ea87e250 483: dyd::a(cpy, gw, gw, dzb$c, dzb$c, dyx) -> dzb$c
fifo write: @1699477154138922295 0x7f81eac4c275 1262: dyj::a(cpy, gw, gw, dzb$c, dzb$c, dyx) -> dzb$c
fifo write: @1699477154138995406 0x7f81e8c29600 464: I2C/C2I adapters(0xbb6bbb)
fifo write: @1699477154139354561 0x7f81e8bf8488 168: itable stub
fifo write: @1699477154140683668 0x7f81e8c29300 456: I2C/C2I adapters(0xbab6b)
fifo write: @1699477154140697408 0x7f81e8c29000 512: I2C/C2I adapters(0xbbabb6bbbe)
fifo write: @1699477154140710618 0x7f81e8c28d00 464: I2C/C2I adapters(0xbab6bb)
fifo write: @1699477154140939721 0x7f81e8c28a00 464: I2C/C2I adapters(0xbbab6b)
fifo write: @1699477154140977072 0x7f81e8c28700 456: I2C/C2I adapters(0xbbab6)
fifo write: @1699477154141209585 0x7f81e8c28400 464: I2C/C2I adapters(0xbbbab6)
fifo write: @1699477154141368777 0x7f81e8c28100 472: I2C/C2I adapters(0xbab6bbb)
fifo write: @1699477154141452388 0x7f81e8c27e00 472: I2C/C2I adapters(0xbbab6bb)
fifo write: @1699477154141652481 0x7f81e8c27b00 464: I2C/C2I adapters(0xbab6ab)
fifo write: @1699477154141667511 0x7f81e8c27800 472: I2C/C2I adapters(0xbab6abb)
fifo write: @1699477154141682101 0x7f81e8c27500 528: I2C/C2I adapters(0xbbabb6abbbe)
fifo write: @1699477154141765742 0x7f81e8c27200 472: I2C/C2I adapters(0xbbab6ab)
fifo write: @1699477154141792392 0x7f81e8c26f00 464: I2C/C2I adapters(0xbbab6a)
fifo write: @1699477154142000965 0x7f81e8c26c00 472: I2C/C2I adapters(0xbbbab6a)
fifo write: @1699477154142060316 0x7f81e8c26900 496: I2C/C2I adapters(0xbab6abbb)
fifo write: @1699477154142140257 0x7f81e8c26600 496: I2C/C2I adapters(0xbbab6abb)
fifo write: @1699477154142353210 0x7f81e8c26300 448: I2C/C2I adapters(0xb6aab)
fifo write: @1699477154142366380 0x7f81e8c26000 560: I2C/C2I adapters(0xbbbabb6abbbe)
fifo write: @1699477154142462131 0x7f81e8c25d00 496: I2C/C2I adapters(0xbbbab6ab)
fifo write: @1699477154142726074 0x7f81e8c25a00 496: I2C/C2I adapters(0xbbbbab6a)
fifo write: @1699477154142785145 0x7f81e8c25700 512: I2C/C2I adapters(0xbab6abbbb)
fifo write: @1699477154142865826 0x7f81e8c25400 512: I2C/C2I adapters(0xbbab6abbb)
fifo write: @1699477154143805038 0x7f81e8c25100 520: I2C/C2I adapters(0xbbabbbbbbe)
fifo write: @1699477154144216524 0x7f81e8c24e00 448: I2C/C2I adapters(0xb6aaa)
fifo write: @1699477154144232984 0x7f81e8c24b00 464: I2C/C2I adapters(0xbaa6ab)
fifo write: @1699477154144248904 0x7f81e8c24800 512: I2C/C2I adapters(0xbaba6abbb)
fifo write: @1699477154144264554 0x7f81e8c24500 576: I2C/C2I adapters(0xbbbabab6abbbe)
fifo write: @1699477154144280395 0x7f81e8c24200 472: I2C/C2I adapters(0xbaa6abb)
fifo write: @1699477154144365706 0x7f81e8c23f00 464: I2C/C2I adapters(0xbbaa6a)
fifo write: @1699477154144593159 0x7f81e8c23c00 472: I2C/C2I adapters(0xbbbaa6a)
fifo write: @1699477154144655109 0x7f81e8c23900 536: I2C/C2I adapters(0xbaba6abbbb)
fifo write: @1699477154144741210 0x7f81e8c23600 528: I2C/C2I adapters(0xbbaba6abbb)
fifo write: @1699477154144796631 0x7f81e8c23300 472: I2C/C2I adapters(0xbbaba6a)
fifo write: @1699477154144810441 0x7f81e8c23000 496: I2C/C2I adapters(0xbbaba6ab)
fifo write: @1699477154145021034 0x7f81e8c22d00 496: I2C/C2I adapters(0xbbbaba6a)
fifo write: @1699477154145035434 0x7f81e8c22a00 472: I2C/C2I adapters(0xbaba6ab)
fifo write: @1699477154146359931 0x7f81e8c22700 520: I2C/C2I adapters(0xbbbbbbbbbe)
fifo write: @1699477154148446738 0x7f81e8c22400 448: I2C/C2I adapters(0xaba6b)
fifo write: @1699477154148467058 0x7f81e8c22100 560: I2C/C2I adapters(0xbbbba6bbbbbe)
fifo write: @1699477154148485748 0x7f81e8c21e00 496: I2C/C2I adapters(0xbba6bbbb)
fifo write: @1699477154148538759 0x7f81e8c21b00 464: I2C/C2I adapters(0xaba6bb)
fifo write: @1699477154148646390 0x7f81e8c21800 464: I2C/C2I adapters(0xbaba6b)
fifo write: @1699477154148691891 0x7f81e8c21500 456: I2C/C2I adapters(0xbaba6)
fifo write: @1699477154148950944 0x7f81e8c21200 464: I2C/C2I adapters(0xbbaba6)
fifo write: @1699477154148968404 0x7f81e8c20f00 512: I2C/C2I adapters(0xbba6bbbbb)
fifo write: @1699477154149069056 0x7f81e8c20c00 512: I2C/C2I adapters(0xbbba6bbbb)
fifo write: @1699477154149102996 0x7f81e8c20900 464: I2C/C2I adapters(0xbbba6b)
fifo write: @1699477154149362419 0x7f81e8c20600 464: I2C/C2I adapters(0xbbbba6)
fifo write: @1699477154149855546 0x7f81e8c20300 520: I2C/C2I adapters(0xabbbbbbbbe)
fifo write: @1699477154150447603 0x7f81e8c20000 480: I2C/C2I adapters(0xabbbbbb)
fifo write: @1699477154150841978 0x7f81eac54e65 1218: java.lang.invoke.MemberName::<init>(Class, String, java.lang.invoke.MethodType, byte) -> void
fifo write: @1699477154151493377 0x7f81e8c1fd00 512: I2C/C2I adapters(0xbbbbb6bbbe)
fifo write: @1699477154151986363 0x7f81e8c1fa00 496: I2C/C2I adapters(0xbb6bbbbb)
fifo write: @1699477154153289840 0x7f81e8c1f700 488: I2C/C2I adapters(0xbbbbbbeb)
fifo write: @1699477154154141381 0x7f81e8c1f400 472: I2C/C2I adapters(0xbbb6bbbe)
fifo write: @1699477154154573357 0x7f81e8c1f100 456: I2C/C2I adapters(0xb6bbbe)
fifo write: @1699477154154866270 0x7f81e8c1ee00 432: I2C/C2I adapters(0x6ab)
fifo write: @1699477154154884981 0x7f81e8c1eb00 464: I2C/C2I adapters(0xb6abbbe)
fifo write: @1699477154154904831 0x7f81e8c1e800 448: I2C/C2I adapters(0x6abb)
fifo write: @1699477154155010462 0x7f81e8c1e500 448: I2C/C2I adapters(0xb6ab)
fifo write: @1699477154155469348 0x7f81e8c1e200 456: I2C/C2I adapters(0xbab6a)
fifo write: @1699477154155485558 0x7f81e8c1df00 536: I2C/C2I adapters(0xbbba6abbbb)
fifo write: @1699477154155500889 0x7f81e8c1dc00 472: I2C/C2I adapters(0xbbba6ab)
fifo write: @1699477154155516349 0x7f81e8c1d900 472: I2C/C2I adapters(0xbabbb6a)
fifo write: @1699477154155531629 0x7f81e8c1d600 608: I2C/C2I adapters(0xbbbbabbb6abbbe)
fifo write: @1699477154155646140 0x7f81e8c1d300 496: I2C/C2I adapters(0xbbba6abb)
fifo write: @1699477154155732442 0x7f81e8c1d000 496: I2C/C2I adapters(0xbbbba6ab)
fifo write: @1699477154155762212 0x7f81e8c1cd00 472: I2C/C2I adapters(0xbbbba6a)
fifo write: @1699477154155991275 0x7f81e8c1ca00 496: I2C/C2I adapters(0xbbbbba6a)
fifo write: @1699477154156108816 0x7f81e8c1c700 552: I2C/C2I adapters(0xbbba6abbbbb)
fifo write: @1699477154156195018 0x7f81e8c1c400 552: I2C/C2I adapters(0xbbbba6abbbb)
fifo write: @1699477154156516112 0x7f81e8c1c100 440: I2C/C2I adapters(0xaa6b)
fifo write: @1699477154156537722 0x7f81e8c1be00 472: I2C/C2I adapters(0xaab6bbbe)
fifo write: @1699477154156559712 0x7f81e8c1bb00 448: I2C/C2I adapters(0xaa6bb)
fifo write: @1699477154157066929 0x7f81e8c1b800 520: I2C/C2I adapters(0xbbbbbabbbe)
fifo write: @1699477154160911348 0x7f81e8c1b500 472: I2C/C2I adapters(0xbaba6bb)
fifo write: @1699477154160930739 0x7f81e8c1b200 528: I2C/C2I adapters(0xbbabba6bbbe)
fifo write: @1699477154161147001 0x7f81e8c1af00 472: I2C/C2I adapters(0xbbaba6b)
fifo write: @1699477154161673958 0x7f81e8c1ac00 472: I2C/C2I adapters(0xbbbaba6)
fifo write: @1699477154162026253 0x7f81e8c1a900 496: I2C/C2I adapters(0xbaba6bbb)
fifo write: @1699477154162154064 0x7f81e8c1a600 496: I2C/C2I adapters(0xbbaba6bb)
fifo write: @1699477154162586070 0x7f81e30fad94 185: boj::<init>(boj$e) -> void
fifo write: @1699477154162646260 0x7f81e2866c74 405: boj::b(com.mojang.datafixers.kinds.App) -> boj$e
fifo write: @1699477154162792212 0x7f81e311bd74 302: boj::a(com.mojang.datafixers.kinds.App) -> boj
fifo write: @1699477154164135119 0x7f81eac5a4a1 1048: jdk.internal.org.objectweb.asm.ClassWriter::visitField(int, String, String, String, Object) -> jdk.internal.org.objectweb.asm.FieldVisitor
fifo write: @1699477154164762747 0x7f81e8c1a300 552: I2C/C2I adapters(0xbbbbbbbab6b)
fifo write: @1699477154164776658 0x7f81e8c1a000 632: I2C/C2I adapters(0xaabbbbbbbb6bbbe)
fifo write: @1699477154164790548 0x7f81e8c19d00 552: I2C/C2I adapters(0xaab6bbbbbbb)
fifo write: @1699477154164906119 0x7f81e2ef6514 119: cvr::f(dfj) -> boolean
fifo write: @1699477154164979350 0x7f81e8c14800 576: I2C/C2I adapters(0xaab6bbbbbbbb)
fifo write: @1699477154165075501 0x7f81e8c14500 576: I2C/C2I adapters(0xbaab6bbbbbbb)
fifo write: @1699477154165234783 0x7f81e3105816 165: cpv::a(gw, dfj, int) -> boolean
fifo write: @1699477154165248954 0x7f81e8c14200 448: I2C/C2I adapters(0xbaab6)
fifo write: @1699477154165263094 0x7f81e8c13f00 464: I2C/C2I adapters(0xbaab6b)
fifo write: @1699477154165462176 0x7f81e8c13c00 464: I2C/C2I adapters(0xbbaab6)
fifo write: @1699477154165472957 0x7f81e8c13900 448: I2C/C2I adapters(0xaab6b)
fifo write: @1699477154165747300 0x7f81eac5bd60 6875: java.security.Provider::getService(String, String) -> java.security.Provider$Service
fifo write: @1699477154165759970 0x7f81e8c19a00 520: I2C/C2I adapters(0xbbbababbbe)
fifo write: @1699477154166845694 0x7f81eac609cc 2: cdg::a() -> int
fifo write: @1699477154169512039 0x7f81eac60ccc 2: cdf::hashCode() -> int
fifo write: @1699477154169847583 0x7f81e311ea94 240: boj$d$1::<init>(bol) -> void
fifo write: @1699477154170066456 0x7f81e2b01b3a 656: boj$d::<init>(bol) -> void
fifo write: @1699477154170453021 0x7f81eac618fc 895: dkh::a(int) -> int
fifo write: @1699477154174713276 0x7f81eac626df 2546: com.mojang.datafixers.kinds.Applicative::ap(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154175075930 0x7f81e8c19700 472: I2C/C2I adapters(0xbbaaaa6)
fifo write: @1699477154175447975 0x7f81e8c19400 512: I2C/C2I adapters(0xbbaabaaa6)
fifo write: @1699477154177144527 0x7f81eac6434c 2: cjf::f(int) -> void
fifo write: @1699477154177337240 0x7f81eac64659 74: hm$$Lambda$536.0x00007f8160310b08::apply(Object) -> Object
fifo write: @1699477154177455791 0x7f81eac64a50 139: com.google.common.collect.Iterators$6::transform(Object) -> Object
fifo write: @1699477154178069329 0x7f81e2113914 293: cbl$i::<init>(cjf, int, int, int, int, float) -> void
fifo write: @1699477154179578118 0x7f81e2f7d52f 9831: sun.security.util.ManifestEntryVerifier::verify(java.util.Hashtable, java.util.Hashtable, java.util.Map) -> java.security.CodeSigner[]
fifo write: @1699477154179710390 0x7f81e22aaa5c 1928: java.util.jar.JarVerifier::mapSignersToCertArray(java.security.CodeSigner[]) -> java.security.cert.Certificate[]
fifo write: @1699477154179750680 0x7f81e2dfc434 39: cbl$i::<init>(cjf, int, int, int, int) -> void
fifo write: @1699477154180501410 0x7f81e2e72282 10336: java.util.jar.JarVerifier::processEntry(sun.security.util.ManifestEntryVerifier) -> void
fifo write: @1699477154184556932 0x7f81e30f1c47 10416: dzb::a(cqk, gw, gw, dyx, java.util.List) -> java.util.List
fifo write: @1699477154185535255 0x7f81e22d9cc0 247: boj::a() -> boj$b
fifo write: @1699477154185627036 0x7f81e17e7757 1857: boj::a(java.util.function.Function) -> bmh
fifo write: @1699477154185656416 0x7f81e30eff14 137: boj$b::<init>() -> void
fifo write: @1699477154185951940 0x7f81e16bcf46 1344: boj$b::a(Object) -> boj
fifo write: @1699477154186053341 0x7f81e242c4f7 1233: boj$a::<init>(Object) -> void
fifo write: @1699477154186118702 0x7f81e2502f94 185: boj$a$$Lambda$8260.0x00007f8160cfc448::<init>(Object) -> void
fifo write: @1699477154186221184 0x7f81e3103494 340: boj$a$1::<init>(Object, java.util.function.Supplier) -> void
fifo write: @1699477154186308825 0x7f81e2d2853d 760: boj$a::<init>(Object, java.util.function.Supplier) -> void
fifo write: @1699477154186348565 0x7f81e311df43 292: boj::a(boj$e) -> boj
fifo write: @1699477154186616389 0x7f81ea4b4b7e 1188: dyi::a(cpy, gw, gw, dzb$c, dzb$c, dyx) -> dzb$c
fifo write: @1699477154186664099 0x7f81e242e8a9 1244: boj$b::b(bsh) -> boj
fifo write: @1699477154186705350 0x7f81e2e71a14 279: bol$b::<init>(bsh) -> void
fifo write: @1699477154186830711 0x7f81e2f51577 1400: boj$b::point(Object) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154186876042 0x7f81e21860ba 645: bnf::a(Object, int) -> bnf
fifo write: @1699477154186912332 0x7f81e1957414 188: bnf$a::<init>(Object, int) -> void
fifo write: @1699477154190144814 0x7f81e2b24abf 1934: com.mojang.brigadier.StringReader::readUnquotedString() -> String
fifo write: @1699477154190198235 0x7f81e2722bf4 1045: czh::a(ha) -> ha
fifo write: @1699477154190435098 0x7f81e1bac77d 404: fi::a(hg, String, boolean) -> fi$a
fifo write: @1699477154190522149 0x7f81e228b5b4 883: akx::G() -> cec
fifo write: @1699477154190554230 0x7f81e1bac394 160: rb::d() -> rq
fifo write: @1699477154190765162 0x7f81e2b9f129 1244: boj$b::c(bsh) -> boj
fifo write: @1699477154190825303 0x7f81e2d273bd 915: fi::a(hg, com.mojang.brigadier.StringReader, boolean) -> fi$a
fifo write: @1699477154190864624 0x7f81e281d214 279: bol$a::<init>(bsh) -> void
fifo write: @1699477154191397620 0x7f81e279f65f 3730: fi::<init>(hg, com.mojang.brigadier.StringReader, boolean, boolean) -> void
fifo write: @1699477154191436371 0x7f81e231ef14 185: fi$$Lambda$8247.0x00007f8160cf2080::<init>(fi) -> void
fifo write: @1699477154192224101 0x7f81e2ae601f 3622: fi::c() -> void
fifo write: @1699477154192399303 0x7f81e28d1bd4 1123: bll$$Lambda$8263.0x00007f8160cfe138::accept(Object) -> void
fifo write: @1699477154192674507 0x7f81e2fcd99f 11898: fi::a() -> void
fifo write: @1699477154192714607 0x7f81e281cd14 253: dyx::a(dyy) -> dyx
fifo write: @1699477154192753828 0x7f81e279f094 188: fi$$Lambda$8248.0x00007f8160cf22c8::<init>(fi, int) -> void
fifo write: @1699477154192800478 0x7f81e2ae55b4 772: bll::a(com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477154192857739 0x7f81e2bfd514 279: bol$c::<init>(bsh) -> void
fifo write: @1699477154192977601 0x7f81e1e03429 1244: boj$b::a(bsh) -> boj
fifo write: @1699477154197834063 0x7f81ea6d6cb3 4416: java.util.stream.ReferencePipeline$7$1::accept(Object) -> void
fifo write: @1699477154197949844 0x7f81e2d9add7 8839: eaf::a(long, long, int) -> void
fifo write: @1699477154199054738 0x7f81e1758cf7 8298: eaf::a(long, long, int) -> void
fifo write: @1699477154200559068 0x7f81ea6d2be2 5243: akx::a(gw, dfj, int, int) -> boolean
fifo write: @1699477154201150336 0x7f81eabc704c 1054: akq::a(gw, dfj, dfj) -> void
fifo write: @1699477154201461850 0x7f81ea4b4550 159: dfi$a::t() -> boolean
fifo write: @1699477154201645062 0x7f81ea6d26d0 39: java.util.stream.AbstractPipeline::sequential() -> java.util.stream.BaseStream
fifo write: @1699477154202259760 0x7f81ea6d21c0 156: buj::a(dfj) -> java.util.Optional
fifo write: @1699477154202634545 0x7f81eabc6bd0 103: dfi$a::q(cpb, gw) -> boolean
fifo write: @1699477154202924728 0x7f81eabc67b1 114: aew::a(char) -> boolean
fifo write: @1699477154204614080 0x7f81eabc5df9 514: ead::a(dfj, gw) -> int
fifo write: @1699477154205600913 0x7f81e298a974 3552: cuz::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477154206276702 0x7f81e30fc9ab 4087: dbc::a(dfj, cpy, gw) -> boolean
fifo write: @1699477154206438664 0x7f81e2f16834 795: czt::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477154206512075 0x7f81e30fbd34 1209: czt::d(dfj, cpb, gw) -> boolean
fifo write: @1699477154214965363 0x7f81eab55af2 22472: dhq::<init>(akq, dia, dhq$c) -> void
fifo write: @1699477154215017904 0x7f81eab55395 4: ead$a::b(long) -> boolean
fifo write: @1699477154221839332 0x7f81e17581d4 969: com.mojang.serialization.MapLike$1::entries() -> java.util.stream.Stream
fifo write: @1699477154222697293 0x7f81eab54fd8 90: com.mojang.serialization.Codec$4::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477154226222338 0x7f81eabbf8f8 9987: eaf::a(long, long, int) -> void
fifo write: @1699477154229618361 0x7f81eab53f05 1956: java.util.stream.Collectors$$Lambda$59.0x00007f816003cec0::accept(Object, Object) -> void
fifo write: @1699477154231178312 0x7f81eabba75e 8006: eak::b(cpv, gw, dfj) -> java.util.Map
fifo write: @1699477154243233517 0x7f81e2f8db63 3139: czw::a(cpw, gw, dfj, eam) -> boolean
fifo write: @1699477154246624660 0x7f81eac654a6 27292: eak::a(cpv, gw, eam) -> void
fifo write: @1699477154246915074 0x7f81eab52131 2716: java.util.stream.Collectors$$Lambda$7986.0x00007f8160964890::accept(Object, Object) -> void
fifo write: @1699477154263803271 0x7f81eac777df 2418: dvj::a(long, it.unimi.dsi.fastutil.objects.Object2IntMap) -> void
fifo write: @1699477154265444062 0x7f81eab51d58 18: cpv::a(gw, dfj, int) -> boolean
fifo write: @1699477154268567263 0x7f81eac79690 5544: akq$$Lambda$7176.0x00007f8160b9f320::run() -> void
fifo write: @1699477154270056192 0x7f81eac7d11e 5481: ead::d() -> int
fifo write: @1699477154271877795 0x7f81eac80873 7634: aka$$Lambda$5468.0x00007f8160a7db88::apply(Object) -> Object
fifo write: @1699477154295991915 0x7f81eac853f4 5763: ead::d() -> int
fifo write: @1699477154314741186 0x7f81e1468514 3286: cta::a(dfj, cpy, gw) -> boolean
fifo write: @1699477154314828617 0x7f81e2b83cdc 3016: cta::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477154331903087 0x7f81e1757c94 167: dhq::c_(gw) -> dcv
fifo write: @1699477154371248303 0x7f81eab51550 573: dhf::e() -> java.util.Collection
fifo write: @1699477154417877653 0x7f81eab506f0 861: eiw::b(eiz) -> void
fifo write: @1699477154418094385 0x7f81eac88c70 203: io.netty.channel.DefaultSelectStrategy::calculateStrategy(io.netty.util.IntSupplier, boolean) -> int
fifo write: @1699477154420699279 0x7f81eab503d0 39: io.netty.util.concurrent.SingleThreadEventExecutor::isShuttingDown() -> boolean
fifo write: @1699477154485076736 0x7f81eac89375 5670: ead::d() -> int
fifo write: @1699477154575765683 0x7f81eac8cb51 34: java.util.Spliterators$EmptySpliterator$OfLong::forEachRemaining(java.util.function.LongConsumer) -> void
fifo write: @1699477154580597775 0x7f81e2a1ddd4 643: dhf$$Lambda$8153.0x00007f8160cdb460::apply(Object) -> Object
fifo write: @1699477154580658066 0x7f81e2bfcff0 205: dhf::c(dvi) -> it.unimi.dsi.fastutil.longs.LongSet
fifo write: @1699477154585666660 0x7f81eac8ce46 716: java.util.HashMap$TreeNode::<init>(int, Object, Object, java.util.HashMap$Node) -> void
fifo write: @1699477154607407820 0x7f81eac8d729 4313: dkv::a(java.util.concurrent.Executor, dlu, dlg, cqn, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477154613604459 0x7f81eac91293 13949: io.netty.channel.AbstractChannelHandlerContext::invokeChannelReadComplete(io.netty.channel.AbstractChannelHandlerContext) -> void
fifo write: @1699477154614231667 0x7f81eac9b9cc 9: bym::t() -> dfj
fifo write: @1699477154622864719 0x7f81eac9bcfa 1367: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::put(long, Object) -> Object
fifo write: @1699477154627012802 0x7f81e2774077 1498: ebd::a(eaz, gw, boolean) -> ebb
fifo write: @1699477154628117116 0x7f81eac9cef4 1991: arf$3::coApply(com.mojang.serialization.DynamicOps, Object, com.mojang.serialization.DataResult) -> com.mojang.serialization.DataResult
fifo write: @1699477154640689948 0x7f81eac9eb40 4595: dkv::a(java.util.Set, dhf, Throwable) -> void
fifo write: @1699477154768488402 0x7f81e2d3e694 3415: bqy::d() -> void
fifo write: @1699477154768628773 0x7f81e2340039 2876: bpt::a() -> boolean
fifo write: @1699477154774789992 0x7f81e1707a74 3114: dvm::a(dfj) -> boolean
fifo write: @1699477154776549885 0x7f81eaca1f65 1058: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::resize(int, int) -> void
fifo write: @1699477154779036567 0x7f81eaca2a6b 616: dxe$c::a(cpw, dva) -> boolean
fifo write: @1699477154786040357 0x7f81e233fa94 345: cqn$$Lambda$7956.0x00007f8160ca71d8::accept(Object) -> void
fifo write: @1699477154786119738 0x7f81e2b9b419 404: dhg$$Lambda$8013.0x00007f8160cb2b88::accept(Object) -> void
fifo write: @1699477154786271430 0x7f81e2a1d694 184: dhg::a(cqp, cqn, dlr, dhf, cpc, dvq) -> void
fifo write: @1699477154786387391 0x7f81e27b3bd7 1446: dhg::a(dhf) -> dva
fifo write: @1699477154796243838 0x7f81e2906814 240: dyq::a(asc, qw) -> qw
fifo write: @1699477154801869001 0x7f81e3107557 8170: dzu::a(long, long, int) -> void
fifo write: @1699477154804810828 0x7f81e2979294 31: boj$b::ap2(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154804879939 0x7f81e2906214 540: boj$b$3::<init>(boj$b, boj$e, boj$e, boj$e) -> void
fifo write: @1699477154804993610 0x7f81e2c74b9a 2491: boj$b::a(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> boj
fifo write: @1699477154805063221 0x7f81e2ef92d4 716: bkg$$Lambda$8278.0x00007f8160d06740::apply(Object) -> Object
fifo write: @1699477154805120512 0x7f81e2ef8b94 378: bkg::g(cdf) -> java.util.Set
fifo write: @1699477154805191243 0x7f81e25a8a63 292: com.mojang.datafixers.kinds.Kind1::group(com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.Products$P1
fifo write: @1699477154805246794 0x7f81e25a8594 185: com.mojang.datafixers.Products$P1::<init>(com.mojang.datafixers.kinds.App) -> void
fifo write: @1699477154805389236 0x7f81eaca33cc 6: bmh::a() -> bkx$a
fifo write: @1699477154805777231 0x7f81e25f90c3 669: java.lang.invoke.LambdaForm$MH.0x00007f8160cf9400::linkToTargetMethod(Object, Object, float, Object) -> Object
fifo write: @1699477154805906542 0x7f81e2d39b83 1538: java.lang.invoke.LambdaForm$DMH.0x00007f8160340400::newInvokeSpecial(Object, Object, Object, float) -> Object
fifo write: @1699477154811089369 0x7f81e25f8894 678: cht::a(int) -> cht
fifo write: @1699477154811774038 0x7f81e30aadc0 568: java.lang.invoke.LambdaForm$MH.0x00007f8160cf8800::linkToTargetMethod(Object, float, Object) -> Object
fifo write: @1699477154811889309 0x7f81e3104400 1522: java.lang.invoke.LambdaForm$DMH.0x00007f8160340000::newInvokeSpecial(Object, Object, float) -> Object
fifo write: @1699477154811952970 0x7f81e25a8094 190: bmv$$Lambda$8258.0x00007f8160cf6498::<init>(java.util.function.Predicate, float) -> void
fifo write: @1699477154812044511 0x7f81e30aa814 340: bmv$$Lambda$8258.0x00007f8160cf6498::apply(Object) -> Object
fifo write: @1699477154812198683 0x7f81e30f8637 3343: bmv::a(java.util.function.Predicate, float) -> bmh
fifo write: @1699477154812296305 0x7f81e18a1c17 245: com.mojang.datafixers.Products$P1::apply(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154812369386 0x7f81e18a1714 235: bmv$$Lambda$8259.0x00007f8160cfc210::<init>(boj$b, java.util.function.Predicate, float) -> void
fifo write: @1699477154812420146 0x7f81eaca42d9 86: Integer::compareTo(Object) -> int
fifo write: @1699477154812510967 0x7f81e2f74034 532: com.mojang.datafixers.Products$P1::apply(com.mojang.datafixers.kinds.Applicative, java.util.function.Function) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154812571668 0x7f81eaca46cc 6: bsh::a() -> java.util.Optional
fifo write: @1699477154812786771 0x7f81e2a22b47 4103: bmv::a(java.util.function.Predicate, float, boj$b) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154815559247 0x7f81e2dea18f 9596: ako::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477154815720349 0x7f81e2f73734 535: cpv::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477154816385298 0x7f81e312303f 37657: dzb::a(cqk, gw, gw, dyx, asc, int) -> boolean
fifo write: @1699477154819785981 0x7f81eaca4a63 2252: java.util.TreeMap::computeIfAbsent(Object, java.util.function.Function) -> Object
fifo write: @1699477154820563811 0x7f81e2905e17 36: java.util.concurrent.CompletableFuture::thenCompose(java.util.function.Function) -> java.util.concurrent.CompletableFuture
fifo write: @1699477154820646292 0x7f81e18a1114 275: dij$$Lambda$7327.0x00007f8160bd4f70::<init>(dij, cpc, qw) -> void
fifo write: @1699477154821129148 0x7f81e312101f 3438: dij::a(cpc, qw) -> java.util.concurrent.CompletableFuture
fifo write: @1699477154823139474 0x7f81e2a221b4 973: dap::a(dfj, czh) -> dfj
fifo write: @1699477154823790242 0x7f81e2bd2957 15897: dap::a(dfj, cxq) -> dfj
fifo write: @1699477154828030027 0x7f81eaca674c 6: ehj::b() -> ha
fifo write: @1699477154828303831 0x7f81eaca6d4c 4: cdg::b() -> float
fifo write: @1699477154828559804 0x7f81e3113497 2639: dfi::a(dfj, cln) -> boolean
fifo write: @1699477154829132051 0x7f81eaca704c 6: dyz::a() -> java.util.List
fifo write: @1699477154829182332 0x7f81eaca734c 6: dwr$a::b() -> com.google.common.collect.ImmutableList
fifo write: @1699477154837879803 0x7f81e2de9894 254: bkx::<init>(java.util.Map, int, int) -> void
fifo write: @1699477154838332069 0x7f81e31203d7 1217: boj$b::lift1(com.mojang.datafixers.kinds.App) -> java.util.function.Function
fifo write: @1699477154838434191 0x7f81e2243894 230: boj$b$$Lambda$8285.0x00007f8160d08000::<init>(boj$b, com.mojang.datafixers.kinds.App) -> void
fifo write: @1699477154838543942 0x7f81e2243314 393: boj$b$$Lambda$8285.0x00007f8160d08000::apply(Object) -> Object
fifo write: @1699477154838634163 0x7f81e2242d94 440: boj$b$1::<init>(boj$b, boj$e, boj$e) -> void
fifo write: @1699477154838766335 0x7f81e2b5e514 275: com.mojang.datafixers.Products$P3::<init>(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> void
fifo write: @1699477154838841116 0x7f81e2ba897a 1938: boj$b::a(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154838878836 0x7f81e2b5e094 185: bmv$$Lambda$8257.0x00007f8160cf5cf0::<init>(biu) -> void
fifo write: @1699477154839419963 0x7f81e21f2bb7 4402: bmv::a(biu, float) -> bmh
fifo write: @1699477154846148760 0x7f81e2b5da94 296: com.mojang.datafixers.Products$P3::apply(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.util.Function3) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154846255812 0x7f81e21f259c 272: com.mojang.datafixers.Products$P3::apply(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154846300172 0x7f81e2ba7b17 1741: bnf::<init>() -> void
fifo write: @1699477154846500485 0x7f81e21f1e6a 382: com.mojang.datafixers.kinds.Kind1::group(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.Products$P3
fifo write: @1699477154848324218 0x7f81e2ba7494 347: bkx::<init>(java.util.Map, int) -> void
fifo write: @1699477154848409789 0x7f81e2a18594 31: boj$b::ap3(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477154848495740 0x7f81e2876014 640: boj$b$4::<init>(boj$b, boj$e, boj$e, boj$e, boj$e) -> void
fifo write: @1699477154848688523 0x7f81e2874b3a 3040: boj$b::a(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> boj
fifo write: @1699477154848738434 0x7f81e2ba6f14 185: bll$$Lambda$8263.0x00007f8160cfe138::<init>(bll) -> void
fifo write: @1699477154849268910 0x7f81e25a2ac7 4197: bll::<init>(java.util.Map, java.util.Set, bll$a, bll$b, java.util.List) -> void
fifo write: @1699477154856912308 0x7f81eaca77bf 8940: cpv::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477154860280612 0x7f81eacad7f3 776: hr$c::c(aev) -> java.util.Optional
fifo write: @1699477154865293896 0x7f81eacae4cd 8666: ako::a(int, int, dhk, boolean) -> dhf
fifo write: @1699477154870014067 0x7f81eacb46d4 9975: dzu::a(long, long, int) -> void
fifo write: @1699477154870107868 0x7f81eacba92d 860: java.time.zone.ZoneRules::findTransitionArray(int) -> java.time.zone.ZoneOffsetTransition[]
fifo write: @1699477154870571924 0x7f81eacbb64a 234: com.google.common.collect.ImmutableSet::of(Object) -> com.google.common.collect.ImmutableSet
fifo write: @1699477154870641955 0x7f81eacbbb8f 180: it.unimi.dsi.fastutil.objects.ObjectArrayList$Spliterator::<init>(it.unimi.dsi.fastutil.objects.ObjectArrayList) -> void
fifo write: @1699477154871396494 0x7f81eacbbf9c 77: java.util.stream.ReferencePipeline::wrap(java.util.stream.PipelineHelper, java.util.function.Supplier, boolean) -> java.util.Spliterator
fifo write: @1699477154872385897 0x7f81e2874614 185: com.mojang.datafixers.DataFixUtils$$Lambda$530.0x00007f8160309f68::<init>(java.util.function.Consumer) -> void
fifo write: @1699477154873250948 0x7f81e2873c37 1048: com.mojang.datafixers.DataFixUtils::consumerToFunction(java.util.function.Consumer) -> java.util.function.UnaryOperator
fifo write: @1699477154898467253 0x7f81eabd4e0c 10985: dzb::a(cqk, gw, gw, dyx, java.util.List) -> java.util.List
fifo write: @1699477154931603439 0x7f81eabd1647 3434: tb::a(io.netty.buffer.ByteBuf, CharSequence, int) -> void
fifo write: @1699477154935889804 0x7f81e1c53c14 440: biu$1::<init>(java.util.Spliterator, cpv, java.util.List) -> void
fifo write: @1699477154980253934 0x7f81ea53c332 1233: bre::a() -> boolean
fifo write: @1699477155070978301 0x7f81e21ad614 230: yi::<init>(it, boolean, double, double, double, float, float, float, float, int) -> void
fifo write: @1699477155071449667 0x7f81e203db60 1180: akq::a(it, double, double, double, int, double, double, double, double) -> int
fifo write: @1699477155071523208 0x7f81e25b3f9a 2055: akq::a(akr, boolean, double, double, double, vd) -> boolean
fifo write: @1699477155114569002 0x7f81e182fc57 1711: aeg$$Lambda$1417.0x00007f8160554290::accept(Object, Object) -> void
fifo write: @1699477155122056558 0x7f81e18efe94 392: ehx$$Lambda$7355.0x00007f8160bd8000::test(Object) -> boolean
fifo write: @1699477155171823888 0x7f81ea2410d6 1401: bwq::gF() -> void
fifo write: @1699477155177021255 0x7f81ea7e6352 1911: cpw::a(gw, csv, int) -> void
fifo write: @1699477155220986450 0x7f81e1dcbc34 775: bqb::a(int) -> int
fifo write: @1699477155245987092 0x7f81e9821a8e 7057: dzu::a(long, long) -> void
fifo write: @1699477155285792113 0x7f81ea658d9d 4778: coy::a(cqe, gw) -> int
fifo write: @1699477155323727881 0x7f81e91e507c 1507: bjg::bs() -> boolean
fifo write: @1699477155325722777 0x7f81e976d0f2 946: java.util.stream.LongPipeline::mapToObj(java.util.function.LongFunction, int) -> java.util.stream.Stream
fifo write: @1699477155368514287 0x7f81e95b0891 4084: cqn::a(dvi, it.unimi.dsi.fastutil.longs.LongSet, java.util.function.Consumer) -> void
fifo write: @1699477155369876495 0x7f81e29d46af 8634: dzu::a(long, long) -> void
fifo write: @1699477155377929198 0x7f81ea0f52cf 188: java.util.stream.AbstractPipeline$$Lambda$782.0x00007f81601dfa28::get() -> Object
fifo write: @1699477155545439152 0x7f81e95b005f 184: gw::a(ha, int) -> gw
fifo write: @1699477155564353466 0x7f81e9f44830 693: dte::b(cqb, java.util.function.BiConsumer, asc, gw, dqw) -> boolean
fifo write: @1699477155566847538 0x7f81ea3e4c50 167: io.netty.util.concurrent.AbstractScheduledEventExecutor::nextScheduledTaskDeadlineNanos() -> long
fifo write: @1699477155595180772 0x7f81e1d43c94 185: bmv$$Lambda$8313.0x00007f8160d16850::<init>(bjj) -> void
fifo write: @1699477155595300534 0x7f81e9f4444c 6: bkx::a() -> bkx$a
fifo write: @1699477155595353184 0x7f81ea372a4c 6: bll::a() -> bkx$a
fifo write: @1699477155596332587 0x7f81e230d6b7 4370: bmv::a(bjj, float) -> bky
fifo write: @1699477155613656550 0x7f81e221739c 199: bmt::<init>(java.util.Map, java.util.List) -> void
fifo write: @1699477155615177319 0x7f81ea7329e3 10505: dzb::a(cqk, gw, gw, dyx, java.util.List) -> java.util.List
fifo write: @1699477155624265976 0x7f81eaaf4342 3853: akx::a(dks$a, int, int) -> int
fifo write: @1699477155637460706 0x7f81e1affff4 531: bkg::a(Integer) -> java.util.Map
fifo write: @1699477155637507596 0x7f81e209e8b4 869: bkg$$Lambda$8277.0x00007f8160d06500::apply(Object) -> Object
fifo write: @1699477155637552397 0x7f81e258ed14 208: blh::<init>(int, int) -> void
fifo write: @1699477155637584027 0x7f81e26d4c97 180: bmt::<init>(java.util.List) -> void
fifo write: @1699477155637690159 0x7f81e29ca0e2 454: java.lang.invoke.LambdaForm$MH.0x00007f8160d1a000::linkToTargetMethod(int, int, float, Object) -> Object
fifo write: @1699477155637847161 0x7f81e2b3091f 1443: java.lang.invoke.LambdaForm$DMH.0x00007f81606a8400::newInvokeSpecial(Object, int, int, float) -> Object
fifo write: @1699477155639039756 0x7f81e24a2114 331: btl::<init>(int) -> void
fifo write: @1699477155639073966 0x7f81e1531614 449: bkx::<init>(java.util.Map) -> void
fifo write: @1699477155639472162 0x7f81e1ad6b9d 2811: com.google.common.collect.ImmutableMap::of(Object, Object, Object, Object) -> com.google.common.collect.ImmutableMap
fifo write: @1699477155639600673 0x7f81e2980ec6 4204: bkg::a(cdf, com.google.common.collect.ImmutableList, java.util.Set, java.util.Set) -> void
fifo write: @1699477155640107780 0x7f81e2b88b14 238: org.apache.commons.lang3.mutable.MutableLong::<init>(long) -> void
fifo write: @1699477155640837859 0x7f81ea0c5a5e 4819: akx::a_(gw) -> dfj
fifo write: @1699477155640880400 0x7f81ea0c55d0 47: io.netty.channel.AbstractChannelHandlerContext::invokeHandler() -> boolean
fifo write: @1699477155641866942 0x7f81ea0c518b 62: com.mojang.datafixers.kinds.Kind1::group(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.Products$P2
fifo write: @1699477155643712486 0x7f81e2c135f7 1931: eak::a(cpb, eal, gw, dfj, ha, gw, dfj, eam) -> boolean
fifo write: @1699477155660709045 0x7f81ea17f41a 4701: com.mojang.datafixers.Products$P2::apply(com.mojang.datafixers.kinds.Applicative, java.util.function.BiFunction) -> com.mojang.datafixers.kinds.App
fifo write: @1699477155662317625 0x7f81ea698581 12455: dzb::a(cqk, gw, gw, dyx, java.util.List) -> java.util.List
fifo write: @1699477155668591546 0x7f81e29cbbc0 10319: eak::a(cpb, gw, dfj, eal) -> boolean
fifo write: @1699477155683303955 0x7f81e15c4cb7 1047: java.util.stream.SortedOps$RefSortingSink::accept(Object) -> void
fifo write: @1699477155693186882 0x7f81e161c1b4 1166: java.lang.ref.ReferenceQueue::reallyPoll() -> java.lang.ref.Reference
fifo write: @1699477155699707446 0x7f81ea6e72d3 1148: eak::a(cpb, eal, gw, dfj, ha, gw, dfj, eam) -> boolean
fifo write: @1699477155724046429 0x7f81ea4595d7 7112: java.util.HashMap$TreeNode::balanceInsertion(java.util.HashMap$TreeNode, java.util.HashMap$TreeNode) -> java.util.HashMap$TreeNode
fifo write: @1699477155782558072 0x7f81e297f194 230: ri$$Lambda$5289.0x00007f81609bf0f0::<init>(java.util.List, qw) -> void
fifo write: @1699477155783391912 0x7f81e246a3d7 7698: ri::a(rq, com.mojang.serialization.MapLike) -> com.mojang.serialization.DataResult
fifo write: @1699477155783444383 0x7f81ea17eed0 143: com.mojang.serialization.codecs.EitherCodec$$Lambda$6781.0x00007f8160b52420::apply(Object) -> Object
fifo write: @1699477155783476553 0x7f81ea17ebcc 6: dwr$a::a() -> String
fifo write: @1699477155784222073 0x7f81e2b9ea94 556: hr$$Lambda$4107.0x00007f8160897200::apply(Object) -> Object
fifo write: @1699477155784546867 0x7f81e2b1bb17 2123: aeu::a(aev) -> java.util.Optional
fifo write: @1699477155784616908 0x7f81e2432a97 2329: hr::a(aev) -> java.util.Optional
fifo write: @1699477155784667169 0x7f81e2db0114 337: aeu$$Lambda$5272.0x00007f81609bc828::apply(Object) -> Object
fifo write: @1699477155784716059 0x7f81e15e1e14 481: aeu$1$$Lambda$4106.0x00007f8160896fb8::apply(Object) -> Object
fifo write: @1699477155784967213 0x7f81ea7cc0d5 438: ro::equals(Object) -> boolean
fifo write: @1699477155785030113 0x7f81e1bf4917 2143: aeu$2::a(aev) -> java.util.Optional
fifo write: @1699477155785076474 0x7f81e3102f94 356: aeu$2$$Lambda$4108.0x00007f8160897440::apply(Object) -> Object
fifo write: @1699477155785199656 0x7f81e1b89e6a 689: aeu$2::a(hg$c) -> aeu$a
fifo write: @1699477155785272356 0x7f81e311e574 226: hm$1::g() -> com.mojang.serialization.Lifecycle
fifo write: @1699477155785378438 0x7f81e261021f 5265: dwk::a(com.mojang.serialization.DynamicOps) -> com.mojang.serialization.Dynamic
fifo write: @1699477155785418398 0x7f81e239a094 481: dwp$$Lambda$2951.0x00007f81606f0b40::apply(Object) -> Object
fifo write: @1699477155785502929 0x7f81e27e8314 356: aes::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477155785694722 0x7f81e22a3ed7 1080: he$c::d() -> com.mojang.datafixers.util.Either
fifo write: @1699477155785772283 0x7f81ea306761 120: ri::createInt(int) -> Object
fifo write: @1699477155785820833 0x7f81e295ed94 230: aes$$Lambda$5273.0x00007f81609bca68::<init>(com.mojang.serialization.DynamicOps, Object) -> void
fifo write: @1699477155785883614 0x7f81ea3062ac 30: dwo::a(dwo) -> com.mojang.datafixers.util.Either
fifo write: @1699477155785913875 0x7f81ea95daac 30: dwo::b(dwo) -> he
fifo write: @1699477155786648114 0x7f81e2e80797 8320: aes::a(he, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477155793508352 0x7f81e9f403ff 1484: bus::gu() -> void
fifo write: @1699477155820508029 0x7f81e92709d5 1972: ako::a(long) -> boolean
fifo write: @1699477155822972581 0x7f81e9d28898 1227: io.netty.channel.epoll.EpollEventLoop::processReady(io.netty.channel.epoll.EpollEventArray, int) -> boolean
fifo write: @1699477155866854705 0x7f81eabf8def 20328: com.mojang.serialization.codecs.KeyDispatchCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477155867643665 0x7f81e9270635 50: biv::values() -> biv[]
fifo write: @1699477155874114829 0x7f81ea1ccfc3 1424: biq::a(boolean, ehn) -> void
fifo write: @1699477155884997678 0x7f81eabcee14 2877: brd::a() -> boolean
fifo write: @1699477155926407951 0x7f81e9f48d4e 18457: biq::a(bjm, ehn) -> void
fifo write: @1699477155964930666 0x7f81e9d284cc 6: ecq::b() -> asc
fifo write: @1699477155970024942 0x7f81e8bf8540 27: vtable stub
fifo write: @1699477155973427426 0x7f81e1c0965f 21747: cbu::b_() -> void
fifo write: @1699477156021717947 0x7f81ea458353 1492: zi::a(java.util.function.BiConsumer) -> void
fifo write: @1699477156021837489 0x7f81e9f3ff14 12: io.netty.util.concurrent.ScheduledFutureTask::deadlineToDelayNanos(long, long) -> long
fifo write: @1699477156065566631 0x7f81e24caa34 691: cab::m_() -> boolean
fifo write: @1699477156074587247 0x7f81e2199e87 15624: akp::a(akr, java.util.function.Consumer) -> void
fifo write: @1699477156199215849 0x7f81ea6727d3 18312: aka$$Lambda$5466.0x00007f8160a7d6f8::apply(Object) -> Object
fifo write: @1699477156225304355 0x7f81eaa2caa2 4455: dlj$g::<init>(dlk, dlg, dhf, dkw, java.util.function.Function, hq, dlp) -> void
fifo write: @1699477156230391820 0x7f81ea0e887b 612: dxe$c::a(cpw, dva) -> boolean
fifo write: @1699477156244833356 0x7f81ea0e7d65 1126: it.unimi.dsi.fastutil.objects.ObjectArrayList::<init>(Object[], int, int) -> void
fifo write: @1699477156252074519 0x7f81eabf814f 80: akt$$Lambda$7123.0x00007f8160a69460::run() -> void
fifo write: @1699477156265614673 0x7f81ea1cc5f0 355: aka$$Lambda$5467.0x00007f8160a7d940::apply(Object) -> Object
fifo write: @1699477156282318168 0x7f81ea1e657f 5226: dhy::onResize(int, Object) -> int
fifo write: @1699477156282712373 0x7f81ea671cdd 154: ehy::a(ehz$a) -> boolean
fifo write: @1699477156304754216 0x7f81ea1e4c13 2160: aew::a(com.mojang.brigadier.StringReader) -> aew
fifo write: @1699477156304921879 0x7f81e9f480d0 75: com.google.common.collect.Maps$12::getKey() -> Object
fifo write: @1699477156306063733 0x7f81ea457b70 439: com.google.common.collect.Maps$12::getValue() -> Object
fifo write: @1699477156309285484 0x7f81e93cd6c5 787: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher::<init>(java.security.MessageDigest, int, com.google.common.hash.MessageDigestHashFunction$1) -> void
fifo write: @1699477156319815850 0x7f81e1ac1ff7 1678: com.mojang.serialization.Codec$$Lambda$237.0x00007f81601a04e0::apply(Object) -> Object
fifo write: @1699477156319904461 0x7f81e19c2e57 1611: com.mojang.serialization.Codec::lambda$optionalFieldOf$3(Object, Object) -> java.util.Optional
fifo write: @1699477156379360046 0x7f81e93cc9f5 666: dvm::b(cpy, int, int, int, dva) -> boolean
fifo write: @1699477156394058255 0x7f81e18db494 31: czg::a(dfj, czh) -> dfj
fifo write: @1699477156394295318 0x7f81e29737d4 1835: czg::b(dfj, czh) -> dfj
fifo write: @1699477156394617432 0x7f81e140825d 1760: com.google.common.collect.ImmutableList::of(Object, Object, Object) -> com.google.common.collect.ImmutableList
fifo write: @1699477156395381432 0x7f81e1593860 1208: bkg::a(cdf, com.google.common.collect.ImmutableList) -> void
fifo write: @1699477156396049320 0x7f81ea95d0f3 581: java.util.HashSet::<init>(int, float, boolean) -> void
fifo write: @1699477156396334574 0x7f81e1867037 1393: bkg::a(java.util.Map$Entry) -> bkg$a
fifo write: @1699477156396389745 0x7f81e2f62ef7 1755: bkg$$Lambda$8114.0x00007f8160cd53e8::apply(Object) -> Object
fifo write: @1699477156396488376 0x7f81e1c08a4a 337: bkg$a::a(bsh, java.util.Optional) -> bkg$a
fifo write: @1699477156396530256 0x7f81e29c5394 230: bkg$a::<init>(bsh, java.util.Optional) -> void
fifo write: @1699477156397137814 0x7f81e1bfb4f7 1985: bkg$1::a(com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder, bkg$a) -> void
fifo write: @1699477156397203195 0x7f81e25a1797 2323: bkg$1$$Lambda$8115.0x00007f8160cd5628::accept(Object) -> void
fifo write: @1699477156397288466 0x7f81e2efc794 275: bkg$a$$Lambda$8370.0x00007f8160d23c48::<init>(bkg$a, com.mojang.serialization.RecordBuilder, com.mojang.serialization.DynamicOps) -> void
fifo write: @1699477156397316787 0x7f81ea1e48cc 2: bhf::b() -> int
fifo write: @1699477156397346917 0x7f81ea0e7a4c 6: cbi::b() -> cbk
fifo write: @1699477156397551860 0x7f81e2dfb497 1883: bkg$a::a(com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> void
fifo write: @1699477156401068945 0x7f81e23bcc94 436: btl::<init>() -> void
fifo write: @1699477156401186296 0x7f81e162cc4c 676: java.lang.invoke.LambdaForm$MH.0x00007f8160d19000::linkToTargetMethod(Object, Object, Object, int, float, int, Object) -> Object
fifo write: @1699477156401335048 0x7f81e1effe94 31: boj$b::ap4(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477156401410359 0x7f81e1d14c03 1597: java.lang.invoke.LambdaForm$DMH.0x00007f8160d18800::newInvokeSpecial(Object, Object, Object, Object, int, float, int) -> Object
fifo write: @1699477156401528711 0x7f81e1774394 745: boj$b$5::<init>(boj$b, boj$e, boj$e, boj$e, boj$e, boj$e) -> void
fifo write: @1699477156401608822 0x7f81e26bec5f 441: java.lang.invoke.LambdaForm$MH.0x00007f8160d10400::linkToTargetMethod(float, Object) -> Object
fifo write: @1699477156401724323 0x7f81e22ec6ba 2853: boj$b::a(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> boj
fifo write: @1699477156401818604 0x7f81e2f58b9f 1427: java.lang.invoke.LambdaForm$DMH.0x00007f8160340800::newInvokeSpecial(Object, float) -> Object
fifo write: @1699477156401867245 0x7f81e22dd1d4 1110: bns$$Lambda$8309.0x00007f8160d15ca0::accept(Object) -> void
fifo write: @1699477156401971796 0x7f81e27a2914 764: bns::a(bnf, com.mojang.datafixers.util.Pair) -> void
fifo write: @1699477156402017717 0x7f81e251f134 924: cdh$$Lambda$8355.0x00007f8160d21258::applyAsDouble(Object) -> double
fifo write: @1699477156422502700 0x7f81e281c694 320: com.mojang.datafixers.Products$P4::<init>(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> void
fifo write: @1699477156425084163 0x7f81ea0e774c 6: dgb::c() -> String
fifo write: @1699477156425474168 0x7f81e2a9a3b4 909: dcx::a(dcx) -> aew
fifo write: @1699477156425606080 0x7f81ea0e72d4 18: eiu::b(long, java.util.function.Function) -> rq
fifo write: @1699477156434646176 0x7f81e8c19100 544: I2C/C2I adapters(0xabbbbbbbbeb)
fifo write: @1699477156434740028 0x7f81e8c18e00 544: I2C/C2I adapters(0xbabbbbbbbbe)
fifo write: @1699477156435928443 0x7f81e93632cc 4: bnf$a::c() -> double
fifo write: @1699477156435993234 0x7f81e9362fcc 9: bjg::dN() -> bkg
fifo write: @1699477156436061354 0x7f81e8c18b00 496: I2C/C2I adapters(0xaab6bbbeb)
fifo write: @1699477156436156536 0x7f81e8c18800 496: I2C/C2I adapters(0xbaab6bbbe)
fifo write: @1699477156436555561 0x7f81e936245a 575: jdk.internal.org.objectweb.asm.Type::getTypeInternal(String, int, int) -> jdk.internal.org.objectweb.asm.Type
fifo write: @1699477156436700923 0x7f81e8c18500 520: I2C/C2I adapters(0xbbeaaaaaaa)
fifo write: @1699477156437081048 0x7f81e9361e4c 6: aka::m() -> buf
fifo write: @1699477156437555884 0x7f81e9361b4c 6: bnf$a::a() -> Object
fifo write: @1699477156468091896 0x7f81e1f02374 97: czw::a(cbu, cpb, gw, dfj, eal) -> boolean
fifo write: @1699477156474920364 0x7f81e28e9df7 1296: dcv::m() -> qw
fifo write: @1699477156475507632 0x7f81e1dd4c07 3483: dcv::e(qw) -> void
fifo write: @1699477156475630304 0x7f81e284dfd7 5920: dhq::g(gw) -> qw
fifo write: @1699477156477021621 0x7f81e1c3a89f 9751: dcv::d(qw) -> void
fifo write: @1699477156481073983 0x7f81e1be7474 30: cbh::dN() -> bkg
fifo write: @1699477156482401150 0x7f81eab92ad9 110: System$2::defineClass(ClassLoader, Class, String, byte[], java.security.ProtectionDomain, boolean, int, Object) -> Class
fifo write: @1699477156482611533 0x7f81e17dfa37 703: java.util.stream.IntPipeline$$Lambda$4049.0x00007f8160873788::apply(int) -> Object
fifo write: @1699477156482717034 0x7f81e2f4f094 243: java.util.stream.Sink$ChainedInt::cancellationRequested() -> boolean
fifo write: @1699477156483049269 0x7f81e2428c54 1024: java.util.stream.Streams$RangeIntSpliterator::tryAdvance(java.util.function.IntConsumer) -> boolean
fifo write: @1699477156483101379 0x7f81e203481e 1873: java.util.Spliterator$OfInt::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477156483303432 0x7f81e2cdc9f7 1539: buf$$Lambda$8424.0x00007f8160d36d70::apply(Object) -> Object
fifo write: @1699477156483362263 0x7f81e26b66d4 1180: buf::a(cpc, Integer) -> java.util.Optional
fifo write: @1699477156483401063 0x7f81eab925d0 160: java.util.stream.IntPipeline$1$1::accept(int) -> void
fifo write: @1699477156483476024 0x7f81e2034194 500: buf$$Lambda$8425.0x00007f8160d36fb8::test(Object) -> boolean
fifo write: @1699477156484530218 0x7f81e1d0928e 21: java.util.stream.Sink$ChainedInt::begin(long) -> void
fifo write: @1699477156485282787 0x7f81e8c18200 472: I2C/C2I adapters(0xbaab7eab)
fifo write: @1699477156485377729 0x7f81e8c17f00 472: I2C/C2I adapters(0xbbaab7ea)
fifo write: @1699477156485421389 0x7f81e8c17c00 496: I2C/C2I adapters(0xbbaab7eab)
fifo write: @1699477156485663792 0x7f81e8c17900 496: I2C/C2I adapters(0xbbbaab7ea)
fifo write: @1699477156485883945 0x7f81e1bb0294 480: java.util.Comparator::lambda$comparingDouble$8dcf42ea$1(java.util.function.ToDoubleFunction, Object, Object) -> int
fifo write: @1699477156485936046 0x7f81e20e6db4 577: java.util.Comparator$$Lambda$3713.0x00007f81607cb2c0::compare(Object, Object) -> int
fifo write: @1699477156485999777 0x7f81e2199674 91: ako::l() -> buf
fifo write: @1699477156486143648 0x7f81e2768614 221: akq::w() -> buf
fifo write: @1699477156518376243 0x7f81ea6b2938 8096: java.util.stream.StreamSpliterators$WrappingSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477156523204275 0x7f81ea656b54 2282: java.util.stream.ReferencePipeline$7$1::accept(Object) -> void
fifo write: @1699477156528455112 0x7f81e27c3f14 354: bnf$$Lambda$8400.0x00007f8160d2e9a8::apply(Object) -> Object
fifo write: @1699477156528831367 0x7f81e2afe514 335: bnf$$Lambda$8399.0x00007f8160d2e788::applyAsDouble(Object) -> double
fifo write: @1699477156529052840 0x7f81e19491f7 1458: buf::a(hw) -> int
fifo write: @1699477156529175152 0x7f81e2ce3b97 1844: akq::b(hw) -> int
fifo write: @1699477156529401445 0x7f81e2a2b8f7 1181: hw$1::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477156529559897 0x7f81e24898b7 2422: bkz$$Lambda$8413.0x00007f8160d34fd8::test(Object) -> boolean
fifo write: @1699477156529795020 0x7f81e2e499f7 2065: bkz::a(akq, int, hw) -> boolean
fifo write: @1699477156543132271 0x7f81ea4f5ff6 5957: dio::d(long) -> java.util.Optional
fifo write: @1699477156547696180 0x7f81ea4f4b2b 1947: java.util.stream.StreamSpliterators$WrappingSpliterator::initPartialTraversalState() -> void
fifo write: @1699477156569617152 0x7f81ea6b207d 226: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::insert(int, long, long) -> void
fifo write: @1699477156573161358 0x7f81e8c17600 544: I2C/C2I adapters(0xbbabbbbbbeb)
fifo write: @1699477156573259109 0x7f81e8c17300 544: I2C/C2I adapters(0xbbbabbbbbbe)
fifo write: @1699477156575462127 0x7f81e22fdbf4 3: java.util.stream.SortedOps$AbstractRefSortingSink::cancellationRequested() -> boolean
fifo write: @1699477156577046387 0x7f81e27db214 47: boj$d$1::a(akq, bjg, long) -> Object
fifo write: @1699477156577133458 0x7f81e2bbb354 1320: bkg::a(bsh, bsi) -> boolean
fifo write: @1699477156577511853 0x7f81e2d33337 2480: bkg::d(bsh) -> java.util.Optional
fifo write: @1699477156577581684 0x7f81e1897bff 3309: boj$d$1::b(akq, bjg, long) -> bok
fifo write: @1699477156577675295 0x7f81ea656450 99: java.util.stream.Sink$ChainedInt::cancellationRequested() -> boolean
fifo write: @1699477156577789567 0x7f81e2cdc2b4 472: java.util.stream.IntPipeline::boxed() -> java.util.stream.Stream
fifo write: @1699477156578517736 0x7f81ea655e5d 242: java.util.Spliterator$OfInt::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477156623337292 0x7f81ea655b4c 6: bol$b::a() -> bsh
fifo write: @1699477156623690397 0x7f81e1948a34 706: bll$$Lambda$8405.0x00007f8160d2f900::test(Object) -> boolean
fifo write: @1699477156623733528 0x7f81e2a8cb34 855: boj$1::trigger(akq, bjg, long) -> boolean
fifo write: @1699477156623806078 0x7f81e2ae1a74 333: bll::d(bky) -> boolean
fifo write: @1699477156624223104 0x7f81e2de5614 203: bmh::e(akq, bjg, long) -> boolean
fifo write: @1699477156664485502 0x7f81e2b033bc 3165: eak::a(cpw, gw, dfj, ha, eam) -> void
fifo write: @1699477156669467356 0x7f81ea65554c 6: bol$a::a() -> bsh
fifo write: @1699477156686429184 0x7f81eabb4810 5355: dhq$d::a() -> void
fifo write: @1699477156721502435 0x7f81eabb3cf3 464: bqn::a() -> boolean
fifo write: @1699477156721699017 0x7f81e2f7ca34 860: bnf::b() -> java.util.stream.Stream
fifo write: @1699477156724427303 0x7f81eabb31d5 1134: it.unimi.dsi.fastutil.longs.LongArrayFIFOQueue::expand() -> void
fifo write: @1699477156774834281 0x7f81e1598b58 6859: dkf::a(cpc, it.unimi.dsi.fastutil.objects.ObjectList, int, int, it.unimi.dsi.fastutil.objects.ObjectList, dvq) -> void
fifo write: @1699477156778137313 0x7f81e311747f 10359: eaa::a(ead) -> void
fifo write: @1699477156786104086 0x7f81e16f3094 275: bok::<init>(bkg, bsh, com.mojang.datafixers.kinds.App) -> void
fifo write: @1699477156787311381 0x7f81e262185f 11841: bji::b_() -> void
fifo write: @1699477156791207562 0x7f81ea654cd8 647: it.unimi.dsi.fastutil.longs.Long2ObjectFunctions$SynchronizedFunction::remove(long) -> Object
fifo write: @1699477156801024077 0x7f81e140337f 1557: io.netty.buffer.PoolChunk::allocateSubpage(int, io.netty.buffer.PoolSubpage) -> long
fifo write: @1699477156809993112 0x7f81eabb2ec4 39: sw::a(io.netty.util.Attribute, vd) -> void
fifo write: @1699477156819504025 0x7f81e21b4239 2451: bkx::a(bjg) -> boolean
fifo write: @1699477156819830879 0x7f81e2393b7d 1832: bol$b::a(bkg, java.util.Optional) -> bok
fifo write: @1699477156820183904 0x7f81e2392ee8 1283: bkx::e(akq, bjg, long) -> boolean
fifo write: @1699477156820243405 0x7f81e21b3a99 472: buf$$Lambda$8418.0x00007f8160d35fb8::apply(Object) -> Object
fifo write: @1699477156820298305 0x7f81eabb2af6 112: java.util.stream.IntPipeline$$Lambda$4049.0x00007f8160873788::apply(int) -> Object
fifo write: @1699477156820368636 0x7f81e16f2c97 36: buf::a(java.util.function.Predicate, buf$b, cpc) -> java.util.stream.Stream
fifo write: @1699477156820447767 0x7f81e3116c94 230: buf$$Lambda$8424.0x00007f8160d36d70::<init>(buf, cpc) -> void
fifo write: @1699477156820550949 0x7f81e19d0694 230: buf$$Lambda$8426.0x00007f8160d37208::<init>(java.util.function.Predicate, buf$b) -> void
fifo write: @1699477156820702451 0x7f81e2395334 706: bll$$Lambda$8407.0x00007f8160d2fd90::test(Object) -> boolean
fifo write: @1699477156820739761 0x7f81eabb2452 29: hw::c(gw) -> long
fifo write: @1699477156820779272 0x7f81e2b02774 333: bll::c(bky) -> boolean
fifo write: @1699477156821653093 0x7f81eabb1e50 187: buf$$Lambda$8424.0x00007f8160d36d70::apply(Object) -> Object
fifo write: @1699477156821921786 0x7f81ea5b3659 66: buf$$Lambda$8425.0x00007f8160d36fb8::test(Object) -> boolean
fifo write: @1699477156822501634 0x7f81e318cd37 4892: buf::a(java.util.function.Predicate, cpc, buf$b) -> java.util.stream.Stream
fifo write: @1699477156867656264 0x7f81ea5b335b 48: dzy::a(long) -> boolean
fifo write: @1699477156867704545 0x7f81e2dc4b96 1450: akm::a(long, int, boolean) -> void
fifo write: @1699477156867810226 0x7f81e2f0f734 637: buf$a::a(long, int) -> void
fifo write: @1699477156868530236 0x7f81e1402934 602: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::removeEntry(int) -> byte
fifo write: @1699477156869687940 0x7f81ea5b2a50 563: buf$a::c(long) -> int
fifo write: @1699477156871138419 0x7f81ea5b2461 334: akm::a(long, int, boolean) -> void
fifo write: @1699477156871418152 0x7f81ea5b20de 65: akm::b(long, long, int) -> int
fifo write: @1699477156872246553 0x7f81e2a57af9 1627: java.util.HashMap$EntrySpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477156874987728 0x7f81e1cb12d7 18206: ebg::b(cpb, gw) -> eax
fifo write: @1699477156875920750 0x7f81e2ed5dae 15528: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477156875954271 0x7f81e19d01f4 231: ebg::a(eax) -> boolean
fifo write: @1699477156877276848 0x7f81e2a56e1f 1619: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477156877411520 0x7f81e29c8274 1542: ebg::a(cpb, int, int, int, java.util.EnumSet, eax, gw) -> eax
fifo write: @1699477156878185700 0x7f81e3100619 3191: ebg::a(cpb, gw, eax) -> eax
fifo write: @1699477156880981156 0x7f81e2d3cec6 2876: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::rehash(int) -> void
fifo write: @1699477156881564143 0x7f81ea5b0c96 1255: ebg::a(cpb, int, int, int) -> eax
fifo write: @1699477156882689388 0x7f81e23bf814 1734: ebg::a(eaz, eaz, eaz, eaz) -> boolean
fifo write: @1699477156883854013 0x7f81e2d3c894 271: btl::b(akq, bjg) -> void
fifo write: @1699477156884001035 0x7f81e26211f4 6: boj$a$1::a(akq, bjg, long) -> Object
fifo write: @1699477156884039735 0x7f81ea5b08cc 6: blh::a() -> bkx$a
fifo write: @1699477156884456911 0x7f81e1417db4 12189: ebg::a(eaz[], eaz) -> int
fifo write: @1699477156885677436 0x7f81e2b1da3c 4144: dzy::b(int) -> int
fifo write: @1699477156921095951 0x7f81e8c16c10 27: vtable stub
fifo write: @1699477156922665271 0x7f81e30ffe46 674: java.lang.invoke.LambdaForm$MH.0x00007f8160d31c00::linkToTargetMethod(Object, Object, long, Object) -> Object
fifo write: @1699477156922744092 0x7f81e27f0383 1538: java.lang.invoke.LambdaForm$DMH.0x00007f8160d31400::newInvokeSpecial(Object, Object, Object, long) -> Object
fifo write: @1699477156922907535 0x7f81e2731854 1150: boj$b$1::a(akq, bjg, long) -> Object
fifo write: @1699477156962474384 0x7f81e26e79ac 6059: dxe$b::a(cqp, cqn, dhg, asc, dva, cpc, gw) -> void
fifo write: @1699477156970495306 0x7f81e8c16c40 27: vtable stub
fifo write: @1699477156972353480 0x7f81e2d1a9dd 1275: bol$a::a(bkg, java.util.Optional) -> bok
fifo write: @1699477156984708839 0x7f81e9d91ea2 16141: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477156988278265 0x7f81ea990093 7970: dzy::b(int) -> int
fifo write: @1699477157003046685 0x7f81e2d9ed5c 1119: cwc::a(dfj, ha, dfj, cpw, gw, gw) -> dfj
fifo write: @1699477157018532574 0x7f81ea2223a6 12443: ebg::b(cpb, gw) -> eax
fifo write: @1699477157024773965 0x7f81e171c544 3489: bua::a(gw, int, int, java.util.function.Predicate) -> gw
fifo write: @1699477157037227125 0x7f81ea643a8d 7430: dzu::a(long, long) -> void
fifo write: @1699477157039325762 0x7f81eacbc6cc 14560: ebg::a(int, int, int, int, double, ha, eax) -> eaz
fifo write: @1699477157039422383 0x7f81ea5b0450 148: java.util.stream.Sink$ChainedInt::begin(long) -> void
fifo write: @1699477157039606505 0x7f81e2db921c 280: com.mojang.datafixers.Products$P4::apply(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.kinds.App
fifo write: @1699477157039728057 0x7f81e2db8d14 296: com.mojang.datafixers.Products$P4::apply(com.mojang.datafixers.kinds.Applicative, com.mojang.datafixers.util.Function4) -> com.mojang.datafixers.kinds.App
fifo write: @1699477157039768018 0x7f81e9d91671 122: ebg::a(eaz, eaz) -> boolean
fifo write: @1699477157039909659 0x7f81e2f53fee 427: com.mojang.datafixers.kinds.Kind1::group(com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App, com.mojang.datafixers.kinds.App) -> com.mojang.datafixers.Products$P4
fifo write: @1699477157040016591 0x7f81ea5b00b9 30: dio::a(cpc, int) -> long
fifo write: @1699477157071789279 0x7f81ea21bb97 8771: dol::a(dny) -> boolean
fifo write: @1699477157073005015 0x7f81e9d9134c 6: bol$c::a() -> bsh
fifo write: @1699477157075728070 0x7f81ea98f453 980: java.util.HashMap$ValueIterator::next() -> Object
fifo write: @1699477157076013983 0x7f81e288ba94 63: dve::a(cqp, cqn, dhg, asc, dva, cpc, gw) -> void
fifo write: @1699477157076227506 0x7f81e171bf26 361: dve::a(cqp, cqn, dhg, asc, dva, gw, boolean) -> void
fifo write: @1699477157076440279 0x7f81e9d90e60 163: com.google.common.collect.Maps$13::apply(Object) -> Object
fifo write: @1699477157078789079 0x7f81e304981f 18862: dzb::a(cqk, gw, cxq, czh, gw, dva, boolean) -> void
fifo write: @1699477157100000622 0x7f81ea219b43 2548: cxt::a(cpb, ha, gw, dfj) -> boolean
fifo write: @1699477157124645868 0x7f81e9d90b4c 6: buf$b::a() -> java.util.function.Predicate
fifo write: @1699477157135498538 0x7f81eacc6317 9475: dol::a(dny) -> boolean
fifo write: @1699477157175952238 0x7f81e1f1db3f 602: dzq::c(double) -> double
fifo write: @1699477157179323442 0x7f81e8c16900 512: I2C/C2I adapters(0xbbb6bbbbeb)
fifo write: @1699477157179444893 0x7f81e8c16600 512: I2C/C2I adapters(0xbbbb6bbbbe)
fifo write: @1699477157179785848 0x7f81e8c16300 472: I2C/C2I adapters(0xbbbbb6b)
fifo write: @1699477157180225374 0x7f81e1bd1514 31: org.apache.commons.lang3.mutable.MutableLong::getValue() -> Long
fifo write: @1699477157180417326 0x7f81e8c16c70 27: vtable stub
fifo write: @1699477157184696880 0x7f81e9e3a24a 1644: java.lang.invoke.MethodHandles$Lookup::makeHiddenClassDefiner(java.lang.invoke.MethodHandles$Lookup$ClassFile, java.util.Set, boolean) -> java.lang.invoke.MethodHandles$Lookup$ClassDefiner
fifo write: @1699477157221113229 0x7f81ea2401f8 1511: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet::rehash(int) -> void
fifo write: @1699477157225252142 0x7f81e2cdfc99 5246: bji::dx() -> void
fifo write: @1699477157225567296 0x7f81e1eb2b9c 2128: bqy::a() -> boolean
fifo write: @1699477157226908913 0x7f81ea98f14c 6: bug::f() -> gw
fifo write: @1699477157228000147 0x7f81e216e3b4 500: cbh::go() -> cbi
fifo write: @1699477157269820385 0x7f81e1b49ba6 4969: bts::a(bjg, bjg) -> boolean
fifo write: @1699477157271156933 0x7f81e2fefdb9 23194: bji::fg() -> void
fifo write: @1699477157312579795 0x7f81e9cc2303 1606: com.sun.crypto.provider.CipherFeedback::decrypt(byte[], int, int, byte[], int) -> int
fifo write: @1699477157319179130 0x7f81e1b49594 127: it.unimi.dsi.fastutil.ints.IntOpenHashSet::clear() -> void
fifo write: @1699477157321251077 0x7f81e2357294 55: bkg::a(bsh) -> boolean
fifo write: @1699477157321463329 0x7f81e1fb7f94 234: bll$$Lambda$8406.0x00007f8160d2fb50::<init>(akq, bjg, long) -> void
fifo write: @1699477157322211869 0x7f81e2c77ed7 5286: bll::f(akq, bjg, long) -> void
fifo write: @1699477157322502483 0x7f81e171b734 755: aka::a(biq, vd) -> void
fifo write: @1699477157420485432 0x7f81e9cc1fcc 6: cbk::e() -> com.google.common.collect.ImmutableSet
fifo write: @1699477157474084432 0x7f81e2bfff13 863: bol$c::a(bkg, java.util.Optional) -> bok
fifo write: @1699477157474168563 0x7f81e2985baa 4341: bkg::e() -> java.util.List
fifo write: @1699477157474226133 0x7f81e2b02314 185: com.mojang.datafixers.kinds.OptionalBox::<init>(java.util.Optional) -> void
fifo write: @1699477157474299284 0x7f81e260f443 292: com.mojang.datafixers.kinds.OptionalBox::create(java.util.Optional) -> com.mojang.datafixers.kinds.OptionalBox
fifo write: @1699477157474673669 0x7f81e3048499 1757: boj$b$4::a(akq, bjg, long) -> Object
fifo write: @1699477157522159430 0x7f81e2c22999 1329: bmy::a(bjg, int, biu, bjg) -> boolean
fifo write: @1699477157522377533 0x7f81e29c7457 1702: bmy$$Lambda$8442.0x00007f8160d3dd98::test(Object) -> boolean
fifo write: @1699477157522429753 0x7f81e2383379 1451: boj$b$3::a(akq, bjg, long) -> Object
fifo write: @1699477157538372788 0x7f81ea98e6ee 710: java.util.HashMap::replacementTreeNode(java.util.HashMap$Node, java.util.HashMap$Node) -> java.util.HashMap$TreeNode
fifo write: @1699477157538442839 0x7f81e9cc1a10 39: com.google.common.base.Preconditions::checkState(boolean, String, int) -> void
fifo write: @1699477157577195677 0x7f81e1cbb717 1769: bkg::a(bsh, java.util.Optional) -> void
fifo write: @1699477157577273478 0x7f81e20d930f 3295: bkg::b(bsh, java.util.Optional) -> void
fifo write: @1699477157578178980 0x7f81e2b83814 141: bkk$$Lambda$1431.0x00007f8160557940::get() -> Object
fifo write: @1699477157591082776 0x7f81e9a7c81f 12164: akx::<init>(akq, java.util.List, dhk, int) -> void
fifo write: @1699477157592760988 0x7f81e9a7ba73 923: dlf::a(gw) -> asc
fifo write: @1699477157636881545 0x7f81e3105819 383: bkq$$Lambda$8296.0x00007f8160d0af00::apply(Object) -> Object
fifo write: @1699477157637637975 0x7f81e2dc3d57 2064: bkq::a(boolean, org.apache.commons.lang3.mutable.MutableLong, it.unimi.dsi.fastutil.longs.Long2ObjectMap, java.util.function.Predicate, java.util.Optional, bok) -> bom
fifo write: @1699477157637785316 0x7f81e2b00085 576: java.lang.invoke.LambdaForm$MH.0x00007f8160d32c00::linkToTargetMethod(int, Object, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477157638302863 0x7f81e2f6de3e 1322: java.lang.invoke.LambdaForm$DMH.0x00007f8160d32400::newInvokeSpecial(Object, int, Object, Object, Object, Object, Object) -> Object
fifo write: @1699477157638612457 0x7f81e253d214 381: bkq$$Lambda$8403.0x00007f8160d2f4b8::<init>(boolean, org.apache.commons.lang3.mutable.MutableLong, it.unimi.dsi.fastutil.longs.Long2ObjectMap, java.util.function.Predicate, bok, java.util.Optional) -> void
fifo write: @1699477157638753899 0x7f81e2abe89f 420: bkq$$Lambda$8403.0x00007f8160d2f4b8::trigger(akq, bjg, long) -> boolean
fifo write: @1699477157638945921 0x7f81e26a3eb4 706: bll$b$1$$Lambda$8401.0x00007f8160d2ebe8::test(Object) -> boolean
fifo write: @1699477157639062223 0x7f81e2272674 333: bll$b$1::a(bky) -> boolean
fifo write: @1699477157639194095 0x7f81e156b519 386: bll$b$1$$Lambda$8402.0x00007f8160d2ee38::test(Object) -> boolean
fifo write: @1699477157639279556 0x7f81e2c7787d 242: bll$b$1::a(akq, bjg, long, bky) -> boolean
fifo write: @1699477157640276739 0x7f81e310c0ff 14987: bkq::a(boolean, org.apache.commons.lang3.mutable.MutableLong, it.unimi.dsi.fastutil.longs.Long2ObjectMap, java.util.function.Predicate, bok, java.util.Optional, akq, bjp, long) -> boolean
fifo write: @1699477157640379810 0x7f81e2afec34 1075: java.util.stream.SortedOps$AbstractRefSortingSink::<init>(java.util.stream.Sink, java.util.Comparator) -> void
fifo write: @1699477157640530002 0x7f81e23a5a17 3790: java.util.stream.SortedOps$OfRef::opWrapSink(int, java.util.stream.Sink) -> java.util.stream.Sink
fifo write: @1699477157640625343 0x7f81e2d32e14 185: buh$$Lambda$7148.0x00007f8160b9a430::<init>(java.util.function.Predicate) -> void
fifo write: @1699477157640697024 0x7f81e2b08d34 1078: buh$$Lambda$7148.0x00007f8160b9a430::test(Object) -> boolean
fifo write: @1699477157640784405 0x7f81e2f73714 705: buh::a(java.util.function.Predicate, java.util.Map$Entry) -> boolean
fifo write: @1699477157640898417 0x7f81e1e01f5c 2743: buh::a(java.util.function.Predicate, buf$b) -> java.util.stream.Stream
fifo write: @1699477157643429179 0x7f81e9a7af2c 400: ebg::a(eaz, eaz, eaz, eaz) -> boolean
fifo write: @1699477157645392274 0x7f81e2add526 5450: bkg::d(akq, bjg) -> void
fifo write: @1699477157700165329 0x7f81ea641fd6 2194: java.util.stream.ReferencePipeline::findFirst() -> java.util.Optional
fifo write: @1699477157705338825 0x7f81e9a7a8d0 35: java.util.HashSet::size() -> int
fifo write: @1699477157738316209 0x7f81ea88111c 8151: eiw::a(long) -> void
fifo write: @1699477157740564258 0x7f81ea8801f8 877: dlx::a(cqp, gw) -> boolean
fifo write: @1699477157771650478 0x7f81e9a7a250 119: cpm$$Lambda$7337.0x00007f8160bd7610::test(Object) -> boolean
fifo write: @1699477157771886551 0x7f81e9a79ee8 39: biq::h(biq) -> boolean
fifo write: @1699477157772045083 0x7f81e2adcdf4 333: bll::b(bky) -> boolean
fifo write: @1699477157772089673 0x7f81e28cb4b4 706: bll$$Lambda$8408.0x00007f8160d34000::test(Object) -> boolean
fifo write: @1699477157772728181 0x7f81e23be4b9 2451: bll::a(bjg) -> boolean
fifo write: @1699477157772845293 0x7f81e20d81b1 1703: bll::e(akq, bjg, long) -> boolean
fifo write: @1699477157772901954 0x7f81e2e49514 240: bll$a::a(bnf) -> void
fifo write: @1699477157773034645 0x7f81e23c7d14 234: bll$b$1$$Lambda$8402.0x00007f8160d2ee38::<init>(akq, bjg, long) -> void
fifo write: @1699477157773540452 0x7f81e20a27ea 3125: bll$b$1::a(java.util.stream.Stream, akq, bjg, long) -> void
fifo write: @1699477157815470471 0x7f81e195d937 12295: cpv::a(gw, dfj, int, int) -> boolean
fifo write: @1699477157820232162 0x7f81e28f9f14 770: buf::a(java.util.function.Predicate, buf$b, java.util.Optional) -> java.util.stream.Stream
fifo write: @1699477157820293853 0x7f81e2984fd7 1097: buf$$Lambda$8426.0x00007f8160d37208::apply(Object) -> Object
fifo write: @1699477157820621917 0x7f81e195d194 185: bll$$Lambda$8410.0x00007f8160d34490::<init>(bkg) -> void
fifo write: @1699477157820667138 0x7f81e23c7794 234: bll$$Lambda$8409.0x00007f8160d34250::<init>(akq, bjg, long) -> void
fifo write: @1699477157820762799 0x7f81e23a5414 387: bll$a$$Lambda$8261.0x00007f8160cfd1f8::accept(Object) -> void
fifo write: @1699477157821116974 0x7f81e23a4e14 407: boe::c(bjg) -> boolean
fifo write: @1699477157821181884 0x7f81ea64164c 9: cbc::gd() -> cbu
fifo write: @1699477157821330356 0x7f81e21a235f 4543: bkg::k() -> void
fifo write: @1699477157821437968 0x7f81e21a1c14 407: boe::b(bjg) -> boolean
fifo write: @1699477157821677101 0x7f81e26a74d7 1041: bll$$Lambda$8410.0x00007f8160d34490::accept(Object) -> void
fifo write: @1699477157821791642 0x7f81e26a6d19 383: bll$$Lambda$8406.0x00007f8160d2fb50::accept(Object) -> void
fifo write: @1699477157821882103 0x7f81e21a16fd 239: bll::b(akq, bjg, long, bky) -> void
fifo write: @1699477157823379033 0x7f81e196fc67 14239: dzq::<init>(asc, com.mojang.datafixers.util.Pair, boolean) -> void
fifo write: @1699477157829699564 0x7f81e30d611f 44295: doc::a(dny) -> boolean
fifo write: @1699477157871084516 0x7f81e314e7df 47024: doc::a(dny) -> boolean
fifo write: @1699477157871879246 0x7f81e2bd2174 101: bsg::e() -> boolean
fifo write: @1699477157872047919 0x7f81e2da4194 263: blh::f(akq, bjg, long) -> void
fifo write: @1699477157872772818 0x7f81e2da2127 4998: bll::g(akq, bjg, long) -> void
fifo write: @1699477157874490640 0x7f81ea6410ec 251: it.unimi.dsi.fastutil.ints.IntOpenHashSet::clear() -> void
fifo write: @1699477157894752571 0x7f81e2ce3714 144: akx::a(biq, ehi, java.util.function.Predicate) -> java.util.List
fifo write: @1699477157933217085 0x7f81e2e32a94 243: bkg::c(cdf) -> boolean
fifo write: @1699477157934036406 0x7f81e8c16000 632: I2C/C2I adapters(0xbbbbabbb6abbbeb)
fifo write: @1699477157934177678 0x7f81e8c15d00 632: I2C/C2I adapters(0xbbbbbabbb6abbbe)
fifo write: @1699477157934256829 0x7f81e8c15a00 552: I2C/C2I adapters(0xbbbbbabbb6a)
fifo write: @1699477157934274309 0x7f81e8c15700 576: I2C/C2I adapters(0xbbbbbabbb6ab)
fifo write: @1699477157934620863 0x7f81e8c15400 576: I2C/C2I adapters(0xbbbbbbabbb6a)
fifo write: @1699477157934639173 0x7f81e8c15100 552: I2C/C2I adapters(0xbbbbabbb6ab)
fifo write: @1699477157935174420 0x7f81e2e315dd 2792: cdj::a(int) -> float
fifo write: @1699477157935612606 0x7f81eac7f974 719: ebm::a(gw, ebm$c) -> void
fifo write: @1699477157952925369 0x7f81e2e30e17 585: java.util.LinkedList$ListItr::<init>(java.util.LinkedList, int) -> void
fifo write: @1699477157961358797 0x7f81eaccd352 18157: doc::a(dny) -> boolean
fifo write: @1699477157962206098 0x7f81eac7f1a7 548: java.util.LinkedList$ListItr::<init>(java.util.LinkedList, int) -> void
fifo write: @1699477157963518715 0x7f81eac7e7d0 219: dnw$$Lambda$8014.0x00007f8160cb2dc0::test(Object) -> boolean
fifo write: @1699477157963916640 0x7f81eac7e3de 137: dfi$a::b(cpw, gw, int, int) -> void
fifo write: @1699477157972331848 0x7f81eac86edf 3005: java.lang.invoke.MethodHandles$Lookup$ClassDefiner::defineClass(boolean, Object) -> Class
fifo write: @1699477157976580223 0x7f81eacdb60b 12501: cpv::a(gw, dfj, int, int) -> boolean
fifo write: @1699477157979908195 0x7f81eac85aba 1750: ebm::a(gw, csv, ha) -> void
fifo write: @1699477157984965851 0x7f81e29ba9da 1266: java.util.stream.SortedOps$RefSortingSink::begin(long) -> void
fifo write: @1699477157985190104 0x7f81e97947ea 3542: dfi$a::a(cpw, gw, int, int) -> void
fifo write: @1699477157985223694 0x7f81e2f18b74 98: cbc::ge() -> boolean
fifo write: @1699477157985696380 0x7f81e29b8abc 4492: java.util.stream.SortedOps$RefSortingSink::end() -> void
fifo write: @1699477158023137751 0x7f81eac8574c 6: bok::a() -> com.mojang.datafixers.kinds.App
fifo write: @1699477158023977842 0x7f81e8c14e00 544: I2C/C2I adapters(0xbbbbbbbbbeb)
fifo write: @1699477158024101774 0x7f81e8c14b00 544: I2C/C2I adapters(0xbbbbbbbbbbe)
fifo write: @1699477158025263109 0x7f81eac7dc59 118: daj$$Lambda$7255.0x00007f8160bb6258::tick(cpv, gw, dfj, dcv) -> void
fifo write: @1699477158036420022 0x7f81eace3dda 6257: zi::a(so) -> void
fifo write: @1699477158077354518 0x7f81eac7d8d9 54: bnf$$Lambda$8400.0x00007f8160d2e9a8::apply(Object) -> Object
fifo write: @1699477158123822366 0x7f81e2e30914 322: bsg::a() -> void
fifo write: @1699477158223920583 0x7f81e9793d52 709: java.util.TreeMap$ValueIterator::next() -> Object
fifo write: @1699477158262683401 0x7f81e1a2a899 703: io.netty.buffer.PoolThreadCache::trim(io.netty.buffer.PoolThreadCache$MemoryRegionCache[]) -> void
fifo write: @1699477158274807757 0x7f81e1a2a374 323: djl::o(dja) -> boolean
fifo write: @1699477158274857558 0x7f81e1a29cb4 696: djl$$Lambda$8126.0x00007f8160cd7c98::test(Object) -> boolean
fifo write: @1699477158275203262 0x7f81e1a28ff7 1508: djl$$Lambda$8127.0x00007f8160cd2000::accept(Object) -> void
fifo write: @1699477158323686825 0x7f81e250577c 1016: bkg::a(long, long) -> void
fifo write: @1699477158325546529 0x7f81e1a28b14 185: java.util.Comparator$$Lambda$3713.0x00007f81607cb2c0::<init>(java.util.function.ToDoubleFunction) -> void
fifo write: @1699477158325818923 0x7f81e25048fc 2006: java.util.Comparator::comparingDouble(java.util.function.ToDoubleFunction) -> java.util.Comparator
fifo write: @1699477158371337348 0x7f81e1a28594 202: bmh::f(akq, bjg, long) -> void
fifo write: @1699477158371386319 0x7f81e2e30514 61: bmh::g(akq, bjg, long) -> void
fifo write: @1699477158377899753 0x7f81ea023696 2652: bji::dx() -> void
fifo write: @1699477158469577311 0x7f81e2504474 91: bkx::a(long) -> boolean
fifo write: @1699477158469623202 0x7f81e2503cd4 783: bkx::f(akq, bjg, long) -> void
fifo write: @1699477158474916130 0x7f81e282fefe 1256: bkg::c(akq, bjg) -> void
fifo write: @1699477158508576892 0x7f81e282f2d4 1585: dte$$Lambda$8136.0x00007f8160cd3860::test(Object) -> boolean
fifo write: @1699477158508622623 0x7f81e282e894 1244: dte::a(dfj) -> boolean
fifo write: @1699477158517440297 0x7f81ea022952 1066: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet::rehash(int) -> void
fifo write: @1699477158518484150 0x7f81e979385d 186: it.unimi.dsi.fastutil.shorts.ShortArrayList::listIterator(int) -> it.unimi.dsi.fastutil.shorts.ShortListIterator
fifo write: @1699477158523759058 0x7f81e979354c 6: bsg::c() -> Object
fifo write: @1699477158524027661 0x7f81e2503614 392: cpe$b$$Lambda$7383.0x00007f8160be2440::test(Object) -> boolean
fifo write: @1699477158525061734 0x7f81e2cef99f 7877: bsp::c() -> void
fifo write: @1699477158528106254 0x7f81ea022431 182: java.util.Arrays::sort(Object[], int, int, java.util.Comparator) -> void
fifo write: @1699477158557165227 0x7f81e2ea4579 2371: bur::b(biu, cpw, bjk, gw, asc) -> boolean
fifo write: @1699477158576343434 0x7f81e282e294 437: boj$b::b(bok) -> Object
fifo write: @1699477158576431705 0x7f81e2ea353c 2075: boj$b$5::a(akq, bjg, long) -> Object
fifo write: @1699477158583833590 0x7f81e282de14 240: dia::b(qw) -> void
fifo write: @1699477158642402114 0x7f81eace91f2 20921: doc::a(dny) -> boolean
fifo write: @1699477158677429173 0x7f81e157fa5f 4932: bpd::a() -> void
fifo write: @1699477158679454449 0x7f81e1585ffc 2831: cbh::l() -> void
fifo write: @1699477158679572221 0x7f81e157f334 191: bkg::a(akq, bjg) -> void
fifo write: @1699477158679950156 0x7f81e1584f17 2121: bnq::a(akq, bjg) -> boolean
fifo write: @1699477158680280760 0x7f81e2a2f674 1748: bnq::a(akq, bji) -> boolean
fifo write: @1699477158680383101 0x7f81e1584794 348: boe::d(akq, bjg, long) -> void
fifo write: @1699477158680775217 0x7f81e2df5bff 12111: cbh::X() -> void
fifo write: @1699477158680898868 0x7f81e2df4d54 1143: bof$$Lambda$8282.0x00007f8160d07c58::trigger(akq, bjg, long) -> boolean
fifo write: @1699477158681032370 0x7f81e2ea2ab4 1048: bof::a(akq, bjg, long) -> boolean
fifo write: @1699477158681108621 0x7f81e157ee94 31: bmz$$Lambda$8287.0x00007f8160d088d0::trigger(akq, bjg, long) -> boolean
fifo write: @1699477158681565917 0x7f81e2ef2aff 5592: boe::b(akq, cbh, long) -> void
fifo write: @1699477158718456511 0x7f81e2a2d67f 4470: dam::b(dfj, cpy, gw) -> boolean
fifo write: @1699477158768070439 0x7f81eacf989b 16806: bji::fg() -> void
fifo write: @1699477158768161970 0x7f81ea0220d0 55: java.util.PriorityQueue::clear() -> void
fifo write: @1699477158768433033 0x7f81ea021cd3 100: eiw::b() -> void
fifo write: @1699477158769560128 0x7f81ea021399 778: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$FastEntryIterator::<init>(it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap, it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap$1) -> void
fifo write: @1699477158770743303 0x7f81e30b997f 15303: bpe::a() -> void
fifo write: @1699477158770847174 0x7f81ea017bf3 656: eiw::c() -> void
fifo write: @1699477158772375454 0x7f81ea0168c3 1172: eiw::a(long, int, java.util.function.BiConsumer) -> void
fifo write: @1699477158772870091 0x7f81e2967441 2513: bsj::a(java.util.function.Predicate) -> java.util.Optional
fifo write: @1699477158772953992 0x7f81e2ef2314 301: bnf::a(bnf$a) -> void
fifo write: @1699477158773050453 0x7f81e30b8e34 660: bnf$$Lambda$8398.0x00007f8160d2e550::accept(Object) -> void
fifo write: @1699477158773118454 0x7f81e30b8a34 76: bnf$a::a(float) -> void
fifo write: @1699477158773383567 0x7f81ea020f73 128: bll$$Lambda$8405.0x00007f8160d2f900::test(Object) -> boolean
fifo write: @1699477158774364830 0x7f81ea01631f 382: com.google.common.collect.Iterables$UnmodifiableIterable::<init>(Iterable, com.google.common.collect.Iterables$1) -> void
fifo write: @1699477158779951232 0x7f81ead06748 4007: cvr::o(dfj) -> int
fifo write: @1699477158868890175 0x7f81e30b8414 393: bru$$Lambda$7378.0x00007f8160be6c48::test(Object) -> boolean
fifo write: @1699477158870264583 0x7f81ea020b4c 6: bsk::a() -> bmk
fifo write: @1699477158870618058 0x7f81ea015fcc 6: bug::g() -> he
fifo write: @1699477158870959932 0x7f81ea0159f4 251: bkg::a(bsh, bsi) -> boolean
fifo write: @1699477158872183948 0x7f81ea013afa 2618: eas::b(eam) -> dfj
fifo write: @1699477158923113132 0x7f81e2966bb6 868: bmy$$Lambda$8271.0x00007f8160d050d0::apply(Object, Object, Object) -> Object
fifo write: @1699477158923271654 0x7f81e2966585 576: java.lang.invoke.LambdaForm$MH.0x00007f8160d3ac00::linkToTargetMethod(Object, Object, int, Object, Object, Object, Object) -> Object
fifo write: @1699477158923397706 0x7f81e29657d7 2043: bmy::a(boj$b, int, biu, bok, bok, bok) -> bom
fifo write: @1699477158923480857 0x7f81ea0135e3 180: boj$1::trigger(akq, bjg, long) -> boolean
fifo write: @1699477158923592598 0x7f81e2a37214 379: bmy$$Lambda$8441.0x00007f8160d3db70::<init>(boj$b, bok, int, biu, bok, bok) -> void
fifo write: @1699477158923685350 0x7f81e2a3673e 1330: java.lang.invoke.LambdaForm$DMH.0x00007f8160d3a400::newInvokeSpecial(Object, Object, Object, int, Object, Object, Object) -> Object
fifo write: @1699477158923729310 0x7f81e2a3621d 102: bmy$$Lambda$8441.0x00007f8160d3db70::trigger(akq, bjg, long) -> boolean
fifo write: @1699477158923763871 0x7f81e2a35d14 233: bmy$$Lambda$8442.0x00007f8160d3dd98::<init>(bjg, int, biu) -> void
fifo write: @1699477158924308478 0x7f81e1535c87 6415: bmy::a(boj$b, bok, int, biu, bok, bok, akq, bjg, long) -> boolean
fifo write: @1699477158925131118 0x7f81ead09721 470: boj$d$1::b(akq, bjg, long) -> bok
fifo write: @1699477158925296730 0x7f81ead0a121 462: boj$d$1::a(akq, bjg, long) -> Object
fifo write: @1699477158993439737 0x7f81ead0ab72 1780: java.util.concurrent.CompletableFuture$AsyncSupply::run() -> void
fifo write: @1699477159002107978 0x7f81ead0c138 7787: akr::m() -> void
fifo write: @1699477159033806586 0x7f81e2a34957 2753: bkg::c(bsh) -> java.util.Optional
fifo write: @1699477159034181270 0x7f81e8c13600 472: I2C/C2I adapters(0xbbb6abb)
fifo write: @1699477159034292372 0x7f81e8c11880 472: I2C/C2I adapters(0xbbbb6ab)
fifo write: @1699477159034432024 0x7f81ead12977 292: java.util.ArrayList$ArrayListSpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477159034448464 0x7f81e8c13300 464: I2C/C2I adapters(0xbbbb6a)
fifo write: @1699477159034565535 0x7f81ead13368 381: bmh::e(akq, bjg, long) -> boolean
fifo write: @1699477159038149962 0x7f81e1535337 677: java.util.Collection::spliterator() -> java.util.Spliterator
fifo write: @1699477159038199262 0x7f81e2d96657 1159: dje::b() -> java.util.stream.Stream
fifo write: @1699477159040474432 0x7f81ead13ee7 308: io.netty.buffer.PoolChunkList::allocate(io.netty.buffer.PooledByteBuf, int, int, io.netty.buffer.PoolThreadCache) -> boolean
fifo write: @1699477159066763819 0x7f81e2d94cba 3918: ead::a(cpb, dfj, gw, dfj, gw, ha, int) -> int
fifo write: @1699477159121432712 0x7f81e2d94714 231: bkx::g(akq, bjg, long) -> void
fifo write: @1699477159152884756 0x7f81e2f49e5e 3651: dzw::a(cpb, int, int, int) -> boolean
fifo write: @1699477159202083879 0x7f81ead14b52 10198: dom::a(dny) -> boolean
fifo write: @1699477159269528526 0x7f81e2d94214 351: bmb::a(akq, bjg) -> boolean
fifo write: @1699477159269944112 0x7f81e2f48917 2747: bmb::a(akq, cbh) -> boolean
fifo write: @1699477159270032283 0x7f81e2d93c14 394: bkq$$Lambda$8298.0x00007f8160d0b390::apply(Object) -> Object
fifo write: @1699477159270188585 0x7f81e310a914 335: bmq$$Lambda$8404.0x00007f8160d2f6e0::trigger(akq, bjg, long) -> boolean
fifo write: @1699477159270234005 0x7f81e310a3f4 436: bmq::a(bok) -> bom
fifo write: @1699477159270309556 0x7f81e3109d34 777: bmq$$Lambda$8306.0x00007f8160d151a8::apply(Object) -> Object
fifo write: @1699477159270359347 0x7f81e3109914 31: bnx$$Lambda$8276.0x00007f8160d062e0::trigger(akq, bjg, long) -> boolean
fifo write: @1699477159270573630 0x7f81e3108eb9 1166: bnx::a(akq, bjg, long) -> boolean
fifo write: @1699477159270661481 0x7f81e3108121 1718: bkg::e(akq, bjg) -> void
fifo write: @1699477159270906904 0x7f81e3107377 1321: boe::a(akq, bjg, long) -> boolean
fifo write: @1699477159270947184 0x7f81e175bd54 956: boe::a(akq, cbh, long) -> boolean
fifo write: @1699477159271068546 0x7f81e175a2bf 3425: bmq::a(akq, cbh, long) -> boolean
fifo write: @1699477159271137007 0x7f81e1759b94 495: cbh::W() -> void
fifo write: @1699477159271306829 0x7f81e1759239 943: cbh::gM() -> void
fifo write: @1699477159271416380 0x7f81e1758ab4 539: buu::gl() -> boolean
fifo write: @1699477159271444761 0x7f81e2d303b4 539: buu::gm() -> boolean
fifo write: @1699477159271490271 0x7f81ead1c04c 3: brj::i() -> boolean
fifo write: @1699477159272128059 0x7f81e2d2e047 4950: bmz::a(akq, bjg, long) -> boolean
fifo write: @1699477159294874342 0x7f81ead1c398 103: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapEntrySet::iterator() -> it.unimi.dsi.fastutil.objects.ObjectIterator
fifo write: @1699477159308558358 0x7f81ead1cfed 31347: doc::a(dny) -> boolean
fifo write: @1699477159326627231 0x7f81e2d2d734 682: bki::b(java.util.UUID) -> void
fifo write: @1699477159326726102 0x7f81ead32d4c 6: bla::b() -> gw
fifo write: @1699477159343403136 0x7f81e2c6dd59 1255: akx::b(biq) -> boolean
fifo write: @1699477159343456877 0x7f81e2d2d114 461: djl$$Lambda$7968.0x00007f8160ca3b30::accept(Object) -> void
fifo write: @1699477159343532768 0x7f81e2c6c91a 2965: dia::a(biq) -> void
fifo write: @1699477159343568028 0x7f81e2c6c494 31: djl::p(dja) -> void
fifo write: @1699477159343662440 0x7f81e2c6bf74 323: djl::m(dja) -> boolean
fifo write: @1699477159343707980 0x7f81e2c6b8b4 696: djl$$Lambda$7848.0x00007f8160c8a778::test(Object) -> boolean
fifo write: @1699477159343816072 0x7f81e2c6af54 971: djl$$Lambda$7849.0x00007f8160c8a9c8::accept(Object) -> void
fifo write: @1699477159358628612 0x7f81ead33050 107: dkv$$Lambda$8080.0x00007f8160ccd188::apply(Object) -> Object
fifo write: @1699477159359115098 0x7f81ead33459 62: dlj$v::apply(Object) -> Object
fifo write: @1699477159379630852 0x7f81ead3394b 4970: dlk::a(dlj$o, dms, java.util.function.Function, dhf, dkw, gw, boolean) -> java.util.Optional
fifo write: @1699477159383767125 0x7f81e2ded694 871: bte$$Lambda$8432.0x00007f8160d3c490::applyAsDouble(Object) -> double
fifo write: @1699477159386940556 0x7f81ead37254 199: jdk.internal.misc.Unsafe::checkPrimitivePointer(Object, long) -> void
fifo write: @1699477159427264884 0x7f81e2deccd4 1049: bvu::Y() -> int
fifo write: @1699477159428786224 0x7f81e2dec01f 1619: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477159429049917 0x7f81e2deb014 1734: ebg::a(eaz, eaz, eaz, eaz) -> boolean
fifo write: @1699477159431373697 0x7f81ead37acc 6: hd::b() -> gw
fifo write: @1699477159432965488 0x7f81e2dea894 686: buh::a(java.util.Map$Entry) -> java.util.stream.Stream
fifo write: @1699477159433017958 0x7f81e2de9eb4 1056: buh$$Lambda$7149.0x00007f8160b9a688::apply(Object) -> Object
fifo write: @1699477159433694267 0x7f81ead37dcc 5: bso::d(boolean) -> void
fifo write: @1699477159467076506 0x7f81e2e77b8f 9027: akq::a(gw, dfj, dfj, int) -> void
fifo write: @1699477159469005621 0x7f81e2277027 2823: bsp::b(gw) -> boolean
fifo write: @1699477159478837848 0x7f81e28d78b9 23194: bji::fg() -> void
fifo write: @1699477159506324631 0x7f81ead3825f 8451: bkg::e() -> java.util.List
fifo write: @1699477159528848350 0x7f81ead3d1d3 1272: cbh::go() -> cbi
fifo write: @1699477159565369660 0x7f81ead3e491 78: hw::b(gw) -> short
fifo write: @1699477159571062493 0x7f81e2c6a999 170: java.util.ArrayList::indexOf(Object) -> int
fifo write: @1699477159619347524 0x7f81e2e77294 189: bsg::<init>(Object, long) -> void
fifo write: @1699477159623955823 0x7f81ead3e8ba 2957: ajy::a(gw) -> void
fifo write: @1699477159661944891 0x7f81ead40a0f 594: java.util.concurrent.locks.ReentrantLock::lock() -> void
fifo write: @1699477159670585912 0x7f81ead411cc 6: bsp::j() -> ebb
fifo write: @1699477159670656443 0x7f81e2276919 541: java.util.ArrayList::contains(Object) -> boolean
fifo write: @1699477159671223091 0x7f81e227573a 2319: bkg::a(bsh, Object) -> void
fifo write: @1699477159697499638 0x7f81ead41edb 37486: ebg::a(eaz[], eaz) -> int
fifo write: @1699477159723782766 0x7f81e22743be 2209: aaa::a(so) -> void
fifo write: @1699477159729521300 0x7f81ead58695 3534: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::find(Object) -> int
fifo write: @1699477159741459133 0x7f81e2208bfa 106: java.util.HashMap::newTreeNode(int, Object, Object, java.util.HashMap$Node) -> java.util.HashMap$TreeNode
fifo write: @1699477159775640213 0x7f81ead5abd1 146: java.util.Optional::equals(Object) -> boolean
fifo write: @1699477159784402155 0x7f81ead5b079 1522: java.lang.ref.ReferenceQueue::enqueue(java.lang.ref.Reference) -> boolean
fifo write: @1699477159784845961 0x7f81ead5be73 1656: java.lang.ref.Reference::enqueueFromPending() -> void
fifo write: @1699477159787559516 0x7f81ead5cd4c 2: bsk::c() -> int
fifo write: @1699477159788789232 0x7f81ead5d050 227: ebb::h() -> eaz
fifo write: @1699477159789349619 0x7f81e2208674 350: java.util.function.BinaryOperator::lambda$maxBy$1(java.util.Comparator, Object, Object) -> Object
fifo write: @1699477159789418420 0x7f81e2208094 447: java.util.function.BinaryOperator$$Lambda$8356.0x00007f8160965218::apply(Object, Object) -> Object
fifo write: @1699477159794726949 0x7f81ead5d61e 1415: it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap::put(Object, int) -> int
fifo write: @1699477159802701781 0x7f81ead5e833 3219: sun.nio.fs.UnixNativeDispatcher::copyToNativeBuffer(sun.nio.fs.UnixPath) -> sun.nio.fs.NativeBuffer
fifo write: @1699477159810122627 0x7f81ead60cbd 2674: sun.nio.fs.NativeBuffers::releaseNativeBuffer(sun.nio.fs.NativeBuffer) -> void
fifo write: @1699477159819542217 0x7f81e2207b47 306: bsg::a(Object) -> bsg
fifo write: @1699477159841892265 0x7f81ead62bcd 8077: bkg::e() -> java.util.List
fifo write: @1699477159891070837 0x7f81ead68128 3079: bpd::a() -> void
fifo write: @1699477159891360281 0x7f81ead6a951 158: ebg::a(cpb, gw, eax) -> eax
fifo write: @1699477159891876857 0x7f81ead6add0 107: cxi::a(dfj, cpb, gw, ebc) -> boolean
fifo write: @1699477159926371531 0x7f81ead6b594 10443: ebg::a(cpb, int, int, int, java.util.EnumSet, eax, gw) -> eax
fifo write: @1699477159960272727 0x7f81ead713c2 16221: ebg::a(bji, int, int, int) -> eax
fifo write: @1699477159972273241 0x7f81e2bcc37f 12007: dsz::a(cqb, java.util.function.BiConsumer, asc, int, gw, dqw) -> java.util.List
fifo write: @1699477159993411343 0x7f81ead7b253 5909: bpe::a() -> void
fifo write: @1699477159998094043 0x7f81ead7fc7d 9022: bts::a(bjg, bjg) -> boolean
fifo write: @1699477160034537942 0x7f81ead86155 422: it.unimi.dsi.fastutil.longs.Long2ObjectMaps$SynchronizedMap::long2ObjectEntrySet() -> it.unimi.dsi.fastutil.objects.ObjectSet
fifo write: @1699477160073646974 0x7f81ead866f4 679: ako::a(gw) -> void
fifo write: @1699477160128454479 0x7f81ead87259 920: bol$b::a(bkg, java.util.Optional) -> bok
fifo write: @1699477160147995330 0x7f81ead87d24 5559: bkx::e(akq, bjg, long) -> boolean
fifo write: @1699477160181569282 0x7f81ead8b804 3842: akq::a(gw, dfj, dfj, int) -> void
fifo write: @1699477160223649583 0x7f81ead8ec57 58: btl::b(akq, bjg) -> void
fifo write: @1699477160225967873 0x7f81ead8f01c 380: ebg::a(eaz, eaz, eaz, eaz) -> boolean
fifo write: @1699477160269366790 0x7f81ead8f828 1417: eak::a(cpy, gw) -> int
fifo write: @1699477160270924881 0x7f81ead90af3 128: bll$$Lambda$8407.0x00007f8160d2fd90::test(Object) -> boolean
fifo write: @1699477160320557419 0x7f81ead90f18 73: ehn::a(double) -> ehn
fifo write: @1699477160345904354 0x7f81ead914f1 7631: bkg::d(akq, bjg) -> void
fifo write: @1699477160369626930 0x7f81e2bcbaf4 243: boc::d(he) -> boolean
fifo write: @1699477160369674720 0x7f81e2bcb4b4 616: boc$$Lambda$8301.0x00007f8160d14240::test(Object) -> boolean
fifo write: @1699477160369719161 0x7f81e2207514 512: buf$b$$Lambda$7145.0x00007f8160b99d40::test(Object) -> boolean
fifo write: @1699477160369749521 0x7f81e22070f4 90: bug::d() -> boolean
fifo write: @1699477160378710446 0x7f81ead95f33 2943: bso::a() -> boolean
fifo write: @1699477160527547020 0x7f81ead9882c 3715: java.util.HashMap$TreeNode::find(int, Object, Class) -> java.util.HashMap$TreeNode
fifo write: @1699477160531852475 0x7f81e2206c74 243: cbk::a(he) -> boolean
fifo write: @1699477160531917256 0x7f81e2206634 616: cbk$$Lambda$1880.0x00007f8160600658::test(Object) -> boolean
fifo write: @1699477160539079928 0x7f81ead9af30 143: hw::a(long, ha) -> long
fifo write: @1699477160569660391 0x7f81e2205bd4 1310: com.google.common.collect.ImmutableList::copyOf(Iterable) -> com.google.common.collect.ImmutableList
fifo write: @1699477160624106822 0x7f81ead9b34c 6: dai::d() -> apc
fifo write: @1699477160701298543 0x7f81ead9ba37 29528: eaa::a(ead) -> void
fifo write: @1699477160702485829 0x7f81eadaf39d 846: boj$b$1::a(akq, bjg, long) -> Object
fifo write: @1699477160712980084 0x7f81eadb020c 173: java.util.Spliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477160766761065 0x7f81e2205794 141: bkk$$Lambda$7949.0x00007f8160ca5998::get() -> Object
fifo write: @1699477160778476846 0x7f81eadb0d32 18326: bvt::aq() -> void
fifo write: @1699477160826880458 0x7f81e22047b7 2104: bmc::a(akq, bjg, long) -> boolean
fifo write: @1699477160826975389 0x7f81e2204294 185: bmc$$Lambda$8468.0x00007f8160d45898::<init>(bji) -> void
fifo write: @1699477160827110391 0x7f81e2f40a7c 2772: bmc::a(akq, bji, long) -> boolean
fifo write: @1699477160827179872 0x7f81e2203df7 240: bmc::b(bji, bmk) -> boolean
fifo write: @1699477160827223752 0x7f81e2203794 616: bmc$$Lambda$8468.0x00007f8160d45898::test(Object) -> boolean
fifo write: @1699477160827571717 0x7f81e2f3fb1c 1829: bmc::c(akq, bji, long) -> void
fifo write: @1699477160827708869 0x7f81e2f3eab7 2212: bmc::c(akq, bjg, long) -> void
fifo write: @1699477160827767650 0x7f81e2f3dfd9 1064: java.util.stream.Streams$RangeIntSpliterator::forEachRemaining(java.util.function.IntConsumer) -> void
fifo write: @1699477160827805860 0x7f81e2203214 185: bmc$$Lambda$8469.0x00007f8160d45af0::<init>(bji) -> void
fifo write: @1699477160827934142 0x7f81e2f3d734 964: bmc$$Lambda$8469.0x00007f8160d45af0::accept(Object) -> void
fifo write: @1699477160827988712 0x7f81e2f3c99e 1881: java.util.Spliterator$OfInt::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477160828430978 0x7f81e2f39e59 3318: bpe::a() -> void
fifo write: @1699477160828471679 0x7f81e2f39574 594: bmc::a(bji, bmk) -> void
fifo write: @1699477160909767964 0x7f81eadbf13b 18868: bji::fg() -> void
fifo write: @1699477160944838844 0x7f81eadcd2c0 6991: bkg::d(akq, bjg) -> void
fifo write: @1699477160945252300 0x7f81eadd22f9 150: hy::a(ho, double) -> boolean
fifo write: @1699477160972612101 0x7f81eadd2e21 398: ajy::a(java.util.List, vd) -> void
fifo write: @1699477160974120181 0x7f81e2f3909a 291: java.util.stream.ReferencePipeline::sorted(java.util.Comparator) -> java.util.stream.Stream
fifo write: @1699477160974194312 0x7f81e2f38c5a 106: java.util.stream.SortedOps::makeRef(java.util.stream.AbstractPipeline, java.util.Comparator) -> java.util.stream.Stream
fifo write: @1699477160974300443 0x7f81e2fc21dc 1063: java.util.stream.SortedOps$OfRef::<init>(java.util.stream.AbstractPipeline, java.util.Comparator) -> void
fifo write: @1699477161003891094 0x7f81eadd3f3a 17444: bsp::c() -> void
fifo write: @1699477161023805580 0x7f81e2fc1934 777: bmg::a(bji, bsk) -> boolean
fifo write: @1699477161023976172 0x7f81e2fc0db4 1541: hy::k(hy) -> int
fifo write: @1699477161065295893 0x7f81eade0bdb 1: czw::a(cbu, cpb, gw, dfj, eal) -> boolean
fifo write: @1699477161070600692 0x7f81e2fc0794 464: bsj$$Lambda$8435.0x00007f8160d3cd98::test(Object) -> boolean
fifo write: @1699477161070665742 0x7f81e2fc0377 109: bsj::a(it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap, java.util.function.Predicate, bjg) -> boolean
fifo write: @1699477161070726553 0x7f81e2fbfa63 854: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::computeIfAbsent(Object, java.util.function.Predicate) -> boolean
fifo write: @1699477161077383178 0x7f81eade0f0f 1536: biq$$Lambda$7951.0x00007f8160ca5df8::accept(Object) -> void
fifo write: @1699477161118989913 0x7f81e2fbf334 600: bsj::a(bjg) -> boolean
fifo write: @1699477161119940145 0x7f81eade2674 884: bqy::a() -> boolean
fifo write: @1699477161159751408 0x7f81eade395c 11662: bvq::b_() -> void
fifo write: @1699477161160433886 0x7f81eadec173 304: io.netty.util.concurrent.PromiseCombiner$1::operationComplete0(io.netty.util.concurrent.Future) -> void
fifo write: @1699477161169020547 0x7f81eadec84c 6: hd::a() -> aev
fifo write: @1699477161230102642 0x7f81eadecb6b 146: bpd::a(double, double, double) -> void
fifo write: @1699477161278642956 0x7f81eaded141 3886: dam::b(dfj, cpy, gw) -> boolean
fifo write: @1699477161282960681 0x7f81eadf0553 5826: bpe::a() -> void
fifo write: @1699477161322122875 0x7f81e2fbe437 1820: bkg::b(bsh) -> void
fifo write: @1699477161335591168 0x7f81eadf4fd2 12162: io.netty.channel.AbstractChannelHandlerContext::invokeFlush0() -> void
fifo write: @1699477161373613566 0x7f81e2fbdf17 164: biq::g(boolean) -> void
fifo write: @1699477161374090833 0x7f81e2fbc797 3385: bjg::g(boolean) -> void
fifo write: @1699477161400778596 0x7f81eadff759 314: java.util.stream.Streams$RangeIntSpliterator::forEachRemaining(java.util.function.IntConsumer) -> void
fifo write: @1699477161421001686 0x7f81e2fbb4dc 2333: buu::l() -> void
fifo write: @1699477161421123777 0x7f81e2fba8bc 1029: buu::gs() -> void
fifo write: @1699477161421287530 0x7f81e2fb9e1c 885: buu::gt() -> void
fifo write: @1699477161421545373 0x7f81e317987c 2153: buu::gr() -> void
fifo write: @1699477161423431407 0x7f81e2cfae5f 21849: buu::X() -> void
fifo write: @1699477161430723811 0x7f81eae001c6 3458: dnq::a(dpx, cqp, asc, int, int, gw$a) -> boolean
fifo write: @1699477161436653647 0x7f81eae02a20 887: cpy::c(int, int) -> cpb
fifo write: @1699477161437444937 0x7f81eae03774 3309: ako$b::x() -> boolean
fifo write: @1699477161440261854 0x7f81eae05df0 1065: aka$$Lambda$5365.0x00007f8160a46db0::accept(Object) -> void
fifo write: @1699477161446413062 0x7f81eae06b9c 465: java.util.Spliterator$OfInt::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477161474427753 0x7f81e2cfa034 807: ehi::a(double[], ha, double, double, double, double, double, double, double, double, ha, double, double, double) -> ha
fifo write: @1699477161476154875 0x7f81eae073d3 152: dll::c(int) -> int
fifo write: @1699477161514743861 0x7f81e2fb9894 136: bym::a_() -> void
fifo write: @1699477161514811952 0x7f81e2cf9b14 204: bym::<init>(biu, cpv) -> void
fifo write: @1699477161523747827 0x7f81e8c13000 544: I2C/C2I adapters(0xbbbbbabbbeb)
fifo write: @1699477161523955629 0x7f81e8c12d00 544: I2C/C2I adapters(0xbbbbbbabbbe)
fifo write: @1699477161526803826 0x7f81e3179394 47: ehn::b(hy) -> ehn
fifo write: @1699477161553437138 0x7f81e27a7df4 7: bil$a::b() -> void
fifo write: @1699477161553927745 0x7f81e31778ff 3918: akx::d_(gw) -> bgw
fifo write: @1699477161554010746 0x7f81e3176677 2495: bil::a(cqk, bgw, bjk, bjz, qw) -> bjz
fifo write: @1699477161580326024 0x7f81eae07b4c 6: cbh::gn() -> boolean
fifo write: @1699477161583236051 0x7f81eae07e5c 853: bol$a::a(bkg, java.util.Optional) -> bok
fifo write: @1699477161620623552 0x7f81eae08acc 6: bla::a() -> ehn
fifo write: @1699477161666487212 0x7f81e3176094 484: bqc$$Lambda$7830.0x00007f8160c85938::test(Object) -> boolean
fifo write: @1699477161669651782 0x7f81eae08dd5 58: java.util.HashMap$EntrySpliterator::characteristics() -> int
fifo write: @1699477161719242810 0x7f81e3173f26 4969: bts::a(bjg, bjg) -> boolean
fifo write: @1699477161720049280 0x7f81e3173874 313: com.mojang.datafixers.kinds.OptionalBox::unbox(com.mojang.datafixers.kinds.App) -> java.util.Optional
fifo write: @1699477161720122371 0x7f81e3173294 437: boj$b::a(bok) -> java.util.Optional
fifo write: @1699477161827405661 0x7f81eae09194 1648: bkg::k() -> void
fifo write: @1699477161918061706 0x7f81e3172e14 232: bpd::a(ehn) -> void
fifo write: @1699477161978501143 0x7f81eae0aad3 176: java.util.concurrent.atomic.AtomicLong::updateAndGet(java.util.function.LongUnaryOperator) -> long
fifo write: @1699477161978842477 0x7f81e3172914 351: bmg::a(akq, bjg, long) -> boolean
fifo write: @1699477161979014669 0x7f81e3172094 918: bmg::a(bsk) -> boolean
fifo write: @1699477161979075280 0x7f81e30d49d4 1448: bmg$$Lambda$8463.0x00007f8160d44b48::apply(Object) -> Object
fifo write: @1699477161979258323 0x7f81e3171c34 183: bvi::b(gw, dfj) -> void
fifo write: @1699477161980191534 0x7f81e30d0be4 9722: bmg::a(akq, bji, long) -> boolean
fifo write: @1699477162019861425 0x7f81e30cd61f 7983: bpt::e() -> void
fifo write: @1699477162020119228 0x7f81e3171714 348: bmg::c(akq, bjg, long) -> void
fifo write: @1699477162021395694 0x7f81e1a5f7b7 11365: bmg::d(akq, bji, long) -> void
fifo write: @1699477162071991215 0x7f81e30cccb4 624: bli::a() -> ehn
fifo write: @1699477162072467841 0x7f81e1a5d897 4006: bli::a(bjg) -> boolean
fifo write: @1699477162072547312 0x7f81e30cc4b6 868: blv$$Lambda$8280.0x00007f8160d07078::apply(Object, Object, Object) -> Object
fifo write: @1699477162072640853 0x7f81e1a5d094 420: blv$$Lambda$8464.0x00007f8160d44fe0::<init>(boj$b, bok, bok, org.apache.commons.lang3.mutable.MutableObject, org.apache.commons.lang3.mutable.MutableInt, bok) -> void
fifo write: @1699477162072692854 0x7f81e1a5cc1d 102: blv$$Lambda$8464.0x00007f8160d44fe0::trigger(akq, bjg, long) -> boolean
fifo write: @1699477162072784125 0x7f81e1a5c237 1125: blv::a(boj$b, org.apache.commons.lang3.mutable.MutableObject, org.apache.commons.lang3.mutable.MutableInt, bok, bok, bok) -> bom
fifo write: @1699477162072820135 0x7f81e30cc074 90: ebb::b() -> boolean
fifo write: @1699477162074731070 0x7f81e1ebceb7 16662: blv::a(boj$b, bok, bok, org.apache.commons.lang3.mutable.MutableObject, org.apache.commons.lang3.mutable.MutableInt, bok, akq, bjg, long) -> boolean
fifo write: @1699477162094171870 0x7f81eae0b071 4775: it.unimi.dsi.fastutil.objects.ObjectArrayList::<init>(java.util.Collection) -> void
fifo write: @1699477162095353065 0x7f81eae0dd6c 427: dhk$d::doWork(dhk, java.util.concurrent.Executor, akq, dhg, dzc, akt, java.util.function.Function, java.util.List, dhf) -> java.util.concurrent.CompletableFuture
fifo write: @1699477162118933008 0x7f81e1a5bdf4 90: bpt::b() -> boolean
fifo write: @1699477162120469088 0x7f81e1a5b994 193: bsk::<init>(bmk, float, int) -> void
fifo write: @1699477162124221796 0x7f81eae0e6f7 1044: java.util.HashMap$EntrySpliterator::tryAdvance(java.util.function.Consumer) -> boolean
fifo write: @1699477162181239459 0x7f81eae0f474 255: dbc::d(dfj, cpb, gw) -> boolean
fifo write: @1699477162195090617 0x7f81eae0fb1d 978: dmm::test(Object, Object) -> boolean
fifo write: @1699477162286738275 0x7f81e1a5af59 1252: akx::j(gw) -> ejc
fifo write: @1699477162286825166 0x7f81e1a5a2dc 1619: akx$$Lambda$7982.0x00007f8160cab160::apply(Object) -> Object
fifo write: @1699477162288674360 0x7f81eae10994 767: java.util.TimSort::mergeAt(int) -> void
fifo write: @1699477162292471679 0x7f81eae1157e 87: hx::a(long, long) -> int[]
fifo write: @1699477162292892624 0x7f81e1ebb9f9 1920: java.util.HashMap$KeySpliterator::forEachRemaining(java.util.function.Consumer) -> void
fifo write: @1699477162334630081 0x7f81e1eba3d0 3077: bkz::a(bjg, bmk, float, int) -> void
fifo write: @1699477162347528156 0x7f81eae119d0 6012: buf$$Lambda$8418.0x00007f8160d35fb8::apply(Object) -> Object
fifo write: @1699477162371129920 0x7f81eae152cf 7436: bil::b_() -> void
fifo write: @1699477162371349273 0x7f81e1a59e94 31: bkg$$Lambda$8411.0x00007f8160d346c8::apply(Object) -> Object
fifo write: @1699477162372030682 0x7f81e1a599f4 229: bli::b() -> gw
fifo write: @1699477162372354196 0x7f81eae1b0e5 402: io.netty.channel.epoll.EpollEventLoop::epollWait(long) -> long
fifo write: @1699477162372508628 0x7f81eae1b910 59: io.netty.channel.epoll.Native::epollTimerWasUsed(long) -> boolean
fifo write: @1699477162373545651 0x7f81eae1bc37 224: io.netty.channel.epoll.Native::epollWait(io.netty.channel.unix.FileDescriptor, io.netty.channel.epoll.EpollEventArray, io.netty.channel.unix.FileDescriptor, int, int, long) -> long
fifo write: @1699477162385634997 0x7f81eae1c2e4 5476: buf::a(java.util.function.Predicate, cpc, buf$b) -> java.util.stream.Stream
fifo write: @1699477162422455880 0x7f81e1eb99b4 771: it.unimi.dsi.fastutil.ints.IntOpenHashSet::contains(int) -> boolean
fifo write: @1699477162538455201 0x7f81eae1f8b4 7955: yo$b::a(so) -> void
fifo write: @1699477162666773970 0x7f81eae25f50 83: bqc$$Lambda$7829.0x00007f8160c856e0::test(Object) -> boolean
fifo write: @1699477162673063501 0x7f81e1a59294 873: bua$$Lambda$7371.0x00007f8160bdfc28::applyAsDouble(Object) -> double
fifo write: @1699477162822886467 0x7f81e1eb8cb7 1515: bte::a(bjg, bjg) -> boolean
fifo write: @1699477162822953438 0x7f81e20f8ff7 1864: bte$$Lambda$8431.0x00007f8160d3c238::test(Object) -> boolean
fifo write: @1699477162826086688 0x7f81eae265f3 468: bpu::a() -> boolean
fifo write: @1699477162826404833 0x7f81eae26f53 96: brb::a() -> boolean
fifo write: @1699477162865877910 0x7f81e22d34d2 1381: cxu$e$3::a(gw, ha, ha) -> cxu$c
fifo write: @1699477162882814728 0x7f81eae2737e 265: duv::a(dun, asc, gw) -> boolean
fifo write: @1699477162888270928 0x7f81e27bddc4 247: dom$b::a() -> dom$b
fifo write: @1699477162888311078 0x7f81e1eb8814 168: dom$b::<init>() -> void
fifo write: @1699477162907838199 0x7f81eae27a70 287: bkj$$Lambda$7233.0x00007f8160bb1b78::accept(Object) -> void
fifo write: @1699477162919310997 0x7f81e1bbbeb4 924: eaz::equals(Object) -> boolean
fifo write: @1699477162986208037 0x7f81eae28150 199: dmg::a(dfj) -> boolean
fifo write: @1699477163006551558 0x7f81e20f6d2b 4967: java.util.HashMap::removeNode(int, Object, Object, boolean, boolean) -> java.util.HashMap$Node
fifo write: @1699477163019396873 0x7f81e20f5994 2255: cjf::c(cjf, cjf) -> boolean
fifo write: @1699477163031717612 0x7f81e22d2e14 436: java.util.LinkedList::<init>() -> void
fifo write: @1699477163031804553 0x7f81e22d2814 335: java.util.AbstractSequentialList::<init>() -> void
fifo write: @1699477163076670539 0x7f81eae286ef 368: bit$$Lambda$7349.0x00007f8160bd1678::test(Object) -> boolean
fifo write: @1699477163270625443 0x7f81eae29173 816: bol$c::a(bkg, java.util.Optional) -> bok
fifo write: @1699477163367381406 0x7f81eae29a64 18: bjg::D(biq) -> void
fifo write: @1699477163370185882 0x7f81e20f5494 188: aaa::<init>(int, java.util.List) -> void
fifo write: @1699477163421989428 0x7f81eae2a04c 6: biq::cq() -> boolean
fifo write: @1699477163476441509 0x7f81eae2a34c 9: bvd::b() -> java.util.UUID
fifo write: @1699477163476474759 0x7f81eae2a64c 5: bvd::a() -> int
fifo write: @1699477163691659185 0x7f81eae2ae04 20171: bll::f(akq, bjg, long) -> void
fifo write: @1699477163720903991 0x7f81e235d3bf 26131: akp::a() -> void
fifo write: @1699477163769500406 0x7f81eae37a90 259: boz::b() -> void
fifo write: @1699477163814425513 0x7f81e235bef4 1779: cvr::n(dfj) -> int
fifo write: @1699477163814492054 0x7f81e235a960 2989: cvr::a(cpv, gw, int, asc, int) -> void
fifo write: @1699477164094003877 0x7f81eae38636 14513: akp::b() -> void
fifo write: @1699477164165630027 0x7f81e2359b1e 1680: bji::b(asc, bgw) -> void
fifo write: @1699477164165682748 0x7f81e2358bca 2024: bji::a(asc, float) -> void
fifo write: @1699477164168127859 0x7f81eae423d3 836: com.google.common.collect.Lists::equalsImpl(java.util.List, Object) -> boolean
fifo write: @1699477164217171650 0x7f81eae42f15 224: it.unimi.dsi.fastutil.shorts.ShortOpenHashSet$SetIterator::<init>(it.unimi.dsi.fastutil.shorts.ShortOpenHashSet, it.unimi.dsi.fastutil.shorts.ShortOpenHashSet$1) -> void
fifo write: @1699477164239191303 0x7f81eae436bd 7990: bts::a(bjg, bjg) -> boolean
fifo write: @1699477164272938277 0x7f81eae491d0 495: bua::a(bjp, int, asc, gw) -> gw
fifo write: @1699477164318980478 0x7f81e2358417 478: ehj::<init>(ehn, ha, gw, boolean) -> void
fifo write: @1699477164321599072 0x7f81e20f323c 5554: bjg::c_() -> boolean
fifo write: @1699477164369979254 0x7f81eae49a4c 9: bji::K() -> bpc
fifo write: @1699477164375973811 0x7f81e28b65f4 30: bzr::ag() -> biu
fifo write: @1699477164419929356 0x7f81e20f23fe 1470: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::find(Object) -> int
fifo write: @1699477164469073528 0x7f81e2357db9 462: bla::<init>(gw) -> void
fifo write: @1699477164518438772 0x7f81eae49d73 1308: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$MapIterator::remove() -> void
fifo write: @1699477164533851180 0x7f81eae4af29 6501: cyl::b(dfj, akq, gw, asc) -> void
fifo write: @1699477164564881039 0x7f81e8c16ca0 27: vtable stub
fifo write: @1699477164617945202 0x7f81e20f1f14 191: bli::<init>(biq, boolean) -> void
fifo write: @1699477164767663335 0x7f81e20f13d4 1521: cbh$$Lambda$8473.0x00007f8160d46bf8::applyAsInt(Object) -> int
fifo write: @1699477164767717756 0x7f81e20f03fe 1925: bgr::a_(cja) -> int
fifo write: @1699477164767764077 0x7f81e20efa34 1135: cbh::a(bhf, java.util.Map$Entry) -> int
fifo write: @1699477164768106301 0x7f81e20eef37 1206: bkt::a(boj$b, bok, bok) -> bom
fifo write: @1699477164768170232 0x7f81e20ee0f7 1801: bkt$$Lambda$8304.0x00007f8160d14b28::apply(Object, Object) -> Object
fifo write: @1699477164768217883 0x7f81e20edb14 275: bkt$$Lambda$8466.0x00007f8160d45448::<init>(boj$b, bok, bok) -> void
fifo write: @1699477164768261523 0x7f81e20ed59f 372: bkt$$Lambda$8466.0x00007f8160d45448::trigger(akq, bjg, long) -> boolean
fifo write: @1699477164768440856 0x7f81e2cb3734 733: blp::a(akq, bjg, long) -> boolean
fifo write: @1699477164768576447 0x7f81e2cb3134 368: blp::a(akq, cbh, long) -> boolean
fifo write: @1699477164768979812 0x7f81e2cb1fbf 2210: blp::c(akq, bjg, long) -> void
fifo write: @1699477164769464259 0x7f81e2caec8f 7340: bkt::a(boj$b, bok, bok, akq, cbh, long) -> boolean
fifo write: @1699477164819560253 0x7f81e2cadcf7 1552: bnz$$Lambda$8289.0x00007f8160d08f40::apply(Object) -> Object
fifo write: @1699477164819623744 0x7f81e2cad1b7 1206: bnz::a(boj$b, java.util.function.Predicate, bok) -> bom
fifo write: @1699477164819678675 0x7f81e2cacc14 275: bnz$$Lambda$8467.0x00007f8160d45670::<init>(boj$b, bok, java.util.function.Predicate) -> void
fifo write: @1699477164819721555 0x7f81e20ed11d 62: bnz$$Lambda$8467.0x00007f8160d45670::trigger(akq, bjg, long) -> boolean
fifo write: @1699477164820210641 0x7f81e2cabfd9 1446: bsp::i() -> void
fifo write: @1699477164822086665 0x7f81e2ca6457 14252: bnz::a(boj$b, bok, java.util.function.Predicate, akq, bjg, long) -> boolean
fifo write: @1699477164844834858 0x7f81eae4fada 8906: io.netty.util.concurrent.SingleThreadEventExecutor::runAllTasks(long) -> boolean
fifo write: @1699477164923156144 0x7f81eae55d16 19153: akp::a() -> void
fifo write: @1699477164972141204 0x7f81e2ca5b94 167: btf::e(bjg, bjg) -> boolean
fifo write: @1699477164972208555 0x7f81e2ca5514 603: btf$$Lambda$8450.0x00007f8160d3f2a0::test(Object) -> boolean
fifo write: @1699477164972304236 0x7f81e2ca4db4 702: btp::b(bjg) -> boolean
fifo write: @1699477164972368417 0x7f81e2ca43d7 1011: btp::a(bjg, bjg) -> boolean
fifo write: @1699477164979785252 0x7f81eae62935 314: sun.nio.fs.UnixPath::encode(sun.nio.fs.UnixFileSystem, String) -> byte[]
fifo write: @1699477164991409302 0x7f81eae62fbd 2238: sun.nio.fs.UnixFileSystem::getPath(String, String[]) -> java.nio.file.Path
fifo write: @1699477165018326178 0x7f81e314b7c1 5044: bji::a(asc, bgw) -> void
fifo write: @1699477165038694400 0x7f81eae64a4b 4412: eig::a(ehn, ehn, gw) -> ehj
fifo write: @1699477165118852190 0x7f81eae67ef2 189: eam::c(cpb, gw) -> ehn
fifo write: @1699477165130126465 0x7f81eae68413 2191: qw::r(String) -> void
fifo write: @1699477165183543401 0x7f81eae69db5 3754: cel::d() -> void
fifo write: @1699477165222285969 0x7f81eae6d647 1208: eig::b(eid$a) -> void
fifo write: @1699477165427075301 0x7f81eae6e7b3 1701: bsa::a() -> boolean
fifo write: @1699477165466950634 0x7f81e2ca3d34 488: bus::a(gw, cpy) -> float
fifo write: @1699477165473227545 0x7f81eae6fe7d 878: btz::a(bjp, int, boolean, gw) -> gw
fifo write: @1699477165519571780 0x7f81e2ca3614 420: blv$$Lambda$8472.0x00007f8160d461c8::<init>(akq, bjg, eaz, eaz, boj$b, bok) -> void
fifo write: @1699477165568015583 0x7f81eae70d4c 9: cbc::y() -> bhf
fifo write: @1699477165568159665 0x7f81e314ad34 954: bsj$$Lambda$8444.0x00007f8160d3e248::apply(Object) -> boolean
fifo write: @1699477165568243296 0x7f81e2ca2e37 589: bsj::b(java.util.function.Predicate, bjg) -> boolean
fifo write: @1699477165568306417 0x7f81e314a6b4 579: bto::b(bjg) -> boolean
fifo write: @1699477165568382208 0x7f81e3149e34 941: bto$$Lambda$8443.0x00007f8160d3dff0::test(Object) -> boolean
fifo write: @1699477165618591573 0x7f81e31493d4 1050: buu$c::a() -> boolean
fifo write: @1699477165619072789 0x7f81e3148399 1927: bpo::a() -> boolean
fifo write: @1699477165619379583 0x7f81e3147754 1290: bpp::a() -> boolean
fifo write: @1699477165619826279 0x7f81e3142bbf 12127: buu$b::a() -> boolean
fifo write: @1699477165619885359 0x7f81e3142314 385: bqr::a() -> boolean
fifo write: @1699477165619954730 0x7f81e31418d4 1053: buu$a::a() -> boolean
fifo write: @1699477165627219404 0x7f81eae71120 3047: bjg::c_() -> boolean
fifo write: @1699477165680049033 0x7f81eae7395d 4210: boj$b$4::a(akq, bjg, long) -> Object
fifo write: @1699477165721272302 0x7f81e3141394 420: bui$$Lambda$1881.0x00007f81606008a8::test(Object) -> boolean
fifo write: @1699477165724605255 0x7f81eae76ff0 255: bjg::c(bjg) -> boolean
fifo write: @1699477165774744850 0x7f81eae7779e 1593: bkg::b(bsh, java.util.Optional) -> void
fifo write: @1699477165775876814 0x7f81eae78d75 300: bkg::c(bsh) -> java.util.Optional
fifo write: @1699477165820939594 0x7f81e3140d14 594: asp$a::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477165821008584 0x7f81e3140894 240: asp$a::a(Enum, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477165821695193 0x7f81e313e2bf 6089: arf$$Lambda$246.0x00007f81601a1eb8::apply(Object) -> Object
fifo write: @1699477165821797605 0x7f81e313bb9f 5992: arf::a(java.util.function.Function, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477165821875906 0x7f81e313b474 505: asp$a::b(Object) -> String
fifo write: @1699477165821925686 0x7f81e313ad34 851: asp$a$$Lambda$162.0x00007f816013db28::apply(Object) -> Object
fifo write: @1699477165821981207 0x7f81e313a0f7 1528: arf$$Lambda$7657.0x00007f8160c5ace8::apply(Object) -> Object
fifo write: @1699477165822020337 0x7f81e3139c14 185: arf$$Lambda$7658.0x00007f8160c5af28::<init>(Object) -> void
fifo write: @1699477165822287771 0x7f81e3138f5c 1366: aes$$Lambda$5273.0x00007f81609bca68::apply(Object) -> Object
fifo write: @1699477165822443353 0x7f81e31384ba 982: aes::a(com.mojang.serialization.DynamicOps, Object, aev) -> com.mojang.serialization.DataResult
fifo write: @1699477165822529414 0x7f81e3137d34 792: dwp$$Lambda$3540.0x00007f81607761e0::apply(Object) -> Object
fifo write: @1699477165822571595 0x7f81e3137894 185: dve$$Lambda$8394.0x00007f8160d2d878::<init>(org.slf4j.Logger) -> void
fifo write: @1699477165822676936 0x7f81e3137394 332: dwo$$Lambda$3537.0x00007f81607756e8::apply(Object) -> Object
fifo write: @1699477165822770767 0x7f81e3136e94 332: dwo$$Lambda$3538.0x00007f8160775928::apply(Object) -> Object
fifo write: @1699477165822884059 0x7f81e3136994 332: dwo$$Lambda$3534.0x00007f8160774ff8::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477165823373725 0x7f81e3135647 2579: dwo::a(com.mojang.datafixers.util.Either, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477165824459559 0x7f81e318f2e7 17974: dve::a(dvy, qw) -> void
fifo write: @1699477165825701995 0x7f81eae79490 1129: ri$$Lambda$4109.0x00007f8160897680::accept(Object) -> void
fifo write: @1699477165827356596 0x7f81e917c814 247: com.mojang.serialization.codecs.EitherCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477165828129986 0x7f81e93252d0 203: aeo::createString(String) -> Object
fifo write: @1699477165918208884 0x7f81e16d97fe 3534: btk::a(biq) -> boolean
fifo write: @1699477165918448397 0x7f81e2855d9a 3954: bjg::E(biq) -> boolean
fifo write: @1699477165918496058 0x7f81e29cae54 1030: it.unimi.dsi.fastutil.ints.IntOpenHashSet::add(int) -> boolean
fifo write: @1699477166141521274 0x7f81e9822018 5543: bji::b_() -> void
fifo write: @1699477166219184872 0x7f81e9a41bda 36: bvq::h(ehn) -> void
fifo write: @1699477166319057946 0x7f81e8c16cd0 27: vtable stub
fifo write: @1699477166367958034 0x7f81e9c53b56 73: ehn::f(ehn) -> double
fifo write: @1699477166417257478 0x7f81e14c10fd 412: bkz::a(bjg, biq, float, int) -> void
fifo write: @1699477166417432500 0x7f81e206a2f7 1746: bkz::a(bjg, bjg) -> void
fifo write: @1699477166417902936 0x7f81e2af7954 1117: it.unimi.dsi.fastutil.shorts.Short2ObjectOpenHashMap::get(short) -> Object
fifo write: @1699477166471443724 0x7f81e9d64fcc 3: java.util.Spliterators$AbstractSpliterator::estimateSize() -> long
fifo write: @1699477166568609753 0x7f81e2afbac7 2060: dxe$b::a(dvy, qw) -> void
fifo write: @1699477166577533048 0x7f81eab3b1dd 1489: boj$b$3::a(akq, bjg, long) -> Object
fifo write: @1699477166821907759 0x7f81e9a04079 796: bkg::c(akq, bjg) -> void
fifo write: @1699477166917254075 0x7f81e1a81514 393: cpm$$Lambda$8460.0x00007f8160d44480::test(Object) -> boolean
fifo write: @1699477166917296045 0x7f81e17dfa34 617: bvd::ge() -> boolean
fifo write: @1699477166917403296 0x7f81e1bfd394 479: bjg::en() -> boolean
fifo write: @1699477166917474127 0x7f81e147eff4 97: bji::a(biu) -> boolean
fifo write: @1699477166917640069 0x7f81e15074d4 1185: bvd::a(biu) -> boolean
fifo write: @1699477166917682430 0x7f81e14495d4 1271: biq::s(biq) -> boolean
fifo write: @1699477166917837492 0x7f81e1dbb039 863: biq::a(eio) -> boolean
fifo write: @1699477166970251466 0x7f81e9a7aef7 460: bhf::a(int) -> cjf
fifo write: @1699477167080045287 0x7f81eaa20613 1413: cbt::j() -> void
fifo write: @1699477167170485919 0x7f81e1492074 6: csv::m(dfj) -> dai
fifo write: @1699477167170585770 0x7f81e1948a34 835: dfi$a::w() -> dai
fifo write: @1699477167221661437 0x7f81e1c1ad5e 1075: com.google.common.collect.Iterators$5::computeNext() -> Object
fifo write: @1699477167223494020 0x7f81e8c16d00 27: vtable stub
fifo write: @1699477167269281058 0x7f81e222d614 383: java.util.stream.ReduceOps$6::<init>(java.util.stream.StreamShape, java.util.function.IntBinaryOperator, int) -> void
fifo write: @1699477167269340479 0x7f81e216e397 551: java.util.stream.ReduceOps$6::makeSink() -> java.util.stream.ReduceOps$AccumulatingSink
fifo write: @1699477167269388670 0x7f81e1d53267 360: java.util.stream.ReduceOps$6::makeSink() -> java.util.stream.ReduceOps$5ReducingSink
fifo write: @1699477167269438050 0x7f81e1816214 243: java.util.stream.ReduceOps$5ReducingSink::<init>(int, java.util.function.IntBinaryOperator) -> void
fifo write: @1699477167269474571 0x7f81e1952ff4 5: java.util.stream.ReduceOps$5ReducingSink::begin(long) -> void
fifo write: @1699477167269514841 0x7f81e277ea94 183: java.util.stream.ReduceOps$5ReducingSink::get() -> Object
fifo write: @1699477167269561012 0x7f81e1dd6534 706: java.util.stream.ReduceOps$5ReducingSink::get() -> Integer
fifo write: @1699477167270133049 0x7f81e20621d4 966: buh::e(gw) -> java.util.Optional
fifo write: @1699477167270209870 0x7f81e1c5f114 354: buh$$Lambda$8452.0x00007f8160d3f740::apply(Object) -> Object
fifo write: @1699477167270377543 0x7f81e1bdb2d7 3020: buh::d(gw) -> java.util.Optional
fifo write: @1699477167568268911 0x7f81e1c2f09f 3240: bkz::a(bkg, bsh, biu) -> boolean
fifo write: @1699477167568344952 0x7f81e296cdd7 3498: bnr::a(akq, cbh) -> boolean
fifo write: @1699477167568383883 0x7f81e27be494 185: bkz$$Lambda$8476.0x00007f8160d472b0::<init>(biu) -> void
fifo write: @1699477167568492514 0x7f81e159efb4 685: bkz$$Lambda$8476.0x00007f8160d472b0::test(Object) -> boolean
fifo write: @1699477167568610086 0x7f81e2445d74 336: bkz::a(biu, bjg) -> boolean
fifo write: @1699477167568695087 0x7f81e2538a14 185: bkz$$Lambda$8478.0x00007f8160d47758::<init>(bkg) -> void
fifo write: @1699477167568991131 0x7f81e1478054 1612: bkz$$Lambda$8477.0x00007f8160d47508::test(Object) -> boolean
fifo write: @1699477167569093922 0x7f81e27a9514 422: bkz$$Lambda$8478.0x00007f8160d47758::test(Object) -> boolean
fifo write: @1699477167569313915 0x7f81e23f28c7 6190: bkz::a(bkg, bsh, java.util.function.Predicate) -> boolean
fifo write: @1699477167569353435 0x7f81e2d30ad9 1236: bkz::b(bkg, bjg) -> boolean
fifo write: @1699477167569576398 0x7f81e2040079 1750: bkz::a(bkg, bjg) -> boolean
fifo write: @1699477167617691866 0x7f81e262ab34 410: java.util.stream.IntPipeline::reduce(int, java.util.function.IntBinaryOperator) -> int
fifo write: @1699477167617733237 0x7f81e1a375d4 821: java.util.stream.IntPipeline::sum() -> int
fifo write: @1699477167617894519 0x7f81e28d3297 1013: java.util.stream.ReduceOps::makeInt(int, java.util.function.IntBinaryOperator) -> java.util.stream.TerminalOp
fifo write: @1699477167617932499 0x7f81e285a814 351: bne::a(akq, bjg) -> boolean
fifo write: @1699477167618651439 0x7f81e2a2671f 5555: bne::a(akq, cbh) -> boolean
fifo write: @1699477167667546287 0x7f81e2affa94 351: bmg::a(akq, bjg) -> boolean
fifo write: @1699477167668236056 0x7f81e2a2d72f 4388: bmg::a(akq, bji) -> boolean
fifo write: @1699477167668294357 0x7f81e28b1d97 1831: bnr::a(akq, bjg, long) -> boolean
fifo write: @1699477167668646222 0x7f81e160ff17 1466: bnr::a(akq, cbh, long) -> boolean
fifo write: @1699477167717483549 0x7f81e2ba3914 348: bnr::c(akq, bjg, long) -> void
fifo write: @1699477167718527752 0x7f81e186d677 8244: bnr::c(akq, cbh, long) -> void
fifo write: @1699477167818414496 0x7f81e2df07b7 2158: buf::a(gw, java.util.function.Predicate, buh) -> Boolean
fifo write: @1699477167818517168 0x7f81e2034257 2520: buf$$Lambda$8483.0x00007f8160d48000::apply(Object) -> Object
fifo write: @1699477167819003584 0x7f81e19048df 4346: buh::a(gw, java.util.function.Predicate) -> boolean
fifo write: @1699477167975985561 0x7f81e94bdd1b 700: bkg::e(akq, bjg) -> void
fifo write: @1699477168037060666 0x7f81e140b2d4 2270: bnz::a(akq, gw, bjg) -> boolean
fifo write: @1699477168118090877 0x7f81e983af73 136: bll$$Lambda$8408.0x00007f8160d34000::test(Object) -> boolean
fifo write: @1699477168318641155 0x7f81e2950f14 415: ebg::a(eaz, eaz) -> boolean
fifo write: @1699477168323052571 0x7f81ead59778 2290: cpv::a(java.util.function.Predicate, java.util.List, int, djh, biq) -> aqn$a
fifo write: @1699477168323954813 0x7f81e9b4d7f0 383: bkx::f(akq, bjg, long) -> void
fifo write: @1699477168364921009 0x7f81e1c2bf82 2073: akq::a(cbu, int, gw, int) -> void
fifo write: @1699477168365007730 0x7f81e2970114 417: yh::<init>(int, gw, int, boolean) -> void
fifo write: @1699477168418416647 0x7f81e295e534 1073: bvd$$Lambda$8385.0x00007f8160d2c210::test(Object) -> boolean
fifo write: @1699477168418478518 0x7f81e2272b74 678: bvd::j(bjg) -> boolean
fifo write: @1699477168420867478 0x7f81e281d759 1564: dcs::d(qw) -> void
fifo write: @1699477168521572813 0x7f81e9c34ab5 1116: bpt::a() -> boolean
fifo write: @1699477168720309837 0x7f81e25ba79f 9694: blv::a(akq, bjg, eaz, eaz, java.util.Set, java.util.Optional) -> void
fifo write: @1699477168720366378 0x7f81e2ad0a99 431: blv$$Lambda$8472.0x00007f8160d461c8::accept(Object) -> void
fifo write: @1699477168720473999 0x7f81e18dc514 581: blv::a(akq, bjg, eaz, eaz, boj$b, bok, java.util.Set) -> void
fifo write: @1699477168918484263 0x7f81ea23ad4f 328: bmy$$Lambda$8442.0x00007f8160d3dd98::test(Object) -> boolean
fifo write: @1699477168964333353 0x7f81e982192f 30: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::realSize() -> int
fifo write: @1699477169017716489 0x7f81ea53e4d0 209: bll$$Lambda$8406.0x00007f8160d2fb50::accept(Object) -> void
fifo write: @1699477169072053837 0x7f81e2d3c894 340: csr$$Lambda$8393.0x00007f8160d2d658::tick(cpv, gw, dfj, dcv) -> void
fifo write: @1699477169072217819 0x7f81e2a92c16 470: dct::b(cpv, gw, dfj, dct) -> void
fifo write: @1699477169072768766 0x7f81e1eb2bcc 2130: dct::a(cpv, gw, dfj, dct, dct$a) -> void
fifo write: @1699477169216766467 0x7f81e1dffdb4 808: bvu$$Lambda$3629.0x00007f8160783250::test(Object) -> boolean
fifo write: @1699477169216870218 0x7f81e2f4f074 467: bvu::k(bjg) -> boolean
fifo write: @1699477169269193741 0x7f81ea5eb4f3 136: bll$b$1$$Lambda$8401.0x00007f8160d2ebe8::test(Object) -> boolean
fifo write: @1699477169318509504 0x7f81ea5eb059 50: bnf$$Lambda$8399.0x00007f8160d2e788::applyAsDouble(Object) -> double
fifo write: @1699477169767056688 0x7f81ea6b1cd4 75: bus::aR() -> boolean
fifo write: @1699477169770563774 0x7f81ea1bfcc8 1347: bjg::g(biq) -> void
fifo write: @1699477169772775082 0x7f81ead586fd 954: biq::g(biq) -> void
fifo write: @1699477169867746523 0x7f81e2efcd14 185: cbh$$Lambda$8473.0x00007f8160d46bf8::<init>(bhf) -> void
fifo write: @1699477169919350466 0x7f81e2958ed4 672: bvd::bj() -> boolean
fifo write: @1699477169919639949 0x7f81e2395334 1033: bvd::b_() -> void
fifo write: @1699477170065505904 0x7f81e298291a 711: ha::a(ha$b, ha$a) -> ha
fifo write: @1699477170065622775 0x7f81e2f00f94 185: cyl$$Lambda$7957.0x00007f8160ca7620::<init>(ha) -> void
fifo write: @1699477170066259133 0x7f81e2487e96 3746: cyl::a(cpw, gw, ha$b, java.util.function.BiPredicate, java.util.function.Predicate, int) -> java.util.Optional
fifo write: @1699477170066458796 0x7f81e18ff134 1302: cyl$$Lambda$7958.0x00007f8160ca7878::test(Object) -> boolean
fifo write: @1699477170066616358 0x7f81e29946f4 958: cyl::p(dfj) -> boolean
fifo write: @1699477170066729639 0x7f81e21b3a94 332: cyl$$Lambda$7959.0x00007f8160ca7cd8::apply(Object) -> Object
fifo write: @1699477170067729772 0x7f81e2f39dc2 9674: cyl::b(cpv, gw) -> cyl$a
fifo write: @1699477170067794273 0x7f81e21f0294 369: cyl$a::<init>(gw, eal, dfj) -> void
fifo write: @1699477170197519710 0x7f81ea8ffcc4 8833: bll::e(akq, bjg, long) -> boolean
fifo write: @1699477170209680467 0x7f81ea5e2629 4498: bll$b$1::a(java.util.stream.Stream, akq, bjg, long) -> void
fifo write: @1699477170267138395 0x7f81ea6b17b2 1: bkx::a(long) -> boolean
fifo write: @1699477170325485725 0x7f81ea767090 3383: cpb$$Lambda$7387.0x00007f8160be2f78::apply(Object, Object) -> Object
fifo write: @1699477170518450384 0x7f81e27b29b9 2463: bkg::f(cdf) -> boolean
fifo write: @1699477170518609556 0x7f81e256867e 1092: bkg::d(cdf) -> void
fifo write: @1699477170720172367 0x7f81e2de75f4 1382: biq::b(gw, dfj) -> void
fifo write: @1699477170820738868 0x7f81e8c16d30 27: vtable stub
fifo write: @1699477171015573542 0x7f81e2392faf 3694: cyl::b(dfj, akq, gw, asc) -> void
fifo write: @1699477171017826122 0x7f81e1660017 36: eig$$Lambda$7394.0x00007f8160be90c8::consume(double, double, double, double, double, double) -> void
fifo write: @1699477171017935623 0x7f81e2352477 405: eig::a(java.util.List, double, double, double, double, double, double) -> void
fifo write: @1699477171018113285 0x7f81e1e3277d 1119: ehi::a(gw) -> ehi
fifo write: @1699477171018482190 0x7f81e2f02d79 1747: ehi::a(ehi, ehn, double[], ha, double, double, double) -> ha
fifo write: @1699477171117893107 0x7f81e299e407 1838: ehi::a(Iterable, ehn, ehn, gw) -> ehj
fifo write: @1699477171118203851 0x7f81e2a37917 1898: eig::e() -> java.util.List
fifo write: @1699477171118282702 0x7f81e240fd94 185: eig$$Lambda$7394.0x00007f8160be90c8::<init>(java.util.List) -> void
fifo write: @1699477171215968687 0x7f81e17fd9b7 2543: cyl::a(cpv, gw, dfj, int) -> java.util.Optional
fifo write: @1699477171220085931 0x7f81e996aef1 78: ebg::a(eaz, eaz) -> boolean
fifo write: @1699477171527531191 0x7f81ea1e20b8 1532: sun.nio.fs.UnixPath::resolve(byte[], byte[]) -> byte[]
fifo write: @1699477171572079573 0x7f81e996a8d0 171: bll$b$1$$Lambda$8402.0x00007f8160d2ee38::test(Object) -> boolean
fifo write: @1699477171572265015 0x7f81e9f207cc 18: bll$b$1::a(akq, bjg, long, bky) -> boolean
fifo write: @1699477171622032595 0x7f81e2bf88f7 4825: cbh::gL() -> int
fifo write: @1699477171717922448 0x7f81e25e8bf4 111: bkz::b(bjg, bjg, float) -> void
fifo write: @1699477171767888930 0x7f81e25ea6b7 1992: cbh::a(akq, cbh, long) -> void
fifo write: @1699477172517205557 0x7f81e179a914 144: dfi::a(dfj, cpb, gw) -> eig
fifo write: @1699477172867645180 0x7f81e8c12a00 608: I2C/C2I adapters(0xbbbabab6abbbeb)
fifo write: @1699477172867763572 0x7f81e8c12700 608: I2C/C2I adapters(0xbbbbabab6abbbe)
fifo write: @1699477172867815603 0x7f81e8c12400 536: I2C/C2I adapters(0xbbbbabab6a)
fifo write: @1699477172867830003 0x7f81e8c12100 552: I2C/C2I adapters(0xbbbbabab6ab)
fifo write: @1699477172868069516 0x7f81e8c11b80 552: I2C/C2I adapters(0xbbbbbabab6a)
fifo write: @1699477172868083056 0x7f81e8c11580 528: I2C/C2I adapters(0xbbbabab6ab)
fifo write: @1699477172868294259 0x7f81e8c11280 552: I2C/C2I adapters(0xbbabb6abbbeb)
fifo write: @1699477172868419740 0x7f81e8c10f80 496: I2C/C2I adapters(0xbbbabb6a)
fifo write: @1699477172868433631 0x7f81e8c10c80 512: I2C/C2I adapters(0xbbbabb6ab)
fifo write: @1699477172868685344 0x7f81e8c10980 512: I2C/C2I adapters(0xbbbbabb6a)
fifo write: @1699477172868699234 0x7f81e8c10680 496: I2C/C2I adapters(0xbbabb6ab)
fifo write: @1699477172919805581 0x7f81e22bc33a 821: dfi$a::m(cpb, gw) -> eig
fifo write: @1699477172920314387 0x7f81e2bbb354 1320: bkg::a(bsh, bsi) -> boolean
fifo write: @1699477172967858838 0x7f81e8c10380 536: I2C/C2I adapters(0xbbabb6bbbeb)
fifo write: @1699477172967968579 0x7f81e8c10080 536: I2C/C2I adapters(0xbbbabb6bbbe)
fifo write: @1699477172968062140 0x7f81e8c0fd80 472: I2C/C2I adapters(0xbbbabb6)
fifo write: @1699477172968091741 0x7f81e8c0fa80 496: I2C/C2I adapters(0xbbbabb6b)
fifo write: @1699477172968327774 0x7f81e8c0f780 496: I2C/C2I adapters(0xbbbbabb6)
fifo write: @1699477172968341434 0x7f81e8c0f480 472: I2C/C2I adapters(0xbbabb6b)
fifo write: @1699477172969185485 0x7f81e28f12e8 1283: bkx::e(akq, bjg, long) -> boolean
fifo write: @1699477172969336897 0x7f81e27c3f34 706: bll$$Lambda$8408.0x00007f8160d34000::test(Object) -> boolean
fifo write: @1699477173217992542 0x7f81eaa1d269 152: gw$a::b(double, double, double) -> gw$a
fifo write: @1699477173323199114 0x7f81ea6d8ad3 1288: bwq::gs() -> boolean
fifo write: @1699477173418265475 0x7f81eaa1cf7c 11: cpe$b$$Lambda$7383.0x00007f8160be2440::test(Object) -> boolean
fifo write: @1699477173469329691 0x7f81eaa200da 205: java.util.Comparator$$Lambda$3713.0x00007f81607cb2c0::compare(Object, Object) -> int
fifo write: @1699477173677018060 0x7f81ea30ce1c 2605: bsp::a(gw) -> boolean
fifo write: @1699477173818751101 0x7f81eaa1fb5b 192: brf::a() -> boolean
fifo write: @1699477174166826583 0x7f81e226e7d4 928: bpv::e() -> void
fifo write: @1699477174269188938 0x7f81ea30c373 598: qw::a(String, boolean) -> void
fifo write: @1699477174320837591 0x7f81eaa1f474 215: bkg::a(bsh, bsi) -> boolean
fifo write: @1699477174667940712 0x7f81e2b99a37 4174: bll$a$$Lambda$8262.0x00007f8160cfd428::accept(Object) -> void
fifo write: @1699477174668358587 0x7f81e2efedbf 3807: bnf::a() -> bnf
fifo write: @1699477174668399967 0x7f81e2a86714 185: bnf$$Lambda$8398.0x00007f8160d2e550::<init>(bnf) -> void
fifo write: @1699477174816364928 0x7f81ea30bdda 44: brp::d() -> void
fifo write: @1699477175270989999 0x7f81e21a234e 4257: rj::a(gw) -> qw
fifo write: @1699477175370513778 0x7f81e2cf069f 6341: bzr::l() -> void
fifo write: @1699477175371525761 0x7f81e313201f 8318: bzr$d::a() -> void
fifo write: @1699477175371554961 0x7f81e1be7494 23: bzr::fZ() -> void
fifo write: @1699477175536554561 0x7f81e95b08a4 5507: bkx::e(akq, bjg, long) -> boolean
fifo write: @1699477175818637885 0x7f81e2e78347 7584: btj::a(akq, cbh) -> void
fifo write: @1699477176068528555 0x7f81e1ad0194 140: cdh$$Lambda$8355.0x00007f8160d21258::<init>(int) -> void
fifo write: @1699477176069104022 0x7f81e3015007 3101: java.util.stream.ReferencePipeline::max(java.util.Comparator) -> java.util.Optional
fifo write: @1699477176069321975 0x7f81e22f4cdc 1572: java.util.function.BinaryOperator::maxBy(java.util.Comparator) -> java.util.function.BinaryOperator
fifo write: @1699477176069370996 0x7f81e2e30e14 185: java.util.function.BinaryOperator$$Lambda$8356.0x00007f8160965218::<init>(java.util.Comparator) -> void
fifo write: @1699477176069452267 0x7f81e23d1614 505: cdh$$Lambda$8357.0x00007f8160d21478::apply(Object) -> Object
fifo write: @1699477176078362992 0x7f81ea92e23d 3781: boj$b$4::a(akq, bjg, long) -> Object
fifo write: @1699477176268252401 0x7f81ea1bf183 62: bkg$$Lambda$8411.0x00007f8160d346c8::apply(Object) -> Object
fifo write: @1699477176674212716 0x7f81e30dddc7 25688: dcs::a(cpv, gw, dfj, dcs$a, java.util.List, dcs$b, gw) -> boolean
fifo write: @1699477176674292277 0x7f81ea92d157 1052: arw::a(asc, int, int) -> int
fifo write: @1699477176722741200 0x7f81e2a1a11a 6078: cmg$b::a() -> java.util.Collection
fifo write: @1699477178168718355 0x7f81e2c135f9 1835: cdd::a(gw, int) -> cdb
fifo write: @1699477178217894517 0x7f81e25d7f54 1230: bkq$$Lambda$8416.0x00007f8160d35b10::test(Object) -> boolean
fifo write: @1699477178218089359 0x7f81e2731814 854: bkq::a(long, it.unimi.dsi.fastutil.longs.Long2ObjectMap$Entry) -> boolean
fifo write: @1699477178218158700 0x7f81e1f02374 104: bkq$a::b(long) -> boolean
fifo write: @1699477178269326088 0x7f81e181789f 4027: bji::c(aqh) -> void
fifo write: @1699477178269463159 0x7f81e27ad454 496: bjg::c(aqh) -> void
fifo write: @1699477178277160349 0x7f81ea6d736f 1570: dcs::a(cpv, gw, dfj, java.util.List, gw) -> void
fifo write: @1699477178303386395 0x7f81e9931e45 5930: dcs::a(cpv, gw, dfj, dcs) -> void
fifo write: @1699477179369702772 0x7f81e2912114 351: buf$$Lambda$8419.0x00007f8160d36200::test(Object) -> boolean
fifo write: @1699477179370091687 0x7f81e2f3df94 1204: buf::b(gw, int, bug) -> boolean
fifo write: @1699477179420940281 0x7f81e291cb17 229: cpe$a$$Lambda$7380.0x00007f8160be7748::get(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477179827249530 0x7f81ea0b8f80 3243: yk$$Lambda$7826.0x00007f8160c85000::accept(Object, Object) -> void
fifo write: @1699477179969184083 0x7f81ea1be9d1 266: bkq$$Lambda$8296.0x00007f8160d0af00::apply(Object) -> Object
fifo write: @1699477179969475657 0x7f81e295bc37 2228: akq::b(gw) -> boolean
fifo write: @1699477179969890092 0x7f81e2687937 2191: akq::a(gw, int) -> boolean
fifo write: @1699477179972194632 0x7f81ea0b835d 1258: bkq$$Lambda$8403.0x00007f8160d2f4b8::<init>(boolean, org.apache.commons.lang3.mutable.MutableLong, it.unimi.dsi.fastutil.longs.Long2ObjectMap, java.util.function.Predicate, bok, java.util.Optional) -> void
fifo write: @1699477180146026815 0x7f81ea6d6b3a 245: java.time.Instant::create(long, int) -> java.time.Instant
fifo write: @1699477180153707793 0x7f81ea0b7c39 422: java.time.Instant::ofEpochSecond(long, long) -> java.time.Instant
fifo write: @1699477180172740078 0x7f81ea9ac59d 1410: bgr::a_(cja) -> int
fifo write: @1699477180419813801 0x7f81e30b9abf 16131: bti::a(akq, bjg) -> void
fifo write: @1699477180419867692 0x7f81e2973314 185: bti$$Lambda$8445.0x00007f8160d3e728::<init>(bjg) -> void
fifo write: @1699477180419916403 0x7f81e2a8ce94 185: bti$$Lambda$8446.0x00007f8160d3e980::<init>(bjg) -> void
fifo write: @1699477180420124995 0x7f81e2acbf57 1038: bti$$Lambda$8445.0x00007f8160d3e728::test(Object) -> boolean
fifo write: @1699477180420259587 0x7f81e2de5614 689: bti::a(bjg, akr) -> boolean
fifo write: @1699477180420400449 0x7f81e2e77914 440: biq::a(biq, double) -> boolean
fifo write: @1699477180420489880 0x7f81e2bb8594 185: bti$$Lambda$8447.0x00007f8160d3eba8::<init>(bjg) -> void
fifo write: @1699477180420580141 0x7f81e2dd7d14 185: bti$$Lambda$8448.0x00007f8160d3ee00::<init>(bjg) -> void
fifo write: @1699477180423367647 0x7f81ea9ab1d3 1272: bzt::c_() -> boolean
fifo write: @1699477180467510714 0x7f81e2d1b114 348: btc::a(akq, bjg) -> void
fifo write: @1699477180468878261 0x7f81e29d4f0f 7526: btc::a(akq, bji) -> void
fifo write: @1699477180527369553 0x7f81ea9a94f3 1803: cpv::P() -> void
fifo write: @1699477180617881375 0x7f81e1cb21bf 13935: byn::l() -> void
fifo write: @1699477180618832597 0x7f81e231a09f 9308: bte::a(akq, bjg) -> void
fifo write: @1699477180618892278 0x7f81e2319914 185: bte$$Lambda$8431.0x00007f8160d3c238::<init>(bjg) -> void
fifo write: @1699477180618948899 0x7f81e2d1ac94 185: bte$$Lambda$8432.0x00007f8160d3c490::<init>(bjg) -> void
fifo write: @1699477180619245543 0x7f81e2619fa2 3144: bsj::<init>(bjg, java.util.List) -> void
fifo write: @1699477180619301883 0x7f81e20207b4 39: it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap::<init>(int) -> void
fifo write: @1699477180619360314 0x7f81e29d4814 185: bsj$$Lambda$8434.0x00007f8160d3cb40::<init>(bjg) -> void
fifo write: @1699477180619449085 0x7f81e29d4094 230: bsj$$Lambda$8435.0x00007f8160d3cd98::<init>(it.unimi.dsi.fastutil.objects.Object2BooleanOpenHashMap, java.util.function.Predicate) -> void
fifo write: @1699477180669870833 0x7f81e2d46d14 348: btd::a(akq, bjg) -> void
fifo write: @1699477180671439443 0x7f81e3118bbf 6739: bto::a(akq, bjg) -> void
fifo write: @1699477180671593405 0x7f81e30f2fdf 7314: bto::a(bjg) -> java.util.List
fifo write: @1699477180671656186 0x7f81e2f83bd4 837: bto::c(bjg) -> bsj
fifo write: @1699477180671714327 0x7f81e2d46894 185: btd$$Lambda$8437.0x00007f8160d3d240::<init>(bji) -> void
fifo write: @1699477180671771777 0x7f81e2079d94 185: btd$$Lambda$8438.0x00007f8160d3d468::<init>(bji) -> void
fifo write: @1699477180671830968 0x7f81e2079914 185: btd$$Lambda$8439.0x00007f8160d3d6c0::<init>(bji) -> void
fifo write: @1699477180671888289 0x7f81e297ed14 185: btd$$Lambda$8440.0x00007f8160d3d918::<init>(bji) -> void
fifo write: @1699477180672920862 0x7f81e141823f 12695: btd::a(akq, bji) -> void
fifo write: @1699477180767232403 0x7f81e297e494 762: bjg::ew() -> bho
fifo write: @1699477180767344345 0x7f81e2cdd194 230: bta$$Lambda$8430.0x00007f8160d3c000::<init>(akq, bkg) -> void
fifo write: @1699477180768010193 0x7f81e195f167 7797: bta::a(akq, bjg) -> void
fifo write: @1699477180768078164 0x7f81e2985b67 4114: btf::a(akq, bjg) -> void
fifo write: @1699477180768147595 0x7f81e2cdcc94 301: btf::a(bjg) -> java.util.Optional
fifo write: @1699477180768233736 0x7f81e2ceff94 230: btf$$Lambda$8449.0x00007f8160d3f058::<init>(btf, bjg) -> void
fifo write: @1699477180768394418 0x7f81e2ce4c27 1932: btf::b(bjg) -> java.util.Optional
fifo write: @1699477180968711221 0x7f81e2d0cf77 1489: btf::a(bjg, bsj) -> java.util.Optional
fifo write: @1699477180968775542 0x7f81e1cb0f77 1856: btf$$Lambda$8449.0x00007f8160d3f058::apply(Object) -> Object
fifo write: @1699477180968820683 0x7f81e2cefa94 230: btf$$Lambda$8450.0x00007f8160d3f2a0::<init>(btf, bjg) -> void
fifo write: @1699477181021108404 0x7f81e9801d50 755: java.util.ArrayList::contains(Object) -> boolean
fifo write: @1699477181030096470 0x7f81e97ff6fd 2787: boj$b$5::a(akq, bjg, long) -> Object
fifo write: @1699477181318513495 0x7f81ea9a9073 128: bll$$Lambda$8408.0x00007f8160d34000::test(Object) -> boolean
fifo write: @1699477181519064530 0x7f81e97fed5a 521: java.time.Clock::currentInstant() -> java.time.Instant
fifo write: @1699477181676553103 0x7f81e97fda00 1244: bkg::a(long, long) -> void
fifo write: @1699477181776017400 0x7f81eaa52d73 1679: bzt$c::a() -> boolean
fifo write: @1699477181831368492 0x7f81eaa4f734 3827: bzt::l() -> void
fifo write: @1699477181836078242 0x7f81ea46ed53 1768: bzt::w(boolean) -> void
fifo write: @1699477181930606336 0x7f81ea46b834 3751: cbh::l() -> void
fifo write: @1699477181931185164 0x7f81eaa4efd3 224: cbh::gM() -> void
fifo write: @1699477181970684721 0x7f81ea46ada0 491: bnq::a(akq, bjg) -> boolean
fifo write: @1699477181972253591 0x7f81e97fcf17 376: boe::b(akq, cbh, long) -> void
fifo write: @1699477182117760720 0x7f81e2079514 144: crt::a(dfj, cpb, gw, ehs) -> eig
fifo write: @1699477182267780757 0x7f81eab3838f 54: java.util.HashMap$EntrySet::spliterator() -> java.util.Spliterator
fifo write: @1699477182388776381 0x7f81eab34530 4888: btz$$Lambda$7358.0x00007f8160bd88a8::get() -> Object
fifo write: @1699477182418862207 0x7f81eab33f58 127: java.util.function.Predicate::and(java.util.function.Predicate) -> java.util.function.Predicate
fifo write: @1699477182516859595 0x7f81e2dc5294 476: bvu$$Lambda$7259.0x00007f8160bb7270::test(Object) -> boolean
fifo write: @1699477182517420832 0x7f81e26071e7 3739: bkb::c(bjg) -> boolean
fifo write: @1699477182517608425 0x7f81e2e37277 2001: bkb::j(bjg) -> boolean
fifo write: @1699477182518088431 0x7f81ea0b7953 48: bqx::a() -> boolean
fifo write: @1699477182525237323 0x7f81e9413f80 1695: bmb::a(akq, bjg) -> boolean
fifo write: @1699477182532305574 0x7f81e941259d 1639: bnx$$Lambda$8276.0x00007f8160d062e0::trigger(akq, bjg, long) -> boolean
fifo write: @1699477182617972374 0x7f81e30a7503 877: java.util.stream.Collectors$$Lambda$30.0x800000041::get() -> Object
fifo write: @1699477182618541901 0x7f81e26f6807 3489: cpm::a(Class, bts, bjg, ehi) -> java.util.List
fifo write: @1699477182619231040 0x7f81e2b96bdc 6017: brs::a() -> boolean
fifo write: @1699477182619599315 0x7f81e1819cb2 3550: cpm::a(bts, bjg, ehi) -> java.util.List
fifo write: @1699477182619653716 0x7f81e2dc4b14 609: ehi::e(double, double, double) -> boolean
fifo write: @1699477182619882379 0x7f81e29c8299 1535: bqq::a() -> boolean
fifo write: @1699477182620373365 0x7f81e1897bd7 3053: bqm::a() -> boolean
fifo write: @1699477183266154129 0x7f81e23c0014 666: io.netty.channel.epoll.AbstractEpollStreamChannel::isOpen() -> boolean
fifo write: @1699477183271769991 0x7f81e23bf7b4 691: com.google.gson.JsonPrimitive::<init>(Number) -> void
fifo write: @1699477183274655098 0x7f81e2d035b4 636: java.nio.StringCharBuffer::get() -> char
fifo write: @1699477183274973332 0x7f81e2cedb74 1488: ah::b() -> boolean
fifo write: @1699477183275153455 0x7f81e2d02c34 997: afe$$Lambda$8516.0x00007f8160d557c8::accept(Object, Object) -> void
fifo write: @1699477183275240996 0x7f81e2def2f4 394: afe::a(java.util.Map, af, ah) -> void
fifo write: @1699477183277231611 0x7f81e2ced614 313: java.io.BufferedWriter::ensureOpen() -> void
fifo write: @1699477183277455804 0x7f81e2dee97c 814: String::getChars(int, int, char[], int) -> void
fifo write: @1699477183277925450 0x7f81e310064f 2397: sm::a(vd, sv, boolean) -> void
fifo write: @1699477183278367036 0x7f81e2427d14 387: sm::k() -> boolean
fifo write: @1699477183278957893 0x7f81e24274bd 838: aki$b::a(long, int) -> void
fifo write: @1699477183280668475 0x7f81e9411593 1202: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$5304.0x00007f81609c2950::apply(Object, Object) -> Object
fifo write: @1699477183281459315 0x7f81eab33663 250: com.mojang.serialization.Codec$16::write(com.mojang.serialization.DynamicOps, Object) -> Object
fifo write: @1699477183282884514 0x7f81e9410bef 490: aki$c::a(long, int, int) -> void
fifo write: @1699477183286075695 0x7f81e940ff75 808: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::removeEntry(int) -> byte
fifo write: @1699477183288931732 0x7f81ea123262 2305: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::rehash(int) -> void
fifo write: @1699477183289749092 0x7f81ea1217d8 2102: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::remove(long) -> byte
fifo write: @1699477183290695654 0x7f81eab32dd9 390: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::fixPointers(int) -> void
fifo write: @1699477183293192236 0x7f81ea11fef3 2032: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::removeEntry(int) -> boolean
fifo write: @1699477183298094839 0x7f81ea5011d5 4206: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::remove(long) -> boolean
fifo write: @1699477183299310485 0x7f81ea11e037 2898: it.unimi.dsi.fastutil.longs.Long2IntFunctions$SynchronizedFunction::remove(long) -> int
fifo write: @1699477183303979725 0x7f81ea4fdc5a 5305: eac::a(long, int, int) -> void
fifo write: @1699477183315281640 0x7f81e2426d94 340: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5287.0x00007f81609bea18::apply(Object) -> Object
fifo write: @1699477183315344001 0x7f81ea4fd450 335: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477183315481812 0x7f81e145ef97 429: com.mojang.serialization.codecs.PrimitiveCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477183315796186 0x7f81ea11d96f 92: com.mojang.serialization.Encoder::encodeStart(com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477183315914038 0x7f81e2b732df 2464: com.mojang.serialization.DynamicOps::mergeToPrimitive(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477183323424755 0x7f81ea6856b2 3189: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::removeEntry(int) -> Object
fifo write: @1699477183331054952 0x7f81ea681981 6831: com.mojang.serialization.MapCodec$MapCodecCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477183333998480 0x7f81ea68080b 1732: ri::mapBuilder() -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183334870642 0x7f81ea6801f0 369: com.mojang.serialization.RecordBuilder$AbstractBuilder$$Lambda$5287.0x00007f81609bea18::apply(Object) -> Object
fifo write: @1699477183335460349 0x7f81ea1aca96 3167: com.mojang.serialization.codecs.FieldEncoder::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183336748926 0x7f81e940f60c 710: com.mojang.serialization.codecs.PrimitiveCodec::encode(Object, com.mojang.serialization.DynamicOps, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477183336967039 0x7f81ea1aa81e 3025: com.mojang.serialization.RecordBuilder$AbstractStringBuilder::add(String, com.mojang.serialization.DataResult) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183337061160 0x7f81ea1a9e8e 658: com.mojang.serialization.DynamicOps::mergeToPrimitive(Object, Object) -> com.mojang.serialization.DataResult
fifo write: @1699477183337219032 0x7f81e940efd8 90: com.mojang.serialization.MapEncoder$1::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183337982271 0x7f81ea67fb09 382: com.mojang.serialization.RecordBuilder$AbstractStringBuilder$$Lambda$5304.0x00007f81609c2950::<init>(com.mojang.serialization.RecordBuilder$AbstractStringBuilder, String) -> void
fifo write: @1699477183343390921 0x7f81ea1a8558 2301: com.mojang.serialization.RecordBuilder$AbstractBuilder::build(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477183348224223 0x7f81e938c636 3480: com.mojang.serialization.codecs.OptionalFieldCodec::encode(java.util.Optional, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183348779180 0x7f81e9389be4 3554: com.mojang.serialization.codecs.OptionalFieldCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183351072309 0x7f81e9387a60 3645: com.mojang.serialization.MapEncoder::compressedBuilder(com.mojang.serialization.DynamicOps) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183351517055 0x7f81ea1a7623 1530: ri$h::<init>(ri) -> void
fifo write: @1699477183364544752 0x7f81eab98a61 14280: djl::a(cpc, djn) -> void
fifo write: @1699477183365015728 0x7f81e293459f 7581: aki::a() -> void
fifo write: @1699477183365145940 0x7f81e145e4f4 965: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::remove(long) -> boolean
fifo write: @1699477183365278532 0x7f81e2e3ffb4 780: eac::a(long, int, int) -> void
fifo write: @1699477183365395643 0x7f81e2e3f734 722: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::removeEntry(int) -> boolean
fifo write: @1699477183365545635 0x7f81e30f22b4 875: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::fixPointers(int) -> void
fifo write: @1699477183374696283 0x7f81e9386615 1741: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::remove() -> void
fifo write: @1699477183375100608 0x7f81e9e0879e 1552: java.util.concurrent.CompletableFuture::uniWhenCompleteStage(java.util.concurrent.Executor, java.util.function.BiConsumer) -> java.util.concurrent.CompletableFuture
fifo write: @1699477183377566200 0x7f81e9e07a99 880: com.mojang.serialization.MapCodec$3::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183378433331 0x7f81e9e068b5 1331: com.mojang.serialization.codecs.PairMapCodec::encode(com.mojang.datafixers.util.Pair, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183378734795 0x7f81e9e05641 1351: com.mojang.serialization.codecs.PairMapCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183380765081 0x7f81e9e04704 1757: sun.nio.fs.UnixPath::resolve(java.nio.file.Path) -> sun.nio.fs.UnixPath
fifo write: @1699477183412412977 0x7f81e9e02636 3071: java.util.concurrent.CompletableFuture$UniWhenComplete::tryFire(int) -> java.util.concurrent.CompletableFuture
fifo write: @1699477183416095465 0x7f81e286f737 2235: djl$$Lambda$8110.0x00007f8160cd48d8::apply(Object) -> Object
fifo write: @1699477183416360378 0x7f81e3117b77 1809: djl::a(dje) -> java.util.stream.Stream
fifo write: @1699477183416445699 0x7f81e8c0f180 464: I2C/C2I adapters(0xbbbaa6)
fifo write: @1699477183416456999 0x7f81e8c0ee80 496: I2C/C2I adapters(0xbbbbaaa6)
fifo write: @1699477183416468049 0x7f81e8c0eb80 512: I2C/C2I adapters(0xbbbbaaa6a)
fifo write: @1699477183416547790 0x7f81ea1a700b 62: com.mojang.serialization.Decoder::flatMap(java.util.function.Function) -> com.mojang.serialization.Decoder
fifo write: @1699477183417679935 0x7f81e30f163d 1479: dii::a(qw, cpc) -> void
fifo write: @1699477183418358164 0x7f81eab97ed0 621: dij$$Lambda$7328.0x00007f8160bd53a8::apply(Object) -> Object
fifo write: @1699477183418580157 0x7f81e9e01253 1272: byu::y() -> boolean
fifo write: @1699477183428440683 0x7f81ea8b2202 19750: com.mojang.serialization.codecs.KeyDispatchCodec::encode(Object, com.mojang.serialization.DynamicOps, com.mojang.serialization.RecordBuilder) -> com.mojang.serialization.RecordBuilder
fifo write: @1699477183430221446 0x7f81e145df94 196: dhe::a() -> long[]
fifo write: @1699477183430392218 0x7f81e31171bd 915: qw::a(String, long[]) -> void
fifo write: @1699477183433665240 0x7f81e2741ffc 39: sun.nio.ch.IOUtil::write(java.io.FileDescriptor, java.nio.ByteBuffer, long, boolean, int, sun.nio.ch.NativeDispatcher) -> int
fifo write: @1699477183453501885 0x7f81e9d94bf4 14803: qx::a(java.io.DataOutput) -> void
fifo write: @1699477183481090439 0x7f81ea0a8395 15178: java.io.DataOutputStream::writeDouble(double) -> void
fifo write: @1699477183485082010 0x7f81ea8b00f2 2475: dhf::c() -> java.util.Set
fifo write: @1699477183485606937 0x7f81e9dffc15 1720: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::remove(long) -> long
fifo write: @1699477183491070888 0x7f81e9d92259 3190: dig::a(akq, qw, dhf$a) -> void
fifo write: @1699477183507960704 0x7f81ea0a74f7 842: aka::a(cpc, dhk$a) -> byte
fifo write: @1699477183518675462 0x7f81ea0a6bf0 650: dij$$Lambda$7327.0x00007f8160bd4f70::get() -> Object
fifo write: @1699477183533792816 0x7f81ead7f374 14723: qz::a(java.io.DataOutput) -> void
fifo write: @1699477183567079504 0x7f81ea448efd 16602: dig::a(dvy, cpc, java.util.Map, java.util.Map) -> qw
fifo write: @1699477183589564583 0x7f81e2ed847f 10359: eaa::a(ead) -> void
fifo write: @1699477183658316385 0x7f81ea45e5fd 16526: dig::a(dvy, cpc, java.util.Map, java.util.Map) -> qw
fifo write: @1699477183716662595 0x7f81ea8cca98 29543: ra::a(java.io.DataOutput) -> void
fifo write: @1699477183785310406 0x7f81ea45db5c 640: sun.nio.fs.UnixException::<init>(int) -> void
fifo write: @1699477184044523356 0x7f81e9d91a58 91: sun.nio.fs.UnixNativeDispatcher::lstat(sun.nio.fs.UnixPath, sun.nio.fs.UnixFileAttributes) -> void
fifo write: @1699477184102472510 0x7f81e9386216 109: Math::multiplyExact(long, long) -> long
fifo write: @1699477184238373225 0x7f81ea0a5c84 1765: sun.nio.fs.UnixPath::resolve(java.nio.file.Path) -> java.nio.file.Path
fifo write: @1699477184244577724 0x7f81ead7d7a0 2472: java.nio.file.Path::resolve(String) -> java.nio.file.Path
fifo write: @1699477184361852380 0x7f81e9dff8e0 18: sun.nio.ch.FileDispatcherImpl::pwrite(java.io.FileDescriptor, long, int, long) -> int
fifo write: @1699477184430795236 0x7f81ea8afbd0 159: java.time.Instant::toEpochMilli() -> long
fifo write: @1699477184435121571 0x7f81ea0a50dd 550: sun.nio.fs.AbstractFileSystemProvider::deleteIfExists(java.nio.file.Path) -> boolean
fifo write: @1699477184496741693 0x7f81eacfc344 21230: dim::a(cpc, qw) -> void
fifo write: @1699477184554869379 0x7f81ea45d5bf 276: java.util.zip.Deflater$DeflaterZStreamRef::run() -> void
fifo write: @1699477184599302950 0x7f81ea8c5273 10272: dil$a::close() -> void
fifo write: @1699477185176704525 0x7f81eacf977d 3786: sun.nio.ch.Util::getTemporaryDirectBuffer(int) -> java.nio.ByteBuffer
fifo write: @1699477186584404452 0x7f81e2ed5a93 4998: java.util.concurrent.ThreadPoolExecutor::runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) -> void
fifo write: @1699477189615792136 0x7f81e2e3f094 376: java.util.Calendar::get(int) -> int
fifo write: @1699477189616006639 0x7f81e195e634 928: java.util.GregorianCalendar::getWeekNumber(long, long) -> int
fifo write: @1699477189616109170 0x7f81e286ef79 276: sun.util.calendar.AbstractCalendar::getDayOfWeekDateOnOrBefore(long, int) -> long
fifo write: @1699477189664052226 0x7f81e2b72d94 175: org.apache.logging.log4j.core.pattern.SimpleLiteralPatternConverter::format(org.apache.logging.log4j.core.LogEvent, StringBuilder) -> void
fifo write: @1699477189664280919 0x7f81e195da34 964: java.util.Calendar::setFieldsComputed(int) -> void
fifo write: @1699477189664880436 0x7f81e2dee494 196: org.apache.logging.log4j.core.pattern.SimpleLiteralPatternConverter$StringValue::format(StringBuilder) -> void
fifo write: @1699477189666932943 0x7f81e2a57506 2366: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::rehash(int) -> void
fifo write: @1699477189673424726 0x7f81ead7c658 1667: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::rehash(int) -> void
fifo write: @1699477189673484687 0x7f81e30a7014 223: it.unimi.dsi.fastutil.longs.LongAVLTreeSet$SetIterator::nextLong() -> long
fifo write: @1699477189674090624 0x7f81e27db214 139: net.minecraft.server.MinecraftServer$$Lambda$8526.0x00007f8160d52d10::getAsBoolean() -> boolean
fifo write: @1699477189678494561 0x7f81ead7b729 1267: java.util.concurrent.CompletableFuture::complete(Object) -> boolean
fifo write: @1699477189689517843 0x7f81e30dad67 6225: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477189690247972 0x7f81eac191f5 4701: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::remove(long) -> boolean
fifo write: @1699477189690535666 0x7f81eac1559e 6111: eac::a(long, int, int) -> void
fifo write: @1699477189691331496 0x7f81ea8c4859 506: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::fixPointers(int) -> void
fifo write: @1699477189696375631 0x7f81eac13a93 2189: it.unimi.dsi.fastutil.longs.LongLinkedOpenHashSet::removeEntry(int) -> boolean
fifo write: @1699477189704394943 0x7f81ea0a48d9 596: java.util.stream.IntPipeline::makeNodeBuilder(long, java.util.function.IntFunction) -> java.util.stream.Node$Builder
fifo write: @1699477189735334571 0x7f81eac13201 474: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::remove(long, Object) -> boolean
fifo write: @1699477189741845254 0x7f81eac12a50 467: dia::a(dko$a) -> dhe
fifo write: @1699477189750686688 0x7f81ea4fd0d0 87: java.util.stream.Nodes$IntFixedNodeBuilder::begin(long) -> void
fifo write: @1699477189755030244 0x7f81e2b7f559 769: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::remove() -> void
fifo write: @1699477189756200799 0x7f81e2b7e9f4 964: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::remove(long) -> Object
fifo write: @1699477189756369471 0x7f81e2a56db4 563: eaa::a(long, dhl) -> void
fifo write: @1699477189758202485 0x7f81e2d441df 4420: akb::a() -> java.util.stream.Stream
fifo write: @1699477189758881243 0x7f81e2dec1f4 953: it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap::remove(long) -> long
fifo write: @1699477189760760948 0x7f81e318d503 2982: it.unimi.dsi.fastutil.longs.Long2ObjectLinkedOpenHashMap::remove(long, Object) -> boolean
fifo write: @1699477189762224156 0x7f81e2add523 4475: java.util.concurrent.ThreadPoolExecutor::runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) -> void
fifo write: @1699477189774090649 0x7f81eac107b3 3227: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::remove(long) -> Object
fifo write: @1699477189776716912 0x7f81e2deb8b4 1030: dve$$Lambda$8395.0x00007f8160d2dab0::accept(Object) -> void
fifo write: @1699477189776841244 0x7f81e2b7e297 625: dve::a(qw, rq) -> void
fifo write: @1699477189779219994 0x7f81eac0eb39 2806: eaa::a(long, dhl) -> void
fifo write: @1699477189785527585 0x7f81ea2e7b78 2727: com.mojang.serialization.RecordBuilder$AbstractBuilder::build(Object) -> com.mojang.serialization.DataResult
fifo write: @1699477189789022610 0x7f81e9d88ff5 1561: it.unimi.dsi.fastutil.longs.LongOpenHashSet$SetIterator::shiftKeys(int) -> void
fifo write: @1699477189789721989 0x7f81ea0a4277 237: com.mojang.serialization.DynamicOps$$Lambda$5183.0x00007f816099eef8::apply(Object) -> Object
fifo write: @1699477189797295926 0x7f81e9d8799c 2008: aka::a(long, ajy) -> void
fifo write: @1699477189800507958 0x7f81eac060da 12340: aka::b(java.util.function.BooleanSupplier) -> void
fifo write: @1699477189800910793 0x7f81e9d86d53 965: aka$$Lambda$8107.0x00007f8160cd4240::execute(Runnable) -> void
fifo write: @1699477189802266950 0x7f81e9d860bf 1220: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap::clone() -> it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap
fifo write: @1699477189816031557 0x7f81e2422194 268: eaa::m(long) -> void
fifo write: @1699477189816283190 0x7f81e28caa59 1120: eaa::a(long, byte) -> void
fifo write: @1699477189819850256 0x7f81e9d84b76 2312: it.unimi.dsi.fastutil.longs.Long2ByteOpenHashMap::rehash(int) -> void
fifo write: @1699477189839552279 0x7f81ea2718f5 5361: eaa::a(long, byte) -> void
fifo write: @1699477189845132550 0x7f81ea45d0ac 30: dij::a(dij$a) -> java.util.concurrent.CompletableFuture
fifo write: @1699477189845270222 0x7f81e28b4b14 331: dij$$Lambda$8540.0x00007f8160d58000::apply(Object) -> Object
fifo write: @1699477189857155675 0x7f81eae7a812 23288: aka$$Lambda$8106.0x00007f8160cd4000::accept(Object) -> void
fifo write: @1699477189890131568 0x7f81ea26b697 9488: eag::i(long) -> void
fifo write: @1699477189918239869 0x7f81eae8bc71 24257: aka::a(ajy, java.util.concurrent.CompletableFuture, long, dhf) -> void
fifo write: @1699477189983137982 0x7f81eae9d637 29308: eaa::a(ead) -> void
fifo write: @1699477192003215918 0x7f81e2c84e94 357: it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap$FastEntryIterator::next() -> Object
fifo write: @1699477192004425913 0x7f81e2190c74 1443: bfr::h() -> boolean
fifo write: @1699477192004554345 0x7f81e21c7b14 96: djl$$Lambda$8547.0x00007f8160d59ca0::test(long) -> boolean
fifo write: @1699477192004710227 0x7f81e1a2f4de 669: djl::e(long) -> boolean
fifo write: @1699477192004920360 0x7f81ea6b14c4 88: java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease(int) -> boolean
fifo write: @1699477192090227115 0x7f81e318cb94 619: org.apache.logging.log4j.core.util.datetime.FastDatePrinter::access$000(Appendable, int) -> void
fifo write: @1699477192090373857 0x7f81e2deb274 522: org.apache.logging.log4j.core.util.datetime.FastDatePrinter::appendDigits(Appendable, int) -> void
fifo write: @1699477192090578399 0x7f81e26e08d7 1110: org.apache.logging.log4j.core.util.datetime.FastDatePrinter$TwoDigitNumberField::appendTo(Appendable, java.util.Calendar) -> void
fifo write: @1699477192090728961 0x7f81e2219654 942: org.apache.logging.log4j.core.util.datetime.FastDatePrinter$TwoDigitNumberField::appendTo(Appendable, int) -> void
fifo write: @1699477192091261218 0x7f81e2866874 111: Boolean::toString(boolean) -> String
fifo write: @1699477192092036998 0x7f81ea6b114c 6: org.apache.logging.log4j.core.appender.OutputStreamManager::getByteBuffer() -> java.nio.ByteBuffer
fifo write: @1699477192094858454 0x7f81e2bffe94 543: java.nio.channels.spi.AbstractInterruptibleChannel::close() -> void
fifo write: @1699477192109866487 0x7f81e288c2b4 959: Thread::checkAccess() -> void
fifo write: @1699477192111524228 0x7f81e9d841d3 684: java.util.concurrent.ConcurrentHashMap$Traverser::advance() -> java.util.concurrent.ConcurrentHashMap$Node
fifo write: @1699477192112722643 0x7f81e1bcce90 174: Thread::interrupted() -> boolean
fifo write: @1699477192112772544 0x7f81e9d83ecc 6: java.nio.DirectByteBuffer::cleaner() -> jdk.internal.ref.Cleaner
fifo write: @1699477192218103327 0x7f81ead7afcc 2: java.util.logging.Level::intValue() -> int
fifo write: @1699477192218375960 0x7f81e195d674 2: javax.management.ObjectName::getDomainLength() -> int
fifo write: @1699477192218411881 0x7f81ea26b24c 2: javax.management.ObjectName$Property::setKeyIndex(int) -> void
fifo write: @1699477192218901017 0x7f81e190af74 1850: org.apache.logging.log4j.core.config.LoggerConfig::requiresLocation() -> boolean
fifo write: @1699477192219217311 0x7f81e20d963f 2481: org.apache.logging.log4j.core.config.AbstractConfiguration::getLoggerConfig(String) -> org.apache.logging.log4j.core.config.LoggerConfig
fifo write: @1699477192219510185 0x7f81e2502079 1873: org.apache.logging.log4j.core.Logger$PrivateConfig::<init>(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.Logger) -> void
fifo write: @1699477192219595966 0x7f81e29ec434 827: org.apache.logging.log4j.core.config.LoggerConfig::getLevel() -> org.apache.logging.log4j.Level
